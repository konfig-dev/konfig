openapi: 3.1.0
info:
  version: 1.0.0
  title: Ashby API
  description: The public API for accessing resources in your Ashby instance.
  contact:
    name: Ashby Support
    url: https://app.ashbyhq.com/support
    email: support@ashbyhq.com
servers:
  - url: https://api.ashbyhq.com
tags:
  - name: ashby
    description: The Ashby API
paths:
  /apiKey.info:
    post:
      summary: apiKey.info
      description: >
        Retrieve information about the API key being used to make the request.


        **Requires the [`apiKeysRead`](authentication#permissions-apikeyinfo)
        permission.**
      operationId: apiKeyInfo
      tags:
        - API Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Responses for the apiKey.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              title:
                                type: string
                                description: The name of the API key.
                                example: Custom Job Board API key
                              createdAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
      security:
        - BasicAuth: []
  /application.change_source:
    post:
      summary: application.changeSource
      operationId: applicationChangeSource
      description: >
        Change the source of an application.


        **Requires the
        [`candidatesWrite`](authentication#permissions-applicationchangesource)
        permission.**
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              properties:
                applicationId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the application to update the source of
                sourceId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >-
                        The source to set on the application. Pass null to unset
                        an application's source.
              required:
                - applicationId
                - sourceId
              example:
                applicationId: 3ae2b801-19f6-41ef-ad28-214bd731948f
                sourceId: 2c6991c5-c9e2-4af8-879e-29c5a9d26509
      responses:
        '200':
          description: Responses from the application.changeSource endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /application.change_stage:
    post:
      summary: application.changeStage
      operationId: applicationChangeStage
      description: >
        Change the stage of an application


        **Requires the
        [`candidatesWrite`](authentication#permissions-applicationchangestage)
        permission.**
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              properties:
                applicationId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the application to update the stage of
                interviewStageId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The interview stage to move the application to.
                archiveReasonId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >
                        Archive Reason to set when moving to an Interview Stage
                        with type: `Archived`. 

                        Note: You must pass this parameter when moving to an
                        Interview Stage with type: `Archived`
              required:
                - applicationId
                - interviewStageId
              example:
                applicationId: 3ae2b801-19f6-41ef-ad28-214bd731948f
                interviewStageId: 2c6991c5-c9e2-4af8-879e-29c5a9d26509
      responses:
        '200':
          description: Responses from the application.changeStage endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /application.create:
    post:
      summary: application.create
      operationId: applicationCreate
      description: >
        Consider a candidate for a job


        **Requires the
        [`candidatesWrite`](authentication#permissions-applicationcreate)
        permission.**
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the candidate to consider for a job
                jobId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the job to consider the candidate for
                interviewPlanId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >
                        The id of the interview plan to place the application
                        in. If none is provided, the default interview plan is
                        used.
                interviewStageId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >
                        The interview stage of the interview plan (either
                        default or provided) to place the application in. 

                        If none is provided, the application is placed in the
                        first "Lead" stage. 

                        You can also supply the special string
                        "FirstPreInterviewScreen", which will choose the first
                        pre-interview-screen stage on the specified job's
                        interview plan.
                sourceId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The source to set on the application being created.
                creditedToUserId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the user the application will be credited to.
              required:
                - candidateId
                - jobId
              example:
                candidateId: 3ae2b801-19f6-41ef-ad28-214bd731948f
                jobId: 2c6991c5-c9e2-4af8-879e-29c5a9d26509
      responses:
        '200':
          description: Responses from the application.change_stage endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /application.info:
    post:
      summary: application.info
      operationId: applicationInfo
      description: >
        Fetch application details by application id or by submitted form
        instance id (which is return by the `applicationForm.submit` endpoint).
        If both applicationId and submittedFormInstanceId are provided, we will
        lookup by applicationId.


        **Requires the
        [`candidatesRead`](authentication#permissions-applicationinfo)
        permission.**
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    applicationId:
                      allOf:
                        - description: The id of the application to fetch.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    expand:
                      type: array
                      description: >
                        Choose to expand the result and include additional data
                        for related objects. 
                      items:
                        type: string
                        enum:
                          - openings
                          - applicationFormSubmissions
                  required:
                    - applicationId
                - type: object
                  properties:
                    submittedFormInstanceId:
                      allOf:
                        - description: >-
                            The id of the application's submitted form instance
                            to fetch.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    expand:
                      type: array
                      description: >
                        Choose to expand the result and include additional data
                        for related objects. 
                      items:
                        type: string
                        enum:
                          - openings
                          - applicationFormSubmissions
                  required:
                    - submittedFormInstanceId
      responses:
        '200':
          description: Responses from the application.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            allOf:
                              - $ref: >-
                                  #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                              - type: object
                                properties:
                                  openings:
                                    description: >-
                                      The openings array will only be included
                                      if the `openings` expand parameter is
                                      included when the request is made.
                                    type: array
                                    items:
                                      $ref: >-
                                        #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                              - type: object
                                properties:
                                  archivedAt:
                                    allOf:
                                      - $ref: >-
                                          #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                      - description: >-
                                          The timestamp an application was
                                          archived
                                  applicationHistory:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          $ref: >-
                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                        stageId:
                                          $ref: >-
                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                        title:
                                          type: string
                                          title: Offer
                                        enteredStageAt:
                                          $ref: >-
                                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                        leftStageAt:
                                          $ref: >-
                                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                      required:
                                        - id
                                        - stageId
                                        - title
                                        - enteredStageAt
                                  applicationFormSubmissions:
                                    type: array
                                    description: >-
                                      Application form submissions. These match
                                      the response from the
                                      `applicationForm.submit` endpoint. Use of
                                      the expand parameter is required to fetch.
                                    items:
                                      $ref: >-
                                        #/paths/~1applicationForm.submit/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/submittedFormInstance
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /application.list:
    post:
      summary: application.list
      operationId: applicationList
      description: >
        Gets all applications schedules in the organization.


        **Requires the
        [`candidatesRead`](authentication#permissions-applicationlist)
        permission.**
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    createdAfter:
                      type: integer
                      format: int64
                      description: >-
                        The API will return data after this date, which is the
                        time since the unix epoch in milliseconds
                    cursor:
                      $ref: >-
                        #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/cursor
                    syncToken:
                      $ref: >-
                        #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/syncToken
                    limit:
                      $ref: >-
                        #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/limit
                  example:
                    createdAfter: 1659979196538
                    cursor: qA
                    syncToken: 6W05prn4d
                    limit: 25
                - properties:
                    expand:
                      type: array
                      description: >
                        Choose to expand the result and include additional data
                        for related objects. 
                      items:
                        type: string
                        enum:
                          - openings
                    status:
                      type: string
                      enum:
                        - Hired
                        - Archived
                        - Active
                        - Lead
                    jobId:
                      $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
      responses:
        '200':
          description: Responses from the application.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              allOf:
                                - $ref: >-
                                    #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                                - $ref: >-
                                    #/paths/~1application.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/allOf/1
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /applicationFeedback.list:
    post:
      summary: applicationFeedback.list
      operationId: applicationFeedbackList
      description: >
        List all feedback associated with an application.


        **Requires the
        [`candidatesRead`](authentication#permissions-applicationfeedbacklist)
        permission.**


        The `submittedValues` field in the response contains the submitted
        feedback in an object where the key is the path of the field and the
        value is the value submitted for that field.
      tags:
        - Application Feedback
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1application.list/post/requestBody/content/application~1json/schema/allOf/0
                - type: object
                  properties:
                    applicationId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the application you'd like to fetch
                            feedback for
      responses:
        '200':
          description: Responses from the applicationFeedback.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              allOf:
                                - type: object
                                  allOf:
                                    - $ref: >-
                                        #/paths/~1applicationForm.submit/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/submittedFormInstance
                                    - type: object
                                      properties:
                                        submittedByUser:
                                          $ref: >-
                                            #/paths/~1user.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                                        interviewId:
                                          $ref: >-
                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                        applicationHistoryId:
                                          $ref: >-
                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                        submittedAt:
                                          $ref: >-
                                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                  required:
                                    - submittedByUser
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /applicationFeedback.submit:
    post:
      summary: applicationFeedback.submit
      description: >
        Application feedback forms support a variety of field types. 


        **Requires the
        [`candidatesWrite`](authentication#permissions-applicationfeedbacksubmit)
        permission.**


        The values accepted for each field depend on the type of field that's
        being filled
        out:                                                                                                                                                                                                                
        |

        - `Boolean` - A boolean value

        - `Date` - A date string in the format YYYY-MM-DD

        - `Email` - A valid email address

        - `Number` - An integer

        - `RichText` - We do not support submitting rich text documents via the
        API but we do support submitting plain text values for these fields.
        Plain text values must be submitted in the format `{ type: "PlainText",
        value: "A plain text string" }`

        - `Score` - An integer between 1 and 4 submitted in the format `{ score:
        4 }`

        - `Phone`, `String` A string

        - `ValueSelect` - A string that matches the value of one of the
        ValueSelect field's selectable options

        - `MultiValueSelect` - An array of strings that exist in the
        MultiValueSelect field's selectable options


        The `submittedValues` field in the response contains the submitted
        feedback in an object where the key is the path of the field and the
        value is the value submitted for that field.
      operationId: applicationfeedbacksubmit
      tags:
        - Application Feedback
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - feedbackForm
                    - formDefinitionId
                    - applicationId
                  properties:
                    feedbackForm:
                      $ref: >-
                        #/paths/~1offer.create/post/requestBody/content/application~1json/schema/properties/offerForm
                    formDefinitionId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the feedback form definition associated
                            with the form submission
                    applicationId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the application you're submitting feedback
                            for
                    userId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >
                            The id of the user the feedback will be credited to.

                            If a userId is not provided, the feedback will be
                            credited to the API key user.
                - type: object
                  required:
                    - feedbackForm
                    - formDefinitionId
                    - applicationId
                    - userId
                    - interviewEventId
                  properties:
                    feedbackForm:
                      $ref: >-
                        #/paths/~1offer.create/post/requestBody/content/application~1json/schema/properties/offerForm
                    formDefinitionId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the feedback form definition associated
                            with the form submission
                    applicationId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the application you're submitting feedback
                            for
                    userId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >
                            The id of the user the feedback will be credited
                            to. 

                            The user must be an interviewer on the interview
                            event that feedback is being submitted for.
                    interviewEventId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >
                            The id of the interview event you're submitting
                            feedback for.
      responses:
        '200':
          description: Responses from the applicationFeedback.submit endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              submittedFormInstance:
                                $ref: >-
                                  #/paths/~1applicationForm.submit/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/submittedFormInstance
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /applicationForm.submit:
    post:
      summary: applicationForm.submit
      description: >
        Submit an application for a job posting.


        **Requires the
        [`candidatesWrite`](authentication#permissions-applicationformsubmit)
        permission.**


        The Content-Type of this request must be `multipart/form-data`.


        **Note: The requests generated from this documentation will not work for
        this endpoint.**
      operationId: applicationformsubmit
      tags:
        - Application Form
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - jobPostingId
                - applicationForm
              properties:
                jobPostingId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the job posting to submit an application for
                applicationForm:
                  $ref: >-
                    #/paths/~1offer.create/post/requestBody/content/application~1json/schema/properties/offerForm
                utmData:
                  type: object
                  properties:
                    utm_source:
                      type: string
                    utm_campaign:
                      type: string
                    utm_medium:
                      type: string
                    utm_term:
                      type: string
                    utm_content:
                      type: string
                <file  key>:
                  type: string
                  description: >-
                    Any file referenced  in the `applicationForm`.   The name of
                    this field must exactly match the `value` on the
                    `fieldSubmission` that references this file.
                  format: binary
      responses:
        '200':
          description: Responses from the applicationFeedback.submit endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              submittedFormInstance:
                                type: object
                                properties:
                                  id:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  formDefinition:
                                    $ref: >-
                                      #/paths/~1offer.start/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/properties/formDefinition
                                  submittedValues:
                                    type: object
                                    example:
                                      _systemfield_name: Joe Smith
                                required:
                                  - id
                                  - formDefinition
                                  - submittedValues
                              formMessages:
                                type: object
                                properties:
                                  blockMessageForCandidateHtml:
                                    type: string
                                    description: >-
                                      A message to display to the candidate if
                                      they been blocked from applying due to
                                      application limits
                                    example: >
                                      <div><p>In order to give as many
                                      candidates as possible an opportunity to
                                      apply we have limiting the number of
                                      applications a single candidate may
                                      submit. Unfortunately we cannot, accept
                                      your application at this time.</p></div>
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /approvalDefinition.update:
    post:
      summary: approvalDefinition.update
      operationId: approvalDefinitionUpdate
      description: >
        Create or update an approval definition for a specific entity that
        requires approval. The entity requiring approval must be within scope of
        an approval in Ashby that is marked as being managed by the API.


        **Requires the
        [`approvalsWrite`](authentication#permissions-approvaldefinitionupdate)
        permission.**
      tags:
        - Approval Definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityType:
                  type: string
                  enum:
                    - offer
                entityId:
                  allOf:
                    - description: >-
                        The id of the approval entity being updated (e.g. the id
                        of the offer version).
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                approvalStepDefinitions:
                  type: array
                  description: >-
                    An ordered list of approval steps that describes the number
                    of required approvers at each step, as well as who is an
                    approver at each step.
                  items:
                    type: object
                    properties:
                      approvalsRequired:
                        type: integer
                        description: >-
                          The number of approvers required to approve this step,
                          before the approval moves on to the next step. The
                          number of approvers must be non-zero and no more than
                          the number of approvers in this step.
                      approvers:
                        type: array
                        description: An unordered list of who can approve this step.
                        items:
                          type: object
                          properties:
                            userId:
                              allOf:
                                - $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                - description: >-
                                    The id of a user who is an approver for this
                                    step.
                            type:
                              type: string
                              enum:
                                - user
                          required:
                            - userId
                            - type
                    required:
                      - approvalsRequired
                      - approvers
              required:
                - entityType
                - entityId
                - approvalStepDefinitions
      responses:
        '200':
          description: Responses from the approvalDefinition.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                allOf:
                                  - description: The id of the approval definition.
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              entityType:
                                type: string
                                enum:
                                  - Offer
                              entityId:
                                allOf:
                                  - description: >-
                                      The id of the approval entity (e.g. the id
                                      of the offer version).
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              approvalStepDefinitions:
                                $ref: >-
                                  #/paths/~1approvalDefinition.update/post/requestBody/content/application~1json/schema/properties/approvalStepDefinitions
                            required:
                              - entityType
                              - entityId
                              - approvalStepDefinitions
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /archiveReason.list:
    post:
      summary: archiveReason.list
      description: >
        Lists archive reasons


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-archivereasonlist)
        permission.**
      operationId: archivereasonlist
      tags:
        - Archive Reason
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                includeArchived:
                  type: boolean
                  description: When true, includes archived interview plans
                  default: false
      responses:
        '200':
          description: Responses for the archiveReason.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                text:
                                  type: string
                                  example: Too inexperienced
                                reasonType:
                                  enum:
                                    - RejectedByCandidate
                                    - RejectedByOrg
                                    - Other
                                  example: RejectedByOrg
                                isArchived:
                                  $ref: >-
                                    #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                              required:
                                - id
                                - text
                                - reasonType
                                - isArchived
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /assessment.addCompletedToCandidate:
    post:
      summary: assessment.addCompletedToCandidate
      operationId: assessmentAddCompletedToCandidate
      description: >
        Add a completed assessment to a candidate


        **Requires the
        [`candidatesWrite`](authentication#permissions-assessmentaddcompletedtocandidate)
        permission.**
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >-
                        The id of the candidate, to whom to add the completed
                        assessment
                partnerId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the partner adding the assessment
                assessment:
                  type: object
                  description: The completed assessment
                  required:
                    - assessmentTypeId
                    - assessmentId
                    - assessmentName
                    - result
                    - metadata
                  properties:
                    assessmentTypeId:
                      allOf:
                        - description: >-
                            An identifier that uniquely identifies the
                            assessment type
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    assessmentId:
                      allOf:
                        - description: >-
                            An identifier that uniquely identifies the completed
                            assessment
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    assessmentName:
                      type: string
                      example: Node Assessment
                      description: >-
                        The name of the assessment that was taken that will be
                        displayed in the UI
                    result:
                      allOf:
                        - description: The assessment's result
                        - $ref: >-
                            #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/metadata/items
                    metadata:
                      type: array
                      description: >-
                        An array of metadata associated with this completed
                        assessment
                      items:
                        $ref: >-
                          #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/metadata/items
                timestamp:
                  allOf:
                    - description: >-
                        The timestamp in milliseconds since the unix epoch, when
                        the assessment was completed
                    - $ref: >-
                        #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/timestamp
              required:
                - candidateId
                - partnerId
                - assessment
                - timestamp
      responses:
        '200':
          description: Responses for the assessment.addCompletedToCandidate endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: object
                            required:
                              - assessmentTypeId
                              - assessmentId
                              - assessmentName
                              - candidateId
                              - metadata
                            properties:
                              applicationId:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              assessmentId:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              assessmentName:
                                type: string
                                example: test-assessment-name
                              assessmentTypeId:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              candidateId:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              metadata:
                                type: array
                                items:
                                  $ref: >-
                                    #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/metadata/items
                              result:
                                $ref: >-
                                  #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/metadata/items
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /assessment.start:
    post:
      summary: assessment.start (Implemented by Partner)
      operationId: assessmentStart
      description: >
        The API for starting an assessment—implemented by the partner, but
        called by Ashby
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - assessment_type_id
                - candidate
                - application
                - job
              properties:
                assessment_type_id:
                  allOf:
                    - description: >-
                        The id of the type of assessment to start (retrieved
                        from calling /assessment.list)
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                candidate:
                  allOf:
                    - description: Identifier of the assessment being started
                    - type: object
                      description: A description of the candidate
                      required:
                        - ashby_id
                        - first_name
                        - last_name
                        - email
                        - ashby_profile_url
                      properties:
                        ashby_id:
                          allOf:
                            - type: string
                            - description: The identifier of the candidate in Ashby
                        first_name:
                          allOf:
                            - type: string
                            - description: The first name of the candidate being assessed
                        last_name:
                          allOf:
                            - type: string
                            - description: The last name of the candidate being assessed
                        email:
                          allOf:
                            - type: string
                            - description: The email of the candidate being assessed
                        ashby_profile_url:
                          allOf:
                            - type: string
                            - description: >-
                                The url back into Ashby of the candidate being
                                assessed
                application:
                  allOf:
                    - description: >-
                        The application for which the candidate is being
                        assessed
                    - type: object
                      description: >-
                        The application for which the candidate is being
                        assessed
                      required:
                        - ashby_id
                        - status
                      properties:
                        ashby_id:
                          allOf:
                            - type: string
                            - description: The id of the application in Ashby
                        status:
                          allOf:
                            - $ref: >-
                                #/paths/~1application.list/post/requestBody/content/application~1json/schema/allOf/1/properties/status
                            - description: The status of the application in Ashby
                job:
                  allOf:
                    - description: The job for which the candidate is being assessed
                    - type: object
                      description: The job for which the candidate is being assessed
                      required:
                        - ashby_id
                        - name
                        - ashby_job_url
                      properties:
                        ashby_id:
                          allOf:
                            - type: string
                            - description: The id of the job in Ashby
                        name:
                          allOf:
                            - type: string
                            - description: The name of the job in Ashby
                        req_id:
                          allOf:
                            - type: string
                            - description: The customer-defined requisition id for the job
                        ashby_job_url:
                          allOf:
                            - type: string
                            - description: The url of the job, internal to Ashby
                        hiringTeam:
                          type: array
                          items:
                            $ref: >-
                              #/paths/~1hiringTeam.addMember/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
      responses:
        '200':
          description: Responses for the assessment.start endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    type: object
                  - type: object
                    required:
                      - success
                      - results
                    properties:
                      success:
                        type: boolean
                      results:
                        required:
                          - assessment_id
                          - _comment
                          - update_request
                          - metadata
                        properties:
                          assessment_id:
                            type: string
                          _comment:
                            type: string
                          update_request:
                            required:
                              - timestamp
                              - assessment_id
                              - assessment_profile_url
                              - assessment_status
                            properties:
                              timestamp:
                                type: number
                              assessment_id:
                                type: string
                              assessment_profile_url:
                                required:
                                  - identifier
                                  - type
                                  - label
                                  - value
                                properties:
                                  identifier:
                                    type: string
                                  type:
                                    type: string
                                  label:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              assessment_status:
                                required:
                                  - identifier
                                  - type
                                  - label
                                  - value
                                properties:
                                  identifier:
                                    type: string
                                  type:
                                    type: string
                                  label:
                                    type: string
                                  value:
                                    type: string
                                type: object
                            type: object
                          metadata:
                            type: array
                            items:
                              type: object
                              properties:
                                identifier:
                                  type: string
                                type:
                                  type: string
                                label:
                                  type: string
                                value:
                                  type: string
        '409':
          description: Responses for the assessment.start endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Error Response
                    type: object
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /assessment.list:
    post:
      summary: assessment.list (Implemented by Partner)
      operationId: assessmentList
      description: >
        The API for listing assessments that the partner supports — implemented
        by the partner, but called by Ashby
      tags:
        - Assessment
      responses:
        '200':
          description: Responses for the assessment.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              allOf:
                                - type: object
                                  description: List of available assessments
                                  properties:
                                    assessment_type_id:
                                      allOf:
                                        - $ref: >-
                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                    name:
                                      type: string
                                    description:
                                      type: string
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /assessment.update:
    post:
      summary: assessment.update
      operationId: assessmentUpdate
      description: >
        Update Ashby about the status of a started assessment


        **Requires the
        [`candidatesWrite`](authentication#permissions-assessmentupdate)
        permission.**
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - assessment_id
                - assessment_status
                - timestamp
              properties:
                assessment_id:
                  allOf:
                    - description: Identifier of the assessment being updated
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                assessment_status:
                  allOf:
                    - description: >-
                        The current status of the assessment. Setting this with
                        a value of "Started" will signal Ashby to store the
                        timestamp the assessment started.
                    - $ref: >-
                        #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/metadata/items
                assessment_profile_url:
                  allOf:
                    - description: >-
                        The url back to the assessment/candidate on the
                        partner's website. This value should always be of type
                        url. (required when assessment_result is set)
                    - $ref: >-
                        #/paths/~1assessment.update/post/requestBody/content/application~1json/schema/properties/metadata/items
                metadata:
                  type: array
                  description: >-
                    Any other metadata about the assessment (e.g. ETA until
                    complete). All assessment data should have unique
                    identifiers.
                  items:
                    type: object
                    properties:
                      identifier:
                        type: string
                        description: Uniquely identifies this field, for this partner
                        example: result-max
                      label:
                        type: string
                        description: >-
                          Label for the assessment metadata to be displayed in
                          the UI
                        example: Max Score
                      description:
                        type: string
                        description: >-
                          Description of the assessment metadata, which may be
                          displayed in the UI
                        example: The maximum possible score for the assessment
                      type:
                        type: string
                        description: >-
                          The type of the value. Please reach out if you'd like
                          us to support a new type!
                        enum:
                          - numeric_score
                          - numeric_duration_minutes
                          - url
                          - string
                          - boolean_success
                      value:
                        allOf:
                          - oneOf:
                              - type: string
                              - type: number
                              - type: boolean
                            description: |
                              The raw value — one of string, number, or boolean
                          - example: 10
                    required:
                      - identifier
                      - label
                      - type
                      - value
                timestamp:
                  type: integer
                  description: >-
                    The timestamp in milliseconds since the unix epoch, when the
                    update occurred
                  format: int64
                  example: 1665680638489
      responses:
        '200':
          description: Responses for the assessment.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    type: object
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /assessment.cancel:
    post:
      summary: assessment.cancel (Implemented by Partner)
      operationId: assessmentCancel
      description: >
        (Optional) Cancels an assessment— implemented by the partner, but called
        by Ashby
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - assessment_id
              properties:
                assessment_id:
                  allOf:
                    - description: The id of the started assessment to cancel
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
      responses:
        '200':
          description: Responses for the assessment.cancel endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              properties:
                                assessment_id:
                                  allOf:
                                    - description: >-
                                        The id of the started assessment to
                                        cancel
                                    - $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.addTag:
    post:
      summary: candidate.addTag
      description: >
        Adds a tag to a candidate


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidateaddtag)
        permission.**
      operationId: candidateAddTag
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - candidateId
                - tagId
              properties:
                candidateId:
                  type: string
                  description: The unique id of the candidate to add the tag to.
                  example: 5b591aed-88e3-4395-b9c6-7d529f93354a
                tagId:
                  type: string
                  description: The unique id of the tag to add to the candidate.
                  example: 38430ede-5bd2-41fc-b474-87591cb98cbc
      responses:
        '200':
          description: Responses for the candidate.addTag endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /canidate.anonymize:
    post:
      summary: candidate.anonymize
      description: >
        Anonymizes a candidate.


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidateanonymize)
        permission.**


        **Note**: this action cannot be reversed and requires all of a
        candidate's applications to be in the archived or hired state.
      operationId: candidateAnonymize
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - candidateId
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the candidate to anonymize.
      responses:
        '200':
          description: Responses for the candidate.anonymize endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - description: The anonymized candidate
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.create:
    post:
      summary: candidate.create
      operationId: candidateCreate
      description: >
        Creates a new candidate


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidatecreate)
        permission.**
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Adam Hart
                  description: The first and last name of the candidate to be created.
                email:
                  allOf:
                    - type: string
                      example: test@ashbyhq.com
                    - description: Primary, personal email of the candidate to be created.
                phoneNumber:
                  allOf:
                    - type: string
                      example: 555-555-5555
                    - description: >-
                        Primary, personal phone number of the candidate to be
                        created.
                linkedInUrl:
                  type: string
                  example: https://linkedin.com/in/user
                  description: >-
                    Url to the candidate's LinkedIn profile. Must be a valid
                    Url.
                githubUrl:
                  type: string
                  example: https://github.com/user
                  description: Url to the candidate's Github profile. Must be a valid Url.
                website:
                  type: string
                  example: https://twitter.com/user
                  description: Url of the candidate's website. Must be a valid Url.
                alternateEmailAddresses:
                  type: array
                  items:
                    type: string
                  example:
                    - test.email@ashbyhq.com
                  description: >-
                    Array of alternate email address to add to the candidate's
                    profile.
                sourceId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The source to set on the candidate being created.
                creditedToUserId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the user the candidate will be credited to.
              required:
                - name
      responses:
        '200':
          description: Responses for the candidate.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.createNote:
    post:
      summary: candidate.createNote
      description: >
        Creates a note on a candidate.


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidatecreatenote)
        permission.**


        For notes submitted with a type of `text/html`, we support the elements
        listed below. Any unsupported elements will be stripped out of the
        note's content before posting.
          - Bold `<b>`
          - Italic `<i>`
          - Underline `<u>`
          - Links `<a>`
          - Bulleted Lists - `<ul>`, `<li>`
          - Ordered Lists - `<ol>`, `<li>`
          - Code - `<code>`
          - Code Block - `<pre>`
      operationId: candidateCreateNote
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                candidateId:
                  type: string
                  format: uuid
                  example: e9ed20fd-d45f-4aad-8a00-a19bfba0083e
                note:
                  oneOf:
                    - type: string
                      description: The note to add to the candidate
                      example: Strong candidate, very interested in the company
                    - type: object
                      description: Note content
                      properties:
                        type:
                          type: string
                          enum:
                            - text/plain
                            - text/html
                          description: >
                            The content type of the note. For notes submitted
                            with a type of text/html we support the elements
                            listed below. Any unsupported elements will be
                            stripped out of the note's content before posting.

                            - Bold `<b>`

                            - Italic `<i>`

                            - Underline `<u>`

                            - Links `<a>`

                            - Bulleted Lists - `<ul>`, `<li>`

                            - Ordered Lists - `<ol>`, `<li>`

                            - Code - `<code>`

                            - Code Block - `<pre>`
                        value:
                          type: string
                      required:
                        - type
                        - value
                sendNotifications:
                  type: boolean
                  description: >-
                    Whether or not users who are subscribed to the candidate
                    should be notified that the note was posted.
                  default: false
              required:
                - candidateId
                - note
      responses:
        '200':
          description: Responses for the candidate.createNote endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              createdAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                              content:
                                type: string
                                example: >-
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit, sed do eiusmod tempor
                                  incididunt ut labore et dolore magna aliqua.
                              author:
                                type: object
                                properties:
                                  id:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  firstName:
                                    type: string
                                    example: Joey
                                  lastName:
                                    type: string
                                    example: Joe
                                  email:
                                    $ref: >-
                                      #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/email/allOf/0
                                required:
                                  - id
                                  - firstName
                                  - lastName
                            required:
                              - id
                              - createdAt
                              - author
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.info:
    post:
      summary: candidate.info
      operationId: candidateInfo
      description: >
        Gets a single candidate by id.


        **Requires the
        [`candidatesRead`](authentication#permissions-candidateinfo)
        permission.**
      tags:
        - Candidate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The id of the candidate to fetch
                  required:
                    - id
                  example:
                    id: f9e52a51-a075-4116-a7b8-484deba69004
                - type: object
                  properties:
                    externalMappingId:
                      type: string
                      description: >
                        An id assigned to a candidate outside of Ashby. 

                        Used to associate Ashby candidates with their profiles
                        in external systems (BambooHR, Rippling, Gusto, etc.)
                  required:
                    - externalMappingId
                  example:
                    externalMappingId: f9e52a51-a075-4116-a7b8-484deba69004
      responses:
        '200':
          description: Responses from the candidate.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                description: The unique id of the candidate
                              createdAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                              name:
                                type: string
                                example: Adam Hart
                                description: The candidate's name
                              primaryEmailAddress:
                                $ref: >-
                                  #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application/properties/candidate/properties/primaryEmailAddress
                              emailAddresses:
                                type: array
                                items:
                                  $ref: >-
                                    #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application/properties/candidate/properties/primaryEmailAddress
                              primaryPhoneNumber:
                                $ref: >-
                                  #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application/properties/candidate/properties/primaryEmailAddress
                              phoneNumbers:
                                type: array
                                items:
                                  $ref: >-
                                    #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application/properties/candidate/properties/primaryEmailAddress
                              socialLinks:
                                type: array
                                items:
                                  $ref: >-
                                    #/paths/~1candidate.update/post/requestBody/content/application~1json/schema/properties/socialLinks/items
                              tags:
                                type: array
                                items:
                                  $ref: >-
                                    #/paths/~1candidateTag.create/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                              position:
                                type: string
                                example: Software Engineer
                              company:
                                type: string
                                example: Auction.com
                              school:
                                type: string
                                example: Princeton University
                              applicationIds:
                                type: array
                                description: >-
                                  The unique ids of all applications associated
                                  with the candidate
                                items:
                                  $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              resumeFileHandle:
                                description: >-
                                  The id, name and handle for the candidate's
                                  resume
                                $ref: >-
                                  #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/fileHandles/items
                              fileHandles:
                                description: >-
                                  The id, name and handle for each file
                                  associated with the candidate
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                    handle:
                                      type: string
                                      description: >-
                                        You can use the file handle to retrieve
                                        the file's URL by using the file.info
                                        endpoint.
                                  required:
                                    - id
                                    - name
                                    - handle
                                  example:
                                    id: 15d2624d-0a81-4f94-a2ed-94980f430b3f
                                    name: resume.pdf
                                    handle: >-
                                      eyJoYW5kbGUiOnsidHlwZSI6IkNhbmRpZGF0ZUZpbGUiLCJm
                              customFields:
                                type: array
                                description: >-
                                  All custom field values associated with the
                                  candidate
                                items:
                                  $ref: >-
                                    #/paths/~1customField.setValue/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                              profileUrl:
                                type: string
                                description: The url of the candidate's profile in Ashby
                              source:
                                description: The source that created this candidate
                                $ref: >-
                                  #/paths/~1source.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items
                              creditedToUser:
                                description: The user who receives credit for this user
                                $ref: >-
                                  #/paths/~1user.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                              timezone:
                                description: The timezone of the candidate
                                type: string
                            required:
                              - id
                              - name
                              - emailAddresses
                              - phoneNumbers
                              - socialLinks
                              - tags
                              - applicationIds
                              - fileHandles
                              - profileUrl
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.list:
    post:
      summary: candidate.list
      operationId: candidateList
      description: >
        Lists all candidates in an organization


        **Requires the
        [`candidatesRead`](authentication#permissions-candidatelist)
        permission.**
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cursor:
                  type: string
                  description: Opaque cursor indicating which page of results to fetch
                  example: G8
                syncToken:
                  type: string
                  description: >
                    An opaque token representing the last time the data was
                    successfully synced from the API. A new, updated one is
                    returned after successfully fetching the last page of data.
                  example: jYnEBmjzR
                limit:
                  type: number
                  description: >-
                    The maximum number of items to return. The maximum and
                    default value is 100.
                  example: 25
              example:
                syncToken: 6W05prn4d
                cursor: qA
                limit: 25
      responses:
        '200':
          description: Responses for the candidate.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.listNotes:
    post:
      summary: candidate.listNotes
      operationId: candidateListNotes
      description: >
        Lists all notes on a candidate


        **Requires the
        [`candidatesRead`](authentication#permissions-candidatelistnotes)
        permission.**
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    candidateId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: The id of the candidate to fetch notes for
                - $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
              required:
                - candidateId
              example:
                candidateId: f9e52a51-a075-4116-a7b8-484deba69004
      responses:
        '200':
          description: Responses for the candidate.listNotes endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1candidate.createNote/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.search:
    post:
      summary: candidate.search
      operationId: candidateSearch
      description: >
        Search for candidates by email and / or name. 


        **Requires the
        [`candidatesRead`](authentication#permissions-candidatesearch)
        permission.**


        Responses are limited to 100 results. Consider refining your search or
        using /candidate.list to paginate through all candidates, if you
        approach this limit. This API is for use cases where you intend operate
        on a final small set of candidates, like building a candidate
        autocomplete.


        Note: When multiple search parameters are provided, the parameters are
        combined with the `AND` operator.
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The candidate's email
                name:
                  type: string
                  description: The candidate's name
              example:
                email: test@ashbyhq.com
                name: Adam Hart
      responses:
        '200':
          description: Responses for the candidate.search endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.update:
    post:
      summary: candidate.update
      operationId: candidateUpdate
      description: >
        Updates an existing candidate


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidateupdate)
        permission.**
      tags:
        - Candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The unique id of the candidate to update.
                name:
                  type: string
                  example: Adam Hart
                  description: The first and last name of the candidate to update.
                email:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/email/allOf/0
                    - description: Primary, personal email of the candidate to update.
                phoneNumber:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/phoneNumber/allOf/0
                    - description: >-
                        Primary, personal phone number of the candidate to
                        update.
                linkedInUrl:
                  $ref: >-
                    #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/linkedInUrl
                githubUrl:
                  $ref: >-
                    #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/githubUrl
                websiteUrl:
                  $ref: >-
                    #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/website
                alternateEmail:
                  type: string
                  example: test.email@ashbyhq.com
                  description: >-
                    An alternate email address to add to the candidate's
                    profile.
                socialLinks:
                  description: >
                    An array of social links to set on the candidate. This value
                    replaces existing socialLinks that have been set on the
                    candidate. 

                    If this value is submitted along with linkedInUrl, gitHubUrl
                    or websiteUrl fields, those values will be ignored.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        enum:
                          - LinkedIn
                          - GitHub
                          - Twitter
                          - Medium
                          - StackOverflow
                          - Website
                      url:
                        type: string
                    required:
                      - type
                      - url
                    example:
                      url: https://linkedin.com/in/user
                      type: LinkedIn
                sourceId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of source for this candidate.
                creditedToUserId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the user the candidate will be credited to.
              required:
                - candidateId
      responses:
        '200':
          description: Responses for the candidate.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.uploadFile:
    post:
      summary: candidate.uploadFile
      operationId: candidateUploadFile
      description: >
        Uploads a file to attach to the candidate's profile. 


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidateuploadfile)
        permission.**


        The `Content-Type` of this request must be `multipart/form-data`.
      tags:
        - Candidate
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the candidate
                file:
                  type: string
                  format: binary
                  description: The file to upload to the candidate's profile
              required:
                - candidateId
                - file
              example:
                id: f9e52a51-a075-4116-a7b8-484deba69004
      responses:
        '200':
          description: Responses from the candidate.uploadFile endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidate.uploadResume:
    post:
      summary: candidate.uploadResume
      operationId: candidateUploadResume
      description: >
        Uploads a candidate's resume, parses it, and updates their information.


        **Requires the
        [`candidatesWrite`](authentication#permissions-candidateuploadresume)
        permission.**


        The `Content-Type` of this request must be `multipart/form-data`.


        Note: Existing candidate data always takes precedence over data found by
        parsing the resume. Resume data only populates candidate data, if it's
        data that was missing in the candidate model.    
      tags:
        - Candidate
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the candidate
                resume:
                  type: string
                  format: binary
                  description: The resume to upload to the candidate's profile
              required:
                - candidateId
                - resume
              example:
                id: f9e52a51-a075-4116-a7b8-484deba69004
      responses:
        '200':
          description: Responses from the candidate.uploadResume endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidateTag.create:
    post:
      summary: candidateTag.create
      description: >
        Creates a candidate tag.


        **Requires the
        [`hiringProcessMetadataWrite`](authentication#permissions-candidatetagcreate)
        permission.**
      operationId: candidatetagcreate
      tags:
        - Candidate Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  description: >-
                    The tag's title. If a tag already exists with that title,
                    the existing tag will be returned.
                  example: Strong candidate
      responses:
        '200':
          description: Responses for the location.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            description: A tag applied to a candidate
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                description: The tag's unique id
                              title:
                                type: string
                                example: Senior Candidate
                              isArchived:
                                $ref: >-
                                  #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                            required:
                              - id
                              - title
                              - isArchived
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /candidateTag.list:
    post:
      summary: candidateTag.list
      operationId: candidateTagList
      description: >
        Lists all candidate tags


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-candidatetaglist)
        permission.**
      tags:
        - Candidate Tag
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    includeArchived:
                      type: boolean
                      default: false
                      description: >-
                        Whether archived candidate tags should be included in
                        the response
      responses:
        '200':
          description: Responses for the candidateTag.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1candidateTag.create/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /customField.create:
    post:
      summary: customField.create
      operationId: customFieldCreate
      description: >
        Create a new custom field


        **Requires the
        [`hiringProcessMetadataWrite`](authentication#permissions-customfieldcreate)
        permission.**
      tags:
        - Custom Field
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fieldType
                - objectType
                - title
              properties:
                fieldType:
                  type: string
                  description: >-
                    The type of field being created. This value is
                    case-sensitive.
                  enum:
                    - Boolean
                    - Date
                    - MultiValueSelect
                    - Number
                    - String
                    - ValueSelect
                objectType:
                  type: string
                  description: The type of object the field can be associated with.
                  enum:
                    - Application
                    - Candidate
                    - Job
                    - Employee
                    - Talent_Project
                    - Opening_Version
                    - Offer_Version
                title:
                  type: string
                  description: The name of the field
                description:
                  type: string
                  description: A description for the field
                selectableValues:
                  type: array
                  description: >-
                    Required when the field type is ValueSelect or
                    MultiValueSelect. An array of selectable values for the
                    field.
                  items:
                    properties:
                      label:
                        type: string
                      value:
                        type: string
                    required:
                      - label
                      - value
                    type: object
                isDateOnlyField:
                  type: boolean
                  description: >-
                    Only applies to fields with an objectType of Date. Whether
                    or not the field includes content other than a date
                isExposableToCandidate:
                  type: boolean
                  description: >-
                    Determines whether the field can be exposed to a candidate
                    in certain contexts. In order for a custom field to be
                    available in an email template this value must be true.
                  default: false
      responses:
        '200':
          description: Responses for the customField.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              title:
                                type: string
                                example: Preferred Teams
                              objectType:
                                type: string
                                description: >-
                                  The type of object in Ashby the custom field
                                  is associated with
                                enum:
                                  - Application
                                  - Offer
                                  - Candidate
                                  - Job
                              isArchived:
                                $ref: >-
                                  #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                              fieldType:
                                type: string
                                description: The type of data stored in the custom field
                                enum:
                                  - MultiValueSelect
                                  - NumberRange
                                  - String
                                  - Date
                                  - ValueSelect
                                  - Number
                                  - Currency
                                  - Boolean
                              selectableValues:
                                description: >
                                  An array of values that can be selected for
                                  custom fields with a fieldType of
                                  MultiValueSelect.

                                  If the fieldType is not MultiValueSelect,
                                  `selectableValues` will not be present in the
                                  response
                                type: array
                                items:
                                  type: object
                                  properties:
                                    label:
                                      type: string
                                      example: Backend Engineering
                                    value:
                                      type: string
                                      example: Backend Engineering
                                    isArchived:
                                      $ref: >-
                                        #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                            required:
                              - id
                              - title
                              - objectType
                              - isArchived
                              - fieldType
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /customField.list:
    post:
      summary: customField.list
      operationId: customFieldList
      description: >
        Lists all custom fields


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-customfieldlist)
        permission.**
      tags:
        - Custom Field
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: Responses for the customField.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1customField.create/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /customField.setValue:
    post:
      summary: customField.setValue
      operationId: customFieldSetValue
      description: >
        Set the value of a custom field


        **Requires the
        [`candidatesWrite`](authentication#permissions-customfieldsetvalue)
        permission.**


        The values accepted in the `fieldValue` param depend on the type of
        field that's being updated. See below for more details:
          - Boolean - A boolean value
          - Date - An ISO Date string
          - Email, LongText, Phone, String - String
          - ValueSelect - A string that matches the value of one of the ValueSelect field's options
          - MultiValueSelect - An array of strings that exist in the MultiValueSelect field's options
          - Number - A number
      tags:
        - Custom Field
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - objectId
                - objectType
                - fieldId
                - fieldValue
              properties:
                objectId:
                  allOf:
                    - description: The id of the object the field value is being set on.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                objectType:
                  type: string
                  description: The type of object the field is associated with.
                  enum:
                    - Application
                    - Candidate
                    - Job
                fieldId:
                  allOf:
                    - description: >-
                        The unique id of the Custom Field definition for the
                        field
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                fieldValue:
                  description: The value to store in the field
                  oneOf:
                    - type: boolean
                      title: Boolean
                      description: A boolean value
                    - type: string
                      title: Date
                      format: date-time
                      description: An ISO Date string
                    - type: string
                      title: String, Email, LongText, Phone
                      description: A string
                    - type: array
                      title: MultiValueSelect
                      items:
                        type: string
                        description: >-
                          An array of strings that exist in the MultiValueSelect
                          field's options
                    - type: number
                      title: Number
                      description: A number
                    - type: string
                      title: ValueSelect
                      description: >-
                        A string that matches the value of one of the
                        ValueSelect field's options
      responses:
        '200':
          description: Responses for the customField.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              title:
                                type: string
                              value:
                                oneOf:
                                  - type: boolean
                                    title: Boolean
                                  - type: object
                                    title: Currency
                                    properties:
                                      value:
                                        type: number
                                        example: 1000000
                                        format: currency
                                      currencyCode:
                                        type: string
                                        example: USD
                                  - type: string
                                    title: Date
                                    format: date-time
                                  - type: string
                                    title: String
                                  - type: array
                                    title: MultiValueSelect
                                    items:
                                      type: string
                                  - type: number
                                    title: Number
                                  - type: object
                                    title: NumberRange
                                    properties:
                                      type:
                                        type: string
                                        example: number-range
                                      minValue:
                                        type: number
                                        example: 10000
                                      maxValue:
                                        type: number
                                        example: 100000
                                  - type: string
                                    title: ValueSelect
                            required:
                              - id
                              - title
                              - value
                            example:
                              id: 650e5f74-32db-4a0a-b61b-b9afece05023
                              title: Expected start date
                              value: '2022-11-10T19:47:56.795Z'
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /department.create:
    post:
      summary: department.create
      description: >
        Creates a department


        **Requires the
        [`organizationWrite`](authentication#permissions-departmentcreate)
        permission.**
      operationId: departmentcreate
      tags:
        - Department & Team
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: The name of the department
                  example: Engineering
                parentId:
                  type: string
                  format: uuid
                  description: The id of the department's parent department
                  example: 1be42b8e-cafd-4beb-8121-f4981eb20f42
      responses:
        '200':
          description: Responses for the department.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1department.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /department.info:
    post:
      summary: department.info
      operationId: departmentInfo
      description: >
        Fetch department details by id


        **Requires the
        [`organizationRead`](authentication#permissions-departmentinfo)
        permission.**
      tags:
        - Department
      requestBody:
        content:
          application/json:
            schema:
              properties:
                departmentId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >-
                        The unique id of the department whose details will be
                        fetched
              required:
                - departmentId
              example:
                departmentId: 3ae2b801-19f6-41ef-ad28-214bd731948f
      responses:
        '200':
          description: Responses from the department.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              name:
                                type: string
                                example: Engineering
                              isArchived:
                                $ref: >-
                                  #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                              parentId:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            required:
                              - id
                              - name
                              - isArchived
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /department.list:
    post:
      summary: department.list
      operationId: departmentList
      description: >
        Lists all departments


        **Requires the
        [`organizationRead`](authentication#permissions-departmentlist)
        permission.**
      tags:
        - Department
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    includeArchived:
                      type: boolean
                      default: false
                      description: >-
                        Whether archived departments should be included in the
                        response
      responses:
        '200':
          description: Responses for the department.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1department.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /file.info:
    post:
      summary: file.info
      description: >
        Retrieve the url of a file associated with a candidate


        **Requires the [`candidatesRead`](authentication#permissions-fileinfo)
        permission.**
      operationId: fileInfo
      tags:
        - File
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fileHandle:
                  type: string
                  description: A file handle retrieved from the public API
                  example: >
                    eyJoYW5kbGUiOnsidHlwZSI6IkNhbmRpZGF0ZUZpbGUiLCJmaWxlSWQiOiIxNTk1ZTRmYy04MTQwLTQ1NGUtYTI1ZC04NTNiOTQ3ZWNmYzgiLCJvd25lcklkIjoiYmY5NGZlNmMtMjU3MS00NzQ1LWE1OWEtNTA5MjE3ODI3MDVlIn0sInNpZ25hdHVyZSI6IkFqclpjT0VlTXUwdWxLZlRCS05iMWRkbDdHcjVIWFVmZzNrS0NPL1dWWjg9IiwidmVyc2lvbiI6IjEilQ
              required:
                - fileHandle
      responses:
        '200':
          description: Responses for the file.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              url:
                                type: string
                                description: The url of the file
                                example: https://s3.amazonaws.com/...
                            required:
                              - url
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /feedbackFormDefinition.info:
    post:
      summary: feedbackFormDefinition.info
      operationId: feedbackFormDefinitionInfo
      description: >
        Returns a single feedback form by id


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-feedbackformdefinitioninfo)
        permission.**
      tags:
        - Feedback Form Definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - feedbackFormDefinitionId
              properties:
                feedbackFormDefinitionId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The unique id of the feedback form you'd like to fetch.
                    - example: 9b17887e-5add-49e8-9a03-ffffa669aa2f
      responses:
        '200':
          description: Responses for the feedbackFormDefinition.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success Response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            allOf:
                              - $ref: >-
                                  #/paths/~1referralForm.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/allOf/0
                              - type: object
                                properties:
                                  organizationId:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  isDefaultForm:
                                    type: boolean
                                    example: true
                                  interviewId:
                                    allOf:
                                      - $ref: >-
                                          #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                      - description: >-
                                          The id of the interview associated with
                                          the feedback form.
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /feedbackFormDefinition.list:
    post:
      summary: feedbackFormDefinition.list
      operationId: feedbackFormDefinitionList
      description: >
        Lists all feedback forms


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-feedbackformdefinitionlist)
        permission.**
      tags:
        - Feedback Form Definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                includeArchived:
                  $ref: >-
                    #/paths/~1source.list/post/requestBody/content/application~1json/schema/properties/includeArchived
                cursor:
                  $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/cursor
                syncToken:
                  $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/syncToken
                limit:
                  $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/limit
              example:
                includeArchived: false
                cursor: qA
                syncToken: 6W05prn4d
                limit: 25
      responses:
        '200':
          description: Responses for the feedbackFormDefinition.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1feedbackFormDefinition.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /hiringTeam.addMember:
    post:
      summary: hiringTeam.addMember
      description: >
        Adds an Ashby user to the hiring team at the application or job-level. 


        **Requires the
        [`organizationWrite`](authentication#permissions-hiringteamaddmember)
        permission.**


        Hiring team members can be added to a hiring team at the application
        level or at the job level. 
      operationId: hiringteamaddmember
      tags:
        - Hiring Team
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: Application-level
                  required:
                    - applicationId
                    - teamMemberId
                    - roleId
                  properties:
                    applicationId:
                      allOf:
                        - description: The application to assign the user a role on.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    teamMemberId:
                      allOf:
                        - description: The id of the user to assign the role to.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    roleId:
                      allOf:
                        - description: The id of the hiring team role to assign.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                - type: object
                  title: Job-level
                  required:
                    - jobId
                    - teamMemberId
                    - roleId
                  properties:
                    jobId:
                      allOf:
                        - description: The job to assign the user a role on.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    teamMemberId:
                      allOf:
                        - description: The id of the user to assign the role to.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    roleId:
                      allOf:
                        - description: The id of the hiring team role to assign.
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
      responses:
        '200':
          description: Responses for the hiringTeam.addMember endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              email:
                                $ref: >-
                                  #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/email/allOf/0
                              firstName:
                                type: string
                                example: Joey
                              lastName:
                                type: string
                                example: Joe
                              role:
                                type: string
                                example: Hiring Manager
                              userId:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            required:
                              - userId
                              - firstName
                              - lastName
                              - email
                              - role
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /hiringTeamRole.list:
    post:
      summary: hiringTeamRole.list
      description: >
        Lists the possible hiring team roles in an organization


        **Requires the
        [`organizationRead`](authentication#permissions-hiringteamrolelist)
        permission.**
      operationId: hiringteamrolelist
      tags:
        - Hiring Team Role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                namesOnly:
                  type: boolean
                  description: >-
                    When set to true (the default), an array of role titles is
                    returned. When set to false, an array of objects that
                    include the id and title of the role is returned.
                  default: true
      responses:
        '200':
          description: Responses for the hiringTeamRole.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: 'namesOnly: true'
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              type: string
                            example:
                              - Recruiter
                        required:
                          - results
                  - title: 'namesOnly: false'
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                title:
                                  type: string
                                  example: Recruiter
  /interview.info:
    post:
      summary: interview.info
      operationId: interviewInfo
      description: >
        Fetch interview details by id


        **Requires the
        [`interviewsRead`](authentication#permissions-interviewinfo)
        permission.**
      tags:
        - Interview
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >-
                        The unique id of the interview whose details will be
                        fetched
              required:
                - id
              example:
                id: 3ae2b801-19f6-41ef-ad28-214bd731948f
      responses:
        '200':
          description: Responses from the interview.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                allOf:
                                  - description: The interview's id
                                  - example: 3ae2b801-19f6-41ef-ad28-214bd731948f
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              title:
                                type: string
                                example: Technical Phone Interview
                                description: The interview's title
                              isArchived:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                                  - description: Whether or not the interview is archived
                              instructionsHtml:
                                type: string
                                description: An HTML version of the interview's description
                                example: >
                                  <p>The technical phone interview consists of a
                                  60-minute series of techincal questions</p>
                              instructionsPlain:
                                type: string
                                description: >-
                                  A plaintext version of the interview's
                                  description
                                example: >-
                                  The technical phone interview consists of a
                                  60-minute series of techincal questions
                              jobId:
                                allOf:
                                  - description: >
                                      The id of the job the interview is
                                      associated with. If null, the interview is
                                      not associated with a specific job

                                      and is a shared interview. Interviews that
                                      are associated with particular jobs can
                                      only be scheduled for applications

                                      to those jobs.
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              feedbackFormDefinitionId:
                                allOf:
                                  - description: >
                                      The id of the feedback form definition
                                      associated with the interview. 
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            required:
                              - id
                              - title
                              - isArchived
                              - feedbackFormDefinitionId
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interview.list:
    post:
      summary: interview.list
      operationId: interviewList
      description: >
        List all interviews


        **Requires the
        [`interviewsRead`](authentication#permissions-interviewlist)
        permission.**
      tags:
        - Interview
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
                - type: object
                  properties:
                    includeArchived:
                      $ref: >-
                        #/paths/~1source.list/post/requestBody/content/application~1json/schema/properties/includeArchived
                    includeNonSharedInterviews:
                      type: boolean
                      default: false
                      description: >
                        If true, interviews that are associated with specific
                        jobs will be included in the response. 

                        Shared interviews that are not associated with a
                        specific job can be scheduled for applications to any
                        job.

                        Interviews that are not shared can only be scheduled for
                        applications to the job they are associated with. 
      responses:
        '200':
          description: Responses from the interview.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1interview.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewEvent.list:
    post:
      summary: interviewEvent.list
      operationId: interviewEventList
      description: >
        Lists interview events associated with an interview schedule


        **Requires the
        [`interviewsRead`](authentication#permissions-intervieweventlist)
        permission.**
      tags:
        - Interview Event
      requestBody:
        content:
          application/json:
            schema:
              properties:
                interviewScheduleId:
                  allOf:
                    - description: >-
                        The unique ID of the interview schedule, for which to
                        list interview events
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - interviewScheduleId
      responses:
        '200':
          description: Responses from the interviewEvent.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  allOf:
                                    - $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                    - description: The interview event's id
                                    - example: 3ae2b801-19f6-41ef-ad28-214bd731948f
                                interviewId:
                                  allOf:
                                    - $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                    - description: The interview's id
                                    - example: ff6c7d9d-71e3-4c9c-88b1-28824980c276
                                interviewScheduleId:
                                  allOf:
                                    - $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                    - description: The interview schedule's id
                                    - example: 9d34f544-c150-4d70-91c4-e8b0b4a72846
                                interviewerUserIds:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: >-
                                          #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                      - description: An array of the ids of all interviewers
                                      - example: caea4d97-331d-46b1-a8e3-6b821c2214ef
                                createdAt:
                                  allOf:
                                    - description: The time the interview event was created
                                    - $ref: >-
                                        #/paths/~1interviewEvent.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/endTime/allOf/1
                                  type: string
                                startTime:
                                  allOf:
                                    - description: >-
                                        The time the interview event is
                                        scheduled to start
                                    - $ref: >-
                                        #/paths/~1interviewEvent.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/endTime/allOf/1
                                  type: string
                                endTime:
                                  allOf:
                                    - description: >-
                                        The time the interview event is
                                        scheduled to end
                                    - type: string
                                      format: date-time
                                      example: '2022-07-21T17:32:28Z'
                                  type: string
                                feedbackLink:
                                  type: string
                                  format: uri
                                  example: >-
                                    https://app.ashbyhq.com/interview-briefings/4736b6d2-5c97-43a6-a7c6-0228bf079411/feedback
                                  description: >-
                                    The link to submit feedback for the
                                    interview event
                                location:
                                  type: string
                                  description: The location of the interview
                                  example: Google Meet
                                meetingLink:
                                  type: string
                                  format: uri
                                  description: >-
                                    A link to the virtual meeting (if the
                                    interview is being hosted virtually)
                              required:
                                - id
                                - interviewId
                                - interviewScheduleId
                                - interviewerUserIds
                                - createdAt
                                - startTime
                                - endTime
                                - feedbackLink
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewPlan.list:
    post:
      summary: interviewPlan.list
      operationId: interviewPlanList
      description: >
        List all interview plans.


        **Requires the
        [`interviewsRead`](authentication#permissions-interviewplanlist)
        permission.**
      tags:
        - Interview Plan
      requestBody:
        content:
          application/json:
            schema:
              properties:
                includeArchived:
                  $ref: >-
                    #/paths/~1source.list/post/requestBody/content/application~1json/schema/properties/includeArchived
      responses:
        '200':
          description: Responses from the interviewPlan.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          moreDataAvailable:
                            $ref: >-
                              #/paths/~1source.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/moreDataAvailable
                          results:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                title:
                                  type: string
                                  example: Engineering Interview Plan
                                isArchived:
                                  type: boolean
                                  example: false
                              required:
                                - id
                                - title
                                - isArchived
                      - required:
                          - results
                          - moreDataAvailable
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewSchedule.cancel:
    post:
      summary: interviewSchedule.cancel
      operationId: interviewScheduleCancel
      description: >
        Cancel an interview schedule by id


        **Requires the
        [`interviewsWrite`](authentication#permissions-interviewschedulecancel)
        permission.**
      tags:
        - Interview Schedule
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the interview schedule to cancel
                allowReschedule:
                  type: boolean
                  description: Whether or not this interview schedule can be rescheduled.
                  default: false
              required:
                - id
              example:
                id: 3ae2b801-19f6-41ef-ad28-214bd731948f
      responses:
        '200':
          description: Responses from the interviewSchedule.cancel endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/interviewScheduleCreate/post/requestBody/content/application~1json/schema/properties/data/properties/interviewSchedule
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewSchedule.create:
    post:
      summary: interviewSchedule.create
      operationId: interviewScheduleCreate
      description: >
        Create a scheduled interview in Ashby


        **Requires the
        [`interviewsWrite`](authentication#permissions-interviewschedulecreate)
        permission.**
      tags:
        - Interview Schedule
      requestBody:
        content:
          application/json:
            schema:
              properties:
                applicationId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the application for this interview schedule
                interviewEvents:
                  type: array
                  description: The list of events that make up this interview schedule
                  items:
                    type: object
                    required:
                      - startTime
                      - endTime
                      - interviewers
                    properties:
                      startTime:
                        type: string
                        description: The start time of this event
                        example: '2023-01-30T15:00:00.000Z'
                      endTime:
                        type: string
                        description: The end time of this event
                        example: '2023-01-30T16:00:00.000Z'
                      interviewers:
                        type: array
                        description: The interviewers for this event
                        items:
                          type: object
                          required:
                            - email
                          properties:
                            email:
                              type: string
                              description: The email address of the user in Ashby
                              example: test@ashbyhq.com
                            feedbackRequired:
                              type: boolean
                              description: >-
                                Whether this interviewer is required to provide
                                feedback
                      interviewId:
                        allOf:
                          - $ref: >-
                              #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          - description: >-
                              The id of the interview used in this event. If no
                              value is provided, the organization's default
                              interview will be used.
                          - example: 46648e83-f28f-43c4-a2a0-58e0599cff41
              required:
                - applicationId
                - interviewEvents
      responses:
        '200':
          description: Responses from the interviewSchedule.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/interviewScheduleCreate/post/requestBody/content/application~1json/schema/properties/data/properties/interviewSchedule
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewSchedule.list:
    post:
      summary: interviewSchedule.list
      operationId: interviewScheduleList
      description: >
        Gets all interview schedules in the organization.


        **Requires the
        [`interviewsRead`](authentication#permissions-interviewschedulelist)
        permission.**
      tags:
        - Interview Schedule
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1application.list/post/requestBody/content/application~1json/schema/allOf/0
                - type: object
                  properties:
                    applicationId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the application, for which to fetch
                            interview schedules
                    interviewStageId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            The id of the interview stage, for which to fetch
                            interview schedules
      responses:
        '200':
          description: Responses from the interviewSchedule.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/webhooks/interviewScheduleCreate/post/requestBody/content/application~1json/schema/properties/data/properties/interviewSchedule
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewSchedule.update:
    post:
      summary: interviewSchedule.update
      operationId: interviewScheduleUpdate
      description: >
        Update an interview schedule. This endpoint allows you to add, cancel,
        or update interview events associated with an interview schedule.


        **Requires the
        [`interviewsWrite`](authentication#permissions-interviewscheduleupdate)
        permission.**


        In order to update an interview event on a schedule, the event's
        `interviewEventId` must be included when sending your request. 

        `interviewEventId`s are included in the response of the
        `interviewSchedule.create` endpoint.
      tags:
        - Interview Schedule
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    interviewScheduleId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >
                            The id of the interview schedule to update. 

                            Only interview schedules created using the API key
                            making the request can be updated.
                    interviewEvent:
                      allOf:
                        - description: >
                            An event on the interview schedule to create or
                            update.

                            To update an event, the event's `interviewEventId`
                            must be included in the request.
                        - $ref: >-
                            #/paths/~1interviewSchedule.create/post/requestBody/content/application~1json/schema/properties/interviewEvents/items
                        - type: object
                          properties:
                            interviewEventId:
                              allOf:
                                - $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                - description: |
                                    The id of an interview event to update. 
                  required:
                    - interviewScheduleId
                    - interviewEvent
                - type: object
                  properties:
                    interviewScheduleId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >
                            The id of the interview schedule to update. 

                            Only interview schedules created using the API key
                            making the request can be updated.
                    interviewEventIdToCancel:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: |
                            The id of an interview event to cancel.
                    allowFeedbackDeletion:
                      type: boolean
                      default: false
                      description: >-
                        By default, we do not allow interview events with
                        submitted feedback to be canceled because canceling an
                        event causes its associated feedback to be deleted. If
                        you want to allow events with submitted feedback to be
                        canceled, this flag can be passed in and set to `true`.
                        In this case, events with feedback will be canceled, and
                        any associated feedback will be deleted.
                  required:
                    - interviewScheduleId
                    - interviewEventIdToCancel
      responses:
        '200':
          description: Responses from the interviewSchedule.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/interviewScheduleCreate/post/requestBody/content/application~1json/schema/properties/data/properties/interviewSchedule
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewStage.list:
    post:
      summary: interviewStage.list
      description: >
        List all interview stages for an interview plan in order.


        **Requires the
        [`interviewsRead`](authentication#permissions-interviewstagelist)
        permission.**
      operationId: interviewStageList
      tags:
        - Interview Stage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interviewPlanId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the interview plan to list stages for
              required:
                - interviewPlanId
      responses:
        '200':
          description: Responses for the interviewStage.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1interviewStage.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                          moreDataAvailable:
                            $ref: >-
                              #/paths/~1source.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/moreDataAvailable
                      - required:
                          - results
                          - moreDataAvailable
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /interviewStage.info:
    post:
      summary: interviewStage.info
      operationId: interviewStageInfo
      description: >
        Fetch interview stage details by id


        **Requires the
        [`interviewsRead`](authentication#permissions-interviewstageinfo)
        permission.**
      tags:
        - Interview Stage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                interviewStageId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >-
                        The unique id of the interview stage whose details will
                        be fetched
              required:
                - interviewStageId
              example:
                interviewStageId: 3ae2b801-19f6-41ef-ad28-214bd731948f
      responses:
        '200':
          description: Responses from the interviewStage.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  title:
                                    type: string
                                    example: Offer
                                  type:
                                    type: string
                                    example: Offer
                                  orderInInterviewPlan:
                                    type: integer
                                    example: 1006
                                    default: 0
                                required:
                                  - id
                                  - title
                                  - type
                                  - orderInInterviewPlan
                              - type: object
                                properties:
                                  interviewPlanId:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                required:
                                  - interviewPlanId
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /job.create:
    post:
      summary: job.create
      operationId: jobCreate
      description: >
        Creates a new job


        **Requires the [`jobsWrite`](authentication#permissions-jobcreate)
        permission.**
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Software Engineer
                  description: The title of the job.
                teamId:
                  allOf:
                    - description: The id of the department or team associated with the job
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                locationId:
                  allOf:
                    - description: The id of the location of the job
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                defaultInterviewPlanId:
                  allOf:
                    - description: >
                        The id of the default interview plan for this job
                        posting. 

                        A job cannot be opened without a default interview plan.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - title
                - teamId
                - locationId
      responses:
        '200':
          description: Responses for the job.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /job.info:
    post:
      summary: job.info
      operationId: jobInfo
      description: >
        Returns details about a single job by id


        **Requires the [`jobsRead`](authentication#permissions-jobinfo)
        permission.**
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  allOf:
                    - description: The id of the job to fetch
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                expand:
                  type: array
                  description: >
                    Choose to expand the result and include additional data for
                    related objects. 
                  items:
                    type: string
                    enum:
                      - location
                      - openings
              required:
                - id
      responses:
        '200':
          description: Responses for the job.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - type: object
                        required:
                          - success
                        properties:
                          success:
                            type: boolean
                            description: Whether the response is considered successful.
                      - type: object
                        properties:
                          results:
                            allOf:
                              - $ref: >-
                                  #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
                              - type: object
                                properties:
                                  location:
                                    allOf:
                                      - $ref: >-
                                          #/paths/~1location.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                                      - description: >-
                                          The location will only be included if
                                          the `location` expand parameter is
                                          included when the request is made.
                                  openings:
                                    description: >-
                                      The openings array will only be included
                                      if the `openings` expand parameter is
                                      included when the request is made.
                                    type: array
                                    items:
                                      $ref: >-
                                        #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                        required:
                          - results
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - title: Error response
                      - type: object
                        required:
                          - errors
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                            description: A list of error message strings.
                    example:
                      success: false
                      errors:
                        - invalid_input
  /job.list:
    post:
      summary: job.list
      description: >
        List all open, closed, and archived jobs.


        **Requires the [`jobsRead`](authentication#permissions-joblist)
        permission.**


        To include draft jobs, `Draft` must be specified in the `status` param.
      operationId: jobList
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
                - type: object
                  properties:
                    status:
                      type: array
                      description: >-
                        When supplied, only jobs with the provided status(es)
                        will be returned.
                      items:
                        $ref: >-
                          #/paths/~1job.setStatus/post/requestBody/content/application~1json/schema/properties/status/allOf/1
                    openedAfter:
                      type: integer
                      format: int64
                      description: >-
                        Return jobs opened after this date, which is the time
                        since the unix epoch in milliseconds
                    openedBefore:
                      type: integer
                      format: int64
                      description: >-
                        Return jobs opened before this date, which is the time
                        since the unix epoch in milliseconds
                    closedAfter:
                      type: integer
                      format: int64
                      description: >-
                        Return jobs closed after this date, which is the time
                        since the unix epoch in milliseconds
                    closedBefore:
                      type: integer
                      format: int64
                      description: >-
                        Return jobs closed before this date, which is the time
                        since the unix epoch in milliseconds
                    expand:
                      $ref: >-
                        #/paths/~1job.info/post/requestBody/content/application~1json/schema/properties/expand
      responses:
        '200':
          description: Responses for the jobPosting.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - allOf:
                          - $ref: >-
                              #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                          - title: Success response
                          - type: object
                            properties:
                              moreDataAvailable:
                                type: boolean
                                description: >-
                                  Whether the cursor can be used to fetch a
                                  subsequent page of data.
                              nextCursor:
                                $ref: >-
                                  #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/cursor
                              syncToken:
                                $ref: >-
                                  #/paths/~1candidate.list/post/requestBody/content/application~1json/schema/properties/syncToken
                      - type: object
                        properties:
                          results:
                            type: array
                            items:
                              allOf:
                                - $ref: >-
                                    #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
                                - $ref: >-
                                    #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/allOf/1
                        required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /job.setStatus:
    post:
      summary: job.setStatus
      operationId: jobSetStatus
      description: >
        Sets the status on a job by id.


        **Requires the [`jobsWrite`](authentication#permissions-jobsetstatus)
        permission.**


        All jobs are drafts when they're first created. There are a few
        validations around the stages a job can be transitioned to:

        - Drafts can be changed to Open or Archived

        - Open jobs can be changed to Closed

        - Closed jobs can be changed to Draft or Archived

        - Archived jobs can be changed to a Draft 
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  allOf:
                    - description: The unique id of the job to set the status of.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                status:
                  allOf:
                    - description: The status to apply to the job.
                    - type: string
                      enum:
                        - Draft
                        - Open
                        - Closed
                        - Archived
              required:
                - jobId
                - status
      responses:
        '200':
          description: Responses for the job.setStatus endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /job.update:
    post:
      summary: job.update
      operationId: jobUpdate
      description: >
        Updates an existing job


        **Requires the [`jobsWrite`](authentication#permissions-jobupdate)
        permission.**
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  allOf:
                    - description: The unique id of the job to update.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                title:
                  type: string
                  example: Software Engineer
                  description: A new title for the job.
                teamId:
                  allOf:
                    - description: The new team to associate with the job.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                locationId:
                  allOf:
                    - description: The new location to associate with the job.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                defaultInterviewPlanId:
                  allOf:
                    - description: >-
                        The new default interview plan to associate with the
                        job.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                customRequisitionId:
                  allOf:
                    - description: The new default custom requisition id for the job.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - jobId
      responses:
        '200':
          description: Responses for the job.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /job.search:
    post:
      summary: job.search
      operationId: jobSearch
      description: >
        Searches for jobs by title


        **Requires the [`jobsRead`](authentication#permissions-jobsearch)
        permission.**
      tags:
        - Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Software Engineer
                  description: The title of the job to search for
              required:
                - title
      responses:
        '200':
          description: Responses for the job.search endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /jobInterviewPlan.info:
    post:
      summary: jobInterviewPlan.info
      operationId: jobInterviewPlan.info
      description: >
        Returns a job's interview plan, including activities and interviews that
        need to be scheduled at each stage


        **Requires the
        [`jobsRead`](authentication#permissions-jobinterviewplaninfo)
        permission.**
      tags:
        - Job Interview Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  allOf:
                    - description: The id of the job to fetch an interview plan for
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - jobId
      responses:
        '200':
          description: Responses for the jobInterviewPlan.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: object
                            properties:
                              jobId:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              interviewPlanId:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              stages:
                                type: array
                                items:
                                  allOf:
                                    - $ref: >-
                                        #/paths/~1interviewStage.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/allOf/0
                                    - type: object
                                      properties:
                                        activities:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              id:
                                                $ref: >-
                                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                              title:
                                                type: string
                                                example: Onsite Schedule
                                              interviews:
                                                type: array
                                                items:
                                                  type: object
                                                  properties:
                                                    id:
                                                      allOf:
                                                        - $ref: >-
                                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                                    title:
                                                      type: string
                                                      example: System Architecture
                                                    interviewId:
                                                      allOf:
                                                        - description: The id of the interview to be scheduled
                                                        - $ref: >-
                                                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                                    interviewDurationMinutes:
                                                      type: number
                                                      example: 30
                                                    isSchedulable:
                                                      type: boolean
                                                      example: true
                                            required:
                                              - id
                                              - interviews
                                      required:
                                        - activities
                            description: A plan for conducting job interviews.
                            required:
                              - jobId
                              - interviewPlanId
                              - stages
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /jobPosting.info:
    post:
      summary: jobPosting.info
      description: "Retrieve an individual job posting\n\n**Requires the [`jobsRead`](authentication#permissions-jobpostinginfo) permission.**\n\nResult fields:\n- `linkedData` - Object that can be used to populate \"rich results\" in search engines. [See more info here](https://developers.google.com/search/docs/data-types/job-posting).\n- `applicationFormDefinition` -\tSee the guide on [Creating a custom careers page](https://developers.ashbyhq.com/docs/creating-a-custom-careers-page).\n"
      operationId: jobPostingInfo
      tags:
        - Job Posting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobPostingId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the job posting to return
              required:
                - jobPostingId
      responses:
        '200':
          description: Responses for the jobPosting.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            properties:
                              id:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  - description: The job posting's id
                              title:
                                type: string
                                description: The job posting's title
                                example: Posting Title
                              descriptionPlain:
                                type: string
                                description: >-
                                  A plaintext version of the job posting's
                                  description
                                example: >+
                                  This example role will be part of an example
                                  team and will report to the example manager.
                                  The new hire plays a critical role in various
                                  example workflows.




                                  REQUIREMENTS

                                   - Experience writing good example job descriptions

                                   - Other exemplary skills

                                   - 3-5 years prior experience in this role

                                   - Motivation

                                   - Great english language skills
                                     


                                  ABOUT THE TEAM



                                  Example org is a leading software company.
                                  Example org allows real-time collaboration on
                                  important example workflows. Founded in 2012
                                  we have over 10,000 customers worldwide and
                                  are backed by fantastic investors such as
                                  Sequoia Capital.

                              descriptionHtml:
                                type: string
                                description: >-
                                  An HTML version of the job posting's
                                  description
                                example: >-
                                  <p style="min-height:1.5em">This example role
                                  will be part of an example team and will
                                  report to the example manager. The new hire
                                  plays a critical role in various example
                                  workflows.</p><h1><br />Requirements</h1><ul
                                  style="min-height:1.5em"><li><p
                                  style="min-height:1.5em">Experience writing
                                  good example job descriptions</p></li><li><p
                                  style="min-height:1.5em">Other exemplary
                                  skills</p></li><li><p
                                  style="min-height:1.5em">3-5 years prior
                                  experience in this role</p></li><li><p
                                  style="min-height:1.5em">Motivation</p></li><li><p
                                  style="min-height:1.5em">Great english
                                  language skills<br /></p></li></ul><h1>About
                                  the Team</h1><p style="min-height:1.5em"><br
                                  />Example org is a leading software company.
                                  Example org allows real-time collaboration on
                                  important example workflows. Founded in 2012
                                  we have over 10,000 customers worldwide and
                                  are backed by fantastic investors such as
                                  Sequoia Capital.</p><p
                                  style="min-height:1.5em"></p>
                              descriptionSocial:
                                type: string
                                description: >-
                                  A shortened job posting description displayed
                                  when shared on social media, limited to 200
                                  characters.
                                example: >-
                                  Example org allows real-time collaboration on
                                  important example workflows. When you join as
                                  an example role, part of the example team, you
                                  will perform a critical role in various
                                  example workflows.
                              descriptionParts:
                                type: object
                                description: >-
                                  The above description broken down into the
                                  actual description on the job, and the Job
                                  Post Description Opening and Closing that is
                                  set by the admin in Ashby's Job Boards → Theme
                                  → Messaging settings.
                                properties:
                                  descriptionOpening:
                                    allOf:
                                      - $ref: >-
                                          #/paths/~1jobPosting.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/descriptionParts/properties/descriptionBody/allOf/0
                                      - description: >-
                                          The content set in the Job Post
                                          Description Opening theme settings
                                      - properties:
                                          html:
                                            description: >-
                                              An HTML version of the Job Post
                                              Description Opening theme settings
                                            example: null
                                          plain:
                                            description: >-
                                              A plaintext version of the Job Post
                                              Description Opening theme settings
                                            example: null
                                  descriptionBody:
                                    allOf:
                                      - type: object
                                        properties:
                                          html:
                                            type: string
                                          plain:
                                            type: string
                                        required:
                                          - html
                                          - plain
                                      - description: The description set on the job posting
                                      - properties:
                                          html:
                                            description: >-
                                              An HTML version of the description set
                                              on the job posting
                                            example: >-
                                              <p style="min-height:1.5em">This example
                                              role will be part of an example team and
                                              will report to the example manager. The
                                              new hire plays a critical role in
                                              various example workflows.</p><h1><br
                                              />Requirements</h1><ul
                                              style="min-height:1.5em"><li><p
                                              style="min-height:1.5em">Experience
                                              writing good example job
                                              descriptions</p></li><li><p
                                              style="min-height:1.5em">Other exemplary
                                              skills</p></li><li><p
                                              style="min-height:1.5em">3-5 years prior
                                              experience in this role</p></li><li><p
                                              style="min-height:1.5em">Motivation</p></li><li><p
                                              style="min-height:1.5em">Great english
                                              language skills<br /></p></li></ul></p>
                                          plain:
                                            description: >-
                                              An plaintext version of the description
                                              set on the job posting
                                            example: >-
                                              This example role will be part of an
                                              example team and will report to the
                                              example manager. The new hire plays a
                                              critical role in various example
                                              workflows.\n\n\n\nREQUIREMENTS\n\n -
                                              Experience writing good example job
                                              descriptions\n\n - Other exemplary
                                              skills\n\n - 3-5 years prior experience
                                              in this role\n\n - Motivation\n\n -
                                              Great english language skills\n
                                  descriptionClosing:
                                    allOf:
                                      - $ref: >-
                                          #/paths/~1jobPosting.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/descriptionParts/properties/descriptionBody/allOf/0
                                      - description: >-
                                          The content set in the Job Post
                                          Description Closing theme settings
                                      - properties:
                                          html:
                                            description: >-
                                              An HTML version of the Job Post
                                              Description Closing theme settings
                                            example: >-
                                              <h1>About the Team</h1><p
                                              style="min-height:1.5em"><br />Example
                                              org is a leading software company.
                                              Example org allows real-time
                                              collaboration on important example
                                              workflows. Founded in 2012 we have over
                                              10,000 customers worldwide and are
                                              backed by fantastic investors such as
                                              Sequoia Capital.</p>
                                          plain:
                                            description: >-
                                              A plaintext version of the Job Post
                                              Description Closing theme settings
                                            example: >-
                                              ABOUT THE TEAM\n\n\nExample org is a
                                              leading software company. Example org
                                              allows real-time collaboration on
                                              important example workflows. Founded in
                                              2012 we have over 10,000 customers
                                              worldwide and are backed by fantastic
                                              investors such as Sequoia Capital.\n\n
                                required:
                                  - description
                              departmentName:
                                type: string
                                example: Test Team
                                description: >-
                                  The name of the department associated with the
                                  job posting
                              teamName:
                                type: string
                                example: Test Team
                                description: >-
                                  The name of the team associated with the job
                                  posting
                              jobId:
                                allOf:
                                  - description: >-
                                      The id of the job associated with the job
                                      posting
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              locationName:
                                type: string
                                example: Springfield
                                description: >-
                                  The name of the primary location associated
                                  with the job posting
                              locationIds:
                                $ref: >-
                                  #/webhooks/jobPostingUpdate/post/requestBody/content/application~1json/schema/properties/data/properties/jobPosting/properties/locationIds
                              linkedData:
                                type: object
                                description: >-
                                  An object that can be used to populate "rich
                                  results" in search engines.
                                  (https://developers.google.com/search/docs/data-types/job-posting)
                                properties:
                                  '@context':
                                    type: string
                                    example: https://schema.org/
                                  '@type':
                                    type: string
                                    example: JobPosting
                                  title:
                                    type: string
                                    example: Posting Title
                                  description:
                                    type: string
                                    example: >-
                                      <p style="min-height:1.5em">This example
                                      role will be part of an example team and
                                      will report to the example manager. The
                                      new hire plays a critical role in various
                                      example workflows.</p><h1><br
                                      />Requirements</h1><ul
                                      style="min-height:1.5em"><li><p
                                      style="min-height:1.5em">Experience
                                      writing good example job
                                      descriptions</p></li><li><p
                                      style="min-height:1.5em">Other exemplary
                                      skills</p></li><li><p
                                      style="min-height:1.5em">3-5 years prior
                                      experience in this role</p></li><li><p
                                      style="min-height:1.5em">Motivation</p></li><li><p
                                      style="min-height:1.5em">Great english
                                      language skills<br
                                      /></p></li></ul><h1>About the Team</h1><p
                                      style="min-height:1.5em"><br />Example org
                                      is a leading software company. Example org
                                      allows real-time collaboration on
                                      important example workflows. Founded in
                                      2012 we have over 10,000 customers
                                      worldwide and are backed by fantastic
                                      investors such as Sequoia Capital.</p><p
                                      style="min-height:1.5em"></p>
                                  identifier:
                                    type: object
                                    properties:
                                      '@type':
                                        type: string
                                        example: PropertyValue
                                      name:
                                        type: string
                                        example: Posting Title
                                      value:
                                        type: string
                                        example: 4be0e8c0-9323-43a0-ab48-506789ab9c16
                                  datePosted:
                                    type: string
                                    example: '2022-07-22'
                                  hiringOrganization:
                                    type: object
                                    properties:
                                      '@type':
                                        type: string
                                        example: Organization
                                      name:
                                        type: string
                                        example: Example org
                                      sameAs:
                                        type: string
                                        example: 34d7c77d-e9b2-5a09-a882-cb23a225f2ec.com
                                  jobLocation:
                                    type: object
                                    properties:
                                      '@type':
                                        type: string
                                        example: Place
                                      address:
                                        type: object
                                        properties:
                                          '@type':
                                            type: string
                                            example: PostalAddress
                                  employmentType:
                                    type: string
                                    example: FULL_TIME
                              publishedDate:
                                type: string
                                example: '2022-07-22'
                                description: The date the job posting was published
                              applicationDeadline:
                                type: string
                                example: '2024-08-12T20:00:00.000Z'
                                format: date
                                description: >-
                                  The date and time when applications will no
                                  longer be accepted
                              address:
                                allOf:
                                  - description: The address of the job posting
                                  - $ref: >-
                                      #/paths/~1location.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/address
                              isRemote:
                                type: boolean
                              employmentType:
                                $ref: >-
                                  #/webhooks/jobPostingUpdate/post/requestBody/content/application~1json/schema/properties/data/properties/jobPosting/properties/employmentType
                              applicationFormDefinition:
                                allOf:
                                  - $ref: >-
                                      #/paths/~1offer.start/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/properties/formDefinition
                                  - description: >-
                                      See the guide on Creating a custom careers
                                      page
                                      (https://developers.ashbyhq.com/docs/creating-a-custom-careers-page)
                              isListed:
                                type: boolean
                                example: true
                                description: Whether or not the job posting is listed
                              externalLink:
                                type: string
                                example: >-
                                  https://jobs.ashbyhq.com/70b51cc4-7f34-5567-92bd-96f354f7439a/4be0e8c0-9323-43a0-ab48-506789ab9c16
                                description: The external link to the job posting
                              compensation:
                                type: object
                                description: >-
                                  Compensation ranges associated with the job
                                  posting and related settings
                                required:
                                  - compensationTiers
                                  - shouldDisplayCompensationOnJobBoard
                                properties:
                                  compensationTierSummary:
                                    type: string
                                    example: >-
                                      $72K – $270K • 1% – 2.25% • Offers Bonus •
                                      Multiple Ranges
                                    description: >
                                      A summary of *all* the job posting's valid
                                      `compensationTiers` in the same format
                                      shown on

                                      Ashby-hosted Job Boards
                                  summaryComponents:
                                    type: array
                                    items:
                                      type: object
                                      description: >
                                        A part of a compensation tier that
                                        represents one specific type of
                                        compensation, e.g. the "Salary"

                                        or the "Bonus."
                                      properties:
                                        summary:
                                          type: string
                                          example: €72K – €100K
                                          description: >-
                                            The summary of this component in the
                                            same format shown on Ashby-hosted Job
                                            Boards
                                        compensationType:
                                          type: string
                                          enum:
                                            - Salary
                                            - EquityPercentage
                                            - EquityCashValue
                                            - Commission
                                            - Bonus
                                          example: Salary
                                          description: >
                                            The type of compensation this component
                                            represents
                                        interval:
                                          type: string
                                          enum:
                                            - NONE
                                            - 1 TIME
                                            - 1 HOUR
                                            - 1 DAY
                                            - 1 WEEK
                                            - 2 WEEK
                                            - 1 MONTH
                                            - 1 YEAR
                                            - 6 MONTH
                                            - 0.5 MONTH
                                            - 3 MONTH
                                          example: 1 YEAR
                                          description: >-
                                            The frequency at which this compensation
                                            is given
                                        currencyCode:
                                          type: string
                                          example: EUR
                                          description: >
                                            For non `EquityPercentage` components,
                                            the [ISO
                                            4217](https://en.wikipedia.org/wiki/ISO_4217)

                                            currency code of the compensation range
                                        label:
                                          type: string
                                          example: Estimated Salary
                                          description: >-
                                            An optional label that describes this
                                            compensation range to applicants
                                        minValue:
                                          type: number
                                          example: 72000.1
                                          description: The lower end of the compensation range
                                        maxValue:
                                          type: number
                                          example: 100000
                                          description: The higher end of the compensation range
                                      required:
                                        - compensationType
                                        - interval
                                        - summary
                                    description: >
                                      The maximum and minimum compensation
                                      ranges across *all* the posting's
                                      `compensationTiers`

                                      that make up `compensationTierSummary`
                                    example:
                                      - summary: €72K – €270K
                                        componentType: Salary
                                        interval: 1 YEAR
                                        currencyCode: EUR
                                        minValue: 72023.45
                                        maxValue: 270450
                                      - summary: 1% – 2.25%
                                        componentType: EquityPercentage
                                        interval: NONE
                                        minValue: 1
                                        maxValue: 2.25
                                      - summary: Offers Bonus
                                        componentType: Bonus
                                        interval: 1 YEAR
                                        minValue: null
                                        maxValue: null
                                  compensationTiers:
                                    type: array
                                    items:
                                      type: object
                                      description: >-
                                        A compensation range that can be offered
                                        to candidates
                                      properties:
                                        id:
                                          allOf:
                                            - $ref: >-
                                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                            - description: The compensation tier's unique id
                                        title:
                                          type: string
                                          example: Zone A
                                          description: >-
                                            A label that describes the entire range
                                            to applicants
                                        additionalInformation:
                                          type: string
                                          example: Signing bonus available
                                          description: >-
                                            Supplementary information about the
                                            compensation
                                        components:
                                          type: array
                                          items:
                                            type: object
                                            description: >
                                              A part of a compensation tier that
                                              represents one specific type of
                                              compensation, e.g. the "Salary"

                                              or the "Bonus."
                                            properties:
                                              id:
                                                allOf:
                                                  - $ref: >-
                                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                                  - description: The component's unique id
                                            allOf:
                                              - $ref: >-
                                                  #/paths/~1jobPosting.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/compensation/properties/summaryComponents/items
                                            required:
                                              - id
                                          description: >-
                                            The individual components that make up
                                            this compensation range
                                          example:
                                            - id: fb8efeaa-bea1-4713-9012-cbd25fc3dc89
                                              summary: €72K – €100K
                                              componentType: Salary
                                              interval: 1 YEAR
                                              currencyCode: EUR
                                              minValue: 72023.45
                                              maxValue: 100000
                                            - id: 93c62578-ed5d-42dd-8186-64ad5ba5603d
                                              summary: 1% – 2.511%
                                              componentType: EquityPercentage
                                              interval: NONE
                                              minValue: 1
                                              maxValue: 2.511
                                            - id: null
                                              summary: Offers Bonus
                                              componentType: Bonus
                                              interval: 1 YEAR
                                              minValue: null
                                              maxValue: null
                                        tierSummary:
                                          type: string
                                          example: >-
                                            €72K – €100K • 1% – 2.511% • Offers
                                            Bonus
                                          description: >
                                            A summary of the tiers's components in
                                            the same format shown on Ashby-hosted
                                            Job Boards
                                      required:
                                        - id
                                        - components
                                        - tierSummary
                                    description: >-
                                      The compensation ranges that can be
                                      offered to applicants for this posting
                                    example:
                                      - id: da53719f-a115-400b-9d30-9b875428f1e7
                                        title: Zone A
                                        additionalInformation: null
                                        components:
                                          - id: fb8efeaa-bea1-4713-9012-cbd25fc3dc89
                                            summary: €72K – €100K
                                            componentType: Salary
                                            interval: 1 YEAR
                                            currencyCode: EUR
                                            minValue: 72023.45
                                            maxValue: 100000
                                          - id: 93c62578-ed5d-42dd-8186-64ad5ba5603d
                                            summary: 1% – 1.4%
                                            componentType: EquityPercentage
                                            interval: NONE
                                            minValue: 1
                                            maxValue: 1.4
                                        tierSummary: €72K – €100K • 1% – 1.4%
                                      - id: 81362ab1-739e-44f5-88d9-dbc5c731624c
                                        title: Zone B
                                        additionalInformation: Commuter Benefits
                                        components:
                                          - id: fb8efeaa-bea1-4713-9012-cbd25fc3dc89
                                            summary: €72K – €100K
                                            componentType: Salary
                                            interval: 1 YEAR
                                            currencyCode: EUR
                                            minValue: 95010.12
                                            maxValue: 270450
                                          - id: 93c62578-ed5d-42dd-8186-64ad5ba5603d
                                            summary: 1.8% – 2.511%
                                            componentType: EquityPercentage
                                            interval: NONE
                                            minValue: 1.8
                                            maxValue: 2.511
                                          - id: null
                                            summary: Offers Bonus
                                            componentType: Bonus
                                            interval: 1 YEAR
                                            minValue: null
                                            maxValue: null
                                        tierSummary: >-
                                          €95K – €270K • 1.8% – 2.511% • Offers
                                          Bonus • Commuter Benefits
                                  shouldDisplayCompensationOnJobBoard:
                                    type: boolean
                                    example: true
                                    description: >
                                      Whether the job posting's settings specify
                                      that compensation should be shown to
                                      applicants
                              updatedAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                              applicationLimitCalloutHtml:
                                type: string
                                description: >-
                                  An HTML version of any communication you would
                                  like to show to applicants about the
                                  application limit for this job posting
                                example: |
                                  <div>
                                    <p>Please Note: we have set up limits for applications for this role. It is in the <strong>Product Limit </strong> group. The following limits apply to applications for all jobs within this group:</p>
                                    <ul>
                                      <li>
                                        <p>Candidates may not apply more than 1 time in any 60 day span for any job in the <strong>Product Limit </strong> Group.</p>
                                      </li>
                                    </ul>
                                  </div>
                            required:
                              - id
                              - title
                              - descriptionPlain
                              - descriptionHtml
                              - descriptionParts
                              - departmentName
                              - teamName
                              - jobId
                              - locationName
                              - locationIds
                              - linkedData
                              - publishedDate
                              - employmentType
                              - applicationFormDefiniton
                              - isListed
                              - externalLink
                              - compensation
                              - updatedAt
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /jobPosting.list:
    post:
      summary: jobPosting.list
      description: >
        Lists all published job postings


        **Requires the [`jobsRead`](authentication#permissions-jobpostinglist)
        permission.**


        **Important**: By default, this endpoint includes all listed and
        unlisted job postings. Unlisted job postings should not be displayed
        publicly. 

        If you are using the API to publicly expose job postings, set the
        `listedOnly` parameter to `true` when calling this API so that you only
        fetch listed job postings that can be displayed publicly.
      operationId: jobPostingList
      tags:
        - Job Posting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: string
                  description: filter by location name (case sensitive)
                department:
                  type: string
                  description: filter by department name (case sensitive)
                listedOnly:
                  type: boolean
                  description: If true, filter out unlisted job postings.
                  default: false
      responses:
        '200':
          description: Responses for the jobPosting.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/webhooks/jobPostingUpdate/post/requestBody/content/application~1json/schema/properties/data/properties/jobPosting
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /jobPosting.update:
    post:
      summary: jobPosting.update
      operationId: jobPostingUpdate
      description: >
        Updates an existing job posting.


        **Requires the
        [`jobsWrite`](authentication#permissions-jobpostingupdate) permission.**


        **Note on updating the description**: The `descriptionHtml` field
        returned in `jobPosting.info` may contain content that is not modifiable
        through the API. Only the content of the
        `descriptionParts.descriptionBody` field of the `jobPosting.info`
        endpoint is modifiable through this call.
      tags:
        - Job Posting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobPostingId:
                  allOf:
                    - description: The unique id of the job posting to update.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                title:
                  type: string
                  example: Software Engineer
                  description: A new title for the job posting.
                description:
                  type: object
                  description: >
                    An HTML block of the job posting description. Please see
                    below for supported tags.


                    **Note**: The `descriptionHtml` field returned in
                    `jobPosting.info` may contain content that is not modifiable
                    through the API. Only the content of the
                    `descriptionParts.descriptionBody` field of the
                    `jobPosting.info` endpoint is modifiable through this call.
                  properties:
                    type:
                      type: string
                      enum:
                        - text/html
                    content:
                      type: string
                      description: >
                        The HTML content of the Job Posting. The following tags
                        will accept updates. Updates to any other tags will be
                        stripped out or not applied. 

                        - Headings - `<h[1-6]>`

                        - Bold - `<b>`

                        - Italic - `<i>`

                        - Underline - `<u>`

                        - Links - `<a>`

                        - Bulleted Lists - `<ul>`, `<li>`

                        - Ordered Lists - `<ol>`, `<li>`

                        - Code - `<code>`

                        - Code blocks - `<pre>`
                  required:
                    - type
                    - content
              required:
                - jobPostingId
      responses:
        '200':
          description: Responses for the jobPosting.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1jobPosting.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /location.create:
    post:
      summary: location.create
      description: >
        Creates a location or location hierarchy.


        **Requires the
        [`organizationWrite`](authentication#permissions-locationcreate)
        permission.**
      operationId: locationcreate
      tags:
        - Location
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
              properties:
                name:
                  type: string
                  description: The name of the location
                type:
                  type: string
                  description: >-
                    A Location represents an actual location that jobs and
                    employees can be associated with. A Location Hierarchy is a
                    grouping of locations or other location hierarchies.
                  enum:
                    - Location
                    - LocationHierarchy
                address:
                  type: object
                  description: The address of the location
                  properties:
                    postalAddress:
                      type: object
                      properties:
                        addressCountry:
                          type: string
                          description: >-
                            The country the location is in. Must be a valid
                            country name or two-letter country code.
                        addressRegion:
                          type: string
                          description: >-
                            The region the location is in (for instance, a state
                            or province)
                        addressLocality:
                          type: string
                          description: The city or town of the location
                parentLocationId:
                  type: string
                  description: The id of the location's parent
                isRemote:
                  type: boolean
                  description: >-
                    Whether the location should be labeled as remote.
                    LocationHierarchies cannot be labeled as remote.
                  default: false
      responses:
        '200':
          description: Responses for the location.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1location.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /location.info:
    post:
      summary: location.info
      description: >
        Gets details for a single location by id.


        **Requires the
        [`organizationRead`](authentication#permissions-locationinfo)
        permission.**
      operationId: locationInfo
      tags:
        - Location
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the location to fetch
              required:
                - locationId
      responses:
        '200':
          description: Responses for the location.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              name:
                                type: string
                                example: Bay Area Office
                              isArchived:
                                $ref: >-
                                  #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                              address:
                                type: object
                                properties:
                                  postalAddress:
                                    type: object
                                    properties:
                                      addressCountry:
                                        type: string
                                        example: United States
                                      addressRegion:
                                        type: string
                                        example: California
                                      addressLocality:
                                        type: string
                                        example: San Francisco
                              isRemote:
                                type: boolean
                                example: false
                            required:
                              - id
                              - name
                              - isArchived
                              - isRemote
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /location.list:
    post:
      summary: location.list
      description: >
        List all locations. Regions are not returned.


        **Requires the
        [`organizationRead`](authentication#permissions-locationlist)
        permission.**
      operationId: locationlist
      tags:
        - Location
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                includeArchived:
                  $ref: >-
                    #/paths/~1source.list/post/requestBody/content/application~1json/schema/properties/includeArchived
      responses:
        '200':
          description: Responses for the location.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1location.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                          moreDataAvailable:
                            $ref: >-
                              #/paths/~1source.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/moreDataAvailable
                      - required:
                          - results
                          - moreDataAvailable
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /offer.create:
    post:
      summary: offer.create
      operationId: offerCreate
      description: >
        Creates a new Offer


        **Requires the [`offersWrite`](authentication#permissions-offercreate)
        permission.**


        Offer forms support a variety of field types. The values accepted for
        each field depend on the type of field that's being filled out:

        - `Boolean` - A boolean value.

        - `Currency` - An object in the format `{ currencyCode: "USD", value:
        100000 }` where currencyCode is a valid ISO 4217 currency code and value
        is an integer.

        - `Date` - A valid ISO Date string.

        - `Number` - An integer.

        - `String` - A string.

        - `ValueSelect` - A string that matches the value of one of the
        ValueSelect field's selectable options.

        - `MultiValueSelect` - An array of strings that exist in the
        MultiValueSelect field's selectable options.
      tags:
        - Offer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                offerProcessId:
                  allOf:
                    - description: >
                        The id of the offer process associated with the offer
                        you're creating. 

                        This value is the id included in the response of the
                        `offerProcess.start` API.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                offerFormId:
                  allOf:
                    - description: >
                        The id of the form associated with the offer.

                        This value is the id included in the response of the
                        `offer.start` API.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                offerForm:
                  type: object
                  properties:
                    fieldSubmissions:
                      type: array
                      items:
                        properties:
                          path:
                            type: string
                            description: The form field's "path" value
                          value:
                            type: string
                            description: >-
                              This is often a primitive but the value depends on
                              the type of field being submitted. See the
                              description above for details on the values
                              accepted in this field.
                        required:
                          - path
                          - value
                  required:
                    - fieldSubmissions
              required:
                - offerProcessId
                - offerFormId
                - offerForm
      responses:
        '200':
          description: Responses for the offer.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/webhooks/offerCreate/post/requestBody/content/application~1json/schema/properties/data/properties/offer
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /offer.info:
    post:
      summary: offer.info
      operationId: offerInfo
      description: >
        Returns details about a single offer by id


        **Requires the [`offersRead`](authentication#permissions-offerinfo)
        permission.**
      tags:
        - Offer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                offerId:
                  allOf:
                    - description: The id of the offer to fetch
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - offerId
      responses:
        '200':
          description: Responses for the offer.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            $ref: >-
                              #/webhooks/offerCreate/post/requestBody/content/application~1json/schema/properties/data/properties/offer
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /offer.list:
    post:
      summary: offer.list
      description: >
        Get a list of all offers with their latest version


        **Requires the [`offersRead`](authentication#permissions-offerlist)
        permission.**
      operationId: offerList
      tags:
        - Offer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
                - type: object
                  properties:
                    applicationId:
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        - description: >-
                            If provided, only returns the offers for the
                            application with the supplied id
      responses:
        '200':
          description: Responses for the offer.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/webhooks/offerCreate/post/requestBody/content/application~1json/schema/properties/data/properties/offer
                        required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /offer.start:
    post:
      summary: offer.start
      operationId: offerStart
      description: >
        The offer.start endpoint creates and returns an offer version instance
        that can be filled out and submitted

        using the `offer.create` endpoint. 


        **Requires the [`offersWrite`](authentication#permissions-offerstart)
        permission.**


        In order to create a new offer version for a candidate with an
        in-progress 

        offer process, you can call the `offer.start` endpoint and then call the
        `offer.create` endpoint to fill out the

        newly created offer version form.  
      tags:
        - Offer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                offerProcessId:
                  allOf:
                    - description: >-
                        The ID of the offer process to start. This value is the
                        id included in the response of the `offerProcess.start`
                        API.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - offerProcessId
      responses:
        '200':
          description: Responses for the offer.start endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              formDefinition:
                                type: object
                                properties:
                                  sections:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        title:
                                          type: string
                                        descriptionHtml:
                                          type: string
                                        descriptionPlain:
                                          type: string
                                        fields:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              isRequired:
                                                type: boolean
                                                example: true
                                                default: true
                                              descriptionHtml:
                                                type: string
                                              descriptionPlain:
                                                type: string
                                              field:
                                                type: object
                                                properties:
                                                  id:
                                                    $ref: >-
                                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                                  type:
                                                    type: string
                                                    example: String
                                                    description: The type of the form definition field.
                                                  path:
                                                    type: string
                                                    example: _systemfield_name
                                                  humanReadablePath:
                                                    type: string
                                                    example: Name
                                                  title:
                                                    type: string
                                                    example: Name
                                                  isNullable:
                                                    type: boolean
                                                    example: false
                                                    default: true
                                                  selectableValues:
                                                    type: object
                                                    properties:
                                                      label:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - label
                                                      - value
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /offerProcess.start:
    post:
      summary: offerProcess.start
      operationId: offerProcess.start
      description: >
        Starts an offer process for a candidate.


        **Requires the
        [`offersWrite`](authentication#permissions-offerprocessstart)
        permission.**
      tags:
        - Offer Process
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationId:
                  allOf:
                    - description: The id of the application to start an offer process for
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - applicationId
      responses:
        '200':
          description: Responses for the offerProcess.start endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: object
                            properties:
                              id:
                                allOf:
                                  - description: The id of the started offer process
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              applicationId:
                                allOf:
                                  - description: >-
                                      The id of the application the offer
                                      process was started for
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              status:
                                description: The status of the offer process
                                type: string
                                enum:
                                  - WaitingOnOfferCreation
                                  - WaitingOnApprovalStart
                                  - WaitingOnOfferApproval
                                  - WaitingOnCandidateResponse
                                  - CandidateAccepted
                                  - CandidateRejected
                                  - OfferCancelled
                            required:
                              - id
                              - applicationId
                              - status
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.info:
    post:
      summary: opening.info
      description: >-
        Retrieves an opening by its UUID.
              
        **Requires the [`jobsRead`](authentication#permissions-openinginfo)
        permission.**
      operationId: openinginfo
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - openingId
              properties:
                openingId:
                  type: string
                  description: The id of the opening
      responses:
        '200':
          description: Responses for the opening.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              openedAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                              closedAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                              isArchived:
                                $ref: >-
                                  #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                              archivedAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                              openingState:
                                type: string
                                enum:
                                  - Approved
                                  - Closed
                                  - Draft
                                  - Filled
                                  - Open
                              latestVersion:
                                type: object
                                properties:
                                  id:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  identifier:
                                    type: string
                                  description:
                                    type: string
                                  authorId:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  createdAt:
                                    $ref: >-
                                      #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                  teamId:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  jobIds:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  targetHireDate:
                                    type: string
                                  targetStartDate:
                                    type: string
                                  isBackfill:
                                    type: boolean
                                  employmentType:
                                    $ref: >-
                                      #/webhooks/jobPostingUpdate/post/requestBody/content/application~1json/schema/properties/data/properties/jobPosting/properties/employmentType
                                  locationIds:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  hiringTeam:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/paths/~1hiringTeam.addMember/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                                required:
                                  - id
                                  - identifier
                                  - description
                                  - authorId
                                  - createdAt
                                  - jobIds
                                  - isBackfill
                                  - employmentType
                                  - locationIds
                                  - hiringTeam
                            required:
                              - id
                              - isArchived
                              - openingState
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.list:
    post:
      summary: opening.list
      description: >-
        Lists openings.
              
        **Requires the [`jobsRead`](authentication#permissions-openinglist)
        permission.**
      operationId: openinglist
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cursor:
                  type: string
                  description: Opaque cursor indicating which page of results to fetch
                syncToken:
                  type: string
                  description: >-
                    Opaque token representing the last time a full set of
                    results was fetched.
      responses:
        '200':
          description: Responses for the opening.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.search:
    post:
      summary: opening.search
      description: >-
        Searches for openings by identifier.
              
        **Requires the [`jobsRead`](authentication#permissions-openingsearch)
        permission.**
      operationId: openingsearch
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
                  description: The identifier of the opening you want to search for
      responses:
        '200':
          description: Responses for the opening.search endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.create:
    post:
      summary: opening.create
      description: >-
        Creates an opening.
              
        **Requires the [`jobsWrite`](authentication#permissions-openingcreate)
        permission.**
      operationId: openingcreate
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: >-
                    jobIds,     targetHireDate,     targetStartDate,    
                    isBackfill,     employmentType,
                description:
                  type: string
                teamId:
                  type: string
                  description: >-
                    The id of the department or team associated with the
                    opening.
                locationIds:
                  type: array
                  description: The ids of the locations associated with the opening.
                  items:
                    type: string
                jobIds:
                  type: array
                  description: The ids of the jobs associated with the opening
                  items:
                    type: string
                targetHireDate:
                  type: string
                  description: >-
                    The date (in YYYY-MM-DD format) by which you intend to hire
                    against this opening.
                targetStartDate:
                  type: string
                  description: >-
                    The date (in YYYY-MM-DD format) by which you intend someone
                    hired against this opening will start employment.
                isBackfill:
                  type: boolean
                  description: >-
                    Whether this opening is intended to backfill a previous
                    employee
                  default: false
                employmentType:
                  type: string
                  description: The employment type for this opening
                  default: FullTime
                  enum:
                    - FullTime
                    - PartTime
                    - Intern
                    - Contract
                    - Temporary
                    - ''
                openingState:
                  type: string
                  description: The state the opening should be created in.
                  enum:
                    - Draft
                    - Approved
                    - Open
                    - Closed
      responses:
        '200':
          description: Responses for the opening.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.addJob:
    post:
      summary: opening.addJob
      description: >-
        Adds a job to an opening.
              
        **Requires the [`jobsWrite`](authentication#permissions-openingaddjob)
        permission.**
      operationId: openingaddjob
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - openingId
                - jobId
              properties:
                openingId:
                  type: string
                  description: The id of the opening
                jobId:
                  type: string
                  description: The id of the job to add
      responses:
        '200':
          description: Responses for the opening.addJob endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.removeJob:
    post:
      summary: opening.removeJob
      description: >-
        Removes a job from an opening.
              
        **Requires the
        [`jobsWrite`](authentication#permissions-openingremovejob) permission.**
      operationId: openingremovejob
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - openingId
                - jobId
              properties:
                openingId:
                  type: string
                  description: The id of the opening
                jobId:
                  type: string
                  description: The id of the job to remove from the opening.
      responses:
        '200':
          description: Responses for the opening.removeJob endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.setOpeningState:
    post:
      summary: opening.setOpeningState
      description: >-
        Sets the state of an opening.
              
        **Requires the
        [`jobsWrite`](authentication#permissions-openingsetopeningstate)
        permission.**
      operationId: openingsetopeningstate
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                openingId:
                  type: string
                  description: The id of the opening you want to update
                openingState:
                  type: string
                  description: The new state you want to update the opening to
                  enum:
                    - Draft
                    - Approved
                    - Open
                    - Closed
                closeReasonId:
                  type: string
                  description: >-
                    The id of the close reason if you are setting the state to
                    closed
      responses:
        '200':
          description: Responses for the opening.setOpeningState endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.setArchived:
    post:
      summary: opening.setArchived
      description: >-
        Sets the archived state of an opening.
              
        **Requires the
        [`jobsWrite`](authentication#permissions-openingsetarchived)
        permission.**
      operationId: openingsetarchived
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                openingId:
                  type: string
                  description: The id of the opening you want to archive
                archive:
                  type: boolean
                  description: The new archived state you want to update the opening to
      responses:
        '200':
          description: Responses for the opening.setArchived endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /opening.update:
    post:
      summary: opening.update
      description: >-
        Updates an opening.
              
        **Requires the [`jobsWrite`](authentication#permissions-openingupdate)
        permission.**
      operationId: openingupdate
      tags:
        - Openings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                openingId:
                  type: string
                  description: The openingId of the opening you want to update.
                identifier:
                  type: string
                  description: >-
                    jobIds,     targetHireDate,     targetStartDate,    
                    isBackfill,     employmentType,
                description:
                  type: string
                teamId:
                  type: string
                  description: >-
                    The id of the department or team associated with the
                    opening.
                targetHireDate:
                  type: string
                  description: >-
                    The date (in YYYY-MM-DD format) by which you intend to hire
                    against this opening.
                targetStartDate:
                  type: string
                  description: >-
                    The date (in YYYY-MM-DD format) by which you intend someone
                    hired against this opening will start employment.
                isBackfill:
                  type: boolean
                  description: >-
                    Whether this opening is intended to backfill a previous
                    employee
                  default: false
                employmentType:
                  type: string
                  description: The employment type for this opening
                  default: FullTime
                  enum:
                    - FullTime
                    - PartTime
                    - Intern
                    - Contract
                    - Temporary
                    - ''
      responses:
        '200':
          description: Responses for the opening.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1opening.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /referral.create:
    post:
      summary: referral.create
      operationId: referralCreate
      description: >
        Creates a referral


        **Requires the
        [`candidatesWrite`](authentication#permissions-referralcreate)
        permission.**
      tags:
        - Referral
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  allOf:
                    - description: The id of the referral form, from /referralForm.info
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                creditedToUserId:
                  allOf:
                    - description: The id of the user submitting the referral
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                fieldSubmissions:
                  type: array
                  items:
                    properties:
                      path:
                        type: string
                        description: The form field's "path" value
                      value:
                        type: string
                        description: >
                          This is often a primitive but for a referral job, it
                          should be { title: job.title, value: job.id }
                    required:
                      - path
                      - value
                createdAt:
                  allOf:
                    - description: >
                        An ISO date string to set the referral's createdAt
                        timestamp to. When this value isn't provided, the
                        createdAt timestamp defaults to the time the referral
                        was created.
                    - type: string
                      example: '2022-08-12T20:29:56.964Z'
                      format: date
              required:
                - id
                - creditedToUserId
                - fieldSubmissions
      responses:
        '200':
          description: Responses for the referral.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            $ref: >-
                              #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /referralForm.info:
    post:
      summary: referralForm.info
      operationId: referralFormInfo
      description: >
        Fetches the default referral form or creates a default referral form if
        none exists.


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-referralforminfo)
        permission.**
      tags:
        - Referral Form
      responses:
        '200':
          description: Responses for the referral.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  title:
                                    type: string
                                    description: The title of the form
                                  isArchived:
                                    $ref: >-
                                      #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                                  formDefinition:
                                    $ref: >-
                                      #/paths/~1offer.start/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/properties/formDefinition
                                required:
                                  - id
                                  - organizationId
                                  - title
                                  - isArchived
                                  - isDefaultForm
                                  - formDefinition
                              - type: object
                                properties:
                                  organizationId:
                                    $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                  isDefaultForm:
                                    type: boolean
                                    example: true
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /source.list:
    post:
      summary: source.list
      description: >
        List all sources


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-sourcelist)
        permission.**
      operationId: sourcelist
      tags:
        - Source
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                includeArchived:
                  type: boolean
                  description: When true, includes archived items
                  default: false
      responses:
        '200':
          description: Responses for the source.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  $ref: >-
                                    #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                title:
                                  type: string
                                  example: Applied
                                isArchived:
                                  $ref: >-
                                    #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                                sourceType:
                                  type: object
                                  properties:
                                    id:
                                      $ref: >-
                                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                                    title:
                                      type: string
                                      example: Inbound
                                    isArchived:
                                      $ref: >-
                                        #/paths/~1interviewPlan.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items/properties/isArchived
                                  required:
                                    - id
                                    - title
                                    - isArchived
                              required:
                                - id
                                - title
                                - isArchived
                          moreDataAvailable:
                            type: boolean
                            example: false
                      - required:
                          - results
                          - moreDataAvailable
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /surveyFormDefinition.info:
    post:
      summary: surveyFormDefinition.info
      operationId: surveyFormDefinitionInfo
      description: >
        Returns details about a single survey form definition by id


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-surveyformdefinitioninfo)
        permission.**
      tags:
        - Survey Form Definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                surveyFormDefinitionId:
                  allOf:
                    - description: The id of the survey form to fetch
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - surveyFormDefinitionId
      responses:
        '200':
          description: Responses for the surveyFormDefinition.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            allOf:
                              - $ref: >-
                                  #/paths/~1referralForm.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/allOf/0
                              - type: object
                                properties:
                                  surveyType:
                                    $ref: >-
                                      #/paths/~1surveySubmission.list/post/requestBody/content/application~1json/schema/allOf/0/properties/surveyType
                            required:
                              - id
                              - title
                              - isArchived
                              - formDefinition
                              - surveyType
                        required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /surveyFormDefinition.list:
    post:
      summary: surveyFormDefinition.list
      operationId: surveyFormDefinitionList
      description: >
        Lists all survey form definitions.


        **Requires the
        [`hiringProcessMetadataRead`](authentication#permissions-surveyformdefinitionlist)
        permission.**
      tags:
        - Survey Form Definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: Responses for the surveyFormDefinition.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1surveyFormDefinition.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /surveyRequest.create:
    post:
      summary: surveyRequest.create
      description: >
        This endpoint generates a survey request and returns a survey URL. You
        can send this URL to a candidate to allow them to complete a survey. 


        **Requires the
        [`candidatesWrite`](authentication#permissions-surveyrequestcreate)
        permission.**


        **Note that calling this endpoint will not automatically email the
        survey to the candidate.** It simply creates the request and gives you a
        URL to share with a candidate.
      operationId: surveyRequestCreate
      tags:
        - Survey Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - candidateId
                - applicationId
                - surveyFormDefinitionId
              properties:
                candidateId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id of the candidate to create a survey request for.
                applicationId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >-
                        The id of the application to associate with the survey
                        request.
                surveyFormDefinitionId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: >
                        The ID of the survey form that the candidate will see
                        when they visit the URL returned in the `surveyURL`
                        property of the API response. 

                        Survey forms IDs can be obtained using the
                        `surveyFormDefinition.list` endpoint. 
      responses:
        '200':
          description: Responses for the surveyRequest.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                allOf:
                                  - description: |
                                      The id of the survey request
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              candidateId:
                                allOf:
                                  - description: >
                                      The id of the candidate the survey request
                                      is for
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              applicationId:
                                allOf:
                                  - description: >
                                      The id of the application associated with
                                      the survey request
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              surveyFormDefinitionId:
                                allOf:
                                  - description: >
                                      The id of the survey form the candidate
                                      will fill out when they take the survey
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              surveyUrl:
                                type: string
                                example: >-
                                  https://you.ashbyhq.com/ashby/survey/3f20b73e-abec-4d62-ba6f-04f2f985f7dd
                                description: >
                                  The URL that the candidate can visit to take
                                  the survey.
                            required:
                              - id
                              - candidateId
                              - applicationId
                              - surveyFormDefinitionId
                              - surveyUrl
                      - required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /surveySubmission.list:
    post:
      summary: surveySubmission.list
      operationId: surveySubmissionList
      description: >
        Lists all survey submissions of a given `surveyType`.


        **Requires the
        [`candidatesRead`](authentication#permissions-surveySubmissionList)
        permission.**
      tags:
        - Survey Submission
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  description: |
                    The type of survey submissions to fetch. 
                  properties:
                    surveyType:
                      type: string
                      enum:
                        - CandidateDataConsent
                        - CandidateExperience
                        - Diversity
                        - EEOC
                        - Questionnaire
                  required:
                    - surveyType
                - $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
      responses:
        '200':
          description: Responses for the surveySubmission.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/webhooks/surveySubmit/post/requestBody/content/application~1json/schema/properties/data/properties/surveySubmission
                    required:
                      - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /user.info:
    post:
      summary: user.info
      description: >
        Get an Ashby user by id


        **Requires the [`organizationRead`](authentication#permissions-userinfo)
        permission.**
      operationId: userInfo
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  allOf:
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    - description: The id to lookup the user
              required:
                - userId
      responses:
        '200':
          description: Responses for the user.info endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              firstName:
                                type: string
                                example: Test
                              lastName:
                                type: string
                                example: User
                              email:
                                $ref: >-
                                  #/paths/~1candidate.create/post/requestBody/content/application~1json/schema/properties/email/allOf/0
                              globalRole:
                                type: string
                                enum:
                                  - Organization Admin
                                  - Elevated Access
                                  - Limited Access
                                  - External Recruiter
                              isEnabled:
                                type: boolean
                              updatedAt:
                                $ref: >-
                                  #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                            required:
                              - id
                              - firstName
                              - lastName
                              - globalRole
                              - isEnabled
                              - updatedAt
                        required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /user.list:
    post:
      summary: user.list
      description: >
        Get a list of all Ashby users


        **Requires the [`organizationRead`](authentication#permissions-userlist)
        permission.**


        The `globalRole` property in the response specifies the user's access
        level in Ashby.

        For more details on the permissions granted with each role, see our
        [documentation
        here](https://ashbyhq.notion.site/Ashby-Permissions-a48eda7c07ad46f0bcd2b3f39301a9de#c64a4db5e7f4432bbe6691b91d3f0c62).
      operationId: userList
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: >-
                    #/paths/~1candidate.list/post/requestBody/content/application~1json/schema
                - type: object
                  properties:
                    includeDeactivated:
                      type: boolean
                      default: false
                      description: >
                        If set to true, deactivated users are included in the
                        response. 

                        By default, deactivated users are not included.
      responses:
        '200':
          description: Responses for the user.list endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1user.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                        required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /user.search:
    post:
      summary: user.search
      description: >
        Search for an Ashby user by email address


        **Requires the
        [`organizationRead`](authentication#permissions-usersearch)
        permission.**
      operationId: userSearch
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email to use to search for the user
                  example: test@ashbyhq.com
              required:
                - email
      responses:
        '200':
          description: Responses for the user.search endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                        properties:
                          results:
                            type: array
                            items:
                              $ref: >-
                                #/paths/~1user.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                        required:
                          - results
                  - title: Error response
                    $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /webhook.create:
    post:
      summary: webhook.create
      description: >
        Creates a webhook setting.


        **Requires the
        [`apiKeysWrite`](authentication#permissions-webhookcreate) scope.**
      operationId: webhookcreate
      tags:
        - Webhook
      requestBody:
        content:
          application/json:
            schema:
              properties:
                webhookType:
                  type: string
                  enum:
                    - applicationSubmit
                    - applicationUpdate
                    - candidateHire
                    - candidateStageChange
                    - candidateDelete
                    - candidateMerge
                    - interviewPlanTransition
                    - interviewScheduleCreate
                    - interviewScheduleUpdate
                    - jobPostingUpdate
                    - jobPostingPublish
                    - jobPostingUnpublish
                    - offerCreate
                    - offerUpdate
                    - offerDelete
                    - pushToHRIS
                    - surveySubmit
                requestUrl:
                  type: string
                  description: The URL the webhook will send requests to.
                secretToken:
                  type: string
                  description: >
                    The secret token used to sign the webhook request. See our
                    documentation
                    [here](https://developers.ashbyhq.com/docs/authenticating-webhooks)
                    for more information.
              required:
                - webhookType
                - requestUrl
                - secretToken
      responses:
        '200':
          description: Responses from the webhook.create endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              id:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              enabled:
                                type: boolean
                                description: Whether or not the webhook setting is enabled.
                              requestUrl:
                                type: string
                                description: The URL the webhook will send requests to.
                                example: https://example.com/webhook
                              secretToken:
                                type: string
                                description: >
                                  The secret token used to sign the webhook
                                  request. See our documentation
                                  [here](https://developers.ashbyhq.com/docs/authenticating-webhooks)
                                  for more information.
                                example: 0c2f9463f87641919f8106a2c49d7a57
                              webhookType:
                                type: string
                                description: The type of webhook.
                                $ref: >-
                                  #/paths/~1webhook.create/post/requestBody/content/application~1json/schema/properties/webhookType
                            required:
                              - id
                              - enabled
                              - requestUrl
                              - secretToken
                              - webhookType
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /webhook.update:
    post:
      summary: webhook.update
      description: >
        Updates a webhook setting. One of `enabled`, `requestUrl`, or
        `secretToken` must be provided.


        **Requires the
        [`apiKeysWrite`](authentication#permissions-webhookcreate) permission.**
      operationId: webhookupdate
      tags:
        - Webhook
      requestBody:
        content:
          application/json:
            schema:
              properties:
                webhookId:
                  allOf:
                    - description: The id of the webhook setting to update.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                enabled:
                  type: boolean
                  description: Whether or not the webhook is enabled.
                requestUrl:
                  type: string
                  description: The URL the webhook will send requests to.
                secretToken:
                  type: string
                  description: >
                    The secret token used to sign the webhook request. See our
                    documentation
                    [here](https://developers.ashbyhq.com/docs/authenticating-webhooks)
                    for more information.
              required:
                - webhookId
      responses:
        '200':
          description: Responses from the webhook.update endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            $ref: >-
                              #/paths/~1webhook.create/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
  /webhook.delete:
    post:
      summary: webhook.delete
      description: >
        Deletes a webhook setting.


        **Requires the
        [`apiKeysWrite`](authentication#permissions-webhookcreate) permission.**
      operationId: webhookdelete
      tags:
        - Webhook
      requestBody:
        content:
          application/json:
            schema:
              properties:
                webhookId:
                  allOf:
                    - description: The id of the webhook setting to delete.
                    - $ref: >-
                        #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
              required:
                - webhookId
      responses:
        '200':
          description: Responses from the webhook.delete endpoint
          content:
            application/json:
              schema:
                oneOf:
                  - title: Success response
                    allOf:
                      - $ref: >-
                          #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/0
                      - type: object
                      - properties:
                          results:
                            type: object
                            properties:
                              webhookId:
                                allOf:
                                  - description: >-
                                      The id of the webhook setting that was
                                      deleted.
                                  - $ref: >-
                                      #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                      - required:
                          - results
                  - $ref: >-
                      #/paths/~1job.info/post/responses/200/content/application~1json/schema/oneOf/1
webhooks:
  applicationSubmit:
    post:
      summary: applicationSubmit
      description: Triggered when a candidate submits an application
      operationId: applicationSubmitWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - applicationSubmit
                data:
                  type: object
                  properties:
                    application:
                      $ref: >-
                        #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  applicationUpdate:
    post:
      summary: applicationUpdate
      description: Triggered when there's an update to an application
      operationId: applicationUpdateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - applicationUpdate
                data:
                  type: object
                  properties:
                    application:
                      $ref: >-
                        #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  candidateHire:
    post:
      summary: candidateHire
      description: |
        Triggered when a candidate is hired. 
        Includes the application and most recent accepted offer (if one exists).
      operationId: candidateHireWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - candidateHire
                data:
                  type: object
                  properties:
                    application:
                      $ref: >-
                        #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
                    offer:
                      $ref: >-
                        #/webhooks/offerCreate/post/requestBody/content/application~1json/schema/properties/data/properties/offer
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  candidateStageChange:
    post:
      summary: candidateStageChange
      description: Triggered when an a candidate change stages in an application
      operationId: candidateStageChangeWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - candidateStageChange
                data:
                  type: object
                  properties:
                    application:
                      $ref: >-
                        #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  candidateDelete:
    post:
      summary: candidateDelete
      description: |
        Triggered when a candidate is deleted. 
        Includes the deleted candidate id.
      operationId: candidateDeleteWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - candidateDelete
                data:
                  type: object
                  properties:
                    candidate:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          description: The unique id of the deleted candidate
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  candidateMerge:
    post:
      summary: candidateMerge
      description: |
        Triggered when a candidate is merged. 
        Includes the deleted candidate's id and merged candidate data.
      operationId: candidateMergeWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - candidateMerge
                data:
                  type: object
                  properties:
                    deletedCandidate:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          description: The unique id of the deleted candidate
                    mergedCandidate:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          description: The unique id of the final merged candidate
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  interviewPlanTransition:
    post:
      summary: interviewPlanTransition
      description: >-
        Triggered when a job's interview plan is switched to a different plan.
        Sends interview plan data and ids for the interview stage mappings
      operationId: interviewPlanTransitionWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - interviewPlanTransition
                data:
                  type: object
                  properties:
                    jobId:
                      description: >-
                        The id of the job for which the interview plan has been
                        switched
                      allOf:
                        - $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                    fromInterviewPlan:
                      description: The interview plan the job was previously referencing
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        title:
                          type: string
                          example: Custom Interview Plan
                      required:
                        - id
                        - title
                    toInterviewPlan:
                      description: The interview plan the job is now referencing
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        title:
                          type: string
                          example: Engineering Interview Plan
                      required:
                        - id
                        - title
                    interviewStageMappings:
                      description: >-
                        The mapping of a stage from the previous interview plan
                        to a stage on the new interview plan
                      type: array
                      items:
                        type: object
                        properties:
                          fromInterviewStageId:
                            $ref: >-
                              #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          toInterviewStageId:
                            $ref: >-
                              #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        required:
                          - id
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  interviewScheduleCreate:
    post:
      summary: interviewScheduleCreate
      description: The webhook is called when an interview schedule is created.
      operationId: interviewScheduleCreateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - interviewScheduleCreate
                data:
                  type: object
                  properties:
                    interviewSchedule:
                      type: object
                      required:
                        - id
                        - status
                        - applicationId
                        - interviewStageId
                      properties:
                        id:
                          type: string
                          description: The id of the interview schedule
                        status:
                          type: string
                          enum:
                            - NeedsScheduling
                            - WaitingOnCandidateBooking
                            - WaitingOnCandidateAvailability
                            - CandidateAvailabilitySubmitted
                            - Scheduled
                            - WaitingOnFeedback
                            - Complete
                            - Cancelled
                          description: The status of the interview schedule
                        applicationId:
                          type: string
                          description: >-
                            The id of the application associated with the
                            interview schedule
                        interviewStageId:
                          type: string
                          description: >-
                            The id of the interview stage associated with the
                            interview schedule
                        interviewEvents:
                          type: array
                          description: >-
                            All scheduled interview events associated with the
                            interview schedule
                          items:
                            $ref: >-
                              #/paths/~1interviewEvent.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  interviewScheduleUpdate:
    post:
      summary: interviewScheduleUpdate
      description: >-
        The webhook is called when an interview schedule is updated, including
        when interviews that are part of the schedule are scheduled, updated, or
        cancelled.
      operationId: interviewScheduleUpdateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - interviewScheduleUpdate
                data:
                  type: object
                  properties:
                    interviewSchedule:
                      $ref: >-
                        #/webhooks/interviewScheduleCreate/post/requestBody/content/application~1json/schema/properties/data/properties/interviewSchedule
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  jobCreate:
    post:
      summary: jobCreate
      description: Triggered when a job is created
      operationId: jobCreateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - jobCreate
                data:
                  type: object
                  properties:
                    job:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        title:
                          type: string
                        confidential:
                          type: boolean
                        status:
                          $ref: >-
                            #/paths/~1job.setStatus/post/requestBody/content/application~1json/schema/properties/status/allOf/1
                        employmentType:
                          type: string
                        locationId:
                          allOf:
                            - description: The id of the location of the job
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        departmentId:
                          allOf:
                            - description: >-
                                The id of the department or team associated with
                                the job
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        defaultInterviewPlanId:
                          allOf:
                            - description: >
                                The id of the default interview plan for this
                                job posting. 

                                A job cannot be opened without a default
                                interview plan.
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        interviewPlanIds:
                          type: array
                          items:
                            allOf:
                              - $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              - description: >-
                                  The ids of all interview plans associated with
                                  a job
                        customFields:
                          type: array
                          description: An array of custom fields associated with the job
                          items:
                            $ref: >-
                              #/paths/~1customField.setValue/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                        jobPostingIds:
                          type: array
                          items:
                            allOf:
                              - $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                              - description: >-
                                  The ids of all job postings associated with
                                  the job
                        customRequisitionId:
                          allOf:
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            - description: The custom requisition id for a job
                        hiringTeam:
                          type: array
                          items:
                            $ref: >-
                              #/paths/~1hiringTeam.addMember/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                        updatedAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                        openedAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                        closedAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                      required:
                        - id
                        - title
                        - confidential
                        - status
                        - employmentType
                        - updatedAt
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  jobUpdate:
    post:
      summary: jobUpdate
      description: >-
        Triggered when a job is updated. Also fires when a job's interview plan
        is changed.
      operationId: jobUpdateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - jobUpdate
                data:
                  type: object
                  properties:
                    job:
                      $ref: >-
                        #/webhooks/jobCreate/post/requestBody/content/application~1json/schema/properties/data/properties/job
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  jobPostingUpdate:
    post:
      summary: jobPostingUpdate
      description: Triggered when a job posting is updated
      operationId: jobPostingUpdateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - jobPostingUpdate
                data:
                  type: object
                  properties:
                    jobPosting:
                      type: object
                      properties:
                        id:
                          allOf:
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            - description: The job posting's id
                        title:
                          type: string
                          example: Posting Title
                          description: The job posting's title
                        jobId:
                          allOf:
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            - description: >-
                                The id of the job associated with the job
                                posting
                        departmentName:
                          type: string
                          example: Engineering department
                          description: >-
                            The name of the department associated with the job
                            posting
                        teamName:
                          type: string
                          example: Data engineering team
                          description: >
                            The name of the team associated with the job
                            posting. `teamName` and `departmentName` will

                            be the same if the team does not have a parent team
                            specified.
                        locationName:
                          type: string
                          example: Springfield
                          description: >-
                            The name of the primary location associated with the
                            job posting
                        locationIds:
                          type: object
                          description: >-
                            An object containing the ids of all locations
                            associated with the job posting
                          properties:
                            primaryLocationId:
                              $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            secondaryLocationIds:
                              type: array
                              items:
                                $ref: >-
                                  #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          required:
                            - primaryLocationId
                            - secondaryLocationId
                        employmentType:
                          type: string
                          enum:
                            - FullTime
                            - PartTime
                            - Intern
                            - Contract
                            - Temporary
                        isListed:
                          type: boolean
                          example: true
                          description: Whether or not the job posting is listed
                        publishedDate:
                          type: string
                          example: '2021-11-19'
                          description: The date the job posting was published
                        applicationDeadline:
                          type: string
                          example: '2024-08-12T20:00:00.000Z'
                          format: date
                          description: >-
                            The date and time when applications will no longer
                            be accepted
                        externalLink:
                          type: string
                          example: >-
                            https://jobs.ashbyhq.com/6eec82ac-9713-512d-ac2e-405618935375/d5a6bc97-4259-4bc5-b3fe-6d3edfd538e3
                          description: The external link to the job posting
                        compensationTierSummary:
                          type: string
                          example: >-
                            $120K – $270K • 0% – 2.25% • Offers Bonus • Multiple
                            Ranges
                          description: >
                            A summary of *all* the job posting's valid
                            compensation tiers in the same format shown on

                            Ashby-hosted Job Boards
                        shouldDisplayCompensationOnJobBoard:
                          type: boolean
                          example: true
                          description: >
                            Whether the job posting's settings specify that
                            compensation should be shown to applicants

                            when the posting is listed among other job postings
                        updatedAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                      required:
                        - id
                        - title
                        - jobId
                        - departmentName
                        - teamName
                        - locationName
                        - locationIds
                        - employmentType
                        - isListed
                        - publishedDate
                        - externalLink
                        - shouldDisplayCompensationOnJobBoard
                        - updatedAt
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  jobPostingPublish:
    post:
      summary: jobPostingPublish
      description: Triggered when a job posting is published
      operationId: jobPostingPublishWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - jobPostingPublish
                data:
                  type: object
                  properties:
                    jobPosting:
                      $ref: >-
                        #/webhooks/jobPostingUpdate/post/requestBody/content/application~1json/schema/properties/data/properties/jobPosting
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  jobPostingUnpublish:
    post:
      summary: jobPostingUnpublish
      description: Triggered when a job posting is unpublished
      operationId: jobPostingUnpublishWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - jobPostingUnpublish
                data:
                  type: object
                  properties:
                    jobPosting:
                      $ref: >-
                        #/webhooks/jobPostingUpdate/post/requestBody/content/application~1json/schema/properties/data/properties/jobPosting
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  offerCreate:
    post:
      summary: offerCreate
      description: Triggered when a new offer process is created for a candidate
      operationId: offerCreateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - offerCreate
                data:
                  type: object
                  properties:
                    offer:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        decidedAt:
                          type: string
                        applicationId:
                          allOf:
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            - description: >-
                                The id of the application associated with the
                                offer
                        acceptanceStatus:
                          type: string
                          enum:
                            - Accepted
                            - Declined
                            - Pending
                            - Created
                            - Cancelled
                        latestVersion:
                          type: object
                          properties:
                            id:
                              $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            startDate:
                              allOf:
                                - $ref: >-
                                    #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                - description: The start date of the offer
                            salary:
                              type: object
                              properties:
                                currencyCode:
                                  type: string
                                  description: A valid ISO 4217 currency code
                                value:
                                  type: number
                                  description: >-
                                    An integer. The salary specified by the
                                    offer.
                            createdAt:
                              allOf:
                                - $ref: >-
                                    #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                                - description: The time the offer was created
                            customFields:
                              type: array
                              items:
                                $ref: >-
                                  #/paths/~1customField.setValue/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                            fileHandles:
                              type: array
                              description: >-
                                An array of file handles associated with the
                                offer. If an offer letter has been generated,
                                this array includes the file handles for the
                                unsigned .pdf and .docx versions of the letter,
                                as well as for the signed .pdf if it exists.
                              items:
                                $ref: >-
                                  #/paths/~1candidate.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/properties/fileHandles/items
                          required:
                            - id
                            - createdAt
                        versions:
                          type: array
                          items:
                            $ref: >-
                              #/webhooks/offerCreate/post/requestBody/content/application~1json/schema/properties/data/properties/offer/properties/latestVersion
                      required:
                        - id
                        - applicationId
                        - acceptanceStatus
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  offerDelete:
    post:
      summary: offerDelete
      description: Triggered when an offer process is deleted
      operationId: offerDeleteWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - offerDelete
                data:
                  type: object
                  properties:
                    offer:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        applicationId:
                          allOf:
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            - description: >-
                                The id of the application the offer was
                                associated with.
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  offerUpdate:
    post:
      summary: offerUpdate
      description: Triggered when an offer is updated
      operationId: offerUpdateWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - offerUpdate
                data:
                  type: object
                  properties:
                    offer:
                      $ref: >-
                        #/webhooks/offerCreate/post/requestBody/content/application~1json/schema/properties/data/properties/offer
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  pushToHRIS:
    post:
      summary: pushToHRIS
      description: Triggered when a candidate is pushed to an HRIS system
      operationId: pushToHRISWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - pushToHRIS
                data:
                  type: object
                  properties:
                    application:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        createdAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                        updatedAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                        status:
                          type: string
                          enum:
                            - Hired
                            - Archived
                            - Active
                            - Lead
                          description: The status of the application
                        customFields:
                          type: array
                          items:
                            $ref: >-
                              #/paths/~1customField.setValue/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                        candidate:
                          type: object
                          description: The candidate associated with the application
                          properties:
                            id:
                              $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            name:
                              type: string
                              example: James
                            primaryEmailAddress:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: >-
                                    The email address or phone number of the
                                    candidate
                                type:
                                  enum:
                                    - Personal
                                    - Work
                                    - Other
                                  description: The type of the contact info
                                isPrimary:
                                  type: boolean
                                  description: >-
                                    Whether the contact info is the primary
                                    email or phone number
                              required:
                                - value
                                - type
                                - isPrimary
                              example:
                                value: test@ashbyhq.com
                                type: Work
                                isPrimary: true
                            primaryPhoneNumber:
                              allOf:
                                - $ref: >-
                                    #/webhooks/pushToHRIS/post/requestBody/content/application~1json/schema/properties/data/properties/application/properties/candidate/properties/primaryEmailAddress
                                - example:
                                    value: 222-222-3344
                                    type: Work
                                    isPrimary: true
                          required:
                            - id
                            - name
                        currentInterviewStage:
                          $ref: >-
                            #/paths/~1interviewStage.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                        source:
                          $ref: >-
                            #/paths/~1source.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results/items
                        archiveReason:
                          $ref: >-
                            #/paths/~1archiveReason.list/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/items
                        job:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 4071538b-3cac-4fbf-ac76-f78ed250ffdd
                            title:
                              type: string
                              example: First Designer
                            locationId:
                              $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            departmentId:
                              $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                          required:
                            - id
                            - title
                        creditedToUser:
                          $ref: >-
                            #/paths/~1user.info/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results
                        hiringTeam:
                          type: array
                          items:
                            $ref: >-
                              #/paths/~1hiringTeam.addMember/post/responses/200/content/application~1json/schema/oneOf/0/allOf/2/properties/results
                        appliedViaJobPostingId:
                          allOf:
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                            - description: >-
                                The id of the job posting the candidate applied
                                through
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - candidate
                        - status
                        - currentInterviewStage
                        - job
                        - hiringTeam
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  ping:
    post:
      summary: ping
      operationId: pingWebhook
      description: Called to check that the webhook URL is live
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  type: string
                  enum:
                    - ping
                data:
                  type: object
                  properties:
                    webhookActionType:
                      description: >-
                        The type of action that triggered the webhook—in this
                        case, a ping
                      type: string
                      enum:
                        - ping
                  required:
                    - webhookActionType
              required:
                - action
                - data
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
  surveySubmit:
    post:
      summary: surveySubmit
      description: >
        The webhook is triggered when a candidate submits a non-anonymous
        survey. It will not fire for anonymous survey submissions.


        Depending on the type of survey that was submitted, survey responses may
        be included in the webhook payload:
          - **Questionnaires**, **Candidate Data Consent** - Survey responses will be included in the payload.
          - **Candidate Experience** - If the submission is not anonymous, survey responses will be included in the payload. If the submission is anonymous, the webhook will not trigger.
          - **Diversity Surveys**, **EEOC Surveys** - Survey responses will never be included in the payload.

        If survey responses are included in the payload, the `submittedValues`
        field will contain the submitted answers in an object where each key is
        the path of the field and the value is the value submitted for that
        field.
      operationId: surveySubmitWebhook
      tags:
        - Webhook Payloads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - data
              properties:
                action:
                  type: string
                  enum:
                    - surveySubmit
                data:
                  type: object
                  properties:
                    surveySubmission:
                      type: object
                      properties:
                        id:
                          $ref: >-
                            #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        submittedAt:
                          $ref: >-
                            #/paths/~1referral.create/post/requestBody/content/application~1json/schema/properties/createdAt/allOf/1
                        candidateId:
                          allOf:
                            - description: The id of the candidate who submitted the survey
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        applicationId:
                          allOf:
                            - description: >-
                                The id of the application that the survey
                                submission is associated with
                            - $ref: >-
                                #/paths/~1candidate.createNote/post/requestBody/content/application~1json/schema/properties/candidateId
                        surveyType:
                          $ref: >-
                            #/paths/~1surveySubmission.list/post/requestBody/content/application~1json/schema/allOf/0/properties/surveyType
                        formDefinition:
                          $ref: >-
                            #/paths/~1offer.start/post/responses/200/content/application~1json/schema/oneOf/0/allOf/1/properties/results/properties/formDefinition
                        submittedValues:
                          type: object
                          example:
                            _systemfield_name: Joe Smith
                      required:
                        - id
                        - submittedAt
                        - candidateId
                        - surveyType
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      security:
        - WebhookSignature: []
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: >
        Use HTTP Basic Auth to authenticate with our API. You must send your API
        key with every request. 

        Put your API key as the basic auth username and leave the password
        blank.
    WebhookSignature:
      type: apiKey
      in: header
      name: Ashby-Signature
      description: >
        [Optional] If you provide a secret token when configuring your webhook,
        this will be used to create a digest of the JSON payload sent with each
        webhook request.

        The digest will be included in the request under the `Ashby-Signature`
        http header.


        It will look like this:

        `Ashby-Signature:
        sha256=f3124911d2956f10aa3a49c43a88bdf13bba846e94f0ae2bd7c034f90239bd04`


        The part before the = indicates the algorithm that was used to compute
        the hash digest.
security:
  - BasicAuth: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 65c4fae0fd3df5002cba9b10
