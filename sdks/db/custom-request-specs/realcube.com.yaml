openapi: 3.0.0
info:
  version: 1.0.0
  title: REALCUBE API
  description: >-
    This API allows developers to communicate with the REALCUBE platform. Admins
    can also access the [admin area](https://api.realcube.com).
  contact:
    name: REALCUBE GmbH
    email: uwe.forgber@realcube.com
externalDocs:
  description: 'Documentation: Developer Integration Workflow'
  url: /api/v1/docs/integration_workflow
security:
  - api_key: []
    oauth:
      - app_category_read
      - app_config_read
      - app_config_write
      - app_config_destroy
      - app_data_repository_read
      - app_data_repository_write
      - app_data_repository_destroy
      - app_subscription_read
      - app_subscription_write
      - app_subscription_destroy
      - app_read
      - app_write
      - app_destroy
      - contract_addition_read
      - contract_addition_write
      - contract_addition_destroy
      - contract_grant_read
      - contract_grant_write
      - contract_grant_destroy
      - contract_membership_cost_read
      - contract_membership_cost_write
      - contract_membership_cost_destroy
      - contract_membership_write
      - contract_membership_destroy
      - contract_read
      - contract_write
      - contract_destroy
      - cost_type_read
      - cost_type_write
      - cost_type_destroy
      - security_deposit_write
      - security_deposit_destroy
      - report_account_schema_read
      - report_account_schema_write
      - report_account_schema_destroy
      - report_template_read
      - report_template_write
      - report_template_destroy
      - department_read
      - department_write
      - department_destroy
      - manufacturer_read
      - manufacturer_write
      - manufacturer_destroy
      - room_and_zone_type_read
      - room_read
      - room_write
      - room_destroy
      - zone_write
      - zone_destroy
      - level_read
      - level_write
      - level_destroy
      - facility_read
      - facility_write
      - facility_destroy
      - facility_type_read
      - plan_version_write
      - plan_version_destroy
      - plan_read
      - plan_write
      - plan_destroy
      - plan_config_read
      - activity_read
      - activity_write
      - activity_destroy
      - attachment_write
      - attachment_destroy
      - building_filter_setting_read
      - building_filter_setting_write
      - building_filter_setting_destroy
      - building_save_filter_read
      - building_save_filter_write
      - building_save_filter_destroy
      - building_type_read
      - building_unit_membership_write
      - building_unit_membership_destroy
      - building_unit_type_read
      - building_unit_type_write
      - building_unit_type_destroy
      - building_unit_read
      - building_unit_write
      - building_unit_destroy
      - building_read
      - building_write
      - building_destroy
      - customer_account_config_read
      - customer_account_config_write
      - customer_account_schema_read
      - customer_account_schema_write
      - customer_attributes_schema_membership_read
      - customer_attributes_schema_membership_write
      - customer_attributes_schema_read
      - customer_attributes_schema_write
      - image_write
      - image_destroy
      - lot_read
      - lot_write
      - lot_destroy
      - organisation_config_read
      - organisation_config_write
      - organisation_membership_read
      - organisation_membership_write
      - organisation_membership_destroy
      - organisation_read
      - organisation_write
      - person_read
      - person_write
      - person_destroy
      - person_membership_write
      - person_membership_destroy
      - property_read
      - property_write
      - property_destroy
      - property_type_read
      - user_write
      - user_destroy
      - vpi_index_read
      - credential_read
      - dashboard_config_read
      - dashboard_config_write
      - dashboard_config_destroy
      - time_dependent_attribute_read
      - time_dependent_attribute_write
      - time_dependent_attribute_destroy
      - ep_code_combination_read
      - customer_account_write
tags:
  - name: users
    description: Benutzer
  - name: dashboard_configs
    description: Dashboard-Konfigurationen
  - name: credentials
    description: Berechtigungsnachweise
  - name: customer_accounts
    description: Kundenkonto
  - name: customer_account_translations
    description: Kundenkontoübersetzungen
  - name: customer_account_attribute_groups
    description: Kundenkonto-Attributgruppen
  - name: customer_account_category_configs
    description: Kundenkontokategorie-Konfigurationen
  - name: organisations
    description: Organisation
  - name: organisation_memberships
    description: Benutzer Zugehörigkeit zu einer Organisation
  - name: organisation_configs
    description: Schemakonfiguration zu einer Organisation
  - name: plans
    description: Pläne
  - name: plan_configs
    description: Plan-Konfigurationen
  - name: plan_versions
    description: Plan Versionen
  - name: apps
    description: Anwendungen
  - name: app_categories
    description: Anwendungs-Kategorien
  - name: app_subscriptions
    description: Abonnements für Anwendungen
  - name: app_configs
    description: Anwendungs-Konfigurationen
  - name: app_data_repositories
    description: App-Daten-Repository
  - name: customer_account_configs
    description: Kundenspezifische Konfiguration
  - name: customer_attributes_schemas
    description: Kundenspezifische Attribute
  - name: customer_attributes_schema_memberships
    description: Zugehörigkeit der kundenspezifischen Attribute
  - name: customer_account_schemas
    description: Kundenspezifisches Schema
  - name: property_types
    description: Liegenschaftstyp
  - name: properties
    description: Liegenschaft
  - name: property_managers
    description: Liegenschaft Managers
  - name: lots
    description: Grundstück
  - name: building_types
    description: Asset Klasse
  - name: building_filter_settings
    description: Filtereinstellungen
  - name: building_save_filters
    description: Filter speichern
  - name: buildings
    description: Gebäude
  - name: building_unit_types
    description: Einheit Klasse
  - name: building_units_finances
    description: Einheit Finanzen
  - name: building_units
    description: Einheit
  - name: building_unit_memberships
    description: Zugehörigkeit der Einheit zu Gebäude
  - name: people
    description: Die Leute
  - name: person_memberships
    description: Benutzer Zugehörigkeit zu einer Person
  - name: contracts
    description: Die Verträge
  - name: contract_additions
    description: Ergänzungen zu einer Contract
  - name: contract_grants
    description: Zuschüsse zu einer Contract
  - name: contract_memberships
    description: Benutzer Zugehörigkeit zu einer Contract
  - name: contract_membership_costs
    description: Mitgliedschaftskosten zu einer Contract Mitgliedschaft
  - name: security_deposits
    description: Kaution
  - name: cost_types
    description: Kostenarten
  - name: report_templates
    description: Die Berichtsvorlagen
  - name: report_account_schemas
    description: Kontoschema-Bericht
  - name: levels
    description: Stockwerk
  - name: room_and_zone_types
    description: Raum- und Flächenart
  - name: rooms
    description: Raum
  - name: zones
    description: Fläche
  - name: departments
    description: Anlagengruppe
  - name: manufacturers
    description: Hersteller
  - name: facility_types
    description: Anlagenart
  - name: facilities
    description: Anlage
  - name: activities
    description: Vorgänge
  - name: activity_types
    description: Leistungsarten
  - name: attachments
    description: Dokumente
  - name: images
    description: Bilder
  - name: time_dependent_attributes
    description: Zeitabhängige Attribute
  - name: ep_code_combinations
    description: EP_code Kombinationen
  - name: tenants
    description: Mieter
  - name: rent_trackers
    description: Tracker mieten
  - name: roles
    description: Rollen
  - name: role_policies
    description: Rollen Policen
  - name: tags
    description: Stichworte
  - name: platform_configs
    description: Plattform Konfigurationen
  - name: rent_increase_types
    description: Mieterhöhungstypen
  - name: rent_increase_indices
    description: Mietsteigerungsindizes
  - name: task_memberships
    description: Task-Mitgliedschaften
  - name: task_memberships
    description: Task-Mitgliedschaften
  - name: rent_increases
    description: Mieterhöhungen
  - name: emission_factor_settings
    description: Emissionsfaktor-Einstellungen
  - name: building_wastes
    description: Abfallverbrauch
paths:
  /v1/platform_configs:
    post:
      summary: Creates a platform_config within the current organisation
      description: Creates a platform_config within the current organisation
      tags:
        - platform_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformConfigCreate'
        required: true
      responses:
        '201':
          description: PlatformConfig successfully created
          content:
            application/json:
              schema:
                properties:
                  platform_config:
                    $ref: '#/components/schemas/PlatformConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - platform_config_write
    get:
      summary: Shows the platform_configs
      description: Shows the platform_configs
      tags:
        - platform_configs
      responses:
        '200':
          description: Returns the platform_configs
          content:
            application/json:
              schema:
                properties:
                  platform_configs:
                    $ref: '#/components/schemas/PlatformConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - platform_config_read
  /v1/platform_configs/{platform_config_id}:
    put:
      summary: Updates an platform_config within the current organisation.
      description: >-
        Updates an platform_config within the current organisation. Organisation
        manager only 🔒
      tags:
        - platform_configs
      parameters:
        - name: platform_config_id
          in: path
          description: ID of the platform_config you want to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformConfigUpdate'
        required: true
      responses:
        '200':
          description: PlatformConfig successfully updated
          content:
            application/json:
              schema:
                properties:
                  platform_config:
                    $ref: '#/components/schemas/PlatformConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - platform_config_write
    delete:
      summary: Marks a platform_config as deleted within the current organisation.
      description: >-
        Marks a platform_config as deleted within the current organisation.
        Organisation manager only 🔒
      tags:
        - platform_configs
      parameters:
        - name: platform_config_id
          in: path
          description: ID of the platform_config you want to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: PlatformConfig successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  platform_config:
                    $ref: '#/components/schemas/PlatformConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - platform_config_destroy
  /v1/users:
    post:
      security:
        - api_key: []
        - oauth:
            - user_write
      summary: Creates a user.
      description: |
        # Description
        Creates a new user
        # Password
          Make sure you use a strong password
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Returns the created user
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/UserIndex'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
    get:
      summary: Returns all users within the given account.
      description: >-
        Returns all users within the given account. They can be filtered based
        on account.
      tags:
        - users
      parameters:
        - name: customer_account_id
          in: query
          description: The ID customer account to filter the users.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: The page to paginate the users.
          required: false
          schema:
            type: string
        - name: per_page
          in: query
          description: The number of users for a page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all users within the given account.
          content:
            application/json:
              schema:
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - user_read
  /v1/users/log_in:
    post:
      security:
        - api_key: []
        - oauth:
            - user_write
      summary: Login
      description: Authenticates user to get the API key or relevant information.
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
        required: true
      responses:
        '200':
          description: Returns user object including the api_token
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/UserSignedIn'
        '401':
          description: Invalid email password combination
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/SignInError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
  /v1/users/refresh_token:
    get:
      security:
        - api_key: []
        - oauth:
            - user_read
      summary: Refresh token
      description: Reauthenticate user to get the API key or relevant information.
      tags:
        - users
      responses:
        '200':
          description: Returns user object including the api_token
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/UserSignedIn'
        '401':
          description: Invalid email password combination
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/SignInError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
  /v1/users/{user_id}:
    put:
      summary: Updates the user.
      description: Updates the user
      tags:
        - users
      parameters:
        - name: customer_account_id
          in: query
          description: The ID customer account
          required: false
          schema:
            type: string
        - name: user_id
          in: path
          description: The ID of the user to update
          required: true
          schema:
            type: integer
        - name: reset_password_token
          in: query
          description: The reset token of the user
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/UserShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - user_write
    delete:
      summary: Delete the user.
      description: Delete the user
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          description: The ID of the user to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User successfully deleted
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/UserShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - user_destroy
  /v1/users/log_out:
    delete:
      summary: Invalidates the current api token
      description: Invalidates the current api token
      tags:
        - users
      responses:
        '200':
          description: Returns the signed out user
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/UserIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - user_destroy
  /v1/users/reset_password_instructions:
    put:
      security:
        - api_key: []
        - oauth:
            - user_write
      summary: >-
        Sends reset password instructions to the user's email address (in german
        & english).
      description: >-
        Sends reset password instructions to the user's email address (in german
        & english).
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPasswordInstructions'
        required: true
      responses:
        '200':
          description: Returns the user with email to which the instructions where sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEmail'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
  /v1/users/send_invitation:
    put:
      security:
        - api_key: []
        - oauth:
            - user_write
      summary: Sends invitation to the user's email address (in german & english).
      description: Sends invitation to the user's email address (in german & english).
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitations'
        required: true
      responses:
        '200':
          description: Returns the user with email to which the invitation where sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEmail'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
  /v1/roles:
    get:
      summary: Returns all roles
      description: Returns all roles, Admin, Supervisor 🔒
      tags:
        - roles
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all roles
          content:
            application/json:
              schema:
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoleIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_read
    post:
      summary: Creates a Role
      description: Creates a Role, Admin, Supervisor 🔒
      tags:
        - roles
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreate'
        required: true
      responses:
        '201':
          description: Role successfully created
          content:
            application/json:
              schema:
                properties:
                  Role:
                    $ref: '#/components/schemas/RoleShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_write
  /v1/roles/{role_id}:
    get:
      summary: Shows a Role
      description: Shows a Role, Admin, Supervisor 🔒
      tags:
        - roles
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: role_id
          in: path
          description: The ID of the Role to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the Role
          content:
            application/json:
              schema:
                properties:
                  Role:
                    $ref: '#/components/schemas/RoleShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_read
    put:
      summary: Updates a Role
      description: Updates a Role, Admin, Supervisor 🔒
      tags:
        - roles
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: role_id
          in: path
          description: The ID of the Role to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdate'
        required: true
      responses:
        '200':
          description: Role successfully updated
          content:
            application/json:
              schema:
                properties:
                  Role:
                    $ref: '#/components/schemas/RoleShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_write
    delete:
      summary: Deletes the Role
      description: Deletes the Role, Admin, Supervisor 🔒
      tags:
        - roles
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: role_id
          in: path
          description: The ID of the Role to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Role successfully deleted
          content:
            application/json:
              schema:
                properties:
                  Role:
                    $ref: '#/components/schemas/RoleShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_destroy
  /v1/role_policies:
    get:
      summary: Returns all Role Policies
      description: Returns all role_policies , Admin, Supervisor ðŸ”’
      tags:
        - role_policies
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Returns all Role Policies '
          content:
            application/json:
              schema:
                properties:
                  role_policies:
                    type: array
                    items:
                      $ref: '#/components/schemas/RolePolicyIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_policy_read
    post:
      summary: Creates a Role Policy
      description: |
        # Description
        Creates a Role Policy, Admin, Supervisor 🔒
        Rules format:
            {
              "resource": "User",
              "action": [],
              "description": "Something descriptive",
              "effect": "allow",
              "attributes": ['name'],
              "conditions": [[ "id", "eq", 30 ]]
            }
          # Allowed resource:
             App,  App::Category,  App::CategoryMembership,  Attachment,  Building,  Property,  Lot,  Building::FilterSetting,  Building::SaveFilter,  Building::Type,  Contract,  Contract::Addition,  Contract::Grant,  CustomerAccount,  CustomerAccount::Membership,  Facility,  Level,  Room,  Zone,  Facility::Type,  Image,  Organisation,  Organisation::Config,  Organisation::Membership,  Property::Type,  ReportTemplate,  User
          # Allowed conditions format:
             [['column name', 'predicate', 'value']]
          # Allowed conditions predicates:
             not_eq_all, eq, eq_any, eq_all, between, not_in, lteq, gteq, in_any, in_all, not_between, gt, not_in_any, not_in_all, in, gteq_any, gteq_all, gt_any, gt_all, lt_any, lt, lt_all, lteq_any, lteq_all, not_eq, not_eq_any
      tags:
        - role_policies
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePolicyCreate'
        required: true
      responses:
        '201':
          description: Role Policy successfully created
          content:
            application/json:
              schema:
                properties:
                  role_policy:
                    $ref: '#/components/schemas/RolePolicyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_policy_write
  /v1/role_policies/{role_policy_id}:
    get:
      summary: Shows a Role Policy
      description: Shows a Policy, Admin, Supervisor ðŸ”’
      tags:
        - role_policies
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: role_policy_id
          in: path
          description: The ID of the Role Policy to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the Role Policy
          content:
            application/json:
              schema:
                properties:
                  role_policy:
                    $ref: '#/components/schemas/RolePolicyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_policy_read
    put:
      summary: Updates a Role Policy
      description: |
        # Description
        Updates a Role Policy, Admin, Supervisor 🔒
        Rules format:
            {
              "resource": "User",
              "action": [],
              "description": "Something descriptive",
              "effect": "allow",
              "attributes": ['name'],
              "conditions": [[ "id", "eq", 30 ]]
            }
          # Allowed resource:
             App,  App::Category,  App::CategoryMembership,  Attachment,  Building,  Property,  Lot,  Building::FilterSetting,  Building::SaveFilter,  Building::Type,  Contract,  Contract::Addition,  Contract::Grant,  CustomerAccount,  CustomerAccount::Membership,  Facility,  Level,  Room,  Zone,  Facility::Type,  Image,  Organisation,  Organisation::Config,  Organisation::Membership,  Property::Type,  ReportTemplate,  User
          # Allowed conditions format:
             [['column name', 'predicate', 'value']]
          # Allowed conditions predicates:
             not_eq_all, eq, eq_any, eq_all, between, not_in, lteq, gteq, in_any, in_all, not_between, gt, not_in_any, not_in_all, in, gteq_any, gteq_all, gt_any, gt_all, lt_any, lt, lt_all, lteq_any, lteq_all, not_eq, not_eq_any
      tags:
        - role_policies
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: role_policy_id
          in: path
          description: The ID of the Role Policy to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePolicyUpdate'
        required: true
      responses:
        '200':
          description: Role Policy successfully updated
          content:
            application/json:
              schema:
                properties:
                  role_policy:
                    $ref: '#/components/schemas/RolePolicyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_policy_write
    delete:
      summary: Deletes the Role Policy
      description: Deletes the Role Policy, Admin, Supervisor ðŸ”’
      tags:
        - role_policies
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: role_policy_id
          in: path
          description: The ID of the Role Policy to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Role Policy successfully deleted
          content:
            application/json:
              schema:
                properties:
                  role_policy:
                    $ref: '#/components/schemas/RolePolicyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - role_policy_destroy
  /v1/tenants/{boarding_type}:
    get:
      summary: Shows all tenants
      description: Shows all tenants for a specific time range
      tags:
        - tenants
      parameters:
        - name: boarding_type
          in: path
          description: 'The type of boarding: onboarding or offboarding'
          required: true
          schema:
            type: string
            enum:
              - onboarding
              - offboarding
        - name: customer_account_id
          in: query
          description: The id of the customer account
          required: true
          schema:
            type: integer
        - name: start_date
          in: query
          description: The starting date for new tenant
          example: '2024-04-16'
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          description: The ending date for new tenant
          example: '2024-04-17'
          schema:
            type: string
            format: date-time
        - name: search_by
          in: query
          description: Search by object type
          schema:
            type: string
            enum:
              - organisation
              - property
              - building
              - building_unit
        - name: item_id
          in: query
          description: Search by object id
          schema:
            type: integer
      responses:
        '200':
          description: Returns the tenant
          content:
            application/json:
              schema:
                properties:
                  tenant:
                    $ref: '#/components/schemas/TenantShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tenant_read
  /v1/customer_account_translations:
    get:
      summary: >-
        Returns all customer_account's translations within the given customer
        account
      description: >-
        Returns all customer_account's translations within the given customer
        account
      tags:
        - customer_account_translations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            Returns all customer_account' s translations within the given
            customer account
          content:
            application/json:
              schema:
                properties:
                  customer_account_translations:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAccountTranslationIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_read
    post:
      summary: Creates a customer_account_translation
      description: |
        # Description
        Creates a customer_account_translation
        # Allowed parent_type:
           * Building,  Building::Unit,  Property,  Facility,  CustomerAccountAttributeGroup,  ActivityType,  CustomerAccountCategory
        # Allowed languages:
           * de,  en,  gsw
        # Allowed field:
          1. Building:
             * id,  name,  custom_id,  comment,  street,  street_number,  city,  province,  country,  user_id,  organisation_id,  lot_id,  property_id,  last_editor_id,  created_at,  updated_at,  building_type_id,  zip_code,  latitude,  longitude,  year_of_construction,  gross_floor_area_in_sqm_din_277,  architect,  net_floor_area_in_sqm_din_277,  auxiliary_floor_area_in_sqm,  deleted_at,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  units_count,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  parking_space,  old_roof_form,  external_id,  source_system,  gross_floor_area_in_sqm_sia_d_0165,  net_floor_area_in_sqm_sia_d_0165,  planned_monthly_rent,  number_of_floors,  last_refurbishment_at,  heating_type,  main_energy_provider,  floors_below_ground,  floors_above_ground,  stairwells,  main_energy_source,  parking_garage,  protective_area,  number_of_lifts,  facility_type,  institution_type,  deso_facility,  heating_used_energy,  kitchen_type,  objectphase,  region,  construction_project_category,  state_of_renovation,  roof_form,  number_of_windows,  user_intervention_window_number,  user_intervention_window_area,  fund_name,  own_use,  listed_building,  house_number,  address_suffix,  energy_certificate_type,  stored_energy_validity,  accounting_rules_applied,  energy_class,  year_of_construction_heat_generator,  air_conditioning,
          2. Building::Unit:
             * id,  building_id,  name,  comment,  last_editor_id,  organisation_id,  created_at,  updated_at,  tenant,  gross_floor_area_in_sqm_din_277,  net_floor_area_in_sqm_din_277,  building_unit_type_id,  user_id,  auxiliary_floor_area_in_sqm,  social_floor_area_in_sqm,  deleted_at,  owner,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  contract_id,  external_id,  source_system,  net_floor_area_in_sqm_sia_d_0165,  gross_floor_area_in_sqm_sia_d_0165,  market_rental_price,  planned_monthly_rent,  planned_operating_cost,  planned_total_rent,  planned_deposit,  number_of_rooms,  number_of_bedrooms,  number_of_bathrooms,  quality_of_available_features,  current_condition,  description,  description_of_features,  features,  heating_costs_in_operating_costs,  contracted_lease_base_rent,  contracted_lease_operating_costs,  contracted_lease_deposit,  floor,  group_home,
          3. Property:
             * id,  name,  comment,  created_at,  updated_at,  property_type_id,  custom_id,  user_id,  organisation_id,  last_editor_id,  zip_code,  city,  country,  deleted_at,  external_id,  source_system,  property_manager_id,
          4. Facility:
             * id,  name,  custom_id,  comment,  inventory_number,  serial_number,  year_of_construction,  last_inspection_at,  last_maintenance_at,  next_inspection_at,  next_maintenance_at,  latitude,  longitude,  manufacturer_id,  department_id,  facility_type_id,  user_id,  last_editor_id,  organisation_id,  created_at,  updated_at,  property_id,  lot_id,  building_id,  level_id,  room_id,  zone_id,  type_dependent_attributes,  ancestry,  deleted_at,  manufacturer_type,  equipment_collection,  quantity,  facility_parent,  model_type_id,  ep_code,  external_id,  source_system,
          5. ActivityType:
             * id,  name,  user_id,  last_editor_id,  deleted_at,  created_at,  updated_at,  customer_account_id,
      tags:
        - customer_account_translations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountTranslationCreate'
        required: true
      responses:
        '201':
          description: CustomerAccountTranslation successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_account_translation:
                    $ref: '#/components/schemas/CustomerAccountTranslationShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_write
  /v1/customer_account_translations/{customer_account_translation_id}:
    get:
      summary: Shows a customer_account_translation
      description: Shows a customer_account_translation
      tags:
        - customer_account_translations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_translation_id
          in: path
          description: The ID of the customer_account_translation to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the customer_account_translation
          content:
            application/json:
              schema:
                properties:
                  customer_account_translation:
                    $ref: '#/components/schemas/CustomerAccountTranslationShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_read
    put:
      summary: Updates an customer_account_translation
      description: |
        # Description
        Updates an customer_account_translation
        # Allowed parent_type:
           * Building,  Building::Unit,  Property,  Facility,  CustomerAccountAttributeGroup,  ActivityType,  CustomerAccountCategory
        # Allowed languages:
           * de,  en,  gsw
        # Allowed field:
          1. Building:
             * id,  name,  custom_id,  comment,  street,  street_number,  city,  province,  country,  user_id,  organisation_id,  lot_id,  property_id,  last_editor_id,  created_at,  updated_at,  building_type_id,  zip_code,  latitude,  longitude,  year_of_construction,  gross_floor_area_in_sqm_din_277,  architect,  net_floor_area_in_sqm_din_277,  auxiliary_floor_area_in_sqm,  deleted_at,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  units_count,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  parking_space,  old_roof_form,  external_id,  source_system,  gross_floor_area_in_sqm_sia_d_0165,  net_floor_area_in_sqm_sia_d_0165,  planned_monthly_rent,  number_of_floors,  last_refurbishment_at,  heating_type,  main_energy_provider,  floors_below_ground,  floors_above_ground,  stairwells,  main_energy_source,  parking_garage,  protective_area,  number_of_lifts,  facility_type,  institution_type,  deso_facility,  heating_used_energy,  kitchen_type,  objectphase,  region,  construction_project_category,  state_of_renovation,  roof_form,  number_of_windows,  user_intervention_window_number,  user_intervention_window_area,  fund_name,  own_use,  listed_building,  house_number,  address_suffix,  energy_certificate_type,  stored_energy_validity,  accounting_rules_applied,  energy_class,  year_of_construction_heat_generator,  air_conditioning,
          2. Building::Unit:
             * id,  building_id,  name,  comment,  last_editor_id,  organisation_id,  created_at,  updated_at,  tenant,  gross_floor_area_in_sqm_din_277,  net_floor_area_in_sqm_din_277,  building_unit_type_id,  user_id,  auxiliary_floor_area_in_sqm,  social_floor_area_in_sqm,  deleted_at,  owner,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  contract_id,  external_id,  source_system,  net_floor_area_in_sqm_sia_d_0165,  gross_floor_area_in_sqm_sia_d_0165,  market_rental_price,  planned_monthly_rent,  planned_operating_cost,  planned_total_rent,  planned_deposit,  number_of_rooms,  number_of_bedrooms,  number_of_bathrooms,  quality_of_available_features,  current_condition,  description,  description_of_features,  features,  heating_costs_in_operating_costs,  contracted_lease_base_rent,  contracted_lease_operating_costs,  contracted_lease_deposit,  floor,  group_home,
          3. Property:
             * id,  name,  comment,  created_at,  updated_at,  property_type_id,  custom_id,  user_id,  organisation_id,  last_editor_id,  zip_code,  city,  country,  deleted_at,  external_id,  source_system,  property_manager_id,
          4. Facility:
             * id,  name,  custom_id,  comment,  inventory_number,  serial_number,  year_of_construction,  last_inspection_at,  last_maintenance_at,  next_inspection_at,  next_maintenance_at,  latitude,  longitude,  manufacturer_id,  department_id,  facility_type_id,  user_id,  last_editor_id,  organisation_id,  created_at,  updated_at,  property_id,  lot_id,  building_id,  level_id,  room_id,  zone_id,  type_dependent_attributes,  ancestry,  deleted_at,  manufacturer_type,  equipment_collection,  quantity,  facility_parent,  model_type_id,  ep_code,  external_id,  source_system,
          5. ActivityType:
             * id,  name,  user_id,  last_editor_id,  deleted_at,  created_at,  updated_at,  customer_account_id,
      tags:
        - customer_account_translations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_translation_id
          in: path
          description: The ID of the customer_account_translation to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountTranslationUpdate'
        required: true
      responses:
        '200':
          description: CustomerAccountTranslation successfully updated
          content:
            application/json:
              schema:
                properties:
                  customer_account_translation:
                    $ref: '#/components/schemas/CustomerAccountTranslationShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_write
    delete:
      summary: >-
        Deletes the customer_account_translation within the current customer
        account.
      description: >-
        Deletes the customer_account_translation within the current customer
        account. Account manager only🔒🔒
      tags:
        - customer_account_translations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_translation_id
          in: path
          description: The ID of the customer_account_translation to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: CustomerAccountTranslation successfully deleted
          content:
            application/json:
              schema:
                properties:
                  customer_account_translation:
                    $ref: '#/components/schemas/CustomerAccountTranslationShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_destroy
  /v1/customer_account_attribute_groups:
    get:
      summary: >-
        Returns all customer_account's translations within the given customer
        account
      description: >-
        Returns all customer_account's translations within the given customer
        account
      tags:
        - customer_account_attribute_groups
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: search_field
          in: query
          description: Filter by field
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns all customer_account' s translations within the given
            customer account
          content:
            application/json:
              schema:
                properties:
                  customer_account_attribute_groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAccountAttributeGroupIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_read
    post:
      summary: Creates a customer_account_attribute_group
      description: |
        # Description
        Creates a customer_account_attribute_group
        # Allowed parent_type:
           * building_unit,  building
      tags:
        - customer_account_attribute_groups
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountAttributeGroupCreate'
        required: true
      responses:
        '201':
          description: CustomerAccountAttributeGroup successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_account_attribute_group:
                    $ref: '#/components/schemas/CustomerAccountAttributeGroupShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_write
  /v1/customer_account_attribute_groups/{customer_account_attribute_group_id}:
    get:
      summary: Shows a customer_account_attribute_group
      description: Shows a customer_account_attribute_group
      tags:
        - customer_account_attribute_groups
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_attribute_group_id
          in: path
          description: The ID of the customer_account_attribute_group to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the customer_account_attribute_group
          content:
            application/json:
              schema:
                properties:
                  customer_account_attribute_group:
                    $ref: '#/components/schemas/CustomerAccountAttributeGroupShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_read
    put:
      summary: Updates an customer_account_attribute_group
      description: |
        # Description
        Updates an customer_account_attribute_group
        # Allowed parent_type:
           * building_unit,  building
      tags:
        - customer_account_attribute_groups
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_attribute_group_id
          in: path
          description: The ID of the customer_account_attribute_group to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountAttributeGroupUpdate'
        required: true
      responses:
        '200':
          description: CustomerAccountAttributeGroup successfully updated
          content:
            application/json:
              schema:
                properties:
                  customer_account_attribute_group:
                    $ref: '#/components/schemas/CustomerAccountAttributeGroupShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_write
    delete:
      summary: >-
        Deletes the customer_account_attribute_group within the current customer
        account.
      description: >-
        Deletes the customer_account_attribute_group within the current customer
        account. Account manager only🔒🔒
      tags:
        - customer_account_attribute_groups
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_attribute_group_id
          in: path
          description: The ID of the customer_account_attribute_group to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: CustomerAccountAttributeGroup successfully deleted
          content:
            application/json:
              schema:
                properties:
                  customer_account_attribute_group:
                    $ref: '#/components/schemas/CustomerAccountAttributeGroupShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_destroy
  /v1/ep_code_combinations:
    get:
      summary: Returns all ep_code_combinations
      description: >-
        Returns all ep_code_combinations, Organisation manager, building member
        🔒
      tags:
        - ep_code_combinations
      responses:
        '200':
          description: Returns all ep_code_combinations
          content:
            application/json:
              schema:
                properties:
                  ep_code_combinations:
                    $ref: '#/components/schemas/EpCodeCombinationByFacilityType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - ep_code_combination_read
  /v1/credentials/me:
    get:
      summary: Returns user if logged via OAuth
      description: |
        # Description
        Returns user if logged via OAuth
      tags:
        - credentials
      responses:
        '200':
          description: Returns logged user
          content:
            application/json:
              schema:
                properties:
                  credentials:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - credential_read
  /v1/credentials/auth:
    post:
      summary: Returns EstateOs token
      description: |
        # Description
        Returns EstateOs token if the logged in user has permissions
      tags:
        - credentials
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns logged user jwt token
          content:
            application/json:
              schema:
                properties:
                  Authorization:
                    type: string
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - credential_write
  /v1/dashboard_configs:
    post:
      summary: Creates a dashboard_config within the current organisation
      description: Creates a dashboard_config within the current organisation
      tags:
        - dashboard_configs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account to show
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardConfigCreate'
        required: true
      responses:
        '201':
          description: DashboardConfig successfully created
          content:
            application/json:
              schema:
                properties:
                  dashboard_config:
                    $ref: '#/components/schemas/DashboardConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_config_write
  /v1/dashboard_configs/{customer_account_id}:
    get:
      summary: Shows the dashboard_configs
      description: Shows the dashboard_configs
      tags:
        - dashboard_configs
      parameters:
        - name: customer_account_id
          in: path
          description: The ID of the customer_account to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the dashboard_configs
          content:
            application/json:
              schema:
                properties:
                  dashboard_configs:
                    $ref: '#/components/schemas/DashboardConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_config_read
    put:
      summary: Updates an dashboard_config within the current organisation.
      description: >-
        Updates an dashboard_config within the current organisation.
        Organisation manager only 🔒
      tags:
        - dashboard_configs
      parameters:
        - name: customer_account_id
          in: path
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardConfigUpdate'
        required: true
      responses:
        '200':
          description: DashboardConfig successfully updated
          content:
            application/json:
              schema:
                properties:
                  dashboard_config:
                    $ref: '#/components/schemas/DashboardConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_config_write
    delete:
      summary: Marks a dashboard_config as deleted within the current organisation.
      description: >-
        Marks a dashboard_config as deleted within the current organisation.
        Organisation manager only 🔒
      tags:
        - dashboard_configs
      parameters:
        - name: customer_account_id
          in: path
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: DashboardConfig successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  dashboard_config:
                    $ref: '#/components/schemas/DashboardConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_config_destroy
  /v1/dashboards:
    get:
      summary: Return customer account dashboards
      description: Return customer account dashboards
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: filters
          in: query
          required: false
          description: |
            Filter dashboard with filters <br>
            { key1: "value1", key2: "value2" }
          schema:
            type: string
        - name: locale
          in: query
          description: Locale
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return customer account dashboards
          content:
            application/json:
              schema:
                properties:
                  dashboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/DashboardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_read
  /v1/dashboards/{dashboard_id}:
    get:
      summary: Shows a dashboard
      description: |
        # Description
        Updates a dashboard Dashboard manager🔒
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: dashboard_id
          in: path
          description: The ID of the dashboard
          required: true
          schema:
            type: integer
        - name: filters
          in: query
          required: false
          description: |
            Filter dashboard with filters <br>
            { key1: 'value1', key2: 'value2' }
          schema:
            type: string
      type: string
      enum:
        - inspection
        - maintenance
        - disturbance
        - overhaul
        - other
      responses:
        '200':
          description: Dashboard successfully updated
          content:
            application/json:
              schema:
                properties:
                  dashboard:
                    $ref: '#/components/schemas/DashboardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_read
    put:
      summary: Updates a dashboard
      description: |
        # Description
        Updates a dashboard Dashboard manager🔒
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: dashboard_id
          in: path
          description: The ID of the dashboard
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardUpdate'
        required: true
      responses:
        '200':
          description: Dashboard successfully updated
          content:
            application/json:
              schema:
                properties:
                  dashboard:
                    $ref: '#/components/schemas/DashboardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_write
  /v1/dashboards/synchronise:
    get:
      summary: Synchronise dashboards
      description: Synchronise dashboards
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return status ok
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_read
  /v1/dashboards/session_expire:
    get:
      summary: Expire all sessions for the current user
      description: Expire all sessions for the current user
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: locale
          in: query
          description: The locale of the user
          required: true
          schema:
            type: string
            enum:
              - en
              - de
      responses:
        '200':
          description: Return status ok
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_read
  /v1/dashboards/{dashboard_id}/copy:
    put:
      summary: Copy a dashboard on looker
      description: >
        # Description

        Copy a dashboard on looker on the folder specified for the current
        account.
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: dashboard_id
          in: path
          description: The ID of the dashboard
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dashboard successfully copied
          content:
            application/json:
              schema:
                properties:
                  dashboard:
                    $ref: '#/components/schemas/DashboardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_write
  /v1/dashboards/order:
    put:
      summary: Order dashboards
      description: |
        # Description
        Order dashboards by providing dashboard ids in array
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardOrderUpdate'
        required: true
      responses:
        '200':
          description: Return customer account dashboards
          content:
            application/json:
              schema:
                properties:
                  dashboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/DashboardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_write
  /v1/dashboards/explore:
    get:
      summary: Return customer account explore with url
      description: Return customer account explore with url
      tags:
        - dashboards
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: filters
          in: query
          required: false
          description: |
            Filter dashboard with filters <br>
            { key1: 'value1', key2: 'value2' }
          schema:
            type: string
      responses:
        '200':
          description: Returns the explore
          content:
            application/json:
              schema:
                properties:
                  explore:
                    type: object
                    properties:
                      buildings_url:
                        type: string
                      units_url:
                        type: string
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - dashboard_read
  /v1/apps:
    get:
      summary: Returns all apps
      description: Returns all apps, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all apps
          content:
            application/json:
              schema:
                properties:
                  apps:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_read
    post:
      summary: Creates a app
      description: Creates a app, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCreate'
        required: true
      responses:
        '201':
          description: App successfully created
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_write
  /v1/apps/{app_id}:
    get:
      summary: Shows a app
      description: Shows a app, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_id
          in: path
          description: The ID of the app to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the app
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_read
    put:
      summary: Updates a app
      description: Updates a app, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_id
          in: path
          description: The ID of the app to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUpdate'
        required: true
      responses:
        '200':
          description: App successfully updated
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_write
    delete:
      summary: Deletes the app
      description: Deletes the app, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_id
          in: path
          description: The ID of the app to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App successfully deleted
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_destroy
  /v1/app_categories:
    get:
      summary: Returns all app's categories
      description: Returns all app's categories, Admin, Supervisor 🔒
      tags:
        - app_categories
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all app's categories
          content:
            application/json:
              schema:
                properties:
                  app_categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_category_read
  /v1/app_subscriptions:
    get:
      summary: Returns all app's subscriptions
      description: Admin, Supervisor 🔒
      tags:
        - app_subscriptions
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all app's subscriptions
          content:
            application/json:
              schema:
                properties:
                  app_subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppSubscriptionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_subscription_read
    post:
      summary: Creates an app's subscription.
      description: |
        # Description
        • Creates an app's subscription.
        • Name of app's subscription can be Free Tier, Premium
        • The periodicity can be month, year
      tags:
        - app_subscriptions
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppSubscriptionCreate'
        required: true
      responses:
        '201':
          description: App's subscription successfully created
          content:
            application/json:
              schema:
                properties:
                  app_subscription:
                    $ref: '#/components/schemas/AppSubscriptionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_subscription_write
  /v1/app_subscriptions/{app_subscription_id}:
    get:
      summary: Shows an app's subscription
      description: Shows an app's subscription, Admin, Supervisor 🔒
      tags:
        - app_subscriptions
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_subscription_id
          in: path
          description: The ID of the subscription to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the app's subscription
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppSubscriptionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_subscription_read
    put:
      summary: Updates a app's subscription
      description: |
        # Description
        • Updates an app's subscription.
        • Name of app's subscription can be Free Tier, Premium
        • The periodicity can be month, year
      tags:
        - app_subscriptions
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_subscription_id
          in: path
          description: The ID of the subscription to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppSubscription'
        required: true
      responses:
        '200':
          description: App successfully updated
          content:
            application/json:
              schema:
                properties:
                  app_subscription:
                    $ref: '#/components/schemas/AppSubscriptionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_subscription_write
    delete:
      summary: Deletes the subscription
      description: Deletes the subscription, Admin, Supervisor 🔒
      tags:
        - app_subscriptions
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_subscription_id
          in: path
          description: The ID of the subscription to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App's subscription successfully deleted
          content:
            application/json:
              schema:
                properties:
                  app_subscription:
                    $ref: '#/components/schemas/AppSubscriptionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_subscription_destroy
  /v1/app_configs:
    get:
      summary: Returns all app's configs.
      description: Returns all app's configs, Admin, Supervisor 🔒
      tags:
        - app_configs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: app_subscription_id
          in: query
          description: The ID of the app_subscription
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all app's configs
          content:
            application/json:
              schema:
                properties:
                  app_configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_config_read
    post:
      summary: Creates an app's config.
      description: Creates an app's config. Admin, Supervisor 🔒
      tags:
        - app_configs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigCreate'
        required: true
      responses:
        '201':
          description: App's config successfully created
          content:
            application/json:
              schema:
                properties:
                  app_config:
                    $ref: '#/components/schemas/AppConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_config_write
  /v1/app_configs/{app_config_id}:
    get:
      summary: Shows an app's config.
      description: Shows an app's config. Admin, Supervisor 🔒
      tags:
        - app_configs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_config_id
          in: path
          description: The ID of the config to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the app's config
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_config_read
    put:
      summary: Updates a app's config.
      description: Updates a app's config. Admin, Supervisor 🔒
      tags:
        - app_configs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_config_id
          in: path
          description: The ID of the config to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfig'
        required: true
      responses:
        '200':
          description: App config successfully updated
          content:
            application/json:
              schema:
                properties:
                  app_config:
                    $ref: '#/components/schemas/AppConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_config_write
    delete:
      summary: Deletes the config.
      description: Deletes the config. Admin, Supervisor 🔒
      tags:
        - app_configs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_config_id
          in: path
          description: The ID of the config to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App's config successfully deleted
          content:
            application/json:
              schema:
                properties:
                  app_config:
                    $ref: '#/components/schemas/AppConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_config_destroy
  /v1/apps/{app_id}/memberships:
    post:
      summary: Creates a app membership to category
      description: Creates a app membership to category, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_category_membership_id
          in: path
          description: The ID of the app membership to create
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCategoryMembershipShow'
        required: true
      responses:
        '201':
          description: App Category Membership successfully created
          content:
            application/json:
              schema:
                properties:
                  app_category_membership:
                    $ref: '#/components/schemas/AppCategoryMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_write
    delete:
      summary: Deletes the app category membership
      description: Deletes the app category membership, Admin, Supervisor 🔒
      tags:
        - apps
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_category_membership_id
          in: path
          description: The ID of the app category membership to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App category membership successfully deleted
          content:
            application/json:
              schema:
                properties:
                  app_category_membership:
                    $ref: '#/components/schemas/AppCategoryMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_destroy
  /v1/app_data_repositories:
    get:
      summary: Returns all subscription's data_repositories.
      description: Returns all subscription's data_repositories. Admin, Supervisor 🔒
      tags:
        - app_data_repositories
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
        - name: app_subscription_id
          in: query
          description: The ID of the app_subscription
          required: false
          schema:
            type: integer
        - name: parent_id
          in: query
          description: The ID of the parent
          required: false
          schema:
            type: integer
        - name: parent_type
          in: query
          description: The Type of the parent
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all app's data_repositories
          content:
            application/json:
              schema:
                properties:
                  app_data_repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppDataRepositoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_data_repository_read
    post:
      summary: Creates a app_data_repository
      description: Creates a app_data_repository. Admin, Supervisor 🔒
      tags:
        - app_data_repositories
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDataRepositoryCreate'
        required: true
      responses:
        '201':
          description: App's data_repository successfully created
          content:
            application/json:
              schema:
                properties:
                  app_data_repository:
                    $ref: '#/components/schemas/AppDataRepositoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_data_repository_write
  /v1/app_data_repositories/latest_version:
    get:
      summary: Shows an app_data_repository.
      description: Shows an app_data_repository. Admin, Supervisor 🔒
      tags:
        - app_data_repositories
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: parent_id
          in: query
          description: The ID of the parent
          required: false
          schema:
            type: integer
        - name: parent_type
          in: query
          description: The Type of the parent
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the app_data_repository
          content:
            application/json:
              schema:
                properties:
                  app_data_repository:
                    $ref: '#/components/schemas/AppDataRepositoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_data_repository_read
  /v1/app_data_repositories/{app_data_repository_id}:
    put:
      summary: Updates an app_data_repository
      description: Updates an app_data_repository. Admin, Supervisor 🔒
      tags:
        - app_data_repositories
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_data_repository_id
          in: path
          description: The ID of the app_data_repository
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDataRepositoryUpdate'
        required: true
      responses:
        '200':
          description: App's data_repository successfully updated
          content:
            application/json:
              schema:
                properties:
                  app:
                    $ref: '#/components/schemas/AppDataRepositoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_data_repository_write
    delete:
      summary: Deletes the app_data_repository.
      description: Deletes the app_data_repository. Admin, Supervisor 🔒
      tags:
        - app_data_repositories
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
        - name: app_data_repository_id
          in: path
          description: The ID of the app_data_repository
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App's data_repository successfully deleted
          content:
            application/json:
              schema:
                properties:
                  app_data_repository:
                    $ref: '#/components/schemas/AppDataRepositoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - app_data_repository_destroy
  /v1/plans:
    get:
      summary: Returns all plans within the given building
      description: >-
        Returns all plans within the given building, Organisation manager,
        building member, plan_member, plan_manager 🔒
      tags:
        - plans
      parameters:
        - name: building_id
          in: query
          description: The ID of the building of the plan
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all plans within the given building
          content:
            application/json:
              schema:
                properties:
                  plans:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_read
    post:
      summary: Creates a plan
      description: >-
        Creates a plan, Organisation manager, building member, plan_member,
        plan_manager 🔒
      tags:
        - plans
      parameters:
        - name: building_id
          in: query
          description: The ID of the building of the plan
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreate'
        required: true
      responses:
        '201':
          description: Plan successfully created
          content:
            application/json:
              schema:
                properties:
                  plan:
                    $ref: '#/components/schemas/PlanShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_write
  /v1/plans/{plan_id}:
    get:
      summary: Shows a plan
      description: >-
        Shows a plan, Organisation manager, building member, plan_member,
        plan_manager 🔒
      tags:
        - plans
      parameters:
        - name: building_id
          in: query
          description: The ID of the building of the plan
          required: true
          schema:
            type: integer
        - name: plan_id
          in: path
          description: The ID of the plan to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the plan
          content:
            application/json:
              schema:
                properties:
                  plan:
                    $ref: '#/components/schemas/PlanShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_read
    put:
      summary: Updates a plan
      description: >-
        Updates a plan, Organisation manager, building member, plan_member,
        plan_manager 🔒
      tags:
        - plans
      parameters:
        - name: building_id
          in: query
          description: The ID of the building of the plan
          required: true
          schema:
            type: integer
        - name: plan_id
          in: path
          description: The ID of the plan to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpdate'
        required: true
      responses:
        '200':
          description: Plan successfully updated
          content:
            application/json:
              schema:
                properties:
                  plan:
                    $ref: '#/components/schemas/PlanShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_write
    delete:
      summary: Deletes the plan within the current building
      description: >-
        Deletes the plan within the current building, Organisation manager,
        building member, plan_member, plan_manager 🔒
      tags:
        - plans
      parameters:
        - name: building_id
          in: query
          description: The ID of the building of the plan
          required: true
          schema:
            type: integer
        - name: plan_id
          in: path
          description: The ID of the plan to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Plan successfully deleted
          content:
            application/json:
              schema:
                properties:
                  plan:
                    $ref: '#/components/schemas/PlanShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_destroy
  /v1/plan_configs:
    get:
      summary: Returns all plan's configs.
      description: Returns all plan's configs. Admin, Supervisor 🔒
      tags:
        - plan_configs
      parameters:
        - name: parent_id
          in: query
          description: The ID of the parent
          required: false
          schema:
            type: integer
        - name: parent_type
          in: query
          description: |
            The type of the parent
              Allowed parent_types: ["Organisation", "Building", "Building::Unit"]
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all plan's configs
          content:
            application/json:
              schema:
                properties:
                  plan_configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_config_read
  /v1/plan_versions:
    post:
      summary: Creates a plan
      description: >-
        Creates a plan, organisation_manager, building_member, plan_member,
        plan_manager 🔒
      tags:
        - plan_versions
      parameters:
        - name: plan_id
          in: query
          description: The ID of the plan of the plan version
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanVersionCreate'
        required: true
      responses:
        '201':
          description: Plan Version successfully created
          content:
            application/json:
              schema:
                properties:
                  plan:
                    $ref: '#/components/schemas/PlanVersionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_version_write
  /v1/plan_versions/{id}:
    put:
      summary: Updates a plan version
      description: >-
        Updates a plan version, organisation_manager, building_member,
        plan_member, plan_manager 🔒
      tags:
        - plan_versions
      parameters:
        - name: plan_id
          in: query
          description: The ID of the plan of the plan version
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID of the plan version to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanVersionUpdate'
        required: true
      responses:
        '200':
          description: Plan Version successfully updated
          content:
            application/json:
              schema:
                properties:
                  plan_version:
                    $ref: '#/components/schemas/PlanVersionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_version_write
    delete:
      summary: Deletes the plan version within the current plan
      description: >-
        Deletes the plan version within the current plan, organisation_manager,
        building_member, plan_member, plan_manager 🔒
      tags:
        - plan_versions
      parameters:
        - name: plan_id
          in: query
          description: The ID of the plan of the version
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID of the plan version to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Plan Version successfully deleted
          content:
            application/json:
              schema:
                properties:
                  plan_version:
                    $ref: '#/components/schemas/PlanVersionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - plan_version_destroy
  /v1/organisations:
    get:
      summary: >-
        Returns all organisations the authenticated user is member of including
        her membership role within each organisation
      description: >
        Returns all organisations the authenticated user is member of including
        her membership role within each organisation
      tags:
        - organisations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID customer account to filter the users.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: The page to paginate the users.
          required: false
          schema:
            type: string
        - name: per_page
          in: query
          description: The number of users for a page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all organisations the authenticated user is member of
          content:
            application/json:
              schema:
                properties:
                  organisations:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_read
    post:
      summary: Creates a organisation of the user for a customer account
      description: |
        Creates a organisation of the user for a customer account
      tags:
        - organisations
      parameters:
        - name: customer_account_id
          in: query
          description: The ID customer account of organisation.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
        required: true
      responses:
        '200':
          description: Creates an organisation of the user for a customer account
          content:
            application/json:
              schema:
                properties:
                  organisations:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_write
  /v1/organisations/{organisation_id}:
    put:
      summary: Updates an organisation.
      description: Updates an organisation. Organisation manager only 🔒
      tags:
        - organisations
      parameters:
        - name: organisation_id
          in: path
          description: The ID of the organisation to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationUpdate'
        required: true
      responses:
        '200':
          description: Organisation successfully updated
          content:
            application/json:
              schema:
                properties:
                  organisation:
                    $ref: '#/components/schemas/OrganisationIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_write
    delete:
      summary: Deletes the organisation.
      description: Deletes the organisation. Admin only 🔒
      tags:
        - organisations
      parameters:
        - name: organisation_id
          in: path
          description: The ID of the organisation to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Organisation successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  organisation:
                    $ref: '#/components/schemas/OrganisationShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_destroy
  /v1/organisation_configs:
    post:
      summary: Creates a config in an organisation for a user.
      description: >-
        Creates a config in an organisation for a user. Organisation manager
        only 🔒
      tags:
        - organisation_configs
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        $ref: '#/components/requestBodies/OrganisationConfigCreate'
      responses:
        '201':
          description: Config successfully created
          content:
            application/json:
              schema:
                properties:
                  organisation_config:
                    $ref: '#/components/schemas/OrganisationConfig'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_config_write
  /v1/organisation_configs/{organisation_config_id}:
    get:
      summary: Returns the config for the current organisation of the user.
      description: >-
        Returns the config for the current organisation of the user.
        Organisation manager only 🔒
      tags:
        - organisation_configs
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: organisation_config_id
          in: path
          description: ID of the organisation config
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all configs within the given organisation
          content:
            application/json:
              schema:
                properties:
                  organisation_configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationConfig'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_config_read
    put:
      summary: Update a configs in an organisation for a user.
      description: >-
        Update a configs in an organisation for a user. Organisation manager
        only 🔒
      tags:
        - organisation_configs
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: organisation_config_id
          in: path
          description: ID of the organisation config
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/OrganisationConfigCreate'
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                properties:
                  organisation_membership:
                    $ref: '#/components/schemas/OrganisationConfig'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_config_write
    delete:
      summary: Deletes the organisation configs.
      description: Deletes the organisation configs. Organisation manager only 🔒
      tags:
        - organisation_configs
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: organisation_config_id
          in: path
          description: ID of the organisation config to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Config successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  organisations_config:
                    $ref: '#/components/schemas/OrganisationConfig'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_config_destroy
  /v1/organisation_memberships:
    get:
      summary: Returns all memberships within the given organisation.
      description: >-
        Returns all memberships within the given organisation. Organisation
        manager only 🔒
      tags:
        - organisation_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: current_organisation_id
          in: query
          description: ID of the organisation
          required: false
          schema:
            type: integer
        - name: user_id
          in: query
          description: ID of the user
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all memberships within the given organisation
          content:
            application/json:
              schema:
                properties:
                  memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganisationMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_membership_read
    post:
      summary: Creates a membership in an organisation for a user.
      description: >-
        Creates a membership in an organisation for a user. Organisation manager
        only 🔒
      tags:
        - organisation_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                properties:
                  organisation_membership:
                    $ref: '#/components/schemas/OrganisationMembership'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_membership_write
  /v1/organisation_memberships/{organisations_membership_id}:
    put:
      summary: Updates the organisation membership.
      description: Updates the organisation membership. Organisation manager only 🔒
      tags:
        - organisation_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: organisations_membership_id
          in: path
          description: ID of the organisation membership to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationMembershipUpdate'
        required: true
      responses:
        '200':
          description: Organisation membership successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationMembershipUpdate'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_membership_write
    delete:
      summary: Deletes the organisation membership.
      description: Deletes the organisation membership. Organisation manager only 🔒
      tags:
        - organisation_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: organisations_membership_id
          in: path
          description: ID of the organisation membership to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  organisation_membership:
                    $ref: '#/components/schemas/OrganisationMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - organisation_membership_destroy
  /v1/customer_accounts/{id}/time_attribute_schema:
    put:
      summary: Updates a customer_account's time_attribute_schema.
      description: >-
        Updates a customer account's time_attribute_schema. Account membership
        only🔒🔒
      tags:
        - customer_accounts
      parameters:
        - name: id
          in: path
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCreate'
        required: true
      responses:
        '200':
          description: Customer account's time_attribute_schema successfully updated
          content:
            application/json:
              schema:
                properties:
                  customer_account:
                    $ref: '#/components/schemas/CustomerAccountShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_write
  /v1/customer_accounts:
    get:
      summary: Gets all user's customer_accounts.
      description: Gets all user's customer_accounts.
      tags:
        - customer_accounts
      responses:
        '200':
          description: Customer account
          content:
            application/json:
              schema:
                properties:
                  customer_account:
                    $ref: '#/components/schemas/CustomerAccountLightShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_read
  /v1/customer_accounts/{id}:
    get:
      summary: Gets a customer_account.
      description: Gets a customer account
      tags:
        - customer_accounts
      parameters:
        - name: id
          in: path
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer account
          content:
            application/json:
              schema:
                properties:
                  customer_account:
                    $ref: '#/components/schemas/CustomerAccountLightShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_read
  /v1/customer_attributes_schemas:
    get:
      summary: Returns all customer attributes schemas.
      description: Returns all customer attributes schemas. Account manager only🔒
      tags:
        - customer_attributes_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all customer attributes schemas
          content:
            application/json:
              schema:
                properties:
                  customer_attributes_schemas:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAttributesSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_read
    post:
      summary: Creates a customer attributes schema.
      description: >
        # Description

        Account manager only🔒🔒

        Creates a customer attributes schema. A created customer attributes
        schema can not be

        changed afterwards, but in case you use an existing name for the same
        attributes type the version field is

        incremented.
      tags:
        - customer_attributes_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaCreate'
        required: true
      responses:
        '201':
          description: Customer attributes schema successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_attributes_schema:
                    $ref: '#/components/schemas/CustomerAttributesSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_write
  /v1/customer_attributes_schemas/{customer_attributes_schema_id}:
    get:
      summary: Shows a customer attributes schema.
      description: Shows a customer attributes schema. Account manager only🔒🔒
      tags:
        - customer_attributes_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_attributes_schema_id
          in: path
          description: ID of the customer attributes schema to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns customer attributes schema
          content:
            application/json:
              schema:
                properties:
                  customer_attributes_schema:
                    $ref: '#/components/schemas/CustomerAttributesSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_read
  /v1/customer_attributes_schema_memberships:
    get:
      summary: Returns all customer attributes schema memberships.
      description: >-
        Returns all customer attributes schema memberships. Account manager
        only🔒🔒
      tags:
        - customer_attributes_schema_memberships
      parameters:
        - name: organisation_ids
          description: IDs of organisations
          in: query
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: Returns all customer attributes schema memberships
          content:
            application/json:
              schema:
                properties:
                  customer_attributes_schema_memberships:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/CustomerAttributesSchemaMembershipShow
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_membership_read
    post:
      summary: Creates a customer attributes schema membership.
      description: >
        # Description

        Account manager only🔒🔒

        Creates a customer attributes schema membership. For each organisation
        it is only possible to have a base

        customer attributes schema and its subsequent versions per attributes
        type.

        <br>

        Example:

        <table>
            <tbody>
                <tr>
                    <td>Organisation A</td>
                    <td>Schema with name "Schema A", attributes type "building" and version 1</td>
                </tr>
               <tr>
                    <td>Organisation A</td>
                    <td>Schema with name "Schema A", attributes type "building" and version 2</td>
                </tr>
               <tr>
                    <td>Organisation A</td>
                    <td>Schema with name "Schema A", attributes type "building_unit" and version 1</td>
                </tr>
            </tbody>
        </table>
      tags:
        - customer_attributes_schema_memberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaMembershipCreate'
        required: true
      responses:
        '201':
          description: Customer attributes schema membership successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_attributes_schema_membership:
                    $ref: >-
                      #/components/schemas/CustomerAttributesSchemaMembershipShow
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_membership_write
  /v1/customer_account_configs:
    get:
      summary: Return customer account configuration of customer_account
      description: Return customer account configuration of customer_account
      tags:
        - customer_account_configs
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: locale
          in: query
          description: Locale
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Return customer account configuration of customer_account
          content:
            application/json:
              schema:
                properties:
                  customer_account_configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAccountConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_config_read
    post:
      summary: Create customer account configuration.
      description: Create customer account configuration. Account manager only🔒
      tags:
        - customer_account_configs
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountConfigCreate'
        required: true
      responses:
        '200':
          description: Create customer account configuration
          content:
            application/json:
              schema:
                properties:
                  customer_account_config:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAccountConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_config_write
  /v1/customer_account_configs/{customer_account_config_id}:
    put:
      summary: Updates a customer account configuration.
      description: Updates a customer account configuration. Account manager only🔒
      tags:
        - customer_account_configs
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_config_id
          in: path
          description: The ID of the customer account to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountConfigUpdate'
        required: true
      responses:
        '200':
          description: Customer account configuration successfully updated
          content:
            application/json:
              schema:
                properties:
                  customer_account_config:
                    $ref: '#/components/schemas/CustomerAccountConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_config_write
  /v1/customer_account_schemas:
    get:
      summary: Returns all customer account schemas.
      description: Returns all customer account schemas. Account manager only🔒🔒
      tags:
        - customer_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all customer account schemas
          content:
            application/json:
              schema:
                properties:
                  customer_account_schemas:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_read
    post:
      summary: Create a customer account schema.
      description: Create a customer account schema. Account manager only🔒🔒
      tags:
        - customer_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountSchemaCreate'
        required: true
      responses:
        '201':
          description: Customer account schema successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_attributes_schema:
                    $ref: '#/components/schemas/CustomerAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_write
  /v1/customer_account_schemas/{customer_account_schema_id}:
    get:
      summary: Shows a customer account schema.
      description: Shows a customer account schema. Account manager only🔒
      tags:
        - customer_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_schema_id
          in: path
          description: ID of the customer account schema to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns customer account schema
          content:
            application/json:
              schema:
                properties:
                  customer_account_schema:
                    $ref: '#/components/schemas/CustomerAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_read
    put:
      summary: Update a customer account schema.
      description: Update a customer account schema. Account manager only🔒🔒
      tags:
        - customer_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_schema_id
          in: path
          description: ID of the customer account schema to show
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountSchemaUpdate'
        required: true
      responses:
        '200':
          description: Returns customer account schema
          content:
            application/json:
              schema:
                properties:
                  customer_account_schema:
                    $ref: '#/components/schemas/CustomerAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_write
  /v1/customer_account_categories:
    get:
      summary: Return customer account categories of customer_account
      description: Return customer account categories of customer_account
      tags:
        - customer_account_categories
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: category_id
          in: query
          description: Filter customer account categories based on category id
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Return customer account categories of customer_account
          content:
            application/json:
              schema:
                properties:
                  customer_account_categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerAccountCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_read
    post:
      summary: Creates a customer account category
      description: |
        # Description
        Creates a customer account category
      tags:
        - customer_account_categories
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_account_category:
                    $ref: '#/components/schemas/CustomerAccountCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_write
  /v1/customer_account_categories/{customer_account_category_id}:
    put:
      summary: Update the customer account category
      description: Update the customer account category
      tags:
        - customer_account_categories
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_category_id
          in: path
          description: ID of the customer account category you want to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryUpdate'
        required: true
      responses:
        '200':
          description: Customer account category successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_write
    delete:
      summary: Delete the customer account category
      description: Delete the customer account category
      tags:
        - customer_account_categories
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_category_id
          in: path
          description: ID of the customer account category you want to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer account category successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_destroy
  /v1/contracts:
    get:
      summary: Returns all contracts within the given customer account
      description: |
        # Description
        Returns all contracts within the given customer account
      tags:
        - contracts
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: organisation_id
          in: query
          description: ID of the organisation
          required: false
          schema:
            type: integer
        - name: ids
          in: query
          description: IDs of the contract
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: building_id
          in: query
          description: ID of the building related with contract
          required: false
          schema:
            type: integer
        - name: unit_id
          in: query
          description: ID of the unit related with contract
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contracts within the given customer account
          content:
            application/json:
              schema:
                properties:
                  contracts:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_read
    post:
      summary: Creates a contract
      description: |
        # Description
        Creates a contract
      tags:
        - contracts
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractCreate'
        required: true
      responses:
        '201':
          description: Contract successfully created
          content:
            application/json:
              schema:
                properties:
                  contract:
                    $ref: '#/components/schemas/ContractShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_write
  /v1/contracts/{contract_id}:
    get:
      summary: Shows a contract
      description: |
        # Description
        Shows a contract
      tags:
        - contracts
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: contract_id
          in: path
          description: The ID of the contract to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the contract
          content:
            application/json:
              schema:
                properties:
                  contract:
                    $ref: '#/components/schemas/ContractShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_read
    put:
      summary: Updates an contract
      description: |
        # Description
        Updates an contract
      tags:
        - contracts
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: contract_id
          in: path
          description: The ID of the contract to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdate'
        required: true
      responses:
        '200':
          description: Contract successfully updated
          content:
            application/json:
              schema:
                properties:
                  contract:
                    $ref: '#/components/schemas/ContractShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_write
    delete:
      summary: Deletes the contract
      description: Deletes the contract
      tags:
        - contracts
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: contract_id
          in: path
          description: The ID of the contract to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract successfully deleted
          content:
            application/json:
              schema:
                properties:
                  contract:
                    $ref: '#/components/schemas/ContractShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_destroy
  /v1/contract_memberships/{contract_membership_id}:
    delete:
      summary: Destroys the contract membership.
      description: Destroys the contract membership. Account manager only🔒
      tags:
        - contract_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: contract_membership_id
          in: path
          description: ID of the contract membership to be destroyed
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  contract_membership:
                    $ref: '#/components/schemas/ContractMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_destroy
  /v1/contract_memberships:
    post:
      summary: Creates a membership in contract.
      description: Creates a membership in contract. Account manager only🔒
      tags:
        - contract_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                properties:
                  contract_membership:
                    $ref: '#/components/schemas/ContractMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_write
  /v1/contract_membership_costs:
    get:
      summary: Returns all contract membership costs for current contract membership
      description: Returns all contract membership costs for current contract membership
      tags:
        - contract_membership_costs
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of contract membership
          required: true
          schema:
            type: integer
        - name: cost_type_id
          in: query
          description: ID of cost type
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contract membership costs
          content:
            application/json:
              schema:
                properties:
                  contract_membership_costs:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractMembershipCostShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_read
    post:
      summary: Create contract membership cost
      description: Create contract membership cost
      tags:
        - contract_membership_costs
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of contract membership
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractMembershipCostCreate'
      responses:
        '200':
          description: Create contract membership cost
          content:
            application/json:
              schema:
                properties:
                  contract_membership_cost:
                    $ref: '#/components/schemas/ContractMembershipCostShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_write
  /v1/contract_membership_costs/{contract_membership_cost_id}:
    get:
      summary: Shows a contract membership cost
      description: Shows a contract membership cost
      tags:
        - contract_membership_costs
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of contract membership
          required: true
          schema:
            type: integer
        - name: contract_membership_cost_id
          in: path
          description: ID of contract membership cost
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return contract membership cost
          content:
            application/json:
              schema:
                properties:
                  contract_grant:
                    $ref: '#/components/schemas/ContractMembershipCostShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_read
    put:
      summary: Update a contract membership cost
      description: Update a contract membership cost
      tags:
        - contract_membership_costs
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of contract membership
          required: true
          schema:
            type: integer
        - name: contract_membership_cost_id
          in: path
          description: ID of contract membership cost
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractMembershipCostCreate'
      responses:
        '200':
          description: Contract membership cost successfully updated
          content:
            application/json:
              schema:
                properties:
                  contract_membership_cost:
                    $ref: '#/components/schemas/ContractMembershipCostShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_write
    delete:
      summary: Delete the contract membership cost
      description: Delete the contract membership cost
      tags:
        - contract_membership_costs
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of contract membership
          required: true
          schema:
            type: integer
        - name: contract_membership_cost_id
          in: path
          description: ID of contract membership cost
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract membership cost successfully deleted
          content:
            application/json:
              schema:
                properties:
                  contract_membership_cost:
                    $ref: '#/components/schemas/ContractMembershipCostShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_destroy
  /v1/contract_additions:
    get:
      summary: Returns all contract additions for current contract
      description: Returns all contract additions for current contract
      tags:
        - contract_additions
      parameters:
        - name: contract_id
          in: query
          description: ID of the contract
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contract additions
          content:
            application/json:
              schema:
                properties:
                  contract_additions:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractAdditionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_addition_read
    post:
      summary: Create contract addition
      description: Create contract addition
      tags:
        - contract_additions
      parameters:
        - name: contract_id
          in: query
          description: ID of the contract
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractAdditionCreate'
      responses:
        '200':
          description: Create contract addition
          content:
            application/json:
              schema:
                properties:
                  contract_addition:
                    $ref: '#/components/schemas/ContractAddition'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_addition_write
  /v1/contract_additions/{contract_addition_id}:
    get:
      summary: Shows a contract addition
      description: Shows a contract addition
      tags:
        - contract_additions
      parameters:
        - name: contract_id
          in: query
          description: ID of the contract
          required: true
          schema:
            type: integer
        - name: contract_addition_id
          in: path
          description: ID of the contract addition
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return contract addition
          content:
            application/json:
              schema:
                properties:
                  contract_addition:
                    $ref: '#/components/schemas/ContractAdditionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_addition_read
    put:
      summary: Update a contract addition
      description: Update a contract addition
      tags:
        - contract_additions
      parameters:
        - name: contract_id
          in: query
          description: ID of the contract
          required: true
          schema:
            type: integer
        - name: contract_addition_id
          in: path
          description: ID of the contract addition
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractAdditionCreate'
      responses:
        '200':
          description: Contract addition successfully updated
          content:
            application/json:
              schema:
                properties:
                  contract_addition:
                    $ref: '#/components/schemas/ContractAddition'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_addition_write
    delete:
      summary: Delete the contract addition
      description: Delete the contract addition
      tags:
        - contract_additions
      parameters:
        - name: contract_id
          in: query
          description: ID of the contract
          required: true
          schema:
            type: integer
        - name: contract_addition_id
          in: path
          description: ID of the contract addition
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract addition successfully deleted
          content:
            application/json:
              schema:
                properties:
                  contract_addition:
                    $ref: '#/components/schemas/ContractAdditionShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_addition_destroy
  /v1/contract_grants:
    get:
      summary: Returns all contract grants for current contract
      description: Returns all contract grants for current contract
      tags:
        - contract_grants
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the contract membership
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contract grants
          content:
            application/json:
              schema:
                properties:
                  contract_grants:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractGrantShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_grant_read
    post:
      summary: Create contract grant
      description: Create contract grant
      tags:
        - contract_grants
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the contract membership
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractGrantCreate'
      responses:
        '200':
          description: Create contract grant
          content:
            application/json:
              schema:
                properties:
                  contract_grant:
                    $ref: '#/components/schemas/ContractGrant'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_grant_write
  /v1/contract_grants/{contract_grant_id}:
    get:
      summary: Shows a contract grant
      description: Shows a contract grant
      tags:
        - contract_grants
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the contract membership
          required: true
          schema:
            type: integer
        - name: contract_grant_id
          in: path
          description: ID of the contract grant
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return contract grant
          content:
            application/json:
              schema:
                properties:
                  contract_grant:
                    $ref: '#/components/schemas/ContractGrantShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_grant_read
    put:
      summary: Update a contract grant
      description: Update a contract grant
      tags:
        - contract_grants
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the contract membership
          required: true
          schema:
            type: integer
        - name: contract_grant_id
          in: path
          description: ID of the contract grant
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractGrantCreate'
      responses:
        '200':
          description: Contract grant successfully updated
          content:
            application/json:
              schema:
                properties:
                  contract_grant:
                    $ref: '#/components/schemas/ContractGrant'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_grant_write
    delete:
      summary: Delete the contract grant
      description: Delete the contract grant
      tags:
        - contract_grants
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the contract membership
          required: true
          schema:
            type: integer
        - name: contract_grant_id
          in: path
          description: ID of the contract grant
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract grant successfully deleted
          content:
            application/json:
              schema:
                properties:
                  contract_grant:
                    $ref: '#/components/schemas/ContractGrantShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - contract_grant_destroy
  /v1/security_deposits:
    post:
      summary: Creates a security deposit
      description: >
        # Description

        Creates a security deposit

        Allowed security_deposit_payment_type: one_time_payment,
        paid_in_three_monthly_fees

        Allowed security_deposit_type: cash, bank_transaction, savings_account,
        surety
      tags:
        - security_deposits
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the Contract Membership
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/SecurityDepositCreate'
      responses:
        '201':
          description: Security Deposit successfully created
          content:
            application/json:
              schema:
                properties:
                  security_deposit:
                    $ref: '#/components/schemas/SecurityDepositShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - security_deposit_write
  /v1/security_deposits/{security_deposit_id}:
    put:
      summary: Updates an security deposit
      description: >
        # Description

        Updates an security deposit

        Allowed security_deposit_payment_type: one_time_payment,
        paid_in_three_monthly_fees

        Allowed security_deposit_type: cash, bank_transaction, savings_account,
        surety
      tags:
        - security_deposits
      parameters:
        - name: contract_membership_id
          in: query
          description: ID of the Contract Membership
          required: true
          schema:
            type: integer
        - name: security_deposit_id
          in: path
          description: The ID of the security deposit to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/SecurityDepositCreate'
      responses:
        '200':
          description: Security Deposit successfully updated
          content:
            application/json:
              schema:
                properties:
                  security_deposit:
                    $ref: '#/components/schemas/SecurityDepositShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - security_deposit_write
    delete:
      summary: Deletes the Security Deposit
      description: Deletes the Security Deposit
      tags:
        - security_deposits
      parameters:
        - name: security_deposit_id
          in: path
          description: ID of the Security Deposit
          required: true
          schema:
            type: integer
        - name: contract_membership_id
          in: query
          description: The ID of the contract_membership
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Security Deposit successfully deleted
          content:
            application/json:
              schema:
                properties:
                  security_deposit:
                    $ref: '#/components/schemas/SecurityDepositShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - security_deposit_destroy
  /v1/cost_types:
    get:
      summary: Returns all types of costs within the given customer_account
      description: Returns all types of costs within the given customer_account
      tags:
        - cost_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all types of costs within the given customer_account
          content:
            application/json:
              schema:
                properties:
                  cost_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/CostTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - cost_type_read
    post:
      summary: Creates a type of cost
      description: |
        # Description
        Creates a type of cost
      tags:
        - cost_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostTypeCreate'
        required: true
      responses:
        '201':
          description: Cost type successfully created
          content:
            application/json:
              schema:
                properties:
                  cost_type:
                    $ref: '#/components/schemas/CostTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - cost_type_write
  /v1/cost_types/{id}:
    get:
      summary: Shows a cost type
      description: Shows a cost type
      tags:
        - cost_types
      parameters:
        - name: id
          in: path
          description: The ID of the cost_type
          required: true
          schema:
            type: integer
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the cost_type
          content:
            application/json:
              schema:
                properties:
                  cost_type:
                    $ref: '#/components/schemas/CostTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - cost_type_read
    put:
      summary: Updates an cost_type
      description: Updates an cost_type
      tags:
        - cost_types
      parameters:
        - name: id
          in: path
          description: The ID of the cost_type to update
          required: true
          schema:
            type: integer
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostTypeUpdate'
        required: true
      responses:
        '200':
          description: Cost type successfully updated
          content:
            application/json:
              schema:
                properties:
                  cost_type:
                    $ref: '#/components/schemas/CostTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - cost_type_write
    delete:
      summary: Deletes the cost_type
      description: Deletes the cost_type
      tags:
        - cost_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID of the cost_type to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cost type successfully deleted
          content:
            application/json:
              schema:
                properties:
                  cost_type:
                    $ref: '#/components/schemas/CostTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - cost_type_destroy
  /v1/property_types:
    get:
      summary: Returns all property types currently available
      description: Returns all property types currently available
      tags:
        - property_types
      responses:
        '200':
          description: Returns all property types
          content:
            application/json:
              schema:
                properties:
                  property_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_type_read
  /v1/properties:
    get:
      summary: >-
        Returns all properties for the current organisation within the given
        organisation.
      description: >-
        Returns all properties for the current organisation within the given
        organisation. Organisation manager only 🔒
      tags:
        - properties
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: external_id
          in: query
          description: The ID on other systems of the properties to show
          required: false
          schema:
            type: string
        - name: source_system
          in: query
          description: The name on other systems of the properties to show
          required: false
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns all properties for the organisation within the given
            organisation
          content:
            application/json:
              schema:
                properties:
                  properties:
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_read
    post:
      summary: Creates a property for the current organisation of the user.
      description: >-
        Creates a property for the current organisation of the user.
        Organisation manager only 🔒
      tags:
        - properties
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyCreate'
        required: true
      responses:
        '201':
          description: Property successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_write
  /v1/properties/{property_id}:
    get:
      summary: Returns the property for the current organisation of the user.
      description: >-
        Returns the property for the current organisation of the user.
        Organisation manager only 🔒
      tags:
        - properties
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: property_id
          in: path
          description: ID of the property
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_read
    put:
      summary: Updates the property for the current organisation of the user.
      description: >-
        Updates the property for the current organisation of the user.
        Organisation manager only 🔒
      tags:
        - properties
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: property_id
          in: path
          description: ID of the property you want to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyUpdate'
        required: true
      responses:
        '200':
          description: Property successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_write
    delete:
      summary: Deletes the property within the current organisation.
      description: >-
        Deletes the property within the current organisation. Organisation
        manager only 🔒
      tags:
        - properties
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: property_id
          in: path
          description: ID of the property you want to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Property successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_destroy
  /v1/property_managers:
    get:
      summary: Returns all property managers within the given customer account.
      description: >-
        Returns all property managers within the given customer account. Admin
        and supervisor only 🔒
      tags:
        - property_managers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all property managers within the given customer account.
          content:
            application/json:
              schema:
                properties:
                  property_managers:
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyManagerIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_manager_read
    post:
      summary: Creates a property manager for the current customer account.
      description: >-
        Creates a property manager for the current customer account. Admin and
        supervisor only 🔒
      tags:
        - property_managers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerCreate'
        required: true
      responses:
        '201':
          description: Property Manager successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_manager_write
  /v1/property_managers/{property_manager_id}:
    get:
      summary: Returns the property manager for the current account of the user.
      description: >-
        Returns the property manager for the current account of the user. Admin
        and supervisor only 🔒
      tags:
        - property_managers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: property_manager_id
          in: path
          description: ID of the property manager
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the property manager
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_manager_read
    put:
      summary: Updates the property manager for the current account of the user.
      description: >-
        Updates the property manager for the current account of the user. Admin
        and Supervisor only 🔒
      tags:
        - property_managers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: property_manager_id
          in: path
          description: ID of the property manager you want to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerUpdate'
        required: true
      responses:
        '200':
          description: Property Manager successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_manager_write
    delete:
      summary: Deletes the property manager within the current account.
      description: >-
        Deletes the property manager within the current account. Admin and
        supervisor only 🔒
      tags:
        - property_managers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: property_manager_id
          in: path
          description: ID of the property manager you want to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Property Manager successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - property_manager_destroy
  /v1/lots:
    get:
      summary: Returns all lots within the given organisation.
      description: >-
        Returns all lots within the given organisation. Organisation manager
        only 🔒
      tags:
        - lots
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all lots within the given organisation
          content:
            application/json:
              schema:
                properties:
                  lots:
                    type: array
                    items:
                      $ref: '#/components/schemas/LotIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - lot_read
    post:
      summary: Creates a lot.
      description: Creates a lot. Organisation manager only 🔒
      tags:
        - lots
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotCreate'
        required: true
      responses:
        '201':
          description: Lot successfully created
          content:
            application/json:
              schema:
                properties:
                  lot:
                    $ref: '#/components/schemas/LotShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - lot_write
  /v1/lots/{lot_id}:
    get:
      summary: Shows a lot.
      description: Shows a lot. Organisation manager only 🔒
      tags:
        - lots
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: lot_id
          in: path
          description: The ID of the lot to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the lot
          content:
            application/json:
              schema:
                properties:
                  lot:
                    $ref: '#/components/schemas/LotShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - lot_read
    put:
      summary: Updates an lot.
      description: Updates an lot. Organisation manager only 🔒
      tags:
        - lots
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: lot_id
          in: path
          description: The ID of the lot to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotUpdate'
        required: true
      responses:
        '200':
          description: Lot successfully updated
          content:
            application/json:
              schema:
                properties:
                  lot:
                    $ref: '#/components/schemas/LotShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - lot_write
    delete:
      summary: Deletes the lot within the current organisation.
      description: >-
        Deletes the lot within the current organisation. Organisation manager
        only 🔒
      tags:
        - lots
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: lot_id
          in: path
          description: The ID of the lot to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lot successfully deleted
          content:
            application/json:
              schema:
                properties:
                  lot:
                    $ref: '#/components/schemas/LotShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - lot_destroy
  /v1/building_filter_settings:
    get:
      summary: Returns all building filter settings currently available
      description: Returns all building filter settings currently available
      tags:
        - building_filter_settings
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all building filter settings
          content:
            application/json:
              schema:
                properties:
                  building_filter_settings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingFilterSettings'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_read
    post:
      summary: Create building filter settings
      description: Create building filter settings
      tags:
        - building_filter_settings
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/BuildingFilterSettingsCreate'
      responses:
        '200':
          description: Create building filter settings
          content:
            application/json:
              schema:
                properties:
                  building_filter_settings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingFilterSettings'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_write
  /v1/building_filter_settings/filter_setting_fields:
    get:
      summary: Returns all building and building unit fields.
      description: Returns all building and building unit fields. Account manager only🔒🔒
      tags:
        - building_filter_settings
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all building and building unit fields
          content:
            application/json:
              schema:
                properties:
                  building_filter_settings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingFilterSettingFields'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_read
  /v1/building_filter_settings/{building_filter_setting_id}:
    get:
      summary: Shows a building filter setting
      description: Shows a building filter setting
      tags:
        - building_filter_settings
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_filter_setting_id
          in: path
          description: ID of the building filter setting to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns customer attributes schema
          content:
            application/json:
              schema:
                properties:
                  building_filter_setting:
                    $ref: '#/components/schemas/BuildingFilterSettingsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_read
    put:
      summary: Updates a building filter setting.
      description: Updates a building filter setting. Account manager only🔒🔒
      tags:
        - building_filter_settings
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_filter_setting_id
          in: path
          description: ID of the building filter setting you want to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/BuildingFilterSettingsCreate'
      responses:
        '200':
          description: Building filter setting successfully updated
          content:
            application/json:
              schema:
                properties:
                  building_filter_settings:
                    $ref: '#/components/schemas/BuildingFilterSettingsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_write
    delete:
      summary: Deletes the building filter setting within the current customer account.
      description: >-
        Deletes the building filter setting within the current customer account.
        Account manager only🔒
      tags:
        - building_filter_settings
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_filter_setting_id
          in: path
          description: ID of the building filter setting to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building filter setting successfully deleted
          content:
            application/json:
              schema:
                properties:
                  building_filter_settings:
                    $ref: '#/components/schemas/BuildingFilterSettingsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_destroy
  /v1/building_save_filters:
    get:
      summary: Returns all save filters for current user
      description: Returns all save filters for current user
      tags:
        - building_save_filters
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all save filters
          content:
            application/json:
              schema:
                properties:
                  building_save_filter:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingSaveFiltersShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_save_filter_read
    post:
      summary: Create building save filter
      description: Create building save filter
      tags:
        - building_save_filters
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/BuildingSaveFiltersCreate'
      responses:
        '200':
          description: Create save filter
          content:
            application/json:
              schema:
                properties:
                  building_save_filter:
                    $ref: '#/components/schemas/BuildingSaveFilters'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_save_filter_write
  /v1/building_save_filters/{building_save_filter_id}:
    get:
      summary: Shows a save filter
      description: Shows a save filter
      tags:
        - building_save_filters
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_save_filter_id
          in: path
          description: ID of the save filter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return save filter
          content:
            application/json:
              schema:
                properties:
                  building_save_filter:
                    $ref: '#/components/schemas/BuildingSaveFiltersShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_save_filter_read
    put:
      summary: Update a save filter
      description: Update a save filter
      tags:
        - building_save_filters
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_save_filter_id
          in: path
          description: ID of the save filter
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/BuildingSaveFiltersCreate'
      responses:
        '200':
          description: Save filter successfully updated
          content:
            application/json:
              schema:
                properties:
                  building_save_filter:
                    $ref: '#/components/schemas/BuildingSaveFilters'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_save_filter_write
    delete:
      summary: Delete the save filter
      description: Delete the save filter
      tags:
        - building_save_filters
      parameters:
        - name: building_save_filter_id
          in: path
          description: ID of the save filter
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Save filter successfully deleted
          content:
            application/json:
              schema:
                properties:
                  building_save_filter:
                    $ref: '#/components/schemas/BuildingSaveFiltersShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_save_filter_destroy
  /v1/building_types:
    get:
      summary: Returns all building types currently available
      description: Returns all building types currently available
      tags:
        - building_types
      responses:
        '200':
          description: Returns all building types
          content:
            application/json:
              schema:
                properties:
                  building_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_type_read
  /v1/buildings:
    get:
      summary: Returns all buildings within the given organisation
      description: >
        # Description

        Returns all buildings within the given organisation

        ⚠️⚠️ If <b>presets_standard_fields</b>,
        <b>presets_customer_attributes</b>, <b>tags</b> or <b>categories</b>
        params are provided

        it means filters are activated.
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: external_id
          in: query
          description: The ID on other systems of the buildings to show
          required: false
          schema:
            type: string
        - name: source_system
          in: query
          description: The name on other systems of the buildings to show
          required: false
          schema:
            type: string
        - name: presets_standard_fields
          in: query
          description: >
            Filter building with standard fields of building and building_units
            <br>
              {
                building: { name: ['name_of_building',...], city: ['Berlin', ...]}
                building_unit: { name: ['name_of_unit', ...], tenant: ['name_of_tentant', ...] }
              }
          required: false
          schema:
            type: object
        - name: presets_customer_attributes
          in: query
          description: >
            Filter building with customer_attributes of building and
            building_units <br>

            all attributes can be strings separated by | except array fields
            that should be one array with strings
              {
                building: { region: 'Südwest|West', ...}
                building_unit: { unit_type: 'assisted_living_own_woe|living', ... }
              }
          required: false
          schema:
            type: object
        - name: tags
          in: query
          description: >
            Filter building with tag label related to building and
            building_units <br>
              {
                building: ['label_of_a_tag',...]
                building_unit: ['label_of_a_tag',...]
              }
          required: false
          schema:
            type: object
        - name: categories
          in: query
          description: >
            Filter building with category label related to building and
            building_units <br>
              {
                building: { person_memberships: { architect: ['John Doe'], property_manager: ['John Doe 2'] } }
                building_unit: { building_unit_places: ['Building unit place 1'] }
              }
          required: false
          schema:
            type: object
      responses:
        '200':
          description: Returns all buildings within the given organisation
          content:
            application/json:
              schema:
                properties:
                  buildings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingIndexWithoutUnits'
                  presets:
                    $ref: '#/components/schemas/BuildingPresets'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_read
    post:
      summary: Creates a building
      description: >
        # Description

        Creates a building

        All global and local attributes that are time dependent will be added to
        the time_dependent_attributes table

        Global Time Dependent Attributes: ["planned_monthly_rent"]
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingCreate'
        required: true
      responses:
        '201':
          description: Building successfully created
          content:
            application/json:
              schema:
                properties:
                  building:
                    $ref: '#/components/schemas/BuildingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_write
  /v1/buildings/{building_id}:
    get:
      summary: Shows a building
      description: Shows a building
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_id
          in: path
          description: The ID of the building to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the building
          content:
            application/json:
              schema:
                properties:
                  building:
                    $ref: '#/components/schemas/BuildingShowWithFacilities'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_read
    put:
      summary: Updates an building
      description: >
        # Description

        Updates an building

        All global and local attributes that are time dependent cannot be
        updated directly.

        You need to create time_dependent_attributes.

        Global Time Dependent Attributes: ["planned_monthly_rent"]
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_id
          in: path
          description: The ID of the building to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUpdate'
        required: true
      responses:
        '200':
          description: Building successfully updated
          content:
            application/json:
              schema:
                properties:
                  building:
                    $ref: '#/components/schemas/BuildingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_write
    delete:
      summary: Deletes the building within the current organisation.
      description: >-
        Deletes the building within the current organisation. Account manager
        only🔒🔒
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_id
          in: path
          description: The ID of the building to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building successfully deleted
          content:
            application/json:
              schema:
                properties:
                  building:
                    $ref: '#/components/schemas/BuildingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_destroy
  /v1/buildings/{building_id}/scorecard_memberships:
    get:
      summary: List scorecard memberships by building
      description: List scorecard memberships by building
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_id
          in: path
          description: The ID of the building to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard memberships
          content:
            application/json:
              schema:
                properties:
                  scorecard_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipsIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_read
  /v1/building_unit_types:
    get:
      summary: >-
        Returns all building unit types for that customer account including
        default types
      description: >-
        Returns all building unit types for that customer account including
        default types
      tags:
        - building_unit_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all building unit types
          content:
            application/json:
              schema:
                properties:
                  building_unit_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_type_read
    post:
      summary: Create building unit type.
      description: Create building unit type. Account manager only🔒🔒
      tags:
        - building_unit_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitTypeCreate'
        required: true
      responses:
        '200':
          description: Create building unit type
          content:
            application/json:
              schema:
                properties:
                  building_unit_type:
                    $ref: '#/components/schemas/BuildingUnitType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_type_write
  /v1/building_unit_types/{building_unit_type_id}:
    get:
      summary: Shows a building unit type
      description: Shows a building unit type
      tags:
        - building_unit_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_unit_type_id
          in: path
          description: ID of building unit type to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit type
          content:
            application/json:
              schema:
                properties:
                  building_unit_type:
                    $ref: '#/components/schemas/BuildingUnitType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_type_read
    put:
      summary: Updates a building unit type.
      description: Updates a building unit type. Account manager only🔒🔒
      tags:
        - building_unit_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of customer account
          required: true
          schema:
            type: integer
        - name: building_unit_type_id
          in: path
          description: ID of building unit type to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building unit type successfully updated
          content:
            application/json:
              schema:
                properties:
                  building_unit_type:
                    $ref: '#/components/schemas/BuildingUnitType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_type_write
    delete:
      summary: Deletes building unit type within the current customer account.
      description: >-
        Deletes building unit type within the current customer account. Account
        manager only🔒
      tags:
        - building_unit_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: building_unit_type_id
          in: path
          description: ID of building unit type to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building unit type successfully deleted
          content:
            application/json:
              schema:
                properties:
                  building_unit_types:
                    $ref: '#/components/schemas/BuildingUnitType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_type_destroy
  /v1/building_units:
    get:
      summary: Returns all building units within the given organisation
      description: >
        # Description

        Returns all building units within the given organisation

        ⚠️⚠️ If <b>presets_standard_fields</b>,
        <b>presets_customer_attributes</b>, <b>tags</b> or <b>categories</b>
        params are provided

        it means filters are activated.
      tags:
        - building_units
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: external_id
          in: query
          description: The ID on other systems of the buildings to show
          required: false
          schema:
            type: string
        - name: source_system
          in: query
          description: The name on other systems of the buildings to show
          required: false
          schema:
            type: string
        - name: building_ids
          in: query
          description: The IDs of building
          required: false
          example: 1,2,3
          schema:
            type: string
        - name: presets_standard_fields
          in: query
          description: |
            Filter building units with standard fields <br>
              {
                building_unit: { name: ['name_of_unit', ...], tenant: ['name_of_tentant', ...] }
              }
          required: true
          schema:
            type: object
        - name: presets_customer_attributes
          in: query
          description: >
            Filter building units with customer_attributes fields <br>

            all attributes can be strings separated by | except array fields
            that should be one array with strings
              {
                building_unit: { unit_type: 'assisted_living_own_woe|living', ... }
              }
          required: true
          schema:
            type: object
        - name: tags
          in: query
          description: |
            Filter units with tag label<br>
              {
                building_unit: ['label_of_a_tag',...]
              }
          required: false
          schema:
            type: object
        - name: categories
          in: query
          description: >
            Filter building units with category label related to building_units
            <br>
              {
                building: {}
                building_unit: { building_unit_places: ["Building unit place label"] }
              }
          required: false
          schema:
            type: object
      responses:
        '200':
          description: Returns all building units within the given organisation
          content:
            application/json:
              schema:
                properties:
                  building_units:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_read
    post:
      summary: Creates a building unit
      description: >
        # Description

        Creates a building unit

        All global and local attributes that are time dependent will be added to
        the time_dependent_attributes table

        Global Time Dependent Attributes: ["planned_monthly_rent"]
      tags:
        - building_units
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitCreate'
        required: true
      responses:
        '201':
          description: Building unit successfully created
          content:
            application/json:
              schema:
                properties:
                  building_unit:
                    $ref: '#/components/schemas/BuildingUnitShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_write
  /v1/building_units/{building_unit_id}:
    get:
      summary: Shows a building unit and all memberships of that unit
      description: Shows a building unit and all memberships of that unit
      tags:
        - building_units
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_unit_id
          in: path
          description: ID of the building unit to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns building unit
          content:
            application/json:
              schema:
                properties:
                  building_unit:
                    $ref: '#/components/schemas/BuildingUnitShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_read
    put:
      summary: Updates the building unit
      description: >
        # Description

        Updates the building unit

        All global and local attributes that are time dependent cannot be
        updated directly.

        You need to create time_dependent_attributes.

        Global Time Dependent Attributes: ["quality_of_available_features",
        "current_condition", "planned_monthly_rent", "planned_operating_cost",
        "planned_total_rent", "planned_deposit",
        "heating_costs_in_operating_costs", "quality_of_available_features",
        "current_condition"]
      tags:
        - building_units
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_unit_id
          in: path
          description: ID of the building unit to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitUpdate'
        required: true
      responses:
        '200':
          description: Returns the updated building unit
          content:
            application/json:
              schema:
                properties:
                  building_unit:
                    $ref: '#/components/schemas/BuildingUnitShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_write
    delete:
      summary: Destroys the building unit and all memberships of that unit!
      description: Destroys the building unit and all memberships of that unit!
      tags:
        - building_units
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_unit_id
          in: path
          description: ID of the building unit to be destroyed
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the destroyed building unit
          content:
            application/json:
              schema:
                properties:
                  building_unit:
                    $ref: '#/components/schemas/BuildingUnitShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_destroy
  /v1/building_unit_memberships/{building_unit_membership_id}:
    delete:
      summary: Destroys the organisation membership
      description: Destroys the organisation membership
      tags:
        - building_unit_memberships
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_unit_membership_id
          in: path
          description: ID of the organisation membership to be destroyed
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  building_unit_membership:
                    $ref: '#/components/schemas/BuildingUnitMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_membership_destroy
  /v1/building_unit_memberships:
    post:
      summary: Creates a membership in building unit
      description: Creates a membership in building unit
      tags:
        - building_unit_memberships
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                properties:
                  building_unit_membership:
                    $ref: '#/components/schemas/BuildingUnitMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_membership_write
  /v1/building_energies:
    get:
      summary: Return building energies of the building
      description: Return building energies of the building
      tags:
        - building_energies
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building energies of the building
          content:
            application/json:
              schema:
                properties:
                  building_energies:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingEnergyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_energy_read
    post:
      summary: Creates a building energy
      description: |
        # Description
        Creates a building energy
      tags:
        - building_energies
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingEnergyCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_energy:
                    $ref: '#/components/schemas/BuildingEnergyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_energy_write
  /v1/building_energies/{building_energy_id}:
    put:
      summary: Update building energy
      description: Update building energy
      tags:
        - building_energies
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_energy_id
          in: path
          description: ID of the building energy to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingEnergyUpdate'
        required: true
      responses:
        '200':
          description: Building energy successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingEnergyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_energy_write
  /v1/buildings_finances:
    get:
      summary: Return building finances of the building
      description: Return building finances of the building
      tags:
        - buildings_finances
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building finances of the building
          content:
            application/json:
              schema:
                properties:
                  buildings_finances:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - buildings_finance_read
    post:
      summary: Creates a building finance
      description: |
        # Description
        Creates a building finance
      tags:
        - buildings_finances
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingsFinanceCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  buildings_finance:
                    $ref: '#/components/schemas/BuildingsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - buildings_finance_write
  /v1/buildings_finances/{buildings_finance_id}:
    put:
      summary: Update building finance
      description: Update building finance
      tags:
        - buildings_finances
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: buildings_finance_id
          in: path
          description: ID of the building finance to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingsFinanceUpdate'
        required: true
      responses:
        '200':
          description: Building finance successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - buildings_finance_write
  /v1/building_units_finances:
    post:
      summary: Creates a building unit finance
      description: |
        # Description
        Creates a building unit finance
      tags:
        - building_units_finances
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitsFinanceCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_units_finance:
                    $ref: '#/components/schemas/BuildingUnitsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_units_finance_write
  /v1/building_units_finances/{building_units_finance_id}:
    put:
      summary: Update building unit finance
      description: Update building unit finance
      tags:
        - building_units_finances
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
        - name: building_units_finance_id
          in: path
          description: ID of the building unit finance to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitsFinanceUpdate'
        required: true
      responses:
        '200':
          description: Building unit finance successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_units_finance_write
  /v1/building_fms:
    get:
      summary: Return building fms of the building
      description: Return building fms of the building
      tags:
        - building_fms
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building fms of the building
          content:
            application/json:
              schema:
                properties:
                  building_fms:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingFmShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_fm_read
    post:
      summary: Creates a building fm
      description: |
        # Description
        Creates a building fm
      tags:
        - building_fms
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingFmCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_fm:
                    $ref: '#/components/schemas/BuildingFmShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_fm_write
  /v1/building_fms/{building_fm_id}:
    put:
      summary: Update building fm
      description: Update building fm
      tags:
        - building_fms
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_fm_id
          in: path
          description: ID of the building fm to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingFmUpdate'
        required: true
      responses:
        '200':
          description: Building fm successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingFmShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_fm_write
  /v1/building_unit_retails:
    get:
      summary: Return building unit retails of the building
      description: Return building unit retails of the building
      tags:
        - building_unit_retails
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit retails of the building unit
          content:
            application/json:
              schema:
                properties:
                  building_unit_retails:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitRetailShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_read
    post:
      summary: Creates a building unit retail
      description: |
        # Description
        Creates a building unit retail
      tags:
        - building_unit_retails
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailCreate'
        required: true
      responses:
        '201':
          description: Building unit retail successfully created
          content:
            application/json:
              schema:
                properties:
                  building_unit_retail:
                    $ref: '#/components/schemas/BuildingUnitRetailShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_write
  /v1/building_unit_retails/{building_unit_retail_id}:
    put:
      summary: Update building unit retail
      description: Update building unit retail
      tags:
        - building_unit_retails
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_unit_retail_id
          in: path
          description: ID of the building unit retail to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailUpdate'
        required: true
      responses:
        '200':
          description: Building unit retail successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitRetailShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_write
  /v1/building_unit_retail_metrics:
    get:
      summary: Return building unit retails of the building unit retail
      description: Return building unit retails of the building unit retail
      tags:
        - building_unit_retail_metrics
      parameters:
        - name: building_unit_retail_id
          in: query
          description: ID of the building unit retail unit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit retails of the building unit retail
          content:
            application/json:
              schema:
                properties:
                  building_unit_retail_metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitRetailMetricShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_metric_read
    post:
      summary: Creates a building unit retail metric
      description: |
        # Description
        Creates a building unit retail metric
      tags:
        - building_unit_retail_metrics
      parameters:
        - name: building_unit_retail_id
          in: query
          description: ID of the building unit retail unit
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailMetricCreate'
        required: true
      responses:
        '201':
          description: Building unit retail metric successfully created
          content:
            application/json:
              schema:
                properties:
                  building_unit_retail_metric:
                    $ref: '#/components/schemas/BuildingUnitRetailMetricShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_metric_write
  /v1/building_unit_retail_metrics/{building_unit_retail_metric_id}:
    put:
      summary: Update building unit retail
      description: Update building unit retail
      tags:
        - building_unit_retail_metrics
      parameters:
        - name: building_unit_retail_id
          in: query
          description: ID of the building unit retail
          required: true
          schema:
            type: integer
        - name: building_unit_retail_metric_id
          in: path
          description: ID of the building unit retail metric to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailMetricUpdate'
        required: true
      responses:
        '200':
          description: Building unit retail successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitRetailMetricShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_metric_write
  /v1/building_wastes:
    get:
      summary: Return building wastes of the building
      description: Return building wastes of the building
      tags:
        - building_wastes
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building wastes of the building
          content:
            application/json:
              schema:
                properties:
                  building_wastes:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingWasteShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_waste_read
    post:
      summary: Creates a building waste
      description: |
        # Description
        Creates a building waste
      tags:
        - building_wastes
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWasteCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_waste:
                    $ref: '#/components/schemas/BuildingWasteShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_waste_write
  /v1/building_wastes/{building_waste_id}:
    put:
      summary: Update building waste
      description: Update building waste
      tags:
        - building_wastes
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_waste_id
          in: path
          description: ID of the building waste to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWasteUpdate'
        required: true
      responses:
        '200':
          description: Building waste successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingWasteShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_waste_write
  /v1/building_waters:
    get:
      summary: Return building waters of the building
      description: Return building waters of the building
      tags:
        - building_waters
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building waters of the building
          content:
            application/json:
              schema:
                properties:
                  building_waters:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingWaterShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_water_read
    post:
      summary: Creates a building water
      description: |
        # Description
        Creates a building water
      tags:
        - building_waters
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWaterCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_water:
                    $ref: '#/components/schemas/BuildingWaterShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_water_write
  /v1/building_waters/{building_water_id}:
    put:
      summary: Update building water
      description: Update building water
      tags:
        - building_waters
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_water_id
          in: path
          description: ID of the building water to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWaterUpdate'
        required: true
      responses:
        '200':
          description: Building water successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingWaterShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_water_write
  /v1/addtl_building_ids:
    get:
      summary: Return addtl building ids of the building
      description: Return addtl building ids of the building
      tags:
        - addtl_building_ids
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return addtl building ids
          content:
            application/json:
              schema:
                properties:
                  addtl_building_ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/AddtlBuildingIdShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - addtl_building_id_read
    post:
      summary: Creates a addtl building id
      description: |
        # Description
        Creates a addtl building id
      tags:
        - addtl_building_ids
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddtlBuildingIdCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  addtl_building_id:
                    $ref: '#/components/schemas/AddtlBuildingIdShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - addtl_building_id_write
  /v1/addtl_building_ids/{addtl_building_id_id}:
    put:
      summary: Update addtl building id
      description: Update addtl building id
      tags:
        - addtl_building_ids
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: addtl_building_id_id
          in: path
          description: ID of the addtl building id to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddtlBuildingIdUpdate'
        required: true
      responses:
        '200':
          description: Addtl building id successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlBuildingIdShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - addtl_building_id_write
  /v1/phases:
    get:
      summary: Return phases of the building
      description: Return phases of the building
      tags:
        - phases
      responses:
        '200':
          description: Return phases of the building or unit
          content:
            application/json:
              schema:
                properties:
                  phases:
                    type: array
                    items:
                      $ref: '#/components/schemas/PhaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - phase_read
    post:
      summary: Creates a phase
      description: |
        # Description
        Creates a phase
      tags:
        - phases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseCreate'
        required: true
      responses:
        '201':
          description: Phase successfully created
          content:
            application/json:
              schema:
                properties:
                  phase:
                    $ref: '#/components/schemas/PhaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - phase_write
  /v1/phases/{phase_id}:
    put:
      summary: Update phase
      description: Update phase
      tags:
        - phases
      parameters:
        - name: phase_id
          in: path
          description: ID of the phase to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdate'
        required: true
      responses:
        '200':
          description: Building phase successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - phase_write
  /v1/rent_trackers:
    post:
      summary: Creates a rent_tracker
      description: |
        # Description
        Creates a rent_tracker
      tags:
        - rent_trackers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RentTrackerCreate'
      responses:
        '201':
          description: RentTracker successfully created
          content:
            application/json:
              schema:
                properties:
                  rent_tracker:
                    $ref: '#/components/schemas/RentTrackerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_tracker_write
    get:
      summary: Return rent_trackers
      description: Return rent_trackers
      tags:
        - rent_trackers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: string
        - name: organisation_id
          in: query
          description: ID of the organisation
          schema:
            type: string
        - name: unit_ids
          in: query
          description: IDs of the units
          example: 1,2,3
          schema:
            type: string
        - name: contract_ids
          in: query
          description: IDs of the contracts
          example: 1,2,3
          schema:
            type: string
      responses:
        '200':
          description: Return rent_trackers
          content:
            application/json:
              schema:
                properties:
                  rent_trackers:
                    type: array
                    items:
                      $ref: '#/components/schemas/RentTrackerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_tracker_read
  /v1/rent_trackers/{rent_tracker_id}:
    get:
      summary: Return rent_tracker
      description: Return rent_tracker
      tags:
        - rent_trackers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: string
        - name: rent_tracker_id
          in: path
          description: ID of the rent_tracker
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns rent_tracker
          content:
            application/json:
              schema:
                properties:
                  rent_tracker:
                    $ref: '#/components/schemas/RentTrackerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_tracker_read
    put:
      summary: Update rent_tracker
      description: Update rent_tracker
      tags:
        - rent_trackers
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: string
        - name: rent_tracker_id
          in: path
          description: ID of the rent_tracker to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RentTrackerCreate'
      responses:
        '200':
          description: Building rent_tracker successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentTrackerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_tracker_write
  /v1/building_parkings:
    get:
      summary: Return building parkings of the building
      description: Return building parkings of the building
      tags:
        - building_parkings
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building parkings of the building
          content:
            application/json:
              schema:
                properties:
                  building_parkings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingParkingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_parking_read
    post:
      summary: Creates a building parking
      description: |
        # Description
        Creates a building parking
      tags:
        - building_parkings
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingParkingCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_parking:
                    $ref: '#/components/schemas/BuildingParkingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_parking_write
  /v1/building_parkings/{building_parking_id}:
    put:
      summary: Update building parking
      description: Update building parking
      tags:
        - building_parkings
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_parking_id
          in: path
          description: ID of the building parking to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingParkingUpdate'
        required: true
      responses:
        '200':
          description: Building parking successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingParkingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_parking_write
  /v1/building_areas:
    get:
      summary: Return building areas of the building
      description: Return building areas of the building
      tags:
        - building_areas
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building areas of the building
          content:
            application/json:
              schema:
                properties:
                  building_areas:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_area_read
    post:
      summary: Creates a building area
      description: |
        # Description
        Creates a building area
      tags:
        - building_areas
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingAreaCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_area:
                    $ref: '#/components/schemas/BuildingAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_area_write
  /v1/building_areas/{building_area_id}:
    put:
      summary: Update building area
      description: Update building area
      tags:
        - building_areas
      parameters:
        - name: building_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_area_id
          in: path
          description: ID of the building area to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingAreaUpdate'
        required: true
      responses:
        '200':
          description: building area successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_area_write
  /v1/building_unit_areas:
    get:
      summary: Return building areas of the building
      description: Return building areas of the building
      tags:
        - building_unit_areas
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building areas of the building unit
          content:
            application/json:
              schema:
                properties:
                  building_unit_areas:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_area_read
    post:
      summary: Creates a building area
      description: |
        # Description
        Creates a building area
      tags:
        - building_unit_areas
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitAreaCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_unit_area:
                    $ref: '#/components/schemas/BuildingUnitAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_area_write
  /v1/building_unit_areas/{building_unit_area_id}:
    put:
      summary: Update building area
      description: Update building area
      tags:
        - building_unit_areas
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
        - name: building_unit_area_id
          in: path
          description: ID of the building area to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitAreaUpdate'
        required: true
      responses:
        '200':
          description: building area successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_area_write
  /v1/building_unit_places:
    get:
      summary: Return building unit places of the unit
      description: Return building unit places of the unit
      tags:
        - building_unit_places
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit places of the unit
          content:
            application/json:
              schema:
                properties:
                  building_unit_places:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitPlaceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_place_read
    post:
      summary: Creates a building unit places
      description: |
        # Description
        Creates a building unit places
      tags:
        - building_unit_places
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlaceCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                properties:
                  building_unit_place:
                    $ref: '#/components/schemas/BuildingUnitPlaceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_place_write
  /v1/building_unit_places/{building_unit_place_id}:
    put:
      summary: Update building unit place
      description: Update building unit place
      tags:
        - building_unit_places
      parameters:
        - name: building_unit_id
          in: query
          description: ID of the building unit
          required: true
          schema:
            type: integer
        - name: building_unit_place_id
          in: path
          description: ID of the building unit place to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlaceUpdate'
        required: true
      responses:
        '200':
          description: Building unit place successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitPlaceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_place_write
  /v1/building_unit_places_timeboxeds:
    get:
      summary: Return building energies of the building
      description: Return building energies of the building
      tags:
        - building_unit_places_timeboxeds
      parameters:
        - name: building_unit_place_id
          in: query
          description: ID of the building unit place
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit place timeboxes of the unit
          content:
            application/json:
              schema:
                properties:
                  building_unit_places_timeboxeds:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_places_timeboxed_read
    post:
      summary: Creates a building unit place timeboxed
      description: |
        # Description
        Creates a building energy
      tags:
        - building_unit_places_timeboxeds
      parameters:
        - name: building_unit_place_id
          in: query
          description: ID of the building unit place
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedCreate'
        required: true
      responses:
        '201':
          description: Building unit place timeboxed successfully created!
          content:
            application/json:
              schema:
                properties:
                  building_unit_places_timeboxed:
                    $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_places_timeboxed_write
  /v1/building_unit_places_timeboxeds/{building_unit_places_timeboxed_id}:
    put:
      summary: Update building unit place timeboxed
      description: Update building unit place timeboxed
      tags:
        - building_unit_places_timeboxeds
      parameters:
        - name: building_unit_place_id
          in: query
          description: ID of the building
          required: true
          schema:
            type: integer
        - name: building_unit_places_timeboxed_id
          in: path
          description: ID of the building unit place timeboxed to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedUpdate'
        required: true
      responses:
        '200':
          description: Building unit place timeboxed successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_places_timeboxed_write
  /v1/building_unit_places_properties:
    get:
      summary: Return building unit place properties
      description: Return building unit place properties
      tags:
        - building_unit_places_properties
      parameters:
        - name: building_unit_places_timeboxed_id
          in: query
          description: ID of the building unit place timeboxed
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit place properties of the timeboxed
          content:
            application/json:
              schema:
                properties:
                  building_unit_places_properties:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingUnitPlacesPropertieshow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_places_property_read
    post:
      summary: Creates a building unit place property
      description: |
        # Description
        Creates a building unit place property
      tags:
        - building_unit_places_properties
      parameters:
        - name: building_unit_places_timeboxed_id
          in: query
          description: ID of the building unit timeboxed
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesPropertyCreate'
        required: true
      responses:
        '201':
          description: Building unit place property successfully created!
          content:
            application/json:
              schema:
                properties:
                  building_unit_places_property:
                    $ref: '#/components/schemas/BuildingUnitPlacesPropertieshow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_places_property_write
  /v1/building_unit_places_properties/{building_unit_places_property_id}:
    put:
      summary: Update building unit place property
      description: Update building unit place property
      tags:
        - building_unit_places_properties
      parameters:
        - name: building_unit_places_timeboxed_id
          in: query
          description: ID of the timeboxed
          required: true
          schema:
            type: integer
        - name: building_unit_places_property_id
          in: path
          description: ID of the building unit place property to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesPropertyUpdate'
        required: true
      responses:
        '200':
          description: Building unit place property successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitPlacesPropertieshow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - building_unit_places_property_write
  /v1/people:
    get:
      summary: Returns all people within the given organisation.
      description: >-
        Returns all people within the given organisation. Organisation manager
        only 🔒
      tags:
        - people
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all people within the given organisation
          content:
            application/json:
              schema:
                properties:
                  people:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersonIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_read
    post:
      summary: Creates a person.
      description: Creates a person. Organisation manager only 🔒
      tags:
        - people
      parameters:
        - name: current_organisation_id
          in: query
          description: The ID of the current organisation
          required: false
          schema:
            type: integer
        - name: contact
          in: query
          description: Boolean check if the person is a contact
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
        required: true
      responses:
        '201':
          description: Person successfully created
          content:
            application/json:
              schema:
                properties:
                  person:
                    $ref: '#/components/schemas/PersonShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_write
  /v1/people/{person_id}:
    get:
      summary: Shows a person.
      description: Shows a person. Organisation manager only 🔒
      tags:
        - people
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: person_id
          in: path
          description: The ID of the person to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the person
          content:
            application/json:
              schema:
                properties:
                  person:
                    $ref: '#/components/schemas/PersonShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_read
    put:
      summary: Updates an person.
      description: Updates an person. Organisation manager only 🔒
      tags:
        - people
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: person_id
          in: path
          description: The ID of the person to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
        required: true
      responses:
        '200':
          description: Person successfully updated
          content:
            application/json:
              schema:
                properties:
                  person:
                    $ref: '#/components/schemas/PersonShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_write
    delete:
      summary: Deletes the person within the current organisation.
      description: >-
        Deletes the person within the current organisation. Organisation manager
        only 🔒
      tags:
        - people
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: person_id
          in: path
          description: The ID of the person to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person successfully deleted
          content:
            application/json:
              schema:
                properties:
                  person:
                    $ref: '#/components/schemas/PersonShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_destroy
  /v1/report_templates:
    get:
      summary: Returns all report template for current customer account
      description: Returns all report template for current customer account
      tags:
        - report_templates
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all report templates
          content:
            application/json:
              schema:
                properties:
                  report_templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportTemplateShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_template_read
    post:
      summary: Create report template.
      description: Create report template. Customer account users only 🔒
      tags:
        - report_templates
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportTemplateCreate'
      responses:
        '200':
          description: Create report template
          content:
            application/json:
              schema:
                properties:
                  report_template:
                    $ref: '#/components/schemas/ReportTemplate'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_template_write
  /v1/report_templates/{report_template_id}:
    get:
      summary: Shows a report template
      description: Shows a report template
      tags:
        - report_templates
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: report_template_id
          in: path
          description: ID of the report template
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return report template
          content:
            application/json:
              schema:
                properties:
                  report_template:
                    $ref: '#/components/schemas/ReportTemplateShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_template_read
    put:
      summary: Update a report template.
      description: Update a report template. Customer account users only 🔒
      tags:
        - report_templates
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: report_template_id
          in: path
          description: ID of the report template
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportTemplateCreate'
      responses:
        '200':
          description: Report template successfully updated
          content:
            application/json:
              schema:
                properties:
                  report_template:
                    $ref: '#/components/schemas/ReportTemplate'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_template_write
    delete:
      summary: Delete the report template.
      description: Delete the report template. Customer account users only 🔒
      tags:
        - report_templates
      parameters:
        - name: report_template_id
          in: path
          description: ID of the report template
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report template successfully deleted
          content:
            application/json:
              schema:
                properties:
                  report_template:
                    $ref: '#/components/schemas/ReportTemplateShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_template_destroy
  /v1/report_account_schemas:
    get:
      summary: Returns all report account schemas for current customer account
      description: Returns all report account schemas for current customer account
      tags:
        - report_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all report account schemas
          content:
            application/json:
              schema:
                properties:
                  report_account_schemas:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_account_schema_read
    post:
      summary: Customer account users only 🔒
      description: Create report account schema
      tags:
        - report_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportAccountSchemaCreate'
      responses:
        '200':
          description: Create report account schema
          content:
            application/json:
              schema:
                properties:
                  report_account_schema:
                    $ref: '#/components/schemas/ReportAccountSchema'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_account_schema_write
  /v1/report_account_schemas/{report_account_schema_id}:
    get:
      summary: Shows a report account schema
      description: Shows a report account schema
      tags:
        - report_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: report_account_schema_id
          in: path
          description: ID of the report account schema
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return report account schema
          content:
            application/json:
              schema:
                properties:
                  report_account_schema:
                    $ref: '#/components/schemas/ReportAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_account_schema_read
    put:
      summary: Update a report account schema.
      description: Update a report account schema. Customer account users only 🔒
      tags:
        - report_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: report_account_schema_id
          in: path
          description: ID of the report account schema
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportAccountSchemaCreate'
      responses:
        '200':
          description: Report account schema successfully updated
          content:
            application/json:
              schema:
                properties:
                  report_account_schema:
                    $ref: '#/components/schemas/ReportAccountSchema'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_account_schema_write
    delete:
      summary: Delete the report account schema.
      description: Delete the report account schema. Customer account users only 🔒
      tags:
        - report_account_schemas
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: report_account_schema_id
          in: path
          description: ID of the report account schema
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report account schema successfully deleted
          content:
            application/json:
              schema:
                properties:
                  report_account_schema:
                    $ref: '#/components/schemas/ReportAccountSchemaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - report_account_schema_destroy
  /v1/person_memberships:
    get:
      summary: 'Returns all person_memberships within the given organisation. '
      description: Returns all person_memberships within the given organisation.
      tags:
        - person_memberships
      parameters:
        - name: current_organisation_id
          in: query
          description: The ID of the current organisation
          required: true
          schema:
            type: integer
        - name: member_id
          in: query
          description: The ID of the member
          required: true
          schema:
            type: integer
        - name: member_type
          in: query
          description: The type of the member
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns all person_memberships within the given customer account
          content:
            application/json:
              schema:
                properties:
                  person_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersonMembershipIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_membership_read
    post:
      summary: Creates a membership in person
      description: Creates a membership in person
      tags:
        - person_memberships
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                properties:
                  person_membership:
                    $ref: '#/components/schemas/PersonMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_membership_write
  /v1/person_memberships/{person_membership_id}:
    delete:
      summary: Destroys the person membership
      description: Destroys the person membership
      tags:
        - person_memberships
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: person_membership_id
          in: path
          description: ID of the person membership to be destroyed
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  person_membership:
                    $ref: '#/components/schemas/PersonMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - person_membership_destroy
  /v1/levels:
    get:
      summary: Returns all levels within the given organisation.
      description: >-
        Returns all levels within the given organisation. Organisation manager
        only 🔒
      tags:
        - levels
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: building_id
          in: query
          description: The ID of the building
          required: false
          schema:
            type: integer
        - name: name
          in: query
          description: The name of the level
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all levels within the given organisation
          content:
            application/json:
              schema:
                properties:
                  levels:
                    type: array
                    items:
                      $ref: '#/components/schemas/LevelIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - level_read
    post:
      summary: Creates a level
      description: Creates a level
      tags:
        - levels
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelCreate'
        required: true
      responses:
        '201':
          description: Level successfully created
          content:
            application/json:
              schema:
                properties:
                  level:
                    $ref: '#/components/schemas/LevelShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - level_write
  /v1/levels/{level_id}:
    put:
      summary: Updates an level
      description: Updates an level
      tags:
        - levels
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: level_id
          in: path
          description: The ID of the level to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelUpdate'
        required: true
      responses:
        '200':
          description: Level successfully updated
          content:
            application/json:
              schema:
                properties:
                  level:
                    $ref: '#/components/schemas/LevelShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - level_write
    delete:
      summary: Deletes the level within the current organisation
      description: Deletes the level within the current organisation
      tags:
        - levels
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: level_id
          in: path
          description: The ID of the level to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Level successfully deleted
          content:
            application/json:
              schema:
                properties:
                  level:
                    $ref: '#/components/schemas/LevelShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - level_destroy
    get:
      summary: Shows a level.
      description: Shows a level. Organisation manager only 🔒
      tags:
        - levels
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: level_id
          in: path
          description: The ID of the level to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the level
          content:
            application/json:
              schema:
                properties:
                  level:
                    $ref: '#/components/schemas/LevelShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - level_read
  /v1/room_and_zone_types:
    get:
      summary: Returns all room and area types currently available
      description: Returns all room and area types currently available
      tags:
        - room_and_zone_types
      responses:
        '200':
          description: Returns all room and area types
          content:
            application/json:
              schema:
                properties:
                  room_and_zone_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoomAndZoneType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - room_and_zone_type_read
  /v1/rooms:
    get:
      summary: Returns all rooms within the given organisation
      description: Returns all rooms within the given organisation
      tags:
        - rooms
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all rooms within the given organisation
          content:
            application/json:
              schema:
                properties:
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoomIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - room_read
    post:
      summary: Creates a room
      description: Creates a room
      tags:
        - rooms
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomCreate'
        required: true
      responses:
        '201':
          description: Room successfully created
          content:
            application/json:
              schema:
                properties:
                  room:
                    $ref: '#/components/schemas/RoomShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - room_write
  /v1/rooms/{room_id}:
    get:
      summary: Shows a room
      description: Shows a room
      tags:
        - rooms
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: room_id
          in: path
          description: The ID of the room to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the room
          content:
            application/json:
              schema:
                properties:
                  room:
                    $ref: '#/components/schemas/RoomShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - room_read
    put:
      summary: Updates an room
      description: Updates an room
      tags:
        - rooms
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: room_id
          in: path
          description: The ID of the room to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomUpdate'
        required: true
      responses:
        '200':
          description: Room successfully updated
          content:
            application/json:
              schema:
                properties:
                  room:
                    $ref: '#/components/schemas/RoomShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - room_write
    delete:
      summary: Deletes the room within the current organisation
      description: Deletes the room within the current organisation
      tags:
        - rooms
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: room_id
          in: path
          description: The ID of the room to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Room successfully deleted
          content:
            application/json:
              schema:
                properties:
                  room:
                    $ref: '#/components/schemas/RoomShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - room_destroy
  /v1/zones:
    post:
      summary: Creates a zone
      description: Creates a zone
      tags:
        - zones
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneCreate'
        required: true
      responses:
        '201':
          description: Zone successfully created
          content:
            application/json:
              schema:
                properties:
                  zone:
                    $ref: '#/components/schemas/ZoneShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - zone_write
  /v1/zones/{zone_id}:
    put:
      summary: Updates an zone
      description: Updates an zone
      tags:
        - zones
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: zone_id
          in: path
          description: The ID of the zone to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdate'
        required: true
      responses:
        '200':
          description: Zone successfully updated
          content:
            application/json:
              schema:
                properties:
                  zone:
                    $ref: '#/components/schemas/ZoneShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - zone_write
    delete:
      summary: Deletes the zone within the current organisation
      description: Deletes the zone within the current organisation
      tags:
        - zones
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: zone_id
          in: path
          description: The ID of the zone to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Zone successfully deleted
          content:
            application/json:
              schema:
                properties:
                  zone:
                    $ref: '#/components/schemas/ZoneShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - zone_destroy
  /v1/departments:
    get:
      summary: Returns all departments within the given organisation
      description: Returns all departments within the given organisation
      tags:
        - departments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all departments within the given organisation
          content:
            application/json:
              schema:
                properties:
                  departments:
                    type: array
                    items:
                      $ref: '#/components/schemas/DepartmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - department_read
    post:
      summary: Creates a department within the current organisation
      description: Creates a department within the current organisation
      tags:
        - departments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentCreate'
        required: true
      responses:
        '201':
          description: Department successfully created
          content:
            application/json:
              schema:
                properties:
                  department:
                    $ref: '#/components/schemas/DepartmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - department_write
  /v1/departments/{department_id}:
    put:
      summary: Updates an department within the current organisation.
      description: >-
        Updates an department within the current organisation. Organisation
        manager only 🔒
      tags:
        - departments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: department_id
          in: path
          description: The ID of the department to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentUpdate'
        required: true
      responses:
        '200':
          description: Department successfully updated
          content:
            application/json:
              schema:
                properties:
                  department:
                    $ref: '#/components/schemas/DepartmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - department_write
    delete:
      summary: Marks a department as deleted within the current organisation.
      description: >-
        Marks a department as deleted within the current organisation.
        Organisation manager only 🔒
      tags:
        - departments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: department_id
          in: path
          description: The ID of the department to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Department successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  department:
                    $ref: '#/components/schemas/DepartmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - department_destroy
  /v1/manufacturers:
    get:
      summary: Returns all manufacturers within the given organisation
      description: Returns all manufacturers within the given organisation
      tags:
        - manufacturers
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all manufacturers within the given organisation
          content:
            application/json:
              schema:
                properties:
                  manufacturers:
                    type: array
                    items:
                      $ref: '#/components/schemas/ManufacturerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_read
    post:
      summary: Creates a manufacturer within the current organisation
      description: Creates a manufacturer within the current organisation
      tags:
        - manufacturers
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerCreate'
        required: true
      responses:
        '201':
          description: Manufacturer successfully created
          content:
            application/json:
              schema:
                properties:
                  manufacturer:
                    $ref: '#/components/schemas/ManufacturerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
  /v1/manufacturers/{manufacturer_id}:
    put:
      summary: Updates an manufacturer within the current organisation.
      description: >-
        Updates an manufacturer within the current organisation. Organisation
        manager only 🔒
      tags:
        - manufacturers
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: manufacturer_id
          in: path
          description: The ID of the manufacturer to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerUpdate'
        required: true
      responses:
        '200':
          description: Manufacturer successfully updated
          content:
            application/json:
              schema:
                properties:
                  manufacturer:
                    $ref: '#/components/schemas/ManufacturerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
    delete:
      summary: Deletes the manufacturer within the current organisation.
      description: >-
        Deletes the manufacturer within the current organisation. Organisation
        manager only 🔒
      tags:
        - manufacturers
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: manufacturer_id
          in: path
          description: The ID of the manufacturer to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Manufacturer successfully deleted
          content:
            application/json:
              schema:
                properties:
                  manufacturer:
                    $ref: '#/components/schemas/ManufacturerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_destroy
  /v1/manufacturers/{manufacturer_id}/model_types:
    get:
      description: Returns all types of models within the given manufacturer
      tags:
        - manufacturers
      parameters:
        - name: manufacturer_id
          in: path
          description: The ID of the manufacturer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all types of models within the given manufacturer
          content:
            application/json:
              schema:
                properties:
                  model_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_read
    post:
      description: Creates a model_type
      tags:
        - manufacturers
      parameters:
        - name: manufacturer_id
          in: path
          description: The ID of the manufacturer
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelTypeCreate'
        required: true
      responses:
        '201':
          description: Manufacturer successfully created
          content:
            application/json:
              schema:
                properties:
                  model_type:
                    $ref: '#/components/schemas/ModelTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
  /v1/manufacturers/{manufacturer_id}/model_types/{id}:
    put:
      description: Updates an model_type
      tags:
        - manufacturers
      parameters:
        - name: id
          in: path
          description: The ID of the model_type to update
          required: true
          schema:
            type: integer
        - name: manufacturer_id
          in: path
          description: The ID of the manufacturer
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelTypeUpdate'
        required: true
      responses:
        '200':
          description: Model type successfully updated
          content:
            application/json:
              schema:
                properties:
                  model_type:
                    $ref: '#/components/schemas/ModelTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
    delete:
      description: Deletes the model_type
      tags:
        - manufacturers
      parameters:
        - name: id
          in: path
          description: The ID of the model_type to delete
          required: true
          schema:
            type: integer
        - name: manufacturer_id
          in: path
          description: The ID of the manufacturer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Model type successfully deleted
          content:
            application/json:
              schema:
                properties:
                  model_type:
                    $ref: '#/components/schemas/ModelTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - manufacturer_destroy
  /v1/facility_types:
    get:
      summary: Returns all facility types.
      description: >
        Returns all facility types.

        Use this endpoint to show a drop down of all available facility types.
        Once a specific facility type is selected you can lazy load the matching
        JSON schema via the <strong>Facility Types SHOW</strong> endpoint.
      tags:
        - facility_types
      responses:
        '200':
          description: Returns all facility types excluding their schemas
          content:
            application/json:
              schema:
                properties:
                  facility_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/FacilityTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_type_read
  /v1/facility_types/facility_types_with_schema:
    get:
      summary: Returns all facility types.
      description: >
        Returns all facility types.

        Use this endpoint if you implement an own cache mechanism. The facility
        types do only change infrequently.
      tags:
        - facility_types
      responses:
        '200':
          description: Returns all facility types including their schemas
          content:
            application/json:
              schema:
                properties:
                  facility_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/FacilityTypeWithSchema'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_type_read
  /v1/facility_types/{facility_type_id}:
    get:
      summary: Shows a facility type
      description: Shows a facility type
      tags:
        - facility_types
      parameters:
        - name: facility_type_id
          in: path
          description: The ID of the facility type to show
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns the facility type
          content:
            application/json:
              schema:
                properties:
                  facility:
                    $ref: '#/components/schemas/FacilityType'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_type_read
  /v1/facilities:
    get:
      summary: Returns all facilities within the given organisation
      description: |+
        # Description
        Returns all facilities within the given organisation
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      tags:
        - facilities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: custom_id
          in: query
          description: Filter facilities by custom_id
          required: false
          schema:
            type: string
        - name: inventory_number
          in: query
          description: Filter facilities by inventory_number
          required: false
          schema:
            type: string
        - name: serial_number
          in: query
          description: Filter facilities by serial_number
          required: false
          schema:
            type: string
        - name: year_of_construction
          in: query
          description: Filter facilities by year_of_construction
          required: false
          schema:
            type: string
        - name: manufacturer_id
          in: query
          description: Filter facilities by manufacturer_id
          required: false
          schema:
            type: string
        - name: department_id
          in: query
          description: Filter facilities by department_id
          required: false
          schema:
            type: string
        - name: facility_type_id
          in: query
          description: Filter facilities by facility_type_id
          required: false
          schema:
            type: string
        - name: property_id
          in: query
          description: Filter facilities by property_id
          required: false
          schema:
            type: string
        - name: lot_id
          in: query
          description: Filter facilities by lot_id
          required: false
          schema:
            type: string
        - name: building_id
          in: query
          description: Filter facilities by building_id
          required: false
          schema:
            type: string
        - name: level_id
          in: query
          description: Filter facilities by level_id
          required: false
          schema:
            type: string
        - name: room_id
          in: query
          description: Filter facilities by room_id
          required: false
          schema:
            type: string
        - name: zone_id
          in: query
          description: Filter facilities by zone_id
          required: false
          schema:
            type: string
        - name: user_id
          in: query
          description: Filter facilities by user_id
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: page for pagination by default 0
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: number of items per page by default 50
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Returns all facilities within the given organisation
          content:
            application/json:
              schema:
                properties:
                  facilities:
                    type: array
                    items:
                      $ref: '#/components/schemas/FacilityIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_read
    post:
      summary: Creates a facility
      description: |+
        # Description
        Creates a facility
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      tags:
        - facilities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: skip_type_dependent_attribute
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCreate'
        required: true
      responses:
        '201':
          description: Facility successfully created
          content:
            application/json:
              schema:
                properties:
                  facility:
                    $ref: '#/components/schemas/FacilityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_write
  /v1/facilities/{facility_id}:
    get:
      summary: Shows a facility
      description: |+
        # Description
        Shows a facility
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      tags:
        - facilities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: facility_id
          in: path
          description: The ID of the facility to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the facility
          content:
            application/json:
              schema:
                properties:
                  facility:
                    $ref: '#/components/schemas/FacilityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_read
    put:
      summary: Updates an facility
      description: |+
        # Description
        Updates an facility
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      tags:
        - facilities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: facility_id
          in: path
          description: The ID of the facility to update
          required: true
          schema:
            type: integer
        - name: skip_type_dependent_attribute
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityUpdate'
        required: true
      responses:
        '200':
          description: Facility successfully updated
          content:
            application/json:
              schema:
                properties:
                  facility:
                    $ref: '#/components/schemas/FacilityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_write
    delete:
      summary: Deletes the facility within the current organisation
      description: |+
        # Description
        Deletes the facility within the current organisation
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      tags:
        - facilities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: facility_id
          in: path
          description: The ID of the facility to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Facility successfully deleted
          content:
            application/json:
              schema:
                properties:
                  facility:
                    $ref: '#/components/schemas/FacilityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - facility_destroy
  /v1/activities:
    get:
      summary: Returns all activities within the given organisation.
      description: >-
        Returns all activities within the given organisation. They can be
        filtered based on property or building
      tags:
        - activities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: property_id
          in: query
          description: The ID property to filter the activities.
          required: false
          schema:
            type: string
        - name: building_id
          in: query
          description: The ID of building to filter activities
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all activities within the given organisation.
          content:
            application/json:
              schema:
                properties:
                  activities:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivityIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_read
    post:
      summary: Creates an activity
      description: >+
        # Description

        Creates an activity

        # Permissions


        Client manager:

        * Can manage activities for all possible entities


        Client member:

        * Can manage activities for facilities that are in the scope of the
        permitted buildings

      tags:
        - activities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCreate'
        required: true
      responses:
        '201':
          description: Activity successfully created
          content:
            application/json:
              schema:
                properties:
                  activity:
                    $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_write
  /v1/activities/{activity_id}:
    get:
      summary: Shows a activity
      description: >+
        # Description

        Shows a activity

        # Permissions


        Client manager:

        * Can manage activities for all possible entities


        Client member:

        * Can manage activities for facilities that are in the scope of the
        permitted buildings

      tags:
        - activities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: activity_id
          in: path
          description: The ID of the activity to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the activity
          content:
            application/json:
              schema:
                properties:
                  activity:
                    $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_read
    put:
      summary: Update the activity
      description: Update the activity
      tags:
        - activities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: activity_id
          in: path
          description: ID of the activity you want to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityUpdate'
        required: true
      responses:
        '200':
          description: Activity successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_write
    delete:
      summary: Delete the activity
      description: Delete the activity
      tags:
        - activities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: activity_id
          in: path
          description: ID of the activity you want to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Activity successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_destroy
  /v1/activities/{external_id}/reference:
    get:
      summary: Shows a activity
      description: >+
        # Description

        Shows a activity

        # Permissions


        Client manager:

        * Can manage activities for all possible entities


        Client member:

        * Can manage activities for facilities that are in the scope of the
        permitted buildings

      tags:
        - activities
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: external_id
          in: path
          description: The External ID of the activity to show
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the activity
          content:
            application/json:
              schema:
                properties:
                  activity:
                    $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_read
  /v1/activity_types:
    get:
      summary: Returns all activity types
      description: Returns all activity types, Admin, Supervisor 🔒
      tags:
        - activity_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current account
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all activity types
          content:
            application/json:
              schema:
                properties:
                  activity_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivityTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_type_read
    post:
      summary: Creates an activity type
      description: |
        # Description
        Creates an activity type
      tags:
        - activity_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: false
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ActivityTypeCreate'
      responses:
        '201':
          description: Activity type successfully created
          content:
            application/json:
              schema:
                properties:
                  activity_type:
                    $ref: '#/components/schemas/ActivityTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_type_write
  /v1/activity_types/{activity_type_id}:
    get:
      summary: Shows a activity type
      description: |
        # Description
        Shows a activity type
      tags:
        - activity_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: false
          schema:
            type: integer
        - name: activity_type_id
          in: path
          description: The ID of the activity type to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the activity type
          content:
            application/json:
              schema:
                properties:
                  activity_type:
                    $ref: '#/components/schemas/ActivityTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_type_read
    put:
      summary: Update the activity type
      description: Update the activity type
      tags:
        - activity_types
      parameters:
        - name: activity_type_id
          in: path
          description: The ID of the activity type to show
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ActivityTypeCreate'
      responses:
        '200':
          description: Activity type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_type_write
    delete:
      summary: Delete the activity type
      description: Delete the activity type
      tags:
        - activity_types
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: false
          schema:
            type: integer
        - name: activity_type_id
          in: path
          description: The ID of the activity type to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Activity type successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - activity_type_destroy
  /v1/attachments:
    post:
      summary: Creates an attachment
      description: >+
        # Description

        Creates an attachment

        # Permissions


        Client manager:

        * Can manage attachments for all possible entities


        Client member:

        * Can not manage attachments for any property

        * Can not manage attachments for any lot

        * Can manage attachments for buildings that are in the scope of the
        permitted buildings

        * Can manage attachments for building units that are in the scope of the
        permitted buildings

        * Can manage attachments for levels that are in the scope of the
        permitted buildings

        * Can manage attachments for rooms that are in the scope of the
        permitted buildings

        * Can manage attachments for zones that are in the scope of the
        permitted buildings

        * Can manage attachments for facilities that are in the scope of the
        permitted buildings

        * Can manage attachments for activities that are in the scope of the
        permitted buildings

      tags:
        - attachments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentCreate'
        required: true
      responses:
        '201':
          description: Attachment successfully created
          content:
            application/json:
              schema:
                properties:
                  attachment:
                    $ref: '#/components/schemas/AttachmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - attachment_write
  /v1/attachments/copy:
    post:
      summary: Duplicate an attachment
      description: >+
        # Description

        Duplicate an attachment

        # Permissions


        Client manager:

        * Can manage attachments for all possible entities


        Client member:

        * Can not manage attachments for any property

        * Can not manage attachments for any lot

        * Can manage attachments for buildings that are in the scope of the
        permitted buildings

        * Can manage attachments for building units that are in the scope of the
        permitted buildings

        * Can manage attachments for levels that are in the scope of the
        permitted buildings

        * Can manage attachments for rooms that are in the scope of the
        permitted buildings

        * Can manage attachments for zones that are in the scope of the
        permitted buildings

        * Can manage attachments for facilities that are in the scope of the
        permitted buildings

        * Can manage attachments for activities that are in the scope of the
        permitted buildings

      tags:
        - attachments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentDuplicate'
        required: true
      responses:
        '201':
          description: Attachment successfully created
          content:
            application/json:
              schema:
                properties:
                  attachment:
                    $ref: '#/components/schemas/AttachmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - attachment_write
  /v1/attachments/{attachment_id}:
    delete:
      summary: Marks an attachment as deleted.
      description: >+
        # Description

        Marks an attachment as deleted.

        # Permissions


        Client manager:

        * Can manage attachments for all possible entities


        Client member:

        * Can not manage attachments for any property

        * Can not manage attachments for any lot

        * Can manage attachments for buildings that are in the scope of the
        permitted buildings

        * Can manage attachments for building units that are in the scope of the
        permitted buildings

        * Can manage attachments for levels that are in the scope of the
        permitted buildings

        * Can manage attachments for rooms that are in the scope of the
        permitted buildings

        * Can manage attachments for zones that are in the scope of the
        permitted buildings

        * Can manage attachments for facilities that are in the scope of the
        permitted buildings

        * Can manage attachments for activities that are in the scope of the
        permitted buildings

      tags:
        - attachments
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: attachment_id
          in: path
          description: The ID of the attachment to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  attachment:
                    $ref: '#/components/schemas/AttachmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - attachment_destroy
  /v1/images:
    post:
      summary: Creates an image
      description: >+
        # Description

        Creates an image

        # Permissions


        Client manager:

        * Can manage images for all possible entities


        Client member:

        * Can not manage images for any property

        * Can not manage images for any lot

        * Can manage images for buildings that are in the scope of the permitted
        buildings

        * Can manage images for building units that are in the scope of the
        permitted buildings

        * Can manage images for levels that are in the scope of the permitted
        buildings

        * Can manage images for rooms that are in the scope of the permitted
        buildings

        * Can manage images for zones that are in the scope of the permitted
        buildings

        * Can manage images for facilities that are in the scope of the
        permitted buildings

        * Can manage images for her own user, but not for other users

      tags:
        - images
      parameters:
        - name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCreate'
        required: true
      responses:
        '201':
          description: Image successfully created
          content:
            application/json:
              schema:
                properties:
                  image:
                    $ref: '#/components/schemas/ImageShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - image_write
  /v1/images/{image_id}:
    put:
      summary: Updates an image.
      description: >+
        # Description

        Updates an image.

        # Permissions


        Client manager:

        * Can manage images for all possible entities


        Client member:

        * Can not manage images for any property

        * Can not manage images for any lot

        * Can manage images for buildings that are in the scope of the permitted
        buildings

        * Can manage images for building units that are in the scope of the
        permitted buildings

        * Can manage images for levels that are in the scope of the permitted
        buildings

        * Can manage images for rooms that are in the scope of the permitted
        buildings

        * Can manage images for zones that are in the scope of the permitted
        buildings

        * Can manage images for facilities that are in the scope of the
        permitted buildings

        * Can manage images for her own user, but not for other users

      tags:
        - images
      parameters:
        - name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
        - name: image_id
          in: path
          description: The ID of the image to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUpdate'
        required: true
      responses:
        '200':
          description: Image successfully updated
          content:
            application/json:
              schema:
                properties:
                  image:
                    $ref: '#/components/schemas/ImageShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - image_write
    delete:
      summary: Marks an image as deleted.
      description: >+
        # Description

        Marks an image as deleted.

        # Permissions


        Client manager:

        * Can manage images for all possible entities


        Client member:

        * Can not manage images for any property

        * Can not manage images for any lot

        * Can manage images for buildings that are in the scope of the permitted
        buildings

        * Can manage images for building units that are in the scope of the
        permitted buildings

        * Can manage images for levels that are in the scope of the permitted
        buildings

        * Can manage images for rooms that are in the scope of the permitted
        buildings

        * Can manage images for zones that are in the scope of the permitted
        buildings

        * Can manage images for facilities that are in the scope of the
        permitted buildings

        * Can manage images for her own user, but not for other users

      tags:
        - images
      parameters:
        - name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
        - name: image_id
          in: path
          description: The ID of the image to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Image successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  image:
                    $ref: '#/components/schemas/ImageShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - image_destroy
  /v1/time_dependent_attributes:
    get:
      summary: Returns all time_dependent_attributes within the given parent
      description: Returns all time_dependent_attributes within the given parent
      tags:
        - time_dependent_attributes
      parameters:
        - name: id
          in: query
          description: Filter time_dependent_attributes by id.
          required: false
          schema:
            type: string
        - name: parent_id
          in: query
          description: Filter time_dependent_attributes by parent_id.
          required: false
          schema:
            type: string
        - name: parent_type
          in: query
          description: |
            Filter time_dependent_attributes by parent_type.
            Allowed parent_types: Building, Building::Unit
          required: false
          schema:
            type: string
        - name: attribute_key
          in: query
          description: Filter time_dependent_attributes by attribute_key.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all time_dependent_attributes within the given parent
          content:
            application/json:
              schema:
                properties:
                  time_dependent_attributes:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeDependentAttributeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_read
    post:
      summary: Creates a time_dependent_attribute
      description: |
        # Description
        Creates a time_dependent_attribute
        Allowed parent_types: Building, Building::Unit
        Allowed attribute_types: ["individual", "global"]
      tags:
        - time_dependent_attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeDependentAttributeCreate'
        required: true
      responses:
        '201':
          description: TimeDependentAttribute successfully created
          content:
            application/json:
              schema:
                properties:
                  time_dependent_attribute:
                    $ref: '#/components/schemas/TimeDependentAttributeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_write
  /v1/time_dependent_attributes/{time_dependent_attribute_id}:
    put:
      summary: Updates an time_dependent_attribute
      description: |
        # Description
        Updates an time_dependent_attribute
        Allowed parent_types: Building, Building::Unit
        Allowed attribute_types: ["individual", "global"]
      tags:
        - time_dependent_attributes
      parameters:
        - name: time_dependent_attribute_id
          in: path
          description: The ID of the time_dependent_attribute to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeDependentAttributeUpdate'
        required: true
      responses:
        '200':
          description: TimeDependentAttribute successfully updated
          content:
            application/json:
              schema:
                properties:
                  time_dependent_attribute:
                    $ref: '#/components/schemas/TimeDependentAttributeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_write
    delete:
      summary: Deletes the specified time_dependent_attribute
      description: Deletes the specified time_dependent_attribute
      tags:
        - time_dependent_attributes
      parameters:
        - name: time_dependent_attribute_id
          in: path
          description: The ID of the time_dependent_attribute to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: TimeDependentAttribute successfully deleted
          content:
            application/json:
              schema:
                properties:
                  time_dependent_attribute:
                    $ref: '#/components/schemas/TimeDependentAttributeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_destroy
  /v1/webhooks:
    get:
      summary: Returns all webhooks
      description: Returns all webhooks within the given customer account.
      tags:
        - webhooks
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all webhooks within the organisation
          content:
            application/json:
              schema:
                properties:
                  webhooks:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebhookIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - webhook_read
    post:
      summary: Creates a webhook
      description: |
        # Description
        Creates a new webhook
        # URL
          The url where the payload will be sent
        # Allowed events:
           building.create<br/>building.update<br/>building.delete<br/>unit.create<br/>unit.update<br/>unit.delete<br/>contract.create<br/>contract.update<br/>contract.delete<br/>property.create<br/>property.update<br/>property.delete
        # Modes
          testing = 0 , live = 1
        # Organisation IDs
          Leaving it empy will send the event to all of the customer account organisations
        # Secret
          This secret is used to encrypt checksum
      tags:
        - webhooks
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        required: true
      responses:
        '201':
          description: Webhook successfully created
          content:
            application/json:
              schema:
                properties:
                  webhook:
                    $ref: '#/components/schemas/WebhookShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - webhook_write
  /v1/webhooks/{webhook_id}:
    get:
      summary: Shows a webhook
      description: Shows a webhook, Organisation manager 🔒
      tags:
        - webhooks
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: webhook_id
          in: path
          description: >-
            The ID of the webhook (only shows the webhooks based on
            current_organisation_id)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the webhook
          content:
            application/json:
              schema:
                properties:
                  webhook:
                    $ref: '#/components/schemas/WebhookShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - webhook_read
    put:
      summary: Updates a webhook
      description: |
        # Description
        Updates a webhook, Organisation manager 🔒
        # Allowed events:
           building.create<br/>building.update<br/>building.delete<br/>unit.create<br/>unit.update<br/>unit.delete<br/>contract.create<br/>contract.update<br/>contract.delete<br/>property.create<br/>property.update<br/>property.delete
      tags:
        - webhooks
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: webhook_id
          in: path
          description: >-
            The ID of the webhook (only shows the webhooks based on
            current_organisation_id)
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdate'
        required: true
      responses:
        '200':
          description: Webhook successfully updated
          content:
            application/json:
              schema:
                properties:
                  webhook:
                    $ref: '#/components/schemas/WebhookShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - webhook_write
    delete:
      summary: Deletes the webhook within the current organisation.
      description: >-
        Deletes the webhook within the current organisation. Organisation
        manager only 🔒
      tags:
        - webhooks
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: webhook_id
          in: path
          description: The ID of the webhook to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Webhook successfully deleted
          content:
            application/json:
              schema:
                properties:
                  webhook:
                    $ref: '#/components/schemas/PersonShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - webhook_destroy
  /v1/tags:
    get:
      summary: Returns all tags within the given customer account.
      description: >-
        Returns all tags within the given customer account. It also returns the
        count of buildings and units
      tags:
        - tags
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
        - name: label
          in: query
          description: Search for the label
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all tags within the given customer account
          content:
            application/json:
              schema:
                properties:
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/TagIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tag_read
    post:
      summary: Creates a tag
      description: |
        # Description
        Creates a tag
      tags:
        - tags
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
        required: true
      responses:
        '201':
          description: Tag successfully created
          content:
            application/json:
              schema:
                properties:
                  tag:
                    $ref: '#/components/schemas/TagShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tag_write
  /v1/tags/{tag_id}:
    put:
      summary: Update the tag
      description: Update the tag
      tags:
        - tags
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
        - name: tag_id
          in: path
          description: ID of the tag you want to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
        required: true
      responses:
        '200':
          description: Tag successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tag_write
    delete:
      summary: Marks a tag as deleted.
      description: |
        # Description
        Marks a tag as deleted.
      tags:
        - tags
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current customer account
          required: true
          schema:
            type: integer
        - name: tag_id
          in: path
          description: The ID of the tag to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tag successfully marked as deleted
          content:
            application/json:
              schema:
                properties:
                  tag:
                    $ref: '#/components/schemas/TagShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tag_destroy
  /v1/tags/merge:
    post:
      summary: Merges master tags with other tags
      description: |
        # Description
        Master tag is the main tag that get all other tags building or units
        Other tags after the merge will be deleted
      tags:
        - tags
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the current_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsMergeBody'
        required: true
      responses:
        '201':
          description: Tag successfully created
          content:
            application/json:
              schema:
                properties:
                  tag:
                    $ref: '#/components/schemas/TagShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tag_write
  /v1/tags/assign_buildings:
    put:
      summary: Assign multiple tags to multiple buildings
      description: >
        # Description

        Assign multiple tags to multiple buildings

        ATTENTION ⚠️ This will NOT delete previously assigned tags to those
        buildings

        If you see more tags they probably are assigned from building
        create/update endpoint.
      tags:
        - tags
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssignBuildings'
        required: true
      responses:
        '200':
          description: Tags assigned successfully
          content:
            application/json:
              schema:
                properties:
                  buildings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BuildingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - tag_write
  /v1/imports:
    get:
      summary: Return all imports
      description: Return all imports
      tags:
        - csv_imports
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: is_demo
          in: query
          description: Filter by is_demo
          required: false
          schema:
            type: boolean
        - name: location_type
          in: query
          description: Filter the imports by type
          required: false
          schema:
            type: string
            enum:
              - properties
              - lots
              - buildings
              - building_units
              - levels
              - rooms
              - facilities
              - contracts
      responses:
        '200':
          description: Return all imports for the specific customer account
          content:
            application/json:
              schema:
                properties:
                  csv_imports:
                    type: array
                    items:
                      $ref: '#/components/schemas/CsvImportIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - import_read
    post:
      summary: Creates a import by file
      description: |
        # Description
        Creates a new import
      tags:
        - csv_imports
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: organisation_id
          in: query
          description: ID of the organisation
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsvImportCreate'
        required: true
      responses:
        '201':
          description: Csv imported successfully!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvImportShowCreate'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - import_write
  /v1/imports/{import_id}:
    get:
      summary: Shows information for specific import
      description: Shows information for an import.
      tags:
        - csv_imports
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: import_id
          in: path
          description: ID of the csv import
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return an import
          content:
            application/json:
              schema:
                properties:
                  csv_import:
                    $ref: '#/components/schemas/CsvImportShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - import_read
    put:
      summary: Update the import
      description: Update the import
      tags:
        - csv_imports
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: import_id
          in: path
          description: ID of the import you want to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsvImportUpdate'
        required: true
      responses:
        '200':
          description: Import successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvImportShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - import_write
  /v1/scorecards:
    get:
      summary: Returns all scorecards
      description: Returns all scorecards within the given customer account.
      tags:
        - scorecards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all scorecards within the customer account
          content:
            application/json:
              schema:
                properties:
                  scorecards:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_read
    post:
      summary: Creates a scorecard
      description: >
        # Description

        Creates a new scorecard. This only creates a new scorecard. The score
        calculation

        is triggered when the scorecard is assigned to a building. Check
        scorecard_memberships
      tags:
        - scorecards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardCreate'
        required: true
      responses:
        '201':
          description: Scorecard successfully created
          content:
            application/json:
              schema:
                properties:
                  scorecard:
                    $ref: '#/components/schemas/ScorecardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_write
  /v1/scorecards/{scorecard_id}:
    get:
      summary: Shows a scorecard
      description: Shows a scorecard, Organisation manager 🔒
      tags:
        - scorecards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_id
          in: path
          description: >-
            The ID of the scorecard (only shows the scorecards based on
            current_organisation_id)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard
          content:
            application/json:
              schema:
                properties:
                  scorecard:
                    $ref: '#/components/schemas/ScorecardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_read
    put:
      summary: Updates a scorecard
      description: |
        # Description
        Updates a scorecard, Organisation manager 🔒
      tags:
        - scorecards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_id
          in: path
          description: >-
            The ID of the scorecard (only shows the scorecards based on
            current_organisation_id)
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardUpdate'
        required: true
      responses:
        '200':
          description: Scorecard successfully updated
          content:
            application/json:
              schema:
                properties:
                  scorecard:
                    $ref: '#/components/schemas/ScorecardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_write
    delete:
      summary: Deletes the scorecard within the current account.
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      tags:
        - scorecards
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_id
          in: path
          description: The ID of the scorecard to delete
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard successfully deleted
          content:
            application/json:
              schema:
                properties:
                  scorecard:
                    $ref: '#/components/schemas/ScorecardShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_destroy
  /v1/scorecard_segments:
    post:
      summary: Creates a scorecard segment
      description: |
        # Description
        Creates a new scorecard segment
      tags:
        - scorecard_segments
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSegmentCreate'
        required: true
      responses:
        '201':
          description: Scorecard segment successfully created
          content:
            application/json:
              schema:
                properties:
                  scorecard_segment:
                    $ref: '#/components/schemas/ScorecardSegmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_segment_write
  /v1/scorecard_segments/{scorecard_segment_id}:
    put:
      summary: Updates a scorecard segment
      description: |
        # Description
        Updates a scorecard segment, Account manager 🔒
      tags:
        - scorecard_segments
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: scorecard_segment_id
          in: path
          description: >-
            The ID of the scorecard segment (only shows the scorecards based on
            current_organisation_id)
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSegmentUpdate'
        required: true
      responses:
        '200':
          description: Scorecard segment successfully updated
          content:
            application/json:
              schema:
                properties:
                  scorecard_segment:
                    $ref: '#/components/schemas/ScorecardSegmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_segment_write
    delete:
      summary: Deletes the scorecard segment within the current account.
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      tags:
        - scorecard_segments
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: scorecard_segment_id
          in: path
          description: The ID of the scorecard segment to delete
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard segment successfully deleted
          content:
            application/json:
              schema:
                properties:
                  scorecard_segment:
                    $ref: '#/components/schemas/ScorecardSegmentShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_segment_destroy
  /v1/scorecard_topics:
    post:
      summary: Creates a scorecard topic
      description: |
        # Description
        Creates a new scorecard topic
      tags:
        - scorecard_topics
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardTopicCreate'
        required: true
      responses:
        '201':
          description: Scorecard topic successfully created
          content:
            application/json:
              schema:
                properties:
                  scorecard_topic:
                    $ref: '#/components/schemas/ScorecardTopicShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_topic_write
  /v1/scorecard_topics/{scorecard_topic_id}:
    put:
      summary: Updates a scorecard topic
      description: |
        # Description
        Updates a scorecard topic, Account manager 🔒
      tags:
        - scorecard_topics
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_topic_id
          in: path
          description: >-
            The ID of the scorecard topic (only shows the topic based on current
            account)
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardTopicUpdate'
        required: true
      responses:
        '200':
          description: scorecard topic successfully updated
          content:
            application/json:
              schema:
                properties:
                  scorecard_topic:
                    $ref: '#/components/schemas/ScorecardTopicShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_topic_write
    delete:
      summary: Deletes the scorecard topic within the current segment.
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      tags:
        - scorecard_topics
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_topic_id
          in: path
          description: The ID of the scorecard topic to delete
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: scorecard topic successfully deleted
          content:
            application/json:
              schema:
                properties:
                  scorecard_topic:
                    $ref: '#/components/schemas/ScorecardTopicShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_topic_destroy
  /v1/scorecard_subtopics:
    post:
      summary: Creates a scorecard subtopic
      description: |
        # Description
        Creates a new scorecard subtopic
      tags:
        - scorecard_subtopics
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSubtopicCreate'
        required: true
      responses:
        '201':
          description: Scorecard subtopic successfully created
          content:
            application/json:
              schema:
                properties:
                  scorecard_subtopic:
                    $ref: '#/components/schemas/ScorecardSubtopicShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_subtopic_write
  /v1/scorecard_subtopics/{scorecard_subtopic_id}:
    put:
      summary: Updates a scorecard subtopic
      description: |
        # Description
        Updates a scorecard subtopic, Account manager 🔒
      tags:
        - scorecard_subtopics
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: scorecard_subtopic_id
          in: path
          description: >-
            The ID of the scorecard subtopic (only shows the subtopic based on
            current account)
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSubtopicUpdate'
        required: true
      responses:
        '200':
          description: scorecard subtopic successfully updated
          content:
            application/json:
              schema:
                properties:
                  scorecard_subtopic:
                    $ref: '#/components/schemas/ScorecardSubtopicShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_subtopic_write
    delete:
      summary: Deletes the scorecard subtopic within the current segment.
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      tags:
        - scorecard_subtopics
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer account
          required: true
          schema:
            type: integer
        - name: scorecard_subtopic_id
          in: path
          description: The ID of the scorecard subtopic to delete
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: scorecard subtopic successfully deleted
          content:
            application/json:
              schema:
                properties:
                  scorecard_subtopic:
                    $ref: '#/components/schemas/ScorecardSubtopicShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_subtopic_destroy
  /v1/scorecard_memberships/de_assign:
    post:
      summary: De-assigns scorecard memberships from scorecard
      description: |
        # Description
        De-assigns scorecard memberships from scorecard
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardMembershipDeAssign'
        required: true
      responses:
        '201':
          description: Scorecard membership de-assigned successfully
          content:
            application/json:
              schema:
                properties:
                  scorecard_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipsIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
  /v1/scorecard_memberships:
    get:
      summary: 'Returns all scorecard memberships within the given account. '
      description: Returns all scorecard memberships within the given account.
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_id
          in: query
          description: The ID on other scorecard to filter memberships
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all scorecard_memberships within the given customer account
          content:
            application/json:
              schema:
                properties:
                  scorecard_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipsIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_read
    post:
      summary: Creates a scorecard membership
      description: |
        # Description
        Creates a new scorecard membership
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardMembershipCreate'
        required: true
      responses:
        '201':
          description: Scorecard membership successfully created
          content:
            application/json:
              schema:
                properties:
                  scorecard_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipsIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
  /v1/scorecard_memberships/{scorecard_membership_id}:
    get:
      summary: Shows a scorecard membership
      description: Shows a scorecard membership, Customer account manager 🔒
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_membership_id
          in: path
          description: >-
            The ID of the scorecard membership (only shows the scorecards based
            on current account)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard membership
          content:
            application/json:
              schema:
                properties:
                  scorecard_membership:
                    $ref: '#/components/schemas/ScorecardMembershipsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_read
    delete:
      summary: Deletes the scorecard membership within the current account.
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_membership_id
          in: path
          description: The ID of the scorecard membership to delete
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard membership successfully deleted
          content:
            application/json:
              schema:
                properties:
                  scorecard_membership:
                    $ref: '#/components/schemas/ScorecardMembershipsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_destroy
  /v1/scorecard_memberships/{scorecard_membership_id}/refresh:
    get:
      summary: Refresh a scorecard membership
      description: Refresh a scorecard membership, Customer account manager 🔒
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_membership_id
          in: path
          description: >-
            The ID of the scorecard membership (only shows the scorecards based
            on current account)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard membership
          content:
            application/json:
              schema:
                properties:
                  scorecard_membership:
                    $ref: '#/components/schemas/ScorecardMembershipsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_read
  /v1/scorecard_memberships/refresh_by_scorecard:
    post:
      summary: Refresh scores for specific scorecard/s
      description: Refresh scores for specific scorecard/s
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshByScorecard'
        required: true
      responses:
        '200':
          description: Returns all refreshed memberships
          content:
            application/json:
              schema:
                properties:
                  scorecard_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipsIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
  /v1/scorecard_memberships/refresh_all_by_parent:
    post:
      summary: Refresh all scorecards by parent
      description: Refresh all scorecards by parent
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshByParent'
        required: true
      responses:
        '200':
          description: Returns all refreshed memberships
          content:
            application/json:
              schema:
                properties:
                  scorecard_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipsIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
  /v1/scorecard_memberships/calculated_costs:
    post:
      summary: Calculated costs of scorecard memberships
      description: >-
        Return calculated costs of scorecard memberships, Customer account
        manager 🔒
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ScorecardMembershipCost'
      responses:
        '200':
          description: Returns status ok
          content:
            application/json:
              schema:
                properties:
                  calculated_costs:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardMembershipCostResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
  /v1/scorecard_memberships/count_buildings:
    post:
      summary: Get number of buildings by providing scorecard ids
      description: >-
        Get number of buildings by providing scorecard ids, Customer account
        manager only 🔒
      tags:
        - scorecard_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ScorecardMembershipCost'
      responses:
        '200':
          description: Returns status ok
          content:
            application/json:
              schema:
                properties:
                  scorecard_membership:
                    type: array
                    items:
                      $ref: '#/components/schemas/CountBuildingsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
  /v1/scorecard_assigners:
    get:
      summary: 'Returns all scorecard assigners within the given account. '
      description: Returns all scorecard assigners within the given account.
      tags:
        - scorecard_assigners
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_id
          in: query
          description: The ID on other scorecard to filter assigners
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all scorecard assigners within the given customer account
          content:
            application/json:
              schema:
                properties:
                  scorecard_assigners:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardAssignersIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_read
    post:
      summary: Creates a scorecard assigner
      description: |
        # Description
        Creates a new scorecard assigner
      tags:
        - scorecard_assigners
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardAssignerCreate'
        required: true
      responses:
        '201':
          description: Scorecard assigner successfully created
          content:
            application/json:
              schema:
                properties:
                  scorecard_assigners:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScorecardAssignersIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_write
  /v1/scorecard_assigners/{scorecard_assigner_id}:
    get:
      summary: Shows a scorecard assigner
      description: Shows a scorecard assigner, Customer account manager 🔒
      tags:
        - scorecard_assigners
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_assigner_id
          in: path
          description: >-
            The ID of the scorecard assigner (only shows the scorecards based on
            current account)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard assigner
          content:
            application/json:
              schema:
                properties:
                  scorecard_assigners:
                    $ref: '#/components/schemas/ScorecardAssignersShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_read
    delete:
      summary: Deletes the scorecard assigner within the current account.
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      tags:
        - scorecard_assigners
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: scorecard_assigner_id
          in: path
          description: The ID of the scorecard assigner to delete
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard assigner successfully deleted
          content:
            application/json:
              schema:
                properties:
                  scorecard_assigner:
                    $ref: '#/components/schemas/ScorecardAssignersShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_destroy
  /v1/data_catalogs:
    get:
      summary: Returns all data catalogs
      description: Returns all data catalogs within the given customer account.
      tags:
        - data_catalogs
      parameters:
        - name: locale
          in: query
          description: The locale for filtering the data catalogs.
          required: false
          schema:
            type: string
            enum:
              - en
              - de
        - name: app_ids
          in: path
          description: The ids of the apps for filtering the data catalogs.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns all data catalogs within the app
          content:
            application/json:
              schema:
                properties:
                  data_catalog:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataCatalogIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - data_catalog_read
    post:
      summary: Creates a data catalog
      description: |
        # Description
        Creates a new catalog
      tags:
        - data_catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCatalogCreate'
        required: true
      responses:
        '201':
          description: data_catalog successfully created
          content:
            application/json:
              schema:
                properties:
                  DataCatalog:
                    $ref: '#/components/schemas/data_catalogsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - data_catalog_write
  /v1/data_catalogs/{data_catalog_id}:
    get:
      summary: Shows a data catalog
      description: Shows a data_catalog, Customer account manager 🔒
      tags:
        - data_catalogs
      parameters:
        - name: data_catalog_id
          in: path
          description: >-
            The ID of the data_catalog (only shows the data_catalogs based on
            current_organisation_id)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the data catalog
          content:
            application/json:
              schema:
                properties:
                  DataCatalog:
                    $ref: '#/components/schemas/data_catalogsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - data_catalog_read
    put:
      summary: Updates a data_catalog
      description: |
        # Description
        Updates a data_catalog, Organisation manager 🔒
      tags:
        - data_catalogs
      parameters:
        - name: data_catalog_id
          in: path
          description: The ID of the data catalog (only shows the data catalog)
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCatalogUpdate'
        required: true
      responses:
        '200':
          description: Data catalog successfully updated
          content:
            application/json:
              schema:
                properties:
                  DataCatalog:
                    $ref: '#/components/schemas/data_catalogsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - data_catalog_write
    delete:
      summary: Deletes the data catalog within the current app.
      description: >-
        Deletes the data_catalog within the current account. Customer account
        manager only 🔒
      tags:
        - data_catalogs
      parameters:
        - name: data_catalog_id
          in: path
          description: The ID of the data catalog to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Data catalog successfully deleted
          content:
            application/json:
              schema:
                properties:
                  DataCatalog:
                    $ref: '#/components/schemas/data_catalogsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - data_catalog_destroy
  /v1/raw_data_catalogs:
    get:
      summary: Returns all raw data catalogs
      description: Returns all raw data catalogs within the given customer account.
      tags:
        - raw_data_catalogs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            Limit the number of results to return, if null then return all
            results
          required: false
          schema:
            type: integer
        - name: order_by
          in: query
          description: >-
            The ordering of the results returned, if null then will return not
            ordered results.
                        Possible columns: app_id, status, version,
                        Possible order: asc, desc
          required: false
          example: app_id.desc, status.desc, version.desc
          schema:
            type: string
      responses:
        '200':
          description: Returns all raw data catalogs within the app
          content:
            application/json:
              schema:
                properties:
                  raw_data_catalog:
                    type: array
                    items:
                      $ref: '#/components/schemas/RawDataCatalogIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - raw_data_catalog_read
  /v1/raw_data_catalogs/{raw_data_catalog_id}:
    get:
      summary: Shows a data catalog
      description: Shows a data_catalog, Customer account manager 🔒
      tags:
        - raw_data_catalogs
      parameters:
        - name: customer_account_id
          in: query
          description: The ID of the customer_account
          required: true
          schema:
            type: integer
        - name: raw_data_catalog_id
          in: path
          description: >-
            The ID of the data_catalog (only shows the raw_data_catalogs based
            on current_organisation_id)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the data catalog
          content:
            application/json:
              schema:
                properties:
                  RawDataCatalog:
                    $ref: '#/components/schemas/RawDataCatalogsShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - raw_data_catalog_read
  /v1/rent_increase_types:
    post:
      summary: Creates a rent_increase_type (Admin only)
      description: |
        # Description
        Creates a rent_increase_type
        Category: 1 for indexed and 2 for graduated.
      tags:
        - rent_increase_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseType'
      responses:
        '201':
          description: RentIncreaseType successfully created
          content:
            application/json:
              schema:
                properties:
                  rent_increase_type:
                    $ref: '#/components/schemas/RentIncreaseTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_write
    get:
      summary: Return rent_increase_types
      description: Return rent_increase_types
      tags:
        - rent_increase_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return rent_increase_types
          content:
            application/json:
              schema:
                properties:
                  rent_increase_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/RentIncreaseTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_read
  /v1/rent_increase_types/{rent_increase_type_id}:
    get:
      summary: Return rent_increase_type
      description: Return rent_increase_type
      tags:
        - rent_increase_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_type_id
          in: path
          description: ID of the rent_increase_type
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns rent_increase_type
          content:
            application/json:
              schema:
                properties:
                  rent_increase_type:
                    $ref: '#/components/schemas/RentIncreaseTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_read
    put:
      summary: Update rent_increase_type
      description: |
        # Description
        Update rent_increase_type (Admin only)
        Category: 1 for indexed and 2 for graduated.
      tags:
        - rent_increase_types
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_type_id
          in: path
          description: ID of the rent_increase_type to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseType'
      responses:
        '200':
          description: Building rent_increase_type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_write
    delete:
      summary: Delete a rent_increase_type (Admin only)
      description: |
        # Description
        Delete a rent_increase_type.
      tags:
        - rent_increase_types
      parameters:
        - name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
        - name: rent_increase_type_id
          in: path
          description: The ID of the rent_increase_type to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: rent_increase_type successfully deleted
          content:
            application/json:
              schema:
                properties:
                  rent_increase_type:
                    $ref: '#/components/schemas/RentIncreaseTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_destroy
  /v1/rent_increase_indices:
    post:
      summary: Creates a rent_increase_index (Admin only)
      description: |
        # Description
        Creates a rent_increase_index
      tags:
        - rent_increase_indices
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseIndices'
      responses:
        '201':
          description: RentIncreaseIndex successfully created
          content:
            application/json:
              schema:
                properties:
                  rent_increase_indices:
                    $ref: '#/components/schemas/RentIncreaseIndicesIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_write
    get:
      summary: Return rent_increase_indices
      description: Return rent_increase_indices
      tags:
        - rent_increase_indices
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_type_id
          in: query
          description: ID of the rent_increase_type
          schema:
            type: integer
        - name: date
          in: query
          description: Date of the rent_increase_index
          schema:
            type: string
            format: date
        - name: subtype
          in: query
          description: Subtype (building_type) of the rent_increase
          schema:
            type: string
      responses:
        '200':
          description: Return rent_increase_indices
          content:
            application/json:
              schema:
                properties:
                  rent_increase_indices:
                    type: array
                    items:
                      $ref: '#/components/schemas/RentIncreaseIndicesIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_read
  /v1/rent_increase_indices/{rent_increase_index_id}:
    get:
      summary: Return rent_increase_index
      description: Return rent_increase_index
      tags:
        - rent_increase_indices
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_index_id
          in: path
          description: ID of the rent_increase_index
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns rent_increase_index
          content:
            application/json:
              schema:
                properties:
                  rent_increase_index:
                    $ref: '#/components/schemas/RentIncreaseIndicesIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_read
    put:
      summary: Update rent_increase_index
      description: |
        # Description
        Update rent_increase_index (Admin only)
      tags:
        - rent_increase_indices
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_index_id
          in: path
          description: ID of the rent_increase_index to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseIndices'
      responses:
        '200':
          description: Building rent_increase_index successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseIndicesIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_write
    delete:
      summary: Delete a rent_increase_index (Admin only)
      description: |
        # Description
        Delete a rent_increase_index.
      tags:
        - rent_increase_indices
      parameters:
        - name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - name: rent_increase_index_id
          in: path
          description: The ID of the rent_increase_index to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: rent_increase_index successfully deleted
          content:
            application/json:
              schema:
                properties:
                  rent_increase_type:
                    $ref: '#/components/schemas/RentIncreaseIndicesIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_destroy
  /v1/task_memberships:
    post:
      summary: Creates a task_membership
      description: |
        # Description
        Creates a task_membership
      tags:
        - task_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/TaskMembership'
      responses:
        '201':
          description: TaskMembership successfully created
          content:
            application/json:
              schema:
                properties:
                  task_membership:
                    $ref: '#/components/schemas/TaskMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - task_membership_write
    get:
      summary: Return task_memberships
      description: Return task_memberships
      tags:
        - task_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: task_ids
          in: query
          description: IDs of the tasks
          example: 1,2,3
          schema:
            type: string
      responses:
        '200':
          description: Return task_memberships
          content:
            application/json:
              schema:
                properties:
                  task_memberships:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaskMembershipIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - task_membership_read
  /v1/task_memberships/{task_membership_id}:
    delete:
      summary: Delete the task_membership
      description: Delete the task_membership
      tags:
        - task_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: task_membership_id
          in: path
          description: ID of the task_membership you want to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TaskMembership successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - task_membership_destroy
    put:
      summary: Update task_membership
      description: Update task_membership
      tags:
        - task_memberships
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: task_membership_id
          in: path
          description: ID of the task_membership to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/TaskMembership'
      responses:
        '200':
          description: Building task_membership successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - task_membership_write
  /v1/rent_increases:
    post:
      summary: Creates a rent's increase (Admin only)
      description: >
        # Description

        Creates a rent's increase

        Status: pending: 1, confirmed: 2, canceled: 3, confirmation_needed: 4,
        max_adjustments_reached: 5
      tags:
        - rent_increases
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentIncreaseCreate'
        required: true
      responses:
        '201':
          description: RentIncrease successfully created
          content:
            application/json:
              schema:
                properties:
                  rent_increase:
                    $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_write
    get:
      summary: Return rent's increases
      description: Return rent's increases
      tags:
        - rent_increases
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return rent's increases
          content:
            application/json:
              schema:
                properties:
                  rent_increases:
                    type: array
                    items:
                      $ref: '#/components/schemas/RentIncreaseIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_read
  /v1/rent_increases/{rent_increase_id}/apply:
    put:
      summary: Apply rent'  increase
      description: |
        # Description
        Apply rent_increase
      tags:
        - rent_increases
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_id
          in: path
          description: ID of the rent'  increase to update
          required: true
          schema:
            type: integer
        - name: apply
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Rent's increase successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_write
  /v1/rent_increases/{rent_increase_id}:
    get:
      summary: Return rent's increase
      description: Return rent's increase
      tags:
        - rent_increases
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_id
          in: path
          description: ID of the rent'  increase
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns rent'  increase
          content:
            application/json:
              schema:
                properties:
                  rent_increase:
                    $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_read
    put:
      summary: Update rent'  increase
      description: >
        # Description

        Update rent_increase (Admin only)

        Status: pending: 1, confirmed: 2, canceled: 3, confirmation_needed: 4,
        max_adjustments_reached: 5
      tags:
        - rent_increases
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer_account
          required: true
          schema:
            type: integer
        - name: rent_increase_id
          in: path
          description: ID of the rent'  increase to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentIncrease'
        required: true
      responses:
        '200':
          description: Rent's increase successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_write
    delete:
      summary: Delete a rent_increase (Admin only)
      description: |
        # Description
        Delete a rent_increase.
      tags:
        - rent_increases
      parameters:
        - name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
        - name: rent_increase_id
          in: path
          description: The ID of the rent_increase to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rent's increase successfully deleted
          content:
            application/json:
              schema:
                properties:
                  rent_increase:
                    $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - rent_increase_destroy
  /v1/emission_factor_settings/update:
    post:
      summary: Updates an EmissionFactorSetting
      description: Updates an EmissionFactorSetting within account
      tags:
        - emission_factor_settings
      parameters:
        - name: customer_account_id
          in: query
          description: The ID on customer_account of the EmissionFactorSettings to show
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionFactorSettingUpdate'
        required: true
      responses:
        '200':
          description: EmissionFactorSetting successfully updated
          content:
            application/json:
              schema:
                properties:
                  emission_factor_setting:
                    $ref: '#/components/schemas/EmissionFactorSettingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_write
  /v1/emission_factor_settings:
    get:
      summary: Returns all EmissionFactorSettings within the given account
      description: Returns all EmissionFactorSettings within the given account
      tags:
        - emission_factor_settings
      parameters:
        - name: customer_account_id
          in: query
          description: The ID on customer_account of the EmissionFactorSettings to show
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all EmissionFactorSettings within the given account
          content:
            application/json:
              schema:
                properties:
                  emission_factor_settings:
                    type: array
                    items:
                      $ref: '#/components/schemas/EmissionFactorSettingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_read
    post:
      summary: Creates an EmissionFactorSetting
      description: Creates an EmissionFactorSetting
      tags:
        - emission_factor_settings
      parameters:
        - name: customer_account_id
          in: query
          description: The ID on customer_account of the EmissionFactorSettings to show
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionFactorSettingCreate'
        required: true
      responses:
        '201':
          description: EmissionFactorSetting successfully created
          content:
            application/json:
              schema:
                properties:
                  emission_factor_setting:
                    $ref: '#/components/schemas/EmissionFactorSettingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_write
  /v1/emission_factor_settings/{emission_factor_setting_id}:
    get:
      summary: Shows a EmissionFactorSetting
      description: Shows a EmissionFactorSetting
      tags:
        - emission_factor_settings
      parameters:
        - name: emission_factor_setting_id
          in: path
          description: The ID of the emission_factor_setting to show
          required: true
          schema:
            type: integer
        - name: customer_account_id
          in: query
          description: The ID on customer_account of the EmissionFactorSettings to show
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the EmissionFactorSetting
          content:
            application/json:
              schema:
                properties:
                  emission_factor_setting:
                    $ref: '#/components/schemas/EmissionFactorSettingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_read
    delete:
      summary: Deletes the EmissionFactorSetting within the account.
      description: Deletes the EmissionFactorSetting within the account.
      tags:
        - emission_factor_settings
      parameters:
        - name: emission_factor_setting_id
          in: path
          description: The ID of the emission_factor_setting to show
          required: true
          schema:
            type: integer
        - name: customer_account_id
          in: query
          description: The ID on customer_account of the EmissionFactorSettings to show
          required: false
          schema:
            type: string
      responses:
        '200':
          description: EmissionFactorSetting successfully deleted
          content:
            application/json:
              schema:
                properties:
                  emission_factor_setting:
                    $ref: '#/components/schemas/EmissionFactorSettingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_destroy
  /v1/customer_account_category_configs:
    post:
      summary: Creates a customer account category config
      description: |
        # Description
        Creates a customer account category config
      tags:
        - customer_account_category_configs
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryConfigCreate'
        required: true
      responses:
        '201':
          description: Customer account category config successfully created
          content:
            application/json:
              schema:
                properties:
                  customer_account_category_config:
                    $ref: '#/components/schemas/CustomerAccountCategoryConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_config_write
  /v1/customer_account_category_configs/{customer_account_category_config_id}:
    put:
      summary: Update the customer account category config
      description: Update the customer account category config
      tags:
        - customer_account_category_configs
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_category_config_id
          in: path
          description: ID of the customer account category config you want to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryConfigUpdate'
        required: true
      responses:
        '200':
          description: Customer account category config successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_config_write
    delete:
      summary: Delete the customer account category config
      description: Delete the customer account category config
      tags:
        - customer_account_category_configs
      parameters:
        - name: customer_account_id
          in: query
          description: ID of the customer account
          required: true
          schema:
            type: integer
        - name: customer_account_category_config_id
          in: path
          description: ID of the customer account category config you want to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer account category config successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationError'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorizationError'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnprocessableRequestError'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalServerError'
      security:
        - api_key: []
        - oauth:
            - customer_account_category_config_destroy
servers:
  - url: api.realcube.com/api
components:
  parameters:
    current_organisation_id:
      name: current_organisation_id
      in: query
      description: ID of the current organisation
      required: true
      schema:
        type: integer
  requestBodies:
    ContractMembershipCostCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractMembershipCostCreate'
      required: true
    ActivityTypeCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityTypeCreate'
      required: true
    ContractAdditionCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractAdditionCreate'
      required: true
    BuildingFilterSettingsCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BuildingFilterSettingsCreate'
      required: true
    SecurityDepositCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityDepositCreate'
      required: true
    TaskMembership:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskMembership'
      required: true
    RentIncreaseType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RentIncreaseType'
      required: true
    OrganisationConfigCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationConfigCreate'
      required: true
    ContractGrantCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractGrantCreate'
      required: true
    BuildingSaveFiltersCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BuildingSaveFiltersCreate'
      required: true
    RentTrackerCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RentTrackerCreate'
      required: true
    ReportTemplateCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportTemplateCreate'
      required: true
    ReportAccountSchemaCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportAccountSchemaCreate'
      required: true
    ScorecardMembershipCost:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScorecardMembershipCost'
      required: true
    RentIncreaseIndices:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RentIncreaseIndices'
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Api-Key
      in: header
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            app_category_read: Get the app categories
            app_config_read: Get the app_configs
            app_config_write: Create or edit an app_config
            app_config_destroy: Delete the app_config
            app_data_repository_read: Get the app_data_repositories
            app_data_repository_write: Create or edit an app_data_repository
            app_data_repository_destroy: Delete the app_data_repository
            app_subscription_read: Get the app_subscriptions
            app_subscription_write: Create or edit an app_subscription
            app_subscription_destroy: Delete the app_subscription
            app_read: Get the apps
            app_write: Create or edit an app
            app_destroy: Delete the app
            contract_addition_read: Get the contract_additions
            contract_addition_write: Create or edit an contract_addition
            contract_addition_destroy: Delete the contract_addition
            contract_grant_read: Get the contract_grants
            contract_grant_write: Create or edit an contract_grant
            contract_grant_destroy: Delete the contract_grant
            contract_membership_cost_read: Get the contract_membership_costs
            contract_membership_cost_write: Create or edit an contract_membership_cost
            contract_membership_cost_destroy: Delete the contract_membership_cost
            contract_membership_write: Create or edit an contract_membership
            contract_membership_destroy: Delete the contract_membership
            contract_read: Get the contracts
            contract_write: Create or edit an contract
            contract_destroy: Delete the contract
            cost_type_read: Get the cost_types
            cost_type_write: Create or edit an cost_type
            cost_type_destroy: Delete the cost_type
            security_deposit_write: Create or edit an security_seposit
            security_deposit_destroy: Delete the security_seposit
            report_account_schema_read: Get the report_account_schemas
            report_account_schema_write: Create or edit an report_account_schema
            report_account_schema_destroy: Delete the report_account_schema
            report_template_read: Get the report_templates
            report_template_write: Create or edit the report_template
            report_template_destroy: Delete the report_template
            department_read: Get the departments
            department_write: Create or edit an department
            department_destroy: Delete the department
            manufacturer_read: Get the manufacturers
            manufacturer_write: Create or edit an manufacturer
            manufacturer_destroy: Delete the manufacturer
            room_and_zone_type_read: Get room_and_zone_types
            room_read: Get the rooms
            room_write: Create or edit an room
            room_destroy: Delete the room
            zone_write: Create or edit an zone
            zone_destroy: Delete the zone
            level_read: Get level
            level_write: Create or edit an facility_type
            level_destroy: Delete the facility_type
            facility_read: Get facility
            facility_write: Create or edit an facility_type
            facility_destroy: Delete the facility_type
            facility_type_read: Get the facility_types
            plan_version_write: Create or edit an plan_version
            plan_version_destroy: Delete the plan_version
            plan_read: Get the plans
            plan_write: Create or edit an plan
            plan_destroy: Delete the plan
            plan_config_read: Get the config of a plan
            activity_read: Fetch activities
            activity_write: Create and edit an activity
            activity_destroy: Delete the activity
            attachment_write: Create or edit an attachment
            attachment_destroy: Delete the attachment
            building_filter_setting_read: Get the building_filter_settings
            building_filter_setting_write: Create or edit an building_filter_setting
            building_filter_setting_destroy: Delete the building_filter_setting
            building_save_filter_read: Get the building_save_filters
            building_save_filter_write: Create or edit an building_save_filter
            building_save_filter_destroy: Delete the building_save_filter
            building_type_read: Get the building_types
            building_unit_membership_write: Create or edit an building_unit_membership
            building_unit_membership_destroy: Delete the building_unit_membership
            building_unit_type_read: Get the building_unit_types
            building_unit_type_write: Create or edit an building_unit_type
            building_unit_type_destroy: Delete the building_unit_type
            building_unit_read: Get the building_units
            building_unit_write: Create or edit an building_unit
            building_unit_destroy: Delete the building_unit
            building_read: Get the buildings
            building_write: Create or edit an building
            building_destroy: Delete the building
            customer_account_config_read: Get the customer_account_configs
            customer_account_config_write: Create or edit an customer_account_config
            customer_account_schema_read: Get the customer_account_schemas
            customer_account_schema_write: Create or edit an customer_account_schema
            customer_attributes_schema_membership_read: Get the customer_attributes_schema_memberships
            customer_attributes_schema_membership_write: Create or edit an customer_attributes_schema_membership
            customer_attributes_schema_read: Get the customer_attributes_schemas
            customer_attributes_schema_write: Create or edit an customer_attributes_schema
            image_write: Create or edit the image
            image_destroy: Delete the image
            lot_read: Get the lots
            lot_write: Create or edit an lot
            lot_destroy: Delete the lot
            organisation_config_read: Get the organisation_configs
            organisation_config_write: Create or edit an organisation_config
            organisation_membership_read: Get the organisation_memberships
            organisation_membership_write: Create or edit an organisation_membership
            organisation_membership_destroy: Delete the organisation_membership
            organisation_read: Get the organisations
            organisation_write: Create or edit an organisation
            person_read: Get the people
            person_write: Create or edit an person
            person_destroy: Delete the person
            person_membership_write: Create or edit an person_membership
            person_membership_destroy: Delete the person_membership
            property_read: Get the properties
            property_write: Create or edit an property
            property_destroy: Delete the property
            property_type_read: Get the property_types
            user_write: Log In or edit, or reset password for an user
            user_destroy: Log out
            vpi_index_read: Get the vpi_index
            credential_read: Get oauth credentials
            dashboard_config_read: Get dashboard config for an account
            dashboard_config_write: Add or edit the dashboard config for an account
            dashboard_config_destroy: Remove the dashboard config for an account
            time_dependent_attribute_read: Get time_dependent_attribute for an account
            time_dependent_attribute_write: Add or edit the time_dependent_attribute for an account
            time_dependent_attribute_destroy: Remove the time_dependent_attribute for an account
            ep_code_combination_read: Get the ep_code_combinations
            customer_account_write: ''
  schemas:
    PlatformConfig:
      type: object
      properties:
        landing_page_marketing:
          type: object
          properties:
            headline:
              type: string
            button_title:
              type: string
            button_link:
              type: string
            button_displayed:
              type: boolean
            image:
              type: string
            body:
              type: string
    PlatformConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PlatformConfig'
        - required:
            - platform_configs
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    PlatformConfigCreate:
      allOf:
        - $ref: '#/components/schemas/PlatformConfig'
        - required:
            - platform_configs
    PlatformConfigUpdate:
      allOf:
        - $ref: '#/components/schemas/PlatformConfig'
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        locale:
          type: string
          enum:
            - de
            - en
            - gsw
        user_settings:
          type: object
    UserShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
          properties:
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
    UserIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
            - last_editor
          properties:
            thumbnail_url:
              type: string
            last_editor:
              $ref: '#/components/schemas/User'
    UserEmail:
      properties:
        email:
          type: string
    UserCreate:
      allOf:
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
          properties:
            redirect_url:
              type: string
            role_policy_ids:
              type: array
              items: {}
    UserUpdate:
      allOf:
        - $ref: '#/components/schemas/User'
        - properties:
            password:
              type: string
            current_password:
              type: string
            role_policy_ids:
              type: array
              items: {}
    UserResetPasswordInstructions:
      type: object
      required:
        - email
      properties:
        email:
          type: string
        redirect_url:
          type: string
    UserInvitations:
      type: object
      required:
        - email
      properties:
        email:
          type: string
        redirect_url:
          type: string
    UserSignIn:
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    UserSignedIn:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
            - api_key
          properties:
            role:
              type: string
              enum:
                - admin
                - client
            api_key:
              type: string
            thumbnail_url:
              type: string
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
    UserWithRefreshedToken:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - api_key
            - first_name
            - last_name
            - email
          properties:
            api_key:
              type: string
    Role:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        role_policy_maps_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              role_policy_id:
                type: number
              _destroy:
                type: string
    RoleShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Role'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    RoleCreate:
      allOf:
        - $ref: '#/components/schemas/Role'
        - required:
            - name
            - currency
    RoleUpdate:
      allOf:
        - $ref: '#/components/schemas/Role'
    RoleIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Role'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    RolePolicy:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        rules:
          type: object
    RolePolicyShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RolePolicy'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    RolePolicyCreate:
      allOf:
        - $ref: '#/components/schemas/RolePolicy'
        - required:
            - name
            - currency
    RolePolicyUpdate:
      allOf:
        - $ref: '#/components/schemas/Role'
    RolePolicyIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RolePolicy'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    Tenant:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
    TenantContract:
      type: object
      properties:
        id:
          type: string
        start_date:
          type: string
        end_date:
          type: string
    TenantUnit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        street:
          type: string
        street_number:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        zip_code:
          type: string
        latitude:
          type: string
        longitude:
          type: string
    TenantShow:
      allOf:
        - $ref: '#/components/schemas/Tenant'
        - required: []
          properties:
            contract:
              $ref: '#/components/schemas/TenantContract'
            unit:
              $ref: '#/components/schemas/TenantUnit'
    CustomerAccountTranslation:
      type: object
      properties:
        language:
          type: string
        value:
          type: string
        field:
          type: string
        parent_id:
          type: string
        parent_type:
          type: string
    CustomerAccountTranslationShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountTranslation'
        - type: object
          required:
            - name
            - user
            - last_editor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountTranslationCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountTranslation'
    CustomerAccountTranslationUpdate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountTranslation'
    CustomerAccountTranslationIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountTranslation'
        - required:
            - name
            - user
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccountLightShow'
    CustomerAccountAttributeGroup:
      type: object
      properties:
        name:
          type: string
        fields:
          type: array
          items:
            type: string
        read_only:
          type: boolean
        parent_type:
          type: string
    CustomerAccountAttributeGroupShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountAttributeGroup'
        - type: object
          required:
            - name
            - user
            - last_editor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountAttributeGroupCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountAttributeGroup'
    CustomerAccountAttributeGroupUpdate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountAttributeGroup'
    CustomerAccountAttributeGroupIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountAttributeGroup'
        - required:
            - name
            - user
            - last_editor
          properties:
            id:
              type: integer
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccountLightShow'
    EpCodeCombination:
      type: object
      properties:
        facility_type_id:
          type: integer
        ep_code:
          type: string
        repetition:
          type: integer
    EpCodeCombinationByFacilityType:
      allOf:
        - type: object
          additionalProperties:
            $ref: '#/components/schemas/EpCodeCombinationIndex'
        - required:
            - facility_type_id
    EpCodeCombinationIndex:
      allOf:
        - type: array
          items:
            $ref: '#/components/schemas/EpCodeCombination'
        - required:
            - facility_type_id
    DashboardConfig:
      type: object
      properties:
        aws_settings:
          type: object
          properties:
            aws_access_key_id:
              type: string
            aws_secret_access_key:
              type: string
            aws_region:
              type: string
            aws_account_id:
              type: string
            dashboard_id:
              type: string
            identity_type:
              type: string
              enum:
                - QUICKSIGHT
                - IAM
                - ANONYMOUS
    DashboardConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/DashboardConfig'
        - required:
            - dashboard_configs
          properties:
            customer_account:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountLightShow'
            embed_dashboard:
              type: object
              properties:
                embed_url:
                  type: string
                status:
                  type: number
                request_id:
                  type: string
    DashboardConfigCreate:
      allOf:
        - $ref: '#/components/schemas/DashboardConfig'
        - required:
            - dashboard_configs
    DashboardConfigUpdate:
      allOf:
        - $ref: '#/components/schemas/DashboardConfig'
    Dashboard:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        looker_item:
          type: string
        looker_config:
          type: object
        position:
          type: integer
        show_dashboard:
          type: boolean
    DashboardShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Dashboard'
        - required:
            - looker_embed_url
          properties:
            looker_embed_url:
              type: string
            customer_account_id:
              type: integer
            type:
              type: string
              enum:
                - standard
                - custom
              description: |
                standard: that cannot be editable
                custom: that are editable
    DashboardIndex:
      allOf:
        - $ref: '#/components/schemas/Dashboard'
        - properties:
            type:
              type: string
              enum:
                - standard
                - custom
              description: |
                standard: that cannot be editable
                custom: that are editable
            looker_embed_url:
              type: string
            customer_account_id:
              type: integer
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    DashboardUpdate:
      allOf:
        - required:
            - show_dashboard
          properties:
            name:
              type: string
            description:
              type: string
            looker_item:
              type: string
            show_dashboard:
              type: boolean
    DashboardOrderUpdate:
      allOf:
        - required:
            - dashboard_ids
          properties:
            dashboard_ids:
              type: array
              items:
                type: integer
    App:
      type: object
      properties:
        name:
          type: string
        currency:
          type: string
        short_name:
          type: string
        logo_base64:
          type: string
        logo_filename_with_extension:
          type: string
        data_partner_interface:
          type: string
        default_retail_price:
          type: integer
        default_retail_currency:
          type: string
        default_realcube_price:
          type: integer
        default_realcube_currency:
          type: string
        default_price_category:
          type: string
        default_data_lifetime:
          type: integer
        catalog_update_frequency:
          type: integer
        data_partner_base_url:
          type: string
        data_partner_score_url:
          type: string
    AppShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/App'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/AppSubscription'
            app_categories:
              type: array
              items:
                $ref: '#/components/schemas/AppCategory'
            images:
              type: array
              items:
                $ref: '#/components/schemas/Image'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    AppCreate:
      allOf:
        - $ref: '#/components/schemas/App'
        - required:
            - name
            - currency
    AppUpdate:
      allOf:
        - $ref: '#/components/schemas/App'
    AppIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/App'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            app_subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/AppSubscription'
            app_categories:
              type: array
              items:
                $ref: '#/components/schemas/AppCategory'
            images:
              type: array
              items:
                $ref: '#/components/schemas/Image'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    AppCategory:
      type: object
      properties:
        name:
          type: string
    AppCategoryShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppCategory'
        - required: []
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            apps:
              type: array
              items:
                $ref: '#/components/schemas/App'
    AppSubscription:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        periodicity:
          type: string
        price:
          type: number
    AppSubscriptionCreate:
      allOf:
        - properties:
            app_id:
              type: integer
            name:
              type: string
              enum:
                - Free Tier
                - Premium
            periodicity:
              type: string
              enum:
                - month
                - year
        - $ref: '#/components/schemas/AppSubscription'
    AppSubscriptionShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppSubscription'
        - properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app:
              $ref: '#/components/schemas/App'
          required:
            - name
            - price
            - periodicity
    AppConfig:
      type: object
      properties:
        organisation_ids:
          type: array
          items:
            type: integer
    AppConfigCreate:
      properties:
        organisation_ids:
          type: array
          items:
            type: integer
        app_subscription_id:
          type: integer
    AppConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppConfig'
        - required: []
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscription:
              $ref: '#/components/schemas/AppSubscription'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    AppCategoryMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - required:
            - app_id
            - app_category_id
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscription:
              $ref: '#/components/schemas/App'
            app_category:
              $ref: '#/components/schemas/AppCategory'
    AppDataRepository:
      type: object
      properties:
        app_data:
          type: object
    AppDataRepositoryCreate:
      type: object
      properties:
        app_data:
          type: object
        app_subscription_id:
          type: integer
        parent_id:
          type: integer
        parent_type:
          type: string
    AppDataRepositoryUpdate:
      type: object
      properties:
        app_data:
          type: object
    AppDataRepositoryShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppDataRepository'
        - required:
            - app_data
            - app_subscription_id
          properties:
            app_data:
              properties:
                example:
                  type: object
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscription:
              $ref: '#/components/schemas/AppSubscription'
    Plan:
      type: object
      properties:
        name:
          type: string
        trade:
          type: string
          enum:
            - AA
            - AR
            - BA
            - BD
            - BG
            - BP
            - DV
            - ET
            - EW
            - FA
            - FT
            - HT
            - IA
            - KP
            - KT
            - LP
            - MT
            - SB
            - SI
            - ST
            - TE
            - TG
            - TW
            - VE
            - VM
            - VP
            - VT
        plan_type:
          type: string
          enum:
            - AA
            - AB
            - AF
            - AM
            - AP
            - AU
            - BA
            - BC
            - BE
            - BG
            - BL
            - BM
            - BN
            - BP
            - BS
            - BT
            - BW
            - BZ
            - DE
            - DP
            - DS
            - DT
            - EB
            - EL
            - EP
            - ER
            - ET
            - EW
            - FA
            - FS
            - FL
            - FN
            - FT
            - FW
            - GR
            - HH
            - HL
            - HP
            - HZ
            - IP
            - KA
            - KL
            - KM
            - KO
            - KP
            - KW
            - LA
            - LE
            - LF
            - LG
            - ME
            - MS
            - MT
            - NL
            - NS
            - PP
            - PZ
            - RW
            - SA
            - SB
            - SI
            - SK
            - SP
            - SS
            - SW
            - TH
            - TK
            - TV
            - UB
            - VK
            - VL
            - VM
            - VS
            - VT
            - WA
            - WP
            - AS
            - MO
            - BD
            - PF
            - TP
            - MF
        planning_phase:
          type: string
          enum:
            - '00'
            - '10'
            - '20'
            - '30'
            - '40'
            - '50'
            - '60'
            - '70'
            - '80'
            - '90'
            - AQ
            - WE
            - XX
        presentation:
          type: string
          enum:
            - GR
            - SC
            - AN
            - XX
            - PE
            - SH
            - VI
        plan_content:
          type: string
        floor:
          type: string
        description:
          type: string
    PlanShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Plan'
        - required:
            - name
            - trade
            - plan_type
            - planning_phase
            - presentation
            - floor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            plan_versions:
              type: array
              items:
                $ref: '#/components/schemas/PlanVersion'
    PlanCreate:
      allOf:
        - $ref: '#/components/schemas/Plan'
        - required:
            - name
            - trade
            - plan_type
            - planning_phase
            - presentation
            - floor
    PlanUpdate:
      allOf:
        - $ref: '#/components/schemas/Plan'
    PlanIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Plan'
        - required:
            - building
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            plan_versions:
              type: array
              items:
                $ref: '#/components/schemas/PlanVersion'
    PlanConfig:
      type: object
      properties:
        current_filename_config:
          type: object
        parent_type:
          type: string
    PlanConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PlanConfig'
        - required: []
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    PlanVersion:
      type: object
      properties:
        status:
          type: string
          enum:
            - VZ
            - BF
            - FR
            - ZF
    PlanVersionShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Plan'
        - required:
            - status
          properties:
            version:
              type: string
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    PlanVersionCreate:
      allOf:
        - required:
            - status
          properties:
            status:
              type: string
              enum:
                - VZ
                - BF
                - FR
                - ZF
            version:
              type: string
    PlanVersionUpdate:
      allOf:
        - required:
            - status
          properties:
            version:
              type: string
            status:
              type: string
              enum:
                - VZ
                - BF
                - FR
                - ZF
    Organisation:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        comment:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
    OrganisationShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Organisation'
        - properties:
            customer_accounts:
              $ref: '#/components/schemas/CustomerAccountShow'
        - required:
            - name
            - organisation_memberships
            - last_editor
          properties:
            organisation_memberships:
              $ref: '#/components/schemas/OrganisationMembershipShow'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    OrganisationIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Organisation'
        - required:
            - name
            - last_editor
          properties:
            deleted_at:
              type: string
              nullable: true
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account:
              $ref: '#/components/schemas/CustomerAccountShow'
    OrganisationCreate:
      allOf:
        - $ref: '#/components/schemas/Organisation'
        - required:
            - name
    OrganisationUpdate:
      allOf:
        - $ref: '#/components/schemas/Organisation'
    OrganisationConfig:
      type: object
      required:
        - id
        - building
        - building_unit
        - user
        - organisation
        - last_editor
      properties:
        id:
          type: integer
        building:
          type: object
          properties:
            standard_fields:
              type: array
              items: {}
            customer_attributes_fields:
              type: array
              items: {}
            tables:
              type: array
              items: {}
        building_unit:
          type: object
          properties:
            standard_fields:
              type: array
              items: {}
            customer_attributes_fields:
              type: array
              items: {}
            tables:
              type: array
              items: {}
        last_editor:
          $ref: '#/components/schemas/UserShow'
        user:
          $ref: '#/components/schemas/UserShow'
        organisation:
          $ref: '#/components/schemas/OrganisationIndex'
        deleted_at:
          type: string
          format: date-time
    OrganisationConfigCreate:
      properties:
        building:
          type: object
          properties:
            standard_fields:
              type: array
              example: []
              items: {}
            customer_attributes_fields:
              type: array
              example: []
              items: {}
            tables:
              type: array
              example: []
              items: {}
        building_unit:
          type: object
          properties:
            standard_fields:
              type: array
              example: []
              items: {}
            customer_attributes_fields:
              type: array
              example: []
              items: {}
            tables:
              type: array
              example: []
              items: {}
    OrganisationMembership:
      type: object
      required:
        - id
        - user
        - organisation
      properties:
        id:
          type: integer
        permitted_building_ids:
          type: array
          items: {}
        user:
          $ref: '#/components/schemas/UserShow'
        organisation:
          $ref: '#/components/schemas/OrganisationIndex'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    OrganisationMembershipCreate:
      allOf:
        - type: object
          required:
            - user_id
          properties:
            user_id:
              type: integer
            permitted_building_ids:
              type: array
              items: {}
            role_ids:
              type: array
              items:
                type: integer
    OrganisationMembershipCreateFromEmail:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
        permitted_building_ids:
          type: array
          items: {}
    OrganisationMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/OrganisationMembership'
        - type: object
          properties:
            id:
              type: integer
            permitted_building_ids:
              type: array
              items: {}
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    OrganisationMembershipUpdate:
      allOf:
        - type: object
          properties:
            permitted_building_ids:
              type: array
              items: {}
            role_ids:
              type: array
              items:
                type: integer
    CustomerAccount:
      properties:
        time_attribute_schema:
          type: object
          properties:
            building:
              type: array
              items: {}
            unit:
              type: array
              items: {}
    CustomerAccountShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            name:
              type: string
            last_editor:
              $ref: '#/components/schemas/UserIndex'
        - $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountLightShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            name:
              type: string
            has_contract:
              type: boolean
            demo_account:
              type: boolean
            demo_expires_at:
              type: string
            last_editor:
              $ref: '#/components/schemas/UserIndex'
        - $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccount'
    CustomerAttributesSchema:
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        attributes_type:
          type: string
          enum:
            - building
            - building_unit
        version:
          type: integer
        json_schema_de:
          type: object
        json_schema_en:
          type: object
    CustomerAttributesSchemaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - properties:
            name:
              type: string
            comment:
              type: string
            attributes_type:
              type: string
              enum:
                - building
                - building_unit
            version:
              type: integer
            json_schema_en:
              type: object
            json_schema_de:
              type: object
          required:
            - name
            - version
            - attributes_type
            - json_schema
    CustomerAttributesSchemaCreate:
      allOf:
        - properties:
            name:
              type: string
            comment:
              type: string
            attributes_type:
              type: string
              enum:
                - building
                - building_unit
            json_schema_de:
              type: object
            json_schema_en:
              type: object
          required:
            - name
            - attributes_type
            - json_schema_de
            - json_schema_en
    CustomerAttributesSchemaMembership:
      type: object
      properties:
        organisation:
          $ref: '#/components/schemas/Organisation'
        customer_attributes_schema:
          $ref: '#/components/schemas/CustomerAttributesSchema'
    CustomerAttributesSchemaMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAttributesSchemaMembership'
        - required:
            - organisation
            - customer_attributes_schema
            - last_editor
          properties:
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    CustomerAttributesSchemaMembershipCreate:
      type: object
      properties:
        organisation_id:
          type: integer
        customer_attributes_schema_id:
          type: integer
      required:
        - organisation_id
        - customer_attributes_schema_id
    CustomerAccountConfig:
      type: object
      properties:
        building_fields:
          type: array
          items:
            type: string
        building_unit_fields:
          type: array
          items:
            type: string
        demo_data_uploaded:
          type: boolean
    PolicyAttributesMap:
      properties:
        policy_map:
          type: object
    CustomerAccountConfigShow:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountConfig'
        - $ref: '#/components/schemas/PolicyAttributesMap'
        - properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            contract_csv_url:
              type: string
              example: >-
                data:text/csv;base64,bmFtZSxwZXJzb25fZmlyc3RfbmFtZSxwZXJzb25fbGFzdF9uYW1lLGJ1aWxkaW5nX25hbWUsYnVpbGRpbmdfdW5pdF9uYW1lLGNvbnRyYWN0X21lbWJlcnNoaXBfdHlwZSxjb250cmFjdF90eXBlLHBhcmVudF9pZCxleHRlcm5hbF9pZCxyZW50YWxfcGVyaW9kLGNvbnRyYWN0X3N1Yl90eXBlLHN0YXJ0X2RhdGUsZW5kX2RhdGUsbWluaW11bV9jb250cmFjdF90ZXJtLG5vdGljZV9wZXJpb2QsY2FuY2VsbGluZ19hdF9kYXRlLGNhbmNlbGxlZF9hdF9kYXRlLHJlbnRfaW5jcmVhc2VfYWxsb3dhbmNlLGluZGV4X2Jhc2VkX2NvbmZpZyxzdGF0dXMscGVyc29uX21lbWJlcnNoaXBzX2F0dHJpYnV0ZXMsbWVtYmVyc2hpcHNfYXR0cmlidXRlcyxjdXJyZW5jeSxLYWx0bWlldGUsU29uc3RpZ2UsRGllbnN0ZSxNd1N0LEluc3RhbmRoYWx0dW5nLFZlcndhbHR1bmdzZ2Viw7xocmVuLFJlcGFyYXR1cmVuLFZlcnNpY2hlcnVuZyx0ZXN0Y29zdCxUSGlTSVNURVNUCg==
            landing_page_dashboards:
              type: array
              items:
                $ref: '#/components/schemas/DashboardIndex'
            has_datamarket_access:
              type: boolean
        - $ref: '#/components/schemas/PersistedRecord'
    CustomerAccountConfigCreate:
      allOf:
        - required:
            - building_fields
            - building_unit_fields
          properties:
            building_fields:
              type: array
              items:
                type: string
            building_unit_fields:
              type: array
              items:
                type: string
    CustomerAccountConfigUpdate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountConfig'
        - required:
            - demo_data_uploaded
          properties:
            demo_data_uploaded:
              type: boolean
    CustomerAccountSchema:
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        attributes_type:
          type: string
          enum:
            - building
            - building_unit
        json_schema_de:
          type: object
        json_schema_en:
          type: object
        json_schema_gsw:
          type: object
    CustomerAccountSchemaShow:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountSchema'
        - $ref: '#/components/schemas/PersistedRecord'
    CustomerAccountSchemaCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountSchema'
    CustomerAccountSchemaUpdate:
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        json_schema_de:
          type: object
        json_schema_en:
          type: object
        json_schema_gsw:
          type: object
    CustomerAccountCategory:
      type: object
      properties:
        label:
          type: string
        grouping:
          type: string
        subgrouping:
          type: string
        display_sort_order:
          type: integer
        default:
          type: boolean
        conversion_factor:
          type: integer
        customer_editable:
          type: boolean
        external_conversion:
          type: boolean
        category:
          type: integer
          enum:
            - length_metric
            - area_metric
            - area_norm
            - currency
            - energy_type
            - energy_volume
            - emission_volume
            - finance
            - water
            - water_volume
            - activity
            - shop_concept
            - retail
            - retail_metric
            - addl_id
            - phase
            - phase_status
            - payment_category
            - rent_tracker_payment
            - parking
            - summary_unit_type
            - summary_unit_type_classifier
            - building_area_type
            - unit_area_type
            - construction_project_category
            - main_energy_source
            - state_of_renovation
            - heating_used_energy
            - kitchen_type
            - objectphase
            - region
            - role
            - unit_type
            - property
            - property_value
            - facility_type
            - floor
            - institution_type
            - roof_form
            - unit_role
            - unit_finance
            - certificate_issuer
            - certificate_system
            - achieved_certificate_level
            - energy_performance
            - energy_source
            - waste_type
            - weight_unit
            - waste_treatment_method
    CustomerAccountCategoryShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountCategory'
        - required:
            - label_id
            - customer_account_translations
          properties:
            label_id:
              type: integer
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    CustomerAccountCategoryCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountCategory'
    CustomerAccountCategoryUpdate:
      allOf:
        - properties:
            label:
              type: string
            grouping:
              type: string
            subgrouping:
              type: string
            display_sort_order:
              type: integer
            default:
              type: boolean
            customer_editable:
              type: boolean
    CustomerAccountCategoryIndex:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountCategory'
        - properties:
            label_id:
              type: integer
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    Contract:
      type: object
      properties:
        parent_id:
          type: string
        contract_type:
          type: string
          enum:
            - tenancy_contract
            - lease_contract
        name:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        rental_period:
          type: string
        contract_sub_type:
          type: string
          enum:
            - empty
            - owner_occupation
            - rentable
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        minimum_contract_term:
          type: string
          format: date-time
        debtor_number:
          type: string
        notice_period:
          type: object
          properties:
            value:
              type: number
            period:
              type: string
              enum:
                - days
                - weeks
                - months
                - years
        cancelling_at_date:
          type: string
          format: date-time
        cancelled_at_date:
          type: string
          format: date-time
        rent_increase_type:
          type: string
          enum:
            - comparable_rent
            - index_based_increase
            - graduate_rent
        rent_increase_allowance:
          type: string
          format: date-time
        index_based_config:
          type: object
          properties:
            base_index_date:
              type: string
            base_index_points:
              type: integer
            threshhold_type:
              type: string
              enum:
                - percentage
                - points
            threshhold_value:
              type: integer
            increase_type:
              type: string
              enum:
                - percentage
                - value
            increase_value:
              type: integer
        graduate_rent_config:
          type: object
          properties:
            increase_period:
              type: string
              enum:
                - monthly
                - yearly
            amount_type:
              type: string
              enum:
                - percentage
                - value
            amount_value:
              type: integer
            increase_yearly_date:
              type: string
            increase_monthly_day:
              type: string
        status:
          type: string
          enum:
            - draft
            - final
            - rejected
        currency:
          type: string
          enum:
            - EUR
            - CHF
        notes:
          type: string
    Amount:
      type: object
      properties:
        name:
          type: string
        amount_per_month:
          type: object
          properties:
            value:
              type: number
            currency:
              type: string
              enum:
                - EUR
                - USD
    ContractAttributes:
      properties:
        person_memberships_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              person_id:
                type: string
              member_id:
                type: string
              member_type:
                type: string
              role:
                type: string
              _destroy:
                type: string
        memberships_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              member_id:
                type: string
              member_type:
                type: string
              _destroy:
                type: string
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    ContractShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Contract'
        - required:
            - type
            - status
            - user
            - last_editor
            - customer_account
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              type: object
              properties:
                notes:
                  type: string
            parent:
              $ref: '#/components/schemas/ContractIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            organisation:
              $ref: '#/components/schemas/Organisation'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
            rent_increase_mappings:
              type: array
              items:
                $ref: '#/components/schemas/RentIncreaseMappingShow'
    ContractCreate:
      allOf:
        - $ref: '#/components/schemas/Contract'
        - $ref: '#/components/schemas/ContractAttributes'
        - required:
            - type
            - status
          properties:
            organisation_id:
              type: integer
    ContractUpdate:
      allOf:
        - $ref: '#/components/schemas/Contract'
        - $ref: '#/components/schemas/ContractAttributes'
        - properties:
            organisation_id:
              type: integer
    ContractIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Contract'
        - properties:
            thumbnail_url:
              type: string
            organisation:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
    ContractMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - required:
            - id
            - contract
            - member
            - last_editor
          properties:
            contract:
              $ref: '#/components/schemas/Contract'
            member:
              type: object
            deleted_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ContractMembershipCreate:
      type: object
      required:
        - contract_id
        - member_id
        - member_type
      properties:
        contract_id:
          type: integer
        member_id:
          type: integer
        member_type:
          type: string
          enum:
            - building
            - building::unit
            - property
    ContractMembershipCost:
      type: object
      properties:
        amount:
          type: number
        description:
          type: string
        iban:
          type: string
        swift:
          type: string
        to_be_paid_at:
          type: string
        valid_from:
          type: string
          format: date-time
    ContractMembershipCostShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ContractMembershipCost'
        - required:
            - amount
          properties:
            unit_type:
              $ref: '#/components/schemas/BuildingUnitType'
            cost_type:
              $ref: '#/components/schemas/CostType'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ContractMembershipCostCreate:
      allOf:
        - $ref: '#/components/schemas/ContractMembershipCost'
        - properties:
            unit_type_id:
              type: number
            cost_type_id:
              type: number
    ContractAddition:
      type: object
      properties:
        name:
          type: string
        signing_date:
          type: string
          format: date-time
    ContractAdditionShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ContractAddition'
        - required:
            - name
          properties:
            contract:
              $ref: '#/components/schemas/Contract'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ContractAdditionCreate:
      allOf:
        - $ref: '#/components/schemas/ContractAddition'
        - required:
            - name
    ContractGrant:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        total_amount:
          type: number
        grant_type:
          type: string
          enum:
            - pre_opening
            - rent_free_time
            - other
        fee_split:
          type: array
          items:
            properties:
              percentage:
                type: number
              date_received:
                type: string
                format: date-time
    ContractGrantShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ContractGrant'
        - required:
            - name
          properties:
            contract_membership_id:
              type: integer
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ContractGrantCreate:
      allOf:
        - $ref: '#/components/schemas/ContractGrant'
        - required:
            - name
    SecurityDeposit:
      required: []
      type: object
      properties:
        amount:
          type: integer
        to_be_paid_before:
          type: string
          format: date-time
        payment_type:
          type: string
          enum:
            - one_time_payment
            - paid_in_three_monthly_fees
        deposit_type:
          type: string
          enum:
            - cash
            - bank_transaction
            - savings_account
            - surety
    SecurityDepositShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/SecurityDeposit'
        - required:
            - type
            - payment_type
            - user
            - last_editor
            - contract_membership
          properties:
            contract_membership_id:
              type: integer
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    SecurityDepositCreate:
      allOf:
        - $ref: '#/components/schemas/SecurityDeposit'
        - required:
            - type
            - payment_type
    CostType:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
    CostTypeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CostType'
        - required:
            - name
    CostTypeCreate:
      allOf:
        - $ref: '#/components/schemas/CostType'
        - required:
            - name
    CostTypeUpdate:
      allOf:
        - $ref: '#/components/schemas/CostType'
    PropertyType:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Property:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        zip_code:
          type: string
        city:
          type: string
        custom_id:
          type: string
        comment:
          type: string
        external_id:
          type: string
        source_system:
          type: string
    PropertiesAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    PropertyShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Property'
        - required:
            - name
            - property_type
            - property_manager
            - user
            - organisation
            - last_editor
            - lots
            - buildings
            - attachments
          properties:
            deleted_at:
              type: string
              format: date-time
            property_type:
              $ref: '#/components/schemas/PropertyType'
            property_manager:
              $ref: '#/components/schemas/PropertyManager'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            lots:
              type: array
              items:
                $ref: '#/components/schemas/LotIndex'
            buildings:
              type: array
              items:
                $ref: '#/components/schemas/BuildingIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    PropertyCreate:
      allOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/PropertiesAttributes'
        - required:
            - property_type_id
            - name
          properties:
            property_type_id:
              type: integer
            property_manager_id:
              type: integer
    PropertyUpdate:
      allOf:
        - $ref: '#/components/schemas/Property'
        - required:
            - property_type_id
            - name
          properties:
            property_type_id:
              type: integer
            property_manager_id:
              type: integer
        - $ref: '#/components/schemas/ActivitiesAttributes'
    PropertyIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/ActivitiesAttributes'
        - required:
            - name
            - property_type
          properties:
            deleted_at:
              type: string
              format: date-time
            property_manager_id:
              type: integer
            property_type:
              $ref: '#/components/schemas/PropertyType'
            thumbnail_url:
              type: string
    PropertyManager:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        contact_first_name:
          type: string
        contact_last_name:
          type: string
        street:
          type: string
        street_number:
          type: string
        city:
          type: string
        zip_code:
          type: string
        country:
          type: string
    PropertyManagerShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PropertyManager'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    PropertyManagerCreate:
      allOf:
        - $ref: '#/components/schemas/PropertyManager'
        - required:
            - name
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    PropertyManagerUpdate:
      allOf:
        - $ref: '#/components/schemas/PropertyManager'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    PropertyManagerIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PropertyManager'
        - required:
            - name
          properties:
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    Lot:
      type: object
      properties:
        custom_id:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        name:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        comment:
          type: string
    LotsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    LotShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Lot'
        - required:
            - name
            - property
            - user
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            buildings:
              type: array
              items:
                $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    LotCreate:
      allOf:
        - $ref: '#/components/schemas/Lot'
        - $ref: '#/components/schemas/LotsAttributes'
        - required:
            - property_id
            - name
          properties:
            property_id:
              type: integer
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            buildings:
              type: array
              items:
                $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
    LotUpdate:
      allOf:
        - $ref: '#/components/schemas/Lot'
        - $ref: '#/components/schemas/LotsAttributes'
    LotIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Lot'
        - $ref: '#/components/schemas/LotsAttributes'
        - required:
            - name
            - property
            - user
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            thumbnail_url:
              type: string
    BuildingFilterSettings:
      type: object
      properties:
        name:
          type: string
        status:
          type: boolean
        tags_active:
          type: boolean
        fields:
          type: array
          items:
            type: string
        property_fields:
          type: array
          items:
            type: string
        customer_attributes:
          type: array
          items:
            type: string
        unit_fields:
          type: array
          items:
            type: string
        tag_fields:
          type: array
          items:
            type: string
        building_categories:
          type: object
          properties:
            person_memberships:
              type: array
              items: {}
        unit_categories:
          type: array
          items:
            type: string
        unit_customer_attributes:
          type: array
          items:
            type: string
    BuildingFilterSettingFields:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        customer_attributes:
          type: array
          items:
            type: string
        unit_fields:
          type: array
          items:
            type: string
        tag_fields:
          type: array
          items:
            type: string
        building_categories:
          type: object
          properties:
            person_memberships:
              type: array
              items: {}
        unit_categories:
          type: array
          items:
            type: string
        unit_customer_attributes:
          type: array
          items:
            type: string
    BuildingFilterSettingsShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingFilterSettings'
        - required:
            - name
            - version
            - attributes_type
            - json_schema
    BuildingFilterSettingsCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingFilterSettings'
        - required:
            - name
            - version
            - attributes_type
            - json_schema
    BuildingSaveFilters:
      type: object
      properties:
        name:
          type: string
        filter:
          type: object
          properties:
            presets_standard_fields:
              properties:
                building:
                  type: object
                  properties:
                    name:
                      type: array
                      items: {}
                building_unit:
                  type: object
                  properties:
                    name:
                      type: array
                      items: {}
            presets_customer_attributes:
              properties:
                building:
                  type: object
                  properties:
                    name:
                      type: string
                building_unit:
                  type: object
                  properties:
                    name:
                      type: string
    BuildingSaveFiltersShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingSaveFilters'
        - required:
            - name
            - filter
            - last_editor
          properties:
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    BuildingSaveFiltersCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingSaveFilters'
        - required:
            - name
            - filter
    BuildingType:
      type: object
      required:
        - id
        - name
        - code
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        parent_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Building:
      type: object
      properties:
        name:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        comment:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        units_count:
          type: number
        year_of_construction:
          type: integer
        gross_floor_area_in_sqm_din_277:
          type: number
        net_floor_area_in_sqm_din_277:
          type: number
        auxiliary_floor_area_in_sqm:
          type: number
        gross_floor_area_in_sqm_sia_d_0165:
          type: number
        net_floor_area_in_sqm_sia_d_0165:
          type: number
        architect:
          type: string
        contract_ids:
          type: array
          items: {}
        organisation_id:
          type: number
        customer_attributes_schema_id:
          type: number
        planned_monthly_rent:
          type: number
        number_of_floors:
          type: number
        number_of_windows:
          type: number
        user_intervention_window_number:
          type: number
        user_intervention_window_area:
          type: number
        last_refurbishment_at:
          type: string
          format: date
        heating_type:
          type: string
        main_energy_provider:
          type: string
        deso_facility:
          type: boolean
        institution_type:
          type: array
          items:
            type: integer
        facility_type:
          type: array
          items:
            type: integer
        number_of_lifts:
          type: integer
        protective_area:
          type: boolean
        parking_garage:
          type: integer
        main_energy_source:
          type: integer
        stairwells:
          type: integer
        state_of_renovation:
          type: integer
        construction_project_category:
          type: integer
        heating_used_energy:
          type: array
          items:
            type: integer
        kitchen_type:
          type: integer
        objectphase:
          type: integer
        region:
          type: integer
        floors_above_ground:
          type: integer
        floors_below_ground:
          type: integer
        customer_attributes:
          type: object
        fund_name:
          type: string
        own_use:
          type: boolean
        listed_building:
          type: boolean
        house_number:
          type: string
        address_suffix:
          type: string
        energy_certificate_type:
          type: string
          enum:
            - consumption_orientated
            - demand_orientated
        energy_class:
          type: string
        stored_energy_validity:
          type: string
          format: date-time
        accounting_rules_applied:
          type: string
        year_of_construction_heat_generator:
          type: string
        air_conditioning:
          type: boolean
    BuildingsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    BuildingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - type: object
          required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
            - customer_attributes
            - customer_attributes_schema
          properties:
            deleted_at:
              type: string
              format: date-time
            building_type:
              $ref: '#/components/schemas/BuildingType'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            lot:
              $ref: '#/components/schemas/LotIndex'
            levels:
              type: array
              items:
                $ref: '#/components/schemas/LevelShow'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            facility_types:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            heating_used_energies:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            institution_types:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            roof_forms:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            objectphases:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            regions:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            kitchen_types:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            construction_project_categories:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            state_of_renovations:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            main_energy_sources:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
            customer_attributes_schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaShow'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    BuildingCreate:
      allOf:
        - $ref: '#/components/schemas/Building'
        - $ref: '#/components/schemas/BuildingsAttributes'
        - required:
            - building_type_id
            - parent_id
            - parent_type
            - name
            - customer_attributes
            - customer_attributes_schema_id
          properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - property
                - lot
            building_type_id:
              type: integer
            customer_attributes_schema_id:
              type: integer
            tag_ids:
              type: array
              items:
                type: integer
    BuildingUpdate:
      allOf:
        - $ref: '#/components/schemas/Building'
        - properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - property
                - lot
            organisation_id:
              type: integer
            building_type_id:
              type: integer
            customer_attributes_schema_id:
              type: integer
            tag_ids:
              type: array
              items:
                type: integer
        - $ref: '#/components/schemas/BuildingsAttributes'
    BuildingIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - $ref: '#/components/schemas/BuildingsAttributes'
        - required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
            building_type:
              $ref: '#/components/schemas/BuildingType'
            units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    BuildingShowWithFacilities:
      allOf:
        - $ref: '#/components/schemas/BuildingShow'
        - type: object
          properties:
            facilities_count:
              type: number
    BuildingPresets:
      type: object
      properties:
        presets_standard_fields:
          properties:
            building:
              type: object
              properties:
                name:
                  type: array
                  items: {}
            building_unit:
              type: object
              properties:
                name:
                  type: array
                  items: {}
        presets_customer_attributes:
          properties:
            building:
              type: object
              properties:
                name:
                  type: string
            building_unit:
              type: object
              properties:
                name:
                  type: string
        tags:
          properties:
            building:
              type: array
              items: {}
            building_unit:
              type: array
              items: {}
    BuildingIndexWithoutUnits:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
            building_type:
              $ref: '#/components/schemas/BuildingType'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            apps:
              type: array
              items:
                type: string
    BuildingForProperty:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            thumbnail_url:
              type: string
            building_type:
              $ref: '#/components/schemas/BuildingType'
            property:
              $ref: '#/components/schemas/PropertyIndex'
    BuildingUnitType:
      type: object
      required:
        - id
        - name
        - updated_at
        - created_at
      properties:
        id:
          type: integer
        customer_account_id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BuildingUnitTypeCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    BuildingUnit:
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        tenant:
          type: string
        owner:
          type: string
        building_id:
          type: number
        gross_floor_area_in_sqm_din_277:
          type: number
        net_floor_area_in_sqm_din_277:
          type: number
        auxiliary_floor_area_in_sqm:
          type: number
        social_floor_area_in_sqm:
          type: number
        market_rental_price:
          type: number
          format: float
        number_of_rooms:
          type: number
        number_of_bedrooms:
          type: number
        number_of_bathrooms:
          type: number
        quality_of_available_features:
          type: string
        current_condition:
          type: string
        description:
          type: string
        description_of_features:
          type: string
        features:
          type: array
          enum:
            - einbauküche
            - balkon/terrasse
            - garten
            - stufenloser_zugang
            - wg_geeignet
            - parkplatz_vorhanden
            - haustiere_erlaubt
            - aufzug
            - gäste_wc
            - keller
            - wohnberechtigungsschein
          items: {}
        gross_floor_area_in_sqm_sia_d_0165:
          type: number
        net_floor_area_in_sqm_sia_d_0165:
          type: number
        planned_monthly_rent:
          type: number
        planned_operating_cost:
          type: number
        planned_deposit:
          type: number
        planned_total_rent:
          type: number
        heating_costs_in_operating_costs:
          type: boolean
        contracted_lease_base_rent:
          type: string
        contracted_lease_operating_costs:
          type: string
        contracted_lease_deposit:
          type: string
        floor:
          type: integer
        group_home:
          type: integer
        customer_attributes:
          type: object
    BuildingUnitsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    BuildingUnitShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnit'
        - required:
            - name
            - building
            - type
            - user
            - last_editor
            - organisation
            - customer_attributes
            - customer_attributes_schema
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            building_unit_type:
              $ref: '#/components/schemas/BuildingUnitType'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
            levels:
              type: array
              items:
                $ref: '#/components/schemas/LevelIndex'
            rooms:
              type: array
              items:
                $ref: '#/components/schemas/RoomIndex'
            zones:
              type: array
              items:
                $ref: '#/components/schemas/ZoneIndex'
            facilites:
              type: array
              items:
                $ref: '#/components/schemas/FacilityIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            customer_attributes_schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaShow'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    BuildingUnitIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnit'
        - $ref: '#/components/schemas/BuildingUnitsAttributes'
        - properties:
            building_unit_type:
              $ref: '#/components/schemas/BuildingUnitType'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
            contract_ids:
              type: array
              example: []
              items: {}
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            deleted_at:
              type: string
              format: date-time
            thumbnail_url:
              type: string
    BuildingUnitCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnit'
        - $ref: '#/components/schemas/BuildingUnitsAttributes'
        - required:
            - name
            - building_id
            - customer_attributes
          properties:
            building_id:
              type: integer
            building_unit_type_id:
              type: integer
            tag_ids:
              type: array
              items:
                type: integer
    BuildingUnitUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnit'
        - properties:
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
            tag_ids:
              type: array
              items:
                type: integer
        - $ref: '#/components/schemas/BuildingUnitsAttributes'
    BuildingUnitMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - required:
            - id
            - unit
            - member
            - last_editor
          properties:
            unit:
              $ref: '#/components/schemas/BuildingUnit'
            member:
              type: object
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    BuildingUnitMembershipCreate:
      type: object
      required:
        - unit_id
        - member_id
        - member_type
      properties:
        unit_id:
          type: integer
        member_id:
          type: integer
        member_type:
          type: string
          enum:
            - level
            - room
            - zone
            - facility
    BuildingEnergy:
      type: object
      properties:
        energy_volume:
          type: integer
        co2_emission_volume:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingEnergyShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingEnergy'
        - required:
            - energy_type
            - building
            - energy_volume_metric
            - co2_emission_volume_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            energy_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            energy_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingEnergyCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingEnergy'
        - required:
            - energy_type_id
            - energy_volume_metric_id
            - co2_emission_volume_metric_id
          properties:
            energy_type_id:
              type: integer
            energy_volume_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
    BuildingEnergyUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingEnergy'
        - required:
            - energy_type_id
            - energy_volume_metric_id
            - co2_emission_volume_metric_id
          properties:
            energy_type_id:
              type: integer
            energy_volume_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
    BuildingEnergyIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingEnergy'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            energy_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            energy_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingsFinance:
      type: object
      properties:
        value:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingsFinanceShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingsFinance'
        - required:
            - finance_category
            - building
            - value_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            finance_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingsFinanceCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingsFinanceUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingsFinanceIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingsFinance'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            finance_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitsFinance:
      type: object
      properties:
        value:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingUnitsFinanceShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitsFinance'
        - required:
            - finance_category
            - building_unit
            - value_metric
          properties:
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            finance_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitsFinanceCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingUnitsFinanceUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingFm:
      type: object
      properties:
        value:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingFmShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingFm'
        - required:
            - activity_category
            - building
          properties:
            building:
              $ref: '#/components/schemas/Building'
            activity_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingFmCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingFm'
        - required:
            - activity_category_id
          properties:
            activity_category_id:
              type: integer
    BuildingFmUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingFm'
        - required:
            - activity_category_id
          properties:
            activity_category_id:
              type: integer
    BuildingFmIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingFm'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            activity_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitRetail:
      type: object
    BuildingUnitRetailShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - required:
            - shop_concept
            - building_unit
          properties:
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            shop_concept:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitRetailCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - required:
            - shop_concept_id
          properties:
            shop_concept_id:
              type: integer
    BuildingUnitRetailUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - required:
            - shop_concept_id
          properties:
            shop_concept_id:
              type: integer
    BuildingUnitRetailIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - properties:
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            shop_concept:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitRetailMetric:
      type: object
      properties:
        value:
          type: integer
    BuildingUnitRetailMetricShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - required:
            - building_unit_retail
            - category
            - value_metric
          properties:
            building_unit_retail:
              $ref: '#/components/schemas/BuildingUnitRetail'
            category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitRetailMetricCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - required:
            - category_id
            - value_metric_id
          properties:
            category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingUnitRetailMetricUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - required:
            - category_id
            - value_metric_id
          properties:
            category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingUnitRetailMetricIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - properties:
            building_unit_retail:
              $ref: '#/components/schemas/BuildingUnitRetail'
            category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    BuildingWaste:
      type: object
      properties:
        waste_amount:
          type: integer
        co2_emission_volume:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingWasteShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingWaste'
        - required:
            - waste_type
            - building
            - waste_amount_metric
            - co2_emission_volume_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            waste_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_amount_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_treatment_method:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingWasteCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingWaste'
        - required:
            - waste_type_id
            - waste_amount_metric_id
            - co2_emission_volume_metric_id
          properties:
            waste_type_id:
              type: integer
            waste_amount_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
            waste_treatment_method_id:
              type: integer
    BuildingWasteUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingWaste'
        - required:
            - waste_type_id
            - waste_amount_metric_id
            - co2_emission_volume_metric_id
          properties:
            waste_type_id:
              type: integer
            waste_amount_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
            waste_treatment_method_id:
              type: integer
    BuildingWasteIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingWaste'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            waste_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_amount_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_treatment_method:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingWater:
      type: object
      properties:
        water_volume:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingWaterShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingWater'
        - required:
            - water_category
            - building
            - water_volume_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            water_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            water_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingWaterCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingWater'
        - required:
            - water_category_id
            - water_volume_metric_id
          properties:
            water_category_id:
              type: integer
            water_volume_metric_id:
              type: integer
    BuildingWaterUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingWater'
        - required:
            - water_category_id
            - water_volume_metric_id
          properties:
            water_category_id:
              type: integer
            water_volume_metric_id:
              type: integer
    BuildingWaterIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingWater'
        - properties:
            building:
              $ref: '#/components/schemas/Building'
            water_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            water_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    AddtlBuildingId:
      type: object
      properties:
        addtl_id:
          type: string
    AddtlBuildingIdShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AddtlBuildingId'
        - required:
            - addtl_id_category
            - building
          properties:
            building:
              $ref: '#/components/schemas/Building'
            addtl_id_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    AddtlBuildingIdCreate:
      allOf:
        - $ref: '#/components/schemas/AddtlBuildingId'
        - required:
            - addtl_id_category_id
          properties:
            addtl_id_category_id:
              type: integer
    AddtlBuildingIdUpdate:
      allOf:
        - $ref: '#/components/schemas/AddtlBuildingId'
        - required:
            - addtl_id_category_id
          properties:
            addtl_id_category_id:
              type: integer
    AddtlBuildingIdIndex:
      allOf:
        - $ref: '#/components/schemas/AddtlBuildingId'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            addtl_id_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    Phase:
      type: object
      properties:
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - building
            - building::unit
        phase_is_milestone:
          type: boolean
        szenario:
          type: string
        version:
          type: integer
        plan_start_date:
          type: string
          format: date-time
        plan_end_date:
          type: string
          format: date-time
        plan_cost:
          type: integer
        actual_start_date:
          type: string
          format: date-time
        actual_end_date:
          type: string
          format: date-time
        actual_cost:
          type: integer
    PhaseShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Phase'
        - required:
            - phase_category
            - status
            - plan_cost_metric
            - actual_cost_metric
          properties:
            phase_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            status:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            plan_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            actual_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    PhaseCreate:
      allOf:
        - $ref: '#/components/schemas/Phase'
        - required:
            - status_id
            - plan_cost_metric_id
            - plan_cost_metric_id
            - actual_cost_metric_id
          properties:
            phase_category_id:
              type: integer
            status_id:
              type: integer
            plan_cost_metric_id:
              type: integer
            actual_cost_metric_id:
              type: integer
    PhaseUpdate:
      allOf:
        - $ref: '#/components/schemas/Phase'
        - required:
            - status_id
            - plan_cost_metric_id
            - plan_cost_metric_id
            - actual_cost_metric_id
          properties:
            phase_category_id:
              type: integer
            status_id:
              type: integer
            plan_cost_metric_id:
              type: integer
            actual_cost_metric_id:
              type: integer
    PhaseIndex:
      allOf:
        - $ref: '#/components/schemas/Phase'
        - properties:
            phase_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            status:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            plan_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            actual_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    RentTracker:
      type: object
      properties:
        version:
          type: integer
        planned_pay:
          type: integer
        planned_pay_date:
          type: string
          format: date-time
        actual_pay:
          type: integer
        actual_pay_date:
          type: string
          format: date-time
    RentTrackerShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentTracker'
        - required:
            - payment_category
            - pay_currency
          properties:
            payment_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            pay_currency:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            property:
              $ref: '#/components/schemas/Property'
            building:
              $ref: '#/components/schemas/Building'
            contract:
              $ref: '#/components/schemas/Contract'
            lessor:
              $ref: '#/components/schemas/Person'
            child_of:
              $ref: '#/components/schemas/RentTracker'
    RentTrackerCreate:
      allOf:
        - $ref: '#/components/schemas/RentTracker'
        - required:
            - payment_category_id
            - pay_currency_id
          properties:
            payment_category_id:
              type: integer
            pay_currency_id:
              type: integer
            building_unit_id:
              type: integer
            property_id:
              type: integer
            building_id:
              type: integer
            contract_id:
              type: integer
            lessor_id:
              type: integer
            child_of_id:
              type: integer
            lessee_ids:
              type: array
              items:
                type: integer
    RentTrackerIndex:
      allOf:
        - $ref: '#/components/schemas/RentTracker'
        - properties:
            payment_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            pay_currency:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    BuildingParking:
      type: object
      properties:
        places:
          type: integer
    BuildingParkingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingParking'
        - required:
            - parking_category
          properties:
            parking_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingParkingCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingParking'
        - required:
            - parking_category_id
          properties:
            parking_category_id:
              type: integer
    BuildingParkingUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingParking'
        - required:
            - parking_category_id
          properties:
            parking_category_id:
              type: integer
    BuildingParkingIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingParking'
        - properties:
            parking_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingArea:
      type: object
      properties:
        volume:
          type: integer
    BuildingAreaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingArea'
        - required:
            - area_type
            - area_metric
            - area_norm
          properties:
            area_type:
              $ref: '#/components/schemas/Building'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingAreaCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingAreaUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingAreaIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingArea'
        - properties:
            area_type:
              $ref: '#/components/schemas/Building'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitArea:
      type: object
      properties:
        volume:
          type: integer
    BuildingUnitAreaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitArea'
        - required:
            - area_type
            - area_metric
            - area_norm
          properties:
            area_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitAreaCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitAreaUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitAreaIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitArea'
        - properties:
            area_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitPlace:
      type: object
    BuildingUnitPlaceShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - required:
            - type_label
          properties:
            building:
              $ref: '#/components/schemas/Building'
            type_label:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitPlaceCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - required:
            - type_label_id
          properties:
            type_label_id:
              type: integer
    BuildingUnitPlaceUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - required:
            - type_label_id
          properties:
            type_label_id:
              type: integer
    BuildingUnitPlaceIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            type_label:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitPlacesTimeboxed:
      type: object
      properties:
        num_of_units:
          type: integer
        num_of_places:
          type: integer
        num_of_vacant_places:
          type: integer
        area:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingUnitPlacesTimeboxedShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - required:
            - building_unit_place
            - area_metric
            - area_norm
          properties:
            building_unit_place:
              $ref: '#/components/schemas/BuildingUnitPlace'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitPlacesTimeboxedCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - required:
            - area_metric_id
            - area_norm_id
          properties:
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitPlacesTimeboxedUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - required:
            - area_metric_id
            - area_norm_id
          properties:
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitPlacesTimeboxedIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - properties:
            building_unit_place:
              $ref: '#/components/schemas/BuildingUnitPlace'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    BuildingUnitPlacesProperty:
      type: object
    BuildingUnitPlacesPropertieshow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - required:
            - building_unit_places_timeboxed
            - property
            - property_value
          properties:
            building_unit_places_timeboxed:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
            property:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            property_value:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitPlacesPropertyCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - required:
            - property_id
            - property_value_id
          properties:
            property_id:
              type: integer
            property_value_id:
              type: integer
    BuildingUnitPlacesPropertyUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - required:
            - property_id
            - property_value_id
          properties:
            property_id:
              type: integer
            property_value_id:
              type: integer
    BuildingUnitPlacesPropertyIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - properties:
            building_unit_places_timeboxed:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
            property:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            property_value:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    Person:
      type: object
      properties:
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        company:
          type: string
        email:
          type: string
        phone:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
        country:
          type: string
        external_id:
          type: string
        source_system:
          type: string
    PeopleAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    PersonShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Person'
        - required:
            - name
            - user
            - organisation
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    PersonCreate:
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PeopleAttributes'
        - required:
            - name
    PersonUpdate:
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PeopleAttributes'
    PersonIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PeopleAttributes'
        - required:
            - name
            - user
            - organisation
    ReportTemplate:
      type: object
      properties:
        name:
          type: string
        query:
          properties:
            filters:
              type: array
              items:
                properties:
                  dimension:
                    type: string
                  operator:
                    type: string
                  values:
                    type: array
                    items: {}
            measures:
              type: array
              items: {}
            dimensions:
              type: array
              items: {}
            timeDimensions:
              type: array
              items: {}
    ReportTemplateShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ReportTemplate'
        - required:
            - name
            - query
    ReportTemplateCreate:
      allOf:
        - $ref: '#/components/schemas/ReportTemplate'
        - required:
            - name
            - query
    ReportAccountSchema:
      type: object
      properties:
        cubes:
          type: array
          items:
            properties:
              name:
                type: string
              measures:
                type: array
                items: {}
              dimensions:
                type: array
                items: {}
              filters:
                type: array
                items: {}
              timeDimensions:
                type: array
                items: {}
              segments:
                type: array
                items: {}
              limit:
                type: integer
              offset:
                type: integer
              order:
                type: string
                enum:
                  - asc
                  - desc
              timezone:
                type: string
              renewQuery:
                type: boolean
              ungrouped:
                type: boolean
    ReportAccountSchemaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ReportAccountSchema'
        - required:
            - cubes
    ReportAccountSchemaCreate:
      allOf:
        - $ref: '#/components/schemas/ReportAccountSchema'
        - required:
            - cubes
    PersonMembership:
      type: object
      properties:
        person_id:
          type: number
        label_id:
          type: number
        role:
          type: string
        member_type:
          type: string
        member_id:
          type: number
        deleted_at:
          type: string
          format: date-time
    PersonMembershipIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PersonMembership'
        - required:
            - user
            - organisation
    PersonMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          required:
            - id
            - person
            - member
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            label:
              $ref: '#/components/schemas/CustomerAccountCategory'
            person:
              $ref: '#/components/schemas/Person'
            member:
              type: object
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    PersonMembershipCreate:
      type: object
      required:
        - person_id
        - member_id
        - member_type
      properties:
        person_id:
          type: integer
        role:
          type: string
          enum:
            - lessee
            - lift_manager
            - building_owner
            - building_operator
            - investor
            - facility_manager
            - property_manager
            - asset_manager
            - lessor
            - contact
        label_id:
          type: integer
        member_id:
          type: integer
        member_type:
          type: string
          enum:
            - building
            - building::unit
            - facility
            - contract
    Level:
      type: object
      properties:
        custom_id:
          type: string
        name:
          type: string
        comment:
          type: string
        number:
          type: integer
        category:
          type: string
          enum:
            - flat_roof
            - saddleback_roof
            - hipped_roof
            - polygons_hipped_roof
            - crippled_hipped_roof
            - tent_roof
            - monopitch_roof
            - schedule_roof
            - mansard_roof
            - trailing_roof
            - only_roof
            - roof_with_different_roof_pitches
          description: >
            flat_roof: Flachdach

            saddleback_roof: Satteldach

            hipped_roof: Walmdach

            polygons_hipped_roof: Vielecken Walmdach

            crippled_hipped_roof: Krüppelwalmdach

            tent_roof: Zeltdach

            monopitch_roof: Pultdach

            schedule_roof: Scheddach

            mansard_roof: Mansardendach

            trailing_roof: Schleppdach

            only_roof: Nurdach

            roof_with_different_roof_pitches: Dach mit Verschiedenen
            Dachneigungen
    LevelsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: string
              source_system:
                type: string
              metadata:
                type: object
    LevelShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Level'
        - required:
            - name
            - number
            - building
            - user
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            building:
              $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            rooms:
              type: array
              items:
                $ref: '#/components/schemas/RoomIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            building_units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    LevelCreate:
      allOf:
        - $ref: '#/components/schemas/Level'
        - required:
            - building_id
            - name
            - number
          properties:
            building_id:
              type: integer
        - $ref: '#/components/schemas/LevelsAttributes'
    LevelUpdate:
      allOf:
        - $ref: '#/components/schemas/Level'
    LevelIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Level'
        - $ref: '#/components/schemas/LevelsAttributes'
        - properties:
            deleted_at:
              type: string
              format: date-time
            thumbnail_url:
              type: string
    RoomAndZoneType:
      type: object
      required:
        - id
        - name
        - code
        - level
        - net_floor_area_code
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        din_277_name:
          type: string
        example:
          type: string
        net_floor_area_code:
          type: string
        parent_id:
          type: integer
        depth:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/UserIndex'
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Room:
      type: object
      properties:
        custom_id:
          type: string
        name:
          type: string
        comment:
          type: string
        number:
          type: string
        area_in_sqm:
          type: number
        height_in_m:
          type: number
        perimeter_in_m:
          type: number
    RoomsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: string
              source_system:
                type: string
              metadata:
                type: object
    RoomShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Room'
        - required:
            - name
            - user
            - last_editor
            - organisation
            - level
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            level:
              $ref: '#/components/schemas/LevelIndex'
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
            zones:
              type: array
              items:
                $ref: '#/components/schemas/ZoneShow'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            building_units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    RoomCreate:
      allOf:
        - $ref: '#/components/schemas/Room'
        - required:
            - level_id
            - name
          properties:
            level_id:
              type: integer
            room_and_zone_type_id:
              type: integer
        - $ref: '#/components/schemas/RoomsAttributes'
    RoomUpdate:
      allOf:
        - $ref: '#/components/schemas/Room'
        - properties:
            room_and_zone_type_id:
              type: integer
    RoomIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Room'
        - $ref: '#/components/schemas/RoomsAttributes'
        - required:
            - name
          properties:
            deleted_at:
              type: string
              format: date-time
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
            level:
              $ref: '#/components/schemas/Level'
            thumbnail_url:
              type: string
    Zone:
      type: object
      properties:
        custom_id:
          type: string
        name:
          type: string
        comment:
          type: string
        area_in_sqm:
          type: number
    ZoneShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Zone'
        - required:
            - name
            - user
            - room_and_zone_type
            - last_editor
            - organisation
            - zone
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            room:
              $ref: '#/components/schemas/RoomIndex'
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            building_units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    ZoneCreate:
      allOf:
        - $ref: '#/components/schemas/Zone'
        - required:
            - room_id
            - room_and_zone_type_id
            - name
          properties:
            room_id:
              type: integer
            room_and_zone_type_id:
              type: integer
    ZoneUpdate:
      allOf:
        - $ref: '#/components/schemas/Zone'
        - properties:
            room_and_zone_type_id:
              type: integer
    ZoneIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Zone'
        - required:
            - room_and_zone_type_id
            - name
          properties:
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
    Department:
      type: object
      properties:
        name:
          type: string
    DepartmentShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Department'
        - required:
            - name
            - last_editor
          properties:
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    DepartmentCreate:
      allOf:
        - $ref: '#/components/schemas/Department'
        - required:
            - name
    DepartmentUpdate:
      allOf:
        - $ref: '#/components/schemas/Department'
    Manufacturer:
      type: object
      properties:
        name:
          type: string
    ManufacturerShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Manufacturer'
        - required:
            - name
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ManufacturerCreate:
      allOf:
        - $ref: '#/components/schemas/Manufacturer'
        - required:
            - name
    ManufacturerUpdate:
      allOf:
        - $ref: '#/components/schemas/Manufacturer'
    ModelType:
      type: object
      properties:
        name:
          type: string
    ModelTypeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ModelType'
        - required:
            - name
        - type: object
          required:
            - user
            - last_editor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ModelTypeCreate:
      allOf:
        - $ref: '#/components/schemas/ModelType'
        - required:
            - name
    ModelTypeUpdate:
      allOf:
        - $ref: '#/components/schemas/ModelType'
    FacilityType:
      type: object
      required:
        - id
        - code
        - group_1
        - version
      properties:
        id:
          type: integer
        code:
          type: string
        group_1:
          type: string
        group_2:
          type: string
        group_3:
          type: string
        description:
          type: string
        version:
          type: integer
        json_schema:
          type: object
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    FacilityTypeIndex:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        group_1:
          type: string
        group_2:
          type: string
        group_3:
          type: string
        description:
          type: string
        version:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    FacilityTypeWithSchema:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        group_1:
          type: string
        group_2:
          type: string
        group_3:
          type: string
        description:
          type: string
        version:
          type: integer
        json_schema:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Facility:
      type: object
      properties:
        name:
          type: string
        custom_id:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        ep_code:
          type: string
        comment:
          type: string
        inventory_number:
          type: string
        serial_number:
          type: string
        year_of_construction:
          type: integer
        last_inspection_at:
          type: string
          format: date-time
        last_maintenance_at:
          type: string
          format: date-time
        next_inspection_at:
          type: string
          format: date-time
        next_maintenance_at:
          type: string
          format: date-time
        latitude:
          type: number
        longitude:
          type: number
        type_dependent_attributes:
          type: object
        equipment_collection:
          type: boolean
        quantity:
          type: number
        facility_parent:
          type: string
    FacilitiesAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    FacilityShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Facility'
        - required:
            - name
            - facility_type
            - user
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            parent:
              $ref: '#/components/schemas/FacilityIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            lot:
              $ref: '#/components/schemas/LotIndex'
            building:
              $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            level:
              $ref: '#/components/schemas/LevelIndex'
            room:
              $ref: '#/components/schemas/RoomIndex'
            zone:
              $ref: '#/components/schemas/ZoneIndex'
            manufacturer:
              $ref: '#/components/schemas/Manufacturer'
            model_type:
              $ref: '#/components/schemas/ModelTypeShow'
            facility_type:
              $ref: '#/components/schemas/FacilityType'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/ActivityForFacility'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    FacilityCreate:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/FacilitiesAttributes'
        - required:
            - facility_type_id
            - location_id
            - location_type
          properties:
            facility_type_id:
              type: integer
            model_type_id:
              type: integer
            location_id:
              type: integer
            location_type:
              type: string
              enum:
                - property
                - lot
                - building
                - level
                - room
                - zone
            manufacturer_id:
              type: integer
            parent_id:
              type: integer
    FacilityUpdate:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - properties:
            facility_type_id:
              type: integer
            model_type_id:
              type: integer
            manufacturer_id:
              type: integer
            parent_id:
              type: integer
        - $ref: '#/components/schemas/FacilitiesAttributes'
    FacilityIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/FacilitiesAttributes'
        - properties:
            facility_type:
              $ref: '#/components/schemas/FacilityType'
            model_type:
              $ref: '#/components/schemas/ModelTypeShow'
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
    Activity:
      type: object
      properties:
        category:
          type: string
          enum:
            - inspection
            - maintenance
            - disturbance
            - overhaul
            - other
          description: |
            inspection: Prüfung
            maintenance: Wartung
            disturbance: Störung
            overhaul: Instandsetzung
            other: Andere
        description:
          type: string
        company:
          type: string
        external_id:
          type: string
        conducted_at:
          type: string
          format: date
        labor_cost_in_cents:
          type: integer
        material_cost_in_cents:
          type: integer
    ActivitiesAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    ActivityShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Activity'
        - required:
            - deleted_at
            - facility
            - user
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            activity_type:
              $ref: '#/components/schemas/ActivityType'
            facility:
              $ref: '#/components/schemas/FacilityIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    ActivityCreate:
      allOf:
        - $ref: '#/components/schemas/Activity'
        - required:
            - category
            - company
            - facility_ids
            - property_id
          properties:
            activity_type_id:
              type: integer
            facility_ids:
              type: array
              items:
                type: integer
            property_id:
              type: integer
        - $ref: '#/components/schemas/ActivitiesAttributes'
    ActivityUpdate:
      allOf:
        - required:
            - category
            - company
          properties:
            category:
              type: string
              enum:
                - inspection
                - maintenance
                - disturbance
                - overhaul
                - other
              description: |
                inspection: Prüfung
                maintenance: Wartung
                disturbance: Störung
                overhaul: Instandsetzung
                other: Andere
            description:
              type: string
            company:
              type: string
            conducted_at:
              type: string
              format: date
            labor_cost_in_cents:
              type: integer
            material_cost_in_cents:
              type: integer
            activity_type_id:
              type: integer
    ActivityIndex:
      allOf:
        - $ref: '#/components/schemas/Activity'
        - $ref: '#/components/schemas/ActivitiesAttributes'
        - properties:
            deleted_at:
              type: string
              format: date-time
            activity_type:
              $ref: '#/components/schemas/ActivityType'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/Organisation'
            facility:
              $ref: '#/components/schemas/Facility'
            attachments:
              $ref: '#/components/schemas/Attachment'
    ActivityForFacility:
      allOf:
        - $ref: '#/components/schemas/Activity'
        - properties:
            deleted_at:
              type: string
              format: date-time
            activity_type:
              type: array
              items:
                $ref: '#/components/schemas/ActivityType'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
    ActivityType:
      type: object
      properties:
        name:
          type: string
    ActivityTypeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ActivityType'
        - required:
            - deleted_at
            - user
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    ActivityTypeCreate:
      allOf:
        - $ref: '#/components/schemas/ActivityType'
        - required:
            - name
    ActivityTypeIndex:
      allOf:
        - $ref: '#/components/schemas/ActivityType'
        - properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    Attachment:
      type: object
      properties:
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - taskmembership
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - activity
            - contract
            - contract::addition
            - planversion
            - app
        name:
          type: string
        description:
          type: string
        url:
          type: string
        file_filename_with_extension:
          type: string
        category:
          type: string
          enum:
            - app
            - plan
            - plan_version
            - nda
            - agb
            - energy_pass
            - inspection_report
            - building_permit
            - certificate
            - contract
            - contract_addition
            - bill
            - other
          description: |
            plan: Bauplan
            energy_pass: Energieausweis
            inspection_report: Wartungsbericht
            building_permit: Baugenehmigung
            certificate: Zertifikat
            bill: Rechnung
            other: Andere
    AttachmentShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Attachment'
        - required:
            - parent_id
            - parent_type
            - category
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
    AttachmentCreate:
      type: object
      required:
        - parent_type
        - parent_id
        - file_base64
        - file_filename_with_extension
        - category
      properties:
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - taskmembership
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - activity
            - contract
            - contract::addition
            - planversion
            - app
        name:
          type: string
        description:
          type: string
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
        category:
          type: string
          enum:
            - app
            - plan
            - plan_version
            - nda
            - agb
            - energy_pass
            - inspection_report
            - building_permit
            - certificate
            - contract
            - contract_addition
            - bill
            - other
          description: |
            plan: Bauplan
            energy_pass: Energieausweis
            inspection_report: Wartungsbericht
            building_permit: Baugenehmigung
            certificate: Zertifikat
            bill: Rechnung
            other: Andere
    AttachmentDuplicate:
      type: object
      required:
        - copy_attachment_id
      properties:
        copy_attachment_id:
          type: integer
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - taskmembership
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - activity
            - contract
            - contract::addition
            - planversion
            - app
    AttachmentIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            url:
              type: string
            file_filename_with_extension:
              type: string
            category:
              type: string
              enum:
                - app
                - plan
                - plan_version
                - nda
                - agb
                - energy_pass
                - inspection_report
                - building_permit
                - certificate
                - contract
                - contract_addition
                - bill
                - other
              description: |
                plan: Bauplan
                energy_pass: Energieausweis
                inspection_report: Wartungsbericht
                building_permit: Baugenehmigung
                certificate: Zertifikat
                bill: Rechnung
                other: Andere
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    Image:
      type: object
      properties:
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - user
            - contract
            - contract::addition
            - app
        name:
          type: string
        description:
          type: string
        url:
          type: string
        thumbnail_url:
          type: string
        file_filename_with_extension:
          type: string
        cover:
          type: boolean
    ImageShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Image'
        - required:
            - parent_id
            - parent_type
            - category
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
    ImageCreate:
      type: object
      required:
        - parent_type
        - parent_id
        - file_base64
        - file_filename_with_extension
        - category
      properties:
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - user
            - contract
            - contract::addition
            - app
        name:
          type: string
        description:
          type: string
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
        cover:
          type: boolean
    ImageUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
        cover:
          type: boolean
    ImageIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            url:
              type: string
            thumbnail_url:
              type: string
            file_filename_with_extension:
              type: string
            cover:
              type: boolean
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    TimeDependentAttribute:
      required:
        - attribute_key
        - attribute_value
        - attribute_timestamp
        - parent_id
        - parent_type
      type: object
      properties:
        parent_id:
          type: integer
        customer_account_id:
          type: integer
        parent_type:
          type: string
          enum:
            - Building
            - Building::Unit
        attribute_key:
          type: string
        attribute_value:
          type: string
        attribute_type:
          type: string
          enum:
            - individual
            - global
        attribute_timestamp:
          type: string
          format: date-time
    TimeDependentAttributeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TimeDependentAttribute'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    TimeDependentAttributeCreate:
      allOf:
        - $ref: '#/components/schemas/TimeDependentAttribute'
    TimeDependentAttributeUpdate:
      allOf:
        - $ref: '#/components/schemas/TimeDependentAttribute'
    TimeDependentAttributeIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TimeDependentAttribute'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    Webhook:
      type: object
      properties:
        url:
          type: string
        description:
          type: string
        mode:
          type: number
        events:
          type: array
          items: {}
        secret:
          type: string
        organisation_ids:
          type: array
          items: {}
    WebhookShow:
      allOf:
        - $ref: '#/components/schemas/Webhook'
        - required:
            - url
            - description
            - mode
            - events
            - secret
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account:
              $ref: '#/components/schemas/UserIndex'
            organisation_ids:
              type: array
              items:
                $ref: '#/components/schemas/Organisation'
    WebhookCreate:
      allOf:
        - $ref: '#/components/schemas/Webhook'
        - required:
            - url
            - description
            - mode
            - events
            - secret
    WebhookUpdate:
      allOf:
        - $ref: '#/components/schemas/Webhook'
    WebhookIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Webhook'
        - required:
            - customer_account_id
    Tag:
      type: object
      properties:
        label:
          type: string
    TagShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Tag'
        - required:
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            count:
              type: integer
    TagCreate:
      allOf:
        - $ref: '#/components/schemas/Tag'
        - required:
            - label
    TagsMergeBody:
      properties:
        master_tag:
          type: integer
        other_tags:
          type: array
          items: {}
    TagUpdate:
      allOf:
        - $ref: '#/components/schemas/Tag'
        - required:
            - label
    TagIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            label:
              type: string
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            count:
              type: integer
    TagAssignBuildings:
      allOf:
        - required:
            - building_ids
            - tag_ids
          properties:
            building_ids:
              type: array
              items:
                type: integer
            tag_ids:
              type: array
              items:
                type: integer
    CsvImport:
      type: object
      properties:
        location_type:
          type: string
        is_demo:
          type: boolean
        number_of_imported_records:
          type: integer
        metadata:
          type: object
    CsvImportShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CsvImport'
        - required:
            - organisation
            - customer_account
          properties:
            metadata:
              type: object
            organisation:
              $ref: '#/components/schemas/Organisation'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            url:
              type: string
            file_filename_with_extension:
              type: string
    CsvImportShowCreate:
      required:
        - import_data
        - general_status
        - invalid_columns
      properties:
        import_data:
          $ref: '#/components/schemas/CsvImportShow'
        metadata:
          type: object
        general_status:
          type: string
        invalid_columns:
          type: array
          items:
            properties:
              row_number:
                type: integer
              failed_rows:
                type: object
    CsvImportCreate:
      type: object
      required:
        - location_type
        - file_base64
        - file_filename_with_extension
      properties:
        location_type:
          type: string
          enum:
            - properties
            - lots
            - buildings
            - building_units
            - levels
            - rooms
            - facilities
            - contracts
        is_demo:
          type: boolean
        metadata:
          type: object
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
    CsvImportIndex:
      allOf:
        - $ref: '#/components/schemas/CsvImportShow'
        - properties:
            organisation:
              $ref: '#/components/schemas/Organisation'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            url:
              type: string
            file_filename_with_extension:
              type: string
    CsvImportUpdate:
      allOf:
        - required:
            - category
            - company
          properties:
            status:
              type: string
              enum:
                - canceled
                - draft
                - partially_imported
                - imported
              description: |
                imported
                canceled
                partially_imported
    Scorecard:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - draft
            - final
    ScorecardShow:
      allOf:
        - $ref: '#/components/schemas/Scorecard'
        - required:
            - buildings_applied
            - assigners
          properties:
            active:
              type: boolean
            buildings_applied:
              type: array
              items: {}
            customer_account_id:
              type: integer
            assigners:
              type: array
              items: {}
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            segments:
              $ref: '#/components/schemas/ScorecardSegment'
            global:
              type: boolean
    ScorecardCreate:
      allOf:
        - $ref: '#/components/schemas/Scorecard'
        - required:
            - name
            - status
          properties:
            global:
              type: boolean
    ScorecardUpdate:
      allOf:
        - $ref: '#/components/schemas/Scorecard'
    ScorecardIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Scorecard'
        - required:
            - buildings_applied
            - assigners
            - segments
            - active
          properties:
            active:
              type: boolean
            buildings_applied:
              type: array
              items: {}
            assigners:
              type: array
              items: {}
            segments:
              $ref: '#/components/schemas/ScorecardSegment'
            customer_account_id:
              type: integer
            global:
              type: boolean
    ScorecardSegment:
      type: object
      properties:
        name:
          type: string
        weight_type:
          type: string
        position:
          type: integer
    ScorecardSegmentShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardSegment'
        - required:
            - name
            - weight_type
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardSegmentCreate:
      allOf:
        - $ref: '#/components/schemas/ScorecardSegment'
        - required:
            - scorecard_id
          properties:
            scorecard_id:
              type: number
    ScorecardSegmentUpdate:
      allOf:
        - $ref: '#/components/schemas/ScorecardSegment'
    ScorecardTopic:
      type: object
      properties:
        name:
          type: string
        weight_type:
          type: string
        weight_value:
          type: integer
        position:
          type: integer
    ScorecardTopicShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardTopic'
        - required:
            - name
            - weight_type
            - weight_value
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardTopicCreate:
      allOf:
        - $ref: '#/components/schemas/ScorecardTopic'
        - required:
            - scorecard_segment_id
          properties:
            scorecard_segment_id:
              type: number
    ScorecardTopicUpdate:
      allOf:
        - $ref: '#/components/schemas/ScorecardTopic'
    ScorecardSubtopic:
      type: object
      properties:
        name:
          type: string
        weight_value:
          type: integer
        scorecard_scores:
          type: array
          items:
            type: object
            properties:
              score:
                type: integer
              range_type:
                type: string
                enum:
                  - in_range
                  - eq
                  - lt
                  - lte
                  - gt
                  - gte
              attribute_value:
                type: string
                example: Can be of a type string, date, or array with two elements!
        attribute_type:
          type: string
        attribute_id:
          type: string
        position:
          type: integer
    ScorecardSubtopicShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardSubtopic'
        - required:
            - name
            - weight_type
            - weight_value
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardSubtopicCreate:
      allOf:
        - $ref: '#/components/schemas/ScorecardSubtopic'
        - required:
            - scorecard_topic_id
          properties:
            scorecard_topic_id:
              type: number
    ScorecardSubtopicUpdate:
      allOf:
        - $ref: '#/components/schemas/ScorecardSubtopic'
    ScorecardMembership:
      type: object
      properties:
        scorecard_id:
          type: number
        parent_type:
          type: string
          enum:
            - building
            - building_unit
            - facility
        parent_id:
          type: number
    SegmentScore:
      type: object
      properties:
        score:
          type: number
        topic_scores:
          type: array
          items:
            $ref: '#/components/schemas/TopicScore'
        segment:
          $ref: '#/components/schemas/ScorecardSegmentShow'
    TopicScore:
      type: object
      properties:
        unweighted_score:
          type: number
        weighted_score:
          type: number
        subtopic_scores:
          type: array
          items:
            $ref: '#/components/schemas/SubtopicScore'
        topic:
          $ref: '#/components/schemas/ScorecardTopicShow'
    SubtopicScore:
      type: object
      properties:
        unweighted_score:
          type: number
        weighted_score:
          type: number
        attribute_values:
          type: object
          example: '{ value: 123, type: numeric }'
        status:
          type: string
          enum:
            - pending
            - calculated
            - error
        subtopic:
          $ref: '#/components/schemas/ScorecardSubtopicShow'
    ScorecardMembershipCost:
      type: object
      properties:
        parent_id:
          type: number
        parent_type:
          type: string
        scorecard_id:
          type: number
        scorecard_name:
          type: string
        segment_id:
          type: number
        segment_name:
          type: string
        topic_id:
          type: number
        topic_name:
          type: string
        subtopic_id:
          type: number
        subtopic_name:
          type: string
        data_catalog_id:
          type: number
        technical_key:
          type: string
        name:
          type: string
        realcube_price:
          type: integer
      allOf:
        - required:
            - parent_ids
            - scorecard_ids
          properties:
            parent_ids:
              type: array
              items:
                type: integer
            scorecard_ids:
              type: array
              items:
                type: integer
    ScorecardMembershipsIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ScorecardMembership'
        - required:
            - segment_scores
            - scorecard_id
            - parent_type
          properties:
            status:
              type: string
              enum:
                - pending
                - calculated
                - error
            error_messages:
              type: array
              items:
                type: string
            scorecard:
              $ref: '#/components/schemas/Scorecard'
            segment_scores:
              type: array
              items:
                $ref: '#/components/schemas/SegmentScore'
            parent:
              $ref: '#/components/schemas/BuildingShow'
            dirty_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardMembershipsCosts:
      allOf:
        - properties:
            id:
              type: integer
        - $ref: '#/components/schemas/ScorecardMembershipCost'
    ScorecardMembershipsShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardMembership'
        - required:
            - scorecard_id
            - parent_id
          properties:
            scorecard:
              $ref: '#/components/schemas/Scorecard'
            parent:
              $ref: '#/components/schemas/BuildingShow'
            segment_scores:
              type: array
              items:
                $ref: '#/components/schemas/SegmentScore'
            dirty_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            status:
              type: string
              enum:
                - pending
                - calculated
                - error
            error_messages:
              type: array
              items:
                type: string
    ScorecardMembershipDeAssign:
      allOf:
        - required:
            - scorecard_id
            - parent_type
            - parent_ids
          properties:
            parent_ids:
              type: array
              items:
                type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            scorecard_id:
              type: number
    ScorecardMembershipCreate:
      allOf:
        - required:
            - scorecard_id
            - parent_type
            - parent_ids
          properties:
            parent_ids:
              type: array
              items:
                type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            scorecard_id:
              type: number
            attribute_values:
              type: object
              example: >-
                This is only used for manual entries ex: {'id_of_the_building':
                {'id_of_the_subtopic': 'value'}}
    RefreshByScorecard:
      allOf:
        - required:
            - scorecard_id
            - parent_id
            - parent_type
            - attribute_values
          properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            scorecard_ids:
              type: array
              items:
                type: integer
            attribute_values:
              type: object
              example: >-
                This is only used for manual entries ex: {'id_of_the_building':
                {'id_of_the_subtopic': 'value'}}
    RefreshByParent:
      allOf:
        - required:
            - parent_id
            - parent_type
            - attribute_values
          properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            attribute_values:
              type: object
              example: >-
                This is only used for manual entries ex: {'id_of_the_building':
                {'id_of_the_subtopic': 'value'}}
    ScorecardMembershipCostResponse:
      allOf:
        - required:
            - name
            - realcube_price
            - parent_id
            - parent_type
            - scorecard_id
            - scorecard_name
            - segment_id
            - segment_name
            - topic_id
            - topic_name
            - subtopic_id
            - subtopic_name
            - data_catalog_id
            - technical_key
          properties:
            name:
              type: string
            realcube_price:
              type: integer
            parent_type:
              type: string
            parent_id:
              type: integer
            scorecard_id:
              type: integer
            scorecard_name:
              type: string
            segment_id:
              type: integer
            segment_name:
              type: string
            topic_id:
              type: integer
            topic_name:
              type: string
    CountBuildingsResponse:
      allOf:
        - required:
            - scorecard_id
            - nr_of_buildings
          properties:
            scorecard_id:
              type: integer
            nr_of_buildings:
              type: integer
    ScorecardMembershipUpdate:
      allOf:
        - $ref: '#/components/schemas/ScorecardMembership'
    ScorecardAssigner:
      type: object
    ScorecardAssignersIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ScorecardAssigner'
        - required:
            - assigner
            - scorecard
          properties:
            scorecard:
              $ref: '#/components/schemas/ScorecardShow'
            assigner:
              $ref: '#/components/schemas/User'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ScorecardAssignersShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardAssigner'
        - required:
            - assigner
            - scorecard
          properties:
            scorecard:
              $ref: '#/components/schemas/Scorecard'
            assigner:
              $ref: '#/components/schemas/User'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ScorecardAssignerCreate:
      allOf:
        - required:
            - assigner_id
            - scorecard_id
          properties:
            assigner_ids:
              type: array
              items:
                type: integer
            scorecard_id:
              type: number
    DataCatalog:
      type: object
      properties:
        technical_key:
          type: string
        name:
          type: string
        sku:
          type: string
        source:
          type: string
        description:
          type: string
        country:
          type: string
        locale:
          type: string
        quality_indicator:
          type: string
          enum:
            - fact
            - predicted
            - estimated
        category_l1:
          type: string
        category_l2:
          type: string
        category_l3:
          type: string
        category_l4:
          type: string
        category_l5:
          type: string
        realcube_price:
          type: integer
        realcube_currency:
          type: string
        realcube_price_category:
          type: string
        data_lifetime:
          type: integer
        attribute_type:
          type: string
          enum:
            - numeric
            - fixed
            - boolean
            - date
            - string
        unit:
          type: string
    data_catalogsShow:
      allOf:
        - $ref: '#/components/schemas/DataCatalog'
        - required:
            - app_id
            - source
            - country
            - locale
            - quality_indicator
            - category_l1
            - realcube_price
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app:
              $ref: '#/components/schemas/App'
    DataCatalogCreate:
      allOf:
        - $ref: '#/components/schemas/DataCatalog'
        - required:
            - technical_key
            - app_id
            - source
            - country
            - locale
            - quality_indicator
            - category_l1
            - realcube_price
          properties:
            app_id:
              type: integer
    DataCatalogUpdate:
      allOf:
        - $ref: '#/components/schemas/DataCatalog'
    DataCatalogIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/DataCatalog'
        - required:
            - app_id
          properties:
            user_id:
              type: integer
            last_editor_id:
              type: integer
            app_id:
              type: integer
    RawDataCatalog:
      type: object
      properties:
        version:
          type: integer
        status:
          type: string
          enum:
            - applied
            - new
        raw_data:
          type: object
    RawDataCatalogsShow:
      allOf:
        - $ref: '#/components/schemas/RawDataCatalog'
        - required:
            - app_id
            - version
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            app:
              $ref: '#/components/schemas/App'
    RawDataCatalogIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RawDataCatalog'
        - required:
            - app_id
            - version
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            app:
              $ref: '#/components/schemas/App'
    RentIncreaseType:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        category:
          type: integer
    RentIncreaseTypeIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentIncreaseType'
        - properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            rent_increase_type:
              $ref: '#/components/schemas/RentIncreaseType'
    RentIncreaseIndices:
      type: object
      properties:
        value:
          type: integer
        date:
          type: string
          format: date
        rent_increase_type_id:
          type: string
        subtype:
          type: string
          enum:
            - residential
            - office
            - commercial
    RentIncreaseIndicesIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentIncreaseIndices'
        - properties:
            deleted_at:
              type: string
              format: date-time
            rent_increase_type:
              $ref: '#/components/schemas/RentIncreaseType'
    RentIncreaseMapping:
      type: object
      properties:
        values:
          type: object
        apply_automatically:
          type: boolean
        contract_id:
          type: integer
        rent_increase_type_id:
          type: integer
        user_id:
          type: integer
        last_editor_id:
          type: integer
    RentIncreaseMappingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentIncreaseMapping'
        - required:
            - rent_increase_type
          properties:
            rent_increase_type:
              type: object
    RentIncreaseMappingIndex:
      allOf:
        - $ref: '#/components/schemas/RentIncreaseMapping'
        - properties:
            rent_increase_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    TaskMembership:
      type: object
      properties:
        task_id:
          type: integer
        place_id:
          type: integer
        organisation_id:
          type: integer
        place_type:
          type: string
          enum:
            - Building
            - Building::Unit
    TaskMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TaskMembership'
        - properties:
            organisation_id:
              type: integer
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    TaskMembershipIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TaskMembershipShow'
        - properties:
            organisation_id:
              type: integer
            place_name:
              type: string
            place_parent_id:
              type: integer
    RentIncrease:
      type: object
      properties:
        start_date:
          type: string
          format: date-time
        value:
          type: integer
        recurring_increase_year:
          type: integer
        recurring_increase_month:
          type: integer
        recurring:
          type: boolean
        status:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        adjustment_percentage:
          type: number
        max_increase_percentage:
          type: number
        threshold:
          type: number
        adjustment_fixed_value:
          type: number
        step_two_enabled:
          type: boolean
        step_three_enabled:
          type: boolean
        old_vpi_month:
          type: string
          format: date
        new_vpi_month:
          type: string
          format: date
        building_type:
          type: string
          enum:
            - residential
            - office
            - commercial
        automatic_adjustment:
          type: boolean
        max_number_of_adjustments:
          type: number
    RentIncreaseShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            start_date:
              type: string
              format: date-time
            value:
              type: integer
            recurring_increase_year:
              type: integer
            recurring_increase_month:
              type: integer
            recurring:
              type: boolean
            status:
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
            adjustment_percentage:
              type: number
            max_increase_percentage:
              type: number
            threshold:
              type: number
            adjustment_fixed_value:
              type: number
            step_two_enabled:
              type: boolean
            step_three_enabled:
              type: boolean
            old_vpi_month:
              type: string
              format: date
            new_vpi_month:
              type: string
              format: date
            building_type:
              type: string
              enum:
                - residential
                - office
                - commercial
            automatic_adjustment:
              type: boolean
            next_adjustment_date:
              type: string
              format: date-time
            number_of_confirmed_adjustments:
              type: number
            max_number_of_adjustments:
              type: number
            rent_increase_type:
              $ref: '#/components/schemas/RentIncreaseType'
            customer_account:
              type: object
            contract_membership:
              type: object
              properties:
                id:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                member_type:
                  type: string
                member_id:
                  type: string
                member_name:
                  type: string
                parent_id:
                  type: string
                parent_name:
                  type: string
                contract:
                  type: object
                costs:
                  type: array
                  items:
                    type: object
    RentIncreaseIndex:
      allOf:
        - required:
            - id
            - created_at
          properties:
            id:
              type: integer
            created_at:
              type: string
              format: date-time
            contract_membership_id:
              type: integer
            start_date:
              type: string
              format: date-time
            value:
              type: integer
            status:
              type: string
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
            recurring:
              type: boolean
            recurring_increase_month:
              type: integer
            recurring_increase_year:
              type: integer
            customer_account_id:
              type: integer
            contract_membership_member_type:
              type: string
            contract_membership_member_id:
              type: integer
            contract_membership_member_name:
              type: string
            person_name:
              type: string
            contract_start_date:
              type: string
              format: date-time
            contract_membership_cost_amount:
              type: integer
            rent_increase_type_category:
              type: string
            rent_increase_type_name:
              type: string
            rent_increase_type_id:
              type: integer
            old_vpi_month:
              type: string
              format: date
            new_vpi_month:
              type: string
              format: date
            automatic_adjustment:
              type: boolean
            adjustment_percentage:
              type: number
            max_increase_percentage:
              type: number
            threshold:
              type: number
            adjustment_fixed_value:
              type: number
            next_adjustment_date:
              type: string
              format: date-time
            building_type:
              type: string
              enum:
                - residential
                - office
                - commercial
            number_of_confirmed_adjustments:
              type: number
            max_number_of_adjustments:
              type: number
    RentIncreaseCreate:
      allOf:
        - $ref: '#/components/schemas/RentIncrease'
        - properties:
            rent_increase_type_id:
              type: integer
            contract_membership_id:
              type: integer
    EmissionFactorSetting:
      type: object
      properties:
        value:
          type: number
    EmissionFactorSettingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/EmissionFactorSetting'
        - type: object
          required:
            - value
            - label
            - customer_account
          properties:
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            label:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    EmissionFactorSettingCreate:
      allOf:
        - $ref: '#/components/schemas/EmissionFactorSetting'
        - required:
            - value
            - customer_account_id
            - label_id
          properties:
            label_id:
              type: integer
    EmissionFactorSettingUpdate:
      allOf:
        - type: array
          items:
            type: object
            properties:
              label_id:
                type: number
              value:
                type: number
    CustomerAccountCategoryConfig:
      type: object
      properties:
        display:
          type: boolean
    CustomerAccountCategoryConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountCategoryConfig'
        - required:
            - label_id
            - customer_account_translations
          properties:
            customer_account_category:
              $ref: '#/components/schemas/CustomerAccountCategory'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountCategoryConfigCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountCategoryConfig'
        - properties:
            customer_account_category_id:
              type: integer
    CustomerAccountCategoryConfigUpdate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountCategoryConfig'
    SignInError:
      properties:
        source:
          type: string
          example: password
        title:
          type: string
          example: Invalid email password combination
    AuthenticationError:
      properties:
        source:
          type: string
          example: X-Api-Key
        title:
          type: string
          example: Invalid or missing api key
    AuthorizationError:
      properties:
        source:
          type: string
          example: X-Api-Key
        title:
          type: string
          example: Invalid or missing authorization
    UnprocessableRequestError:
      properties:
        source:
          type: string
          example: record
        title:
          type: string
          example: could not be deleted
    NotFoundError:
      properties:
        source:
          type: string
          example: id
        title:
          type: string
          example: Couldn't find Resource with 'id'=12
    InternalServerError:
      properties:
        source:
          type: string
          example: application
        title:
          type: string
          example: We're sorry, but something went wrong
    ServiceUnavailableError:
      properties:
        source:
          type: string
          example: application
        title:
          type: string
          example: Service Temporarily Unavailable
    PersistedRecord:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - updated_at
        - created_at
