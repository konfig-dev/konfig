openapi: 3.1.0
info:
  title: Jiko Partner API
  description: >
    # Introduction


    Welcome to the Jiko API Reference! Jiko enables you to integrate money
    storage and movement, backed by the safety and security of US Treasury
    Bills.


    </br>


    At the core of our platform is the Jiko account: a pair consisting of a bank
    account and a brokerage account. When money is deposited into an account,
    the funds are automatically invested in T-bills. When a payment or
    withdrawal is made, T-bills are immediately liquidated and used as cash.
    Customers can have multiple accounts, and each account is associated with a
    single T-bill maturity: 4-week, 13-week, 26-week or 52-week.


    </br>


    The API Reference covers everything you need to build a full application
    leveraging the Jiko platform:


    </br>


    - Onboarding customers

    - Funding customer accounts via ACH or Wire

    - Viewing and managing accounts (including monthly statements and trade
    confirmations)

    - Making payments and transfers via ACH, Wire, On-Us (Book) Transfer or
    Debit Card


    </br>


    When you’re ready to start building, please contact us at
    [partner.support@jiko.io](mailto:partner.support@jiko.io) to request sandbox
    access.

    # Partner obligations


    </br>


    - Before onboarding, the end-user’s control over any email addresses or
    phone numbers must be confirmed (for example, via confirmation codes) before
    submitting an application to the API.

    - While onboarding, partners must comply with the disclosure requirements
    listed [below](https://docs.jiko.io/reference).

    - Monthly statements are created for bank and brokerage accounts and must be
    made available to the user.
      - Partners are required to send an email to end users every month a new statement is available to comply with regulatory requirements.
      - Partners can expect monthly statements to be available by the 15th of every month.
      - It is required to make the past 6 years of brokerage statements available to the end user.
      - It is advised to make at least the past 12 months of bank statements available to the end user.
    - Trade confirmations must be made available to the user.


    ## Disclosures and Agreements


    - The bundle of customer disclosures and agreements served at the
    [Agreements](https://docs.jiko.io/reference) endpoint must be presented to
    users before signing up for an account.
      This includes Risk and Limitation disclosures, Regulation E disclosures, Account agreements and more.
      - The customer consent for these disclosures have to be versioned and time-stamped and sent with the application.
    - Jiko reserves the right to update agreements from time to time.
      If a change is _adverse_ to the customer, Jiko will notify partners, and they are then required to notify their end users 30 days in advance of the change.
      - A change is deemed to be _adverse_ to the customer if it will result in increased fees, increased liability for the customer, fewer types of available transactions or stricter limitations on the frequency or dollar amount of transactions.
    - When Jiko updates the bundle of agreements, the version number of the
    agreement bundle will increment.
      Jiko reserves the right to reject or manually review applications where customer consent does not match the latest agreement version.
      Partners must re-fetch and display the agreements and disclosures links from the Agreements endpoint for every new application. This ensures each applicant is served the latest version of the agreements.

    # Authentication


    **Jiko** provides partners with a `username` and a `password`, as well as a
    `shared secret`. Partners are provided with a `bearer token` in the
    [Login](https://docs.jiko.io/reference) response, which must be sent with
    each request.


    </br>


    Each request made to the partner API needs 3 parts in order for it to be
    processed:


    1. An **Authorization** HTTP header containing the value


    ```javascript

    Bearer <access_token>

    ```


    </br>


    Where the `access_token` is the bearer token given in the
    [Login](https://docs.jiko.io/reference) response.


    1. An **x-jiko-idempotency** HTTP header set to a random uuid for this
    action, in order to signify a unique request to the API from the partner’s
    perspective.

    2. An **x-jiko-signature** HTTP header set to a base64 encoded HMAC-SHA256
    hash of `x-jiko-idempotency+request pathname+body` using the shared secret
    as a key.


    Below is a Node.js example showing how a potential request could be signed:


    </br>


    ```javascript

    const crypto = require("crypto");

    const uuid = require("uuid");


    const idempotency = uuid.v4();

    const pathname = "/api/v1/agreements/";

    const body = "";


    request.headers["x-jiko-signature"] = crypto
      .createHmac("sha256", "shared-secret-here")
      .update(idempotency + pathname + body, "utf-8")
      .digest("base64");
    ```


    </br>


    **Partner** requests will need to be sent from an IP address whitelisted by
    **Jiko**.

    **Jiko** will verify the request signature by repeating the steps above,
    additionally checking for possible repeated requests. A request is
    considered to be repeated if the idempotency key value provided in the
    `x-jiko-idempotency` header has been used previously in the past 1 hour.


    </br>


    Bearer tokens have a lifetime of 60 minutes.

    The partner will need to repeat the login process once a token has expired.


    # Changelog


    ## April 2024


    - Added new `async_mode` option when creating on-us transfers


    ## March 2024


    - Added `tradable_id` field to [List Customer
    Trades](https://docs.jiko.io/reference) and [List Customer
    Transactions](https://docs.jiko.io/reference) API endpoint.

    - Added support for filtering by trade date to and from to [List Customer
    Trades](https://docs.jiko.io/reference) and [List Customer
    Transactions](https://docs.jiko.io/reference) API endpoints.


    - Added support for filtering by types, timestamp_from and timestamp_to to
    the [List Customer Transactions](https://docs.jiko.io/reference), [List
    Account Transactions](https://docs.jiko.io/reference) API endpoints.


    ## February 2024


    - Added support for filtering by status and direction to the [List ACH
    Originations](https://docs.jiko.io/reference) API endpoint

    - Added support for filtering by portal id and card id to the [List Customer
    Transactions](https://docs.jiko.io/reference), [List Account
    Transactions](https://docs.jiko.io/reference) API endpoints.


    - Added support for filtering by status and direction to the [List ACH
    Originations](https://docs.jiko.io/reference) API endpoint

    - Added support for filtering by card status to the [List Account
    Cards](https://docs.jiko.io/reference) endpoint.

    - Added support for full withdrawals when performing on-us transfers by
    using the new `amount` field.

    - Added support for listing fees deducted when performing on-us transfers.


    ## January 2024


    - Added [Get Health Check](https://docs.jiko.io/reference) API endpoint.


    ## December 2023


    - Business Application additions:

      - Added [Create Application](https://docs.jiko.io/reference) API endpoint.
      - Added [Get Application](https://docs.jiko.io/reference) API endpoint.
      - Added [Update Application](https://docs.jiko.io/reference) API endpoint.
      - Added [Apply](https://docs.jiko.io/reference) API endpoint.

    - Related Party Application additions:

      - Added [List Related Party](https://docs.jiko.io/reference) API endpoint.
      - Added [Create Related Party](https://docs.jiko.io/reference) API endpoint.
      - Added [Delete Related Party](https://docs.jiko.io/reference) API endpoint.
      - Added [Update Related Party](https://docs.jiko.io/reference) API endpoint.

    - Document Upload additions:

      - Added [List Document Requests](https://docs.jiko.io/reference) API endpoint.
      - Added [Upload Document](https://docs.jiko.io/reference) API endpoint.

    - Wire additions:

      - Added [Create Wire](https://docs.jiko.io/reference) API endpoint.

    ## November 2023


    - Added a new optional field `micro_deposit` to V1 `ACHCounterparty` model
    that includes an indication of number of verification attempts for ACH
    Counterparties verified via Micro Deposits

    - Added [Close Portal](https://docs.jiko.io/reference) API endpoint.

    - Added [Update Portal](https://docs.jiko.io/reference) API endpoint.


    ## October 2023


    - Added enum value `PENDING` to the [Get Customer
    Data](https://docs.jiko.io/reference) `account_status` field, signalling
    that a customer has no open pocket.


    ## July 2023


    - Added [Get Account Portal](https://docs.jiko.io/reference) API endpoint.


    ## May 2023


    ### 2023-05-26


    - The response from uploading documents now includes a `document_id` field
    for future reference.


    ### 2023-05-15


    - Added [Create Portal](https://docs.jiko.io/reference) API endpoint.

    - Added a new `category` type E-SIGN for the Electronic Communications
    Disclosure Statement and Consent which was previously in the GENERAL
    category.


    ### 2023-05-05


    - Added a new `WIRE_COUNTERPARTY_VERIFICATION` document type.

    - File size limits raised to 50 MB for files other than `ID_FRONT`,
    `ID_BACK`, `SELFIE` and `PASSPORT` when uploading documents to a customer or
    application.

    - Updated documentation for both file upload endpoints.


    ## April 2023


    ### 2023-04-28


    - Adds a new `category` field for agreements returned by the [List
    Agreements](https://docs.jiko.io/reference) endpoint. This `category` field
    groups all agreements into 3 categories, BANK, BROKERAGE, or GENERAL.


    ### 2023-04-19


    - Added a new sandbox endpoint for simulating webhook calls, [Trigger
    Webhook](https://docs.jiko.io/reference).


    ## March 2023


    ### 2023-03-30


    - Added a new `yield_to_maturity` field to the `Trade` model.


    ### 2023-03-15


    - Added a new `name` field to the `Portal` model.


    ## February 2023


    ### 2023-02-24


    - Added a sandbox endpoint to fund accounts via ACH portals.


    ### 2023-02-16


    - Added a new disclosure type, `FORM_CRS`, for Customer Relationship Summary
    Forms.


    ### 2023-02-10


    - Added `wire_fee_transaction` and `WIRE_FEE` transaction type to the [List
    Customer Transactions](https://docs.jiko.io/reference), [List Account
    Transactions](https://docs.jiko.io/reference) and [Get Account
    Transaction](https://docs.jiko.io/reference) endpoints.


    ## January 2023


    ### 2023-01-25


    - Added [Create On-Us Transfer](https://docs.jiko.io/reference) API
    endpoint.

    - Added [Get On-Us Transfer](https://docs.jiko.io/reference) API endpoint.


    ### 2023-01-18


    - Added two optional filtering query parameters to the [List Customer
    Statements](https://docs.jiko.io/reference) endpoint:
      - The `type[]` query parameter makes it possible to filter by different types of statements, e.g. `?type[]=BANK&type[]=BROKERAGE`
      - The `key` query parameter makes it possible to filter by either a specific month or a year, e.g. `?key=2023-01` or `?key=2022`
    - Marked the [List Account Statements](https://docs.jiko.io/reference)
    endpoint as deprecated. Please use the [List Customer
    Statements](https://docs.jiko.io/reference) in future integrations.


    ### 2023-01-09


    - Added a new transaction type and corresponding details object,
    `on_us_transaction` to the response model in [List Customer
    Transactions](https://docs.jiko.io/reference).


    ### 2023-01-06


    - Added optional field `originally_onboarded_at` to request body in [Create
    Application](https://docs.jiko.io/reference)


    ## November 2022


    ### 2022-11-09


    - New counterparty type `WIRE` with a `wire` field, returned in [Get
    Counterparty](https://docs.jiko.io/reference) and [List
    Counterparties](https://docs.jiko.io/reference)


    ## September 2022


    ### 2022-09-28


    - Added [List Customer Statements](https://docs.jiko.io/reference) API
    endpoint.


    ### 2022-09-27


    - Added [Get Customer Data](https://docs.jiko.io/reference) API endpoint.


    ### 2022-09-07


    - Added [List Customer Trades](https://docs.jiko.io/reference) API endpoint.

    - Added [List Customer Transactions](https://docs.jiko.io/reference) API
    endpoint.


    ## August 2022


    ### 2022-08-29


    - Added `name` field to the [List Customer
    Accounts](https://docs.jiko.io/reference) and [Get Customer
    Account](https://docs.jiko.io/reference) API endpoints


    ### 2022-08-16


    - Added [Get Account Transaction](https://docs.jiko.io/reference) API
    endpoint


    ### 2022-08-05


    - Added [List ACH Originations](https://docs.jiko.io/reference) API endpoint
  version: 1.29.0
servers:
  - url: https://{partner}.partner-api.jikoservices.com
    description: Production server
  - url: https://{partner}.sandbox-api.jikoservices.com
    description: Sandbox server
paths:
  /api/v1/customers/{customer_id}/jiko-accounts/:
    get:
      tags:
        - Accounts
      summary: List Customer Accounts
      description: Get a list of all accounts for a specified customer.
      operationId: list_customer_accounts_api_v1_customers__customer_id__jiko_accounts__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: false
          schema:
            type: integer
            minimum: 0
            title: Offset
            default: 0
          name: offset
          in: query
        - required: false
          schema:
            type: integer
            maximum: 100
            minimum: 1
            title: Limit
            default: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
              example:
                offset: 0
                count: 1
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: J1 (4-week)
                    total_value:
                      value: 20708596
                      currency: USD
                      formatted: $207,085.96
                    status: OPEN
                    portfolio:
                      securities:
                        - tradable_id: 4b955c69-dd95-4f6a-a0ff-325ee029f240
                          security_type: FIXED_INCOME
                          quantity: 2100
                          market_value:
                            value: 20708596
                            currency: USD
                            formatted: $207,085.96
                          external_id: 912796RF6
                          maturity_date: '2023-01-30'
                          yield_to_maturity: '0.0468'
                          ask: '98.628528'
                          bid: '98.612361'
                          description: US T-Bill
                      cash:
                        value: 0
                        currency: USD
                        formatted: $0.00
                      all_time_earnings:
                        value: 935404
                        currency: USD
                        formatted: $9,354.04
                    object_type: Account
                object_type: List
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/:
    get:
      tags:
        - Accounts
      summary: Get Customer Account
      description: Get a specific account.
      operationId: get_customer_account_api_v1_jiko_accounts__account_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                name: J1 (4-week)
                total_value:
                  value: 20708596
                  currency: USD
                  formatted: $207,085.96
                status: OPEN
                portfolio:
                  securities:
                    - tradable_id: 4b955c69-dd95-4f6a-a0ff-325ee029f240
                      security_type: FIXED_INCOME
                      quantity: 2100
                      market_value:
                        value: 20708596
                        currency: USD
                        formatted: $207,085.96
                      external_id: 912796RF6
                      maturity_date: '2023-01-30'
                      yield_to_maturity: '0.0468'
                      ask: '98.628528'
                      bid: '98.612361'
                      description: US T-Bill
                  cash:
                    value: 0
                    currency: USD
                    formatted: $0.00
                  all_time_earnings:
                    value: 935404
                    currency: USD
                    formatted: $9,354.04
                object_type: Account
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/transactions/:
    get:
      tags:
        - Transactions
      summary: List Customer Transactions
      description: >-
        Returns a list of transactions from a customer's **bank accounts**. It
        does not include transactions between the **bank account** and
        **brokerage account**.
      operationId: >-
        list_customer_transactions_api_v1_customers__customer_id__transactions__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - description: Ordered by the transaction timestamp, descending by default.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/Order'
            description: Ordered by the transaction timestamp, descending by default.
            default: desc
          name: order
          in: query
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Account[]
          name: account[]
          in: query
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Filter[Card]
          name: filter[card]
          in: query
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Filter[Portal]
          name: filter[portal]
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/TransactionType'
            type: array
          name: filter[types]
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Timestamp From
          name: timestamp_from
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Timestamp To
          name: timestamp_to
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: CARD
                      title: 'ATM ABCD ID: TERM99 at 26 HOUSTON TEXAS CIR, HOUSTON TX'
                      transaction_type_title: ATM Withdrawal
                      card_transaction:
                        location:
                          street_address: 26 HOUSTON TEXAS CIR
                          city: HOUSTON
                          state: TX
                          country: US
                        counterparty: ABCD
                        terminal_id: TERM99
                        merchant_type: ATM
                        pre_authorization: true
                    object_type: Transaction
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: ACH
                      title: From VENMO (PAYMENT)
                      sub_title: 'IIN: 596425331 REF: 91000010211227'
                      transaction_type_title: ACH Electronic Debit
                      ach_transaction:
                        company_name: VENMO
                        company_entry_description: PAYMENT
                        individual_identification_number: '596425331'
                        trace_number: '091000010211227'
                    object_type: Transaction
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: WIRE
                      title: From External Account
                      sub_title: 9999XXXX
                      transaction_type_title: Wire Transfer In
                      wire_transaction:
                        reference_number: 9999XXXX
                        counterparty_name: John Smith
                        wire_id: 4854014d-5540-4f0c-9efe-a0137f01e1da
                    object_type: Transaction
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: CASH_BACK
                      title: 2022-06 Card Cash Back
                      transaction_type_title: Card Cash Back
                      cash_back_transaction:
                        period: 2022-06
                        card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01301
                    object_type: Transaction
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/transactions/:
    get:
      tags:
        - Transactions
      summary: List Account Transactions
      description: >-
        Returns a list of **bank account** transactions. It does not include
        transactions between the **bank account** and **brokerage account**.
      operationId: >-
        list_account_transactions_api_v1_jiko_accounts__account_id__transactions__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - description: Ordered by the transaction timestamp, descending by default.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/Order'
            description: Ordered by the transaction timestamp, descending by default.
            default: desc
          name: order
          in: query
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Filter[Card]
          name: filter[card]
          in: query
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Filter[Portal]
          name: filter[portal]
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/TransactionType'
            type: array
          name: filter[types]
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Timestamp From
          name: timestamp_from
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Timestamp To
          name: timestamp_to
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: CARD
                      title: 'ATM ABCD ID: TERM99 at 26 HOUSTON TEXAS CIR, HOUSTON TX'
                      transaction_type_title: ATM Withdrawal
                      card_transaction:
                        location:
                          street_address: 26 HOUSTON TEXAS CIR
                          city: HOUSTON
                          state: TX
                          country: US
                        counterparty: ABCD
                        terminal_id: TERM99
                        merchant_type: ATM
                        pre_authorization: true
                    object_type: Transaction
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: ACH
                      title: From VENMO (PAYMENT)
                      sub_title: 'IIN: 596425331 REF: 91000010211227'
                      transaction_type_title: ACH Electronic Debit
                      ach_transaction:
                        company_name: VENMO
                        company_entry_description: PAYMENT
                        individual_identification_number: '596425331'
                        trace_number: '091000010211227'
                    object_type: Transaction
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: WIRE
                      title: From External Account
                      sub_title: 9999XXXX
                      transaction_type_title: Wire Transfer In
                      wire_transaction:
                        reference_number: 9999XXXX
                        counterparty_name: John Smith
                        wire_id: 4854014d-5540-4f0c-9efe-a0137f01e1da
                    object_type: Transaction
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    timestamp: '2023-01-01T12:00:00+00:00'
                    status: COMPLETED
                    details:
                      transaction_type: CASH_BACK
                      title: 2022-06 Card Cash Back
                      transaction_type_title: Card Cash Back
                      cash_back_transaction:
                        period: 2022-06
                        card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01301
                    object_type: Transaction
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/transactions/{transaction_id}/:
    get:
      tags:
        - Transactions
      summary: Get Account Transaction
      description: >-
        Returns a specific transaction for a specific account, based on the
        provided account_id and transaction_id in question.
      operationId: >-
        get_account_transaction_api_v1_jiko_accounts__account_id__transactions__transaction_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Transaction Id
          name: transaction_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
              example:
                id: 05964326-49b7-4e74-9783-81137ee3cf3b
                jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                amount:
                  value: 100000
                  currency: USD
                  formatted: $1,000.00
                timestamp: '2023-01-01T12:00:00+00:00'
                status: COMPLETED
                details:
                  transaction_type: WIRE
                  title: From External Account
                  sub_title: 9999XXXX
                  transaction_type_title: Wire Transfer In
                  wire_transaction:
                    reference_number: 9999XXXX
                    counterparty_name: John Smith
                    wire_id: 4854014d-5540-4f0c-9efe-a0137f01e1da
                object_type: Transaction
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/trades/:
    get:
      tags:
        - Trades
      summary: List Customer Trades
      description: Returns a list of trades from a customer's **brokerage accounts**.
      operationId: list_customer_trades_api_v1_customers__customer_id__trades__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Account[]
          name: account[]
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Trade Datetime From
          name: trade_datetime_from
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Trade Datetime To
          name: trade_datetime_to
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    trade_datetime: '2023-01-01T12:00:00+00:00'
                    settled_date: '2023-01-01'
                    is_settled: true
                    activity: BUY
                    cusip: 912796RF6
                    description: US T-Bill
                    notional:
                      value: 20935404
                      currency: USD
                      formatted: $209,354.04
                    quantity: 2123
                    price: '98.612361'
                    maturity_date: '2023-01-30'
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    yield_to_maturity: '0.0468'
                    tradable_id: 912797HF7
                    object_type: Trade
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/trades/:
    get:
      tags:
        - Trades
      summary: List Account Trades
      description: >-
        Get a list of trades. This is the equivalent of fetching transactions
        for the **brokerage** account.
      operationId: list_account_trades_api_v1_jiko_accounts__account_id__trades__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            type: string
            format: date-time
            title: Trade Datetime From
          name: trade_datetime_from
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: Trade Datetime To
          name: trade_datetime_to
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    trade_datetime: '2023-01-01T12:00:00+00:00'
                    settled_date: '2023-01-01'
                    is_settled: true
                    activity: BUY
                    cusip: 912796RF6
                    description: US T-Bill
                    notional:
                      value: 20935404
                      currency: USD
                      formatted: $209,354.04
                    quantity: 2123
                    price: '98.612361'
                    maturity_date: '2023-01-30'
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    yield_to_maturity: '0.0468'
                    tradable_id: 912797HF7
                    object_type: Trade
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/trades/{trade_id}/confirmation/:
    get:
      tags:
        - Trades
      summary: Get Trade Confirmation
      description: >-
        Get a trade's trade confirmation.


        </br>


        Trade confirmations are sensitive documents. For security reasons, we
        return trade confirmations as PDFs through a URL with a 10-minute TTL.
        Trade confirmation PDFs should be fetched and served just-in-time, not
        stored in databases. Trades with "activity": "MATURITY" do not have
        trade confirmations.
      operationId: >-
        get_trade_confirmation_api_v1_jiko_accounts__account_id__trades__trade_id__confirmation__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Trade Id
          name: trade_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeConfirmation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/applications/:
    post:
      tags:
        - Individuals
      summary: Create Application
      description: >-
        Create an application. You must [apply](https://docs.jiko.io/reference)
        to potentially create a customer using the application, assuming KYC is
        successful.


        </br>


        When creating an application, keep in mind that customers must be at
        least 18 years old to open an account with Jiko.
      operationId: create_application_api_v1_applications__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternationalApplicationRequest'
            example:
              identification_number: '999999999'
              name:
                first_name: Jiko
                last_name: Customer
              email: jiko@example.com
              date_of_birth: '1970-01-01'
              investment_profile:
                income: BETWEEN_100K_AND_250K
                net_worth: BETWEEN_1M_AND_5M
                occupation: Investor
                employment_status: EMPLOYED
              agreement_consent:
                version: '1'
                timestamp: '2023-01-01T12:00:00+00:00'
              phone_number: '+14155550100'
              address:
                street_address: 2000 Allston Way
                city: Berkeley
                postal_code: '94701'
                state: CA
                country: USA
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternationalApplication'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T13:00:00+00:00'
                status: CREATED
                exception_reasons: []
                phone_number: '+14155550100'
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
                email: jiko@example.com
                name:
                  first_name: Jiko
                  last_name: Customer
                date_of_birth:
                  date_of_birth: '1970-01-01'
                investment_profile:
                  income: BETWEEN_100K_AND_250K
                  net_worth: BETWEEN_1M_AND_5M
                  occupation: Investor
                  employment_status: EMPLOYED
                documents: []
                id_verification_documents_needed: false
                identification_number_verification_document_needed: false
                address_verification_document_needed: false
                address:
                  street_address: 2000 Allston Way
                  city: Berkeley
                  postal_code: '94701'
                  state: CA
                  country: US
                citizenship_country: US
                object_type: InternationalApplication
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/applications/{application_id}/:
    get:
      tags:
        - Individuals
      summary: Get Application
      description: Fetch and observe an existing application.
      operationId: get_application_api_v1_applications__application_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternationalApplication'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T13:00:00+00:00'
                status: CREATED
                exception_reasons: []
                phone_number: '+14155550100'
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
                email: jiko@example.com
                name:
                  first_name: Jiko
                  last_name: Customer
                date_of_birth:
                  date_of_birth: '1970-01-01'
                investment_profile:
                  income: BETWEEN_100K_AND_250K
                  net_worth: BETWEEN_1M_AND_5M
                  occupation: Investor
                  employment_status: EMPLOYED
                documents: []
                id_verification_documents_needed: false
                identification_number_verification_document_needed: false
                address_verification_document_needed: false
                address:
                  street_address: 2000 Allston Way
                  city: Berkeley
                  postal_code: '94701'
                  state: CA
                  country: US
                citizenship_country: US
                object_type: InternationalApplication
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/applications/{application_id}/apply/:
    post:
      tags:
        - Individuals
      summary: Apply
      description: >-
        Initiate automatic KYC. Transitions the application from `CREATED`
        status to `SUBMITTED` status. Once the async KYC process is completed,
        the application will move from `SUBMITTED` to another status.
      operationId: apply_api_v1_applications__application_id__apply__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternationalApplication'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T13:00:00+00:00'
                status: DOCUMENTS_NEEDED
                exception_reasons: []
                phone_number: '+14155550100'
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
                email: jiko@example.com
                name:
                  first_name: Jiko
                  last_name: Customer
                date_of_birth:
                  date_of_birth: '1970-01-01'
                investment_profile:
                  income: BETWEEN_100K_AND_250K
                  net_worth: BETWEEN_1M_AND_5M
                  occupation: Investor
                  employment_status: EMPLOYED
                customer_id: 160c0c4b-9966-4dc1-a916-8407eb10d74e
                documents:
                  - id: dcd70de2-9f18-4918-bd96-c3972c85dc4e
                    type: ID_FRONT
                    status: PENDING_UPLOAD
                  - id: 62cd7ac9-d882-43f5-ac19-ad85c0c5c533
                    type: ID_BACK
                    status: PENDING_UPLOAD
                  - id: 1bd78e61-c86f-45b8-8848-34a51c863166
                    type: PASSPORT
                    status: PENDING_UPLOAD
                  - id: 0ceee47c-946e-4a6d-8951-96e1f630a59c
                    type: SELFIE
                    status: PENDING_UPLOAD
                id_verification_documents_needed: true
                identification_number_verification_document_needed: false
                address_verification_document_needed: false
                address:
                  street_address: 2000 Allston Way
                  city: Berkeley
                  postal_code: '94701'
                  state: CA
                  country: US
                citizenship_country: US
                object_type: InternationalApplication
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agreements/:
    get:
      tags:
        - Individuals
      summary: List Agreements
      description: >-
        Partner agreements and disclosures are available through the API in a
        versioned bundle. The version of the fetched bundle must be attached to
        all incoming applications.
      operationId: list_agreements_api_v1_agreements__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
              example:
                version: 1.0.0
                release_date: '2023-01-01'
                documents:
                  - pdf_download_url: https://example.com/path-to-agreement-pdf
                    title: Jiko Privacy Policy
                    type: PRIVACY_POLICY
                    category: GENERAL
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/business-applications/:
    post:
      tags:
        - Businesses
      summary: Create Application
      description: >-
        Create a Business Application. The **Business Application** object
        contains general information related to the business and the overall
        status of the application.


        </br>


        See the [Onboarding Businesses
        Guide](https://docs.jiko.io/guides/onboarding-businesses) for more.
      operationId: create-business-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessApplicationRequest'
            example:
              name: Jiko Group, Inc.
              entity_type: CORPORATE
              doing_business_as: Jiko
              identification_number:
                identification_number: '987654321'
                type: TIN
              address:
                street_address: 101 Mission Street
                street_address2: 7th Floor
                city: San Francisco
                postal_code: '94105'
                state: CA
                country: US
              website: https://www.jiko.io
              contact:
                name:
                  first_name: Jiko
                  middle_name: ''
                  last_name: Contact
                phone_number: '+15551234567'
                email: contact@jiko.io
              formation_date: '2017-01-04'
              risk_info:
                risk_categories: []
                has_current_enforcement_actions: false
                business_activity_location: PRIMARILY_US
                source_of_funds: INTERNAL_FUNDS
                account_usage: MONEY_STORAGE
                annual_revenue: PRE_REVENUE
                monthly_transactions: 5_OR_LESS
                first_month_deposit: 1M_OR_LESS
              industry:
                industry: ACCOUNTING_AND_BOOKKEEPING
              agreement_consent:
                version: '1'
                timestamp: '2023-01-01T12:00:00+00:00'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApplicationResponse'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T12:00:00+00:00'
                status: CREATED
                exception_reasons: []
                name: Jiko Group, Inc.
                entity_type: CORPORATE
                doing_business_as: Jiko
                identification_number:
                  identification_number: '987654321'
                  type: TIN
                address:
                  street_address: 101 Mission Street
                  street_address2: 7th Floor
                  city: San Francisco
                  postal_code: '94105'
                  state: CA
                  country: US
                website: https://www.jiko.io
                contact:
                  name:
                    first_name: Jiko
                    middle_name: ''
                    last_name: Contact
                  phone_number: '+15551234567'
                  email: contact@jiko.io
                formation_date: '2017-01-04'
                risk_info:
                  risk_categories: []
                  has_current_enforcement_actions: false
                  business_activity_location: PRIMARILY_US
                  source_of_funds: INTERNAL_FUNDS
                  account_usage: MONEY_STORAGE
                  annual_revenue: PRE_REVENUE
                  monthly_transactions: 5_OR_LESS
                  first_month_deposit: 1M_OR_LESS
                industry:
                  industry: ACCOUNTING_AND_BOOKKEEPING
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/business-applications/{application_id}/:
    get:
      tags:
        - Businesses
      summary: Get Application
      description: Fetch a Business Application.
      operationId: get-business-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApplicationResponse'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T12:00:00+00:00'
                status: APPROVED
                exception_reasons: []
                name: Jiko Group, Inc.
                entity_type: CORPORATE
                doing_business_as: Jiko
                identification_number:
                  identification_number: '987654321'
                  type: TIN
                address:
                  street_address: 101 Mission Street
                  street_address2: 7th Floor
                  city: San Francisco
                  postal_code: '94105'
                  state: CA
                  country: US
                website: https://www.jiko.io
                contact:
                  name:
                    first_name: Jiko
                    middle_name: ''
                    last_name: Contact
                  phone_number: '+15551234567'
                  email: contact@jiko.io
                formation_date: '2017-01-04'
                risk_info:
                  risk_categories: []
                  has_current_enforcement_actions: false
                  business_activity_location: PRIMARILY_US
                  source_of_funds: INTERNAL_FUNDS
                  account_usage: MONEY_STORAGE
                  annual_revenue: PRE_REVENUE
                  monthly_transactions: 5_OR_LESS
                  first_month_deposit: 1M_OR_LESS
                industry:
                  industry: ACCOUNTING_AND_BOOKKEEPING
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
                customer_id: 160c0c4b-9966-4dc1-a916-8407eb10d74e
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Businesses
      summary: Update Application
      operationId: update-business-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessApplicationRequest'
            example:
              name: Jiko Group, Inc.
              entity_type: CORPORATE
              doing_business_as: Jiko
              identification_number:
                identification_number: '987654321'
                type: TIN
              address:
                street_address: 101 Mission Street
                street_address2: 7th Floor
                city: San Francisco
                postal_code: '94105'
                state: CA
                country: US
              website: https://www.jiko.io
              contact:
                name:
                  first_name: Jiko
                  middle_name: ''
                  last_name: Contact
                phone_number: '+15551234567'
                email: contact@jiko.io
              formation_date: '2017-01-04'
              risk_info:
                risk_categories: []
                has_current_enforcement_actions: false
                business_activity_location: PRIMARILY_US
                source_of_funds: INTERNAL_FUNDS
                account_usage: MONEY_STORAGE
                annual_revenue: PRE_REVENUE
                monthly_transactions: 5_OR_LESS
                first_month_deposit: 1M_OR_LESS
              industry:
                industry: ACCOUNTING_AND_BOOKKEEPING
              agreement_consent:
                version: '1'
                timestamp: '2023-01-01T12:00:00+00:00'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApplicationResponse'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T12:00:00+00:00'
                status: SUBMITTED
                exception_reasons: []
                name: Jiko Group, Inc.
                entity_type: CORPORATE
                doing_business_as: Jiko
                identification_number:
                  identification_number: '987654321'
                  type: TIN
                address:
                  street_address: 101 Mission Street
                  street_address2: 7th Floor
                  city: San Francisco
                  postal_code: '94105'
                  state: CA
                  country: US
                website: https://www.jiko.io
                contact:
                  name:
                    first_name: Jiko
                    middle_name: ''
                    last_name: Contact
                  phone_number: '+15551234567'
                  email: contact@jiko.io
                formation_date: '2017-01-04'
                risk_info:
                  risk_categories: []
                  has_current_enforcement_actions: false
                  business_activity_location: PRIMARILY_US
                  source_of_funds: INTERNAL_FUNDS
                  account_usage: MONEY_STORAGE
                  annual_revenue: PRE_REVENUE
                  monthly_transactions: 5_OR_LESS
                  first_month_deposit: 1M_OR_LESS
                industry:
                  industry: ACCOUNTING_AND_BOOKKEEPING
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/business-applications/{application_id}/apply/:
    post:
      tags:
        - Businesses
      summary: Apply
      description: >-
        When the Business Application object has been completed, along with
        Related Party Applications and Document Requests (see the [Onboarding
        Businesses Guide](https://docs.jiko.io/guides/onboarding-businesses)),
        call this endpoint to submit the business application for review.
      operationId: business-application-apply
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApplicationResponse'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T12:00:00+00:00'
                updated_at: '2023-01-01T12:00:00+00:00'
                status: SUBMITTED
                exception_reasons: []
                name: Jiko Group, Inc.
                entity_type: CORPORATE
                doing_business_as: Jiko
                identification_number:
                  identification_number: '987654321'
                  type: TIN
                address:
                  street_address: 101 Mission Street
                  street_address2: 7th Floor
                  city: San Francisco
                  postal_code: '94105'
                  state: CA
                  country: US
                website: https://www.jiko.io
                contact:
                  name:
                    first_name: Jiko
                    middle_name: ''
                    last_name: Contact
                  phone_number: '+15551234567'
                  email: contact@jiko.io
                formation_date: '2017-01-04'
                risk_info:
                  risk_categories: []
                  has_current_enforcement_actions: false
                  business_activity_location: PRIMARILY_US
                  source_of_funds: INTERNAL_FUNDS
                  account_usage: MONEY_STORAGE
                  annual_revenue: PRE_REVENUE
                  monthly_transactions: 5_OR_LESS
                  first_month_deposit: 1M_OR_LESS
                industry:
                  industry: ACCOUNTING_AND_BOOKKEEPING
                agreement_consent:
                  version: '1'
                  timestamp: '2023-01-01T12:00:00+00:00'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/business-applications/{application_id}/related-party-applications/:
    get:
      tags:
        - Businesses
      summary: List Related Party Application
      operationId: list-related-party-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RelatedPartyApplicationResponse'
                type: array
                title: Response List-Related-Party-Application
              example:
                - name:
                    first_name: Related
                    middle_name: ''
                    last_name: Party
                  address:
                    street_address: 101 Mission Street
                    street_address2: 7th Floor
                    city: San Francisco
                    postal_code: '94105'
                    state: CA
                    country: US
                  date_of_birth: '1970-01-01'
                  identification_number:
                    identification_number: '987654321'
                    identification_type: SSN
                  phone_number: '+15551234567'
                  title: CEO
                  roles:
                    - CONTROL_PERSON
                  ownership_percentage: '0.51'
                  citizenship: US
                  email: relatedparty@jiko.io
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Businesses
      summary: Create Related Party Application
      operationId: create-related-party-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedPartyApplicationRequest'
            example:
              name:
                first_name: Related
                middle_name: ''
                last_name: Party
              address:
                street_address: 101 Mission Street
                street_address2: 7th Floor
                city: San Francisco
                postal_code: '94105'
                state: CA
                country: US
              date_of_birth: '1970-01-01'
              identification_number:
                identification_number: '987654321'
                identification_type: SSN
              phone_number: '+15551234567'
              title: CEO
              roles:
                - CONTROL_PERSON
              ownership_percentage: '0.51'
              citizenship: US
              email: relatedparty@jiko.io
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedPartyApplicationResponse'
              example:
                name:
                  first_name: Related
                  middle_name: ''
                  last_name: Party
                address:
                  street_address: 101 Mission Street
                  street_address2: 7th Floor
                  city: San Francisco
                  postal_code: '94105'
                  state: CA
                  country: US
                date_of_birth: '1970-01-01'
                identification_number:
                  identification_number: '987654321'
                  identification_type: SSN
                phone_number: '+15551234567'
                title: CEO
                roles:
                  - CONTROL_PERSON
                ownership_percentage: '0.51'
                citizenship: US
                email: relatedparty@jiko.io
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/business-applications/{application_id}/related-party-applications/{related_party_application_id}/:
    delete:
      tags:
        - Businesses
      summary: Delete Related Party Application
      operationId: delete-related-party-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Related Party Application Id
          name: related_party_application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Businesses
      summary: Update Related Party Application
      operationId: update-related-party-application
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Related Party Application Id
          name: related_party_application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedPartyApplicationRequest'
            example:
              name:
                first_name: Related
                middle_name: ''
                last_name: Party
              address:
                street_address: 101 Mission Street
                street_address2: 7th Floor
                city: San Francisco
                postal_code: '94105'
                state: CA
                country: US
              date_of_birth: '1970-01-01'
              identification_number:
                identification_number: '987654321'
                identification_type: SSN
              phone_number: '+15551234567'
              title: CEO
              roles:
                - CONTROL_PERSON
              ownership_percentage: '0.51'
              citizenship: US
              email: relatedparty@jiko.io
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedPartyApplicationResponse'
              example:
                name:
                  first_name: Related
                  middle_name: ''
                  last_name: Party
                address:
                  street_address: 101 Mission Street
                  street_address2: 7th Floor
                  city: San Francisco
                  postal_code: '94105'
                  state: CA
                  country: US
                date_of_birth: '1970-01-01'
                identification_number:
                  identification_number: '987654321'
                  identification_type: SSN
                phone_number: '+15551234567'
                title: CEO
                roles:
                  - CONTROL_PERSON
                ownership_percentage: '0.51'
                citizenship: US
                email: relatedparty@jiko.io
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/counterparties/:
    get:
      tags:
        - Counterparties
      summary: List Counterparties
      description: List all counterparties for a customer.
      operationId: list_counterparties_api_v1_customers__customer_id__counterparties__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCounterpartiesResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: ACH
                    ach:
                      time_created: '2023-01-15T14:00:00+00:00'
                      verification_type: MICRO_DEPOSITS
                      status: IN_PROGRESS
                      account_number: '123456789'
                      routing_number: '9876456'
                      name_on_account: External Accountholder
                      account_type: SAVINGS
                      institution_name: External Bank NA
                      plaid:
                        mask: '0000'
                        verification_status: PENDING_AUTOMATIC_VERIFICATION
                        object_type: CounterpartyPlaid
                    wire:
                      time_created: '2023-01-15T14:00:00+00:00'
                      verification_type: INCOMING_WIRE
                      status: IN_PROGRESS
                      account_number: '1213456789'
                      routing_number: '9876456'
                      name_on_account: External Accountholder
                      account_type: SAVINGS
                      institution_name: External Bank NA
                    object_type: Counterparty
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/counterparties/{counterparty_id}/:
    get:
      tags:
        - Counterparties
      summary: Get Counterparty
      description: >-
        Poll this endpoint to monitor the progress of the verification process
        for a single counterparty.


        </br>


        > ### Plaid:

        > If `plaid.verification_status` is `PENDING_MANUAL_VERIFICATION`, the
        user is in the <a href="https://plaid.com/docs/auth/coverage/same-day/"
        target="_blank" rel=" noreferrer noopener">Same Day Micro-deposits</a>
        flow and must return in 1-2 business days and go through the Plaid Link
        flow again, this time using a new Link token where the *counterparty_id*
        is passed to Jiko.
      operationId: >-
        get_counterparty_api_v1_customers__customer_id__counterparties__counterparty_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Counterparty Id
          name: counterparty_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counterparty'
              example:
                id: b5a776db-8960-4157-afe5-519b6708bb79
                type: WIRE
                wire:
                  time_created: '2023-01-15T14:00:00+00:00'
                  verification_type: INCOMING_WIRE
                  status: IN_PROGRESS
                  account_number: '1213456789'
                  routing_number: '9876456'
                  name_on_account: External Accountholder
                  account_type: SAVINGS
                  institution_name: External Bank NA
                object_type: Counterparty
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/cards/:
    get:
      tags:
        - Manage Cards
      summary: List Account Cards
      description: >-
        Get all cards for a specific account. Includes the `card_id` and
        metadata, but sensitive data like CVV's, expiration dates and card
        numbers are omitted.
      operationId: list_account_cards_api_v1_jiko_accounts__account_id__cards__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            type: integer
            title: Limit
            default: 100
          name: limit
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
          name: cursor
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/CardStatus'
            type: array
            uniqueItems: true
          name: filter[status]
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListResponse'
              example:
                offset: 0
                count: 1
                items:
                  - card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
                    name: Jiko Virtual Debit Card
                    status: OPEN
                    type: VIRTUAL
                object_type: List
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/cards/{card_id}/status/:
    get:
      tags:
        - Manage Cards
      summary: Get Card Status
      description: Get a card's current status.
      operationId: >-
        get_card_status_api_v1_jiko_accounts__account_id__cards__card_id__status__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardStatusResponse'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Manage Cards
      summary: Set Card Status
      description: >-
        Set a card's status. Note that once a card's status is set to `CLOSED`,
        it can never be used again.
      operationId: >-
        set_card_status_api_v1_jiko_accounts__account_id__cards__card_id__status__patch
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCardStatusRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardStatusResponse'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/cards/{card_id}/pin/:
    post:
      tags:
        - Manage Cards
      summary: Set Card PIN
      description: Set PIN for physical cards (by `card_id`) before they are activated.
      operationId: set_card_pin_api_v1_jiko_accounts__account_id__cards__card_id__pin__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardPinBase'
            example:
              encrypted_pin: >-
                KzJXZ0DgR/rvWnxexTeObSsOaByNGHKt67kLwbAEWULV4szPTeOTp1wSVQalGn/ykE0qgEUV8PEZGUbyvfj3j0gpuxIMdgbxg0ujXp6UfiuOMIbmP+HDg4E2BoSduh8XygMhwiWycnqA6lnKHRjGSb8vOwnNgxTGuUX9w3k0NJl3u62JWs2FzSa/HedpxKu+U1VTRmW9Y7tee7QYC/72xseV2wKMx+iFG3Sw2D9ruC4sgVE3tdi7E9FBsSVWawle9UrTF+wdX+cfImb7lKI2Pw5MiEf29xe7moNU8RHzGgyOrbyQcx0/j8t8mLqHSs/ioRGeSNevw4pXlpJBRD+hamyRdVQdaLrWB5xEKx9Ih9fGlMYE5RJHWMveB0NQ2Oxl2h/4/Om/bbP0JDA1doY6l/ovkey9lu0c494R05tdWmch93v+f/SqAoBcXf4hDeUgLhWkRNykzzwoQOACFNcBk9TUWJH8S90TYQM3sdgIfcNFru45VGJa5jlyheqNYeU3EqsWyVFmZAJUFJUSBMJdAVkSg5jxDPdzyk7GLrk5xu2N1orq4NKzR8O6WL+PhFtJF/7pZDWawq8TZRX3nqbyYUY+5ZlnBEVXywsn0L5Fp6od4oAelyhzrjzMlhtEMpuwOFhLvcb3Fm0Z4EIDeX6l3MIhDTDExKxOJsCLG2dbbIA=
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPinResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/cards/{card_id}/close/:
    post:
      tags:
        - Manage Cards
      summary: Close Card
      description: >-
        Close a card, virtual or physical. Physical cards require a
        `closure_reason`. If the reason is `STOLEN` or `LOST`, a
        `lost_stolen_date` is required.
      operationId: close_card_api_v1_jiko_accounts__account_id__cards__card_id__close__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseCardRequest'
            example:
              closure_reason: STOLEN
              lost_stolen_date: '2023-01-01'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/card-orders/:
    get:
      tags:
        - Physical Cards
      summary: List Card Orders
      description: List all card orders for this account.
      operationId: list_card_orders_api_v1_jiko_accounts__account_id__card_orders__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalCardOrderListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
                    card_order_id: d66e74c4-66f9-4937-8518-1a94f39ba0f9
                    status: INITIAL
                    object_type: MinimalPhysicalCardOrderResponse
                object_type: CursorList
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Physical Cards
      summary: Create Physical Card Order
      description: >-
        Order a new, physical card for an account. It will be delivered to the
        specified address.
      operationId: >-
        create_physical_card_order_api_v1_jiko_accounts__account_id__card_orders__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalCardOrder'
            example:
              name_on_card: Jiko Customer
              shipping_address:
                street_address: 2000 Allston Way
                city: Berkeley
                postal_code: '94701'
                state: CA
                country: USA
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalCardOrderResponse'
              example:
                card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
                card_order_id: d66e74c4-66f9-4937-8518-1a94f39ba0f9
                status: INITIAL
                name_on_card: Jiko Customer
                shipping_address:
                  street_address: 2000 Allston Way
                  city: Berkeley
                  postal_code: '94701'
                  state: CA
                  country: USA
                object_type: PhysicalCardOrderResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/card-orders/{card_order_id}/:
    get:
      tags:
        - Physical Cards
      summary: Get Card Order
      description: Retrieve card order information by provided `card_order_id`.
      operationId: >-
        get_card_order_api_v1_jiko_accounts__account_id__card_orders__card_order_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Order Id
          name: card_order_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalCardOrderResponse'
              example:
                card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
                card_order_id: d66e74c4-66f9-4937-8518-1a94f39ba0f9
                status: INITIAL
                name_on_card: Jiko Customer
                shipping_address:
                  street_address: 2000 Allston Way
                  city: Berkeley
                  postal_code: '94701'
                  state: CA
                  country: USA
                object_type: PhysicalCardOrderResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/virtual-cards/{card_id}/:
    post:
      tags:
        - Virtual Cards
      summary: Get Virtual Card
      description: >-
        Retrieve virtual card detail by given `card_id`. Generate a single-use
        4096-bit RSA key-pair at the (end user) client side and pass the public
        key PEM encoded upstream in PKCS#1 or PKCS#1.5 format to ensure
        confidentiality and encryption of the card's PAN, CVV and expiration
        date.
      operationId: >-
        get_virtual_card_api_v1_jiko_accounts__account_id__virtual_cards__card_id___post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicKeyRequest'
            example:
              public_key: "-----BEGIN PUBLIC KEY-----\r\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzmZv8spzSU9z+/bhFzX0\r\ns4xVXE9ZOApQUMoM3Q1VDiJujyWJ61uoTsWT1uQlIXHdUQ3NcXw0WYDUEaM8fj1b\r\nB2k1zSXmRD4VmxAIRNVfs3Cp3GKqC/WjyvDw25+SYBFwiaYJblpyZPiunXvXRyK8\r\nvdDaPliwTN5p7pjHQvcfXOl20ZtWnZTGMulJ+smNCYKWckW1hEOMjJP8FLMJpSHa\r\n6yGOpAYAxoHxodiJCI4X6fG206gBtyFps1CyxCz8WDjALqJYfeArTFv7/2AyuVCF\r\n5zLE7tzPrJeVxfqa+CI+7mWFhEKZLAd/PEzEL7P2VZr9BRd0lyxBipEEG/DGMEvY\r\n1dcx+3J56ZxVURAqeXPGkqVfz/IdisQt/okp6vSVKQdImeyzpJvwvBc7T7tKyRZR\r\nvtL8XLYzZBujqWCezMxU97TAb7BlQ2nPJCQFMZD7y1KldgWuGnjXha1TFIYvfrYW\r\noDFK221Z6LYlKWeRFGXhoNOX1Qm/CX3wi9Tfo01LTxbCY2Y1mbv6e8Xt12MzhicD\r\nZsFvVrtRaVrjmqXXDq8X2r7puPTLOQf7Dow3944XnTZQURE4oPIwCfTBmfMow+TB\r\n+ZUYWRXwg0/hl9AOBSGLVNlaGZD8sAu98knish5LJv34lx5mIiLLpGpIt+mzZikU\r\nFt9siIkltvk49qcmTuI8GJUCAwEAAQ==\r\n-----END PUBLIC KEY-----"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCardResponse'
              example:
                card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
                encrypted_pan: LBHyVQggqNZvbYriaL8omZSFnQfS4yMFEO8hpVmgrtn70uYz56...
                encrypted_cvv: GLuGA7uI2iYrzE03XkKMH1IJZD6cxR+WJmgw9Z0VuervNqnkUq...
                encrypted_expiration: amAxcZuURFfOi38kbM1LXfa6gBmuaSCt10Kic8243kM1V+Llsb...
                object_type: VirtualCardResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Virtual Cards
      summary: Close Virtual Card
      description: Close a virtual card. This is an irreversible action.
      operationId: >-
        close_virtual_card_api_v1_jiko_accounts__account_id__virtual_cards__card_id___delete
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Card Id
          name: card_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/virtual-cards/:
    post:
      tags:
        - Virtual Cards
      summary: Create Virtual Card
      description: >-
        Create a virtual card for an account. Generate a single-use 4096-bit RSA
        key-pair at the (end user) client side and pass the public key PEM
        encoded upstream in PKCS#1 or PKCS#1.5 format to ensure confidentiality
        and encryption of the card's PAN, CVV and expiration date.
      operationId: >-
        create_virtual_card_api_v1_jiko_accounts__account_id__virtual_cards__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicKeyRequest'
            example:
              public_key: "-----BEGIN PUBLIC KEY-----\r\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzmZv8spzSU9z+/bhFzX0\r\ns4xVXE9ZOApQUMoM3Q1VDiJujyWJ61uoTsWT1uQlIXHdUQ3NcXw0WYDUEaM8fj1b\r\nB2k1zSXmRD4VmxAIRNVfs3Cp3GKqC/WjyvDw25+SYBFwiaYJblpyZPiunXvXRyK8\r\nvdDaPliwTN5p7pjHQvcfXOl20ZtWnZTGMulJ+smNCYKWckW1hEOMjJP8FLMJpSHa\r\n6yGOpAYAxoHxodiJCI4X6fG206gBtyFps1CyxCz8WDjALqJYfeArTFv7/2AyuVCF\r\n5zLE7tzPrJeVxfqa+CI+7mWFhEKZLAd/PEzEL7P2VZr9BRd0lyxBipEEG/DGMEvY\r\n1dcx+3J56ZxVURAqeXPGkqVfz/IdisQt/okp6vSVKQdImeyzpJvwvBc7T7tKyRZR\r\nvtL8XLYzZBujqWCezMxU97TAb7BlQ2nPJCQFMZD7y1KldgWuGnjXha1TFIYvfrYW\r\noDFK221Z6LYlKWeRFGXhoNOX1Qm/CX3wi9Tfo01LTxbCY2Y1mbv6e8Xt12MzhicD\r\nZsFvVrtRaVrjmqXXDq8X2r7puPTLOQf7Dow3944XnTZQURE4oPIwCfTBmfMow+TB\r\n+ZUYWRXwg0/hl9AOBSGLVNlaGZD8sAu98knish5LJv34lx5mIiLLpGpIt+mzZikU\r\nFt9siIkltvk49qcmTuI8GJUCAwEAAQ==\r\n-----END PUBLIC KEY-----"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCardResponse'
              example:
                card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
                encrypted_pan: LBHyVQggqNZvbYriaL8omZSFnQfS4yMFEO8hpVmgrtn70uYz56...
                encrypted_cvv: GLuGA7uI2iYrzE03XkKMH1IJZD6cxR+WJmgw9Z0VuervNqnkUq...
                encrypted_expiration: amAxcZuURFfOi38kbM1LXfa6gBmuaSCt10Kic8243kM1V+Llsb...
                object_type: VirtualCardResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/events/types/:
    get:
      tags:
        - Events
      summary: List Event Types
      description: List all event types.
      operationId: list_event_types_api_v1_events_types__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResponse'
              example:
                offset: 0
                count: 14
                items:
                  - event: application.approved
                    object_type: EventType
                  - event: application.documents_needed
                    object_type: EventType
                  - event: application.manual_review
                    object_type: EventType
                  - event: application.rejected
                    object_type: EventType
                  - event: card.status.closed
                    object_type: EventType
                  - event: card.status.frozen
                    object_type: EventType
                  - event: card.status.locked
                    object_type: EventType
                  - event: card.status.open
                    object_type: EventType
                  - event: card.transaction.approved
                    object_type: EventType
                  - event: card.transaction.rejected
                    object_type: EventType
                  - event: transfers.ach.in.success
                    object_type: EventType
                  - event: transfers.ach.in.rejected
                    object_type: EventType
                  - event: transfers.ach.out.success
                    object_type: EventType
                  - event: transfers.ach.out.rejected
                    object_type: EventType
                object_type: List
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/events/:
    get:
      tags:
        - Events
      summary: List Events
      description: List all past events.
      operationId: list_events_api_v1_events__get
      parameters:
        - required: false
          schema:
            type: string
            format: uuid
            title: Subscription Id
          name: subscription_id
          in: query
        - required: false
          schema:
            type: string
            format: date-time
            title: After
          name: after
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorListResponse_PartnerEvent_'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - event:
                      event_id: a7a26ff2-e851-45b6-9634-d595f45458b7
                      timestamp: '2023-01-01T14:00:00+00:00'
                      payload:
                        application_id: 48ac72d0-a829-4896-a067-dcb1c2b0f30c
                      event_type: application.approved
                    delivery_attempts:
                      - delivery_attempt_id: 5326238f-7f19-4e5f-b374-402eed7b1c7b
                        subscription_id: aa11a4c2-a467-43db-b413-c4ab0f5cf627
                        success: true
                        response_code: 200
                        response_message: OK
                        called_at: '2023-01-01T14:00:00+00:00'
                    object_type: PartnerEvent
                object_type: CursorList
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/counterparties/plaid/link-token/:
    post:
      tags:
        - 'Counterparties: Plaid'
      summary: Create Plaid Link Token
      description: >-
        To initiate the Plaid Link flow in your app, a link token must be
        created to identify the data flowing between your app, Plaid and Jiko.
        If the Plaid Link flow has to be accessed again later to complete
        account ownership verification (<a
        href="https://plaid.com/docs/auth/coverage/same-day/" target="_blank"
        rel=" noreferrer noopener">Same Day Micro-deposits</a>), you must
        include the *counterparty_id* for the counterparty in question.
        *redirect_uri* allows you to use OAuth.


        </br>


        **NOTE**: `android_package_name` and `redirect_uri` are mutually
        exclusive. Only one should be provided, depending on your use case.
      operationId: >-
        create_plaid_link_token_api_v1_customers__customer_id__counterparties_plaid_link_token__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaidLinkTokenRequest'
            example:
              client_name: My App
              redirect_uri: https://example.com/plaid-oauth
              android_package_name: com.example.myapp
              counterparty_id: fd38dae9-b300-4017-a630-101c4279eafd
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidLinkToken'
              example:
                link_token: link-af1a0311-da53-4636-b754-dd15cc058176
                expiration: '2023-01-01T12:00:00+00:00'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/counterparties/plaid/:
    post:
      tags:
        - 'Counterparties: Plaid'
      summary: Create Plaid Counterparties
      description: >-
        Once your user has completed the Plaid Link flow, you must forward some
        data from Plaid to Jiko to create the counterparty. This includes
        information about the third party financial institution and the specific
        accounts selected by the user. The *institution_id* is required in all
        cases except in the Same Day Micro-deposits flow.
      operationId: >-
        create_plaid_counterparties_api_v1_customers__customer_id__counterparties_plaid__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaidCreateCounterparties'
            example:
              public_token: public-b0e2c4ee-a763-4df5-bfe9-46a46bce993d
              accounts:
                - id: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
                  name: Plaid Checking
                  mask: '0000'
              institution_id: ins_109508
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidCreateCounterpartiesResponse'
              example:
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: ACH
                    ach:
                      time_created: '2023-01-15T14:00:00+00:00'
                      verification_type: MICRO_DEPOSITS
                      status: IN_PROGRESS
                      account_number: '123456789'
                      routing_number: '9876456'
                      name_on_account: External Accountholder
                      account_type: SAVINGS
                      institution_name: External Bank NA
                      plaid:
                        mask: '0000'
                        verification_status: PENDING_AUTOMATIC_VERIFICATION
                        object_type: CounterpartyPlaid
                    object_type: Counterparty
                object_type: PlaidCreateCounterpartiesResponse
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/counterparties/{counterparty_id}/plaid/verify/:
    post:
      tags:
        - 'Counterparties: Plaid'
      summary: Verify Plaid Counterparty
      description: >-
        If and when a user completes the Same Day Micro-deposits flow, call this
        endpoint to notify it has been completed. Then, go back to polling the
        counterparty until verification is complete.
      operationId: >-
        verify_plaid_counterparty_api_v1_customers__customer_id__counterparties__counterparty_id__plaid_verify__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Counterparty Id
          name: counterparty_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/subscriptions/:
    get:
      tags:
        - Subscriptions
      summary: List Subscriptions
      description: List a partner's subscriptions.
      operationId: list_subscriptions_api_v1_subscriptions__get
      parameters:
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorListResponse_Subscription_'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - description: Jiko API Webhook Subscriptions
                    events:
                      - application.approved
                      - application.documents_needed
                      - application.manual_review
                      - application.rejected
                      - card.status.closed
                      - card.status.frozen
                      - card.status.locked
                      - card.status.open
                      - card.transaction.approved
                      - card.transaction.rejected
                      - transfers.ach.in.success
                      - transfers.ach.in.rejected
                      - transfers.ach.out.success
                      - transfers.ach.out.rejected
                    url: https://example.com/webhooks
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    time_created: '2023-01-01T14:00:00+00:00'
                    updated_at: '2023-01-01T14:00:00+00:00'
                    status: enabled
                    object_type: Subscription
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Subscriptions
      summary: Create Subscription
      description: >-
        Creates a webhook subscription for the specified event types and the
        given URL.
      operationId: create_subscription_api_v1_subscriptions__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
            example:
              description: Incoming ACH Success Webhook
              events:
                - transfers.ach.in.success
              url: https://example.com/webhooks/ach-incoming-success
              shared_secret: '1234567890123456'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
              example:
                description: Incoming ACH Success Webhook
                events:
                  - transfers.ach.in.success
                url: https://example.com/webhooks/ach-incoming-success
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T14:00:00+00:00'
                updated_at: '2023-01-01T14:00:00+00:00'
                status: enabled
                object_type: Subscription
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/subscriptions/{subscription_id}/:
    get:
      tags:
        - Subscriptions
      summary: Get Subscription
      description: Retrieve a webhook subscription by given `subscription_id`.
      operationId: get_subscription_api_v1_subscriptions__subscription_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Subscription Id
          name: subscription_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
              example:
                description: Incoming ACH Success Webhook
                events:
                  - transfers.ach.in.success
                url: https://example.com/webhooks/ach-incoming-success
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T14:00:00+00:00'
                updated_at: '2023-01-01T14:00:00+00:00'
                status: enabled
                object_type: Subscription
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Subscriptions
      summary: Delete Subscription
      description: Deletes a webhook subscription matching the given ID.
      operationId: delete_subscription_api_v1_subscriptions__subscription_id___delete
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Subscription Id
          name: subscription_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Subscriptions
      summary: Update Subscription
      description: Updates webhook subscription by specified `subscription_id`.
      operationId: update_subscription_api_v1_subscriptions__subscription_id___patch
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Subscription Id
          name: subscription_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
            example:
              description: Incoming ACH Success Webhook
              events:
                - transfers.ach.in.success
              url: https://example.com/webhooks/ach-incoming-success-new
              shared_secret: '1234567890123456'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
              example:
                description: Incoming ACH Success Webhook
                events:
                  - transfers.ach.in.success
                url: https://example.com/webhooks/ach-incoming-success-new
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                time_created: '2023-01-01T14:00:00+00:00'
                updated_at: '2023-01-01T16:00:00+00:00'
                status: enabled
                object_type: Subscription
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/ach-originating/:
    get:
      tags:
        - ACH
      summary: List ACH Originations
      description: List all ACH transfer originations.
      operationId: >-
        list_ach_originations_api_v1_jiko_accounts__account_id__ach_originating__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/ACHStatus'
            type: array
          name: filter[status]
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ACHDirection'
          name: direction
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 100
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorListResponse_ACHResponse_'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - counterparty_id: fd38dae9-b300-4017-a630-101c42791afd
                    direction: CREDIT
                    sec_code: WEB
                    payment_related_information:
                      - Transferring funds to Jiko from an external account
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    amount:
                      value: 100000
                      currency: USD
                      formatted: $1,000.00
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    status: PROCESSED
                    time_created: '2023-01-01T14:00:00+00:00'
                    company_entry_description: Incoming ACH Transfer
                    object_type: ACHResponse
                object_type: CursorList
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - ACH
      summary: Create ACH Origination
      description: >-
        Originate an ACH transaction with the counterparty.

        This can only be done after creating a
        [Counterparty](https://docs.jiko.io/reference) for the account.


        </br>


        ### ACH Origination Limitations


        </br>


        - All transfers that are below 25k and scheduled before 12:00 ET are
        sent with settlement same-day

        - All transfers above 25k scheduled before 12:00 ET are sent with
        settlement next day

        - All transfers scheduled after 12:00 ET follow the above rules the
        following day
      operationId: >-
        create_ach_origination_api_v1_jiko_accounts__account_id__ach_originating__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACHRequest'
            example:
              counterparty_id: fd38dae9-b300-4017-a630-101c4279eafd
              direction: CREDIT
              sec_code: WEB
              payment_related_information:
                - Transferring funds to Jiko from an external account
              amount_usdc: 100000
              company_entry_description: ACH TXN IN
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACHResponse'
              example:
                counterparty_id: fd38dae9-b300-4017-a630-101c42791afd
                direction: CREDIT
                sec_code: WEB
                payment_related_information:
                  - Transferring funds to Jiko from an external account
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                amount:
                  value: 100000
                  currency: USD
                  formatted: $1,000.00
                jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                status: PROCESSED
                time_created: '2023-01-01T14:00:00+00:00'
                company_entry_description: Incoming ACH Transfer
                object_type: ACHResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/ach-originating/{transfer_id}/:
    get:
      tags:
        - ACH
      summary: Get ACH Origination
      description: Get a specific ACH transfer origination.
      operationId: >-
        get_ach_origination_api_v1_jiko_accounts__account_id__ach_originating__transfer_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Transfer Id
          name: transfer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACHResponse'
              example:
                counterparty_id: fd38dae9-b300-4017-a630-101c42791afd
                direction: CREDIT
                sec_code: WEB
                payment_related_information:
                  - Transferring funds to Jiko from an external account
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                amount:
                  value: 100000
                  currency: USD
                  formatted: $1,000.00
                jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                status: PROCESSED
                time_created: '2023-01-01T14:00:00+00:00'
                company_entry_description: Incoming ACH Transfer
                object_type: ACHResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/wires/:
    post:
      tags:
        - Wires
      summary: Create Wire
      description: >-
        Initiates a Wire Transfer. Wires can only be sent to accounts created
        and verified via [Create
        Counterparty](https://docs.jiko.io/reference/v2#tag/Counterparties/operation/create-counterparty-v2).
        Initiating outgoing wire transfers isn’t available by default and must
        be enabled — please contact your Jiko point-of-contact to learn more.
      operationId: create-wire
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WireRequest'
            example:
              counterparty_id: fd38dae9-b300-4017-a630-101c4279eafd
              amount_usdc: 1000000
              created_by: jiko@example.com
              description: Wiring funds to external account
              wire_id: 6b14d0c0-277f-4a32-b5ac-c2e1c7d99f15
        required: true
      responses:
        '201':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/transfers/on-us/:
    post:
      tags:
        - On-Us Transfers
      summary: Create On-Us Transfer
      description: >-
        Initiates an On-Us Transfer between two Pockets.


        On-Us Transfers can be made in three directions (defined by `type`):


        1. `PARTNER_CUSTOMER_FUNDING`: From a Partner’s Pocket to a Customer’s
        Pocket

        2. `PARTNER_CUSTOMER_DEFUNDING`: From a Customer’s Pocket to a Partner’s
        Pocket

        3. `INTERNAL_REALLOCATION`: Between two Pockets belonging to the same
        Customer


        On-Us Transfer amounts can be specified two ways (defined by
        `amount.type`):


        1. `REQUESTED_AMOUNT`: Transfer a specified dollar amount

        2. `FULL_WITHDRAWAL`: Transfer the Pocket's total available balance (net
        of fees). `amount.type` cannot be `FULL_WITHDRAWAL` when `type` is
        `PARTNER_CUSTOMER_FUNDING`.


        On-Us Transfers can be processed asynchronously (defined by
        `async_mode`). Asynchronous transfers will be created in a `PENDING`
        state

        and status updates will be delivered via webhooks.
      operationId: create-on-us-transfer
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnUsTransferDetailsRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnUsTransfer'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                status: PENDING
                transfer:
                  transfer_id: d4a2d8dd-7def-4545-a062-761683b9aa05
                  description: Disbursing funds from partner to customer
                  from_account:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: JIKO_ACCOUNT
                  to_account:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: JIKO_ACCOUNT
                  type: PARTNER_CUSTOMER_FUNDING
                  source: '123456789'
                  amount:
                    value: 100000
                    currency: USD
                    formatted: $1,000.00
                fees:
                  - type: AUM_FEE
                    amount:
                      value: 10
                      currency: USD
                      formatted: $0.10
                object_type: OnUsTransfer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/transfers/on-us/{transfer_id}/:
    get:
      tags:
        - On-Us Transfers
      summary: Get On-Us Transfer
      description: Gets a single on-us transfer by ID.
      operationId: get-on-us-transfer
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Transfer Id
          name: transfer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnUsTransfer'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                status: PENDING
                transfer:
                  transfer_id: d4a2d8dd-7def-4545-a062-761683b9aa05
                  description: Disbursing funds from partner to customer
                  from_account:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: JIKO_ACCOUNT
                  to_account:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: JIKO_ACCOUNT
                  type: PARTNER_CUSTOMER_FUNDING
                  source: '123456789'
                  amount:
                    value: 100000
                    currency: USD
                    formatted: $1,000.00
                fees:
                  - type: AUM_FEE
                    amount:
                      value: 10
                      currency: USD
                      formatted: $0.10
                object_type: OnUsTransfer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/:
    get:
      tags:
        - Customers
      summary: Get Customer Data
      description: Retrieve customer details for the customer given by the customer ID.
      operationId: get_customer_data_api_v1_customers__customer_id___get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              example:
                address:
                  street_address: 2000 Allston Way
                  city: Berkeley
                  postal_code: '94701'
                  state: CA
                  country: USA
                email: jiko@example.com
                phone_number: '15551234567'
                account_status: OPEN
                type: INDIVIDUAL
                name:
                  first_name: Jiko
                  last_name: Customer
                date_of_birth: '1970-01-01'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/statements/:
    get:
      tags:
        - Statements
      summary: List Customer Statements
      description: Get all statements for all accounts of a specific customer.
      operationId: list_customer_statements_api_v1_customers__customer_id__statements__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: false
          schema:
            items:
              type: string
              format: uuid
            type: array
            title: Account[]
          name: account[]
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/Order'
            default: desc
          name: order
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/StatementType'
            type: array
            default: []
          name: type[]
          in: query
        - description: Date formatted either `YYYY` or `YYYY-MM`
          required: false
          schema:
            type: string
            pattern: ^\d{4}(-\d{2})?$
            title: Key
            description: Date formatted either `YYYY` or `YYYY-MM`
          name: key
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 150
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    type: BANK
                    key: '2023-01-01'
                    pdf_download_url: https://example.com/path-to-statement-pdf
                    time_created: '2023-01-15T14:00:00+00:00'
                    object_type: Statement
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/statements/:
    get:
      tags:
        - Statements
      summary: List Account Statements
      description: >-
        Lists all statements for an account. Partners can expect monthly
        statements to be available by the 15th of every month.


        </br>


        Bank and Broker dealer statements are sensitive documents. For security
        reasons, these URLs have a 10 minute TTL. Therefore, they should be
        fetched and served just-in-time, not stored in databases.
      operationId: >-
        list_account_statements_api_v1_jiko_accounts__account_id__statements__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/Order'
            default: desc
          name: order
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/StatementType'
            type: array
            default: []
          name: type[]
          in: query
        - description: Date formatted either `YYYY` or `YYYY-MM`
          required: false
          schema:
            type: string
            pattern: ^\d{4}(-\d{2})?$
            title: Key
            description: Date formatted either `YYYY` or `YYYY-MM`
          name: key
          in: query
        - required: false
          schema:
            type: string
            title: Cursor
            default: ''
          name: cursor
          in: query
        - required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
            default: 30
            lte: 150
          name: limit
          in: query
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementListResponse'
              example:
                prev_page: >-
                  cj0xJnA9MjAyMi0xMi0yMSsxNyUzQTIyJTNBMDguNjc5MzQ5JTJCMDAlM0EwMA==
                next_page: cD0yMDIyLTEyLTE5KzE5JTNBNTQlM0EyNy4xODMyNzglMkIwMCUzQTAw
                items:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    type: BANK
                    key: '2023-01-01'
                    pdf_download_url: https://example.com/path-to-statement-pdf
                    time_created: '2023-01-15T14:00:00+00:00'
                    object_type: Statement
                object_type: CursorList
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/portals/:
    get:
      tags:
        - Portals
      summary: List Portals
      description: Get a list of portals associated with an account.
      operationId: list_account_portals_api_v1_jiko_accounts__account_id__portals__get
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortalsResponse'
              example:
                count: 1
                portals:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                    routing_number: '123456789'
                    account_number: '987654321'
                    status: OPEN
                    name: Payroll
                    object_type: Portal
                object_type: List
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Portals
      summary: Create Portal
      description: Create a portal for an account.
      operationId: create_portal_api_v1_jiko_accounts__account_id__portals__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalCreateRequest'
            example:
              name: Payroll
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                routing_number: '123456789'
                account_number: '987654321'
                status: OPEN
                name: Payroll
                object_type: Portal
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/portals/{portal_id}/:
    get:
      tags:
        - Portals
      summary: Get Account Portal
      description: Get a specific portal associated with an account.
      operationId: get-account-portal
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Portal Id
          name: portal_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                routing_number: '123456789'
                account_number: '987654321'
                status: OPEN
                name: Payroll
                object_type: Portal
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Portals
      summary: Update Portal
      description: Update a portal's name.
      operationId: >-
        update_portal_api_v1_jiko_accounts__account_id__portals__portal_id___patch
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Portal Id
          name: portal_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalUpdateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
              example:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                jiko_account_id: 8a7ec6c0-2701-40a1-8954-68870964b50d
                routing_number: '123456789'
                account_number: '987654321'
                status: OPEN
                name: Payroll
                object_type: Portal
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/jiko-accounts/{account_id}/portals/{portal_id}/close/:
    post:
      tags:
        - Portals
      summary: Close Portal
      description: Close a portal. This is an irreversible action.
      operationId: >-
        close_portal_api_v1_jiko_accounts__account_id__portals__portal_id__close__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: Portal Id
          name: portal_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
        - required: true
          schema:
            type: string
            title: X-Jiko-Signature
          name: x-jiko-signature
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
        '412':
          description: Portal is already closed.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/applications/{application_id}/documents/{document_type}/file/:
    post:
      tags:
        - Individuals
      summary: Upload Document To Application
      description: >-
        Upload documents to the application for more detailed KYC or manual
        review.


        As with all other endpoints, the bearer token and `x-jiko-idempotency`
        is needed, but `x-jiko-signature` is not needed.

        The file should be posted unprocessed in the request body, in the same
        manner as `curl -X POST --data-binary @my_file.png` does.

        The maximum file size for `ID_FRONT`, `ID_BACK`, `SELFIE` and `PASSPORT`
        is 5 MB. Other files can be up to 50 MB.



        Documents can be uploaded before and after calling
        [Apply](https://docs.jiko.io/reference).
      operationId: >-
        Upload_document_to_Application_api_v1_applications__application_id__documents__document_type__file__post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            $ref: '#/components/schemas/DocumentType'
          name: document_type
          in: path
        - required: true
          schema:
            type: string
            pattern: image/png
            title: Content-Type
          name: content-type
          in: header
        - required: true
          schema:
            type: integer
            exclusiveMaximum: 52428800
            exclusiveMinimum: 0
            title: Content-Length
          name: content-length
          in: header
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentResponse'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/customers/{customer_id}/documents/{document_type}/file/:
    post:
      tags:
        - Customers
      summary: Upload Document To Customer
      description: >-
        Upload files for an approved customer. Used to verify customer requests
        (e.g. Customer change request, close account request, ACH request).
        Refer to the [Upload Document To
        Application](https://docs.jiko.io/reference) for more detailed info.
      operationId: upload-customer-document
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Customer Id
          name: customer_id
          in: path
        - required: true
          schema:
            $ref: '#/components/schemas/DocumentType'
          name: document_type
          in: path
        - required: true
          schema:
            type: string
            pattern: image/png
            title: Content-Type
          name: content-type
          in: header
        - required: true
          schema:
            type: integer
            exclusiveMaximum: 52428800
            exclusiveMinimum: 0
            title: Content-Length
          name: content-length
          in: header
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentResponse'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/business-applications/{application_id}/documents/:
    get:
      tags:
        - Businesses
      summary: List Document Requests
      description: >-
        Fetch the list of outstanding Document Requests. Document Requests vary
        depending on the information provided in the Business Application and
        Related Party Application objects.


        <br />


        See the [Onboarding Businesses
        Guide](https://docs.jiko.io/guides/onboarding-businesses) for more.
      operationId: list-document-requests-businesses
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Application Id
          name: application_id
          in: path
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Document'
                type: array
                title: Response List-Document-Requests-Businesses
              example:
                - id: 61c23eb1-002a-4459-aa9a-624428281e14
                  type: OPERATING_AGREEMENT
                  status: PENDING_UPLOAD
                  exception_reason: ''
                  name: ''
                - id: 96e70040-eb4e-48d1-98af-0c793a6ee137
                  type: ARTICLES_OF_INCORPORATION
                  status: INVALID
                  exception_reason: IMAGE_QUALITY_ERROR_CUTOFF
                  name: articles_of_incorporation.png
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/documents/{document_id}/:
    post:
      tags:
        - Businesses
      summary: Upload Document
      operationId: upload-business-application-document
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Document Id
          name: document_id
          in: path
        - required: true
          schema:
            type: string
            pattern: image/png
            title: Content-Type
          name: content-type
          in: header
        - required: true
          schema:
            type: integer
            exclusiveMaximum: 52428800
            exclusiveMinimum: 0
            title: Content-Length
          name: content-length
          in: header
        - required: true
          schema:
            type: string
            title: Content-Disposition
          name: content-disposition
          in: header
        - required: true
          schema:
            type: string
            format: uuid
            title: X-Jiko-Idempotency
          name: x-jiko-idempotency
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
              example:
                id: 96e70040-eb4e-48d1-98af-0c793a6ee137
                type: ARTICLES_OF_INCORPORATION
                status: APPROVED
                exception_reason: ''
                name: articles_of_incorporation.png
        '404':
          description: Not found
        '412':
          description: Document has already been reviewed and approved.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/login/:
    post:
      tags:
        - Security
      summary: Login
      description: >-
        Provide the username and password in a request body to receive a bearer
        token to authenticate to the API's other endpoints.


        </br>


        See [Authentication](https://docs.jiko.io/reference).
      operationId: login_api_v1_login__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Login Info
              examples:
                username: username
                password: password
              allOf:
                - $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              example:
                token: LBHyVQggqNZvbYriaL8omZSFnQfS4yMFEO8hpVmgrtn=
                expires: '2023-01-01T14:00:00+00:00'
        '401':
          description: Unauthorized
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/public-keys/:
    get:
      tags:
        - Security
      summary: List Public Keys
      description: Returns all relevant asymmetric encryption keys.
      operationId: list_public_keys_api_v1_public_keys__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionKeysResponse'
              example:
                set_pin: "-----BEGIN PUBLIC KEY-----\r\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAzmZv8spzSU9z+/bhFzX0\r\ns4xVXE9ZOApQUMoM3Q1VDiJujyWJ61uoTsWT1uQlIXHdUQ3NcXw0WYDUEaM8fj1b\r\nB2k1zSXmRD4VmxAIRNVfs3Cp3GKqC/WjyvDw25+SYBFwiaYJblpyZPiunXvXRyK8\r\nvdDaPliwTN5p7pjHQvcfXOl20ZtWnZTGMulJ+smNCYKWckW1hEOMjJP8FLMJpSHa\r\n6yGOpAYAxoHxodiJCI4X6fG206gBtyFps1CyxCz8WDjALqJYfeArTFv7/2AyuVCF\r\n5zLE7tzPrJeVxfqa+CI+7mWFhEKZLAd/PEzEL7P2VZr9BRd0lyxBipEEG/DGMEvY\r\n1dcx+3J56ZxVURAqeXPGkqVfz/IdisQt/okp6vSVKQdImeyzpJvwvBc7T7tKyRZR\r\nvtL8XLYzZBujqWCezMxU97TAb7BlQ2nPJCQFMZD7y1KldgWuGnjXha1TFIYvfrYW\r\noDFK221Z6LYlKWeRFGXhoNOX1Qm/CX3wi9Tfo01LTxbCY2Y1mbv6e8Xt12MzhicD\r\nZsFvVrtRaVrjmqXXDq8X2r7puPTLOQf7Dow3944XnTZQURE4oPIwCfTBmfMow+TB\r\n+ZUYWRXwg0/hl9AOBSGLVNlaGZD8sAu98knish5LJv34lx5mIiLLpGpIt+mzZikU\r\nFt9siIkltvk49qcmTuI8GJUCAwEAAQ==\r\n-----END PUBLIC KEY-----"
  /health:
    get:
      tags:
        - Health
      summary: Get Health Check
      description: >-
        A health check endpoint, which returns "OK" if the Partner API is up and
        running.
      operationId: get-health-check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                enum:
                  - OK
                title: Response Get-Health-Check
  /api/v1/sandbox/card-swipe/:
    post:
      tags:
        - Sandbox
      summary: Submit Card Swipe
      description: >-
        Simulate a card swipe with the given `card_id` for a given `amount_usdc`
        in USD cents. **Note**: Only for virtual cards at the moment.
      operationId: submit_card_swipe_api_v1_sandbox_card_swipe__post
      parameters:
        - required: false
          schema:
            type: string
            title: X-Branch-Name
          name: x-branch-name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardSwipe'
            example:
              card_id: 66f6e46c-f6a1-4af8-a1bd-49666bc01304
              amount_usdc: 100000
        required: true
      responses:
        '202':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/sandbox/generate-card/:
    post:
      tags:
        - Sandbox
      summary: Generate Physical Card From Order
      description: Generate a physical card from a card order with a given `card_order_id`.
      operationId: generate_physical_card_from_order_api_v1_sandbox_generate_card__post
      parameters:
        - required: false
          schema:
            type: string
            title: X-Branch-Name
          name: x-branch-name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePhysicalCardFromOrder'
        required: true
      responses:
        '202':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/sandbox/webhook/:
    post:
      tags:
        - Sandbox
      summary: Trigger Webhook
      description: >-
        Simulates a webhook event according to the payload. This will trigger
        requests to subscribed callback URLs, if any.
      operationId: trigger-webhook
      parameters:
        - required: false
          schema:
            type: string
            title: X-Branch-Name
          name: x-branch-name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetails'
        required: true
      responses:
        '202':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/sandbox/fund/:
    post:
      tags:
        - Sandbox
      summary: Fund Account
      description: >-
        Simulates an ACH credit to the provided Jiko account. Requires a portal
        to use. A portal can be created using the [Create
        Portal](https://docs.jiko.io/reference) endpoint.
      operationId: fund_account_api_v1_sandbox_fund__post
      parameters:
        - required: false
          schema:
            type: string
            title: X-Branch-Name
          name: x-branch-name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundPortalRequest'
        required: true
      responses:
        '202':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
components:
  schemas:
    ACHCounterparty:
      properties:
        time_created:
          type: string
          format: date-time
          title: Time Created
        verification_type:
          $ref: '#/components/schemas/ACHCounterpartyVerificationType'
        status:
          $ref: '#/components/schemas/ACHCounterpartyVerificationStatus'
        account_number:
          type: string
          title: Account Number
        routing_number:
          type: string
          title: Routing Number
        name_on_account:
          type: string
          title: Name On Account
        account_type:
          $ref: '#/components/schemas/ACHCounterpartyAccountType'
        institution_name:
          type: string
          title: Institution Name
        plaid:
          $ref: '#/components/schemas/CounterpartyPlaid'
        micro_deposits:
          $ref: '#/components/schemas/CounterpartyMicroDeposits'
      type: object
      required:
        - time_created
        - verification_type
        - status
        - account_number
        - routing_number
        - name_on_account
        - account_type
        - institution_name
      title: ACHCounterparty
    ACHCounterpartyAccountType:
      type: string
      enum:
        - SAVINGS
        - CHECKING
      title: ACHCounterpartyAccountType
      description: An enumeration.
    ACHCounterpartyVerificationStatus:
      type: string
      enum:
        - IN_PROGRESS
        - FAILED
        - VERIFIED
      title: ACHCounterpartyVerificationStatus
      description: An enumeration.
    ACHCounterpartyVerificationType:
      type: string
      enum:
        - MICRO_DEPOSITS
        - PLAID
        - PRE_VERIFIED
        - INCOMING_WIRE
        - SUPPORTING_DOCUMENTS
      title: ACHCounterpartyVerificationType
      description: An enumeration.
    ACHDirection:
      type: string
      enum:
        - DEBIT
        - CREDIT
      title: ACHDirection
      description: An enumeration.
    ACHIncomingEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/ACHIncomingPayload'
        event_type:
          type: string
          enum:
            - transfers.ach.in.success
            - transfers.ach.in.rejected
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: ACHIncomingEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
    ACHIncomingPayload:
      properties:
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
      type: object
      required:
        - jiko_account_id
      title: ACHIncomingPayload
    ACHOutgoingEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/ACHOutgoingPayload'
        event_type:
          type: string
          enum:
            - transfers.ach.out.success
            - transfers.ach.out.rejected
            - transfers.ach.out.sent
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: ACHOutgoingEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
    ACHOutgoingPayload:
      properties:
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
      type: object
      required:
        - jiko_account_id
      title: ACHOutgoingPayload
    ACHRequest:
      properties:
        counterparty_id:
          type: string
          format: uuid
          title: Counterparty Id
        direction:
          $ref: '#/components/schemas/ACHDirection'
        sec_code:
          allOf:
            - $ref: '#/components/schemas/ACHSECCodeInput'
          default: WEB
        payment_related_information:
          items:
            type: string
          type: array
          title: Payment Related Information
          default: []
        amount_usdc:
          type: integer
          title: Amount Usdc
        company_entry_description:
          type: string
          pattern: ^[ a-zA-Z0-9]{1,10}$
          title: Company Entry Description
          description: >-
            Short description of the purpose of the entry (Maximum of 10
            characters). Required for sec_code `"CCD"` and `"PPD"`. For sec_code
            `"WEB"` the default value for DEBIT is "Funding TX" and "Release TX"
            for CREDIT.
      type: object
      required:
        - counterparty_id
        - direction
        - amount_usdc
      title: ACHRequest
    ACHResponse:
      properties:
        counterparty_id:
          type: string
          format: uuid
          title: Counterparty Id
        direction:
          $ref: '#/components/schemas/ACHDirection'
        sec_code:
          $ref: '#/components/schemas/ACHSECCode'
        payment_related_information:
          items:
            type: string
          type: array
          title: Payment Related Information
        id:
          type: string
          format: uuid
          title: Id
        amount:
          $ref: '#/components/schemas/Amount'
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
        status:
          $ref: '#/components/schemas/ACHStatus'
        time_created:
          type: string
          format: date-time
          title: Time Created
        company_entry_description:
          type: string
          title: Company Entry Description
      type: object
      required:
        - counterparty_id
        - direction
        - sec_code
        - payment_related_information
        - id
        - amount
        - jiko_account_id
        - status
        - time_created
        - company_entry_description
      title: ACHResponse
    ACHSECCode:
      type: string
      enum:
        - CCD
        - PPD
        - WEB
      title: ACHSECCode
      description: An enumeration.
    ACHSECCodeInput:
      type: string
      enum:
        - CCD
        - WEB
      title: ACHSECCodeInput
      description: An enumeration.
    ACHStatus:
      type: string
      enum:
        - PENDING
        - FAILED
        - REJECTED
        - PROCESSED
        - APPROVED
        - IN_TRANSIT
        - CANCELLED
      title: ACHStatus
      description: An enumeration.
    ACHTransactionDetails:
      properties:
        company_name:
          type: string
          title: Company Name
        company_entry_description:
          type: string
          title: Company Entry Description
        individual_identification_number:
          type: string
          title: Individual Identification Number
        trace_number:
          type: string
          title: Trace Number
      type: object
      required:
        - company_name
      title: ACHTransactionDetails
    Account:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
          description: The account name
        total_value:
          allOf:
            - $ref: '#/components/schemas/Amount'
          title: Total Value
          description: Current total value of account
        status:
          allOf:
            - $ref: '#/components/schemas/AccountStatus'
          description: Account status
        portfolio:
          allOf:
            - $ref: '#/components/schemas/Portfolio'
          title: Portfolio
          description: Total liquid cash and holdings
      type: object
      required:
        - id
        - name
        - total_value
        - status
        - portfolio
      title: Account
    AccountStatus:
      type: string
      enum:
        - OPEN
        - CLOSED
        - FROZEN
      title: AccountStatus
      description: An enumeration.
    AccountUsage:
      type: string
      enum:
        - MONEY_STORAGE
      title: AccountUsage
      description: An enumeration.
    Address:
      properties:
        street_address:
          type: string
          maxLength: 250
          title: Street Address
          description: Street address
        street_address2:
          type: string
          maxLength: 250
          title: Street Address2
          description: Apartment, Suite, Box number, etc.
        city:
          type: string
          maxLength: 250
          title: City
          description: City / Town
        postal_code:
          type: string
          maxLength: 50
          title: Postal Code
          description: Postal code / ZIP code
        state:
          $ref: '#/components/schemas/State'
        country:
          type: string
          title: Country
      type: object
      required:
        - street_address
        - city
        - postal_code
        - country
      title: Address
    Agreement:
      properties:
        version:
          type: string
          title: Version
        release_date:
          type: string
          format: date
          title: Release Date
        documents:
          items:
            $ref: '#/components/schemas/AgreementDocument'
          type: array
          title: Documents
      type: object
      required:
        - version
        - release_date
        - documents
      title: Agreement
    AgreementCategory:
      type: string
      enum:
        - BANK
        - BROKERAGE
        - GENERAL
        - E-SIGN
      title: AgreementCategory
      description: An enumeration.
    AgreementConsent:
      properties:
        version:
          type: string
          title: Version
          description: Agreement version
        timestamp:
          type: string
          format: date-time
          title: Timestamp
          description: Timestamp of applicant's acknowledgement of the agreements
      type: object
      required:
        - version
        - timestamp
      title: AgreementConsent
    AgreementDocument:
      properties:
        pdf_download_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Pdf Download Url
        title:
          type: string
          title: Title
        type:
          $ref: '#/components/schemas/AgreementType'
        category:
          $ref: '#/components/schemas/AgreementCategory'
      type: object
      required:
        - pdf_download_url
        - title
        - type
        - category
      title: AgreementDocument
    AgreementType:
      type: string
      enum:
        - PRIVACY_POLICY
        - PRIVACY_NOTICE
        - BUSINESS_CONTINUITY_PLAN
        - FINANCIAL_STATEMENT
        - US_TREASURIES_RISK
        - ELECTRONIC_COMMUNICATIONS
        - TAX_CERTIFICATION_FOR_US_PERSON
        - BANK_ACCOUNT
        - LIMITATIONS
        - BROKERAGE
        - CARD
        - CASHBACK
        - FORM_CRS
        - AUTHORIZED_REPRESENTATIVE_CERTIFICATION
        - TERMS_OF_USE
        - ELECTRONIC_FUND_TRANSFERS
        - TRUTH_IN_SAVINGS
        - FEE_NOTICE
        - FUNDS_AVAILABILITY
        - REGULATION_E
      title: AgreementType
      description: An enumeration.
    Amount:
      properties:
        value:
          type: integer
          title: Value
          description: USD values are always in cents.
        currency:
          type: string
          title: Currency
        formatted:
          type: string
          title: Formatted
          default: ''
      type: object
      required:
        - value
        - currency
      title: Amount
    AnnualPersonalIncome:
      type: string
      enum:
        - BELOW_50K
        - BETWEEN_50K_AND_100K
        - BETWEEN_100K_AND_250K
        - OVER_250K
      title: AnnualPersonalIncome
      description: An enumeration.
    AnnualRevenue:
      type: string
      enum:
        - PRE_REVENUE
        - 5M_OR_LESS
        - BETWEEN_5M_100M
        - 100M_OR_MORE
      title: AnnualRevenue
      description: An enumeration.
    ApplicationIdentificationType:
      type: string
      enum:
        - SSN
        - PASSPORT
        - TIN
        - DRIVERS_LICENSE
      title: ApplicationIdentificationType
      description: An enumeration.
    ApplicationStatus:
      type: string
      enum:
        - CREATED
        - PENDING
        - SUBMITTED
        - DOCUMENTS_NEEDED
        - APPROVED
        - REJECTED
        - MANUAL_REVIEW
      title: ApplicationStatus
      description: An enumeration.
    ApplicationUpdateEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/ApplicationUpdatePayload'
        event_type:
          type: string
          enum:
            - application.approved
            - application.manual_review
            - application.documents_needed
            - application.rejected
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: ApplicationUpdateEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
    ApplicationUpdatePayload:
      properties:
        application_id:
          type: string
          format: uuid
          title: Application Id
      type: object
      required:
        - application_id
      title: ApplicationUpdatePayload
    AveragePersonalNetWorth:
      type: string
      enum:
        - BELOW_50K
        - BETWEEN_50K_AND_200K
        - BETWEEN_200K_AND_1M
        - BETWEEN_1M_AND_5M
        - OVER_5M
      title: AveragePersonalNetWorth
      description: An enumeration.
    Business:
      properties:
        address:
          $ref: '#/components/schemas/GeneralAddress'
        email:
          type: string
          title: Email
        phone_number:
          type: string
          title: Phone Number
        account_status:
          $ref: '#/components/schemas/CustomerAccountStatus'
        type:
          type: string
          enum:
            - BUSINESS
          title: Type
        name:
          type: string
          title: Name
        identification_number:
          $ref: '#/components/schemas/BusinessIdentificationNumber'
      type: object
      required:
        - address
        - email
        - phone_number
        - account_status
        - type
        - name
        - identification_number
      title: Business
    BusinessActivityLocation:
      type: string
      enum:
        - PRIMARILY_US
        - MIX_OF_US_AND_NON_US
        - PRIMARILY_NON_US
      title: BusinessActivityLocation
      description: An enumeration.
    BusinessApplicationRequest:
      properties:
        name:
          type: string
          title: Name
        entity_type:
          $ref: '#/components/schemas/BusinessEntityType'
        doing_business_as:
          type: string
          title: Doing Business As
        identification_number:
          $ref: '#/components/schemas/BusinessIdentificationNumber'
        address:
          $ref: '#/components/schemas/Address'
        website:
          type: string
          title: Website
        contact:
          $ref: '#/components/schemas/BusinessContact'
        formation_date:
          type: string
          title: Formation Date
        risk_info:
          $ref: '#/components/schemas/RiskInfo'
        industry:
          $ref: '#/components/schemas/IndustryInfo'
        agreement_consent:
          $ref: '#/components/schemas/AgreementConsent'
      type: object
      title: BusinessApplicationRequest
    BusinessApplicationResponse:
      properties:
        name:
          type: string
          title: Name
        entity_type:
          $ref: '#/components/schemas/BusinessEntityType'
        doing_business_as:
          type: string
          title: Doing Business As
        identification_number:
          $ref: '#/components/schemas/BusinessIdentificationNumber'
        address:
          $ref: '#/components/schemas/Address'
        website:
          type: string
          title: Website
        contact:
          $ref: '#/components/schemas/BusinessContact'
        formation_date:
          type: string
          title: Formation Date
        risk_info:
          $ref: '#/components/schemas/RiskInfo'
        industry:
          $ref: '#/components/schemas/IndustryInfo'
        agreement_consent:
          $ref: '#/components/schemas/AgreementConsent'
        id:
          type: string
          format: uuid
          title: Id
        time_created:
          type: string
          format: date-time
          title: Time Created
        updated_at:
          type: string
          format: date-time
          title: Updated At
        status:
          $ref: '#/components/schemas/BusinessApplicationStatus'
        exception_reasons:
          items:
            type: string
          type: array
          title: Exception Reasons
          default: []
        customer_id:
          type: string
          format: uuid
          title: Customer Id
          description: '`null` until application status is `APPROVED`'
      type: object
      required:
        - id
        - time_created
        - updated_at
        - status
      title: BusinessApplicationResponse
    BusinessApplicationStatus:
      type: string
      enum:
        - CREATED
        - SUBMITTED
        - CLOSED
        - APPROVED
        - REJECTED
        - MANUAL_REVIEW
        - DOCUMENTS_NEEDED
        - PENDING
      title: BusinessApplicationStatus
      description: An enumeration.
    BusinessContact:
      properties:
        name:
          $ref: '#/components/schemas/Name'
        phone_number:
          type: string
          title: Phone Number
        email:
          type: string
          format: email
          title: Email
      type: object
      title: BusinessContact
    BusinessEntityType:
      type: string
      enum:
        - SOLE_PROPRIETOR
        - CORPORATE
        - LLC
        - PARTNERSHIP
        - INCORPORATED_ASSOCIATION
        - UNINCORPORATED_ASSOCIATION
      title: BusinessEntityType
      description: An enumeration.
    BusinessIdentificationNumber:
      properties:
        identification_number:
          type: string
          title: Identification Number
        type:
          $ref: '#/components/schemas/BusinessIdentificationNumberType'
      type: object
      required:
        - identification_number
        - type
      title: BusinessIdentificationNumber
    BusinessIdentificationNumberType:
      type: string
      enum:
        - TIN
        - EIN
        - NON_US_BUSINESS_ID
      title: BusinessIdentificationNumberType
      description: An enumeration.
    Card:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        name:
          type: string
          title: Name
        status:
          $ref: '#/components/schemas/CardStatus'
        type:
          $ref: '#/components/schemas/CardType'
      type: object
      required:
        - card_id
        - name
        - status
        - type
      title: Card
    CardClosureReason:
      type: string
      enum:
        - LOST
        - STOLEN
        - DAMAGED
        - NEVER_RECEIVED
        - EXPIRED
        - CANCELED
      title: CardClosureReason
      description: An enumeration.
    CardListResponse:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/Card'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: CardListResponse
      description: Base class for cursor_list responses from the Partner API
    CardPinBase:
      properties:
        encrypted_pin:
          type: string
          format: password
          title: Encrypted PIN
          description: 4 digit PIN encrypted by `set_pin` public key
          writeOnly: true
      type: object
      required:
        - encrypted_pin
      title: CardPinBase
    CardPinResponse:
      properties:
        success:
          type: boolean
          title: Success
      type: object
      required:
        - success
      title: CardPinResponse
    CardStatus:
      type: string
      enum:
        - OPEN
        - LOCKED
        - CLOSED
        - NOT_ACTIVATED
        - FROZEN
      title: CardStatus
      description: An enumeration.
    CardStatusResponse:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        status:
          $ref: '#/components/schemas/CardStatus'
      type: object
      required:
        - card_id
        - status
      title: CardStatusResponse
    CardStatusUpdateEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/CardStatusUpdatePayload'
        event_type:
          type: string
          enum:
            - card.status.closed
            - card.status.open
            - card.status.frozen
            - card.status.locked
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: CardStatusUpdateEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
      example:
        event_id: 1a7749fd-a39f-4746-add2-861f270103d5
        timestamp: '2023-01-01T12:00:00+00:00'
        event_type: card.status.closed
        payload:
          card_id: f1246d4a-97b9-461e-8afa-2e8dedfbaece
          status: CLOSED
    CardStatusUpdatePayload:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        status:
          $ref: '#/components/schemas/CardStatus'
      type: object
      required:
        - card_id
        - status
      title: CardStatusUpdatePayload
    CardSwipe:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        amount_usdc:
          type: integer
          exclusiveMinimum: 0
          title: Amount Usdc
      type: object
      required:
        - card_id
        - amount_usdc
      title: CardSwipe
    CardTransactionDetails:
      properties:
        location:
          $ref: '#/components/schemas/TransactionLocation'
        counterparty:
          type: string
          title: Counterparty
        terminal_id:
          type: string
          title: Terminal Id
        merchant_type:
          type: string
          title: Merchant Type
        pre_authorization:
          type: boolean
          title: Pre Authorization
        issue_id:
          type: string
          title: Issue Id
      type: object
      required:
        - pre_authorization
      title: CardTransactionDetails
    CardTransactionEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/CardTransactionPayload'
        event_type:
          type: string
          enum:
            - card.transaction.approved
            - card.transaction.on_hold
            - card.transaction.reversed
            - card.transaction.rejected
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: CardTransactionEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
    CardTransactionPayload:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        amount:
          type: integer
          title: Amount
        account_id:
          type: string
          format: uuid
          title: Account Id
      type: object
      required:
        - card_id
        - amount
        - account_id
      title: CardTransactionPayload
    CardType:
      type: string
      enum:
        - VIRTUAL
        - PHYSICAL
      title: CardType
      description: An enumeration.
    CashBackTransactionDetails:
      properties:
        period:
          type: string
          title: Period
          description: Which period the cash back was calculated for, in YYYY-MM format.
        card_id:
          type: string
          format: uuid
          title: Card Id
      type: object
      required:
        - period
        - card_id
      title: CashBackTransactionDetails
    ChangeCardStatusRequest:
      properties:
        status:
          $ref: '#/components/schemas/SettableCardStatus'
      type: object
      title: ChangeCardStatusRequest
    CloseCardRequest:
      properties:
        closure_reason:
          $ref: '#/components/schemas/CardClosureReason'
        lost_stolen_date:
          type: string
          format: date
          title: Lost Stolen Date
      type: object
      required:
        - closure_reason
      title: CloseCardRequest
    Counterparty:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        type:
          $ref: '#/components/schemas/CounterpartyType'
        ach:
          $ref: '#/components/schemas/ACHCounterparty'
        wire:
          $ref: '#/components/schemas/WireCounterparty'
      type: object
      required:
        - id
        - type
      title: Counterparty
    CounterpartyMicroDeposits:
      properties:
        verification_failure_count:
          type: integer
          title: Verification Failure Count
      type: object
      required:
        - verification_failure_count
      title: CounterpartyMicroDeposits
    CounterpartyPlaid:
      properties:
        mask:
          type: string
          title: Mask
        verification_status:
          $ref: '#/components/schemas/PlaidVerificationStatus'
      type: object
      required:
        - mask
      title: CounterpartyPlaid
    CounterpartyType:
      type: string
      enum:
        - ACH
        - WIRE
      title: CounterpartyType
      description: An enumeration.
    Country:
      type: string
      enum:
        - USA
        - US
      title: Country
      description: An enumeration.
    CreateSubscriptionRequest:
      properties:
        description:
          type: string
          title: Description
          description: A description of the webhook's intended use.
          default: ''
        events:
          items:
            type: string
          type: array
          minItems: 1
          title: Events
          description: Which types of events this webhook should be invoked for.
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
          description: The webhook URL to invoke.
        shared_secret:
          type: string
          minLength: 16
          title: Shared Secret
          description: >-
            The shared secret used by the Partner API to sign requests made to
            the webhook. The shared secret needs to be minimum 16 characters
            long.
      type: object
      required:
        - events
        - url
        - shared_secret
      title: CreateSubscriptionRequest
    CursorListResponse_ACHResponse_:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/ACHResponse'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: CursorListResponse[ACHResponse]
      description: Base class for cursor_list responses from the Partner API
    CursorListResponse_PartnerEvent_:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/PartnerEvent'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: CursorListResponse[PartnerEvent]
      description: Base class for cursor_list responses from the Partner API
    CursorListResponse_Subscription_:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: CursorListResponse[Subscription]
      description: Base class for cursor_list responses from the Partner API
    Customer:
      oneOf:
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Business'
      title: Customer
      discriminator:
        propertyName: type
        mapping:
          INDIVIDUAL: '#/components/schemas/Individual'
          BUSINESS: '#/components/schemas/Business'
    CustomerAccountStatus:
      type: string
      enum:
        - OPEN
        - CLOSED
        - FROZEN
        - PENDING
      title: CustomerAccountStatus
      description: An enumeration.
    CustomerDefundingTransferRequest:
      properties:
        transfer_id:
          type: string
          format: uuid
          title: Transfer Id
          description: The ID for this transfer, auto-generated if not provided.
        description:
          type: string
          maxLength: 100
          title: Description
          description: A description of the transfer, visible on statements.
        from_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        to_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        type:
          type: string
          enum:
            - PARTNER_CUSTOMER_DEFUNDING
          title: Type
          description: Withdraw funds from customer to partner.
        target:
          type: string
          maxLength: 200
          title: Target
          description: >-
            The funds destination belonging to the customer at the Partner
            institution.
        amount_usdc:
          type: integer
          exclusiveMinimum: 0
          title: Amount USDC
          description: The amount, in USD cents. **Deprecated**, use `amount` instead.
          deprecated: true
        amount:
          oneOf:
            - $ref: '#/components/schemas/RequestedAmount'
            - $ref: '#/components/schemas/FullWithdrawal'
          title: Amount
          discriminator:
            propertyName: type
            mapping:
              REQUESTED_AMOUNT: '#/components/schemas/RequestedAmount'
              FULL_WITHDRAWAL: '#/components/schemas/FullWithdrawal'
        async_mode:
          type: boolean
          title: Async Mode
          description: >-
            Uses asynchronous processing, status updates will be delivered via
            webhooks
          default: false
      type: object
      required:
        - from_account
        - to_account
        - type
        - target
      title: Partner-Customer Defunding
      description: >-
        A transfer of customer funds from a customer account at Jiko to a
        partner-owned facilitation account.
      example:
        transfer_id: d64e7b7e-7fd2-44a4-8bfd-68a31252afaa
        description: Withdrawing funds from customer to partner
        from_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        to_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        type: PARTNER_CUSTOMER_DEFUNDING
        target: '123456789'
        amount:
          type: FULL_WITHDRAWAL
    CustomerDefundingTransferResponse:
      properties:
        transfer_id:
          type: string
          format: uuid
          title: Transfer Id
          description: The ID for this transfer, auto-generated if not provided.
        description:
          type: string
          maxLength: 100
          title: Description
          description: A description of the transfer, visible on statements.
        from_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        to_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        type:
          type: string
          enum:
            - PARTNER_CUSTOMER_DEFUNDING
          title: Type
        target:
          type: string
          maxLength: 200
          title: Target
          description: >-
            The funds destination belonging to the customer at the Partner
            institution.
        amount:
          $ref: '#/components/schemas/Amount'
      type: object
      required:
        - from_account
        - to_account
        - type
        - target
        - amount
      title: Partner-Customer Defunding
      description: >-
        A transfer of customer funds from a customer account at Jiko to a
        partner-owned facilitation account.
      example:
        transfer_id: d64e7b7e-7fd2-44a4-8bfd-68a31252afaa
        description: Withdrawing funds from customer to partner
        from_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        to_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        type: PARTNER_CUSTOMER_DEFUNDING
        target: '123456789'
        amount:
          type: FULL_WITHDRAWAL
    CustomerFundingTransferRequest:
      properties:
        transfer_id:
          type: string
          format: uuid
          title: Transfer Id
          description: The ID for this transfer, auto-generated if not provided.
        description:
          type: string
          maxLength: 100
          title: Description
          description: A description of the transfer, visible on statements.
        from_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        to_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        type:
          type: string
          enum:
            - PARTNER_CUSTOMER_FUNDING
          title: Type
          description: Disburse funds from partner to customer.
        source:
          type: string
          maxLength: 200
          title: Source
          description: The source of customer funds at the Partner institution.
        amount_usdc:
          type: integer
          exclusiveMinimum: 0
          title: Amount USDC
          description: The amount, in USD cents. **Deprecated**, use `amount` instead.
          deprecated: true
        amount:
          $ref: '#/components/schemas/RequestedAmount'
        async_mode:
          type: boolean
          title: Async Mode
          description: >-
            Uses asynchronous processing, status updates will be delivered via
            webhooks
          default: false
      type: object
      required:
        - from_account
        - to_account
        - type
        - source
      title: Partner-Customer Funding
      description: >-
        A transfer of customer funds to a customer account at Jiko from a
        partner-owned facilitation account.
      example:
        transfer_id: d4a2d8dd-7def-4545-a062-761683b9aa05
        description: Disbursing funds from partner to customer
        from_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        to_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        type: PARTNER_CUSTOMER_FUNDING
        source: '123456789'
        amount:
          amount_usdc: 100000
          type: REQUESTED_AMOUNT
    CustomerFundingTransferResponse:
      properties:
        transfer_id:
          type: string
          format: uuid
          title: Transfer Id
          description: The ID for this transfer, auto-generated if not provided.
        description:
          type: string
          maxLength: 100
          title: Description
          description: A description of the transfer, visible on statements.
        from_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        to_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        type:
          type: string
          enum:
            - PARTNER_CUSTOMER_FUNDING
          title: Type
        source:
          type: string
          maxLength: 200
          title: Source
          description: The source of customer funds at the Partner institution.
        amount:
          $ref: '#/components/schemas/Amount'
      type: object
      required:
        - from_account
        - to_account
        - type
        - source
        - amount
      title: Partner-Customer Funding
      description: >-
        A transfer of customer funds to a customer account at Jiko from a
        partner-owned facilitation account.
      example:
        transfer_id: d4a2d8dd-7def-4545-a062-761683b9aa05
        description: Disbursing funds from partner to customer
        from_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        to_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        type: PARTNER_CUSTOMER_FUNDING
        source: '123456789'
        amount:
          amount_usdc: 100000
          type: REQUESTED_AMOUNT
    DateOfBirth:
      properties:
        date_of_birth:
          type: string
          format: date
          title: Date Of Birth
      type: object
      required:
        - date_of_birth
      title: DateOfBirth
    Decimal:
      type: string
      title: Decimal
    DeliveryAttemptDetails:
      properties:
        delivery_attempt_id:
          type: string
          format: uuid
          title: Delivery Attempt Id
        subscription_id:
          type: string
          format: uuid
          title: Subscription Id
        success:
          type: boolean
          title: Success
        response_code:
          type: integer
          title: Response Code
        response_message:
          type: string
          title: Response Message
        called_at:
          type: string
          format: date-time
          title: Called At
      type: object
      required:
        - delivery_attempt_id
        - subscription_id
        - success
        - response_code
        - called_at
      title: DeliveryAttemptDetails
    Document:
      properties:
        id:
          type: string
          title: Id
        type:
          $ref: '#/components/schemas/DocumentType'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        exception_reason:
          type: string
          title: Exception Reason
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - type
        - status
      title: Document
    DocumentStatus:
      type: string
      enum:
        - PENDING_UPLOAD
        - PENDING_REVIEW
        - APPROVED
        - INVALID
      title: DocumentStatus
      description: An enumeration.
    DocumentType:
      type: string
      enum:
        - ID_FRONT
        - ID_BACK
        - SELFIE
        - IDENTIFICATION_NUMBER_VERIFICATION
        - ADDRESS_VERIFICATION
        - PASSPORT
        - EIN_CONFIRMATION
        - OPERATING_AGREEMENT
        - PARTNERSHIP_AGREEMENT
        - ARTICLES_OF_INCORPORATION
        - BYLAWS
        - PROOF_OF_501_STATUS
        - ARTICLES_OF_ASSOCIATION
        - CORPORATE_CHARTER
        - TRUST_FORMATION_RECORDS
        - LIST_OF_TRUSTEES
        - LEGAL_ANALYSIS_OF_BUSINESS_MODEL
        - COINS_AND_TOKENS_LISTED_AND_OFFERED
        - COIN_RATING_POLICY_AND_PROCEDURES
        - TYPE_OF_BLOCKCHAIN_ANALYTICS_USED
        - MARKET_MANIPULATION_POLICY
        - BSA_AML_OFAC_POLICIES
        - INDEPENDENT_AML_AUDIT_REPORT
        - BSA_AML_OFAC_INTERNAL_RISK_ASSESSMENT
        - ARTICLES_OF_ORGANIZATION
        - FLOW_OF_FUNDS
        - BANK_STATEMENTS_1
        - BANK_STATEMENTS_2
        - BANK_STATEMENTS_3
        - WIRE_COUNTERPARTY_VERIFICATION
        - OTHER
      title: DocumentType
      description: An enumeration.
    EmployedInvestmentProfile:
      properties:
        income:
          allOf:
            - $ref: '#/components/schemas/AnnualPersonalIncome'
          description: Applicant's estimated annual income in USD.
        net_worth:
          allOf:
            - $ref: '#/components/schemas/AveragePersonalNetWorth'
          description: Applicant's estimated average personal net worth in USD.
        bd_association:
          type: string
          maxLength: 200
          title: Bd Association
          description: >-
            Name of broker-dealer association or employment. Disclosure is
            required by law if applicable, else, leave empty
        director_policy_maker_of_company:
          type: string
          maxLength: 200
          title: Director Policy Maker Of Company
          description: >-
            Name of company where customer is director or policy maker.
            Disclosure is required by law if applicable, otherwise, leave empty
        occupation:
          type: string
          maxLength: 200
          minLength: 2
          title: Occupation
          description: Applicant's occupation
        employment_status:
          type: string
          enum:
            - EMPLOYED
          title: Employment Status
      type: object
      required:
        - income
        - net_worth
        - occupation
        - employment_status
      title: EmployedInvestmentProfile
    EncryptionKeysResponse:
      properties:
        set_pin:
          type: string
          title: Set Pin
          default: ''
          env_names:
            - public_key__set_pin
      additionalProperties: false
      type: object
      title: EncryptionKeysResponse
      description: |-
        Encryption keys are currently stored as environment variables.

        Variables are declared in
        `services/partner-api/secret-(dev|staging|sandbox|partners).yaml`
    EventDetails:
      oneOf:
        - $ref: '#/components/schemas/ApplicationUpdateEvent'
        - $ref: '#/components/schemas/CardStatusUpdateEvent'
        - $ref: '#/components/schemas/ACHIncomingEvent'
        - $ref: '#/components/schemas/ACHOutgoingEvent'
        - $ref: '#/components/schemas/CardTransactionEvent'
        - $ref: '#/components/schemas/OutgoingWireEvent'
        - $ref: '#/components/schemas/OnUsTransferEvent'
      title: EventDetails
      discriminator:
        propertyName: event_type
        mapping:
          application.approved: '#/components/schemas/ApplicationUpdateEvent'
          application.manual_review: '#/components/schemas/ApplicationUpdateEvent'
          application.documents_needed: '#/components/schemas/ApplicationUpdateEvent'
          application.rejected: '#/components/schemas/ApplicationUpdateEvent'
          card.status.closed: '#/components/schemas/CardStatusUpdateEvent'
          card.status.open: '#/components/schemas/CardStatusUpdateEvent'
          card.status.frozen: '#/components/schemas/CardStatusUpdateEvent'
          card.status.locked: '#/components/schemas/CardStatusUpdateEvent'
          transfers.ach.in.success: '#/components/schemas/ACHIncomingEvent'
          transfers.ach.in.rejected: '#/components/schemas/ACHIncomingEvent'
          transfers.ach.out.success: '#/components/schemas/ACHOutgoingEvent'
          transfers.ach.out.rejected: '#/components/schemas/ACHOutgoingEvent'
          transfers.ach.out.sent: '#/components/schemas/ACHOutgoingEvent'
          card.transaction.approved: '#/components/schemas/CardTransactionEvent'
          card.transaction.on_hold: '#/components/schemas/CardTransactionEvent'
          card.transaction.reversed: '#/components/schemas/CardTransactionEvent'
          card.transaction.rejected: '#/components/schemas/CardTransactionEvent'
          transfers.wire.out.success: '#/components/schemas/OutgoingWireEvent'
          transfers.wire.out.processing: '#/components/schemas/OutgoingWireEvent'
          transfers.wire.out.rejected: '#/components/schemas/OutgoingWireEvent'
          transfers.on-us.success: '#/components/schemas/OnUsTransferEvent'
          transfers.on-us.processing: '#/components/schemas/OnUsTransferEvent'
          transfers.on-us.rejected: '#/components/schemas/OnUsTransferEvent'
    EventListResponse:
      properties:
        offset:
          type: integer
          title: Offset
        count:
          type: integer
          title: Count
        items:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
          title: Items
          description: List of available events to subscribe to
        object_type:
          type: string
          title: Object Type
          default: List
      type: object
      required:
        - offset
        - count
        - items
      title: EventListResponse
      description: >-
        Generic models are only supported in pydantic for python 3.7+, so until
        then

        items will be of type Any. As such, this class needs to be subclassed

        and its item field overridden in it using the proper type.
    EventType:
      properties:
        event:
          type: string
          title: Event
      type: object
      required:
        - event
      title: EventType
    Fee:
      properties:
        type:
          type: string
          enum:
            - AUM_FEE
          title: Type
        amount:
          $ref: '#/components/schemas/Amount'
      type: object
      required:
        - type
        - amount
      title: Fee
    FirstMonthDepositAmount:
      type: string
      enum:
        - 1M_OR_LESS
        - BETWEEN_1M_AND_5M
        - BETWEEN_5M_AND_20M
        - BETWEEN_20M_AND_50M
        - 50M_OR_MORE
      title: FirstMonthDepositAmount
      description: An enumeration.
    FullWithdrawal:
      properties:
        type:
          type: string
          enum:
            - FULL_WITHDRAWAL
          title: Type
      type: object
      required:
        - type
      title: Full withdrawal
      description: Fully liquidates all T-Bills from the source account.
    FundPortalRequest:
      properties:
        account_id:
          type: string
          format: uuid
          title: Account Id
        amount_usdc:
          type: integer
          exclusiveMaximum: 5000000
          exclusiveMinimum: 0
          title: Amount Usdc
        company_name:
          type: string
          maxLength: 16
          title: Company Name
          default: FakeCompany
        count:
          type: integer
          exclusiveMaximum: 10
          exclusiveMinimum: 0
          title: Count
          default: 1
      type: object
      required:
        - account_id
        - amount_usdc
      title: FundPortalRequest
    GeneralAddress:
      properties:
        street_address:
          type: string
          maxLength: 250
          title: Street Address
          description: Street address
        street_address2:
          type: string
          maxLength: 250
          title: Street Address2
          description: Apartment, Suite, Box number, etc.
        city:
          type: string
          maxLength: 250
          title: City
          description: City / Town
        postal_code:
          type: string
          maxLength: 50
          title: Postal Code
          description: Postal code / ZIP code
        state:
          type: string
          title: State
          description: 'State (Postal Abbreviations. Example: "AL", "NJ", "OH")'
        country:
          type: string
          title: Country
          description: 'A ISO-3166 Alpha-2 country code (Abbreviated. Example: "US")'
      type: object
      required:
        - street_address
        - city
        - postal_code
        - country
      title: GeneralAddress
    GeneratePhysicalCardFromOrder:
      properties:
        card_order_id:
          type: string
          format: uuid
          title: Card Order Id
      type: object
      required:
        - card_order_id
      title: GeneratePhysicalCardFromOrder
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ISOAddress:
      properties:
        street_address:
          type: string
          maxLength: 250
          title: Street Address
          description: Street address
        street_address2:
          type: string
          maxLength: 250
          title: Street Address2
          description: Apartment, Suite, Box number, etc.
        city:
          type: string
          maxLength: 250
          title: City
          description: City / Town
        postal_code:
          type: string
          maxLength: 50
          title: Postal Code
          description: Postal code / ZIP code
        state:
          type: string
          title: State
          description: 'State (Postal Abbreviations. Example: "AL", "NJ", "OH")'
        country:
          type: string
          title: Country
          description: 'A ISO-3166 Alpha-2 country code (Abbreviated. Example: "US")'
      type: object
      required:
        - street_address
        - city
        - postal_code
        - country
      title: ISOAddress
    IndependentInvestmentProfile:
      properties:
        income:
          allOf:
            - $ref: '#/components/schemas/AnnualPersonalIncome'
          description: Applicant's estimated annual income in USD.
        net_worth:
          allOf:
            - $ref: '#/components/schemas/AveragePersonalNetWorth'
          description: Applicant's estimated average personal net worth in USD.
        bd_association:
          type: string
          maxLength: 200
          title: Bd Association
          description: >-
            Name of broker-dealer association or employment. Disclosure is
            required by law if applicable, else, leave empty
        director_policy_maker_of_company:
          type: string
          maxLength: 200
          title: Director Policy Maker Of Company
          description: >-
            Name of company where customer is director or policy maker.
            Disclosure is required by law if applicable, otherwise, leave empty
        occupation:
          type: string
          maxLength: 200
          title: Occupation
          description: Applicant's occupation
        employment_status:
          type: string
          enum:
            - INDEPENDENT
          title: Employment Status
      type: object
      required:
        - income
        - net_worth
        - employment_status
      title: IndependentInvestmentProfile
    Individual:
      properties:
        address:
          $ref: '#/components/schemas/GeneralAddress'
        email:
          type: string
          title: Email
        phone_number:
          type: string
          title: Phone Number
        account_status:
          $ref: '#/components/schemas/CustomerAccountStatus'
        type:
          type: string
          enum:
            - INDIVIDUAL
          title: Type
        name:
          $ref: '#/components/schemas/Name'
        date_of_birth:
          type: string
          format: date
          title: Date Of Birth
      type: object
      required:
        - address
        - email
        - phone_number
        - account_status
        - type
        - name
        - date_of_birth
      title: Individual
    IndividualIdentificationNumber:
      properties:
        identification_number:
          type: string
          title: Identification Number
        identification_type:
          $ref: '#/components/schemas/IndividualIdentificationNumberType'
      type: object
      required:
        - identification_number
        - identification_type
      title: IndividualIdentificationNumber
    IndividualIdentificationNumberMasked:
      properties:
        identification_number:
          type: string
          title: Identification Number
        identification_type:
          $ref: '#/components/schemas/IndividualIdentificationNumberType'
      type: object
      required:
        - identification_number
        - identification_type
      title: IndividualIdentificationNumberMasked
    IndividualIdentificationNumberType:
      type: string
      enum:
        - SSN
        - PASSPORT
        - NON_US_ID
      title: IndividualIdentificationNumberType
      description: An enumeration.
    Industry:
      type: string
      enum:
        - ACCOUNTING_AND_BOOKKEEPING
        - ADVERTISING
        - ART
        - ATM_OPERATOR
        - BEAUTY_AND_COSMETIC_SERVICES
        - BIOTECH
        - BUSINESS_MANAGEMENT
        - CLEANING_SERVICES
        - CONSTRUCTION
        - CONSULTING
        - CRYPTOCURRENCY
        - DESIGN
        - ECOMMERCE
        - EDUCATION
        - ENERGY
        - ENTERTAINMENT
        - FINANCIAL_SERVICES
        - FITNESS
        - FOOD
        - GAMBLING
        - HARDWARE
        - HEALTHCARE
        - HOSPITALITY
        - INSURANCE
        - INVESTMENTS
        - LEGAL_SERVICES
        - MARKETING
        - MARKETPLACE
        - NONPROFIT
        - OTHER
        - PARKING_GARAGE
        - PROFESSIONAL_TECHNICAL_OR_MECHANICAL_SERVICES
        - REAL_ESTATE
        - RECRUITING
        - RESEARCH
        - RESTAURANT
        - RETAIL_STORES
        - SECURITY
        - SHIPPING_WAREHOUSING
        - SOFTWARE
        - SPORTS_TEAM
        - SUPPORT_SERVICES
        - TECHNOLOGY
        - TRANSPORTATION
        - TRAVEL
        - WHOLESALE
        - VENDING_MACHINE_OPERATOR
        - WASTE_MANAGEMENT
      title: Industry
      description: An enumeration.
    IndustryInfo:
      properties:
        industry:
          $ref: '#/components/schemas/Industry'
        other_industry:
          type: string
          title: Other Industry
      type: object
      title: IndustryInfo
    InternalReallocationTransferRequest:
      properties:
        transfer_id:
          type: string
          format: uuid
          title: Transfer Id
          description: The ID for this transfer, auto-generated if not provided.
        description:
          type: string
          maxLength: 100
          title: Description
          description: A description of the transfer, visible on statements.
        from_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        to_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        type:
          type: string
          enum:
            - INTERNAL_REALLOCATION
          title: Type
          description: Move funds between accounts belonging to the same customer.
        amount_usdc:
          type: integer
          exclusiveMinimum: 0
          title: Amount USDC
          description: The amount, in USD cents. **Deprecated**, use `amount` instead.
          deprecated: true
        amount:
          oneOf:
            - $ref: '#/components/schemas/RequestedAmount'
            - $ref: '#/components/schemas/FullWithdrawal'
          title: Amount
          discriminator:
            propertyName: type
            mapping:
              REQUESTED_AMOUNT: '#/components/schemas/RequestedAmount'
              FULL_WITHDRAWAL: '#/components/schemas/FullWithdrawal'
        async_mode:
          type: boolean
          title: Async Mode
          description: >-
            Uses asynchronous processing, status updates will be delivered via
            webhooks
          default: false
      type: object
      required:
        - from_account
        - to_account
        - type
      title: Internal Reallocation
      example:
        transfer_id: cbb6cfce-f207-45e7-a6b3-1055ab43db51
        description: Moving funds between accounts belonging to the same customer
        from_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        to_account:
          id: 991dd8b5-f103-4158-8c6b-84480cb43652
          type: JIKO_ACCOUNT
        type: INTERNAL_REALLOCATION
        amount:
          type: REQUESTED_AMOUNT
          amount_usdc: 10000
    InternalReallocationTransferResponse:
      properties:
        transfer_id:
          type: string
          format: uuid
          title: Transfer Id
          description: The ID for this transfer, auto-generated if not provided.
        description:
          type: string
          maxLength: 100
          title: Description
          description: A description of the transfer, visible on statements.
        from_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        to_account:
          $ref: '#/components/schemas/OnUsJikoAccountCounterparty'
        type:
          type: string
          enum:
            - INTERNAL_REALLOCATION
          title: Type
        amount:
          $ref: '#/components/schemas/Amount'
      type: object
      required:
        - from_account
        - to_account
        - type
        - amount
      title: Internal Reallocation
      example:
        transfer_id: cbb6cfce-f207-45e7-a6b3-1055ab43db51
        description: Moving funds between accounts belonging to the same customer
        from_account:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: JIKO_ACCOUNT
        to_account:
          id: 991dd8b5-f103-4158-8c6b-84480cb43652
          type: JIKO_ACCOUNT
        type: INTERNAL_REALLOCATION
        amount:
          type: REQUESTED_AMOUNT
          amount_usdc: 10000
    InternationalApplication:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        time_created:
          type: string
          format: date-time
          title: Time Created
        updated_at:
          type: string
          format: date-time
          title: Updated At
        phone_number:
          type: string
          title: Phone Number
          description: >-
            Applicant's phone number. **Note**: It will be required to include
            country codes in accordance to the E.164 spec in a future release,
            or `^\+[1-9]\d{1,14}$`.
          default_region: US
        agreement_consent:
          $ref: '#/components/schemas/AgreementConsent'
        exception_reasons:
          items:
            type: string
          type: array
          title: Exception Reasons
          default: []
        email:
          type: string
          format: email
          title: Email
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        name:
          $ref: '#/components/schemas/Name'
        date_of_birth:
          $ref: '#/components/schemas/DateOfBirth'
        investment_profile:
          $ref: '#/components/schemas/InvestmentProfile'
        customer_id:
          type: string
          format: uuid
          title: Customer Id
          description: '`null` until application status is `APPROVED`'
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
          title: Documents
        id_verification_documents_needed:
          type: boolean
          title: Id Verification Documents Needed
        identification_number_verification_document_needed:
          type: boolean
          title: Identification Number Verification Document Needed
        address_verification_document_needed:
          type: boolean
          title: Address Verification Document Needed
        address:
          allOf:
            - $ref: '#/components/schemas/ISOAddress'
          title: Address
          description: Address object
        citizenship_country:
          type: string
          title: Citizenship Country
          description: >-
            The applicant's citizenship country in ISO-3166 Alpha-2 format.
            **Note:** This field will be made mandatory in a future release.
          default: US
      type: object
      required:
        - id
        - time_created
        - updated_at
        - phone_number
        - agreement_consent
        - email
        - status
        - id_verification_documents_needed
        - identification_number_verification_document_needed
        - address_verification_document_needed
        - address
      title: InternationalApplication
    InternationalApplicationRequest:
      properties:
        identification_number:
          type: string
          title: Identification Number
          description: Applicant's Social Security Number
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
          title: Name
          description: Applicant's full name
        email:
          type: string
          format: email
          title: Email
          description: Applicant's email address
        date_of_birth:
          type: string
          format: date
          title: Date Of Birth
          description: Applicant's date of birth
        investment_profile:
          $ref: '#/components/schemas/InvestmentProfile'
        agreement_consent:
          allOf:
            - $ref: '#/components/schemas/AgreementConsent'
          title: Agreement Consent
          description: Consent object for agreements
        originally_onboarded_at:
          type: string
          format: date-time
          title: Originally Onboarded At
          description: Original onboarding time of applicant
        identification_type:
          allOf:
            - $ref: '#/components/schemas/ApplicationIdentificationType'
          description: >-
            Type type of identification provided in the `identification_number`
            field. The options are 
             * `SSN`: Social security number
             * `TIN`: Tax ID number
             * `DRIVERS_LICENSE`: A driver's license number
             * `PASSPORT`: A passport number 

             **Note:** This field will be made mandatory in a future release. Currently defaults to `SSN`.
          default: SSN
        address:
          allOf:
            - $ref: '#/components/schemas/ISOAddress'
          title: Address
          description: Address object
        phone_number:
          type: string
          title: Phone Number
          description: >-
            Applicant's phone number. **Note**: It will be required to include
            country codes in accordance to the E.164 spec in a future release,
            or `^\+[1-9]\d{1,14}$`.
          default_region: US
        citizenship_country:
          type: string
          title: Citizenship Country
          description: >-
            The applicant's citizenship country in ISO-3166 Alpha-2 format.
            **Note:** This field will be made mandatory in a future release.
          default: US
      type: object
      required:
        - identification_number
        - name
        - email
        - date_of_birth
        - investment_profile
        - agreement_consent
        - address
        - phone_number
      title: InternationalApplicationRequest
    InvestmentProfile:
      oneOf:
        - $ref: '#/components/schemas/EmployedInvestmentProfile'
        - $ref: '#/components/schemas/IndependentInvestmentProfile'
        - $ref: '#/components/schemas/RetiredInvestmentProfile'
        - $ref: '#/components/schemas/StudentInvestmentProfile'
        - $ref: '#/components/schemas/UnemployedInvestmentProfile'
      title: InvestmentProfile
      description: >-
        Investment profile contains information required by FINRA Suitability
        Rule 2111
      discriminator:
        propertyName: employment_status
        mapping:
          EMPLOYED: '#/components/schemas/EmployedInvestmentProfile'
          INDEPENDENT: '#/components/schemas/IndependentInvestmentProfile'
          RETIRED: '#/components/schemas/RetiredInvestmentProfile'
          STUDENT: '#/components/schemas/StudentInvestmentProfile'
          UNEMPLOYED: '#/components/schemas/UnemployedInvestmentProfile'
    ListAccountsResponse:
      properties:
        offset:
          type: integer
          title: Offset
        count:
          type: integer
          title: Count
        items:
          items:
            $ref: '#/components/schemas/Account'
          type: array
          title: Items
          description: Customer accounts
        object_type:
          type: string
          title: Object Type
          default: List
      type: object
      required:
        - offset
        - count
        - items
      title: ListAccountsResponse
      description: >-
        Generic models are only supported in pydantic for python 3.7+, so until
        then

        items will be of type Any. As such, this class needs to be subclassed

        and its item field overridden in it using the proper type.
    ListCounterpartiesResponse:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/Counterparty'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: ListCounterpartiesResponse
      description: Base class for cursor_list responses from the Partner API
    ListPortalsResponse:
      properties:
        count:
          type: integer
          title: Count
        portals:
          items:
            $ref: '#/components/schemas/Portal'
          type: array
          minItems: 0
          title: Portals
        object_type:
          type: string
          title: Object Type
          default: List
      type: object
      required:
        - count
        - portals
      title: ListPortalsResponse
    LoginInput:
      properties:
        username:
          type: string
          maxLength: 128
          title: Username
        password:
          type: string
          maxLength: 128
          title: Password
      type: object
      required:
        - username
        - password
      title: LoginInput
    LoginResponse:
      properties:
        token:
          type: string
          title: Token
        expires:
          type: string
          format: date-time
          title: Expires
      type: object
      required:
        - token
        - expires
      title: LoginResponse
    MinimalPhysicalCardOrderResponse:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        card_order_id:
          type: string
          format: uuid
          title: Card Order Id
        status:
          $ref: '#/components/schemas/PhysicalCardOrderStatus'
      type: object
      required:
        - card_order_id
        - status
      title: MinimalPhysicalCardOrderResponse
    MonthlyTransactions:
      type: string
      enum:
        - 5_OR_LESS
        - BETWEEN_5_AND_15
        - 15_OR_MORE
      title: MonthlyTransactions
      description: An enumeration.
    Name:
      properties:
        first_name:
          type: string
          maxLength: 50
          title: First Name
          description: First Name
        middle_name:
          type: string
          maxLength: 50
          title: Middle Name
          description: Middle Name
        last_name:
          type: string
          maxLength: 50
          title: Last Name
          description: Last Name
      type: object
      required:
        - first_name
        - last_name
      title: Name
    OnUsJikoAccountCounterparty:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        type:
          type: string
          enum:
            - JIKO_ACCOUNT
          title: Type
      type: object
      required:
        - id
        - type
      title: OnUsJikoAccountCounterparty
    OnUsTransactionDetails:
      properties:
        on_us_transfer_id:
          type: string
          title: On Us Transfer Id
        on_us_transfer_type:
          type: string
          title: On Us Transfer Type
        source:
          type: string
          title: Source
        target:
          type: string
          title: Target
      type: object
      required:
        - on_us_transfer_id
        - on_us_transfer_type
      title: OnUsTransactionDetails
    OnUsTransfer:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        status:
          $ref: '#/components/schemas/OnUsTransferStatus'
        reason:
          $ref: '#/components/schemas/TransferStateReason'
        transfer:
          $ref: '#/components/schemas/OnUsTransferDetails'
        fees:
          items:
            $ref: '#/components/schemas/Fee'
          type: array
          title: Fees
      type: object
      required:
        - id
        - status
        - transfer
        - fees
      title: OnUsTransfer
    OnUsTransferDetails:
      oneOf:
        - $ref: '#/components/schemas/CustomerFundingTransferResponse'
        - $ref: '#/components/schemas/CustomerDefundingTransferResponse'
        - $ref: '#/components/schemas/InternalReallocationTransferResponse'
      title: OnUsTransferDetails
      discriminator:
        propertyName: type
        mapping:
          PARTNER_CUSTOMER_FUNDING: '#/components/schemas/CustomerFundingTransferResponse'
          PARTNER_CUSTOMER_DEFUNDING: '#/components/schemas/CustomerDefundingTransferResponse'
          INTERNAL_REALLOCATION: '#/components/schemas/InternalReallocationTransferResponse'
    OnUsTransferDetailsRequest:
      oneOf:
        - $ref: '#/components/schemas/CustomerFundingTransferRequest'
        - $ref: '#/components/schemas/CustomerDefundingTransferRequest'
        - $ref: '#/components/schemas/InternalReallocationTransferRequest'
      title: OnUsTransferDetailsRequest
      discriminator:
        propertyName: type
        mapping:
          PARTNER_CUSTOMER_FUNDING: '#/components/schemas/CustomerFundingTransferRequest'
          PARTNER_CUSTOMER_DEFUNDING: '#/components/schemas/CustomerDefundingTransferRequest'
          INTERNAL_REALLOCATION: '#/components/schemas/InternalReallocationTransferRequest'
    OnUsTransferEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/OnUsTransferPayload'
        event_type:
          type: string
          enum:
            - transfers.on-us.success
            - transfers.on-us.processing
            - transfers.on-us.rejected
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: OnUsTransferEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
    OnUsTransferPayload:
      properties:
        on_us_id:
          type: string
          format: uuid
          title: On Us Id
        origin_account_id:
          type: string
          format: uuid
          title: Origin Account Id
        destination_account_id:
          type: string
          format: uuid
          title: Destination Account Id
      type: object
      required:
        - on_us_id
        - origin_account_id
        - destination_account_id
      title: OnUsTransferPayload
    OnUsTransferStatus:
      type: string
      enum:
        - PENDING
        - COMPLETED
        - REJECTED
      title: OnUsTransferStatus
      description: An enumeration.
    Order:
      type: string
      enum:
        - desc
        - asc
      title: Order
      description: An enumeration.
    OutgoingWireEvent:
      properties:
        event_id:
          type: string
          format: uuid
          title: Event Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        payload:
          $ref: '#/components/schemas/WireOutgoingPayload'
        event_type:
          type: string
          enum:
            - transfers.wire.out.success
            - transfers.wire.out.processing
            - transfers.wire.out.rejected
          title: Event Type
      type: object
      required:
        - event_id
        - timestamp
        - payload
        - event_type
      title: OutgoingWireEvent
      description: |-
        The schema of items in `payload` should reflect any new additions or
        updates made in `src/proto/partner_events/grpc_contract/contract.proto`

        e.g: ACHOutgoingPayload

        `PartnerEvent` serialization could fail otherwise.
    PEMEncodedPublicKey:
      type: string
      title: PEMEncodedPublicKey
    PartnerEvent:
      properties:
        event:
          $ref: '#/components/schemas/EventDetails'
        delivery_attempts:
          items:
            $ref: '#/components/schemas/DeliveryAttemptDetails'
          type: array
          title: Delivery Attempts
      type: object
      required:
        - event
        - delivery_attempts
      title: PartnerEvent
    PhysicalCardOrder:
      properties:
        name_on_card:
          type: string
          maxLength: 100
          title: Name On Card
          description: Card holder's full name. Should be a maximum of 26 characters.
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
      type: object
      required:
        - name_on_card
        - shipping_address
      title: PhysicalCardOrder
    PhysicalCardOrderListResponse:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/MinimalPhysicalCardOrderResponse'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: PhysicalCardOrderListResponse
      description: Base class for cursor_list responses from the Partner API
    PhysicalCardOrderResponse:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        card_order_id:
          type: string
          format: uuid
          title: Card Order Id
        status:
          $ref: '#/components/schemas/PhysicalCardOrderStatus'
        name_on_card:
          type: string
          title: Name On Card
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
      type: object
      required:
        - card_order_id
        - status
        - name_on_card
        - shipping_address
      title: PhysicalCardOrderResponse
    PhysicalCardOrderStatus:
      type: string
      enum:
        - INITIAL
        - CARD_CREATED
        - ORDERED
        - RECEIVED
      title: PhysicalCardOrderStatus
      description: An enumeration.
    PlaidCreateCounterparties:
      properties:
        public_token:
          type: string
          title: Public Token
        accounts:
          items:
            $ref: '#/components/schemas/PlaidCreateCounterpartiesAccount'
          type: array
          title: Accounts
        institution_id:
          type: string
          title: Institution Id
      type: object
      required:
        - public_token
        - accounts
      title: PlaidCreateCounterparties
    PlaidCreateCounterpartiesAccount:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        mask:
          type: string
          title: Mask
      type: object
      required:
        - id
      title: PlaidCreateCounterpartiesAccount
    PlaidCreateCounterpartiesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Counterparty'
          type: array
          title: Items
      type: object
      required:
        - items
      title: PlaidCreateCounterpartiesResponse
    PlaidLinkToken:
      properties:
        link_token:
          type: string
          title: Link Token
        expiration:
          type: string
          title: Expiration
      type: object
      required:
        - link_token
        - expiration
      title: PlaidLinkToken
    PlaidLinkTokenRequest:
      properties:
        client_name:
          type: string
          minLength: 1
          title: Client Name
        redirect_uri:
          type: string
          title: Redirect Uri
          description: '**Mutually exclusive with `android_package_name`**'
        android_package_name:
          type: string
          title: Android Package Name
          description: '**Mutually exclusive with `redirect_uri`**'
        counterparty_id:
          type: string
          format: uuid
          title: Counterparty Id
      type: object
      required:
        - client_name
      title: PlaidLinkTokenRequest
    PlaidVerificationStatus:
      type: string
      enum:
        - PENDING_AUTOMATIC_VERIFICATION
        - PENDING_MANUAL_VERIFICATION
        - AUTOMATICALLY_VERIFIED
        - MANUALLY_VERIFIED
        - VERIFICATION_EXPIRED
        - VERIFICATION_FAILED
      title: PlaidVerificationStatus
      description: An enumeration.
    Portal:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
        routing_number:
          type: string
          title: Routing Number
          description: Routing number
        account_number:
          type: string
          title: Account Number
          description: Account number
        status:
          allOf:
            - $ref: '#/components/schemas/PortalStatus'
          description: Portal status
        name:
          type: string
          title: Name
          description: Portal name
      type: object
      required:
        - id
        - jiko_account_id
        - routing_number
        - account_number
        - status
        - name
      title: Portal
    PortalCreateRequest:
      properties:
        name:
          type: string
          maxLength: 128
          title: Name
      type: object
      required:
        - name
      title: PortalCreateRequest
    PortalStatus:
      type: string
      enum:
        - OPEN
        - CLOSED
      title: PortalStatus
      description: An enumeration.
    PortalUpdateRequest:
      properties:
        name:
          type: string
          maxLength: 50
          title: Name
          description: Portal name
      type: object
      required:
        - name
      title: PortalUpdateRequest
    Portfolio:
      properties:
        securities:
          items:
            $ref: '#/components/schemas/Security'
          type: array
          title: Securities
          description: Securities currently held by the brokerage account
        cash:
          allOf:
            - $ref: '#/components/schemas/Amount'
          title: Cash
          description: Cash currently held in the brokerage account.
        all_time_earnings:
          allOf:
            - $ref: '#/components/schemas/Amount'
          title: All Time Earnings
          description: All time portfolio earnings
      type: object
      required:
        - securities
        - cash
        - all_time_earnings
      title: Portfolio
    PublicKeyRequest:
      properties:
        public_key:
          allOf:
            - $ref: '#/components/schemas/PEMEncodedPublicKey'
          title: Public Key
          description: >-
            Single-use 4096-bit PEM-encoded RSA public-key in PKCS#1 or PKCS#1.5
            format
          min_bytes: 4096
      type: object
      required:
        - public_key
      title: PublicKeyRequest
    RelatedPartyApplicationRequest:
      properties:
        name:
          $ref: '#/components/schemas/Name'
        address:
          $ref: '#/components/schemas/Address'
        date_of_birth:
          type: string
          title: Date Of Birth
        identification_number:
          $ref: '#/components/schemas/IndividualIdentificationNumber'
        phone_number:
          type: string
          title: Phone Number
        title:
          type: string
          title: Title
        roles:
          items:
            $ref: '#/components/schemas/RelatedPartyRole'
          type: array
        ownership_percentage:
          type: string
          title: Ownership Percentage
        citizenship:
          type: string
          title: Citizenship
        email:
          type: string
          title: Email
      type: object
      title: RelatedPartyApplicationRequest
    RelatedPartyApplicationResponse:
      properties:
        name:
          $ref: '#/components/schemas/Name'
        address:
          $ref: '#/components/schemas/Address'
        date_of_birth:
          type: string
          title: Date Of Birth
        identification_number:
          $ref: '#/components/schemas/IndividualIdentificationNumberMasked'
        phone_number:
          type: string
          title: Phone Number
        title:
          type: string
          title: Title
        roles:
          items:
            $ref: '#/components/schemas/RelatedPartyRole'
          type: array
        ownership_percentage:
          type: string
          title: Ownership Percentage
        citizenship:
          type: string
          title: Citizenship
        email:
          type: string
          title: Email
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - id
      title: RelatedPartyApplicationResponse
    RelatedPartyRole:
      type: string
      enum:
        - CONTROL_PERSON
        - AUTHORIZED_REPRESENTATIVE
      title: RelatedPartyRole
      description: An enumeration.
    RequestedAmount:
      properties:
        amount_usdc:
          type: integer
          exclusiveMinimum: 0
          title: Amount USDC
        type:
          type: string
          enum:
            - REQUESTED_AMOUNT
          title: Type
      type: object
      required:
        - amount_usdc
        - type
      title: Requested amount
      description: Creates a transfer for a specific, requested amount.
    RetiredInvestmentProfile:
      properties:
        income:
          allOf:
            - $ref: '#/components/schemas/AnnualPersonalIncome'
          description: Applicant's estimated annual income in USD.
        net_worth:
          allOf:
            - $ref: '#/components/schemas/AveragePersonalNetWorth'
          description: Applicant's estimated average personal net worth in USD.
        bd_association:
          type: string
          maxLength: 200
          title: Bd Association
          description: >-
            Name of broker-dealer association or employment. Disclosure is
            required by law if applicable, else, leave empty
        director_policy_maker_of_company:
          type: string
          maxLength: 200
          title: Director Policy Maker Of Company
          description: >-
            Name of company where customer is director or policy maker.
            Disclosure is required by law if applicable, otherwise, leave empty
        occupation:
          type: string
          maxLength: 200
          title: Occupation
          description: Applicant's occupation
        employment_status:
          type: string
          enum:
            - RETIRED
          title: Employment Status
      type: object
      required:
        - income
        - net_worth
        - employment_status
      title: RetiredInvestmentProfile
    RiskCategory:
      type: string
      enum:
        - INTERNET_GAMBLING
        - CANNABIS
        - CRYPTOCURRENCY
        - CROWDFUNDING
        - FINANCIAL_OR_MONEY_MOVEMENT
      title: RiskCategory
      description: An enumeration.
    RiskInfo:
      properties:
        risk_categories:
          items:
            $ref: '#/components/schemas/RiskCategory'
          type: array
        company_mission:
          type: string
          title: Company Mission
        has_current_enforcement_actions:
          type: boolean
          title: Has Current Enforcement Actions
        primary_regulator:
          type: string
          title: Primary Regulator
        business_activity_location:
          $ref: '#/components/schemas/BusinessActivityLocation'
        source_of_funds:
          $ref: '#/components/schemas/SourceOfFunds'
        account_usage:
          $ref: '#/components/schemas/AccountUsage'
        annual_revenue:
          $ref: '#/components/schemas/AnnualRevenue'
        monthly_transactions:
          $ref: '#/components/schemas/MonthlyTransactions'
        first_month_deposit:
          $ref: '#/components/schemas/FirstMonthDepositAmount'
      type: object
      title: RiskInfo
    Security:
      properties:
        tradable_id:
          type: string
          format: uuid
          title: Tradable Id
        security_type:
          $ref: '#/components/schemas/SecurityType'
        quantity:
          type: integer
          exclusiveMinimum: 0
          title: Quantity
          description: Number of securities
        market_value:
          allOf:
            - $ref: '#/components/schemas/Amount'
          title: Market Value
          description: The current market value of the securities
        external_id:
          type: string
          title: External Id
        maturity_date:
          type: string
          format: date
          title: Maturity Date
          description: Due date of the fixed income instrument
        yield_to_maturity:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          title: Yield To Maturity
          description: Rate of return if the security is held to the maturity date
        ask:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          title: Ask
          description: The current price the account is willing to sell the security at
        bid:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          title: Bid
          description: The current price the market is willing to pay for the security
        description:
          type: string
          title: Description
          description: A description of the security
      type: object
      required:
        - tradable_id
        - security_type
        - quantity
        - market_value
        - external_id
        - maturity_date
        - yield_to_maturity
        - ask
        - bid
        - description
      title: Security
    SecurityType:
      type: string
      enum:
        - FIXED_INCOME
        - OTHER
      title: SecurityType
      description: An enumeration.
    SettableCardStatus:
      type: string
      enum:
        - OPEN
        - LOCKED
      title: SettableCardStatus
      description: An enumeration.
    ShippingAddress:
      properties:
        street_address:
          type: string
          maxLength: 100
          title: Street Address
          description: Street address
        street_address2:
          type: string
          maxLength: 100
          title: Street Address2
          description: Apartment, Suite, Box number, etc.
        city:
          type: string
          maxLength: 100
          title: City
          description: City / Town
        postal_code:
          type: string
          maxLength: 10
          title: Postal Code
          description: Postal code / ZIP code
        state:
          allOf:
            - $ref: '#/components/schemas/State'
          description: 'State (Postal Abbreviations. Example: "AL", "NJ", "OH")'
        country:
          allOf:
            - $ref: '#/components/schemas/Country'
          description: 'A ISO-3166 Alpha-2 country code (Abbreviated. Example: "US")'
      type: object
      required:
        - street_address
        - city
        - postal_code
        - state
        - country
      title: ShippingAddress
    SourceOfFunds:
      type: string
      enum:
        - INTERNAL_FUNDS
        - CLIENT_OR_EXTERNAL_FUNDS
      title: SourceOfFunds
      description: An enumeration.
    State:
      type: string
      enum:
        - AA
        - AE
        - AP
        - AK
        - AL
        - AR
        - AZ
        - CA
        - CO
        - CT
        - DC
        - DE
        - FL
        - GA
        - GU
        - HI
        - IA
        - ID
        - IL
        - IN
        - KS
        - KY
        - LA
        - MA
        - MD
        - ME
        - MI
        - MN
        - MO
        - MS
        - MT
        - NC
        - ND
        - NE
        - NH
        - NJ
        - NM
        - NV
        - NY
        - OH
        - OK
        - OR
        - PA
        - PR
        - RI
        - SC
        - SD
        - TN
        - TX
        - UT
        - VA
        - VI
        - VT
        - WA
        - WI
        - WV
        - WY
      title: State
      description: An enumeration.
    Statement:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
        type:
          $ref: '#/components/schemas/StatementType'
        key:
          type: string
          title: Key
        pdf_download_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Pdf Download Url
        time_created:
          type: string
          format: date-time
          title: Time Created
      type: object
      required:
        - id
        - jiko_account_id
        - type
        - key
        - pdf_download_url
        - time_created
      title: Statement
    StatementListResponse:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: StatementListResponse
      description: Base class for cursor_list responses from the Partner API
    StatementType:
      type: string
      enum:
        - 1099B
        - 1099INT
        - BANK
        - BROKERAGE
      title: StatementType
      description: An enumeration.
    StudentInvestmentProfile:
      properties:
        income:
          allOf:
            - $ref: '#/components/schemas/AnnualPersonalIncome'
          description: Applicant's estimated annual income in USD.
        net_worth:
          allOf:
            - $ref: '#/components/schemas/AveragePersonalNetWorth'
          description: Applicant's estimated average personal net worth in USD.
        bd_association:
          type: string
          maxLength: 200
          title: Bd Association
          description: >-
            Name of broker-dealer association or employment. Disclosure is
            required by law if applicable, else, leave empty
        director_policy_maker_of_company:
          type: string
          maxLength: 200
          title: Director Policy Maker Of Company
          description: >-
            Name of company where customer is director or policy maker.
            Disclosure is required by law if applicable, otherwise, leave empty
        occupation:
          type: string
          maxLength: 200
          title: Occupation
          description: Applicant's occupation
        employment_status:
          type: string
          enum:
            - STUDENT
          title: Employment Status
      type: object
      required:
        - income
        - net_worth
        - employment_status
      title: StudentInvestmentProfile
    Subscription:
      properties:
        description:
          type: string
          title: Description
          description: A description of the webhook's intended use.
          default: ''
        events:
          items:
            type: string
          type: array
          minItems: 1
          title: Events
          description: Which types of events this webhook should be invoked for.
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
          description: The webhook URL to invoke.
        id:
          type: string
          format: uuid
          title: Id
        time_created:
          type: string
          format: date-time
          title: Time Created
        updated_at:
          type: string
          format: date-time
          title: Updated At
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
      type: object
      required:
        - events
        - url
        - id
        - time_created
        - updated_at
        - status
      title: Subscription
    SubscriptionStatus:
      type: string
      enum:
        - enabled
        - disabled
      title: SubscriptionStatus
      description: An enumeration.
    Trade:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        trade_datetime:
          type: string
          format: date-time
          title: Trade Datetime
        settled_date:
          type: string
          format: date
          title: Settled Date
        is_settled:
          type: boolean
          title: Is Settled
        activity:
          $ref: '#/components/schemas/TradeActivity'
        cusip:
          type: string
          title: Cusip
        description:
          type: string
          title: Description
        notional:
          $ref: '#/components/schemas/Amount'
        quantity:
          type: integer
          title: Quantity
        price:
          $ref: '#/components/schemas/Decimal'
        maturity_date:
          type: string
          format: date
          title: Maturity Date
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
        yield_to_maturity:
          $ref: '#/components/schemas/Decimal'
        tradable_id:
          type: string
          title: Tradable Id
      type: object
      required:
        - id
        - trade_datetime
        - is_settled
        - activity
        - cusip
        - description
        - notional
        - quantity
        - price
        - maturity_date
        - jiko_account_id
        - yield_to_maturity
        - tradable_id
      title: Trade
    TradeActivity:
      type: string
      enum:
        - BUY
        - SELL
        - MATURITY
      title: TradeActivity
      description: An enumeration.
    TradeConfirmation:
      properties:
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
      type: object
      required:
        - url
      title: TradeConfirmation
      example:
        url: https://example.com/path-to-trade-confirmation-pdf
    TradeListResponse:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/Trade'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: TradeListResponse
      description: Base class for cursor_list responses from the Partner API
    Transaction:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
        amount:
          $ref: '#/components/schemas/Amount'
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        status:
          $ref: '#/components/schemas/TransactionStatus'
        details:
          $ref: '#/components/schemas/TransactionDetails'
      type: object
      required:
        - id
        - jiko_account_id
        - amount
        - timestamp
        - status
        - details
      title: Transaction
    TransactionDetails:
      properties:
        transaction_type:
          $ref: '#/components/schemas/TransactionType'
        title:
          type: string
          title: Title
        sub_title:
          type: string
          title: Sub Title
        transaction_type_title:
          type: string
          title: Transaction Type Title
        card_transaction:
          $ref: '#/components/schemas/CardTransactionDetails'
        ach_transaction:
          $ref: '#/components/schemas/ACHTransactionDetails'
        wire_transaction:
          $ref: '#/components/schemas/WireTransactionDetails'
        wire_fee_transaction:
          $ref: '#/components/schemas/WireTransactionDetails'
        cash_back_transaction:
          $ref: '#/components/schemas/CashBackTransactionDetails'
        on_us_transaction:
          $ref: '#/components/schemas/OnUsTransactionDetails'
      type: object
      required:
        - transaction_type
      title: TransactionDetails
    TransactionListResponse:
      properties:
        prev_page:
          type: string
          title: Prev Page
        next_page:
          type: string
          title: Next Page
        items:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
          title: Items
        object_type:
          type: string
          title: Object Type
          default: CursorList
      type: object
      required:
        - items
      title: TransactionListResponse
      description: Base class for cursor_list responses from the Partner API
    TransactionLocation:
      properties:
        street_address:
          type: string
          title: Street Address
        city:
          type: string
          title: City
        state:
          type: string
          title: State
        country:
          type: string
          title: Country
      type: object
      required:
        - street_address
        - city
        - country
      title: TransactionLocation
    TransactionStatus:
      type: string
      enum:
        - PENDING
        - COMPLETED
      title: TransactionStatus
      description: An enumeration.
    TransactionType:
      type: string
      enum:
        - CARD
        - CASH_BACK
        - ACH
        - WIRE
        - WIRE_FEE
        - GENERIC
        - ON_US
      title: TransactionType
      description: An enumeration.
    TransferStateReason:
      type: string
      enum:
        - ACCOUNT_UNAVAILABLE
        - CANCELED
        - INSUFFICIENT_FUNDS
        - INVALID_CURRENCY
        - INVALID_TRANSFER
        - SANCTION_SCREEN_FAILED
      title: TransferStateReason
      description: An enumeration.
    UnemployedInvestmentProfile:
      properties:
        income:
          allOf:
            - $ref: '#/components/schemas/AnnualPersonalIncome'
          description: Applicant's estimated annual income in USD.
        net_worth:
          allOf:
            - $ref: '#/components/schemas/AveragePersonalNetWorth'
          description: Applicant's estimated average personal net worth in USD.
        bd_association:
          type: string
          maxLength: 200
          title: Bd Association
          description: >-
            Name of broker-dealer association or employment. Disclosure is
            required by law if applicable, else, leave empty
        director_policy_maker_of_company:
          type: string
          maxLength: 200
          title: Director Policy Maker Of Company
          description: >-
            Name of company where customer is director or policy maker.
            Disclosure is required by law if applicable, otherwise, leave empty
        occupation:
          type: string
          maxLength: 200
          title: Occupation
          description: Applicant's occupation
        employment_status:
          type: string
          enum:
            - UNEMPLOYED
          title: Employment Status
      type: object
      required:
        - income
        - net_worth
        - employment_status
      title: UnemployedInvestmentProfile
    UpdateSubscriptionRequest:
      properties:
        description:
          type: string
          title: Description
          description: A description of the webhook's intended use.
          default: ''
        events:
          items:
            type: string
          type: array
          minItems: 1
          title: Events
          description: Which types of events this webhook should be invoked for.
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
          description: The webhook URL to invoke.
        shared_secret:
          type: string
          minLength: 16
          title: Shared Secret
          description: >-
            The shared secret used by the Partner API to sign requests made to
            the webhook. The shared secret needs to be minimum 16 characters
            long.
      type: object
      title: UpdateSubscriptionRequest
    UploadDocumentResponse:
      properties:
        success:
          type: boolean
          title: Success
        document_id:
          type: string
          format: uuid
          title: Document Id
      type: object
      required:
        - success
        - document_id
      title: UploadDocumentResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    VirtualCardResponse:
      properties:
        card_id:
          type: string
          format: uuid
          title: Card Id
        encrypted_pan:
          type: string
          title: Encrypted Pan
        encrypted_cvv:
          type: string
          title: Encrypted Cvv
        encrypted_expiration:
          type: string
          title: Encrypted Expiration
      type: object
      required:
        - card_id
        - encrypted_pan
        - encrypted_cvv
        - encrypted_expiration
      title: VirtualCardResponse
    WireCounterparty:
      properties:
        time_created:
          type: string
          format: date-time
          title: Time Created
        verification_type:
          $ref: '#/components/schemas/ACHCounterpartyVerificationType'
        status:
          $ref: '#/components/schemas/ACHCounterpartyVerificationStatus'
        account_number:
          type: string
          title: Account Number
        routing_number:
          type: string
          title: Routing Number
        name_on_account:
          type: string
          title: Name On Account
        account_type:
          $ref: '#/components/schemas/ACHCounterpartyAccountType'
        institution_name:
          type: string
          title: Institution Name
      type: object
      required:
        - time_created
        - verification_type
        - status
        - account_number
        - routing_number
        - name_on_account
        - account_type
        - institution_name
      title: WireCounterparty
    WireOutgoingPayload:
      properties:
        jiko_account_id:
          type: string
          format: uuid
          title: Jiko Account Id
        wire_id:
          type: string
          format: uuid
          title: Wire Id
      type: object
      required:
        - jiko_account_id
        - wire_id
      title: WireOutgoingPayload
    WireRequest:
      properties:
        counterparty_id:
          type: string
          format: uuid
          title: Counterparty Id
        amount_usdc:
          type: integer
          title: Amount Usdc
          description: The amount, in USD cents.
        created_by:
          type: string
          title: Created By
          description: A string identifying the wire transfer originator.
        description:
          type: string
          title: Description
          description: A description of the transfer, visible on statements.
        wire_id:
          type: string
          format: uuid
          title: Wire Id
          description: The ID for this wire transfer, auto-generated if not provided.
      type: object
      required:
        - counterparty_id
      title: WireRequest
    WireTransactionDetails:
      properties:
        reference_number:
          type: string
          title: Reference Number
        counterparty_name:
          type: string
          title: Counterparty Name
        wire_id:
          type: string
          format: uuid
          title: Wire Id
      type: object
      required:
        - reference_number
        - counterparty_name
      title: WireTransactionDetails
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
tags:
  - name: Individuals
    description: >
      Use these endpoints to initiate, manage, and complete KYC for Individuals.
      When an application has `status: “APPROVED”`, a
      [Customer](https://docs.jiko.io/reference) is created for the Individual.
      Customers can have multiple [Accounts](https://docs.jiko.io/reference).
  - name: Businesses
    description: >
      Use these endpoints to initiate, manage, and complete KYB for Businesses.
      When an application has `status: “APPROVED”`, a
      [Customer](https://docs.jiko.io/reference) is created for the Business.
      Customers can have multiple [Accounts](https://docs.jiko.io/reference).
  - name: Accounts
    description: >
      Use these endpoints to view Account information. Jiko Accounts (also known
      as Pockets) consist of a bank account and a brokerage account. When funds
      are deposited into a Pocket, they’re immediately invested in T-bills.


      </br>


      In the API interface, the Account object encapsulates both accounts and
      can be treated as a single account to deposit to or withdraw from.
  - name: Customers
    description: Use these endpoints to view and manage personal details for a Customer.
  - name: Transactions
    description: >
      Use these endpoints to view Transactions of funds moving in and out of
      Jiko Accounts, specifically the bank account component (cash deposits and
      withdrawals). For viewing information regarding the brokerage account
      component (buying and selling of T-bills), use
      [Trades](https://docs.jiko.io/reference).
  - name: Trades
    description: >-
      Use these endpoints to view Trades, or transactions related to the buying
      and selling of T-bills, within the brokerage account component of Jiko
      Pockets.
  - name: Statements
    description: >-
      Use these endpoints to retrieve monthly statements for bank and brokerage
      accounts.
  - name: Portals
    description: >-
      Use these endpoints to create and view Portals. Portals allow third-party
      financial institutions to initiate ACH and wire transfers. A Portal
      consists of a routing and an account number. A single portal is created by
      default upon account creation.
  - name: ACH
    description: Use these endpoints to create, view, and manage ACH Transfers.
  - name: Wires
    description: Use this endpoint to initiate Wire Transfers.
  - name: On-Us Transfers
    description: >-
      Use these endpoints to create and view On-Us (Book) Transfers between Jiko
      accounts.
  - name: Counterparties
    description: >
      Use these endpoints to view Counterparties. Counterparties represent
      external accounts when moving funds in or out of a Jiko Account. Jiko will
      only transfer funds between accounts where the Counterparty has `status:
      “VERIFIED”`, meaning ownership of the account has been confirmed.
  - name: 'Counterparties: Plaid'
    description: Use these endpoints to create and view Counterparties using Plaid.
  - name: Manage Cards
    description: Use these endpoints to view and manage Card information.
  - name: Physical Cards
    description: Use these endpoints to create, view, and manage Physical Debit Cards.
  - name: Virtual Cards
    description: Use these endpoints to create, view, and manage Virtual Debit Cards.
  - name: Security
    description: Use these endpoints to authenticate requests to the Jiko API.
  - name: Sandbox
    description: Use these endpoints to initiate sandbox functionality.
  - name: Subscriptions
    description: >-
      Use these endpoints to create, view, and manage Subscriptions.
      Subscriptions provide Partners with the ability to subscribe to Events.
      Once subscribed, Events will be sent to the specified URL.
  - name: Events
    description: Use these endpoints to view Events.
  - name: Health
    description: Use these endpoints to setup automatic health checks for the Partner API.
x-tagGroups:
  - name: Onboarding
    tags:
      - Individuals
      - Businesses
  - name: Accounts
    tags:
      - Accounts
      - Customers
      - Transactions
      - Trades
      - Statements
  - name: Transfers
    tags:
      - Portals
      - ACH
      - Wires
      - On-Us Transfers
      - Counterparties
      - 'Counterparties: Plaid'
  - name: Cards
    tags:
      - Manage Cards
      - Physical Cards
      - Virtual Cards
  - name: Platform
    tags:
      - Health
      - Security
      - Sandbox
      - Subscriptions
      - Events
