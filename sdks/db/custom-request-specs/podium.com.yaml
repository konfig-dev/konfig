components:
  responses: {}
  schemas:
    Error:
      properties:
        code:
          description: Podium code for the error.
          type: integer
        message:
          description: Specific details about the error.
          nullable: true
          type: string
        moreInfo:
          description: URL providing more information about the error.
          type: string
      title: Error
      type: object
    location:
      properties:
        address:
          deprecated: true
          description: Address of the physical location.
          example: 1650 Digital Dr, Lehi, UT 84043
          nullable: true
          type: string
        addressDetails:
          description: Details of the address such as state, country, postal code, etc
          properties:
            city:
              description: City of the location's address.
              nullable: true
              type: string
            country:
              description: Country of the location's address.
              nullable: true
              type: string
            countryLongName:
              description: Long country name of the location's address.
              nullable: true
              type: string
            houseNumber:
              description: House number of the location's address.
              nullable: true
              type: string
            postalCode:
              description: Postal code of the location's address.
              nullable: true
              type: string
            road:
              description: Road of the location's address.
              nullable: true
              type: string
            state:
              description: State of the location's address.
              nullable: true
              type: string
            stateLongName:
              description: Long state name of the location's address.
              nullable: true
              type: string
            unit:
              description: Unit of the location's address.
              nullable: true
              type: string
          type: object
        archived:
          description: If the location has been archived.
          example: false
          nullable: true
          type: boolean
        archivedAt:
          description: When the location was archived.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        createdAt:
          description: When the location was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        displayName:
          description: Name of the location that is displayed in the user interface.
          example: Podium, Inc.
          nullable: true
          type: string
        name:
          description: Name of the location.
          nullable: true
          type: string
        organizationUid:
          description: Podium unique identifier for organization.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        phoneNumber:
          description: Phone number of the location.
          example: '+18017580580'
          nullable: true
          type: string
        podiumPhoneNumber:
          description: >-
            Podium phone number of the location. 

            This is the number that customer's will see on their phone's when
            receiving a message from this location.
          example: '+18017580580'
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for location.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the location was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: location
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Location
    organization:
      properties:
        archived:
          description: If the organization has been archived.
          example: false
          nullable: true
          type: boolean
        businessName:
          description: >-
            Business name of the organization that is displayed in the user
            interface.
          example: Podium, Inc.
          nullable: true
          type: string
        createdAt:
          description: When the organization was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for organization.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the organization was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: organization
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Organization
    user:
      properties:
        archived:
          description: Weather the current user is archived.
          example: false
          nullable: true
          type: boolean
        createdAt:
          description: When the user was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        email:
          description: The email of the current user.
          example: bob.ross@gmail.com
          nullable: true
          type: string
        firstName:
          description: The first name of the current user.
          example: Bob
          nullable: true
          type: string
        lastName:
          description: The last name of the current user.
          example: Ross
          nullable: true
          type: string
        locations:
          items:
            description: All locations the user is assigned to.
            nullable: true
            properties:
              uid:
                description: Podium unique identifier for location.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        phone:
          description: The phone number of the user.
          example: '+18013586533'
          nullable: true
          type: string
        role:
          description: The current positon of the user in the company.
          example: Account Owner
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for user.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the user was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: user
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.User
    appointment:
      properties:
        assignedUser:
          description: Assigned user object
          nullable: true
          properties:
            uid:
              description: Podium unique identifier for user.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        contactName:
          description: Name of the contact.
          nullable: true
          type: string
        contactPhoneNumber:
          description: Phone number of the contact.
          nullable: true
          type: string
        createdAt:
          description: When the appointment was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        datetime:
          description: Date and time of the appointment.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        durationMin:
          description: How many miuntes long the appointment is.
          nullable: true
          type: integer
        location:
          description: Location object
          nullable: true
          properties:
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        note:
          description: Note that is attached to the appointment.
          nullable: true
          type: string
        status:
          description: Status of the appointment.
          enum:
            - cancelled
            - completed
            - confirmed
            - no_show
            - unconfirmed
          nullable: true
          type: string
        type:
          description: Type of appointment.
          enum:
            - in_person
            - virtual
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for appointment.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the appointment was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: appointment
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Appointment
    campaign:
      description: A campaign.
      properties:
        createdAt:
          description: >-
            Time at which the resource was created. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: false
          type: string
        endedAt:
          description: >-
            Time at which the campaign completed, stopped or errored. Date time
            is in Coordinated Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        locations:
          items:
            description: Reference to the locations resource.
            properties:
              uid:
                description: Podium unique identifier for the referenced resource.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        message:
          description: The message sent to subscribers
          example: Get 50% off this memorial day weekend!
          nullable: true
          type: string
        name:
          description: Name of the campaign
          example: Memorial Day sale
          nullable: false
          type: string
        organization:
          description: Reference to the organization resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        startedAt:
          description: >-
            Time at which the campaign messsages started sending. Date time is
            in Coordinated Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        status:
          description: The current campaign status
          enum:
            - ACTIVE
            - COMPLETED
            - DRAFT
            - ERROR
            - INACTIVE
            - IN_PROGRESS
            - SCHEDULED
            - STOPPED
            - SUSPENDED
            - ARCHIVED
          nullable: false
          type: string
        uid:
          description: Podium unique identifier for campaign.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: false
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: >-
            Time at which the resource was updated. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: campaign
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Campaign
    campaign_interaction:
      description: >-
        A campaign interaction event, which is a record of how a user and a
        campaign interacted (i.e. a user received a campaign message, or a user
        responded to a campaign message).
      properties:
        campaign:
          description: Reference to the Campaign resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        contact:
          description: Reference to the Contact resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        conversation:
          description: Reference to the Conversation resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        createdAt:
          description: When the interaction occurred.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
        interactionType:
          description: The type of campaign interaction this record represents
          enum:
            - sent
            - queued
            - failed
            - feedback_left
            - link_clicked
            - opt_out
            - payment_made
            - response
            - review_left
            - resubscribe
          nullable: true
          type: string
        location:
          description: Reference to the Location resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        uid:
          description: Podium unique identifier for Campaign interaction uuid.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the interaction was last updated
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
      title: campaign_interaction
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.CampaignInteraction
    message:
      description: >
        A message from a Podium conversation. Messages include each exchange
        within a conversation and include

        conversations for all channels within Podium (Facebook Messenger, SMS
        text, GMB, etc).


        ## Deprecations


        The `contact` and `sender` object fields have been deprecated, they are
        currently only available in webhook

        and will be completely removed at some point in the future.
      properties:
        attachmentUrl:
          description: >-
            URL of message attachment. This field is deprecated, please refer to
            the attachmentUrl in the items array.
          example: https://www.podium.com/
          nullable: true
          type: string
        body:
          description: Body of the message.
          example: Hello there.
          nullable: true
          type: string
        contact:
          deprecated: true
          description: To whom the message was sent or from whom it was received.
          properties:
            externalIdentifier:
              description: Identifier of the contact that is used external to Podium.
              example: 123-abc
              nullable: true
              type: string
            name:
              description: Name of the contact.
              example: Joe Orange
              nullable: true
              type: string
            uid:
              description: Podium unique identifier for contact.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        contactName:
          description: Name of the contact.
          example: Joe Orange
          nullable: true
          type: string
        conversation:
          description: The conversation to which the message belongs.
          properties:
            assignedUserUid:
              description: Podium unique identifier for user.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            channel:
              description: Channel that the conversation is in.
              properties:
                identifier:
                  description: >-
                    Identifies the Messenger channel. Must be a valid email
                    address or a phone number. Non-US/Canada numbers must
                    include the country code (e.g. +61 for AUS)
                  example: email@email.com
                  nullable: true
                  type: string
                type:
                  description: Messenger channel for the conversation.
                  enum:
                    - apple
                    - car_wars
                    - email
                    - facebook
                    - fallback_email
                    - google
                    - google_brand
                    - iframe
                    - phone
                    - secure
                    - sms
                    - text
                    - whatsapp
                  example: email
                  nullable: true
                  type: string
              type: object
            startedAt:
              description: When the conversation was started.
              example: '2015-01-23T23:50:07Z'
              format: date-time
              nullable: true
              type: string
            uid:
              description: Podium unique identifier for conversation.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        createdAt:
          description: When the message was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        failureReason:
          description: If the message failed to send, this will be the reason.
          example: Attempted to send SMS to a landline.
          nullable: true
          type: string
        items:
          items:
            description: >-
              A list of all items associated with the message uid. This includes
              text bodies and attachments.
            nullable: true
            properties:
              attachmentContentType:
                description: MIME type of the message attachment.
                example: image/png
                nullable: true
                type: string
              attachmentUrl:
                description: >-
                  Public URL of the message attachment. NOTE: There is an expiry
                  of 7 days on this URL.
                example: https://www.podium.com/image.png
                nullable: true
                type: string
              body:
                description: Body of the message.
                example: https://www.podium.com/image.png
                nullable: true
                type: string
              createdAt:
                description: When the message item was created.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              deliveryStatus:
                description: Status of the message item.
                example: sent
                nullable: true
                type: string
              encryptedAt:
                description: >-
                  When the item was encrypted. `null` if the item is not
                  encrypted.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              sendBody:
                description: The send body of the message item that the end consumer sees.
                example: 'null'
                nullable: true
                type: string
              sourceType:
                description: The source type of the message item.
                example: outbound
                nullable: true
                type: string
              type:
                description: The type of the message item.
                example: attachment
                nullable: true
                type: string
              uid:
                description: Podium unique identifier for message item.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        location:
          description: >-
            Location from which the message was sent or to where the message was
            sent.
          properties:
            organizationUid:
              description: Podium unique identifier for organization.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        sender:
          deprecated: true
          description: >-
            If the message was sent from Podium then this will be the Podium
            user who sent it.
          properties:
            uid:
              description: Podium unique identifier for user.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        senderUid:
          description: >-
            Podium unique identifier for user. If the message was sent from
            Podium then this will be the Podium user who sent it.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        uid:
          description: Podium unique identifier for message.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
      title: message
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Message
    contact:
      description: A contact.
      nullable: true
      properties:
        attributes:
          items:
            description: List of attribute resources of the contact.
            nullable: true
            properties:
              dataType:
                description: The data type for the attribute value.
                enum:
                  - BOOLEAN
                  - DATETIME
                  - FLOAT
                  - INTEGER
                  - STRING
                  - UUID
                  - SINGLE_SELECT
                  - MULTI_SELECT
                type: string
              label:
                description: The label of the attribute.
                type: string
              ownerResource:
                description: The owner of the attribute resource.
                properties:
                  type:
                    description: Product or organization
                    type: string
                  uid:
                    description: Podium unique identifier for attribute.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                type: object
              uid:
                description: Podium unique identifier for attribute.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
              value:
                description: The value of the attribute.
                nullable: true
                type: string
            type: object
          type: array
        conversations:
          items:
            description: Reference to the conversation resource.
            properties:
              uid:
                description: Podium unique identifier for the referenced resource.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        createdAt:
          description: >-
            Time at which the resource was created. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
        emails:
          description: List of the contacts email addresses.
          items:
            type: string
          nullable: true
          type: array
        locations:
          items:
            description: Reference to the location resource.
            properties:
              uid:
                description: Podium unique identifier for the referenced resource.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        name:
          description: The name of the contact resource.
          nullable: true
          type: string
        organization:
          description: Reference to the organization resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        phoneNumbers:
          description: List of the contacts phone numbers.
          items:
            type: string
          nullable: true
          type: array
        tags:
          items:
            description: List of tag resources of the contact.
            nullable: true
            properties:
              description:
                description: Description of the tag.
                nullable: true
                type: string
              label:
                description: The label of the attribute.
                type: string
              uid:
                description: Podium unique identifier for tag.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        uid:
          description: Podium unique identifier for contact.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: >-
            Time at which the resource was updated. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
      title: contact
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Contact
    contact_attribute:
      description: Contact identifier
      properties:
        identifier:
          description: Identifier of the contact that can be used to retrieve the contact
          type: string
      title: contact_attribute
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ContactAttribute
    contact_entity_attribute:
      description: A contact attribute.
      properties:
        createdAt:
          description: >-
            Time at which the resource was created. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
        dataType:
          description: The data type of the attribute value
          enum:
            - BOOLEAN
            - DATETIME
            - FLOAT
            - INTEGER
            - STRING
            - UUID
            - SINGLE_SELECT
            - MULTI_SELECT
          type: string
        isEncrypted:
          default: true
          description: >-
            If the attribute is encrypted it cannot be used as a filter.
            Attributes that will have sensitive information, such as PII or PHI,
            should be encrypted.
          type: boolean
        label:
          description: The label of the attribute.
          type: string
        ownerResource:
          properties:
            type:
              enum:
                - PRODUCT
                - ORGANIZATION
              type: string
            uid:
              description: >-
                The unique identify of the owner resource. Either an application
                uid or organization uid.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        uid:
          description: Podium unique identifier for attribute.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: >-
            Time at which the resource was updated. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
      title: contact_entity_attribute
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ContactEntityAttribute
    contact_entity_tag:
      description: A contact tag.
      properties:
        createdAt:
          description: >-
            Time at which the resource was created. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        description:
          description: Description of the tag.
          nullable: true
          type: string
        label:
          description: The label of the tag.
          nullable: true
          type: string
        organization:
          description: Reference to the organization resource.
          nullable: true
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        uid:
          description: Podium unique identifier for tag.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: >-
            Time at which the resource was updated. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: contact_entity_tag
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ContactEntityTag
    contact_tag:
      description: Contact identifier
      properties:
        identifier:
          description: Identifier of the contact that can be used to retrieve the contact
          type: string
      title: contact_tag
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ContactTag
    contact_upsert:
      description: Contact identifier
      properties:
        identifier:
          description: Identifier of the contact that can be used to retrieve the contact
          type: string
      title: contact_upsert
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Contact.ContactUpsert
    conversation:
      description: Messenger conversation.
      properties:
        assignedUserUid:
          description: Podium unique identifier for user.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        channel:
          description: Channel that the conversation is in.
          properties:
            identifier:
              description: >-
                Identifies the Messenger channel. Must be a valid email address
                or a phone number. Non-US/Canada numbers must include the
                country code (e.g. +61 for AUS)
              example: email@email.com
              nullable: true
              type: string
            type:
              description: Messenger channel for the conversation.
              enum:
                - apple
                - car_wars
                - email
                - facebook
                - fallback_email
                - google
                - google_brand
                - iframe
                - phone
                - secure
                - sms
                - text
                - whatsapp
              example: email
              nullable: true
              type: string
          type: object
        closed:
          description: Whether the conversation has been closed
          nullable: true
          type: boolean
        contactName:
          description: Name of the contact.
          nullable: true
          type: string
        createdAt:
          description: When the conversation was started.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        lastItemAt:
          description: When the last conversation item was added.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        locationUid:
          description: Podium unique identifier for location.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        uid:
          description: Podium unique identifier for conversation.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the conversation was last updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: conversation
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Conversation
    conversation_note:
      description: Conversation note.
      properties:
        body:
          description: Body of the note.
          nullable: false
          type: string
        conversation:
          description: Conversation that the conversation note belongs to.
          properties:
            uid:
              description: Podium unique identifier for conversation.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        createdAt:
          description: >-
            Time at which the resource was created. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        location:
          description: Location that the conversation note belongs to.
          properties:
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        organization:
          description: Organization that the conversation note belongs to.
          properties:
            uid:
              description: Podium unique identifier for organization.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        senderName:
          description: Name of the person who created the note.
          nullable: false
          type: string
        uid:
          description: Podium unique identifier for note.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: >-
            Time at which the resource was updated. Date time is in Coordinated
            Universal Time (UTC).
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: conversation_note
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ConversationNote
    lead_writeback:
      description: >
        A lead that has been writtenback to a connected CRM. The lead is passed
        to the CRM and no other action is possible

        from the Podium so is no `uid` or other identifers assigned to the lead.
      properties:
        conversation:
          description: Conversation that the conversation note belongs to.
          properties:
            uid:
              description: Podium unique identifier for conversation.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
      title: lead_writeback
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.LeadWriteback
    feedback:
      description: >
        Feedback, now known as Surveys in the app, are internal surveys a
        business can collect from their end clients. Typically, these are
        measured as NPS or CSAT.
      properties:
        adjustedScore:
          description: >-
            Normalized value representing the survey score an individual
            responded with. Example with NPS scoring structure a 10 would be a
            100 and a 5 would be -100.
          example: 100
          nullable: true
          type: integer
        archived:
          description: If the survey response has been archived.
          example: false
          nullable: true
          type: boolean
        attributions:
          items:
            description: >-
              Podium user who the survey is attributed to. For example, the user
              who was assigned to the customer that the survey was sent to.
              There may be more than one user who have a single survey
              attributed to them.
            properties:
              type:
                description: Type of attribution that is assigned to sending the survey.
                enum:
                  - integrated_send
                  - manual_tag
                  - final
                nullable: true
                type: string
              userName:
                description: Name of the user attributed to sending the survey.
                example: John Apple
                nullable: true
                type: string
              userUid:
                description: Podium unique identifier for user.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        channel:
          description: Channel object
          properties:
            identifier:
              description: >-
                Identifies the Messenger channel. Must be a valid email address
                or a phone number. Non-US/Canada numbers must include the
                country code (e.g. +61 for AUS)
              example: email@email.com
              nullable: true
              type: string
            type:
              description: Messenger channel for the conversation.
              enum:
                - apple
                - car_wars
                - email
                - facebook
                - fallback_email
                - google
                - google_brand
                - iframe
                - phone
                - secure
                - sms
                - text
                - whatsapp
              example: email
              nullable: true
              type: string
          type: object
        createdAt:
          description: When the survey was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        currentStep:
          description: Current step of the flow that the survey is on.
          enum:
            - start
            - follow_up
            - final
          nullable: true
          type: string
        customerName:
          description: Name of the customer who the survey was sent to.
          example: Joe Orange
          nullable: true
          type: string
        firstResponseReceivedAt:
          description: When the first response to the survey was received.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        flowUid:
          description: Podium unique identifier for survey flow.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        location:
          description: Location that the survey was sent from.
          properties:
            organizationUid:
              description: Podium unique identifier for organization.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        messages:
          items:
            description: Message that the survey respondent sent.
            example: wonderful.
            type: string
          type: array
        score:
          description: Score the respondent has responded with.
          example: 5
          nullable: true
          type: integer
        uid:
          description: Podium unique identifier for feedback survey.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the survey was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: feedback
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Feedback
    feedback_creation:
      description: >
        Feedback, now known as Surveys in the app, are internal surveys a
        business can collect from their end clients. Typically, these are
        measured as NPS or CSAT.
      properties:
        uid:
          description: Podium unique identifier for feedback survey.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
      title: feedback_creation
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.FeedbackCreation
    Template:
      description: >
        Templates save you time and promote consistency in communication with
        your customers. Instead of typing out a new message each time you try to
        schedule an appointment or answer a question about billing, simply use a
        template.
      properties:
        accessLevel:
          description: >-
            The access level of the template. If `locationUid` is filled, this
            property will be `LOCATION`.
          enum:
            - location
            - organization
          example: location
          nullable: true
          type: string
        attachmentUrl:
          description: URL of template attachment.
          example: https://www.podium.com/
          nullable: true
          type: string
        createdAt:
          description: When the template was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        deletedAt:
          description: When the template was deleted.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        isFavorite:
          description: Flag that indicates if this template is the favorite.
          nullable: true
          type: boolean
        lastUsedAt:
          description: When the template was last used.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        location:
          description: Reference to the Location resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        nonDeletable:
          description: Flag that indicates if template can be deleted or not.
          nullable: true
          type: boolean
        organization:
          description: Reference to the Organization resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        subject:
          description: The subject of the template.
          nullable: true
          type: string
        templateItems:
          items:
            description: The template items object.
            properties:
              applicationUid:
                description: >-
                  Podium unique identifier for The unique identifier for the
                  application of the template item..
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
              applicationUrl:
                description: The application URL of the template item.
                example: https://www.podium.com/
                nullable: true
                type: string
              attachmentContentType:
                description: The application content-type of the template item.
                nullable: true
                type: string
              attachmentUrl:
                description: The attachment URL of the template item.
                example: https://www.podium.com/
                nullable: true
                type: string
              body:
                description: The body of the template item.
                nullable: true
                type: string
              data:
                description: The data of the template item.
                nullable: true
                type: string
              iconUrl:
                description: The icon URL of the template item.
                example: https://www.podium.com/
                nullable: true
                type: string
              keys:
                items:
                  description: The template items object.
                  properties:
                    name:
                      description: The name of the key.
                      nullable: true
                      type: string
                    required:
                      description: Flag to indicate if key is required or not.
                      nullable: true
                      type: boolean
                  type: object
                nullable: true
                type: array
              subtitle:
                description: The subtitle of the template item.
                nullable: true
                type: string
              title:
                description: The title of the template item.
                nullable: true
                type: string
              type:
                description: The type of the template item.
                nullable: true
                type: string
              uid:
                description: >-
                  Podium unique identifier for The unique identifier of the
                  template Item..
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          nullable: true
          type: array
        text:
          description: The title of the template.
          nullable: true
          type: string
        title:
          description: The title of the template
          nullable: true
          type: string
        type:
          description: The type of the template
          enum:
            - custom
            - review_invite
            - review_invite_backup
          example: custom
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for The unique identifier of the template..
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: The date/time the template was last updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        user:
          description: Reference to the User resource.
          properties:
            uid:
              description: Podium unique identifier for the referenced resource.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        variables:
          description: The template variables.
          items:
            type: string
          nullable: true
          type: array
      title: Template
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Template
    Refund:
      description: Payment refund.
      properties:
        amount:
          description: Amount refunded to the customer, represented in cents.
          example: 100
          nullable: true
          type: integer
        cardBrand:
          description: Brand of the card that is to receive the credited refund.
          example: visa
          nullable: true
          type: string
        cardLast4:
          description: Last four digits of the card that is to receive the credited refund.
          example: '4242'
          nullable: true
          type: string
        createdAt:
          description: When the refund was initiated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        location:
          description: Location that the refund belongs to.
          properties:
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        notes:
          items:
            description: Detailed note for why the refund was initiated.
            example: The product did not function properly.
            nullable: true
            type: string
          type: array
        reason:
          description: Generic reason for why the refund was intiated.
          enum:
            - duplicate
            - fraudulent
            - requested_by_customer
          nullable: true
          type: string
        settledAt:
          description: >-
            When the refund was fully completed. Refunds can take 5-10 days to
            appear in the customer’s bank account.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        status:
          description: Current status of the refund.
          enum:
            - created
            - failed_charge_for_pending_refund_disputed
            - failed_expired_or_cancelled
            - failed_lost_or_stolen
            - failed_unknown
            - succeeded
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for refund.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
      title: Refund
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Refund
    invoice:
      description: Payment invoice.
      properties:
        allowedPaymentMethods:
          items:
            description: List all the payment methods available for the invoice.
            example:
              - Bank Account
              - Buy Now Pay Later Affirm
              - Credit Card
              - Debit Dard
            nullable: true
            type: string
          type: array
        amount:
          description: The amount of the invoice.
          example: 2000
          nullable: true
          type: integer
        canceledAt:
          description: >-
            If the invoice has been canceled this will be set to when it was
            canceled.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        canceledNote:
          description: >-
            If the invoice has been canceled this will be an internal note left
            as to why it was canceled.
          example: The wrong amount was entered.
          nullable: true
          type: string
        channel:
          description: Channel that the invoice payment request was sent through.
          properties:
            identifier:
              description: >-
                Identifies the Messenger channel. Must be a valid email address
                or a phone number. Non-US/Canada numbers must include the
                country code (e.g. +61 for AUS)
              example: email@email.com
              nullable: true
              type: string
            type:
              description: Messenger channel for the conversation.
              enum:
                - apple
                - car_wars
                - email
                - facebook
                - fallback_email
                - google
                - google_brand
                - iframe
                - phone
                - secure
                - sms
                - text
                - whatsapp
              example: email
              nullable: true
              type: string
          type: object
        conversationUid:
          description: Podium unique identifier for conversation.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        createdAt:
          description: When the invoice was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        currencyRef:
          description: The currency the invoice was sent in.
          example: USD
          nullable: true
          type: string
        customerName:
          description: Name of the customer who received the invoice.
          example: Joe Orange
          nullable: true
          type: string
        invoiceNumber:
          description: >-
            An identifier that can be added manually by a user or as reference
            ID from an external system.
          example: abc-12345-def
          nullable: true
          type: string
        invoiceServiceChargeItems:
          items:
            description: Separate taxes or service charges applied to an invoice.
            properties:
              amount:
                description: >-
                  Amount charged for the tax or service charge, represented in
                  cents.
                example: 1099
                type: integer
              flatChargeAmount:
                description: >-
                  Flat charge amount, represented in cents. Null if
                  PERCENTAGE_BASED
                example: 1099
                nullable: true
                type: integer
              name:
                description: Name of the tax or service charge.
                example: UT sales tax
                type: string
              percentageChargeRate:
                description: Tax or service charge percent. Null if FLAT_RATE
                example: '3'
                nullable: true
                type: string
              serviceChargeClassification:
                description: Classification of tax or service charge.
                enum:
                  - SERVICE_CHARGE
                  - SALES_TAX
                type: string
              serviceChargeType:
                description: Type of tax or service charge.
                enum:
                  - FLAT_RATE
                  - PERCENTAGE_BASED
                type: string
            type: object
          type: array
        lineItems:
          items:
            description: Separate items or services that make up an invoice.
            properties:
              amount:
                description: Amount to be charged for the line item, represented in cents.
                example: 1099
                type: integer
              description:
                description: Description of the item or service being charged.
                example: Total
                type: string
            type: object
          type: array
        location:
          description: Location that the invoice belongs to.
          properties:
            organizationUid:
              description: Podium unique identifier for organization.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        paidAt:
          description: When the invoice was paid.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        paymentNet:
          description: >-
            The amount of the money from the transaction delivered to the
            merchant less processing fees, represented in cents.
          example: 1000
          nullable: true
          type: integer
        payments:
          items:
            description: Details of when a customer pays an invoice.
            properties:
              bankAccountLast4:
                description: >-
                  Last four digits of the bank account used if bank transfers
                  are used to make a payment.
                example: '1245'
                nullable: true
                type: string
              bankAccountName:
                description: >-
                  Name of the banking institute used if bank transfers are used
                  to make a payment.
                example: The Bank
                nullable: true
                type: string
              cardBrand:
                description: Card brand used if a card is used to make a payment.
                example: visa
                nullable: true
                type: string
              cardFunding:
                description: Card type used if a card is used to make a payment.
                example: CREDIT
                nullable: true
                type: string
              cardLast4:
                description: >-
                  Last four digits of the card used if a card is used to make a
                  payment.
                example: '4242'
                nullable: true
                type: string
              createdAt:
                description: When the payment was made.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              declineCode:
                description: >-
                  Code returned by the payment processor if a card was used and
                  the payment was declined.
                example: card_not_supported
                nullable: true
                type: string
              declineCodeMessage:
                description: A more descriptive message about the declideCode attribute.
                example: The card does not support this type of purchase.
                nullable: true
                type: string
              fee:
                description: >-
                  Transaction fee removed at the time of the transaction,
                  represented in cents.
                example: 99
                nullable: true
                type: integer
              feeBillingType:
                description: How the transaction fee is billed.
                example: per_deposit
                nullable: true
                type: string
              feeCollectedAt:
                description: When the transaction fee was collected.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              interchangeFee:
                description: >-
                  Transaction fee that is removed at the beginning of the
                  following month if a merchant is on Interchange+, represented
                  in cents.
                example: 50
                nullable: true
                type: integer
              paidWithCardOnFile:
                description: Whether the payment was made with a card on file.
                example: true
                nullable: true
                type: boolean
              refunds:
                items:
                  description: >-
                    A refund can be for the full or partial amount of the
                    payment. Thus there can be multiple refunds per transaction.
                  properties:
                    amount:
                      description: Amount refunded on an invoice, represented in cents.
                      example: 100
                      nullable: true
                      type: integer
                    createdAt:
                      description: When the refund was initiated.
                      example: '2015-01-23T23:50:07Z'
                      format: date-time
                      nullable: true
                      type: string
                    notes:
                      items:
                        description: Detailed note for why the refund was initiated.
                        example: The product did not function properly.
                        nullable: true
                        type: string
                      type: array
                    reason:
                      description: Generic reason for why the refund was intiated.
                      enum:
                        - accidental_charge
                        - canceled
                        - duplicate
                        - fraudulent
                        - requested_by_customer
                        - other
                      nullable: true
                      type: string
                    settledAt:
                      description: >-
                        When the refund was fully completed. Refunds can take
                        5-10 days to appear in the customer’s bank account.
                      example: '2015-01-23T23:50:07Z'
                      format: date-time
                      nullable: true
                      type: string
                    status:
                      description: Current status of the refund.
                      enum:
                        - failed_charge_for_pending_refund_disputed
                        - failed_expired_or_cancelled
                        - failed_lost_or_stolen
                        - failed_unknown
                        - succeeded
                      nullable: true
                      type: string
                  type: object
                type: array
              settledAt:
                description: >-
                  When the money from the transaction was transferred into the
                  merchant’s bank account.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              status:
                description: Current status of the payment.
                enum:
                  - disputed
                  - dispute_lost
                  - failed
                  - paid
                  - partial_refund
                  - pending
                  - refunded
                  - refund_failed
                  - refund_pending
                nullable: true
                type: string
              uid:
                description: Podium unique identifier for payment.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        readerUid:
          description: Podium unique identifier for card reader.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        requester:
          description: Name of the employee who initiated the transaction.
          example: John Apple
          nullable: true
          type: string
        status:
          description: Current status of the invoice.
          enum:
            - canceled
            - created
            - disputed
            - dispute_lost
            - expired
            - failed
            - marked_as_paid
            - paid
            - partial_refund
            - pending
            - refunded
            - refund_failed
            - refund_pending
          nullable: true
          type: string
        tipAmount:
          description: The total tip amount of the invoice.
          example: 200
          nullable: true
          type: integer
        uid:
          description: Podium unique identifier for invoice.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
      title: invoice
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Invoice
    payment:
      properties:
        bankAccountLast4:
          description: >-
            Last four digits of the bank account used if bank transfers are used
            to make a payment.
          example: '1234'
          nullable: true
          type: string
        bankAccountName:
          description: >-
            Name of the banking institute used if bank transfers are used to
            make a payment.
          example: The Bank
          nullable: true
          type: string
        cardBrand:
          description: Card brand used if a card is used to make a payment.
          example: visa
          nullable: true
          type: string
        cardFunding:
          description: Card type used if a card is used to make a payment.
          example: CREDIT
          nullable: true
          type: string
        cardLast4:
          description: >-
            Last four digits of the card used if a card is used to make a
            payment.
          example: '4242'
          nullable: true
          type: string
        createdAt:
          description: When the payment was made.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        declineCode:
          description: >-
            Code returned by the payment processor if a card was used and the
            payment was declined.
          example: card_not_supported
          nullable: true
          type: string
        declineCodeMessage:
          description: A more descriptive message about the declideCode attribute.
          example: The card does not support this type of purchase.
          nullable: true
          type: string
        fee:
          description: >-
            Transaction fee removed at the time of the transaction, represented
            in cents.
          example: 99
          nullable: true
          type: integer
        feeBillingType:
          description: How the transaction fee is billed.
          example: MONTHLY
          nullable: true
          type: string
        feeCollectedAt:
          description: When the transaction fee was collected.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        interchangeFee:
          description: >-
            Transaction fee that is removed at the beginning of the following
            month if a merchant is on Interchange+, represented in cents.
          example: 50
          nullable: true
          type: integer
        paidWithCardOnFile:
          description: Whether the payment was made with a card on file.
          example: true
          nullable: true
          type: boolean
        refunds:
          items:
            description: >-
              A refund can be for the full or partial amount of the payment.
              Thus there can be multiple refunds per transaction.
            properties:
              amount:
                description: Amount refunded on an invoice, represented in cents.
                example: 100
                nullable: true
                type: integer
              createdAt:
                description: When the refund was initiated.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              notes:
                items:
                  description: Detailed note for why the refund was initiated.
                  example: The product did not function properly.
                  nullable: true
                  type: string
                type: array
              reason:
                description: Generic reason for why the refund was intiated.
                enum:
                  - accidental_charge
                  - canceled
                  - duplicate
                  - fraudulent
                  - requested_by_customer
                  - other
                nullable: true
                type: string
              settledAt:
                description: >-
                  When the refund was fully completed. Refunds can take 5-10
                  days to appear in the customer’s bank account.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              status:
                description: Current status of the refund.
                enum:
                  - failed_charge_for_pending_refund_disputed
                  - failed_expired_or_cancelled
                  - failed_lost_or_stolen
                  - failed_unknown
                  - succeeded
                nullable: true
                type: string
            type: object
          type: array
        settledAt:
          description: >-
            When the money from the transaction was transferred into the
            merchant’s bank account.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        status:
          description: Current status of the payment.
          enum:
            - failed
            - paid
            - partial_refund
            - refunded
            - refund_failed
            - refund_pending
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for payment.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the payment was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: payment
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Payment
    reader:
      properties:
        createdAt:
          description: When the card reader was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        label:
          description: The label assigned to the card reader.
          nullable: true
          type: string
        locationUid:
          description: Podium unique identifier for location.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        status:
          description: Current status of the card reader.
          enum:
            - active
            - disabled
            - removed
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for reader.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the card reader was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: reader
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Reader
    review:
      properties:
        attributions:
          items:
            description: >-
              Podium user that has been attributed to the review rating e.g.
              technician that visited the client would be associated to the
              review rating.
            properties:
              apiClientUid:
                description: Podium unique identifier for api client.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
              reviewInvitationUid:
                description: Podium unique identifier for review invitation.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
              userUid:
                description: Podium unique identifier for user.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        author:
          description: Author of the review.
          properties:
            id:
              description: Review site's unique identifier for the author.
              example: '2412341'
              nullable: true
              type: string
            name:
              description: Name of the author.
              example: Joe Orange
              nullable: true
              type: string
          type: object
        createdAt:
          description: When the review was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        isRecommendation:
          description: >-
            Whether or not the review is recommendation based, as opposed to
            being a star rating.
          example: false
          nullable: true
          type: boolean
        locations:
          items:
            description: Podium location that the review is associated to.
            properties:
              uid:
                description: Podium unique identifier for location.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: object
          type: array
        needsResponse:
          description: Whether or not the review needs a response.
          example: false
          nullable: true
          type: boolean
        responses:
          items:
            description: Response from the business to the reviewer.
            properties:
              body:
                description: Response's body
                example: Thanks Joe for leaving us a review!
                nullable: true
                type: string
              createdAt:
                description: When the response was created.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              siteAuthorName:
                description: Name of the response author.
                example: John Apple
                nullable: true
                type: string
            type: object
          type: array
        review:
          description: Review object
          properties:
            body:
              description: Comments left as a part of the review.
              example: >-
                We love our new sofa from Sofa Plus! It is comfortable and
                stylish.
              nullable: true
              type: string
            rating:
              description: >-
                Rating on 5 star scale. 5 = high; 1 = low. Note that
                recommendations have adjusted scores of 5 for recommended; 1 for
                not recommended.
              example: 5
              nullable: true
              type: integer
            siteName:
              description: Name of the review site.
              example: Google
              nullable: true
              type: string
            siteReviewId:
              description: Review site's unique identifier for the review posted.
              example: 2390afs293fj
              nullable: true
              type: string
            url:
              description: URL for the individual review that was posted.
              example: https://www.podium.com/
              nullable: true
              type: string
          type: object
        uid:
          description: Podium unique identifier for review.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the review was last updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
      title: review
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Review
    review_attribution:
      description: A review attribution.
      properties:
        createdAt:
          description: When the review was attributed.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        editedByUser:
          properties:
            uid:
              description: Podium unique identifier for user.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        isDeleted:
          description: If the attribution is deleted
          nullable: true
          type: boolean
        reviewInvite:
          properties:
            uid:
              description: Podium unique identifier for review invite.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        siteReviewId:
          description: Review site's unique identifier for the review posted.
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for review attribution.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the attribution was updated
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
        user:
          properties:
            uid:
              description: Podium unique identifier for user.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
      title: review_attribution
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ReviewAttribution
    review_invite:
      description: A review invite.
      properties:
        attributions:
          items:
            description: Review that was created from the invite.
            properties:
              reviewAuthor:
                description: Name of person who created the review.
                example: Joe Orange
                nullable: true
                type: string
              reviewBody:
                description: Body of the review.
                example: Great service!
                nullable: true
                type: string
              reviewPublishedAt:
                description: When the review was published.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                nullable: true
                type: string
              reviewRating:
                description: Rating of the review.
                example: 5
                nullable: true
                type: integer
              reviewUid:
                description: Podium unique identifier for review.
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                nullable: true
                type: string
                x-validate: Elixir.KumeteApi.Schema.Common.UUID
              siteName:
                description: Name of the site that the review was published on.
                example: google
                nullable: true
                type: string
            type: object
          type: array
        channel:
          description: Channel the review invite was sent through
          properties:
            identifier:
              description: >-
                Identifies the Messenger channel. Must be a valid email address
                or a phone number. Non-US/Canada numbers must include the
                country code (e.g. +61 for AUS)
              example: email@email.com
              nullable: true
              type: string
            type:
              description: Messenger channel for the conversation.
              enum:
                - apple
                - car_wars
                - email
                - facebook
                - fallback_email
                - google
                - google_brand
                - iframe
                - phone
                - secure
                - sms
                - text
                - whatsapp
              example: email
              nullable: true
              type: string
          type: object
        conversationItemUid:
          description: Podium unique identifier for conversation item.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        createdAt:
          description: When the review invite was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        customerName:
          description: The name of the customer that the review invite was sent to.
          example: John Apple
          nullable: true
          type: string
        deliveryStatus:
          description: Delivery status of the review invite.
          enum:
            - failed
            - pending
            - sent
            - delivered
          nullable: true
          type: string
        languages:
          items:
            description: Language of the review invite message.
            example: en
            type: string
          type: array
        linkClicked:
          description: Whether or not the review invite link has been clicked.
          example: false
          nullable: true
          type: boolean
        linkClickedAt:
          description: When the review invite link was clicked.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        location:
          description: Location that the review invite was created on behalf of.
          properties:
            organizationUid:
              description: Podium unique identifier for organization.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            uid:
              description: Podium unique identifier for location.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        sender:
          description: Podium user who sent the review invite
          properties:
            name:
              description: >-
                Name of the employee that sent the review invite. If it was an
                automated invite the value will be `external`.
              example: Jack Grape
              nullable: true
              type: string
            sentThrough:
              description: Podium product that the review invite was sent through.
              enum:
                - client_app
                - feedback
                - generated_link_only
                - integrations
                - payments
                - email
                - sms
                - mms
                - external
              nullable: true
              type: string
            type:
              description: Type of entity that sent the review invite.
              enum:
                - user
                - integration
              nullable: true
              type: string
            uid:
              description: Podium unique identifier for user or integration.
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              nullable: true
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
          type: object
        shortUrl:
          description: Short form url to view the review invite in Podium.
          example: https://podium.co/QDNrE1v
          nullable: true
          type: string
        test:
          description: Whether or not the review invite was a test.
          example: false
          nullable: true
          type: boolean
        uid:
          description: Podium unique identifier for review invite.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the review invite was updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        url:
          description: Url to view the review invite in Podium.
          example: http://app.podium.com/#/91f85f79-185c-46cb-830d-79f259bb2822?v2=true
          nullable: true
          type: string
      title: review_invite
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ReviewInvite
    review_response:
      description: A response to a review
      properties:
        body:
          description: Body of the message.
          example: Thank you for the kind review!
          nullable: true
          type: string
        isDeleted:
          description: Indicate whether the review response is deleted
          example: false
          nullable: false
          type: boolean
        likeCount:
          description: Number of likes the review response has received
          example: 0
          nullable: true
          type: integer
        publishDate:
          description: When the review response was published
          example: '2015-01-23T23:50:07Z'
          format: date-time
          type: string
        siteAuthorName:
          description: Name of the author of the site
          example: Happy Place Furniture
          nullable: true
          type: string
        source:
          description: Source of the review response
          example: EXTERNAL
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for review_response.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: false
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
      title: review_response
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ReviewResponse
    review_sites_summary:
      properties:
        averageRating:
          description: Average of all review ratings.
          example: 4.839542760372566
          type: number
        reviewCount:
          description: Number of reviews.
          example: 2362
          type: integer
        siteName:
          description: Name of the site.
          example: google
          type: string
      title: review_sites_summary
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ReviewSitesSummary
    review_summary:
      properties:
        averageRating:
          description: Average of all review ratings.
          example: 4.839542760372566
          nullable: true
          type: number
        locationUid:
          description: Podium unique identifier for location.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        reviewCount:
          description: Number of reviews.
          example: 2362
          type: integer
      title: review_summary
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.ReviewSummary
    webhook:
      description: A webhook.
      properties:
        createdAt:
          description: When the webhook was created.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        disabled:
          description: Whether the webhook is disabled or not.
          type: boolean
        eventTypes:
          items:
            description: Event types that will be sent to webhook.
            enum:
              - contact.created
              - contact.deleted
              - contact.merged
              - contact.unchanged
              - contact.updated
              - invoice.created
              - invoice.disabled
              - invoice.marked_as_paid
              - invoice.payment_created
              - invoice.payment_failed
              - invoice.payment_succeeded
              - invoice.refund_created
              - invoice.refund_failed
              - message.failed
              - message.received
              - message.sent
              - review.created
              - review.invite_link_created
              - review.invite_link_updated
              - review.response_created
              - review.response_updated
              - review.updated
            type: string
          minItems: 1
          type: array
        locationUid:
          description: Podium unique identifier for location.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        organizationUid:
          description: Podium unique identifier for location.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          nullable: true
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        secret:
          description: Secret used to sign webhook events.
          nullable: true
          type: string
        uid:
          description: Podium unique identifier for webhook.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        updatedAt:
          description: When the webhook was last updated.
          example: '2015-01-23T23:50:07Z'
          format: date-time
          nullable: true
          type: string
        url:
          description: URL that webhook events will be sent to.
          example: https://www.podium.com/
          nullable: true
          type: string
      title: webhook
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.Webhook
    data_feed_event:
      description: Event that is processed through a data feed.
      properties:
        dataFeedUid:
          description: Podium unique identifier for data feed.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
        uid:
          description: Podium unique identifier for data feed event.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
          x-validate: Elixir.KumeteApi.Schema.Common.UUID
      title: data_feed_event
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.DataFeedEvent
    data_stream:
      description: >
        Data Stream, send third party integration information to be mapped and
        used within Podium platform.
      properties:
        message:
          description: Response to the data stream request.
          nullable: false
          type: string
      title: data_stream
      type: object
      x-struct: Elixir.KumeteApi.Schema.Resources.DataStream
info:
  title: Workflows
  version: 2021.04.01
openapi: 3.0.0
paths:
  /v4/locations:
    get:
      callbacks: {}
      description: >-
        List of all the locations that the caller has access to.


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Required scope: `read_locations`.
      operationId: location.index
      parameters:
        - description: String you would like to search for in the `searchFields` parameter.
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: >-
            A list of the fields where you want to search for the `search`
            parameters. e.g. ?searchFields[]=name&searchFields[]=displayname
          in: query
          name: searchFields
          required: false
          schema:
            default:
              - name
            items:
              enum:
                - address
                - displayName
                - name
                - podiumPhoneNumber
              type: string
            type: array
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/location'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all locations.
      tags:
        - Location
  /v4/locations/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a single location by its uid.

        Required scope: `read_locations`.
      operationId: location.get
      parameters:
        - description: Podium unique identifier for location.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/location'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a location.
      tags:
        - Location
    patch:
      callbacks: {}
      description: >
        Update a single location by its uid. 


        Required scope: `write_locations`.


        Be aware: The `addressDetails` property follows the ISO convention. You
        might see errors


        if trying to update a location's address with an invalid address.
      operationId: location.update
      parameters:
        - description: Podium unique identifier for location.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              minProperties: 1
              properties:
                addressDetails:
                  description: Address of the location with details
                  properties:
                    city:
                      description: The city of the location's address
                      example: Sao Paulo
                      type: string
                    country:
                      description: The country of the location's address
                      example: BR
                      type: string
                    countryLongName:
                      description: The long country name of the location's address
                      example: Brazil
                      type: string
                    houseNumber:
                      description: The house number of the location's address
                      example: '195'
                      type: string
                    postalCode:
                      description: The postal code of the location's address
                      example: '84093'
                      type: string
                    road:
                      description: The road of the location's address
                      example: Digital Dr
                      type: string
                    state:
                      description: The state of the location's address
                      example: SP
                      type: string
                    stateLongName:
                      description: The long state name of the location's address
                      example: Sao Paulo
                      type: string
                    unit:
                      description: The unit of the location's address
                      example: '123'
                      type: string
                  type: object
                displayName:
                  description: The display name of the resource
                  example: Podium US
                  type: string
                name:
                  description: The name of the resource
                  example: Podium
                  type: string
                phoneNumber:
                  description: The phone number of the resource
                  example: '+18884441234'
                  pattern: ^\+[1-9]\d{1,15}$
                  type: string
              type: object
        description: Update location params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/location'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a location.
      tags:
        - Location
  /v4/organizations/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a single organization by its uid.

        Required scope: `read_organizations`.
      operationId: organization.get
      parameters:
        - description: Podium unique identifier for organization.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/organization'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get an organization.
      tags:
        - Organization
  /v4/users:
    get:
      callbacks: {}
      description: >
        List of all the users that belong to any of the locations that the
        caller has access to.


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Required scope: `read_users`.
      operationId: user.index
      parameters:
        - description: String you would like to search for in the `searchFields` parameter.
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Filter on the `createdAt` date.
          in: query
          name: createdAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
        - description: >-
            A list of the fields where you want to search for the `search`
            parameters. e.g. ?searchFields[]=name&searchFields[]=displayname
          in: query
          name: searchFields
          required: false
          schema:
            default:
              - fullName
            items:
              enum:
                - address
                - phone
                - fullName
              type: string
            type: array
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/user'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all users.
      tags:
        - User
  /v4/users/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a user.

        Required scope: `read_users`.
      operationId: user.get
      parameters:
        - description: Podium unique identifier for user.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/user'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a user.
      tags:
        - User
  /v4/appointments:
    post:
      callbacks: {}
      description: |-
        Create an appointment.

        Required scope: `write_appointments`.
      operationId: appointment.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assignedUserUid:
                  description: Podium unique identifier for user.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                contactName:
                  description: Name of the contact.
                  example: John Doe
                  type: string
                contactPhoneNumber:
                  description: >-
                    Phone number of the contact. Phone number should be
                    formatted as '+15555555555'
                  example: '+17626765098'
                  type: string
                datetime:
                  description: Date and time of the appointment.
                  example: '2015-01-23T23:50:07Z'
                  format: date-time
                  type: string
                durationMin:
                  description: How many minutes long the appointment is.
                  type: integer
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                note:
                  description: Note that is attached to the appointment.
                  example: Note for the appointment.
                  maxLength: 500
                  type: string
                status:
                  default: unconfirmed
                  description: Status of the appointment.
                  enum:
                    - cancelled
                    - completed
                    - confirmed
                    - no_show
                    - unconfirmed
                  type: string
                type:
                  default: in_person
                  description: Type of appointment.
                  enum:
                    - in_person
                    - virtual
                  type: string
              required:
                - contactName
                - contactPhoneNumber
                - datetime
                - locationUid
              type: object
        description: Create appointment params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/appointment'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create an appointment.
      tags:
        - Appointment
  /v4/campaign_interactions:
    get:
      callbacks: {}
      description: >
        List the campaign interactions that the caller has access to.


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Interactions can be filtered by type, uid of the associated resource, or
        timestamp.


        Required scope: `read_campaigns`.
      operationId: campaign_interaction.index
      parameters:
        - description: ''
          in: query
          name: campaignUid
          required: false
          schema:
            description: Campaign UUID
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: ''
          in: query
          name: contactUid
          required: false
          schema:
            description: Contact UUID
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: ''
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
        - description: The type of interaction this record represents
          in: query
          name: interactionType
          required: false
          schema:
            items:
              enum:
                - sent
                - queued
                - failed
                - feedback_left
                - link_clicked
                - opt_out
                - payment_made
                - response
                - review_left
                - resubscribe
              type: string
            type: array
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: ''
          in: query
          name: locationUid
          required: false
          schema:
            description: Location UUID
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/campaign_interaction'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List campaign interactions
      tags:
        - Campaign Interaction
  /v4/campaigns:
    get:
      callbacks: {}
      description: >-
        List of all the campaigns that the caller has access to. The campaigns
        are sorted by the `updatedAt` date, in descending order


        Campaigns can be filtered by their status using the `status` query
        parameter


        Required scope: `read_campaigns`.
      operationId: campaign.index
      parameters:
        - description: Status of the campaign
          in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/campaign'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all campaigns.
      tags:
        - Campaign
    post:
      callbacks: {}
      description: |-
        Create a campaign.

        Required scope: `write_campaigns`.
      operationId: campaign.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                includeActiveConversations:
                  default: false
                  description: >-
                    Should this message be sent to subscribers who have an
                    active conversation in the Inbox?
                  type: boolean
                locations:
                  description: List of location UIDs
                  items:
                    description: Podium unique identifier for location.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  type: array
                message:
                  description: The message sent to subscribers
                  example: Get 50% off this memorial day weekend!
                  type: string
                name:
                  description: The name of the campaign
                  example: Memorial Day sale
                  type: string
                recentlySentSubscriberOverride:
                  default: false
                  description: >-
                    Should this message be sent to subscribers who have received
                    a campaign in the past 5 days?
                  type: boolean
                status:
                  description: The current campaign status
                  enum:
                    - ACTIVE
                    - COMPLETED
                    - DRAFT
                    - ERROR
                    - INACTIVE
                    - IN_PROGRESS
                    - SCHEDULED
                    - STOPPED
                    - SUSPENDED
                    - ARCHIVED
                  type: string
              required:
                - locations
                - name
                - status
              type: object
        description: Create campaign params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/campaign'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a campaign.
      tags:
        - Campaign
  /v4/campaigns/{uid}:
    delete:
      callbacks: {}
      description: |-
        Delete an existing campaign.

        Required scope: `write_campaigns`.
      operationId: campaign.delete
      parameters:
        - description: UID of the campaign
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/campaign'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Delete a campaign.
      tags:
        - Campaign
    get:
      callbacks: {}
      description: |-
        Get a single campaign for the given uid. 


                Required scope: `read_campaigns`.
      operationId: campaign.get
      parameters:
        - description: UID of the campaign
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/campaign'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a campaign.
      tags:
        - Campaign
    put:
      callbacks: {}
      description: |-
        update a campaign.

        Required scope: `write_campaigns`.
      operationId: campaign.update
      parameters:
        - description: Podium unique identifier for a campaign.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                includeActiveConversations:
                  default: false
                  description: >-
                    Should this message be sent to subscribers who have an
                    active conversation in the Inbox?
                  type: boolean
                locations:
                  description: List of location UIDs
                  items:
                    description: Podium unique identifier for location.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  type: array
                message:
                  description: The message sent to subscribers
                  example: Get 50% off this memorial day weekend!
                  type: string
                name:
                  description: The name of the campaign
                  example: Memorial Day sale
                  type: string
                recentlySentSubscriberOverride:
                  default: false
                  description: >-
                    Should this message be sent to subscribers who have received
                    a campaign in the past 5 days?
                  type: boolean
                status:
                  description: The current campaign status
                  enum:
                    - ACTIVE
                    - COMPLETED
                    - DRAFT
                    - ERROR
                    - INACTIVE
                    - IN_PROGRESS
                    - SCHEDULED
                    - STOPPED
                    - SUSPENDED
                    - ARCHIVED
                  type: string
              required:
                - locations
                - name
                - status
              type: object
        description: Update campaign params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/campaign'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a campaign.
      tags:
        - Campaign
  /v4/campaigns/{uid}/messages:
    post:
      callbacks: {}
      description: |-
        Send a message through a campaign.

        Required scope: `write_campaign_messages`.
      operationId: message.create_campaign_message
      parameters:
        - description: Podium unique identifier for campaign.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channelIdentifier:
                  description: >-
                    Identifies the Messenger channel. Must be a valid email
                    address or a phone number. Non-US/Canada numbers must
                    include the country code (e.g. +61 for AUS)
                  example: email@email.com
                  type: string
              required:
                - channelIdentifier
              type: object
        description: Create campaign message body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/message'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a message for a given campaign
      tags:
        - Message
  /v4/contact_attributes:
    get:
      callbacks: {}
      description: |
        List contact attributes that are tied to the ownerResource on the token.

        Required scope: `read_contacts`.
      operationId: contact_entity_attribute.index
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/contact_entity_attribute'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List contact attributes
      tags:
        - Contact Attribute
    post:
      callbacks: {}
      description: >
        Create an application or organization level attribute to be used on
        contacts.


        Required scope: `write_contacts`.
      operationId: contact_entity_attribute.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dataType:
                  description: The data type of the attribute value
                  enum:
                    - BOOLEAN
                    - DATETIME
                    - FLOAT
                    - INTEGER
                    - STRING
                    - UUID
                    - SINGLE_SELECT
                    - MULTI_SELECT
                  type: string
                isEncrypted:
                  default: true
                  description: >-
                    If the attribute is encrypted it cannot be used as a filter.
                    Attributes that will have sensitive information, such as PII
                    or PHI, should be encrypted. Defaults to true.
                  type: boolean
                label:
                  description: The label of the attribute.
                  example: Internal Contact ID
                  minLength: 1
                  nullable: false
                  type: string
                ownerResourceType:
                  enum:
                    - PRODUCT
                    - ORGANIZATION
                  type: string
              required:
                - dataType
                - label
                - ownerResourceType
              type: object
        description: Create contact attribute params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a contact attribute
      tags:
        - Contact Attribute
  /v4/contact_attributes/{uid}:
    delete:
      callbacks: {}
      description: |-
        Delete a contact attribute with its uid.

        Required scope: `write_contacts`.
      operationId: contact_entity_attribute.delete
      parameters:
        - description: Podium unique identifier for attribute.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Delete a contact attribute
      tags:
        - Contact Attribute
    get:
      callbacks: {}
      description: >
        Gets an application or organization level attribute by its uid, to be
        used on contacts.


        Required scope: `read_contacts`.
      operationId: contact_entity_attribute.get
      parameters:
        - description: Contacts attribute uid
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Gets a contact attribute by uid
      tags:
        - Contact Attribute
    patch:
      callbacks: {}
      description: >
        Update an application or organization level attribute to be used on
        contacts.


        Required scope: `write_contacts`.
      operationId: contact_entity_attribute.update
      parameters:
        - description: Podium unique identifier for attribute.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dataType:
                  description: The data type of the attribute value.
                  enum:
                    - BOOLEAN
                    - DATETIME
                    - FLOAT
                    - INTEGER
                    - STRING
                    - UUID
                    - SINGLE_SELECT
                    - MULTI_SELECT
                  type: string
                isEncrypted:
                  description: >-
                    If the attribute is encrypted it cannot be used as a filter.
                    Attributes that will have sensitive information, such as PII
                    or PHI, should be encrypted.
                  type: boolean
                label:
                  description: The label of the attribute.
                  example: Internal Contact ID
                  type: string
                ownerResourceType:
                  description: Owner resource object
                  enum:
                    - PRODUCT
                    - ORGANIZATION
                  type: string
              type: object
        description: Update contact attribute params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a contact attribute
      tags:
        - Contact Attribute
  /v4/contact_tags:
    get:
      callbacks: {}
      description: |
        List all tags for the organization.

        Required scope: `read_contacts`.
      operationId: contact_entity_tag.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/contact_entity_tag'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all tags for the organization
      tags:
        - Contact Tag
    post:
      callbacks: {}
      description: |
        Create an organization level tag for a contact.

        Required scope: `write_contacts`.
      operationId: contact_entity_tag.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                description:
                  description: The description of the tag
                  example: High priority contacts
                  type: string
                label:
                  description: The label value for the tag
                  example: priority
                  minLength: 1
                  nullable: false
                  type: string
              required:
                - label
                - description
              type: object
        description: Create contact tag params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_tag'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a contact tag for an organization
      tags:
        - Contact Tag
  /v4/contact_tags/{uid}:
    get:
      callbacks: {}
      description: |
        Get a organization level tag given the provided uid.

        Required scope: `read_contacts`.
      operationId: contact_entity_tag.get
      parameters:
        - description: Contacts tags uid
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_tag'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a contact tag for an organization given an uid
      tags:
        - Contact Tag
    patch:
      callbacks: {}
      description: |
        Update an organization level tag to be used on contacts.

        Required scope: `write_contacts`.
      operationId: contact_entity_tag.update
      parameters:
        - description: Podium unique identifier for tag.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              minProperties: 1
              properties:
                description:
                  description: The description of the tag
                  example: High priority contacts
                  type: string
                label:
                  description: The label value for the tag
                  example: priority
                  type: string
              type: object
        description: Update contact tag params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_entity_tag'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a contact tag
      tags:
        - Contact Tag
  /v4/contacts:
    get:
      callbacks: {}
      description: |-
        List all contacts.

        Required scope: `read_contacts`.
      operationId: contact.index
      parameters:
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all contacts
      tags:
        - Contact
    post:
      callbacks: {}
      description: >
        Create a contact. If a contact with the same phone number, email, or
        conversation uid is found it will update the contact.


        Required scope: `write_contacts`.
      operationId: contact.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                attributes:
                  description: List of attribute objects
                  items:
                    description: An attribute contact
                    properties:
                      uid:
                        description: Podium unique identifier for attribute.
                        example: 00000000-0000-0000-0000-000000000000
                        format: uuid
                        type: string
                        x-validate: Elixir.KumeteApi.Schema.Common.UUID
                      value:
                        description: The value of the attribute
                        example: Brown eyes
                        type: string
                    type: object
                  type: array
                email:
                  description: The email address of the resource
                  example: john.doe@podium.com
                  pattern: (.+)@(.+)\.(.+)
                  type: string
                locations:
                  description: List of location UIDs
                  items:
                    description: Podium unique identifier for location.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  type: array
                name:
                  description: The name of the resource
                  example: John Doe
                  type: string
                phoneNumber:
                  description: The phone number of the resource
                  example: '+18884441234'
                  pattern: ^\+[1-9]\d{1,15}$
                  type: string
                tags:
                  description: List of tag UIDs
                  items:
                    description: Podium unique identifier for tag.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  type: array
              required:
                - locations
                - name
              type: object
        description: Create contact params
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_upsert'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a contact
      tags:
        - Contact
  /v4/contacts/campaigns/opt_in:
    post:
      callbacks: {}
      description: |-
        Opt in a contact into receiving campaign messages.
                 Note: this endpoint requires your application to be whitelisted.
                  Please contact our support team to get your application whitelisted.

        Required scope: write_contacts
      operationId: contact.opt_in
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  properties:
                    identifier:
                      description: Identifier of the communication channel
                      example: '+15555555555'
                      type: string
                    type:
                      description: Type of communication channel
                      enum:
                        - PHONE
                      type: string
                  required:
                    - identifier
                    - type
                  type: object
                locationUid:
                  description: Podium unique identifier for the location opted in from
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                name:
                  description: Contacts name
                  type: string
                tags:
                  description: Campaign tags.
                  items:
                    type: string
                  type: array
              required:
                - channel
                - locationUid
              type: object
        description: Contact campaign opt in params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Opt in a contact
      tags:
        - Contact
  /v4/contacts/campaigns/opt_out:
    post:
      callbacks: {}
      description: |-
        Opt out a contact from receiving campaign messages.
                 Note: this endpoint requires your application to be whitelisted.
                  Please contact our support team to get your application whitelisted.

        Required scope: write_contacts
      operationId: contact.opt_out
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  properties:
                    identifier:
                      description: Identifier of the communication channel
                      example: '+15555555555'
                      type: string
                    type:
                      description: Type of communication channel
                      enum:
                        - PHONE
                      type: string
                  required:
                    - identifier
                    - type
                  type: object
              required:
                - channel
              type: object
        description: Contact campaign opt out params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Opt out a contact
      tags:
        - Contact
  /v4/contacts/{identifier}:
    delete:
      callbacks: {}
      description: |-
        Delete a contact with a conversation uid, email, or phone number.

        Required scope: `write_contacts`.
      operationId: contact.delete
      parameters:
        - description: >-
            Conversation uid, phone number, or email to identify the contact.
            Phone number should be formatted as '+15555555555'
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_upsert'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Delete a contact
      tags:
        - Contact
    get:
      callbacks: {}
      description: |-
        Get a contact with a conversation uid, email, or phone number.

        Required scope: `read_contacts`.
      operationId: contact.get
      parameters:
        - description: >-
            Conversation uid, phone number, or email to identify the contact.
            Phone number should be formatted as '+15555555555'
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Retrieve a contact
      tags:
        - Contact
    patch:
      callbacks: {}
      description: >-
        Update a contact with using a conversation uid, email, or phone number
        as an identifier.


        Required scope: `write_contacts`.
      operationId: contact.update
      parameters:
        - description: >-
            Conversation uid, phone number, or email to identify the contact.
            Phone number should be formatted as '+15555555555'
          in: path
          name: identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              minProperties: 1
              properties:
                conversationUid:
                  description: Podium unique identifier for conversation.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                email:
                  description: The email address of the resource
                  example: john.doe@podium.com
                  pattern: (.+)@(.+)\.(.+)
                  type: string
                locations:
                  description: List of location UIDs
                  items:
                    description: Podium unique identifier for location.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  type: array
                name:
                  description: The name of the resource
                  example: John Doe
                  type: string
                phoneNumber:
                  description: The phone number of the resource
                  example: '+18884441234'
                  pattern: ^\+[1-9]\d{1,15}$
                  type: string
              type: object
        description: Update contact params
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_upsert'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a contact
      tags:
        - Contact
  /v4/contacts/{identifier}/attributes/{uid}:
    delete:
      callbacks: {}
      description: |
        Remove an attribute from a contact.

        Required scope: `write_contacts`.
      operationId: contact_attribute.delete
      parameters:
        - description: Contact identifier
          example: john.doe@podium.com
          in: path
          name: identifier
          required: true
          schema:
            type: string
        - description: Podium unique identifier for attribute.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Remove an attribute from a contact
      tags:
        - Contact
    patch:
      callbacks: {}
      description: |
        Update the value of an existing attribute inside an existing contact.

        Required scope: `write_contacts`.
      operationId: contact_attribute.update
      parameters:
        - description: Contact identifier
          example: john.doe@podium.com
          in: path
          name: identifier
          required: true
          schema:
            type: string
        - description: Podium unique identifier for attribute.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  description: The value of the attribute.
                  example: Internal Contact ID
                  type: string
              required:
                - value
              type: object
        description: Update an attribute params
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a contact attribute inside a contact
      tags:
        - Contact
    post:
      callbacks: {}
      description: |
        Add an existing attribute to an existing contact.

        Required scope: `write_contacts`.
      operationId: contact_attribute.create
      parameters:
        - description: Contact identifier
          example: john.doe@podium.com
          in: path
          name: identifier
          required: true
          schema:
            type: string
        - description: Podium unique identifier for attribute.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  description: The value of the attribute.
                  example: Internal Contact ID
                  type: string
              required:
                - value
              type: object
        description: Add an attribute params
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_attribute'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Add a contact attribute to a contact
      tags:
        - Contact
  /v4/contacts/{identifier}/tags/{uid}:
    delete:
      callbacks: {}
      description: |
        Remove an existing tag from an existing contact.

        Required scope: `write_contacts`.
      operationId: contact_tag.create
      parameters:
        - description: Contact identifier
          example: john.doe@podium.com
          in: path
          name: identifier
          required: true
          schema:
            type: string
        - description: Podium unique identifier for tag.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_tag'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Remove an existing tag from an existing contact
      tags:
        - Contact
    post:
      callbacks: {}
      description: |
        Add an existing tag to an existing contact.

        Required scope: `write_contacts`.
      operationId: contact_tag.create (2)
      parameters:
        - description: Contact identifier
          example: john.doe@podium.com
          in: path
          name: identifier
          required: true
          schema:
            type: string
        - description: Podium unique identifier for tag.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/contact_tag'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Add an existing tag to an existing contact
      tags:
        - Contact
  /v4/conversations:
    get:
      callbacks: {}
      description: >-
        List all conversations. 


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Required scope: `read_messages`.
      operationId: conversation.index
      parameters:
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Podium unique identifier for location.
          in: query
          name: locationUid
          required: false
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/conversation'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List conversations.
      tags:
        - Conversation
  /v4/conversations/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a conversation that has previously been created.

        Required scope: `read_messages`.
      operationId: conversation.get
      parameters:
        - description: Podium unique identifier for conversation.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/conversation'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a conversation.
      tags:
        - Conversation
    put:
      callbacks: {}
      description: |-
        Update a conversation.

        Required scope: `write_messages`.
      operationId: conversation.update
      parameters:
        - description: Podium unique identifier for conversation.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assignedUserUid:
                  description: Podium unique identifier for user.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                closed:
                  description: Whether the conversation is open or closed.
                  example: false
                  type: boolean
              type: object
        description: Update conversation params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/conversation'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a conversation.
      tags:
        - Conversation
  /v4/conversations/{uid}/lead_writeback:
    post:
      callbacks: {}
      description: |-
        Writeback lead to the connected CRM.

        Required scope: `write_writebacks`.
      operationId: lead_writeback.get
      parameters:
        - description: Conversation uid of the lead.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/lead_writeback'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Writeback lead
      tags:
        - Conversation
  /v4/conversations/{uid}/notes:
    post:
      callbacks: {}
      description: |-
        Creates a note for the given conversation.

        Required scope: `write_messages`.
      operationId: conversation_note.create_conversation_note
      parameters:
        - description: Podium unique identifier for conversation.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: Body of the note.
                  example: This is a note
                  nullable: false
                  type: string
                senderName:
                  description: Name of the person who created the note.
                  example: John Doe
                  nullable: false
                  type: string
              required:
                - body
                - senderName
              type: object
        description: Create conversation note body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/conversation_note'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a note for given conversation.
      tags:
        - Conversation
  /v4/feedback:
    get:
      callbacks: {}
      description: >-
        List of all the feedback surveys that the caller has access to. The
        surveys are sorted by `createdAt` date, with the most recent appearing
        first.


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Required scope: `read_feedback`.
      operationId: feedback.index
      parameters:
        - description: Filter on the `createdAt` date.
          in: query
          name: createdAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/feedback'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all feedback surveys.
      tags:
        - Feedback
    post:
      callbacks: {}
      description: >-
        Create a feedback survey. The survey is created asynchronously, so only
        the UID is returned.


        Required scope: `write_feedback`.
      operationId: feedback_creation.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                customerName:
                  description: The customer name.
                  type: string
                flowUid:
                  description: flow
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                locationUid:
                  description: location
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                phoneNumber:
                  description: The customer phone number.
                  type: string
              required:
                - customerName
                - locationUid
                - phoneNumber
              type: object
        description: Create feedback survey params
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/feedback_creation'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a feedback survey.
      tags:
        - Feedback
  /v4/conversations/{conversation_uid}/messages/{uid}:
    get:
      callbacks: {}
      description: |-
        Retrieve a message from a conversation.

        Required scope: `read_messages`.
      operationId: message.get
      parameters:
        - description: Podium unique identifier for message.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Podium unique identifier for conversation.
          in: path
          name: conversation_uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/message'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Retreive a message from a conversation
      tags:
        - Message
  /v4/import/messages:
    post:
      callbacks: {}
      description: >
        Import a message from a different system. NOTE: This does not send a
        message to number, just imports it into a conversation on Podium's
        system.


        Required scope: `write_messages`.
      operationId: message.import
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: Text of the message.
                  example: Just a reminder that your appointment is today!
                  type: string
                channel:
                  description: The channel that the message was sent to.
                  properties:
                    identifier:
                      description: >-
                        Identifies the Messenger channel. Must be a valid email
                        address or a phone number. Non-US/Canada numbers must
                        include the country code (e.g. +61 for AUS)
                      example: email@email.com
                      type: string
                    type:
                      description: Messenger channel for the conversation.
                      enum:
                        - email
                        - phone
                      example: email
                      type: string
                  required:
                    - identifier
                    - type
                  type: object
                contactName:
                  description: Name of the contact that the message was sent to.
                  example: Joe Orange
                  type: string
                direction:
                  description: Direction of the message.
                  enum:
                    - inbound
                    - outbound
                  example: inbound
                  type: string
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                publishedAt:
                  description: When the mesage was originally published.
                  example: '2015-01-23T23:50:07Z'
                  format: date-time
                  type: string
                subject:
                  description: Subject of the message.
                  example: Appointment reminder
                  type: string
              required:
                - body
                - channel
                - contactName
                - direction
                - locationUid
                - publishedAt
              type: object
        description: Import message body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/message'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Import a message.
      tags:
        - Message
  /v4/messages:
    post:
      callbacks: {}
      description: >
        Send a message. A message can only be sent on behalf of a user if they
        have the necessary permissions to send

        messages in: conversations assigned to them, conversations assigned to
        others, and unassigned conversations.


        Required scope: `write_messages`.
      operationId: message.send
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: Text of the message.
                  example: Just a reminder that your appointment is today!
                  type: string
                channel:
                  description: Channel to send the message to.
                  properties:
                    identifier:
                      description: >-
                        Identifies the Messenger channel. Must be a valid email
                        address or a phone number. Non-US/Canada numbers must
                        include the country code (e.g. +61 for AUS)
                      example: email@email.com
                      type: string
                    type:
                      description: Messenger channel for the conversation.
                      enum:
                        - email
                        - phone
                      example: email
                      type: string
                  required:
                    - identifier
                    - type
                  type: object
                contactName:
                  description: >-
                    Name of the contact to send the message to. If a contact
                    already exists for the channel then their name will be
                    updated.
                  example: Joe Orange
                  type: string
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                senderName:
                  description: >-
                    The name that will be credited with sending the message.
                    This will appear under the sent message in the Podium app.
                  example: Bot1234
                  type: string
                setOpenInbox:
                  default: false
                  description: >-
                    new conversations will be created in a 'closed' state by
                    default. This will override that setting going to 'open'
                    inbox.
                  example: true
                  type: boolean
                subject:
                  description: Subject of the message.
                  example: Appointment reminder
                  type: string
              required:
                - body
                - channel
                - locationUid
              type: object
        description: Create message body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/message'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Send a message.
      tags:
        - Message
  /v4/messages/attachment:
    post:
      callbacks: {}
      description: >
        Send a message with an attachment. A message can only be sent on behalf
        of a user if they have the necessary permissions to send

        messages in: conversations assigned to them, conversations assigned to
        others, and unassigned conversations.


        Required scope: `write_messages`.
      operationId: message.send_with_attachment
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: multipart request body
              properties:
                attachment:
                  description: The attachment content.
                  format: binary
                  nullable: true
                  type: string
                data:
                  properties:
                    body:
                      description: Text of the message.
                      example: Just a reminder that your appointment is today!
                      type: string
                    channel:
                      description: Channel to send the message to.
                      properties:
                        identifier:
                          description: >-
                            Identifies the Messenger channel. Must be a valid
                            email address or a phone number. Non-US/Canada
                            numbers must include the country code (e.g. +61 for
                            AUS)
                          example: email@email.com
                          type: string
                        type:
                          description: Messenger channel for the conversation.
                          enum:
                            - email
                            - phone
                          example: email
                          type: string
                      required:
                        - identifier
                        - type
                      type: object
                    contactName:
                      description: >-
                        Name of the contact to send the message to. If a contact
                        already exists for the channel then their name will be
                        updated.
                      example: Joe Orange
                      type: string
                    locationUid:
                      description: Podium unique identifier for location.
                      example: 00000000-0000-0000-0000-000000000000
                      format: uuid
                      type: string
                      x-validate: Elixir.KumeteApi.Schema.Common.UUID
                    senderName:
                      description: >-
                        The name that will be credited with sending the message.
                        This will appear under the sent message in the Podium
                        app.
                      example: Bot1234
                      type: string
                    subject:
                      description: Subject of the message.
                      example: Appointment reminder
                      type: string
                  required:
                    - body
                    - channel
                    - locationUid
                  type: object
              required:
                - data
              type: object
        description: Create message with attachment body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/message'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Send a message with attachment.
      tags:
        - Message
  /v4/templates:
    get:
      callbacks: {}
      description: |-
        List all templates.

        Required scope: `read_templates`.
      operationId: Template.index
      parameters:
        - description: >
            Filter by types: "custom", "review_invite", or
            "review_invite_backup", defaults to "custom"
          in: query
          name: types
          required: false
          schema:
            items:
              enum:
                - custom
                - review_invite
                - review_invite_backup
              type: string
            type: array
        - description: Podium unique identifier for location.
          in: query
          name: locationUid
          required: false
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Template'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all templates
      tags:
        - Template
    post:
      callbacks: {}
      description: |
        Create a message template.

        Required scope: `write_templates`.
      operationId: Template.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accessLevel:
                  description: >-
                    The access level of the template. Must be 'location' or
                    'organization'.
                  enum:
                    - location
                    - organization
                  example: location
                  type: string
                attachmentUrl:
                  description: URL of template attachment.
                  example: https://www.podium.com/
                  nullable: true
                  type: string
                locationUids:
                  description: >-
                    list of locations or empty list. Required when 'accessLevel'
                    is 'location'.
                  items:
                    description: Podium unique identifier for location.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  nullable: true
                  type: array
                nonDeletable:
                  default: false
                  description: If the template can be deleted.
                  type: boolean
                subject:
                  description: The template subject.
                  type: string
                text:
                  description: Text of the template message.
                  type: string
                title:
                  description: Title of the template.
                  type: string
                type:
                  description: >-
                    Type of the template. Must be 'custom, 'review_invite', or
                    'review_invite_backup'
                  enum:
                    - custom
                    - review_invite
                    - review_invite_backup
                  type: string
              required:
                - text
                - title
                - type
                - accessLevel
              type: object
        description: Create template params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Template'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a message template.
      tags:
        - Template
  /v4/templates/{uid}:
    delete:
      callbacks: {}
      description: |-
        Deletes a template by the given uid. 

        Required scope: `write_templates`
      operationId: Template.delete
      parameters:
        - description: Podium unique identifier for templates.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Template'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Delete a template
      tags:
        - Template
    put:
      callbacks: {}
      description: |
        update a message template.

        Required scope: `write_templates`.
      operationId: Template.update
      parameters:
        - description: Template uid
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accessLevel:
                  description: >-
                    The access level of the template. Must be 'location' or
                    'organization'.
                  enum:
                    - location
                    - organization
                  example: location
                  type: string
                attachmentUrl:
                  description: URL of template attachment.
                  example: https://www.podium.com/
                  nullable: true
                  type: string
                locationUids:
                  description: >-
                    list of locations or empty list. Required when 'accessLevel'
                    is 'location'.
                  items:
                    description: Podium unique identifier for location.
                    example: 00000000-0000-0000-0000-000000000000
                    format: uuid
                    type: string
                    x-validate: Elixir.KumeteApi.Schema.Common.UUID
                  nullable: true
                  type: array
                nonDeletable:
                  default: false
                  description: If the template can be deleted.
                  type: boolean
                subject:
                  description: The template subject.
                  type: string
                text:
                  description: Text of the template message.
                  type: string
                title:
                  description: Title of the template.
                  type: string
                type:
                  description: >-
                    Type of the template. Must be 'custom, 'review_invite', or
                    'review_invite_backup'
                  enum:
                    - custom
                    - review_invite
                    - review_invite_backup
                  type: string
                uid:
                  description: >-
                    Podium unique identifier for The unique identifier of the
                    template..
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  nullable: true
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
              required:
                - text
                - title
                - type
                - accessLevel
              type: object
        description: Update template params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Template'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a message template.
      tags:
        - Template
  /v4/invoices:
    get:
      callbacks: {}
      description: |-
        List of all invoices that match the query parameters.

        Required scope: `read_payments`.
      operationId: invoice.index
      parameters:
        - description: Podium unique identifier for location.
          in: query
          name: locationUid
          required: false
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: >-
            Return invoices with a payment whose `createdAt` is greater or equal
            to this date.
          in: query
          name: datePaid
          required: false
          schema:
            description: Date time in Coordinated Universal Time (UTC).
            example: '2015-01-23T23:50:07Z'
            format: date-time
            type: string
        - description: >-
            Return invoices with a refund whose `createdAt` is greater or equal
            to this date.
          in: query
          name: dateRefunded
          required: false
          schema:
            description: Date time in Coordinated Universal Time (UTC).
            example: '2015-01-23T23:50:07Z'
            format: date-time
            type: string
        - description: Return invoices whose `createdAt` is greater or equal to this date.
          in: query
          name: dateCreated
          required: false
          schema:
            description: Date time in Coordinated Universal Time (UTC).
            example: '2015-01-23T23:50:07Z'
            format: date-time
            type: string
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Retrieves the page of items that comes after or before the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/invoice'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get all invoices.
      tags:
        - Invoice
    post:
      callbacks: {}
      description: >
        Creates an invoice which is either a `card_present` or a
        `card_not_present` invoice.

        Providing the `reader_uid` property will create a `card_present`
        invoice, but if no `reader_uid`

        is provided a `card_not_present` invoice will be created.



        ### Card Present Invoice


        A card-present-invoice is used to process an invoice through a card
        reader. After the invoice

        is created, there is a callback to the card reader to complete the
        transaction. If no

        `accountUid` is given, the card reader's default account is used.


        ### Card Not Present Invoice


        A card-not-present-invoice is used to process an invoice asynchronously.
        After the invoice is

        created, a payment link is sent to the customer from the merchants
        Podium account. The customer

        can click on the link to complete the transaction. If no `accountUid` is
        given, the most

        recently created account is used.


        Required scope: `write_payments`.
      operationId: invoice.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accountUid:
                  description: Podium unique identifier for bank account.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                allowedPaymentOptions:
                  description: Restrict allowed payment options to the ones provided.
                  items:
                    enum:
                      - bankAccount
                      - creditCard
                      - debitCard
                      - buyNowPayLaterAffirm
                    type: string
                  type: array
                channelIdentifier:
                  description: >-
                    Identifies the Messenger channel. Must be a valid email
                    address or a phone number. Non-US/Canada numbers must
                    include the country code (e.g. +61 for AUS)
                  example: email@email.com
                  type: string
                customerName:
                  description: Name of the customer who will receive the invoice.
                  example: Barry Grape
                  type: string
                invoiceNumber:
                  description: >-
                    An identifier that can be used as reference ID from an
                    external system.
                  example: abc-12345-def
                  type: string
                lineItems:
                  items:
                    description: Separate items or services that make up an invoice.
                    properties:
                      amount:
                        description: >-
                          Amount to be charged for the line item, represented in
                          cents.
                        example: 4186
                        maximum: 99999900
                        type: integer
                      description:
                        default: Total
                        description: Description of the item or service being charged.
                        example: Oil change.
                        maxLength: 50
                        type: string
                    required:
                      - amount
                    type: object
                  maxItems: 10
                  minItems: 1
                  type: array
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                readerUid:
                  description: Podium unique identifier for card reader.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
              required:
                - channelIdentifier
                - customerName
                - lineItems
                - locationUid
              type: object
        description: Create invoice params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/invoice'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create an invoice.
      tags:
        - Invoice
  /v4/invoices/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets an invoice that has previously been created.

        Required scope: `read_payments`.
      operationId: invoice.get
      parameters:
        - description: Podium unique identifier for invoice.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Podium unique identifier for location.
          in: query
          name: locationUid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/invoice'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get an invoice.
      tags:
        - Invoice
  /v4/invoices/{uid}/cancel:
    post:
      callbacks: {}
      description: >-
        Cancels an invoice. The seller cannot collect payments for the canceled
        invoice.


        Required scope: `write_payments`.
      operationId: invoice.cancel
      parameters:
        - description: Podium unique identifier for invoice.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                note:
                  description: Internal note left as to why it was canceled.
                  example: Voided invoice.
                  type: string
              required:
                - locationUid
                - note
              type: object
        description: Invoice cancel params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/invoice'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Cancel an invoice.
      tags:
        - Invoice
  /v4/invoices/{uid}/refund:
    post:
      callbacks: {}
      description: >-
        Refunds an invoice. The invoice must currently have a `status` of
        `paid`.If an invoice has a `status` of `created` it cannot be refunded,
        but can be canceled. An invoice can have multiple refunds. The total
        refunded amount cannot exceed the invoice's `amount`.


        Required scope: `write_payments`.
      operationId: invoice.refund
      parameters:
        - description: Podium unique identifier for invoice.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: Amount to refund on the invoice, represented in cents.
                  example: 4186
                  minimum: 1
                  type: integer
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                note:
                  description: Detailed note for why the refund was initiated.
                  example: incorrect amount
                  type: string
                paymentUid:
                  description: Podium unique identifier for payment.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                reason:
                  description: Generic reason for why the refund was initiated.
                  enum:
                    - accidental_charge
                    - canceled
                    - duplicate
                    - fraudulent
                    - requested_by_customer
                  type: string
              required:
                - amount
                - locationUid
                - paymentUid
                - reason
              type: object
        description: Invoice refund params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/invoice'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Refund an invoice
      tags:
        - Invoice
  /v4/payments/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a single payment by its uid.

        Required scope: `read_payments`.
      operationId: payment.get
      parameters:
        - description: Podium unique identifier for payment.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/payment'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a payment.
      tags:
        - Payment
  /v4/readers/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a single card reader by its uid.

        Required scope: `read_payments`.
      operationId: reader.get
      parameters:
        - description: Podium unique identifier for reader.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/reader'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a card reader.
      tags:
        - Reader
  /v4/refunds:
    post:
      callbacks: {}
      description: |
        Creates a refund. (see note)

          **Use with caution.** This action creates an Unlinked Refund that is not associated with an
          Podium Invoice or Payment. This current implementation *only works*
          with a Podium Payment Card Reader, reading the customer's credit card data
          before debiting the refunded amount.

          **Balance requirements.** This action requires that your account have on hand an amount
          equal to or greater than the amount of the refund. The amount for this refund will be
          deducted from the amount still to pay out from the account. If the account does not have
          sufficient funds, the refund will fail.

          **Upcoming change:** When this resource supports refunding a Podium Invoice,
          `/invoices/uid/refund` is planned to be deprecated.

          Required scope: `write_payments`.
      operationId: Refund.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accountUid:
                  description: Podium unique identifier for bank account.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                amount:
                  description: Amount to refund to the customer, represented in cents.
                  example: 4186
                  minimum: 1
                  type: integer
                channelIdentifier:
                  description: >-
                    Identifies the Messenger channel. Must be a valid email
                    address or a phone number. Non-US/Canada numbers must
                    include the country code (e.g. +61 for AUS)
                  example: email@email.com
                  type: string
                customerName:
                  description: Name of the customer who will receive the refund.
                  example: Barry Grape
                  type: string
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                readerUid:
                  description: Podium unique identifier for card reader.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                reason:
                  description: Generic reason for why the refund was initiated.
                  enum:
                    - accidental_charge
                    - canceled
                    - duplicate
                    - fraudulent
                    - requested_by_customer
                    - other
                  type: string
              required:
                - amount
                - channelIdentifier
                - customerName
                - locationUid
                - readerUid
                - reason
              type: object
        description: Create refund params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Refund'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a refund.
      tags:
        - Refund
  /v4/refunds/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a refund that has previously been created.

        Required scope: `read_payments`.
      operationId: Refund.get
      parameters:
        - description: Podium unique identifier for refund.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Podium unique identifier for location.
          in: query
          name: locationUid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Refund'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a refund.
      tags:
        - Refund
  /v4/reviews:
    get:
      callbacks: {}
      description: >-
        List of all the reviews that you have access to. The reviews are sorted
        by `createdAt` date, with the most recent appearing first.


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Required scope: `read_reviews`.
      operationId: review.index
      parameters:
        - description: Filter on the `createdAt` date.
          in: query
          name: createdAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Filter on the `updatedAt` date.
          in: query
          name: updatedAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/review'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all reviews.
      tags:
        - Review
  /v4/reviews/invites:
    get:
      callbacks: {}
      description: >-
        List of all the review invites that you have access to. The review
        invites are sorted by `createdAt` date, with the most recent appearing
        first.


        If the `cursor` parameter is used then all other parameters will be
        ignored. This is to avoid confusion if passing both a `cursor` and other
        parameters which would change what data is being returned.


        Required scope: `read_reviews`.
      operationId: review_invite.index
      parameters:
        - description: Filter on the `createdAt` date.
          in: query
          name: createdAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
        - description: Filter by the senderUid
          in: query
          name: senderUid
          required: false
          schema:
            description: Podium unique identifier for user.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Max number of items to return per request. Defaults to `10`.
          in: query
          name: limit
          required: false
          schema:
            default: 10
            example: 10
            maximum: 100
            minimum: 0
            type: integer
        - description: Retrieves the page of items that comes after the `cursor`.
          in: query
          name: cursor
          required: false
          schema:
            description: Cursor used to access next or previous page in pagination.
            example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
            type: string
        - description: Filter on the `updatedAt` date.
          in: query
          name: updatedAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/review_invite'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      nextCursor:
                        description: Cursor to get next set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      previousCursor:
                        description: Cursor to get previous set of items.
                        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw
                        type: string
                      totalItems:
                        description: Total number of items available.
                        type: integer
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List all review invites.
      tags:
        - Review Invite
    post:
      callbacks: {}
      description: |-
        Create a review invite link.

        Required scope: `write_reviews`.
      operationId: review_invite.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: The customer email. Required if phoneNumber not present
                  example: john.doe@podium.com
                  type: string
                locationUid:
                  description: >-
                    Podium location identifier that review invite link will be
                    created for
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                phoneNumber:
                  description: The customer phone number.
                  example: '+17626765098'
                  type: string
              required:
                - locationUid
              type: object
        description: Create review invite link params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/review_invite'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a review invite link.
      tags:
        - Review Invite
  /v4/reviews/invites/{uid}:
    get:
      callbacks: {}
      description: |-
        Get a single review invite by its uid.

        Required scope: `read_reviews`.
      operationId: review_invite.get
      parameters:
        - description: Podium unique identifier for review invite.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/review_invite'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a review invite.
      tags:
        - Review Invite
  /v4/reviews/sites/summary:
    get:
      callbacks: {}
      description: >-
        Returns a summary of reviews grouped by the site they are from.

        NOTE: Our docs provider has a bug that doesn't show the correct usage of
        the `locationUids` parameter.In order for the request to succeed, for
        each locationUid you are querying for add a `&locationUids[]` parameter
        to the url.For example:
        `https://api.podium.com/v4/reviews/sites/summary?locationUids[]=00000000-0000-0000-0000-000000000000&locationUids[]=00000000-0000-0000-0000-000000000001`

        If no `locationUids` parameter is used then the data will be based on
        all locations that the caller has access to.


        Required scope: `read_reviews`.
      operationId: review_sites_summary.index
      parameters:
        - description: Filter on the `createdAt` date.
          in: query
          name: createdAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
        - description: List of locations to filter the results by.
          in: query
          name: locationUids
          required: false
          schema:
            items:
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: array
        - description: Filter on the user uid that the reviews are attributed to.
          in: query
          name: userUid
          required: false
          schema:
            description: Podium unique identifier for user.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/review_sites_summary'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Summary of all connected review sites.
      tags:
        - Review Sites Summary
  /v4/reviews/summary:
    get:
      callbacks: {}
      description: >-
        Returns a summary of reviews for each location. If the`locationUids`
        parameter is not used then the data will be based on all locations that
        the caller has access to.


        Required scope: `read_reviews`.
      operationId: review_summary.index
      parameters:
        - description: Filter on the `createdAt` date.
          in: query
          name: createdAt
          required: false
          schema:
            additionalProperties: false
            properties:
              gt:
                description: Greater than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              gte:
                description: Greater than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lt:
                description: Less than filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
              lte:
                description: Less than or equal to filter.
                example: '2015-01-23T23:50:07Z'
                format: date-time
                type: string
            type: object
          style: deepObject
        - description: List of locations to filter the results by.
          in: query
          name: locationUids
          required: false
          schema:
            items:
              example: 00000000-0000-0000-0000-000000000000
              format: uuid
              type: string
              x-validate: Elixir.KumeteApi.Schema.Common.UUID
            type: array
        - description: Filter on the user uid that the reviews are attributed to.
          in: query
          name: userUid
          required: false
          schema:
            description: Podium unique identifier for user.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/review_summary'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Summary of all reviews
      tags:
        - Review Summary
  /v4/reviews/{review_uid}/responses/{uid}:
    patch:
      callbacks: {}
      description: |
        Update a review response.

        Required scope: `write_reviews`.
      operationId: review_response.update
      parameters:
        - description: Review UID you are updating the response for.
          in: path
          name: review_uid
          required: true
          schema:
            description: Podium unique identifier for review.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Review response UID you are updating the response with.
          in: path
          name: uid
          required: true
          schema:
            description: Podium unique identifier for review response.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                body:
                  description: The review response body
                  example: Body for test
                  type: string
              required:
                - body
              type: object
        description: Update review response params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/review_response'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update response for a given review
      tags:
        - Review Response
  /v4/reviews/{uid}:
    get:
      callbacks: {}
      description: |-
        Gets a single review by its uid.

        Required scope: `read_reviews`.
      operationId: review.get
      parameters:
        - description: Podium unique identifier for review.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/review'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a review.
      tags:
        - Review
  /v4/reviews/{uid}/attributions:
    delete:
      callbacks: {}
      description: |-
        Remove a user attribution from a review.

        Required scope: `write_reviews`.
      operationId: review_attribution.delete
      parameters:
        - description: Podium unique identifier for review.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userUid:
                  description: Podium user identifier that review will be attributed to.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
              required:
                - userUid
              type: object
        description: Delete review attribution body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/review_attribution'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Remove a user attribution for a given review
      tags:
        - Review Attribution
    post:
      callbacks: {}
      description: |-
        Attributes a user to a review.

        Required scope: `write_reviews`.
      operationId: review_attribution.create
      parameters:
        - description: Podium unique identifier for review.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                locationUid:
                  description: >-
                    Podium location identifier that review attribution will be
                    tied to.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                userUid:
                  description: Podium user identifier that review will be attributed to.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
              required:
                - locationUid
                - userUid
              type: object
        description: Create review attribution body params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/review_attribution'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Attribute a user to a review
      tags:
        - Review Attribution
  /v4/reviews/{uid}/responses:
    get:
      callbacks: {}
      description: |-
        List the responses of a given review.

        Required scope: `read_reviews`.
      operationId: review_response.index
      parameters:
        - description: Review UID you are requesting the responses of.
          in: path
          name: uid
          required: true
          schema:
            description: Podium unique identifier for review.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/review_response'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List Responses of a given review
      tags:
        - Review Response
    post:
      callbacks: {}
      description: |-
        Create a response for a given review.

        Required scope: `write_reviews`.
      operationId: review_response.create
      parameters:
        - description: Review UID you are creating the response for
          in: path
          name: uid
          required: true
          schema:
            description: Podium unique identifier for review.
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                body:
                  description: The review response body
                  example: Body for test
                  type: string
              required:
                - body
              type: object
        description: Create review response params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/review_response'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create response for a given review
      tags:
        - Review Response
  /v4/webhooks:
    get:
      callbacks: {}
      description: |
        List webhooks that are tied to user who has authorized the application.

        Required scope: none.
      operationId: webhook.index
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/webhook'
                    type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: List webhooks.
      tags:
        - Webhook
    post:
      callbacks: {}
      description: >
        Create a new webhook to receive events from a location or an
        organization. One of `locationUid` or

        `organizationUid` is required. If both are given the `organizationUid`
        will be used.


        Required scope: The required scope(s) will depend on the event type(s)
        you are subscribing too. See the WEBHOOK EVENT TYPES section.
      operationId: webhook.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                eventTypes:
                  items:
                    description: Event types that will be sent to webhook.
                    enum:
                      - contact.created
                      - contact.deleted
                      - contact.merged
                      - contact.unchanged
                      - contact.updated
                      - invoice.created
                      - invoice.disabled
                      - invoice.marked_as_paid
                      - invoice.payment_created
                      - invoice.payment_failed
                      - invoice.payment_succeeded
                      - invoice.refund_created
                      - invoice.refund_failed
                      - message.failed
                      - message.received
                      - message.sent
                      - review.created
                      - review.invite_link_created
                      - review.invite_link_updated
                      - review.response_created
                      - review.response_updated
                      - review.updated
                    type: string
                  minItems: 1
                  type: array
                locationUid:
                  description: Podium unique identifier for location.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                organizationUid:
                  description: Podium unique identifier for organization.
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                  x-validate: Elixir.KumeteApi.Schema.Common.UUID
                secret:
                  description: Secret used to sign webhook events.
                  example: something-no-one-will-know
                  type: string
                url:
                  description: URL that webhook events will be sent to.
                  example: https://www.podium.com/
                  nullable: true
                  type: string
              required:
                - eventTypes
                - url
              type: object
        description: Create webhook params
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/webhook'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Create a webhook.
      tags:
        - Webhook
  /v4/webhooks/{uid}:
    delete:
      callbacks: {}
      description: |
        Deletes an existing webhook.

        Required scope: none.
      operationId: webhook.delete
      parameters:
        - description: Podium unique identifier for webhook.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/webhook'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Delete a webhook.
      tags:
        - Webhook
    get:
      callbacks: {}
      description: |
        Get a webhook based on its uid.

        Required scope: none.
      operationId: webhook.get
      parameters:
        - description: Podium unique identifier for webhook.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/webhook'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Get a webhook.
      tags:
        - Webhook
    put:
      callbacks: {}
      description: >
        Updates an existing webhook.

        The location uid and organization uid cannot be updated.

        All other parameters not provided will be left unchanged.


        Required scope: The required scope(s) will depend on the event type(s)
        you are subscribing too. See the WEBHOOK EVENT TYPES section.
      operationId: webhook.update
      parameters:
        - description: Podium unique identifier for webhook.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disabled:
                  description: Disable or enable the webhook.
                  type: boolean
                eventTypes:
                  items:
                    description: Event types that will be sent to webhook.
                    enum:
                      - contact.created
                      - contact.deleted
                      - contact.merged
                      - contact.unchanged
                      - contact.updated
                      - invoice.created
                      - invoice.disabled
                      - invoice.marked_as_paid
                      - invoice.payment_created
                      - invoice.payment_failed
                      - invoice.payment_succeeded
                      - invoice.refund_created
                      - invoice.refund_failed
                      - message.failed
                      - message.received
                      - message.sent
                      - review.created
                      - review.invite_link_created
                      - review.invite_link_updated
                      - review.response_created
                      - review.response_updated
                      - review.updated
                    type: string
                  minItems: 1
                  type: array
                secret:
                  description: Secret used to sign webhook events.
                  example: something-no-one-will-know
                  type: string
                url:
                  description: URL that webhook events will be sent to.
                  example: https://www.podium.com/
                  nullable: true
                  type: string
              type: object
        description: Update webhook params
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/webhook'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Update a webhook.
      tags:
        - Webhook
  /v4/dataFeeds/{uid}/events:
    post:
      callbacks: {}
      description: >-
        Process an event through a data feed. The request body will be different
        depending on your data feed setup. Accepts either a single event or a
        list of events.


        Required scope: `write_data_feed_event`.
      operationId: data_feed_event.data
      parameters:
        - description: Podium unique identifier for data feed.
          in: path
          name: uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - description: Event to be processed by the data feed.
                  example:
                    appointment:
                      endDateTimeInUtc: '2019-09-17T14:30:00Z'
                      endLocalDateTime: '2019-09-17T09:30:00Z'
                      id: '12345'
                      isCancelled: false
                      isVideoVisit: true
                      paymentTypeName: Cash & Insurance
                      paymentTypeSoId: CASH
                      purposeId: CLEAN
                      purposeName: Routine Cleaning
                      startDateTimeInUtc: '2019-09-17T14:00:00Z'
                      startLocalDateTime: '2019-09-17T09:00:00Z'
                      statusId: '2342'
                      statusName: Pending
                      typeId: CONS
                      typeName: Consultation
                    contact:
                      cellPhone: '8015551234'
                      email: johnsmith@gmail.net
                      firstName: John
                      lastName: Smith
                    employee:
                      email: tyler.adams@abcclinic.com
                      id: 23asdf34290
                      name: Tyler Adams
                    location:
                      id: 23asdf34290
                      name: ABC Clinic
                    payment:
                      amount: '204.93'
                      description: Outstanding Balance for May
                      invoice: '2394208'
                  type: object
                - description: List of events to be processed by the data feed.
                  example:
                    - appointment:
                        endDateTimeInUtc: '2019-09-17T14:30:00Z'
                        endLocalDateTime: '2019-09-17T09:30:00Z'
                        id: '12345'
                        isCancelled: false
                        isVideoVisit: true
                        paymentTypeName: Cash & Insurance
                        paymentTypeSoId: CASH
                        purposeId: CLEAN
                        purposeName: Routine Cleaning
                        startDateTimeInUtc: '2019-09-17T14:00:00Z'
                        startLocalDateTime: '2019-09-17T09:00:00Z'
                        statusId: '2342'
                        statusName: Pending
                        typeId: CONS
                        typeName: Consultation
                      contact:
                        cellPhone: '8015551234'
                        email: johnsmith@gmail.net
                        firstName: John
                        lastName: Smith
                      employee:
                        email: tyler.adams@abcclinic.com
                        id: 23asdf34290
                        name: Tyler Adams
                      location:
                        id: 23asdf34290
                        name: ABC Clinic
                      payment:
                        amount: '204.93'
                        description: Outstanding Balance for May
                        invoice: '2394208'
                    - appointment:
                        endDateTimeInUtc: '2019-09-17T14:30:00Z'
                        endLocalDateTime: '2019-09-17T09:30:00Z'
                        id: '12345'
                        isCancelled: false
                        isVideoVisit: true
                        paymentTypeName: Cash & Insurance
                        paymentTypeSoId: CASH
                        purposeId: CLEAN
                        purposeName: Routine Cleaning
                        startDateTimeInUtc: '2019-09-17T14:00:00Z'
                        startLocalDateTime: '2019-09-17T09:00:00Z'
                        statusId: '2342'
                        statusName: Pending
                        typeId: CONS
                        typeName: Consultation
                      contact:
                        cellPhone: '8015551234'
                        email: johnsmith@gmail.net
                        firstName: John
                        lastName: Smith
                      employee:
                        email: tyler.adams@abcclinic.com
                        id: 23asdf34290
                        name: John Adams
                      location:
                        id: 23asdf34290
                        name: ABC Clinic
                      payment:
                        amount: '204.93'
                        description: Outstanding Balance for May
                        invoice: '2394208'
                  items:
                    type: object
                  type: array
        description: >-
          Data feed event params. The structure of your event needs to match the
          data feed configuration
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/data_feed_event'
                      - items:
                          $ref: '#/components/schemas/data_feed_event'
                        type: array
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Process an event through a data feed.
      tags:
        - Data Feed Event
  /v4/data_stream/{location_uid}/{integration_uid}/{data_mapping_name}:
    post:
      callbacks: {}
      description: |
        Send third party integration payloads to Podium.

        Required scope: `write_contacts`.
      operationId: data_stream.create
      parameters:
        - description: Location UID
          in: path
          name: location_uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Integration UID
          in: path
          name: integration_uid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
            x-validate: Elixir.KumeteApi.Schema.Common.UUID
        - description: Data Mapping Name
          in: path
          name: data_mapping_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - payload
              type: object
        description: Send third party data to Podium
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/data_stream'
                  metadata:
                    description: Additional response data.
                    properties:
                      url:
                        description: The resource URL.
                        example: https://www.podium.com/
                        type: string
                    type: object
                type: object
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Podium code for the error.
                    type: integer
                  message:
                    description: Specific details about the error.
                    nullable: true
                    type: string
                  moreInfo:
                    description: URL providing more information about the error.
                    type: string
                title: Error
                type: object
          description: Error response.
      summary: Send integration payload.
      tags:
        - Data Stream
security: []
servers:
  - url: https://api.podium.com
    variables: {}
tags: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 6269c77bde97a90013303e4b
