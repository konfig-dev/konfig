openapi: 3.1.0
info:
  title: SuprSend API
  version: 1.2.1
servers:
  - url: https://hub.suprsend.com
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: Authorization
      x-bearer-format: bearer
security:
  - sec0: []
paths:
  /event/:
    post:
      summary: Trigger an Event
      description: >-
        API used to pass event which can then be used to trigger workflows
        created on SuprSend dashboard
      operationId: event-api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - distinct_id
                - event
              properties:
                distinct_id:
                  type: string
                  description: distinct_id of recipient who should receive the notification
                  default: _distinct_id_
                $user_operations:
                  type: array
                  description: >-
                    Creating & updating users on SuprSend is done by sending an
                    `$user_operations` event. All changes can be combined in one
                    API call in an easy to replay format
                  items:
                    properties:
                      $append:
                        type: object
                        description: >-
                          Use this to add communication channels in user
                          profile. Following channel keys: `$email`, `$sms`,
                          `$whatsapp`, `$androidpush`, `$iospush`, `$slack`,
                          `$webpush`, `$ms_teams`. Add channel as
                          {"$email":"user@example.com"}
                      $remove:
                        type: object
                        description: >-
                          Use this to remove communication channels from user
                          profile. Following channel keys: `$email`, `$sms`,
                          `$whatsapp`, `$androidpush`, `$iospush`, `$slack`,
                          `$webpush`, `$ms_teams`. Define channel as
                          {"$email":"user@example.com"}
                      $set:
                        type: object
                        description: >-
                          Use this to set user properties like location,
                          preferred language etc. You can define properties in
                          key-value pair as `{"$preferred_language":"hi"}`
                      $unset:
                        type: array
                        description: >-
                          Use this to remove properties from user profile.
                          Define the property keys to be removed as
                          "$preferred_language"
                        default: []
                        items:
                          type: string
                    type: object
                event:
                  type: string
                  description: string identifier for the event like `product_purchased`
                  default: _event_name_
                properties:
                  type: string
                  description: >-
                    a dictionary representing event attributes like
                    `first_name`. Event properties can be used to pass template
                    variables in case of event based trigger
                  default: '{}'
                  format: json
                brand_id:
                  type: string
                  description: string identifier of the brand this event is associated with
                $idempotency_key:
                  type: string
                  description: Idempotency key (valid for 24hours)
            examples:
              SHIPMENT ARRIVAL:
                value:
                  distinct_id: 0fxxx8f74-xxxx-41c5-8752-xxxcb6911fb08
                  event: ON SHIPMENT ARRIVAL
                  properties:
                    amount: 3780$
                    number: TRXC1034
                    vehicle: Truck
                    locations: San Francisco
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{_error_response_}'
      deprecated: false
  /trigger/:
    post:
      summary: Trigger Workflow
      description: Unified API to trigger workflow
      operationId: trigger-workflow-api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - workflow
                - recipients
                - actor
              properties:
                workflow:
                  type: string
                  description: >-
                    You can get workflow slug from workflow settings on SuprSend
                    dashboard.
                  default: _workflow_slug_
                recipients:
                  type: array
                  description: >-
                    List of recipients to be notified. You can either add
                    recipient as array of distinct_ids or array of recipient
                    objects. You can add upto 100 recipients in a single API.
                  items:
                    properties:
                      is_transient:
                        type: boolean
                        description: >-
                          set `is_transient = true` to send notification to
                          anonymous user. You don't need to pass `distinct_id`
                          for anonymous sending.
                      distinct_id:
                        type: string
                        description: unique identifier of the user who needs to be notified
                        default: id1
                      $email:
                        type: array
                        description: >-
                          You can pass user channel information using $<channel>
                          key. `$email` is used to override email channel. <br>
                          This will override existing channel value from the
                          user profile and use the channel value defined in the
                          key for notification trigger. The same channel
                          information will also be appended to user profile in
                          the background  Refer how different [communication
                          channels](https://docs.suprsend.com/docs/trigger-workflow#add-user-communication-channel)
                          can be passed here
                        default: []
                        items:
                          type: string
                      user_prop1:
                        type: string
                        description: >-
                          You can pass other user properties to render dynamic
                          template content in key-value pair as
                          "user_prop1":"value1" . Extra properties will be set
                          in subscriber profile (as subscriber properties) which
                          can then be used in the template as
                          $recipient.<property>.
                        default: value_1
                    required:
                      - distinct_id
                    type: object
                actor:
                  type: object
                  description: >-
                    Includes distinct_id and properties of the user who
                    performed the action. You can use it for [cross-user
                    notifications](https://docs.suprsend.com/docs/trigger-workflow#sending-cross-user-notifications)
                    where you need to include actor properties in notification
                    template. Actor properties can be added as `$actor.<prop>`.
                  properties:
                    is_transient:
                      type: boolean
                      description: >-
                        set `is_transient = true` to pass anonymous actor. You
                        don't need to pass `distinct_id` for anonymous user.
                    distinct_id:
                      type: string
                      description: unique identifier of the actor who performed the action
                      default: id1
                    user_prop1:
                      type: string
                      description: >-
                        You can pass other user properties to render dynamic
                        template content in key-value pair as
                        "user_prop1":"value1" . Extra properties will be set in
                        subscriber profile (as subscriber properties) which can
                        then be used in the template as $actor.<property>.
                      default: value_1
                data:
                  type: string
                  description: >-
                    variable data required to render dynamic template content or
                    workflow properties like dynamic delay or channel override
                    in send node.
                  default: '{ "key": { "k1": "v1", "k2": "v2" } }'
                  format: json
                tenant_id:
                  type: string
                  description: >-
                    string identifier of the brand/tenant this workflow is
                    associated with. Used to trigger
                    [multi-tenant](https://docs.suprsend.com/docs/tenant-workflows)
                    notifications
                $idempotency_key:
                  type: string
                  description: Idempotency_key (valid for 24hrs)
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      success: true,
                      status: 'success',
                      status_code: 202,
                      message: { status: 'success' }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      success: false,
                      status: 'fail',
                      status_code: 500,
                      message: '_failure_message_'
                    }
      deprecated: false
  /{workspace_key}/trigger/:
    post:
      summary: Dynamic Workflow Trigger
      description: API to configure and trigger workflow dynamically
      operationId: dynamic-workflow-trigger
      parameters:
        - name: workspace_key
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - template
                - notification_category
                - users
              properties:
                name:
                  type: string
                  description: >-
                    Unique name of the workflow. The workflow name should be
                    easily identifiable for your reference at a later stage. You
                    can see workflow-related analytics on the workflow page (how
                    many notifications were sent, delivered, clicked or
                    interacted).
                  default: _workflow_name_
                template:
                  type: string
                  description: >-
                    Unique slug name of the template created on SuprSend
                    dashboard. You can get this by clicking on the clipboard
                    icon next to the Template name on SuprSend templates page.
                  default: _template_slug_
                notification_category:
                  type: string
                  description: >-
                    Category in which your notification belongs. You can
                    understand more about them in the 'Notification Category'
                    documentation
                  default: transactional
                users:
                  type: array
                  description: Array object of target users.
                  items:
                    properties:
                      distinct_id:
                        type: string
                        description: unique identifier of the user
                        default: _distinct_id_
                      $channels:
                        type: array
                        description: >-
                          send notification on selected channels in user
                          profile. Following channel keys can be used: email,
                          sms, whatsapp, androidpush, iospush, slack, webpush
                        default: []
                        items:
                          type: string
                      $email:
                        type: array
                        description: To trigger notification on a particular email
                        default: []
                        items:
                          type: string
                      $sms:
                        type: array
                        description: Send SMS on a particular number.
                        default: []
                        items:
                          type: string
                      $whatsapp:
                        type: array
                        description: Send Whatsapp on a particular number.
                        default: []
                        items:
                          type: string
                      $androidpush:
                        type: array
                        description: Send androidpush on the given push token
                        items:
                          properties:
                            token:
                              type: string
                              description: Androidpush token
                              default: __android_push_token__
                            provider:
                              type: string
                              description: vendor delivering the push notification
                              default: fcm
                            device_id:
                              type: string
                              description: >-
                                unique identifier of user's device. This is used
                                to avoid sending duplicate push notification on
                                the user's device
                          required:
                            - token
                            - provider
                          type: object
                      $iospush:
                        type: array
                        description: Send iOSpush on the given push token
                        items:
                          properties:
                            token:
                              type: string
                              description: iOSpush token
                              default: __ios_push_token__
                            provider:
                              type: string
                              description: vendor delivering the push notification
                              default: apns
                            device_id:
                              type: string
                              description: >-
                                unique identifier of user's device. This is used
                                to avoid sending duplicate push notification on
                                the same device
                          required:
                            - token
                            - provider
                          type: object
                      $slack:
                        type: string
                        description: >-
                          Send Slack on a particular channel in user's profile.
                          Use one of the methods to add slack token - 1. slack
                          using email: {"email": "user@example.com",
                          "access_token": "xoxb-XXXXXXXX"} ------ 2. slack using
                          member_id: {"user_id": "U/WXXXXXXXX", "access_token":
                          "xoxb-XXXXXXXX"} ------- 3. slack channel: {"channel":
                          "CXXXXXXXX", "access_token": "xoxb-XXXXXXXX"} --------
                          4. slack incoming webhook: {"incoming_webhook": {
                          "url":
                          "https://hooks.slack.com/services/TXXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXX"}}
                        format: json
                    required:
                      - distinct_id
                    type: object
                data:
                  type: string
                  description: Mock data to replace the template variables.
                  default: '{ "key": { "k1": "v1", "k2": "v2" } }'
                  format: json
                delivery:
                  type: object
                  description: >-
                    delivery instructions for the workflow. You can set [Smart
                    Delivery](https://docs.suprsend.com/docs/smart-delivery)
                    preference by setting "smart":true
                  properties:
                    smart:
                      type: boolean
                      description: You can enable smart delivery by setting "smart":True
                      default: false
                    success:
                      type: string
                      description: >-
                        Measure that defines the success of this notification.
                        You can set notification status like delivery,
                        interaction or custom success event
                      default: seen
                    time_to_live:
                      type: string
                      description: >-
                        Time window for triggering notifications in case of
                        smart delivery. notification on each channel will be
                        sent with time-interval of [time_to_live /
                        (number_of_channels - 1)] apart. Format - XXdXXhXXmXXs
                        or if its number (n) then delay is in seconds (n)
                    mandatory_channels:
                      type: array
                      description: >-
                        Channels on which notification has to be sent
                        immediately in case of smart delivery. Following channel
                        keys can be used: email, sms, whatsapp, androidpush,
                        iospush, slack, webpush
                      items:
                        type: string
                delay:
                  type: string
                  description: >-
                    Workflow will be halted for the time mentioned in delay, and
                    become active once the delay period is over. Format -
                    `XXdXXhXXmXXs` or if its number (n) then delay is in seconds
                    (n)
                trigger_at:
                  type: string
                  description: >-
                    Trigger workflow on a specific date-time. Format - date
                    string in ISO 8601 eg. "2022-08-27T20:14:51.643Z"
                  format: date
                brand_id:
                  type: string
                  description: >-
                    string identifier of the brand this workflow is associated
                    with
                $idempotency_key:
                  type: string
                  description: Idempotency_key (valid for 24hrs)
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{_error_response_}'
      deprecated: false
  /v1/template:
    get:
      summary: Fetch Template List
      description: APIs to fetch the list of all templates in a workspace
      operationId: fetch-template-list
      parameters:
        - name: has_tag_ids_any
          in: query
          description: comma separated string of tag ids attached to the template
          schema:
            type: string
        - name: has_channels_any
          in: query
          description: >-
            comma separated string of channels. Returns templates which has any
            of the channels present from the channel string. Use these keys for
            channels - `email`, `sms`, `whatsapp`, `inbox`, `slack`,
            `androidpush`, `iospush`, `webpush`
          schema:
            type: string
        - name: is_active
          in: query
          description: >-
            Set `true` for published templates, `false` for templates which are
            in draft. Do not pass this key to return all templates.
          schema:
            type: boolean
        - name: is_archived
          in: query
          description: Set `true` to get archived templates, default = `false`
          schema:
            type: boolean
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "meta": {
                        "count": 1,
                          "limit": 10,
                            "offset": 0
                      },
                        "results": [
                          {
                            "id": 2445,
                            "name": "Grocery Purchased",
                            "slug": "grocery-purchased",
                            "description": null,
                            "is_active": true,
                            "default_language": {
                              "name": "English",
                              "slug": "en"
                            },
                            "created_at": "2023-01-25T04:53:39.237291Z",
                            "updated_at": "2023-08-28T05:06:22.461443Z",
                            "updated_by": {
                              "name": "Joe",
                              "email": "joe@example.com"
                            },
                            "last_triggered_at": "2023-08-10T12:44:03.361158Z",
                            "is_auto_translate_enabled": false,
                            "enabled_languages": [
                              "en",
                              "hi",
                              "kn"
                            ],
                            "channels": [
                              {
                                "id": 3944,
                                "channel": {
                                  "name": "Email",
                                  "slug": "email",
                                  "is_template_approval_needed": true
                                },
                                "is_active": true,
                                "is_enabled": true,
                                "created_at": "2023-01-25T04:53:39.268299Z",
                                "updated_at": "2023-01-25T04:53:39.404273Z",
                                "disabled_languages": [],
                                "versions": []
                              }],
                            "tags": []
                          }
                        ]
                    }
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 1
                        default: 0
                      limit:
                        type: integer
                        example: 10
                        default: 0
                      offset:
                        type: integer
                        example: 0
                        default: 0
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2445
                          default: 0
                        name:
                          type: string
                          example: Grocery Purchased
                        slug:
                          type: string
                          example: grocery-purchased
                        description: {}
                        is_active:
                          type: boolean
                          example: true
                          default: true
                        default_language:
                          type: object
                          properties:
                            name:
                              type: string
                              example: English
                            slug:
                              type: string
                              example: en
                        created_at:
                          type: string
                          example: '2023-01-25T04:53:39.237291Z'
                        updated_at:
                          type: string
                          example: '2023-08-28T05:06:22.461443Z'
                        updated_by:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Joe
                            email:
                              type: string
                              example: joe@example.com
                        last_triggered_at:
                          type: string
                          example: '2023-08-10T12:44:03.361158Z'
                        is_auto_translate_enabled:
                          type: boolean
                          example: false
                          default: true
                        enabled_languages:
                          type: array
                          items:
                            type: string
                            example: en
                        channels:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 3944
                                default: 0
                              channel:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Email
                                  slug:
                                    type: string
                                    example: email
                                  is_template_approval_needed:
                                    type: boolean
                                    example: true
                                    default: true
                              is_active:
                                type: boolean
                                example: true
                                default: true
                              is_enabled:
                                type: boolean
                                example: true
                                default: true
                              created_at:
                                type: string
                                example: '2023-01-25T04:53:39.268299Z'
                              updated_at:
                                type: string
                                example: '2023-01-25T04:53:39.404273Z'
                              disabled_languages:
                                type: array
                              versions:
                                type: array
                        tags:
                          type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/template/{template_slug}:
    get:
      summary: Fetch Template details
      description: >-
        APIs to fetch the content of a template group. It will return data for
        live and draft version of a template.
      operationId: fetch-template-details
      parameters:
        - name: template_slug
          in: path
          description: >-
            Template group slug you want to fetch content details. You'll get
            the template slug by clicking on copy button next to template group
            name on SuprSend dashboard -> template details page.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": 2445,
                        "name": "Grocery Purchased",
                          "slug": "grocery-purchased",
                            "description": null,
                              "is_active": true,
                                "default_language": {
                                  "name": "English",
                                    "slug": "en"
                                },
                                  "created_at": "2023-01-25T04:53:39.237291Z",
                                    "updated_at": "2023-08-28T05:06:22.461443Z",
                                      "updated_by": {
                                        "name": "Joe",
                                          "email": "joe@example.com"
                                      },
                                        "last_triggered_at": "2023-08-10T12:44:03.361158Z",
                                          "is_auto_translate_enabled": false,
                                            "enabled_languages": [
                                              "en",
                                              "hi",
                                              "kn"
                                            ],
                                              "channels": [
                                                {
                                                  "id": 3944,
                                                  "channel": {
                                                    "name": "SMS",
                                                    "slug": "sms",
                                                    "is_template_approval_needed": true
                                                  },
                                                  "is_active": true,
                                                  "is_enabled": true,
                                                  "created_at": "2023-01-25T04:53:39.268299Z",
                                                  "updated_at": "2023-01-25T04:53:39.404273Z",
                                                  "disabled_languages": [],
                                                  "versions": [
                                                    {
                                                      "id": 10820,
                                                      "templates": [
                                                        {
                                                          "id": 11866,
                                                          "language": {
                                                            "name": "English",
                                                            "slug": "en"
                                                          },
                                                          "is_enabled": true,
                                                          "approval_status": "approved",
                                                          "content": {
                                                            "text": "You purchased product {#var#} worth Rs. {#var#} will reach to you {#var#}. You can track your order here: {#var#}\n- SuprSend",
                                                            "header": "SPRSND",
                                                            "example": [
                                                              "Winter Raincoat",
                                                              "INR 5",
                                                              "999",
                                                              "Bengaluru",
                                                              "https://www.google.com"
                                                            ],
                                                            "vendor_slug": "acl-sms",
                                                            "content_type": "1",
                                                            "message_type": "SERVICE_IMPLICIT",
                                                            "template_name": "purchase_made_en_v2",
                                                            "enterprise_name": "SPRSND",
                                                            "handlebars_text": "You purchased product {{event.product_name}} worth Rs. {{event.amount}} will reach to you {{event.location.city}}. You can track your order here: {{event.link}}\n- SuprSend",
                                                            "vendor_template_id": "1007xxxxxxxxxx"
                                                          },
                                                          "created_at": "2023-01-25T04:53:39.295289Z",
                                                          "updated_at": "2023-01-25T04:53:39.328651Z",
                                                          "updated_by": {
                                                            "name": "Steve",
                                                            "email": "steve@example.com"
                                                          },
                                                          "approval_cycle": {
                                                            "status": "approved",
                                                            "comment": null,
                                                            "request_received_at": "2022-03-31T10:35:51+0000",
                                                            "sent_for_approval_at": null,
                                                            "approval_status_received_at": "2022-03-31T10:43:44+0000"
                                                          },
                                                          "is_approval_needed": true,
                                                          "is_cloned_from_last_version": false
                                                        }
                                                      ],
                                                      "status": "active",
                                                      "version_tag": "1",
                                                      "created_at": "2023-01-25T04:53:39.276782Z",
                                                      "updated_at": "2023-01-25T04:53:39.342850Z",
                                                      "updated_by": {
                                                        "name": "Joe",
                                                        "email": "joe@example.com"
                                                      },
                                                      "version_tag_user": "v1",
                                                      "published_languages": [
                                                        "en"
                                                      ],
                                                      "apparent_published_languages": [
                                                        "en"
                                                      ]
                                                    },
                                                    {
                                                      "id": 10821,
                                                      "templates": [
                                                        {
                                                          "id": 11867,
                                                          "language": {
                                                            "name": "English",
                                                            "slug": "en"
                                                          },
                                                          "is_enabled": true,
                                                          "approval_status": "pending",
                                                          "content": {
                                                            "text": "You purchased product {#var#} worth Rs. {#var#} will reach to you {#var#}. You can track your order here: {#var#}\n- SuprSend",
                                                            "header": "SPRSND",
                                                            "example": [
                                                              "Winter Raincoat",
                                                              "INR 5",
                                                              "999",
                                                              "Bengaluru",
                                                              "https://www.google.com"
                                                            ],
                                                            "vendor_slug": "acl-sms",
                                                            "content_type": "1",
                                                            "message_type": "SERVICE_IMPLICIT",
                                                            "template_name": "purchase_made_en_v2",
                                                            "enterprise_name": "SPRSND",
                                                            "handlebars_text": "You purchased product {{event.product_name}} worth Rs. {{event.amount}} will reach to you {{event.location.city}}. You can track your order here: {{event.link}}\n- SuprSend",
                                                            "vendor_template_id": "1007017737717135821"
                                                          },
                                                          "created_at": "2023-01-25T04:53:39.367525Z",
                                                          "updated_at": "2023-01-25T04:53:39.367556Z",
                                                          "updated_by": {
                                                            "name": "Joe",
                                                            "email": "joe@example.com"
                                                          },
                                                          "approval_cycle": null,
                                                          "is_approval_needed": true,
                                                          "is_cloned_from_last_version": false
                                                        },

                                                        {
                                                          "id": 11891,
                                                          "language": {
                                                            "name": "French",
                                                            "slug": "fr"
                                                          },
                                                          "is_enabled": true,
                                                          "approval_status": "pending",
                                                          "content": {
                                                            "template_name": "grocery_purchased_hi"
                                                          },
                                                          "created_at": "2023-01-25T05:46:26.753095Z",
                                                          "updated_at": "2023-01-25T05:46:26.753121Z",
                                                          "updated_by": {
                                                            "name": "Joe",
                                                            "email": "joe@example.com"
                                                          },
                                                          "approval_cycle": null,
                                                          "is_approval_needed": true,
                                                          "is_cloned_from_last_version": false
                                                        }]
                                                    }
                                                  ],
                                                  "tags": []
                                                }
                                              ]
                    }
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2445
                    default: 0
                  name:
                    type: string
                    example: Grocery Purchased
                  slug:
                    type: string
                    example: grocery-purchased
                  description: {}
                  is_active:
                    type: boolean
                    example: true
                    default: true
                  default_language:
                    type: object
                    properties:
                      name:
                        type: string
                        example: English
                      slug:
                        type: string
                        example: en
                  created_at:
                    type: string
                    example: '2023-01-25T04:53:39.237291Z'
                  updated_at:
                    type: string
                    example: '2023-08-28T05:06:22.461443Z'
                  updated_by:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Joe
                      email:
                        type: string
                        example: joe@example.com
                  last_triggered_at:
                    type: string
                    example: '2023-08-10T12:44:03.361158Z'
                  is_auto_translate_enabled:
                    type: boolean
                    example: false
                    default: true
                  enabled_languages:
                    type: array
                    items:
                      type: string
                      example: en
                  channels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3944
                          default: 0
                        channel:
                          type: object
                          properties:
                            name:
                              type: string
                              example: SMS
                            slug:
                              type: string
                              example: sms
                            is_template_approval_needed:
                              type: boolean
                              example: true
                              default: true
                        is_active:
                          type: boolean
                          example: true
                          default: true
                        is_enabled:
                          type: boolean
                          example: true
                          default: true
                        created_at:
                          type: string
                          example: '2023-01-25T04:53:39.268299Z'
                        updated_at:
                          type: string
                          example: '2023-01-25T04:53:39.404273Z'
                        disabled_languages:
                          type: array
                        versions:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 10820
                                default: 0
                              templates:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 11866
                                      default: 0
                                    language:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          example: English
                                        slug:
                                          type: string
                                          example: en
                                    is_enabled:
                                      type: boolean
                                      example: true
                                      default: true
                                    approval_status:
                                      type: string
                                      example: approved
                                    content:
                                      type: object
                                      properties:
                                        text:
                                          type: string
                                          example: >-
                                            You purchased product {#var#} worth Rs.
                                            {#var#} will reach to you {#var#}. You
                                            can track your order here: {#var#}

                                            - SuprSend
                                        header:
                                          type: string
                                          example: SPRSND
                                        example:
                                          type: array
                                          items:
                                            type: string
                                            example: Winter Raincoat
                                        vendor_slug:
                                          type: string
                                          example: acl-sms
                                        content_type:
                                          type: string
                                          example: '1'
                                        message_type:
                                          type: string
                                          example: SERVICE_IMPLICIT
                                        template_name:
                                          type: string
                                          example: purchase_made_en_v2
                                        enterprise_name:
                                          type: string
                                          example: SPRSND
                                        handlebars_text:
                                          type: string
                                          example: >-
                                            You purchased product
                                            {{event.product_name}} worth Rs.
                                            {{event.amount}} will reach to you
                                            {{event.location.city}}. You can track
                                            your order here: {{event.link}}

                                            - SuprSend
                                        vendor_template_id:
                                          type: string
                                          example: 1007xxxxxxxxxx
                                    created_at:
                                      type: string
                                      example: '2023-01-25T04:53:39.295289Z'
                                    updated_at:
                                      type: string
                                      example: '2023-01-25T04:53:39.328651Z'
                                    updated_by:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          example: Steve
                                        email:
                                          type: string
                                          example: steve@example.com
                                    approval_cycle:
                                      type: object
                                      properties:
                                        status:
                                          type: string
                                          example: approved
                                        comment: {}
                                        request_received_at:
                                          type: string
                                          example: 2022-03-31T10:35:51+0000
                                        sent_for_approval_at: {}
                                        approval_status_received_at:
                                          type: string
                                          example: 2022-03-31T10:43:44+0000
                                    is_approval_needed:
                                      type: boolean
                                      example: true
                                      default: true
                                    is_cloned_from_last_version:
                                      type: boolean
                                      example: false
                                      default: true
                              status:
                                type: string
                                example: active
                              version_tag:
                                type: string
                                example: '1'
                              created_at:
                                type: string
                                example: '2023-01-25T04:53:39.276782Z'
                              updated_at:
                                type: string
                                example: '2023-01-25T04:53:39.342850Z'
                              updated_by:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Joe
                                  email:
                                    type: string
                                    example: joe@example.com
                              version_tag_user:
                                type: string
                                example: v1
                              published_languages:
                                type: array
                                items:
                                  type: string
                                  example: en
                              apparent_published_languages:
                                type: array
                                items:
                                  type: string
                                  example: en
                        tags:
                          type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/template/{template_slug}/channel/{channel_slug}:
    get:
      summary: Fetch Template content for a channel
      description: >-
        APIs to fetch the content of a particular channel in a template group.
        It will return data for live and draft version of a template.
      operationId: fetch-template-details-channel
      parameters:
        - name: template_slug
          in: path
          description: >-
            Template group slug you want to fetch content details. You'll get
            the template slug by clicking on copy button next to template group
            name on SuprSend dashboard -> template details page.
          schema:
            type: string
          required: true
        - name: channel_slug
          in: path
          description: >-
            add one of the template channels  - `email`, `sms`, `whatsapp`,
            `inbox`, `slack`, `androidpush`, `iospush`, `webpush`
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": 3949,
                      "channel": {
                        "name": "In-App Inbox",
                        "slug": "inbox",
                        "is_template_approval_needed": false
                      },
                      "is_active": true,
                      "is_enabled": true,
                      "created_at": "2023-01-25T04:53:40.011112Z",
                      "updated_at": "2023-07-27T14:55:23.939438Z",
                      "disabled_languages": [],
                      "versions": [
                        {
                          "id": 10830,
                          "templates": [
                            {
                              "id": 11876,
                              "language": {
                                "name": "English",
                                "slug": "en"
                              },
                              "is_enabled": true,
                              "approval_status": "auto_approved",
                              "content": {
                                "url": "",
                                "text": "We will soon deliver {{event.product_name}} to {{event.location.city}} 😀",
                                "image": "",
                                "header": "Order Confirmed {{event.date}}",
                                "schema": "1.0",
                                "extra_data": "{\n\"city\": \"{{event.amount}}\"\n}"
                              },
                              "created_at": "2023-01-25T04:53:40.035836Z",
                              "updated_at": "2023-01-25T04:53:40.069659Z",
                              "updated_by": {
                                "name": "Joe",
                                "email": "joe@example.com"
                              },
                              "approval_cycle": null,
                              "is_approval_needed": false,
                              "is_cloned_from_last_version": false
                            }
                          ],
                          "status": "active",
                          "version_tag": "1",
                          "created_at": "2023-01-25T04:53:40.016463Z",
                          "updated_at": "2023-01-25T04:53:40.083969Z",
                          "updated_by": {
                            "name": "Steve",
                            "email": "steve@example.com"
                          },
                          "version_tag_user": "v1",
                          "published_languages": [
                            "en"
                          ],
                          "apparent_published_languages": [
                            "en"
                          ]
                        },
                        {
                          "id": 10831,
                          "templates": [
                            {
                              "id": 11877,
                              "language": {
                                "name": "English",
                                "slug": "en"
                              },
                              "is_enabled": true,
                              "approval_status": "auto_approved",
                              "content": {
                                "url": "",
                                "text": "We will soon deliver {{event.product_name}} to {{event.location.city}} 😀 {{$embedded_preference_url}}",
                                "image": "",
                                "header": "Order Confirmed {{event.date}}",
                                "schema": "1.0",
                                "extra_data": "{\n\"city\": \"{{event.amount}}\"\n}"
                              },
                              "created_at": "2023-01-25T04:53:40.112492Z",
                              "updated_at": "2023-07-27T14:55:23.933072Z",
                              "updated_by": {
                                "name": "Joe",
                                "email": "joe@example.com"
                              },
                              "approval_cycle": null,
                              "is_approval_needed": false,
                              "is_cloned_from_last_version": false
                            }
                          ],
                          "status": "draft",
                          "version_tag": "_",
                          "created_at": "2023-01-25T04:53:40.098853Z",
                          "updated_at": "2023-07-27T14:55:23.937661Z",
                          "updated_by": {
                            "name": "Steve",
                            "email": "steve@example.com"
                          },
                          "version_tag_user": null,
                          "published_languages": [],
                          "apparent_published_languages": []
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3949
                    default: 0
                  channel:
                    type: object
                    properties:
                      name:
                        type: string
                        example: In-App Inbox
                      slug:
                        type: string
                        example: inbox
                      is_template_approval_needed:
                        type: boolean
                        example: false
                        default: true
                  is_active:
                    type: boolean
                    example: true
                    default: true
                  is_enabled:
                    type: boolean
                    example: true
                    default: true
                  created_at:
                    type: string
                    example: '2023-01-25T04:53:40.011112Z'
                  updated_at:
                    type: string
                    example: '2023-07-27T14:55:23.939438Z'
                  disabled_languages:
                    type: array
                  versions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 10830
                          default: 0
                        templates:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 11876
                                default: 0
                              language:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: English
                                  slug:
                                    type: string
                                    example: en
                              is_enabled:
                                type: boolean
                                example: true
                                default: true
                              approval_status:
                                type: string
                                example: auto_approved
                              content:
                                type: object
                                properties:
                                  url:
                                    type: string
                                    example: ''
                                  text:
                                    type: string
                                    example: >-
                                      We will soon deliver
                                      {{event.product_name}} to
                                      {{event.location.city}} 😀
                                  image:
                                    type: string
                                    example: ''
                                  header:
                                    type: string
                                    example: Order Confirmed {{event.date}}
                                  schema:
                                    type: string
                                    example: '1.0'
                                  extra_data:
                                    type: string
                                    example: |-
                                      {
                                      "city": "{{event.amount}}"
                                      }
                              created_at:
                                type: string
                                example: '2023-01-25T04:53:40.035836Z'
                              updated_at:
                                type: string
                                example: '2023-01-25T04:53:40.069659Z'
                              updated_by:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Joe
                                  email:
                                    type: string
                                    example: joe@example.com
                              approval_cycle: {}
                              is_approval_needed:
                                type: boolean
                                example: false
                                default: true
                              is_cloned_from_last_version:
                                type: boolean
                                example: false
                                default: true
                        status:
                          type: string
                          example: active
                        version_tag:
                          type: string
                          example: '1'
                        created_at:
                          type: string
                          example: '2023-01-25T04:53:40.016463Z'
                        updated_at:
                          type: string
                          example: '2023-01-25T04:53:40.083969Z'
                        updated_by:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Steve
                            email:
                              type: string
                              example: steve@example.com
                        version_tag_user:
                          type: string
                          example: v1
                        published_languages:
                          type: array
                          items:
                            type: string
                            example: en
                        apparent_published_languages:
                          type: array
                          items:
                            type: string
                            example: en
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/brand/{brand_id}:
    post:
      summary: Create / Update Brands
      description: API to create a new Brand OR update an existing Brand
      operationId: create-brands
      parameters:
        - name: brand_id
          in: path
          description: unique identifier of the brand that you want to create / update
          schema:
            type: string
          required: true
        - name: Content - Type
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - brand_name
              properties:
                brand_name:
                  type: string
                  description: >-
                    Name of the brand. You can add company / organization name
                    here
                  default: Awesome Brand
                logo:
                  type: string
                  description: URL of the brand logo
                  default: >-
                    https://ik.imagekit.io/l0quatz6utm/suprsend/staging/media/suprsend-only-logo_c8aa27faef118418e8c5bd7b31a1cafc74e09200.png
                primary_color:
                  type: string
                  description: >-
                    Primary color of the brand - used for designing brand
                    template. If you don't provide any of the colors for the
                    brand, SuprSend will assume you want to use the default
                    values, so color settings will automatically be set to the
                    color settings of default brand.
                  default: '#ff0000'
                secondary_color:
                  type: string
                  description: >-
                    Secondary color of the brand - not used for designing the
                    default templates. You can however add this property and use
                    it in your templates
                  default: '#00ff00'
                tertiary_color:
                  type: string
                  description: >-
                    Tertiary color of the brand - not used for designing the
                    default templates. You can however add this property and use
                    it in your templates
                  default: '#0000ff'
                preference_page_url:
                  type: string
                  description: Link of the hosted preference page inside the brand product
                social_links:
                  type: object
                  description: >-
                    urls of social media accounts of the brand. If you really
                    want to remove any social link, you must set its value=""
                    (instead of null)
                  properties:
                    website:
                      type: string
                      description: >-
                        link of brand website. While updating a social link, if
                        you want to remove the link, you must the value=""
                        (instead of null)
                      default: https://suprsend.com
                    facebook:
                      type: string
                      description: brand facebook page link
                    linkedin:
                      type: string
                      description: brand linkedin page link
                    twitter:
                      type: string
                      description: brand twitter page link
                    instagram:
                      type: string
                      description: brand instagram page link
                    medium:
                      type: string
                      description: brand medium page link
                    discord:
                      type: string
                      description: brand discord page link
                    telegram:
                      type: string
                      description: brand telegram page link
                    youtube:
                      type: string
                      description: brand youtube page link
                properties:
                  type: string
                  description: >-
                    Custom properties associated with the brand. Example value -
                    `{"k1": "v1", "k2": 1.0}` <br> Update operation on
                    properties works like upsert on 1st-level keys (i.e. if
                    top-level key doesn't already exist, then it will be added,
                    otherwise its value will be replaced by the new value. All
                    other key-value pairs will remain unchanged).
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Get Brand data
      description: API to get brand settings corresponding to a brand id
      operationId: get-brand
      parameters:
        - name: brand_id
          in: path
          description: unique identifier of the brand you want to get the details for
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/brand/:
    get:
      summary: Get Brand list
      description: API to get the list of brands available in your workspace
      operationId: get-brand-list
      parameters:
        - name: limit
          in: query
          description: number of results to be returned in API response
          schema:
            type: string
            default: '20'
        - name: offset
          in: query
          description: starting position of brand list
          schema:
            type: string
            default: '0'
        - name: Content-Type
          in: header
          schema:
            type: string
            default: text/html; charset=UTF-8
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber/{distinct_id}/category/{category_slug}/:
    post:
      summary: Update User Preferences (Category level)
      description: API to update user category preferences
      operationId: update-user-preference-category
      parameters:
        - name: distinct_id
          in: path
          description: distinct_id of the user whose preferences should be fetched
          schema:
            type: string
          required: true
        - name: tenant_id
          in: query
          description: to fetch user preferences for a particular brand
          schema:
            type: string
        - name: category_slug
          in: path
          description: >-
            notification category slug. You can get this from Notification
            Categories page on SuprSend dashboard -> Settings page
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                preference:
                  type: string
                  description: >-
                    choose one of the options: `opt_in` if the user has allowed
                    notification in this category and `opt_out` if user wants to
                    discontinue notification in this category
                  default: opt_in
                opt_out_channels:
                  type: array
                  description: >-
                    Add array of channels if user wants to unsubscribe from
                    particular channels in this category. Add channels as
                    `email`, `sms`, whatsapp`, `androidpush`, `inbox`,
                    `iospush`, `slack`, `webpush`
                  items:
                    type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber/{distinct_id}/channel_preference/:
    post:
      summary: Update User Preferences (Channel level)
      description: API to update user channel preferences
      operationId: update-user-preference-channel
      parameters:
        - name: distinct_id
          in: path
          description: distinct_id of the user whose preferences should be fetched
          schema:
            type: string
          required: true
        - name: tenant_id
          in: query
          description: to fetch user preferences for a particular brand
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_preferences:
                  type: array
                  description: >-
                    Use this to update channel level user preferences. Set
                    `is_restricted - true` if the channel is opted_out by the
                    user. This will only send critical notifications to the user
                    which can't be opted out
                  items:
                    properties:
                      channel:
                        type: string
                        description: >-
                          Add channel as `email`, `inbox`, `sms`, `whatsapp`,
                          `androidpush`, `slack`, `iospush`, `webpush`
                        default: email
                      is_restricted:
                        type: boolean
                        description: >-
                          set `is_restricted = true` if user wants to receive
                          notification in mandatory categories on this channel.
                          Mandatory categories are `can't unsubscribe`
                          categories and the above channel is added as
                          `mandatory channel` in that category
                        default: false
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Get User Preferences (Channel level)
      description: API to get user channel preferences
      operationId: get-user-preference-channel
      parameters:
        - name: distinct_id
          in: path
          description: distinct_id of the user whose preferences should be fetched
          schema:
            type: string
          required: true
        - name: tenant_id
          in: query
          description: to fetch user preferences for a particular brand
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber/{distinct_id}/category/:
    get:
      summary: Get User Preferences (All Categories)
      description: API to get user category preferences
      operationId: get-user-preference-all-categories
      parameters:
        - name: distinct_id
          in: path
          description: distinct_id of the user whose preferences should be fetched
          schema:
            type: string
          required: true
        - name: tenant_id
          in: query
          description: to fetch user preferences for a particular brand
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber/{distinct_id}/category/{category_slug}:
    get:
      summary: Get User Preferences (single category)
      description: API to get user category preferences
      operationId: get-user-preferences-single-category
      parameters:
        - name: distinct_id
          in: path
          description: distinct_id of the user whose preferences should be fetched
          schema:
            type: string
          required: true
        - name: tenant_id
          in: query
          description: to fetch user preferences for a particular brand
          schema:
            type: string
        - name: category_slug
          in: path
          description: >-
            notification category slug. You can get this from Notification
            Categories page on SuprSend dashboard -> Settings page
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/brand/{brand_id}/category/{category_slug}/:
    post:
      summary: Update Brand Default Preference
      description: API to update user default preferences for a brand
      operationId: update-brand-default-preference
      parameters:
        - name: brand_id
          in: path
          description: >-
            unique identifier of the brand you want to update default
            preferences for
          schema:
            type: string
          required: true
        - name: category_slug
          in: path
          description: >-
            notification category slug. You can get this from Notification
            Categories page on SuprSend dashboard -> Settings page
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                preference:
                  type: string
                  description: >-
                    set `**opt_in**` to send notifications on all channels by
                    default <br>  set `**opt_out**` to not send notifications in
                    this category by default. For instance, **newsletter** <br> 
                    set `**cant_unsubscribe**`if you do not want users to
                    completely opt-out from this category. Notifications will
                    always be sent on mandatory channels in this category.
                  default: opt_in
                visible_to_subscriber:
                  type: boolean
                  description: >-
                    set it `false` to hide a category from user's preference
                    page
                mandatory_channels:
                  type: array
                  description: >-
                    Add mandatory channels that the user can't unsubscribe from
                    if preference is `cant_unsubscribe`. Add channels as
                    `email`, `sms`, `whatsapp`, `androidpush`, `inbox`,
                    `iospush`, `slack`, `webpush`
                  items:
                    type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/brand/{brand_id}/category/:
    get:
      summary: Get Brand Default Preference
      description: API to get Brand categories
      operationId: get-user-default-preference
      parameters:
        - name: brand_id
          in: path
          description: >-
            unique identifier of the brand you want to get default preferences
            for
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/:
    post:
      summary: Create a List
      description: >-
        API to create / manage lists to send notification to a bulk list of
        users
      operationId: create-list
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - list_id
              properties:
                list_id:
                  type: string
                  description: >-
                    Unique string idenitifier of the list. Add an id which
                    defines the type of users who are part of the list
                  default: _list_id_
                list_name:
                  type: string
                  description: >-
                    Name of the List. Add a name which defines the type of users
                    in the list
                  default: _list_name_
                list_description:
                  type: string
                  default: _some sample description_
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Get all Lists
      description: API to get the data of all the lists created in your workspace
      operationId: get-all-lists
      parameters:
        - name: limit
          in: query
          description: number of results to be returned in API response
          schema:
            type: string
            default: '20'
        - name: offset
          in: query
          description: starting position of brand list
          schema:
            type: string
            default: '0'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/subscriber/add:
    post:
      summary: Add Subscribers to List
      description: API to add users / subscribers to the list
      operationId: add-subscribers-to-list
      parameters:
        - name: list_id
          in: path
          description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          required: true
          schema:
            type: string
            default: _list_id_
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                distinct_ids:
                  type: array
                  description: >-
                    Array of subscriber_ids, uniquely identifying the
                    subscribers to be added to the list.
                  default:
                    - _distinct_id1_
                  items:
                    type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/subscriber/remove:
    post:
      summary: Remove Subscribers from List
      description: API to remove users / subscribers from the list
      operationId: remove-users-from-list
      parameters:
        - name: list_id
          in: path
          description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          required: true
          schema:
            type: string
            default: _list_id_
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                distinct_ids:
                  type: array
                  description: >-
                    Array of subscriber_ids, uniquely identifying the
                    subscribers to be removed from the list.
                  default:
                    - _distinct_id1_
                  items:
                    type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/:
    get:
      summary: Get List data
      description: API to get information corresponding to a list id
      operationId: get-list
      parameters:
        - name: list_id
          in: path
          description: Unique string idenitifier of the list.
          required: true
          schema:
            type: string
            default: _list_id_
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/delete:
    patch:
      summary: Delete List
      description: API to delete a list created in your workspace
      operationId: delete-list
      parameters:
        - name: list_id
          in: path
          description: Unique string idenitifier of the list which you want to delete
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/delete:
    patch:
      summary: Delete Draft List
      description: API to delete a list created in your workspace
      operationId: delete-list-copy
      parameters:
        - name: list_id
          in: path
          description: Unique string idenitifier of the list which you want to delete
          schema:
            type: string
          required: true
        - name: version_id
          in: path
          description: >-
            Unique identifier of the draft version of the list which needs to be
            deleted
          schema:
            type: string
            default: __version_id__
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/start_sync:
    post:
      summary: Start Sync
      description: >-
        Starts sync on the active(live) version of the list, identified by
        list_id, and creates an empty draft version.
      operationId: start-sync
      parameters:
        - name: list_id
          in: path
          description: >-
            Unique identifier of the list on which the sync needs to start to
            create a draft version
          schema:
            type: string
            default: _list_id_
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/subscriber/add:
    post:
      summary: Add Subscribers to Draft List
      description: >-
        Add subscribers to a draft list with a version_id that uniquely
        identifies the draft list
      operationId: add-subscribers-to-draft-list
      parameters:
        - name: list_id
          in: path
          description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          schema:
            type: string
            default: _list_id_
          required: true
        - name: version_id
          in: path
          description: >-
            Unique string idenitifier of the draft version of the list to which
            user needs to be updated
          schema:
            type: string
            default: __version_id__
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                distinct_ids:
                  type: array
                  description: >-
                    Array of subscriber_ids, uniquely identifying the
                    subscribers to be added to the list.
                  default:
                    - '[]'
                  items:
                    type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/subscriber/remove:
    post:
      summary: Remove Subscribers from Draft List
      description: >-
        Remove subscribers from a draft list with a version_id that uniquely
        identifies the draft list
      operationId: add-subscribers-to-draft-list-copy
      parameters:
        - name: list_id
          in: path
          description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          schema:
            type: string
            default: _list_id_
          required: true
        - name: version_id
          in: path
          description: >-
            Unique string idenitifier of the draft version of the list to which
            user needs to be updated
          schema:
            type: string
            default: __version_id__
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                distinct_ids:
                  type: array
                  description: >-
                    Array of subscriber_ids, uniquely identifying the
                    subscribers to be removed from the list.
                  default:
                    - '[]'
                  items:
                    type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/finish_sync:
    patch:
      summary: Finish Sync
      description: >-
        Finishes the sync for a draft version and makes that particular version
        live for the given list_id
      operationId: start-sync-copy
      parameters:
        - name: list_id
          in: path
          description: Unique string idenitifier of the list
          schema:
            type: string
            default: _list_id_
          required: true
        - name: version_id
          in: path
          description: >-
            Unique string idenitifier of the draft version of the list which
            needs to be made active(live)
          schema:
            type: string
            default: __version_id__
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /{workspace_key}/broadcast:
    post:
      summary: Trigger Broadcast
      description: API to trigger broadcast messages on a list of users
      operationId: trigger-broadcast
      parameters:
        - name: workspace_key
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - list_id
                - template
                - notification_category
              properties:
                list_id:
                  type: string
                  description: >-
                    unique identifier to user list that you want to send
                    broadcast messages to.
                  default: _list_id_
                template:
                  type: string
                  description: >-
                    Unique slug name of the template created on SuprSend
                    dashboard. You can get this by clicking on the clipboard
                    icon next to the Template name on SuprSend templates page.
                  default: _template_slug_
                notification_category:
                  type: string
                  description: >-
                    Category in which your notification belongs. You can
                    understand more about them in the [Notification
                    Category](https://docs.suprsend.com/docs/notification-category)
                    documentation
                  default: transactional
                channels:
                  type: array
                  description: >-
                    If set, broadcast will be sent only on the channels defined
                    here irrespective of communication channels present in user
                    profile.
                  items:
                    type: string
                data:
                  type: string
                  description: Mock data to replace the template variables.
                  default: '{ "key": { "k1": "v1", "k2": "v2" } }'
                  format: json
                delay:
                  type: string
                  description: >-
                    Broadcast will be halted for the time mentioned in delay,
                    and become active once the delay period is over. Format -
                    `XXdXXhXXmXXs` or if its number (n) then delay is in seconds
                    (n)
                trigger_at:
                  type: string
                  description: >-
                    Trigger broadcast on a specific date-time. Format - date
                    string in ISO 8601 eg. "2022-08-27T20:14:51.643Z"
                  format: date
                brand_id:
                  type: string
                  description: >-
                    string identifier of the brand this broadcast is associated
                    with
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{_error_response_}'
      deprecated: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
x-readme-fauxas: true
_id: 644140ed7e106b0043d25b05:64425f1bcd0fe0000bf0d7c7
