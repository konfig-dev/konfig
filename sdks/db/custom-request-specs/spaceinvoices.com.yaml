openapi: 3.0.0
info:
  title: space-invoices-api
  version: 2.0.0
  description: ''
  contact:
    name: Space Invoices Inc
paths:
  /live:
    get:
      x-controller-name: HealthController
      x-operation-name: live
      tags:
        - HealthController
      responses:
        '200':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
        '500':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
        '503':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
      operationId: HealthController.live
  /ready:
    get:
      x-controller-name: HealthController
      x-operation-name: ready
      tags:
        - HealthController
      responses:
        '200':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
        '500':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
        '503':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
      operationId: HealthController.ready
  /v1/accounts/count:
    get:
      x-controller-name: AccountController
      x-operation-name: count
      tags:
        - AccountController
      responses:
        '200':
          description: Count sub-Accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loopback.Count'
      parameters:
        - name: where
          in: query
          content:
            application/json:
              schema:
                type: object
                title: Account.WhereFilter
                additionalProperties: true
                x-typescript-type: '@loopback/repository#Where<Account>'
      operationId: AccountController.count
  /v1/accounts:
    get:
      x-controller-name: AccountController
      x-operation-name: find
      tags:
        - AccountController
      responses:
        '200':
          description: Array of sub-Account model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountWithRelations'
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account.Filter'
      operationId: AccountController.find
  /v1/documents/{shareableId}/payment-intent:
    get:
      x-controller-name: DocumentPaymentIntentController
      x-operation-name: get
      tags:
        - DocumentPaymentIntentController
      responses:
        '200':
          description: Payment Intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
      parameters:
        - name: shareableId
          in: path
          schema:
            type: string
          required: true
      operationId: DocumentPaymentIntentController.get
  /v1/documents/{shareableId}/stripe-connect/payment-intent:
    get:
      x-controller-name: DocumentStripeConnectPaymentIntentController
      x-operation-name: get
      tags:
        - DocumentStripeConnectPaymentIntentController
      responses:
        '200':
          description: Stripe Connect Payment Intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnectPaymentIntent'
      parameters:
        - name: shareableId
          in: path
          schema:
            type: string
          required: true
      operationId: DocumentStripeConnectPaymentIntentController.get
  /v1/fattura-pa/webhooks:
    post:
      x-controller-name: FatturaPaController
      x-operation-name: webhooks
      tags:
        - FatturaPaController
      responses:
        '200':
          description: Success response
          content:
            text/plain:
              schema:
                type: string
      requestBody:
        content:
          text/xml:
            schema:
              type: string
        description: FatturaPaWebhook
        required: true
      operationId: FatturaPaController.webhooks
  /v1/organizations/{organizationId}/atcud/get-active:
    post:
      x-controller-name: AtcudSeriesController
      x-operation-name: findActive
      tags:
        - AtcudSeriesController
      responses:
        '200':
          description: AtcudSeries model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesWithRelations'
      parameters:
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
      operationId: AtcudSeriesController.findActive
  /v1/organizations/{organizationId}/atcud/{id}:
    get:
      x-controller-name: AtcudSeriesController
      x-operation-name: findById
      tags:
        - AtcudSeriesController
      responses:
        '200':
          description: AtcudSeries model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeriesWithRelations'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries.Filter'
      operationId: AtcudSeriesController.findById
  /v1/organizations/{organizationId}/atcud:
    post:
      x-controller-name: AtcudSeriesController
      x-operation-name: create
      tags:
        - AtcudSeriesController
      responses:
        '200':
          description: AtcudSeries model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      parameters:
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAtcudSeries'
        x-parameter-index: 1
      operationId: AtcudSeriesController.create
    get:
      x-controller-name: AtcudSeriesController
      x-operation-name: find
      tags:
        - AtcudSeriesController
      responses:
        '200':
          description: Array of AtcudSeries model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtcudSeriesWithRelations'
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries.Filter1'
      operationId: AtcudSeriesController.find
  /v1/organizations/{id}/merchant/link:
    get:
      x-controller-name: OrganizationMerchantLinkController
      x-operation-name: get
      tags:
        - OrganizationMerchantLinkController
      responses:
        '200':
          description: Organization Payment Processing onboarding link
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                required:
                  - url
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: OrganizationMerchantLinkController.get
  /v1/organizations/{id}/merchant:
    post:
      x-controller-name: OrganizationMerchantController
      x-operation-name: create
      tags:
        - OrganizationMerchantController
      responses:
        '200':
          description: Merchant model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMerchantInOrganization'
        x-parameter-index: 1
      operationId: OrganizationMerchantController.create
    patch:
      x-controller-name: OrganizationMerchantController
      x-operation-name: patch
      tags:
        - OrganizationMerchantController
      responses:
        '200':
          description: Organization.Merchant PATCH success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loopback.Count'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: where
          in: query
          content:
            application/json:
              schema:
                type: object
                title: Merchant.WhereFilter
                additionalProperties: true
                x-typescript-type: '@loopback/repository#Where<Merchant>'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/MerchantPartialExcluding_id-paymentProcessingId-merchantId-applicationId-organizationId-chargesEnabled-createdAt-updatedAt_
        x-parameter-index: 1
      operationId: OrganizationMerchantController.patch
    get:
      x-controller-name: OrganizationMerchantController
      x-operation-name: get
      tags:
        - OrganizationMerchantController
      responses:
        '200':
          description: Organization has one Merchant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      operationId: OrganizationMerchantController.get
  /v1/organizations/{id}/payment-intents/authorized:
    post:
      x-controller-name: OrganizationPaymentIntentController
      x-operation-name: createAuthorized
      tags:
        - OrganizationPaymentIntentController
      responses:
        '200':
          description: PaymentIntent model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema: {}
        x-parameter-index: 1
      operationId: OrganizationPaymentIntentController.createAuthorized
  /v1/organizations/{id}/payment-intents:
    post:
      x-controller-name: OrganizationPaymentIntentController
      x-operation-name: create
      tags:
        - OrganizationPaymentIntentController
      responses:
        '200':
          description: PaymentIntent model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema: {}
        x-parameter-index: 1
      operationId: OrganizationPaymentIntentController.create
    get:
      x-controller-name: OrganizationPaymentIntentController
      x-operation-name: find
      tags:
        - OrganizationPaymentIntentController
      responses:
        '200':
          description: Array of Organization has many PaymentIntent
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentIntent'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      operationId: OrganizationPaymentIntentController.find
  /v1/organizations/{id}/saft-pt/report:
    get:
      x-controller-name: SaftPtController
      x-operation-name: generateSaftPt
      tags:
        - SaftPtController
      responses:
        '200':
          description: Return value of SaftPtController.generateSaftPt
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: from
          in: query
          schema:
            type: string
            format: date
        - name: to
          in: query
          schema:
            type: string
            format: date
      operationId: SaftPtController.generateSaftPt
  /v1/organizations/{id}/stripe-connect/account/link:
    get:
      x-controller-name: OrganizationStripeConnectAccountLinkController
      x-operation-name: get
      tags:
        - OrganizationStripeConnectAccountLinkController
      responses:
        '200':
          description: Organization Stripe Connect Account onboarding link
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                required:
                  - url
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: OrganizationStripeConnectAccountLinkController.get
  /v1/organizations/{id}/stripe-connect/account:
    post:
      x-controller-name: OrganizationStripeConnectAccountController
      x-operation-name: create
      tags:
        - OrganizationStripeConnectAccountController
      responses:
        '200':
          description: StripeConnectAccount model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnectAccount'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStripeConnectAccountInOrganization'
        x-parameter-index: 1
      operationId: OrganizationStripeConnectAccountController.create
    get:
      x-controller-name: OrganizationStripeConnectAccountController
      x-operation-name: find
      tags:
        - OrganizationStripeConnectAccountController
      responses:
        '200':
          description: Stripe Connect Account instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnectAccount'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnect.Filter'
      operationId: OrganizationStripeConnectAccountController.find
  /v1/organizations/{id}/transactions:
    get:
      x-controller-name: OrganizationTransactionController
      x-operation-name: find
      tags:
        - OrganizationTransactionController
      responses:
        '200':
          description: Array of Organization has many Transaction
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      operationId: OrganizationTransactionController.find
  /v1/payment-processing/webhooks:
    post:
      x-controller-name: PaymentProcessingController
      x-operation-name: webhooks
      tags:
        - PaymentProcessingController
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: PaymentProcessingWebhook
        required: true
      operationId: PaymentProcessingController.webhooks
  /v1/payment-processing:
    post:
      x-controller-name: AccountPaymentProcessingController
      x-operation-name: create
      tags:
        - AccountPaymentProcessingController
      responses:
        '200':
          description: PaymentProcessing model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessing'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentProcessingInAccount'
      operationId: AccountPaymentProcessingController.create
    patch:
      x-controller-name: AccountPaymentProcessingController
      x-operation-name: patch
      tags:
        - AccountPaymentProcessingController
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                description: PaymentProcessing PATCH success
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPaymentProcessingInAccount'
      operationId: AccountPaymentProcessingController.patch
    get:
      x-controller-name: AccountPaymentProcessingController
      x-operation-name: get
      tags:
        - AccountPaymentProcessingController
      responses:
        '200':
          description: PaymentProcessing model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessing'
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      operationId: AccountPaymentProcessingController.get
  /v1/stripe-connect/accounts/{id}:
    patch:
      x-controller-name: StripeConnectAccountController
      x-operation-name: updateById
      tags:
        - StripeConnectAccountController
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                description: StripeConnectAccount PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStripeConnectAccount'
        x-parameter-index: 1
      operationId: StripeConnectAccountController.updateById
  /v1/stripe-connect/{id}/webhooks:
    post:
      x-controller-name: StripeConnectController
      x-operation-name: webhooks
      tags:
        - StripeConnectController
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: connect
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            x-parser: raw
            schema:
              type: object
        description: StripeConnectWebhook
        required: true
      operationId: StripeConnectController.webhooks
  /v1/stripe-connect:
    post:
      x-controller-name: AccountStripeConnectController
      x-operation-name: create
      tags:
        - AccountStripeConnectController
      responses:
        '200':
          description: StripeConnect model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnect'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStripeConnectInAccount'
      operationId: AccountStripeConnectController.create
    patch:
      x-controller-name: AccountStripeConnectController
      x-operation-name: patch
      tags:
        - AccountStripeConnectController
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                description: StripeConnect PATCH success
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStripeConnectInAccount'
      operationId: AccountStripeConnectController.patch
    get:
      x-controller-name: AccountStripeConnectController
      x-operation-name: get
      tags:
        - AccountStripeConnectController
      responses:
        '200':
          description: StripeConnect model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConnect'
      parameters:
        - name: filter
          in: query
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      operationId: AccountStripeConnectController.get
  /v2/invoices/{id}:
    put:
      x-controller-name: InvoiceController
      x-operation-name: replaceById
      tags:
        - InvoiceController
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                description: Invoice PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        x-parameter-index: 1
      operationId: InvoiceController.replaceById
    patch:
      x-controller-name: InvoiceController
      x-operation-name: updateById
      tags:
        - InvoiceController
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                description: Invoice PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePartial'
        x-parameter-index: 1
      operationId: InvoiceController.updateById
    get:
      x-controller-name: InvoiceController
      x-operation-name: findById
      tags:
        - InvoiceController
      responses:
        '200':
          description: Invoice model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceWithRelations'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: filter
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice.Filter'
      operationId: InvoiceController.findById
    delete:
      x-controller-name: InvoiceController
      x-operation-name: deleteById
      tags:
        - InvoiceController
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                description: Invoice DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: InvoiceController.deleteById
  /:
    get:
      x-controller-name: HealthController
      x-operation-name: health
      tags:
        - HealthController
      responses:
        '200':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
        '500':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
        '503':
          description: Health Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  checks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        state:
                          type: string
                        data:
                          type: object
                          properties:
                            reason:
                              type: string
      operationId: HealthController.health
  /v1/Documents/{id}/recurrence:
    get:
      tags:
        - Document
      summary: Fetches hasOne relation recurrence.
      operationId: Document.prototype.__get__recurrence
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: refresh
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
    post:
      tags:
        - Document
      summary: Creates a new instance in recurrence of this model.
      operationId: Document.prototype.__create__recurrence
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recurrence'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recurrence'
          text/xml:
            schema:
              $ref: '#/components/schemas/Recurrence'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
  /v1/Documents/{id}/comments/{fk}:
    delete:
      tags:
        - Document
      summary: Delete a related item by id for comments.
      operationId: Document.prototype.__destroyById__comments
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for comments
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Document
      summary: Update a related item by id for comments.
      operationId: Document.prototype.__updateById__comments
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for comments
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Comment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
      deprecated: false
  /v1/Documents/{id}/payments:
    get:
      tags:
        - Document
      summary: Queries payments of Document.
      operationId: Document.prototype.__get__payments
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
      deprecated: false
    post:
      tags:
        - Document
      summary: Creates a new instance in payments of this model.
      operationId: Document.prototype.__create__payments
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
  /v1/Documents/{id}/payments/count:
    get:
      tags:
        - Document
      summary: Counts payments of Document.
      operationId: Document.prototype.__count__payments
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Documents/{id}/comments:
    post:
      tags:
        - Document
      summary: Creates a new instance in comments of this model.
      operationId: Document.prototype.__create__comments
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Comment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Comment'
      deprecated: false
  /v1/Documents/{id}/documentCategories:
    post:
      tags:
        - Document
      summary: Creates a new instance in documentCategories of this model.
      operationId: Document.prototype.__create__documentCategories
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/Documents/{id}:
    get:
      tags:
        - Document
      summary: Find a model instance by {{id}} from the data source.
      operationId: Document.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
    put:
      tags:
        - Document
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Document.replaceById__put_Documents_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
    delete:
      tags:
        - Document
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Document.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Document
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Document.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/Document'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
  /v1/Documents/{id}/replace:
    post:
      tags:
        - Document
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Document.replaceById__post_Documents_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
  /v1/Documents/{id}/send:
    post:
      tags:
        - Document
      summary: ''
      operationId: Document.prototype.remoteSend
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: l
          in: query
          description: Language flag
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                recipients:
                  description: Comma delimited list of emails
                  type: string
                message:
                  type: string
                subject:
                  type: string
                sendCopy:
                  description: Indicates if copy should be sent to sender
                  type: boolean
                associateEmail:
                  description: Indicates if email should be saved to client
                  type: boolean
                excludedAttachmentIds:
                  description: >-
                    Specifies which attachments, besides document, should be
                    sent along with the document
                  type: string
                  format: JSON
                sendEslogAttachment:
                  description: >-
                    If this flag is set to true, eslog will be added to
                    attachments.
                  type: boolean
              required:
                - recipients
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Documents/{id}/cancel:
    post:
      tags:
        - Document
      summary: ''
      operationId: Document.prototype.cancel
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: technical
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Documents/{id}/uncancel:
    post:
      tags:
        - Document
      summary: ''
      operationId: Document.prototype.uncancel
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Documents/{id}/fiscally-verify:
    post:
      tags:
        - Document
      summary: Fiscally verify a document that previously failed verification.
      operationId: Document.prototype.remoteVerify
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: provider
          in: query
          required: false
          schema:
            type: string
        - name: old
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Documents/{id}/e-slog:
    get:
      tags:
        - Document
      summary: Generates eslog xml and returns it
      operationId: Document.prototype.eslog
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: options
          in: query
          description: Additional settings for generating the eslog format
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: The xml of the document
                type: string
                format: binary
            application/xml:
              schema:
                description: The xml of the document
                type: string
                format: binary
            text/xml:
              schema:
                description: The xml of the document
                type: string
                format: binary
            application/javascript:
              schema:
                description: The xml of the document
                type: string
                format: binary
            text/javascript:
              schema:
                description: The xml of the document
                type: string
                format: binary
      deprecated: false
  /v1/Documents/{id}/pdf:
    get:
      tags:
        - Document
      summary: Retrieve PDF of document
      operationId: Document.prototype.pdf
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
        - name: l
          in: query
          description: Language flag
          required: false
          schema:
            type: string
        - name: upn_qr
          in: query
          description: Add UPN QR to PDF
          required: false
          schema:
            type: boolean
        - name: hide_header_footer
          in: query
          description: Hide header and footer on PDF
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            application/xml:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            text/xml:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            application/javascript:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            text/javascript:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
      deprecated: false
  /v1/Documents/{id}/mark-sent:
    post:
      tags:
        - Document
      summary: Mark document as sent via snail mail
      operationId: Document.prototype.markSent
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Documents/{id}/attachments/upload:
    post:
      tags:
        - Document
      summary: Uploads an attachment for a document
      operationId: Document.prototype.uploadAttachment
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: >-
                  Returns fileMeta object containing metadata about uploaded
                  attachment
                type: object
            application/xml:
              schema:
                description: >-
                  Returns fileMeta object containing metadata about uploaded
                  attachment
                type: object
            text/xml:
              schema:
                description: >-
                  Returns fileMeta object containing metadata about uploaded
                  attachment
                type: object
            application/javascript:
              schema:
                description: >-
                  Returns fileMeta object containing metadata about uploaded
                  attachment
                type: object
            text/javascript:
              schema:
                description: >-
                  Returns fileMeta object containing metadata about uploaded
                  attachment
                type: object
      deprecated: false
  /v1/Documents/parse-xml:
    post:
      tags:
        - Document
      summary: >-
        Takes an xml file and returns a json object prepared for saving a
        document.
      operationId: Document.remoteParseXml
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Returns parsed json
                type: object
            application/xml:
              schema:
                description: Returns parsed json
                type: object
            text/xml:
              schema:
                description: Returns parsed json
                type: object
            application/javascript:
              schema:
                description: Returns parsed json
                type: object
            text/javascript:
              schema:
                description: Returns parsed json
                type: object
      deprecated: false
  /v1/Documents/cron/outgoing:
    get:
      tags:
        - Document
      summary: ''
      operationId: Document.remoteOverdueOutgoingCron
      parameters:
        - name: date
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Documents/cron/incoming:
    get:
      tags:
        - Document
      summary: ''
      operationId: Document.remoteOverdueIncomingCron
      parameters:
        - name: date
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Documents/{id}/share:
    post:
      tags:
        - Document
      summary: >-
        Generates and returns shareable document id that allows access to
        document without authentication
      operationId: Document.prototype.share
      parameters:
        - name: id
          in: path
          description: Document id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                regenerate:
                  description: Regenerate shareable id
                  type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  shareableId:
                    description: Shareable document id
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  shareableId:
                    description: Shareable document id
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  shareableId:
                    description: Shareable document id
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  shareableId:
                    description: Shareable document id
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  shareableId:
                    description: Shareable document id
                    type: string
      deprecated: false
  /v1/Documents/public/{id}:
    get:
      tags:
        - Document
      summary: Retrieve document using shareable id
      operationId: Document.remoteFindByShareableId
      parameters:
        - name: id
          in: path
          description: Shareable id of document to retrieve
          required: true
          schema:
            type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Documents/public/{id}/e-slog:
    get:
      tags:
        - Document
      summary: Generates eslog xml from shareableId and returns it
      operationId: Document.eslogByShareableId
      parameters:
        - name: id
          in: path
          description: Shareable id of document to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: The xml of the document
                type: string
                format: binary
            application/xml:
              schema:
                description: The xml of the document
                type: string
                format: binary
            text/xml:
              schema:
                description: The xml of the document
                type: string
                format: binary
            application/javascript:
              schema:
                description: The xml of the document
                type: string
                format: binary
            text/javascript:
              schema:
                description: The xml of the document
                type: string
                format: binary
      deprecated: false
  /v1/Documents/public/{id}/pdf:
    get:
      tags:
        - Document
      summary: Retrieve PDF of document
      operationId: Document.pdfByShareableId
      parameters:
        - name: id
          in: path
          description: Shareable id of document to retrieve
          required: true
          schema:
            type: string
        - name: l
          in: query
          description: Language flag
          required: false
          schema:
            type: string
        - name: upn_qr
          in: query
          description: Add UPN QR to PDF
          required: false
          schema:
            type: boolean
        - name: hide_header_footer
          in: query
          description: Hide header and footer on PDF
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            application/xml:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            text/xml:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            application/javascript:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
            text/javascript:
              schema:
                description: The pdf of the invoice
                type: string
                format: binary
      deprecated: false
  /v1/Documents/public/{id}/attachments/{attachmentId}/download:
    get:
      tags:
        - Document
      summary: Retrieve attachment of document by shareable id
      operationId: Document.attachmentByShareableId
      parameters:
        - name: id
          in: path
          description: Shareable id of document to retrieve
          required: true
          schema:
            type: string
        - name: attachmentId
          in: path
          description: Id of attachment to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: The file
                type: string
                format: binary
            application/xml:
              schema:
                description: The file
                type: string
                format: binary
            text/xml:
              schema:
                description: The file
                type: string
                format: binary
            application/javascript:
              schema:
                description: The file
                type: string
                format: binary
            text/javascript:
              schema:
                description: The file
                type: string
                format: binary
      deprecated: false
  /v1/Items/{id}/components/{fk}:
    put:
      tags:
        - Item
      summary: Update a related item by id for components.
      operationId: Item.prototype.__updateById__components
      parameters:
        - name: id
          in: path
          description: Item id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for components
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Component'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component'
            text/xml:
              schema:
                $ref: '#/components/schemas/Component'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Component'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Component'
      deprecated: false
  /v1/Items/{id}/inventories:
    get:
      tags:
        - Item
      summary: Queries inventories of Item.
      operationId: Item.prototype.__get__inventories
      parameters:
        - name: id
          in: path
          description: Item id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
      deprecated: false
  /v1/Items/{id}/components:
    post:
      tags:
        - Item
      summary: Creates a new instance in components of this model.
      operationId: Item.prototype.__create__components
      parameters:
        - name: id
          in: path
          description: Item id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Component'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component'
            text/xml:
              schema:
                $ref: '#/components/schemas/Component'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Component'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Component'
      deprecated: false
  /v1/Items/{id}:
    get:
      tags:
        - Item
      summary: Find a model instance by {{id}} from the data source.
      operationId: Item.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
    put:
      tags:
        - Item
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Item.replaceById__put_Items_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
    delete:
      tags:
        - Item
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Item.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Items/{id}/replace:
    post:
      tags:
        - Item
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Item.replaceById__post_Items_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
  /v1/Taxes/{id}/taxRates/{fk}:
    delete:
      tags:
        - Tax
      summary: Delete a related item by id for taxRates.
      operationId: Tax.prototype.__destroyById__taxRates
      parameters:
        - name: id
          in: path
          description: Tax id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for taxRates
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Taxes/{id}/taxRates:
    post:
      tags:
        - Tax
      summary: Creates a new instance in taxRates of this model.
      operationId: Tax.prototype.__create__taxRates
      parameters:
        - name: id
          in: path
          description: Tax id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxRate'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaxRate'
          text/xml:
            schema:
              $ref: '#/components/schemas/TaxRate'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxRate'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxRate'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TaxRate'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TaxRate'
      deprecated: false
  /v1/Taxes/{id}:
    get:
      tags:
        - Tax
      summary: Find a model instance by {{id}} from the data source.
      operationId: Tax.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
    put:
      tags:
        - Tax
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Tax.replaceById__put_Taxes_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Tax'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
    delete:
      tags:
        - Tax
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Tax.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Taxes/{id}/replace:
    post:
      tags:
        - Tax
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Tax.replaceById__post_Taxes_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Tax'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
  /v1/Taxes/clause-type:
    post:
      tags:
        - Tax
      summary: ''
      operationId: Tax.remoteTaxClauseType
      requestBody:
        content:
          application/json:
            schema:
              description: Body resembling a document.
              type: object
          application/x-www-form-urlencoded:
            schema:
              description: Body resembling a document.
              type: object
          application/xml:
            schema:
              description: Body resembling a document.
              type: object
          text/xml:
            schema:
              description: Body resembling a document.
              type: object
        description: Body resembling a document.
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  taxClauseType:
                    type: string
                  issuerCountry:
                    type: object
                  clientCountry:
                    type: object
            application/xml:
              schema:
                type: object
                properties:
                  taxClauseType:
                    type: string
                  issuerCountry:
                    type: object
                  clientCountry:
                    type: object
            text/xml:
              schema:
                type: object
                properties:
                  taxClauseType:
                    type: string
                  issuerCountry:
                    type: object
                  clientCountry:
                    type: object
            application/javascript:
              schema:
                type: object
                properties:
                  taxClauseType:
                    type: string
                  issuerCountry:
                    type: object
                  clientCountry:
                    type: object
            text/javascript:
              schema:
                type: object
                properties:
                  taxClauseType:
                    type: string
                  issuerCountry:
                    type: object
                  clientCountry:
                    type: object
      deprecated: false
  /v1/Clients/{id}:
    get:
      tags:
        - Client
      summary: Find a model instance by {{id}} from the data source.
      operationId: Client.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
    put:
      tags:
        - Client
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Client.replaceById__put_Clients_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Client.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Client
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Client.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Client id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          application/xml:
            schema:
              $ref: '#/components/schemas/Client'
          text/xml:
            schema:
              $ref: '#/components/schemas/Client'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
  /v1/Clients/{id}/replace:
    post:
      tags:
        - Client
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Client.replaceById__post_Clients_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
  /v1/Clients/{id}/send-reminder:
    post:
      tags:
        - Client
      summary: ''
      operationId: Client.prototype.remoteSendOverdueReminder
      parameters:
        - name: id
          in: path
          description: Client id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                l:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Organizations/{id}/defaults/{fk}:
    put:
      tags:
        - Organization
      summary: Update a related item by id for _defaults.
      operationId: Organization.prototype.__updateById___defaults
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for _defaults
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Default'
          application/xml:
            schema:
              $ref: '#/components/schemas/Default'
          text/xml:
            schema:
              $ref: '#/components/schemas/Default'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
  /v1/Organizations/{id}/documents:
    get:
      tags:
        - Organization
      summary: Queries documents of Organization.
      operationId: Organization.prototype.__get__documents
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in documents of this model.
      operationId: Organization.prototype.__create__documents
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Document'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            text/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Document'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Document'
      deprecated: false
  /v1/Organizations/{id}/documents/count:
    get:
      tags:
        - Organization
      summary: Counts documents of Organization.
      operationId: Organization.prototype.__count__documents
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/clients:
    get:
      tags:
        - Organization
      summary: Queries clients of Organization.
      operationId: Organization.prototype.__get__clients
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in clients of this model.
      operationId: Organization.prototype.__create__clients
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Client'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Client'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Client'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/xml:
              schema:
                $ref: '#/components/schemas/Client'
            text/xml:
              schema:
                $ref: '#/components/schemas/Client'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Client'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Client'
      deprecated: false
  /v1/Organizations/{id}/clients/count:
    get:
      tags:
        - Organization
      summary: Counts clients of Organization.
      operationId: Organization.prototype.__count__clients
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/items:
    get:
      tags:
        - Organization
      summary: Queries items of Organization.
      operationId: Organization.prototype.__get__items
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in items of this model.
      operationId: Organization.prototype.__create__items
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Item'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Item'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Item'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Item'
      deprecated: false
  /v1/Organizations/{id}/items/count:
    get:
      tags:
        - Organization
      summary: Counts items of Organization.
      operationId: Organization.prototype.__count__items
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/taxes:
    get:
      tags:
        - Organization
      summary: Queries taxes of Organization.
      operationId: Organization.prototype.__get__taxes
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in taxes of this model.
      operationId: Organization.prototype.__create__taxes
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Tax'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Tax'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Tax'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Tax'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tax'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tax'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Tax'
      deprecated: false
  /v1/Organizations/{id}/taxes/count:
    get:
      tags:
        - Organization
      summary: Counts taxes of Organization.
      operationId: Organization.prototype.__count__taxes
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/shopify:
    get:
      tags:
        - Organization
      summary: Queries shopify of Organization.
      operationId: Organization.prototype.__get__shopify
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopify'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopify'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopify'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopify'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopify'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in shopify of this model.
      operationId: Organization.prototype.__create__shopify
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopify'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
      deprecated: false
  /v1/Organizations/{id}/shopify/count:
    get:
      tags:
        - Organization
      summary: Counts shopify of Organization.
      operationId: Organization.prototype.__count__shopify
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/stripe:
    get:
      tags:
        - Organization
      summary: Queries stripe of Organization.
      operationId: Organization.prototype.__get__stripe
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stripe'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stripe'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stripe'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stripe'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stripe'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in stripe of this model.
      operationId: Organization.prototype.__create__stripe
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Stripe'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
      deprecated: false
  /v1/Organizations/{id}/stripe/count:
    get:
      tags:
        - Organization
      summary: Counts stripe of Organization.
      operationId: Organization.prototype.__count__stripe
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/ticketingHub:
    get:
      tags:
        - Organization
      summary: Queries ticketingHub of Organization.
      operationId: Organization.prototype.__get__ticketingHub
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingHub'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in ticketingHub of this model.
      operationId: Organization.prototype.__create__ticketingHub
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_TicketingHub'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
      deprecated: false
  /v1/Organizations/{id}/ticketingHub/count:
    get:
      tags:
        - Organization
      summary: Counts ticketingHub of Organization.
      operationId: Organization.prototype.__count__ticketingHub
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/recurrences:
    get:
      tags:
        - Organization
      summary: Queries recurrences of Organization.
      operationId: Organization.prototype.__get__recurrences
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recurrence'
      deprecated: false
  /v1/Organizations/{id}/recurrences/count:
    get:
      tags:
        - Organization
      summary: Counts recurrences of Organization.
      operationId: Organization.prototype.__count__recurrences
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/payments:
    get:
      tags:
        - Organization
      summary: Queries payments of Organization.
      operationId: Organization.prototype.__get__payments
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in payments of this model.
      operationId: Organization.prototype.__create__payments
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
  /v1/Organizations/{id}/payments/count:
    get:
      tags:
        - Organization
      summary: Counts payments of Organization.
      operationId: Organization.prototype.__count__payments
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/defaults:
    get:
      tags:
        - Organization
      summary: Queries _defaults of Organization.
      operationId: Organization.prototype.__get___defaults
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Default'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in _defaults of this model.
      operationId: Organization.prototype.__create___defaults
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Default'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Default'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Default'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Default'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
  /v1/Organizations/{id}/defaults/count:
    get:
      tags:
        - Organization
      summary: Counts _defaults of Organization.
      operationId: Organization.prototype.__count___defaults
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/businessPremises:
    get:
      tags:
        - Organization
      summary: Queries businessPremises of Organization.
      operationId: Organization.prototype.__get__businessPremises
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessPremise'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessPremise'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessPremise'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessPremise'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessPremise'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in businessPremises of this model.
      operationId: Organization.prototype.__create__businessPremises
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_BusinessPremise'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
      deprecated: false
  /v1/Organizations/{id}/electronicDevices:
    get:
      tags:
        - Organization
      summary: Queries electronicDevices of Organization.
      operationId: Organization.prototype.__get__electronicDevices
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in electronicDevices of this model.
      operationId: Organization.prototype.__create__electronicDevices
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_ElectronicDevice'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
  /v1/Organizations/{id}/accountOrganizations:
    get:
      tags:
        - Organization
      summary: Queries accountOrganizations of Organization.
      operationId: Organization.prototype.__get__accountOrganizations
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOrganization'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOrganization'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOrganization'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOrganization'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOrganization'
      deprecated: false
  /v1/Organizations/{id}/accountOrganizations/count:
    get:
      tags:
        - Organization
      summary: Counts accountOrganizations of Organization.
      operationId: Organization.prototype.__count__accountOrganizations
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/units:
    get:
      tags:
        - Organization
      summary: Queries units of Organization.
      operationId: Organization.prototype.__get__units
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in units of this model.
      operationId: Organization.prototype.__create__units
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Unit'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Unit'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Unit'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            text/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
      deprecated: false
  /v1/Organizations/{id}/units/count:
    get:
      tags:
        - Organization
      summary: Counts units of Organization.
      operationId: Organization.prototype.__count__units
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/categories:
    get:
      tags:
        - Organization
      summary: Queries categories of Organization.
      operationId: Organization.prototype.__get__categories
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in categories of this model.
      operationId: Organization.prototype.__create__categories
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Category'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Category'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Category'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
  /v1/Organizations/{id}/categories/count:
    get:
      tags:
        - Organization
      summary: Counts categories of Organization.
      operationId: Organization.prototype.__count__categories
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/documentCategories:
    get:
      tags:
        - Organization
      summary: Queries documentCategories of Organization.
      operationId: Organization.prototype.__get__documentCategories
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/Organizations/{id}/documentCategories/count:
    get:
      tags:
        - Organization
      summary: Counts documentCategories of Organization.
      operationId: Organization.prototype.__count__documentCategories
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/priceLists:
    get:
      tags:
        - Organization
      summary: Queries priceLists of Organization.
      operationId: Organization.prototype.__get__priceLists
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in priceLists of this model.
      operationId: Organization.prototype.__create__priceLists
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_PriceList'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
      deprecated: false
  /v1/Organizations/{id}/priceLists/count:
    get:
      tags:
        - Organization
      summary: Counts priceLists of Organization.
      operationId: Organization.prototype.__count__priceLists
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/warehouses:
    get:
      tags:
        - Organization
      summary: Queries warehouses of Organization.
      operationId: Organization.prototype.__get__warehouses
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in warehouses of this model.
      operationId: Organization.prototype.__create__warehouses
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
  /v1/Organizations/{id}/warehouses/count:
    get:
      tags:
        - Organization
      summary: Counts warehouses of Organization.
      operationId: Organization.prototype.__count__warehouses
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/webhooks:
    get:
      tags:
        - Organization
      summary: Queries webhooks of Organization.
      operationId: Organization.prototype.__get__webhooks
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in webhooks of this model.
      operationId: Organization.prototype.__create__webhooks
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
  /v1/Organizations/{id}/webhooks/count:
    get:
      tags:
        - Organization
      summary: Counts webhooks of Organization.
      operationId: Organization.prototype.__count__webhooks
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/orders:
    get:
      tags:
        - Organization
      summary: Queries orders of Organization.
      operationId: Organization.prototype.__get__orders
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
      deprecated: false
  /v1/Organizations/{id}/orders/count:
    get:
      tags:
        - Organization
      summary: Counts orders of Organization.
      operationId: Organization.prototype.__count__orders
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/magento1:
    get:
      tags:
        - Organization
      summary: Queries magento1 of Organization.
      operationId: Organization.prototype.__get__magento1
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magento1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magento1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magento1'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magento1'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magento1'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in magento1 of this model.
      operationId: Organization.prototype.__create__magento1
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Magento1'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
      deprecated: false
  /v1/Organizations/{id}/magento1/count:
    get:
      tags:
        - Organization
      summary: Counts magento1 of Organization.
      operationId: Organization.prototype.__count__magento1
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/woocommerce:
    get:
      tags:
        - Organization
      summary: Queries woocommerce of Organization.
      operationId: Organization.prototype.__get__woocommerce
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Woocommerce'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Woocommerce'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Woocommerce'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Woocommerce'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Woocommerce'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in woocommerce of this model.
      operationId: Organization.prototype.__create__woocommerce
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Woocommerce'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
      deprecated: false
  /v1/Organizations/{id}/woocommerce/count:
    get:
      tags:
        - Organization
      summary: Counts woocommerce of Organization.
      operationId: Organization.prototype.__count__woocommerce
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/customIntegrations:
    get:
      tags:
        - Organization
      summary: Queries customIntegrations of Organization.
      operationId: Organization.prototype.__get__customIntegrations
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIntegration'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIntegration'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIntegration'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIntegration'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIntegration'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in customIntegrations of this model.
      operationId: Organization.prototype.__create__customIntegrations
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_CustomIntegration'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
      deprecated: false
  /v1/Organizations/{id}/customIntegrations/count:
    get:
      tags:
        - Organization
      summary: Counts customIntegrations of Organization.
      operationId: Organization.prototype.__count__customIntegrations
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/thrivecart:
    get:
      tags:
        - Organization
      summary: Queries thrivecart of Organization.
      operationId: Organization.prototype.__get__thrivecart
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thrivecart'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thrivecart'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thrivecart'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thrivecart'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thrivecart'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in thrivecart of this model.
      operationId: Organization.prototype.__create__thrivecart
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Thrivecart'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
      deprecated: false
  /v1/Organizations/{id}/thrivecart/count:
    get:
      tags:
        - Organization
      summary: Counts thrivecart of Organization.
      operationId: Organization.prototype.__count__thrivecart
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/bokun:
    get:
      tags:
        - Organization
      summary: Queries bokun of Organization.
      operationId: Organization.prototype.__get__bokun
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bokun'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bokun'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bokun'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bokun'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bokun'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in bokun of this model.
      operationId: Organization.prototype.__create__bokun
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Bokun'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
      deprecated: false
  /v1/Organizations/{id}/bokun/count:
    get:
      tags:
        - Organization
      summary: Counts bokun of Organization.
      operationId: Organization.prototype.__count__bokun
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/shopamine:
    get:
      tags:
        - Organization
      summary: Queries shopamine of Organization.
      operationId: Organization.prototype.__get__shopamine
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopamine'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopamine'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopamine'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopamine'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopamine'
      deprecated: false
    post:
      tags:
        - Organization
      summary: Creates a new instance in shopamine of this model.
      operationId: Organization.prototype.__create__shopamine
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Shopamine'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
      deprecated: false
  /v1/Organizations/{id}/shopamine/count:
    get:
      tags:
        - Organization
      summary: Counts shopamine of Organization.
      operationId: Organization.prototype.__count__shopamine
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}:
    get:
      tags:
        - Organization
      summary: Find a model instance by {{id}} from the data source.
      operationId: Organization.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
    patch:
      tags:
        - Organization
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Organization.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          text/xml:
            schema:
              $ref: '#/components/schemas/Organization'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /v1/Organizations/{id}/activate:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.reqToggleActive__post_Organizations_{id}_activate
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Organizations/{id}/deactivate:
    post:
      tags:
        - Organization
      summary: ''
      operationId: >-
        Organization.prototype.reqToggleActive__post_Organizations_{id}_deactivate
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Organizations/{id}/is-unique-doc-number:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.isUniqueDocNumber
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: number
          in: query
          description: The numberTax subject to check
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: The type of document
          required: true
          schema:
            type: string
        - name: ignoreId
          in: query
          description: Id of document to ignore. Used when editing a document.
          required: false
          schema:
            type: string
        - name: incoming
          in: query
          description: Check incoming documents.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  unique:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  unique:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  unique:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  unique:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  unique:
                    type: boolean
      deprecated: false
  /v1/Organizations/{id}/last-doc-number:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.lastDocNumber
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: The type of document
          required: true
          schema:
            type: string
        - name: incoming
          in: query
          description: Incoming document
          required: false
          schema:
            type: boolean
        - name: date
          in: query
          description: Date if not in current year
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
      deprecated: false
  /v1/Organizations/{id}/next-doc-number:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.nextDocNumber
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: The type of document
          required: true
          schema:
            type: string
        - name: incoming
          in: query
          description: Incoming document
          required: false
          schema:
            type: boolean
        - name: fvStrategy
          in: query
          description: Fiscal verification strategy
          required: false
          schema:
            type: string
        - name: BPid
          in: query
          description: Business premise ID
          required: false
          schema:
            type: string
        - name: EDid
          in: query
          description: Electronic device ID
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Date if not in current year
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
      deprecated: false
  /v1/Organizations/{id}/subscription:
    get:
      tags:
        - Organization
      summary: Get currenct subscription
      operationId: Organization.prototype.subscription
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Organizations/{id}/search-documents:
    get:
      tags:
        - Organization
      summary: 'DEPRECATED: Search documents endpoint'
      operationId: Organization.prototype.searchDocuments
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Type of document
          required: false
          schema:
            type: string
        - name: term
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Organizations/{id}/upload-image:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.uploadImage__post_Organizations_{id}_upload-image
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
  /v1/Organizations/{id}/images:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.uploadImage__post_Organizations_{id}_images
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
    delete:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.deleteImage__delete_Organizations_{id}_images
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Type of image to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.downloadImage__get_Organizations_{id}_images
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
            application/javascript:
              schema:
                type: string
                format: byte
            text/javascript:
              schema:
                type: string
                format: byte
      deprecated: false
  /v1/Organizations/{id}/delete-image:
    delete:
      tags:
        - Organization
      summary: ''
      operationId: >-
        Organization.prototype.deleteImage__delete_Organizations_{id}_delete-image
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Type of image to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
  /v1/Organizations/{id}/download-image:
    get:
      tags:
        - Organization
      summary: ''
      operationId: >-
        Organization.prototype.downloadImage__get_Organizations_{id}_download-image
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
            application/javascript:
              schema:
                type: string
                format: byte
            text/javascript:
              schema:
                type: string
                format: byte
      deprecated: false
  /v1/Organizations/{id}/images/logo:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.downloadLogo
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
            application/javascript:
              schema:
                type: string
                format: byte
            text/javascript:
              schema:
                type: string
                format: byte
      deprecated: false
  /v1/Organizations/{id}/search-clients:
    get:
      tags:
        - Organization
      summary: ''
      operationId: >-
        Organization.prototype.searchClients__get_Organizations_{id}_search-clients
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: term
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Optionally limit search to customer or supplier
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Organizations/{id}/clients/search:
    get:
      tags:
        - Organization
      summary: ''
      operationId: >-
        Organization.prototype.searchClients__get_Organizations_{id}_clients_search
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: term
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Optionally limit search to customer or supplier
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Organizations/{id}/search-items:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.searchItems__get_Organizations_{id}_search-items
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: term
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Optionally limit search to incoming or outgoing
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Organizations/{id}/items/search:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.searchItems__get_Organizations_{id}_items_search
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: term
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Optionally limit search to incoming or outgoing
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Organizations/{id}/business-stats:
    get:
      tags:
        - Organization
      summary: >-
        Provides business statistics about the given organization for a
        particular date range
      operationId: Organization.prototype.businessStats
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: from
          in: query
          description: Optional from date to generate report for
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Optional to date to generate report for
          required: false
          schema:
            type: string
            format: date-time
        - name: accountId
          in: query
          description: Optional id of account to limit report for
          required: false
          schema:
            type: string
        - name: unitId
          in: query
          description: Optional id of unit to limit report for
          required: false
          schema:
            type: string
        - name: text
          in: query
          description: Optional if a text report should be created
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Object containing different stats
                type: object
            application/xml:
              schema:
                description: Object containing different stats
                type: object
            text/xml:
              schema:
                description: Object containing different stats
                type: object
            application/javascript:
              schema:
                description: Object containing different stats
                type: object
            text/javascript:
              schema:
                description: Object containing different stats
                type: object
      deprecated: false
  /v1/Organizations/{id}/total-stats:
    get:
      tags:
        - Organization
      summary: Provides financial statistics about the given organization
      operationId: Organization.prototype.totalStats
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: date
          in: query
          description: Optional value to use as today's date
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Object containing different stats
                type: boolean
            application/xml:
              schema:
                description: Object containing different stats
                type: boolean
            text/xml:
              schema:
                description: Object containing different stats
                type: boolean
            application/javascript:
              schema:
                description: Object containing different stats
                type: boolean
            text/javascript:
              schema:
                description: Object containing different stats
                type: boolean
      deprecated: false
  /v1/Organizations/{id}/document-total-stats:
    get:
      tags:
        - Organization
      summary: Get organization's document stats
      operationId: Organization.prototype.documentTotalStats
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Document type
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: dist
          in: query
          description: Dist of data ie. day, week, month, year
          required: true
          schema:
            type: string
        - name: gross
          in: query
          description: >-
            If set to true, it will calculate the prices with gross values
            otherwise with net values
          required: false
          schema:
            type: boolean
        - name: incoming
          in: query
          description: If incoming document statistics should be returned.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            application/xml:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            text/xml:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            application/javascript:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            text/javascript:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
      deprecated: false
  /v1/Organizations/{id}/category-total-stats:
    get:
      tags:
        - Organization
      summary: Get organization's categories stats
      operationId: Organization.prototype.categoryTotalStats
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: from
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: dist
          in: query
          description: Dist of data ie. day, week, month, year
          required: true
          schema:
            type: string
        - name: categoryId
          in: query
          description: Optional id of category to limit results to
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            application/xml:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            text/xml:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            application/javascript:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
            text/javascript:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
      deprecated: false
  /v1/Organizations/{id}/payment-total-stats:
    get:
      tags:
        - Organization
      summary: Get organization's payments stats
      operationId: Organization.prototype.paymentTotalStats
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: from
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: dist
          in: query
          description: Dist of data ie. day, week, month, year
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
                  customColors:
                    type: array
                    items:
                      type: object
            application/xml:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
                  customColors:
                    type: array
                    items:
                      type: object
            text/xml:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
                  customColors:
                    type: array
                    items:
                      type: object
            application/javascript:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
                  customColors:
                    type: array
                    items:
                      type: object
            text/javascript:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                  total:
                    type: array
                    items:
                      type: object
                  customColors:
                    type: array
                    items:
                      type: object
      deprecated: false
  /v1/Organizations/{id}/this-month-invoices:
    get:
      tags:
        - Organization
      summary: Returns number of invoices issued by organization in this month
      operationId: Organization.prototype.thisMonthInvoices
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  number:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  number:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: number
                    format: double
      deprecated: false
  /v1/Organizations/{id}/export:
    get:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.export
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: where
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: JSON
        - name: email
          in: query
          required: false
          schema:
            type: boolean
        - name: lang
          in: query
          required: false
          schema:
            type: string
        - name: options
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    description: >-
                      Link to file which will be available once the export is
                      generated
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    description: >-
                      Link to file which will be available once the export is
                      generated
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    description: >-
                      Link to file which will be available once the export is
                      generated
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    description: >-
                      Link to file which will be available once the export is
                      generated
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    description: >-
                      Link to file which will be available once the export is
                      generated
                    type: string
      deprecated: false
  /v1/Organizations/{id}/upload-certificate:
    post:
      tags:
        - Organization
      summary: ''
      operationId: Organization.prototype.uploadCertificate
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  description: Type of certificate ie. furs
                  type: string
                environment:
                  description: >-
                    Environment certificate is intended for, default is
                    `production`.
                  type: string
                passphrase:
                  description: Type of certificate ie. furs
                  type: string
              required:
                - type
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Organizations/{id}/invite:
    post:
      tags:
        - Organization
      summary: Invite user to / give access to organization
      operationId: Organization.prototype.invite
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                accountId:
                  description: Id of account being invited, optional if email is provided
                  type: string
                email:
                  description: Email of user to invite, optional if inviteeId is provided
                  type: string
                requireConfirmation:
                  description: >-
                    Indicates if invitee must accept the invitation before
                    getting access.

                    Only verified top level Space Invoices accounts can set this
                    to false.
                  type: boolean
                sendEmail:
                  description: >-
                    Should an email be sent to the invitee.

                    Can only be turned off for invitations that don't require
                    confirmation.
                  type: boolean
                role:
                  description: >-
                    Role of invitee, 'default' for normal, 'readonly' for
                    limited and 'admin' for full access. Defaults to 'default'.
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Organizations/{id}/has-certificate:
    get:
      tags:
        - Organization
      summary: Check if organization has certificate of a type
      operationId: Organization.prototype.hasCertificate
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: environment
          in: query
          description: Environment certificate is intended for, default is `production`.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
  /v1/Organizations/mailgun-route:
    post:
      tags:
        - Organization
      summary: Redirect mailgun to correct model
      operationId: Organization.mailgunRoute
      requestBody:
        content:
          application/json:
            schema:
              description: Mailgun object
              type: object
          application/x-www-form-urlencoded:
            schema:
              description: Mailgun object
              type: object
          application/xml:
            schema:
              description: Mailgun object
              type: object
          text/xml:
            schema:
              description: Mailgun object
              type: object
        description: Mailgun object
        required: true
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Organizations/{id}/documents/pdfs:
    get:
      tags:
        - Organization
      summary: Get multiple document PDF files in ZIP.
      operationId: Organization.prototype.remoteDocumentPDFs
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: ids
          in: query
          description: Array of document ids to fetch as PDFs
          required: true
          schema:
            type: string
            format: JSON
        - name: email
          in: query
          description: Should an email with the link be sent to the requester
          required: false
          schema:
            type: boolean
        - name: lang
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  link:
                    type: string
      deprecated: false
  /v1/Organizations/{id}/documents/parse-image:
    post:
      tags:
        - Organization
      summary: >-
        Takes an image or PDF file and puts in into processing queue to create
        document from.
      operationId: Organization.prototype.remoteParseImage
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: mobile
          in: query
          description: Is image made by mobile phone.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Returns Parse queue instance
                type: object
            application/xml:
              schema:
                description: Returns Parse queue instance
                type: object
            text/xml:
              schema:
                description: Returns Parse queue instance
                type: object
            application/javascript:
              schema:
                description: Returns Parse queue instance
                type: object
            text/javascript:
              schema:
                description: Returns Parse queue instance
                type: object
      deprecated: false
  /v1/Organizations/{id}/import:
    post:
      tags:
        - Organization
      summary: Import CSV data
      operationId: Organization.prototype.import
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    description: Operation status
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    description: Operation status
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    description: Operation status
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    description: Operation status
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    description: Operation status
                    type: boolean
      deprecated: false
  /v1/Organizations/{id}/reports/profit-and-loss:
    get:
      tags:
        - Organization
      summary: Generate category profit and loss report
      operationId: Organization.prototype.remoteProfitAndLoss
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: from
          in: query
          description: from date
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: from date
          required: true
          schema:
            type: string
        - name: options
          in: query
          description: Additional report generation options
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Generated report
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                description: Generated report
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                description: Generated report
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                description: Generated report
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                description: Generated report
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Organizations/{id}/reports/balance-sheet:
    get:
      tags:
        - Organization
      summary: Generate balance sheet balance sheet
      operationId: Organization.prototype.remoteBalanceSheet
      parameters:
        - name: id
          in: path
          description: Organization id
          required: true
          schema:
            type: string
            format: JSON
        - name: from
          in: query
          description: from date
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: from date
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Generated balance sheet
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                description: Generated balance sheet
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                description: Generated balance sheet
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                description: Generated balance sheet
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                description: Generated balance sheet
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Shopify/{id}:
    delete:
      tags:
        - Shopify
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Shopify.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Shopify
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Shopify.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Shopify id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopify'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopify'
      deprecated: false
  /v1/Shopify/{id}/order:
    post:
      tags:
        - Shopify
      summary: ''
      operationId: Shopify.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: Shopify id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopify'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopify'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Shopify/{id}/import:
    post:
      tags:
        - Shopify
      summary: Import integration data in excel format
      operationId: Shopify.prototype.import
      parameters:
        - name: id
          in: path
          description: Shopify id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/Shopify/incoming:
    post:
      tags:
        - Shopify
      operationId: Shopify.incoming
      parameters:
        - name: shopifyToken
          in: query
          description: Shopify token used to authenticate the source of req.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Shopify/app:
    get:
      tags:
        - Shopify
      operationId: Shopify.application
      parameters:
        - name: shop
          in: query
          description: Shop domain
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
            application/javascript:
              schema:
                type: string
            text/javascript:
              schema:
                type: string
      deprecated: false
  /v1/Shopify/{id}/orders/document:
    get:
      tags:
        - Shopify
      operationId: Shopify.prototype.findOrderDocument
      parameters:
        - name: id
          in: path
          description: Shopify id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Stripe/{id}:
    delete:
      tags:
        - Stripe
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Stripe.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Stripe
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Stripe.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Stripe id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stripe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stripe'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stripe'
          text/xml:
            schema:
              $ref: '#/components/schemas/Stripe'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/xml:
              schema:
                $ref: '#/components/schemas/Stripe'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Stripe'
      deprecated: false
  /v1/Stripe/{id}/incoming:
    post:
      tags:
        - Stripe
      operationId: Stripe.prototype.incoming
      parameters:
        - name: id
          in: path
          description: Stripe id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/TicketingHub/{id}/replace:
    post:
      tags:
        - TicketingHub
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: TicketingHub.replaceById__post_TicketingHub_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/TicketingHub'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
      deprecated: false
  /v1/TicketingHub/{id}:
    put:
      tags:
        - TicketingHub
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: TicketingHub.replaceById__put_TicketingHub_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/TicketingHub'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/xml:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            application/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
            text/javascript:
              schema:
                $ref: '#/components/schemas/TicketingHub'
      deprecated: false
    delete:
      tags:
        - TicketingHub
      summary: Delete a model instance by {{id}} from the data source.
      operationId: TicketingHub.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Currencies:
    get:
      tags:
        - Currency
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Currency.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
      deprecated: false
  /v1/Accounts/{id}/accessTokens/{fk}:
    delete:
      tags:
        - Account
      summary: Delete a related item by id for accessTokens.
      operationId: Account.prototype.__destroyById__accessTokens
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/{id}/accessTokens:
    get:
      tags:
        - Account
      summary: Queries accessTokens of Account.
      operationId: Account.prototype.__get__accessTokens
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
      deprecated: false
    post:
      tags:
        - Account
      summary: Creates a new instance in accessTokens of this model.
      operationId: Account.prototype.__create__accessTokens
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
  /v1/Accounts/{id}/usages:
    get:
      tags:
        - Account
      summary: Queries usages of Account.
      operationId: Account.prototype.__get__usages
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
      deprecated: false
  /v1/Accounts/{id}/usages/count:
    get:
      tags:
        - Account
      summary: Counts usages of Account.
      operationId: Account.prototype.__count__usages
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Accounts/{id}/organizations:
    get:
      tags:
        - Account
      summary: Queries organizations of Account.
      operationId: Account.prototype.__get__organizations
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
      deprecated: false
    post:
      tags:
        - Account
      summary: Creates a new instance in organizations of this model.
      operationId: Account.prototype.__create__organizations
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Organization'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Organization'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /v1/Accounts/{id}/organizations/count:
    get:
      tags:
        - Account
      summary: Counts organizations of Account.
      operationId: Account.prototype.__count__organizations
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Accounts/{id}/logs:
    get:
      tags:
        - Account
      summary: Queries logs of Account.
      operationId: Account.prototype.__get__logs
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
      deprecated: false
  /v1/Accounts/{id}/logs/count:
    get:
      tags:
        - Account
      summary: Counts logs of Account.
      operationId: Account.prototype.__count__logs
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Accounts:
    post:
      tags:
        - Account
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Account.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Account'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Account'
        description: Model instance data
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Account'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
  /v1/Accounts/{id}:
    get:
      tags:
        - Account
      summary: Find a model instance by {{id}} from the data source.
      operationId: Account.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Account'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
    patch:
      tags:
        - Account
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Account.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
          text/xml:
            schema:
              $ref: '#/components/schemas/Account'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Account'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
  /v1/Accounts/login:
    post:
      tags:
        - Account
      summary: Login a user with username/email and password.
      operationId: Account.login
      parameters:
        - name: include
          in: query
          description: >-
            Related objects to include in the response. See the description of
            return value for more details.
          required: false
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: >+
                  The response body contains properties of the AccessToken
                  created on login.

                  Depending on the value of `include` parameter, the body may
                  contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

                type: object
            application/xml:
              schema:
                description: >+
                  The response body contains properties of the AccessToken
                  created on login.

                  Depending on the value of `include` parameter, the body may
                  contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

                type: object
            text/xml:
              schema:
                description: >+
                  The response body contains properties of the AccessToken
                  created on login.

                  Depending on the value of `include` parameter, the body may
                  contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

                type: object
            application/javascript:
              schema:
                description: >+
                  The response body contains properties of the AccessToken
                  created on login.

                  Depending on the value of `include` parameter, the body may
                  contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

                type: object
            text/javascript:
              schema:
                description: >+
                  The response body contains properties of the AccessToken
                  created on login.

                  Depending on the value of `include` parameter, the body may
                  contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

                type: object
      deprecated: false
  /v1/Accounts/logout:
    post:
      tags:
        - Account
      summary: Logout a user with access token.
      operationId: Account.logout
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/{id}/verify:
    post:
      tags:
        - Account
      summary: Trigger user's identity verification with configured verifyOptions
      operationId: Account.prototype.verify
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/confirm:
    get:
      tags:
        - Account
      summary: Confirm a user registration with identity verification token.
      operationId: Account.confirm
      parameters:
        - name: uid
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/reset:
    post:
      tags:
        - Account
      summary: Reset password for a user with email.
      operationId: Account.resetPassword
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/change-password:
    post:
      tags:
        - Account
      summary: Change a user's password.
      operationId: Account.changePassword
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
        required: true
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/reset-password:
    post:
      tags:
        - Account
      summary: Reset user's password via a password-reset token.
      operationId: Account.setPassword
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
              required:
                - newPassword
        required: true
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Accounts/is-unique:
    get:
      tags:
        - Account
      summary: Check if e-mail already exists.
      operationId: Account.isUnique
      parameters:
        - name: email
          in: query
          description: E-mail to check uniqueness against.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  isUnique:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  isUnique:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  isUnique:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  isUnique:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  isUnique:
                    type: boolean
      deprecated: false
  /v1/Accounts/impersonate:
    post:
      tags:
        - Account
      summary: Login as child account
      operationId: Account.impersonate
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  description: Account's email
                  type: string
                id:
                  description: Account's id
                  type: string
                ttl:
                  description: TTL for generated token. Default 2 months.
                  type: number
                  format: double
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
  /v1/Accounts/{id}/is-verified:
    get:
      tags:
        - Account
      summary: Check if account is verified.
      operationId: Account.prototype.isVerified
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  isVerified:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  isVerified:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  isVerified:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  isVerified:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  isVerified:
                    type: boolean
      deprecated: false
  /v1/Accounts/authorized:
    get:
      tags:
        - Account
      summary: Checks if user is authorized and returns user
      operationId: Account.authorized
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Accounts/{id}/send-verification:
    post:
      tags:
        - Account
      summary: Request another verification email
      operationId: Account.prototype.sendVerificationEmail
      parameters:
        - name: id
          in: path
          description: Account id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Accounts/identity-verification:
    get:
      tags:
        - Account
      summary: Returns identity hash for user
      operationId: Account.identityVerification
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Accounts/subscription:
    get:
      tags:
        - Account
      summary: Retrieve Account's active subscription
      operationId: Account.getSubscription
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Active subscription instance
                type: object
            application/xml:
              schema:
                description: Active subscription instance
                type: object
            text/xml:
              schema:
                description: Active subscription instance
                type: object
            application/javascript:
              schema:
                description: Active subscription instance
                type: object
            text/javascript:
              schema:
                description: Active subscription instance
                type: object
      deprecated: false
  /v1/Recurrences/{id}:
    get:
      tags:
        - Recurrence
      summary: Find a model instance by {{id}} from the data source.
      operationId: Recurrence.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
    put:
      tags:
        - Recurrence
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Recurrence.replaceById__put_Recurrences_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Recurrence'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
    delete:
      tags:
        - Recurrence
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Recurrence.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Recurrences/{id}/replace:
    post:
      tags:
        - Recurrence
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Recurrence.replaceById__post_Recurrences_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Recurrence'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/xml:
              schema:
                $ref: '#/components/schemas/Recurrence'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Recurrence'
      deprecated: false
  /v1/Recurrences/cron:
    get:
      tags:
        - Recurrence
      summary: ''
      operationId: Recurrence.runCron
      parameters:
        - name: date
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Payments/{id}:
    get:
      tags:
        - Payment
      summary: Find a model instance by {{id}} from the data source.
      operationId: Payment.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
    put:
      tags:
        - Payment
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Payment.replaceById__put_Payments_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
    delete:
      tags:
        - Payment
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Payment.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Payments/{id}/replace:
    post:
      tags:
        - Payment
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Payment.replaceById__post_Payments_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Payment'
      deprecated: false
  /v1/Defaults/{id}:
    get:
      tags:
        - Default
      summary: Find a model instance by {{id}} from the data source.
      operationId: Default.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
    delete:
      tags:
        - Default
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Default.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Default
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Default.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Default id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Default'
          application/xml:
            schema:
              $ref: '#/components/schemas/Default'
          text/xml:
            schema:
              $ref: '#/components/schemas/Default'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
            application/xml:
              schema:
                $ref: '#/components/schemas/Default'
            text/xml:
              schema:
                $ref: '#/components/schemas/Default'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Default'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Default'
      deprecated: false
  /v1/Companies:
    get:
      tags:
        - Company
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Company.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
      deprecated: false
  /v1/Companies/search:
    get:
      tags:
        - Company
      summary: ''
      operationId: Company.search
      parameters:
        - name: term
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: Narrowing search for more efficient queries.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/x-any'
      deprecated: false
  /v1/Subscriptions/{id}/whiteLabel:
    post:
      tags:
        - Subscription
      summary: Creates a new instance in whiteLabel of this model.
      operationId: Subscription.prototype.__create__whiteLabel
      parameters:
        - name: id
          in: path
          description: Subscription id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
  /v1/Subscriptions:
    get:
      tags:
        - Subscription
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Subscription.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
      deprecated: false
  /v1/Subscriptions/client-token:
    get:
      tags:
        - Subscription
      summary: Get Braintree client token
      operationId: Subscription.clientToken
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
            application/javascript:
              schema:
                type: string
            text/javascript:
              schema:
                type: string
      deprecated: false
  /v1/Subscriptions/cron:
    get:
      tags:
        - Subscription
      summary: ''
      operationId: Subscription.remoteCron
      parameters:
        - name: date
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: date-time
        - name: subscriptionId
          in: query
          description: If provided limits cron to one subscription
          required: false
          schema:
            type: string
        - name: skipSendingEmails
          in: query
          description: Runs without sending email to customer
          required: false
          schema:
            type: boolean
        - name: skipIssuingInvoices
          in: query
          description: Runs without issuing invoice for usage
          required: false
          schema:
            type: boolean
        - name: dryRun
          in: query
          description: Checks usage but does not commit data or send emails
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Subscriptions/{id}/payment-method:
    get:
      tags:
        - Subscription
      summary: Get Payment method
      operationId: Subscription.prototype.getPaymentMethod
      parameters:
        - name: id
          in: path
          description: Subscription id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    post:
      tags:
        - Subscription
      summary: Add/Update payment method
      operationId: Subscription.prototype.setPaymentMethod
      parameters:
        - name: id
          in: path
          description: Subscription id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  format: JSON
              required:
                - paymentMethod
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Plans:
    get:
      tags:
        - Plan
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Plan.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
      deprecated: false
  /v1/WhiteLabels:
    post:
      tags:
        - WhiteLabel
      summary: Create a new instance of the model and persist it into the data source.
      operationId: WhiteLabel.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_WhiteLabel'
        description: Model instance data
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
    get:
      tags:
        - WhiteLabel
      summary: Find all instances of the model matched by filter from the data source.
      operationId: WhiteLabel.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
  /v1/WhiteLabels/{id}:
    patch:
      tags:
        - WhiteLabel
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: WhiteLabel.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: WhiteLabel id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/WhiteLabel'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            application/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
            text/javascript:
              schema:
                $ref: '#/components/schemas/WhiteLabel'
      deprecated: false
  /v1/containers/{container}/download/{file}:
    get:
      tags:
        - container
      operationId: container.download
      parameters:
        - name: container
          in: path
          required: true
          schema:
            type: string
        - name: file
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Messages/contact-sales:
    post:
      tags:
        - Message
      summary: ''
      operationId: Message.remoteContactSales
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                company:
                  type: string
                message:
                  type: string
              required:
                - email
                - company
                - message
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
  /v1/BusinessPremises/{id}/electronicDevices:
    post:
      tags:
        - BusinessPremise
      summary: Creates a new instance in electronicDevices of this model.
      operationId: BusinessPremise.prototype.__create__electronicDevices
      parameters:
        - name: id
          in: path
          description: BusinessPremise id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/_new_ElectronicDevice'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
  /v1/BusinessPremises/{id}:
    delete:
      tags:
        - BusinessPremise
      summary: Delete a model instance by {{id}} from the data source.
      operationId: BusinessPremise.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - BusinessPremise
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: BusinessPremise.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: BusinessPremise id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
          text/xml:
            schema:
              $ref: '#/components/schemas/BusinessPremise'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            application/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
            text/javascript:
              schema:
                $ref: '#/components/schemas/BusinessPremise'
      deprecated: false
  /v1/AtcudSeries/{id}/organization:
    get:
      tags:
        - AtcudSeries
      summary: Fetches belongsTo relation organization.
      operationId: AtcudSeries.prototype.__get__organization
      parameters:
        - name: id
          in: path
          description: AtcudSeries id
          required: true
          schema:
            type: string
            format: JSON
        - name: refresh
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /v1/AtcudSeries:
    post:
      tags:
        - AtcudSeries
      summary: Create a new instance of the model and persist it into the data source.
      operationId: AtcudSeries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_AtcudSeries'
        description: Model instance data
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
    get:
      tags:
        - AtcudSeries
      summary: Find all instances of the model matched by filter from the data source.
      operationId: AtcudSeries.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/{id}:
    get:
      tags:
        - AtcudSeries
      summary: Find a model instance by {{id}} from the data source.
      operationId: AtcudSeries.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
    put:
      tags:
        - AtcudSeries
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: AtcudSeries.replaceById__put_AtcudSeries_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/AtcudSeries'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
    delete:
      tags:
        - AtcudSeries
      summary: Delete a model instance by {{id}} from the data source.
      operationId: AtcudSeries.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - AtcudSeries
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: AtcudSeries.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: AtcudSeries id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
          application/xml:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
          text/xml:
            schema:
              $ref: '#/components/schemas/AtcudSeries'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/{id}/replace:
    post:
      tags:
        - AtcudSeries
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: AtcudSeries.replaceById__post_AtcudSeries_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/AtcudSeries'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/findOne:
    get:
      tags:
        - AtcudSeries
      summary: Find first instance of the model matched by filter from the data source.
      operationId: AtcudSeries.findOne
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AtcudSeries'
      deprecated: false
  /v1/AtcudSeries/count:
    get:
      tags:
        - AtcudSeries
      summary: Count instances of the model matched by where from the data source.
      operationId: AtcudSeries.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/Countries:
    get:
      tags:
        - Country
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Country.find
      parameters:
        - name: filter
          in: query
          description: >-
            Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string (`{"where":{"something":"value"}}`). 
            See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
      deprecated: false
  /v1/Countries/match:
    get:
      tags:
        - Country
      summary: >-
        Matches the sent term against the available countries, to try and find a
        match
      operationId: Country.match
      parameters:
        - name: term
          in: query
          description: The term to match the country agains
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  match:
                    description: The matched country
                    type: object
            application/xml:
              schema:
                type: object
                properties:
                  match:
                    description: The matched country
                    type: object
            text/xml:
              schema:
                type: object
                properties:
                  match:
                    description: The matched country
                    type: object
            application/javascript:
              schema:
                type: object
                properties:
                  match:
                    description: The matched country
                    type: object
            text/javascript:
              schema:
                type: object
                properties:
                  match:
                    description: The matched country
                    type: object
      deprecated: false
  /v1/tracking/webhook:
    post:
      tags:
        - Tracking
      summary: ''
      operationId: Tracking.webhook
      parameters:
        - name: source
          in: query
          description: Source of webhook call
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/ElectronicDevices/{id}:
    patch:
      tags:
        - ElectronicDevice
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: ElectronicDevice.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: ElectronicDevice id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
          application/xml:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
          text/xml:
            schema:
              $ref: '#/components/schemas/ElectronicDevice'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/xml:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ElectronicDevice'
      deprecated: false
  /v1/Certificates/expiry-cron:
    get:
      tags:
        - Certificate
      summary: ''
      operationId: Certificate.remoteExpiryCron
      parameters:
        - name: date
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/geoip/locate:
    post:
      tags:
        - GeoIP
      summary: Parse IP to geo location
      operationId: GeoIP.locate
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ip:
                  type: string
              required:
                - ip
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/AccountOrganizations/{id}:
    delete:
      tags:
        - AccountOrganization
      summary: Delete a model instance by {{id}} from the data source.
      operationId: AccountOrganization.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/AccountOrganizations/{id}/accept:
    post:
      tags:
        - AccountOrganization
      summary: Confirm invitation to join organization
      operationId: AccountOrganization.prototype.accept
      parameters:
        - name: id
          in: path
          description: AccountOrganization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/AccountOrganizations/{id}/reject:
    post:
      tags:
        - AccountOrganization
      summary: Deny invitation to join organization
      operationId: AccountOrganization.prototype.reject
      parameters:
        - name: id
          in: path
          description: AccountOrganization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/AccountOrganizations/{id}/enable:
    post:
      tags:
        - AccountOrganization
      summary: Enable users access to organization
      operationId: AccountOrganization.prototype.enable
      parameters:
        - name: id
          in: path
          description: AccountOrganization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/AccountOrganizations/{id}/disable:
    post:
      tags:
        - AccountOrganization
      summary: Disable users access to organization
      operationId: AccountOrganization.prototype.disable
      parameters:
        - name: id
          in: path
          description: AccountOrganization id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/AccountOrganizations/{id}/change-role:
    post:
      tags:
        - AccountOrganization
      operationId: AccountOrganization.prototype.changeRole
      parameters:
        - name: id
          in: path
          description: AccountOrganization id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                role:
                  description: >-
                    Role of invitee, one of 'default', 'readonly' and 'admin'.
                    Defaults to 'default'.
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/FileMeta/{id}:
    delete:
      tags:
        - FileMeta
      summary: Delete a model instance by {{id}} from the data source.
      operationId: FileMeta.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Units/{id}:
    delete:
      tags:
        - Unit
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Unit.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Unit
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Unit.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unit'
          application/xml:
            schema:
              $ref: '#/components/schemas/Unit'
          text/xml:
            schema:
              $ref: '#/components/schemas/Unit'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            text/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Unit'
      deprecated: false
  /v1/Units/{id}/last-doc-number:
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.lastDocNumber
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: The type of document
          required: true
          schema:
            type: string
        - name: incoming
          in: query
          description: Incoming document
          required: false
          schema:
            type: boolean
        - name: date
          in: query
          description: Date if not in current year
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
      deprecated: false
  /v1/Units/{id}/next-doc-number:
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.nextDocNumber
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: The type of document
          required: true
          schema:
            type: string
        - name: incoming
          in: query
          description: Incoming document
          required: false
          schema:
            type: boolean
        - name: date
          in: query
          description: Date if not in current year
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  number:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  number:
                    type: string
      deprecated: false
  /v1/Units/{id}/upload-image:
    post:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.uploadImage__post_Units_{id}_upload-image
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
  /v1/Units/{id}/images:
    post:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.uploadImage__post_Units_{id}_images
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: >-
          #/components/requestBodies/Organization.prototype.uploadImage__post_Organizations__id__upload-image
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
    delete:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.deleteImage__delete_Units_{id}_images
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Type of image to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.downloadImage__get_Units_{id}_images
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
            application/javascript:
              schema:
                type: string
                format: byte
            text/javascript:
              schema:
                type: string
                format: byte
      deprecated: false
  /v1/Units/{id}/delete-image:
    delete:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.deleteImage__delete_Units_{id}_delete-image
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Type of image to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
  /v1/Units/{id}/download-image:
    get:
      tags:
        - Unit
      summary: ''
      operationId: Unit.prototype.downloadImage__get_Units_{id}_download-image
      parameters:
        - name: id
          in: path
          description: Unit id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
            application/javascript:
              schema:
                type: string
                format: byte
            text/javascript:
              schema:
                type: string
                format: byte
      deprecated: false
  /v1/Categories/{id}:
    get:
      tags:
        - Category
      summary: Find a model instance by {{id}} from the data source.
      operationId: Category.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
    put:
      tags:
        - Category
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Category.replaceById__put_Categories_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Category'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
    delete:
      tags:
        - Category
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Category.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Categories/{id}/replace:
    post:
      tags:
        - Category
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Category.replaceById__post_Categories_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Category'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/xml:
              schema:
                $ref: '#/components/schemas/Category'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Category'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Category'
      deprecated: false
  /v1/DocumentCategories/{id}/replace:
    post:
      tags:
        - DocumentCategory
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: DocumentCategory.replaceById__post_DocumentCategories_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/DocumentCategories/{id}:
    put:
      tags:
        - DocumentCategory
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: DocumentCategory.replaceById__put_DocumentCategories_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/DocumentCategory'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
    delete:
      tags:
        - DocumentCategory
      summary: Delete a model instance by {{id}} from the data source.
      operationId: DocumentCategory.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - DocumentCategory
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: DocumentCategory.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: DocumentCategory id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
          text/xml:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      deprecated: false
  /v1/PriceLists/{id}/items:
    get:
      tags:
        - PriceList
      summary: Queries items of PriceList.
      operationId: PriceList.prototype.__get__items
      parameters:
        - name: id
          in: path
          description: PriceList id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
      deprecated: false
  /v1/PriceLists/{id}/items/count:
    get:
      tags:
        - PriceList
      summary: Counts items of PriceList.
      operationId: PriceList.prototype.__count__items
      parameters:
        - name: id
          in: path
          description: PriceList id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/PriceLists/{id}/prices:
    get:
      tags:
        - PriceList
      summary: Queries prices of PriceList.
      operationId: PriceList.prototype.__get__prices
      parameters:
        - name: id
          in: path
          description: PriceList id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
      deprecated: false
    post:
      tags:
        - PriceList
      summary: Creates a new instance in prices of this model.
      operationId: PriceList.prototype.__create__prices
      parameters:
        - name: id
          in: path
          description: PriceList id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_new_Price'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_new_Price'
          application/xml:
            schema:
              $ref: '#/components/schemas/_new_Price'
          text/xml:
            schema:
              $ref: '#/components/schemas/_new_Price'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/xml:
              schema:
                $ref: '#/components/schemas/Price'
            text/xml:
              schema:
                $ref: '#/components/schemas/Price'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Price'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Price'
      deprecated: false
  /v1/PriceLists/{id}/prices/count:
    get:
      tags:
        - PriceList
      summary: Counts prices of PriceList.
      operationId: PriceList.prototype.__count__prices
      parameters:
        - name: id
          in: path
          description: PriceList id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /v1/PriceLists/{id}:
    get:
      tags:
        - PriceList
      summary: Find a model instance by {{id}} from the data source.
      operationId: PriceList.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
      deprecated: false
    delete:
      tags:
        - PriceList
      summary: Delete a model instance by {{id}} from the data source.
      operationId: PriceList.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - PriceList
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: PriceList.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: PriceList id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PriceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/PriceList'
          text/xml:
            schema:
              $ref: '#/components/schemas/PriceList'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/PriceList'
      deprecated: false
  /v1/Prices/{id}:
    delete:
      tags:
        - Price
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Price.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Price
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Price.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Price id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Price'
          application/xml:
            schema:
              $ref: '#/components/schemas/Price'
          text/xml:
            schema:
              $ref: '#/components/schemas/Price'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
            application/xml:
              schema:
                $ref: '#/components/schemas/Price'
            text/xml:
              schema:
                $ref: '#/components/schemas/Price'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Price'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Price'
      deprecated: false
  /v1/Warehouses/{id}:
    get:
      tags:
        - Warehouse
      summary: Find a model instance by {{id}} from the data source.
      operationId: Warehouse.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
    put:
      tags:
        - Warehouse
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Warehouse.replaceById__put_Warehouses_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
    delete:
      tags:
        - Warehouse
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Warehouse.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Warehouse
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Warehouse.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Warehouse id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Warehouse'
          application/xml:
            schema:
              $ref: '#/components/schemas/Warehouse'
          text/xml:
            schema:
              $ref: '#/components/schemas/Warehouse'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
  /v1/Warehouses/{id}/replace:
    post:
      tags:
        - Warehouse
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Warehouse.replaceById__post_Warehouses_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Warehouse'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Warehouse'
      deprecated: false
  /v1/Webhooks/{id}:
    get:
      tags:
        - Webhook
      summary: Find a model instance by {{id}} from the data source.
      operationId: Webhook.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
    put:
      tags:
        - Webhook
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Webhook.replaceById__put_Webhooks_{id}
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
    delete:
      tags:
        - Webhook
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Webhook.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Webhook
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Webhook.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Webhook id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
          text/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
  /v1/Webhooks/{id}/replace:
    post:
      tags:
        - Webhook
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: Webhook.replaceById__post_Webhooks_{id}_replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Webhook'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Webhook'
      deprecated: false
  /v1/Typless/webhook:
    post:
      tags:
        - Typless
      summary: ''
      operationId: Typless.remoteOnWebhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
          application/xml:
            schema:
              type: object
          text/xml:
            schema:
              type: object
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Orders/{id}:
    get:
      tags:
        - Order
      summary: Find a model instance by {{id}} from the data source.
      operationId: Order.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: >-
            Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Order'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Order'
      deprecated: false
  /v1/Orders/{id}/documents/create:
    post:
      tags:
        - Order
      summary: ''
      operationId: Order.prototype.remoteCreateDocument
      parameters:
        - name: id
          in: path
          description: Order id
          required: true
          schema:
            type: string
            format: JSON
        - name: type
          in: query
          description: Type of document to create
          required: true
          schema:
            type: string
        - name: send
          in: query
          description: >-
            Force set if document should be sent, if not provided integration
            setting is used.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /v1/Magento1/{id}:
    delete:
      tags:
        - Magento1
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Magento1.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Magento1
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Magento1.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Magento1 id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Magento1'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Magento1'
      deprecated: false
  /v1/Magento1/{id}/order:
    post:
      tags:
        - Magento1
      summary: ''
      operationId: Magento1.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: Magento1 id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Magento1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Magento1'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Magento1/{id}/import:
    post:
      tags:
        - Magento1
      summary: Import integration data in excel format
      operationId: Magento1.prototype.import
      parameters:
        - name: id
          in: path
          description: Magento1 id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/Woocommerce/{id}:
    delete:
      tags:
        - Woocommerce
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Woocommerce.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Woocommerce
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Woocommerce.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Woocommerce id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          text/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Woocommerce'
      deprecated: false
  /v1/Woocommerce/{id}/order:
    post:
      tags:
        - Woocommerce
      summary: ''
      operationId: Woocommerce.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: Woocommerce id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          application/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
          text/xml:
            schema:
              $ref: '#/components/schemas/Woocommerce'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Woocommerce/{id}/import:
    post:
      tags:
        - Woocommerce
      summary: Import integration data in excel format
      operationId: Woocommerce.prototype.import
      parameters:
        - name: id
          in: path
          description: Woocommerce id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/CustomIntegrations/{id}:
    delete:
      tags:
        - CustomIntegration
      summary: Delete a model instance by {{id}} from the data source.
      operationId: CustomIntegration.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - CustomIntegration
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: CustomIntegration.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: CustomIntegration id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            application/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
            text/javascript:
              schema:
                $ref: '#/components/schemas/CustomIntegration'
      deprecated: false
  /v1/CustomIntegrations/{id}/order:
    post:
      tags:
        - CustomIntegration
      summary: ''
      operationId: CustomIntegration.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: CustomIntegration id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIntegration'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/CustomIntegrations/{id}/import:
    post:
      tags:
        - CustomIntegration
      summary: Import integration data in excel format
      operationId: CustomIntegration.prototype.import
      parameters:
        - name: id
          in: path
          description: CustomIntegration id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/Thrivecart/{id}:
    delete:
      tags:
        - Thrivecart
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Thrivecart.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Thrivecart
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Thrivecart.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Thrivecart id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          text/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/xml:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Thrivecart'
      deprecated: false
  /v1/Thrivecart/{id}/order:
    post:
      tags:
        - Thrivecart
      summary: ''
      operationId: Thrivecart.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: Thrivecart id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          application/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
          text/xml:
            schema:
              $ref: '#/components/schemas/Thrivecart'
      responses:
        '204':
          description: Request was successful
      deprecated: false
    head:
      tags:
        - Thrivecart
      summary: ''
      operationId: Thrivecart.prototype.install
      parameters:
        - name: id
          in: path
          description: Thrivecart id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Thrivecart/{id}/import:
    post:
      tags:
        - Thrivecart
      summary: Import integration data in excel format
      operationId: Thrivecart.prototype.import
      parameters:
        - name: id
          in: path
          description: Thrivecart id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/Bokun/{id}:
    delete:
      tags:
        - Bokun
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Bokun.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Bokun
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Bokun.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Bokun id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
          text/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/xml:
              schema:
                $ref: '#/components/schemas/Bokun'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Bokun'
      deprecated: false
  /v1/Bokun/{id}/order:
    post:
      tags:
        - Bokun
      summary: ''
      operationId: Bokun.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: Bokun id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bokun'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
          text/xml:
            schema:
              $ref: '#/components/schemas/Bokun'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Bokun/{id}/import:
    post:
      tags:
        - Bokun
      summary: Import integration data in excel format
      operationId: Bokun.prototype.import
      parameters:
        - name: id
          in: path
          description: Bokun id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/Shopamine/{id}:
    delete:
      tags:
        - Shopamine
      summary: Delete a model instance by {{id}} from the data source.
      operationId: Shopamine.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    patch:
      tags:
        - Shopamine
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: Shopamine.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Shopamine id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
        description: An object of model property name/value pairs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopamine'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopamine'
      deprecated: false
  /v1/Shopamine/{id}/order:
    post:
      tags:
        - Shopamine
      summary: ''
      operationId: Shopamine.prototype.processOrder
      parameters:
        - name: id
          in: path
          description: Shopamine id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopamine'
          application/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
          text/xml:
            schema:
              $ref: '#/components/schemas/Shopamine'
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /v1/Shopamine/{id}/import:
    post:
      tags:
        - Shopamine
      summary: Import integration data in excel format
      operationId: Shopamine.prototype.import
      parameters:
        - name: id
          in: path
          description: Shopamine id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        $ref: '#/components/requestBodies/Shopify.prototype.import'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                description: Operation status
                type: object
            application/xml:
              schema:
                description: Operation status
                type: object
            text/xml:
              schema:
                description: Operation status
                type: object
            application/javascript:
              schema:
                description: Operation status
                type: object
            text/javascript:
              schema:
                description: Operation status
                type: object
      deprecated: false
  /v1/Sendgrid/webhook:
    post:
      tags:
        - Sendgrid
      summary: ''
      operationId: Sendgrid.webhook
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/x-any'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/x-any'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/x-any'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/x-any'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/Logs/cron/clear:
    get:
      tags:
        - Log
      summary: ''
      operationId: Log.clear
      parameters:
        - name: date
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
  /v1/AWSSES/webhook:
    post:
      tags:
        - AWSSES
      summary: ''
      operationId: AWSSES.webhook
      requestBody:
        $ref: '#/components/requestBodies/Account.loginCredentials'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      deprecated: false
servers:
  - url: https://api.spaceinvoices.com
components:
  schemas:
    PaymentProcessing:
      title: PaymentProcessing
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        id:
          type: string
        approved:
          type: boolean
        active:
          type: boolean
        applicationFee:
          type: number
          description: Application Fee percent to collect on top of default payment fee
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          type: number
          description: Application Fee collected by Space Invoices
          minimum: 0
          maximum: 1
        paymentCompleteReturnURL:
          type: string
        environment:
          type: string
          enum:
            - sandbox
            - production
        accountId:
          type: string
        merchantId:
          type: string
      additionalProperties: false
    NewPaymentProcessingInAccount:
      title: NewPaymentProcessingInAccount
      type: object
      description: >-
        (tsType: Omit<PaymentProcessing, 'id' | 'accountId' | 'approved' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>, schemaOptions: { title:
        'NewPaymentProcessingInAccount', exclude: [ 'id', 'accountId',
        'approved', 'spaceInvoicesFee', 'createdAt', 'updatedAt' ] })
      properties:
        custom:
          type: object
          description: Custom field for free input data
        active:
          type: boolean
        applicationFee:
          type: number
          description: Application Fee percent to collect on top of default payment fee
          minimum: 0
          maximum: 99
        paymentCompleteReturnURL:
          type: string
        environment:
          type: string
          enum:
            - sandbox
            - production
        merchantId:
          type: string
      additionalProperties: false
      x-typescript-type: >-
        Omit<PaymentProcessing, 'id' | 'accountId' | 'approved' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>
    PatchPaymentProcessingInAccount:
      title: PatchPaymentProcessingInAccount
      type: object
      description: >-
        (tsType: Omit<Partial<PaymentProcessing>, 'id' | 'accountId' |
        'approved' | 'spaceInvoicesFee' | 'environment' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title: 'PatchPaymentProcessingInAccount',
        partial: true, exclude: [ 'id', 'accountId', 'approved',
        'spaceInvoicesFee', 'environment', 'createdAt', 'updatedAt' ] })
      properties:
        custom:
          type: object
          description: Custom field for free input data
        active:
          type: boolean
        applicationFee:
          type: number
          description: Application Fee percent to collect on top of default payment fee
          minimum: 0
          maximum: 99
        paymentCompleteReturnURL:
          type: string
        merchantId:
          type: string
      additionalProperties: false
      x-typescript-type: >-
        Omit<Partial<PaymentProcessing>, 'id' | 'accountId' | 'approved' |
        'spaceInvoicesFee' | 'environment' | 'createdAt' | 'updatedAt'>
    StripeConnect:
      title: StripeConnect
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        id:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
        webhookSecret:
          type: string
          description: Stripe webhooks secret
        connectWebhookSecret:
          type: string
          description: Stripe webhooks secret for Connect specific calls
        active:
          type: boolean
        refreshUrl:
          type: string
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          format: uri
        returnUrl:
          type: string
          description: URL to return to once account onboarding is completed.
          format: uri
        applicationFee:
          type: number
          description: Application Fee collected by Stripe Connect Platform
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          type: number
          description: Application Fee collected by Space Invoices
          minimum: 0
          maximum: 1
        accountId:
          type: string
      required:
        - privateKey
        - publicKey
      additionalProperties: false
    NewStripeConnectInAccount:
      title: NewStripeConnectInAccount
      type: object
      description: >-
        (tsType: Omit<StripeConnect, 'id' | 'accountId' | 'webhookSecret' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>, schemaOptions: { title:
        'NewStripeConnectInAccount', exclude: [ 'id', 'accountId',
        'webhookSecret', 'spaceInvoicesFee', 'createdAt', 'updatedAt' ] })
      properties:
        custom:
          type: object
          description: Custom field for free input data
        privateKey:
          type: string
        publicKey:
          type: string
        connectWebhookSecret:
          type: string
          description: Stripe webhooks secret for Connect specific calls
        active:
          type: boolean
        refreshUrl:
          type: string
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          format: uri
        returnUrl:
          type: string
          description: URL to return to once account onboarding is completed.
          format: uri
        applicationFee:
          type: number
          description: Application Fee collected by Stripe Connect Platform
          minimum: 0
          maximum: 99
      required:
        - privateKey
        - publicKey
      additionalProperties: false
      x-typescript-type: >-
        Omit<StripeConnect, 'id' | 'accountId' | 'webhookSecret' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>
    PatchStripeConnectInAccount:
      title: PatchStripeConnectInAccount
      type: object
      description: >-
        (tsType: Omit<Partial<StripeConnect>, 'id' | 'accountId' |
        'webhookSecret' | 'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>,
        schemaOptions: { title: 'PatchStripeConnectInAccount', partial: true,
        exclude: [ 'id', 'accountId', 'webhookSecret', 'spaceInvoicesFee',
        'createdAt', 'updatedAt' ] })
      properties:
        custom:
          type: object
          description: Custom field for free input data
        privateKey:
          type: string
        publicKey:
          type: string
        connectWebhookSecret:
          type: string
          description: Stripe webhooks secret for Connect specific calls
        active:
          type: boolean
        refreshUrl:
          type: string
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          format: uri
        returnUrl:
          type: string
          description: URL to return to once account onboarding is completed.
          format: uri
        applicationFee:
          type: number
          description: Application Fee collected by Stripe Connect Platform
          minimum: 0
          maximum: 99
      additionalProperties: false
      x-typescript-type: >-
        Omit<Partial<StripeConnect>, 'id' | 'accountId' | 'webhookSecret' |
        'spaceInvoicesFee' | 'createdAt' | 'updatedAt'>
    TaxRate:
      properties:
        id:
          type: string
        dateValidFrom:
          type: string
          format: date-time
        rate:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - id
        - dateValidFrom
        - rate
      additionalProperties: false
    DocumentTax:
      title: DocumentTax
      type: object
      properties:
        taxId:
          type: string
        tax:
          type: number
        base:
          type: number
        totalTax:
          type: number
      required:
        - tax
        - base
        - totalTax
      additionalProperties: false
    DocumentItemTax:
      properties:
        id:
          type: string
        rate:
          type: number
          format: double
        reverseCharged:
          default: false
          type: boolean
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        taxId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - id
        - rate
        - reverseCharged
        - recoverable
        - compound
      additionalProperties: false
    TaxExemption:
      properties:
        code:
          type: string
        reason:
          type: string
        id:
          type: string
      additionalProperties: false
    DocumentItem:
      properties:
        id:
          type: string
        discount:
          type: number
          format: double
        discountIsAmount:
          default: false
          type: boolean
        quantity:
          type: number
          format: double
        total:
          type: number
          format: double
        totalWithTax:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        isSeparator:
          default: false
          type: boolean
        name:
          type: string
        description:
          default: ''
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        classification:
          type: string
        unit:
          type: string
        SKU:
          type: string
        EAN:
          type: string
        trackInventory:
          type: boolean
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        taxExemptionCode:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        taxExemptionReason:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        itemId:
          $ref: '#/components/schemas/ObjectID'
        _taxExemption:
          $ref: '#/components/schemas/TaxExemption'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        _documentItemTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItemTax'
        _components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
      additionalProperties: false
    AccessTokenWithRelations:
      title: AccessTokenWithRelations
      type: object
      description: >-
        (tsType: AccessTokenWithRelations, schemaOptions: { includeRelations:
        true })
      properties:
        id:
          type: string
        ttl:
          type: number
        scopes:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        userId:
          type: string
        user:
          $ref: '#/components/schemas/AccountWithRelations'
      required:
        - userId
      additionalProperties: false
      x-typescript-type: AccessTokenWithRelations
    StripeConnectWithRelations:
      title: StripeConnectWithRelations
      type: object
      description: >-
        (tsType: StripeConnectWithRelations, schemaOptions: { includeRelations:
        true })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        id:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
        webhookSecret:
          type: string
          description: Stripe webhooks secret
        connectWebhookSecret:
          type: string
          description: Stripe webhooks secret for Connect specific calls
        active:
          type: boolean
        refreshUrl:
          type: string
          description: >-
            URL to redirect to when account onboarding link needs to be
            re-generated.
          format: uri
        returnUrl:
          type: string
          description: URL to return to once account onboarding is completed.
          format: uri
        applicationFee:
          type: number
          description: Application Fee collected by Stripe Connect Platform
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          type: number
          description: Application Fee collected by Space Invoices
          minimum: 0
          maximum: 1
        accountId:
          type: string
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        stripeConnectAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StripeConnectAccountWithRelations'
      required:
        - privateKey
        - publicKey
      additionalProperties: false
      x-typescript-type: StripeConnectWithRelations
    StripeConnectAccountWithRelations:
      title: StripeConnectAccountWithRelations
      type: object
      description: >-
        (tsType: StripeConnectAccountWithRelations, schemaOptions: {
        includeRelations: true })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        stripeAccountId:
          type: string
        chargesEnabled:
          type: boolean
          description: Indicates if charges are enabled on Stripe for this Account
        active:
          type: boolean
        organizationId:
          type: string
        stripeConnectId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        stripeConnect:
          $ref: '#/components/schemas/StripeConnectWithRelations'
      required:
        - stripeAccountId
        - organizationId
        - stripeConnectId
      additionalProperties: false
      x-typescript-type: StripeConnectAccountWithRelations
    PaymentProcessingWithRelations:
      title: PaymentProcessingWithRelations
      type: object
      description: >-
        (tsType: PaymentProcessingWithRelations, schemaOptions: {
        includeRelations: true })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        id:
          type: string
        approved:
          type: boolean
        active:
          type: boolean
        applicationFee:
          type: number
          description: Application Fee percent to collect on top of default payment fee
          minimum: 0
          maximum: 99
        spaceInvoicesFee:
          type: number
          description: Application Fee collected by Space Invoices
          minimum: 0
          maximum: 1
        paymentCompleteReturnURL:
          type: string
        environment:
          type: string
          enum:
            - sandbox
            - production
        accountId:
          type: string
        merchantId:
          type: string
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        merchant:
          $ref: '#/components/schemas/MerchantWithRelations'
        merchants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantWithRelations'
      additionalProperties: false
      x-typescript-type: PaymentProcessingWithRelations
    MerchantWithRelations:
      title: MerchantWithRelations
      type: object
      description: >-
        (tsType: MerchantWithRelations, schemaOptions: { includeRelations: true
        })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        merchantId:
          type: string
          description: Payment processor merchant id
        applicationId:
          type: string
          description: Payment processor application id
        link:
          type: string
          description: Payment processor onboarding link
        chargesEnabled:
          type: boolean
          description: Indicates if merchant is permitted to execute charges
        active:
          type: boolean
        organizationId:
          type: string
        paymentProcessingId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        paymentProcessing:
          $ref: '#/components/schemas/PaymentProcessingWithRelations'
      required:
        - organizationId
        - paymentProcessingId
      additionalProperties: false
      x-typescript-type: MerchantWithRelations
    ClientWithRelations:
      title: ClientWithRelations
      type: object
      description: '(tsType: ClientWithRelations, schemaOptions: { includeRelations: true })'
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
          description: Type of business entity.
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        id:
          type: string
        contact:
          type: string
        note:
          type: string
        isEndCustomer:
          type: boolean
        type:
          type: string
          description: Type of client, customer, supplier or both.
        companyId:
          type: string
          description: Reference to companies model for internal analysis.
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - name
      additionalProperties: false
      x-typescript-type: ClientWithRelations
    InvoiceWithRelations:
      title: InvoiceWithRelations
      type: object
      description: >-
        (tsType: InvoiceWithRelations, schemaOptions: { includeRelations: true
        })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        l10n:
          type: object
          description: Object for storing localized values of strings
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        date:
          type: string
          format: date-time
        reference:
          type: string
          description: Reference for payment identification
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
          minimum: 0
          maximum: 9
        note:
          type: string
        taxClause:
          type: string
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
        omitTaxes:
          type: boolean
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        sentSnailMail:
          type: boolean
        currencyId:
          type: string
          description: Document 3 letter currency id based on ISO 4217 standard.
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        hasUnit:
          type: boolean
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
        uniqueId:
          type: string
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
        equalization:
          type: number
          description: Cent equalization amount
        issuedAt:
          type: string
          format: date-time
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
        dateYear:
          type: number
        shareableId:
          type: string
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        incoming:
          type: boolean
        id:
          type: string
        draft:
          type: boolean
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        canceled:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        chargesDisabled:
          type: boolean
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
        stripeConnectPaymentIntent:
          type: object
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _fatturaPa:
          type: object
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        client:
          $ref: '#/components/schemas/ClientWithRelations'
      required:
        - date
        - total
        - totalWithTax
        - currencyId
        - hasUnit
        - dateYear
        - _documentIssuer
        - _documentClient
        - _documentItems
      additionalProperties: false
      x-typescript-type: InvoiceWithRelations
    DefaultWithRelations:
      title: DefaultWithRelations
      type: object
      description: >-
        (tsType: DefaultWithRelations, schemaOptions: { includeRelations: true
        })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        l10n:
          type: object
          description: Object for storing localized values of strings
        id:
          type: string
        name:
          type: string
        value: {}
        description:
          type: string
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - organizationId
      additionalProperties: false
      x-typescript-type: DefaultWithRelations
    TaxWithRelations:
      title: TaxWithRelations
      type: object
      description: '(tsType: TaxWithRelations, schemaOptions: { includeRelations: true })'
      properties:
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          type: boolean
        compound:
          type: boolean
        taxNumber:
          type: string
          description: Tax number associated with this tax.
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        id:
          type: string
        classification:
          type: string
        _taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      additionalProperties: false
      x-typescript-type: TaxWithRelations
    PaymentWithRelations:
      title: PaymentWithRelations
      type: object
      description: >-
        (tsType: PaymentWithRelations, schemaOptions: { includeRelations: true
        })
      properties:
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        amount:
          type: number
        type:
          type: string
          enum:
            - bank
            - online
            - paypal
            - cash
            - card
            - crypto
            - coupon
            - other
        tag:
          type: string
          description: Payment tag for sub-categorization
        date:
          type: string
          format: date-time
        note:
          type: string
        organizationId:
          type: string
        documentId:
          type: string
        transactionId:
          type: string
          description: Link to related transaction that was the source of the payment
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        document:
          $ref: '#/components/schemas/DocumentWithRelations'
        transaction:
          $ref: '#/components/schemas/TransactionWithRelations'
      required:
        - amount
        - type
        - organizationId
        - documentId
      additionalProperties: false
      x-typescript-type: PaymentWithRelations
    PaymentIntentWithRelations:
      title: PaymentIntentWithRelations
      type: object
      description: >-
        (tsType: PaymentIntentWithRelations, schemaOptions: { includeRelations:
        true })
      properties:
        id:
          type: string
        getPaidPaymentId:
          type: string
        paymentLink:
          type: string
          description: Link to payment page
        amount:
          type: number
        reference:
          type: string
        returnURL:
          type: string
        allowRecurring:
          type: boolean
        currencyId:
          type: string
        expiresAt:
          type: string
          format: date-time
        applicationFee:
          type: number
        spaceInvoicesFee:
          type: number
        initialPaymentIntentId:
          type: string
        status:
          type: string
        succeeded:
          type: boolean
        documentId:
          type: string
        organizationId:
          type: string
        document:
          $ref: '#/components/schemas/DocumentWithRelations'
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - getPaidPaymentId
        - amount
        - reference
        - currencyId
        - applicationFee
        - spaceInvoicesFee
        - status
        - organizationId
      additionalProperties: false
      x-typescript-type: PaymentIntentWithRelations
    DocumentWithRelations:
      title: DocumentWithRelations
      type: object
      description: >-
        (tsType: DocumentWithRelations, schemaOptions: { includeRelations: true
        })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        l10n:
          type: object
          description: Object for storing localized values of strings
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        draft:
          type: boolean
        date:
          type: string
          format: date-time
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        dateValidTill:
          type: string
          format: date-time
        datePaid:
          type: string
          format: date-time
        dateReceived:
          type: string
          format: date-time
          description: Date document was received, used for incoming documents.
        reference:
          type: string
          description: Reference for payment identification
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
        note:
          type: string
        taxClause:
          type: string
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
        omitTaxes:
          type: boolean
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
        keepPricesAsGross:
          type: boolean
          description: Forces not removing tax from gross price when using omitTaxes
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        displayName:
          type: string
          description: Customize the dispay name of a document type
        canceled:
          type: boolean
        sentSnailMail:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        currencyId:
          type: string
          description: >-
            Because currency is not an actual lb model it can't be used as
            relation. Since this value matches isoName of currency there is
            never a need to expand the relational data. It can still be loaded
            separately by id from Currency model if needed.
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            type: object
            description: Array of unique taxes on document. Used for display.
        hasUnit:
          type: boolean
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
        validateEslog:
          type: boolean
          description: Indicates if document should be validated based on eslog format.
        isValidEslog:
          type: boolean
          description: Property indicating that a document is in valid eslog format
        uniqueId:
          type: string
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
        customTotals:
          type: boolean
          description: >-
            If true document tax and amount totals won't be calculated, provided
            values will be used instead
        incoming:
          type: boolean
          description: Indicates document is incoming ie. expense if invoices etc.
        numberInternal:
          type: string
          description: Internal tracking number
        equalization:
          type: number
          description: Cent equalization amount
        sandbox:
          type: boolean
        issuedAt:
          type: string
          format: date-time
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
        shareableId:
          type: string
        chargesDisabled:
          type: boolean
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
        stripeConnectPaymentIntent:
          type: object
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        _fatturaPa:
          type: object
        id:
          type: string
        unitId:
          type: string
        documentIds:
          type: array
          items:
            type: string
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _at:
          $ref: '#/components/schemas/At'
        _documentConversionRate:
          $ref: '#/components/schemas/DocumentConversionRate'
        referencedDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentWithRelations'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentWithRelations'
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        account:
          $ref: '#/components/schemas/AccountWithRelations'
        paymentIntents:
          type: array
          items:
            $ref: '#/components/schemas/PaymentIntentWithRelations'
        client:
          $ref: '#/components/schemas/ClientWithRelations'
      required:
        - type
        - canceled
        - currencyId
        - organizationId
        - accountId
      additionalProperties: false
      x-typescript-type: DocumentWithRelations
    TransactionWithRelations:
      title: TransactionWithRelations
      type: object
      description: >-
        (tsType: TransactionWithRelations, schemaOptions: { includeRelations:
        true })
      properties:
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        type:
          type: string
          enum:
            - debit
            - credit
        source:
          type: string
          enum:
            - getpaid
            - stripe
        processorId:
          type: string
          description: >-
            Used to link to external system that was the source of the
            transaction
        organizationId:
          type: string
        documentId:
          type: string
          description: Link to related document that was the source of the transaction
        paymentIntentId:
          type: string
          description: >-
            Links to related payment intent that was the source of the
            transaction
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
        document:
          $ref: '#/components/schemas/DocumentWithRelations'
        paymentIntent:
          $ref: '#/components/schemas/PaymentIntentWithRelations'
      required:
        - date
        - amount
        - type
        - source
        - organizationId
      additionalProperties: false
      x-typescript-type: TransactionWithRelations
    OrganizationWithRelations:
      title: OrganizationWithRelations
      type: object
      description: >-
        (tsType: OrganizationWithRelations, schemaOptions: { includeRelations:
        true })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
          description: Type of business entity.
        id:
          type: string
        locale:
          type: string
        timezone:
          type: string
        active:
          type: boolean
        supportPin:
          type: number
        size:
          type: string
        industry:
          type: string
        companyId:
          type: string
          description: Reference to companies model for internal tracking.
        billingEmail:
          type: string
          description: Billing email used for SI customers if is billing organization
        activatedAt:
          type: string
          format: date-time
        deactivatedAt:
          type: string
          format: date-time
        sandbox:
          type: boolean
        fiscalRegionCode:
          type: string
          description: 'Fiscal region used in portugal. Possible values: PT, PT-AC, PT-MD'
        stripeConnectAccount:
          $ref: '#/components/schemas/StripeConnectAccountWithRelations'
        merchant:
          $ref: '#/components/schemas/MerchantWithRelations'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountWithRelations'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceWithRelations'
        _defaults:
          type: array
          items:
            $ref: '#/components/schemas/DefaultWithRelations'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ClientWithRelations'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/TaxWithRelations'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionWithRelations'
        paymentIntents:
          type: array
          items:
            $ref: '#/components/schemas/PaymentIntentWithRelations'
      required:
        - name
      additionalProperties: false
      x-typescript-type: OrganizationWithRelations
    AccountWithRelations:
      title: AccountWithRelations
      type: object
      description: >-
        (tsType: AccountWithRelations, schemaOptions: { includeRelations: true
        })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        id:
          type: string
        password:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        verificationToken:
          type: string
        locale:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        taxNumber:
          type: string
          description: Personal tax number, required for fiscalization.
        label:
          type: string
          description: >-
            Label of person issuing invoices. Required for fiscalization. Should
            be unique per organization but we can't validate this. But can be
            checked based on accountId saved to _furs object.
        parentId:
          type: string
        masterId:
          type: string
        billingOrganizationId:
          type: string
        role:
          type: string
          description: Role within organization.
        softwareSupplierTaxNumber:
          type: string
          description: >-
            For tax number of primary account providing fiscal verification to
            their end customers.
        activateRedirect:
          type: string
          description: Custom activation redirect URL for sub-accounts.
        invitationLink:
          type: string
          description: Custom link where invited user can review invitations.
        invitationNewLink:
          type: string
          description: Custom link to view invitation for non existing user.
        documentShareableLink:
          type: string
          description: Custom link for shareable document view.
        disableCreatingChildOrganizations:
          type: boolean
          description: Disable child accounts creating organizations
        resetRedirect:
          type: string
          description: Custom password reset redirect URL for sub accounts of this account.
        skipChildAccountVerification:
          type: boolean
        accessTokens:
          type: array
          items:
            $ref: '#/components/schemas/AccessTokenWithRelations'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationWithRelations'
        stripeConnect:
          $ref: '#/components/schemas/StripeConnectWithRelations'
        paymentProcessing:
          $ref: '#/components/schemas/PaymentProcessingWithRelations'
      required:
        - password
        - email
      additionalProperties: false
      x-typescript-type: AccountWithRelations
    AtcudSeriesWithRelations:
      title: AtcudSeriesWithRelations
      type: object
      description: >-
        (tsType: AtcudSeriesWithRelations, schemaOptions: { includeRelations:
        true })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        seriesId:
          type: string
          description: >-
            Id provided by the ATCUD authority. It is used to identify the
            series of ATCUDs.
          minLength: 8
          pattern: ^[BCDFGHJKLMNPQRSTVWXYZ23456789]+$
        code:
          type: string
          description: >-
            Code used for the series. It needs to be used in the document
            number. (ie. FT MYSERIES/00000001)
        documentType:
          type: string
          description: >-
            The type of document this series is used for. It can be "invoice",
            "creditNote"
          enum:
            - invoice
            - credit-note
        startDate:
          type: string
          format: date-time
          description: The time from which this series is valid.
        firstNumber:
          type: string
          description: The first number of the series, required by the ATCUD authority.
        organizationId:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationWithRelations'
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
        - organizationId
      additionalProperties: false
      x-typescript-type: AtcudSeriesWithRelations
    AtcudSeries:
      properties:
        seriesId:
          type: string
        code:
          type: string
        documentType:
          type: string
        startDate:
          type: string
          format: date-time
        firstNumber:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
      additionalProperties: false
    NewAtcudSeries:
      title: NewAtcudSeries
      type: object
      description: >-
        (tsType: Omit<AtcudSeries, 'id' | 'organizationId'>, schemaOptions: {
        title: 'NewAtcudSeries', exclude: [ 'id', 'organizationId' ] })
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        seriesId:
          type: string
          description: >-
            Id provided by the ATCUD authority. It is used to identify the
            series of ATCUDs.
          minLength: 8
          pattern: ^[BCDFGHJKLMNPQRSTVWXYZ23456789]+$
        code:
          type: string
          description: >-
            Code used for the series. It needs to be used in the document
            number. (ie. FT MYSERIES/00000001)
        documentType:
          type: string
          description: >-
            The type of document this series is used for. It can be "invoice",
            "creditNote"
          enum:
            - invoice
            - credit-note
        startDate:
          type: string
          format: date-time
          description: The time from which this series is valid.
        firstNumber:
          type: string
          description: The first number of the series, required by the ATCUD authority.
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
      additionalProperties: false
      x-typescript-type: Omit<AtcudSeries, 'id' | 'organizationId'>
    PaymentIntent:
      title: PaymentIntent
      type: object
      properties:
        id:
          type: string
        getPaidPaymentId:
          type: string
        paymentLink:
          type: string
          description: Link to payment page
        amount:
          type: number
        reference:
          type: string
        returnURL:
          type: string
        allowRecurring:
          type: boolean
        currencyId:
          type: string
        expiresAt:
          type: string
          format: date-time
        applicationFee:
          type: number
        spaceInvoicesFee:
          type: number
        initialPaymentIntentId:
          type: string
        status:
          type: string
        succeeded:
          type: boolean
        documentId:
          type: string
        organizationId:
          type: string
      required:
        - getPaidPaymentId
        - amount
        - reference
        - currencyId
        - applicationFee
        - spaceInvoicesFee
        - status
        - organizationId
      additionalProperties: false
    StripeConnectPaymentIntent:
      title: StripeConnectPaymentIntent
      type: object
      properties:
        paymentIntentId:
          type: string
        clientSecret:
          type: string
        publicKey:
          type: string
          description: Stripe Connect publishable key used for UI checkout form
        amount:
          type: number
          description: Payment intent amount
        currencyId:
          type: string
      required:
        - paymentIntentId
        - clientSecret
        - publicKey
        - currencyId
      additionalProperties: false
    InvoicePartial:
      title: InvoicePartial
      type: object
      description: '(tsType: Partial<Invoice>, schemaOptions: { partial: true })'
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        l10n:
          type: object
          description: Object for storing localized values of strings
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        date:
          type: string
          format: date-time
        reference:
          type: string
          description: Reference for payment identification
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
          minimum: 0
          maximum: 9
        note:
          type: string
        taxClause:
          type: string
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
        omitTaxes:
          type: boolean
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        sentSnailMail:
          type: boolean
        currencyId:
          type: string
          description: Document 3 letter currency id based on ISO 4217 standard.
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        hasUnit:
          type: boolean
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
        uniqueId:
          type: string
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
        equalization:
          type: number
          description: Cent equalization amount
        issuedAt:
          type: string
          format: date-time
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
        dateYear:
          type: number
        shareableId:
          type: string
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        incoming:
          type: boolean
        id:
          type: string
        draft:
          type: boolean
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        canceled:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        chargesDisabled:
          type: boolean
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
        stripeConnectPaymentIntent:
          type: object
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _fatturaPa:
          type: object
      additionalProperties: false
      x-typescript-type: Partial<Invoice>
    Invoice:
      title: Invoice
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        l10n:
          type: object
          description: Object for storing localized values of strings
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        number:
          type: string
        date:
          type: string
          format: date-time
        reference:
          type: string
          description: Reference for payment identification
        total:
          type: number
        totalConverted:
          type: number
        totalDiscount:
          type: number
        totalWithTax:
          type: number
        totalWithTaxConverted:
          type: number
        decimalPlaces:
          type: number
          minimum: 0
          maximum: 9
        note:
          type: string
        taxClause:
          type: string
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document. Automatically populated on document
            save/update if not provided.
        omitTaxes:
          type: boolean
          description: >-
            If taxes should be omited when issuing document. Automatically
            populated on document if set using omit_tax_ default.
        footer:
          type: string
        signature:
          type: string
        type:
          type: string
        sentSnailMail:
          type: boolean
        currencyId:
          type: string
          description: Document 3 letter currency id based on ISO 4217 standard.
        _documentTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        _documentReverseTaxes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTax'
        hasUnit:
          type: boolean
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
        uniqueId:
          type: string
          description: >-
            Optional user defined random unique value for each unique document
            used to prevent saving same document twice in case of connection
            drop. If a match happens the system returns the found document
            instead of a new one.
        equalization:
          type: number
          description: Cent equalization amount
        issuedAt:
          type: string
          format: date-time
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
        dateYear:
          type: number
        shareableId:
          type: string
        _documentIssuer:
          type: object
        _documentClient:
          type: object
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        incoming:
          type: boolean
        id:
          type: string
        draft:
          type: boolean
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        canceled:
          type: boolean
        totalPaid:
          type: number
        totalDue:
          type: number
        paidInFull:
          type: boolean
        chargesDisabled:
          type: boolean
          description: >-
            Indicates if payment processing via Pay now button is disabled for
            this document
        stripeConnectPaymentIntent:
          type: object
        organizationId:
          type: string
        accountId:
          type: string
        clientId:
          type: string
        _fatturaPa:
          type: object
      required:
        - date
        - total
        - totalWithTax
        - currencyId
        - hasUnit
        - dateYear
        - _documentIssuer
        - _documentClient
        - _documentItems
      additionalProperties: false
    Merchant:
      title: Merchant
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        merchantId:
          type: string
          description: Payment processor merchant id
        applicationId:
          type: string
          description: Payment processor application id
        link:
          type: string
          description: Payment processor onboarding link
        chargesEnabled:
          type: boolean
          description: Indicates if merchant is permitted to execute charges
        active:
          type: boolean
        organizationId:
          type: string
        paymentProcessingId:
          type: string
      required:
        - organizationId
        - paymentProcessingId
      additionalProperties: false
    NewMerchantInOrganization:
      title: NewMerchantInOrganization
      type: object
      description: >-
        (tsType: Omit<Merchant, 'id' | 'paymentProcessingId' | 'merchantId' |
        'applicationId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title: 'NewMerchantInOrganization',
        exclude: [ 'id', 'paymentProcessingId', 'merchantId', 'applicationId',
        'organizationId', 'chargesEnabled', 'createdAt', 'updatedAt' ] })
      properties:
        link:
          type: string
          description: Payment processor onboarding link
        active:
          type: boolean
      additionalProperties: false
      x-typescript-type: >-
        Omit<Merchant, 'id' | 'paymentProcessingId' | 'merchantId' |
        'applicationId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>
    MerchantPartialExcluding_id-paymentProcessingId-merchantId-applicationId-organizationId-chargesEnabled-createdAt-updatedAt_:
      title: >-
        MerchantPartialExcluding_id-paymentProcessingId-merchantId-applicationId-organizationId-chargesEnabled-createdAt-updatedAt_
      type: object
      description: >-
        (tsType: Omit<Partial<Merchant>, 'id' | 'paymentProcessingId' |
        'merchantId' | 'applicationId' | 'organizationId' | 'chargesEnabled' |
        'createdAt' | 'updatedAt'>, schemaOptions: { partial: true, exclude: [
        'id', 'paymentProcessingId', 'merchantId', 'applicationId',
        'organizationId', 'chargesEnabled', 'createdAt', 'updatedAt' ] })
      properties:
        link:
          type: string
          description: Payment processor onboarding link
        active:
          type: boolean
      additionalProperties: false
      x-typescript-type: >-
        Omit<Partial<Merchant>, 'id' | 'paymentProcessingId' | 'merchantId' |
        'applicationId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>
    CreatePaymentIntentDto: {}
    StripeConnectAccount:
      title: StripeConnectAccount
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        stripeAccountId:
          type: string
        chargesEnabled:
          type: boolean
          description: Indicates if charges are enabled on Stripe for this Account
        active:
          type: boolean
        organizationId:
          type: string
        stripeConnectId:
          type: string
      required:
        - stripeAccountId
        - organizationId
        - stripeConnectId
      additionalProperties: false
    NewStripeConnectAccountInOrganization:
      title: NewStripeConnectAccountInOrganization
      type: object
      description: >-
        (tsType: Omit<StripeConnectAccount, 'id' | 'stripeConnectId' |
        'stripeAccountId' | 'organizationId' | 'chargesEnabled' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title:
        'NewStripeConnectAccountInOrganization', exclude: [ 'id',
        'stripeConnectId', 'stripeAccountId', 'organizationId',
        'chargesEnabled', 'createdAt', 'updatedAt' ] })
      properties:
        active:
          type: boolean
      additionalProperties: false
      x-typescript-type: >-
        Omit<StripeConnectAccount, 'id' | 'stripeConnectId' | 'stripeAccountId'
        | 'organizationId' | 'chargesEnabled' | 'createdAt' | 'updatedAt'>
    Transaction:
      title: Transaction
      type: object
      properties:
        _isDeleted:
          type: boolean
        deletedAt:
          type: string
          format: date-time
        custom:
          type: object
          description: Custom field for free input data
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        type:
          type: string
          enum:
            - debit
            - credit
        source:
          type: string
          enum:
            - getpaid
            - stripe
        processorId:
          type: string
          description: >-
            Used to link to external system that was the source of the
            transaction
        organizationId:
          type: string
        documentId:
          type: string
          description: Link to related document that was the source of the transaction
        paymentIntentId:
          type: string
          description: >-
            Links to related payment intent that was the source of the
            transaction
      required:
        - date
        - amount
        - type
        - source
        - organizationId
      additionalProperties: false
    Date: {}
    PatchStripeConnectAccount:
      title: PatchStripeConnectAccount
      type: object
      description: >-
        (tsType: Omit<Partial<StripeConnectAccount>, 'chargesEnabled' |
        'stripeAccountId' | 'stripeConnectId' | 'organizationId' | 'createdAt' |
        'updatedAt'>, schemaOptions: { title: 'PatchStripeConnectAccount',
        partial: true, exclude: [ 'chargesEnabled', 'stripeAccountId',
        'stripeConnectId', 'organizationId', 'createdAt', 'updatedAt' ] })
      properties:
        id:
          type: string
        active:
          type: boolean
      additionalProperties: false
      x-typescript-type: >-
        Omit<Partial<StripeConnectAccount>, 'chargesEnabled' | 'stripeAccountId'
        | 'stripeConnectId' | 'organizationId' | 'createdAt' | 'updatedAt'>
    Buffer: {}
    x-any:
      properties: {}
    Recurrence:
      properties:
        name:
          type: string
        type:
          type: string
        dateFirst:
          type: string
          format: date-time
        numRecurrences:
          type: number
          format: double
        autoSend:
          default: false
          type: boolean
        notify:
          default: true
          type: boolean
        saveAsDraft:
          default: false
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _recurrenceDates:
          type: array
          items:
            $ref: '#/components/schemas/RecurrenceDate'
      required:
        - name
        - type
        - dateFirst
        - numRecurrences
        - autoSend
        - notify
        - saveAsDraft
      additionalProperties: false
    Comment:
      properties:
        id:
          type: string
        text:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - text
      additionalProperties: false
    Payment:
      properties:
        amount:
          type: number
          format: double
        type:
          type: string
        tag:
          description: Payment tag for sub categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        transactionId:
          description: Transaction id from payment gateway
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - amount
        - type
        - date
      additionalProperties: false
    DocumentCategory:
      properties:
        amount:
          type: number
          format: double
        amountConverted:
          type: number
          format: double
        date:
          type: string
          format: date-time
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        categoryId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - amount
      additionalProperties: false
    Document:
      properties:
        _fatturaPa:
          type: object
        number:
          description: Auto-incremented on Document create if not provided.
          type: string
        previousDocumentId:
          type: string
        draft:
          default: false
          type: boolean
        date:
          description: Default is today.
          type: string
          format: date-time
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          description: In case service for period, this is the end date of the period.
          type: string
          format: date-time
        dateDue:
          description: Date invoice is due.
          type: string
          format: date-time
        dateValidTill:
          description: Date estimate is valid till.
          type: string
          format: date-time
        datePaid:
          description: Date advance invoice was paid.
          type: string
          format: date-time
        dateReceived:
          description: Date document was received, used for incoming documents.
          type: string
          format: date-time
        reference:
          description: Reference for Payment or other identification
          type: string
        total:
          description: Document total without taxes.
          type: number
          format: double
        totalConverted:
          description: Document total without taxes converted to organization's currency.
          type: number
          format: double
        totalDiscount:
          description: Total discount amount.
          type: number
          format: double
        totalWithTax:
          description: Document total with taxes.
          type: number
          format: double
        totalWithTaxConverted:
          description: Document total with taxes converted to organization's currency.
          type: number
          format: double
        decimalPlaces:
          default: 4
          type: number
          format: double
        note:
          description: >-
            Document note to client. Auto-set based on Organization's Defaults
            if not provided.
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document.

            Auto-set based on Organization's settings on Document create if not
            provided.
          type: string
        omitTaxes:
          description: |-
            If taxes should be omited when issuing document.
            Automatically populated on document if set using omit_tax_ default.
          type: boolean
        keepPricesAsGross:
          description: >-
            Forces not removing tax from gross price when saving document with
            omitTaxes set
          type: boolean
        ignoreOmitTaxes:
          description: Forces omit taxes setting to be ignored when saving document
          type: boolean
        footer:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        signature:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        type:
          default: invoice
          description: Defaults is 'invoice'.
          type: string
        displayName:
          description: Customize the dispay name of an estimate.
          type: string
        canceled:
          default: false
          type: boolean
        sentSnailMail:
          default: false
          type: boolean
        totalPaid:
          default: 0
          description: Total amount paid on Document.
          type: number
          format: double
        totalDue:
          default: 0
          description: Total amount still due on Document.
          type: number
          format: double
        paidInFull:
          default: false
          description: Indicates if document was paid in full.
          type: boolean
        currencyId:
          description: |-
            Defaults to Organization's currencyId if not provided.
            3 character ISO currency code.
          type: string
        _documentTaxes:
          description: Auto-populated array of unique taxes on document.
          type: array
          items:
            type: object
        _documentReverseTaxes:
          description: Auto-populated array of unique reverse taxes on document
          type: array
          items:
            type: object
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        validateEslog:
          description: >-
            Indicates if document should be validated based on eslog e-invoice
            format.
          type: boolean
        isValidEslog:
          description: >-
            Property indicating that a document is a valid by eslog e-invoice
            validation
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each individual
            document.

            Used to prevent saving same document twice in case of connection
            drop.

            If a match happens the system returns the found document instead of
            a new one.
          type: string
        customTotals:
          description: >-
            If true document tax and amount totals won't be calculated, provided
            values will be used instead. Incoming documents only.
          type: boolean
        incoming:
          default: false
          description: Indicates document is incoming ie. expense if invoice etc.
          type: boolean
        numberInternal:
          description: Internal tracking number for incoming documents.
          type: string
        equalization:
          description: Cent equalization amount.
          type: number
          format: double
        sandbox:
          type: boolean
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        shareableId:
          description: id used for sharing document using a public link
          type: string
        stripeConnectPaymentIntent:
          type: object
        chargesDisabled:
          description: Indicates if payment processing is disabled for this document
          type: boolean
        dateYear:
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        documentIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        _documentIssuer:
          $ref: '#/components/schemas/DocumentIssuer'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        _documentClient:
          $ref: '#/components/schemas/DocumentClient'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        _comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _furs:
          $ref: '#/components/schemas/Furs'
        _at:
          $ref: '#/components/schemas/At'
        _fina:
          $ref: '#/components/schemas/Fina'
        _documentConversionRate:
          $ref: '#/components/schemas/DocumentConversionRate'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        _documentUnit:
          $ref: '#/components/schemas/DocumentUnit'
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        destinationWarehouseId:
          $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
        _bPay:
          $ref: '#/components/schemas/BPay'
      additionalProperties: false
    Component:
      properties:
        id:
          type: string
        amount:
          description: How many of this component go into one parent composed item.
          type: number
          format: double
        itemId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - id
        - amount
      additionalProperties: false
    Inventory:
      properties:
        amount:
          default: 0
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        itemId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - amount
      additionalProperties: false
    Item:
      properties:
        type:
          description: Is item sold, bought or both
          type: string
        purchasePrice:
          type: number
          format: double
        purchasePriceGross:
          type: number
          format: double
        name:
          type: string
        description:
          default: ''
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        classification:
          type: string
        unit:
          type: string
        SKU:
          type: string
        EAN:
          type: string
        trackInventory:
          type: boolean
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        taxExemptionCode:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        taxExemptionReason:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        _taxExemption:
          $ref: '#/components/schemas/TaxExemption'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        taxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        purchaseTaxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      additionalProperties: false
    Tax:
      properties:
        classification:
          type: string
        country:
          description: |-
            Country the tax belongs to
            Defaults to organization country
          type: string
        countryAlpha2Code:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        _taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - recoverable
        - compound
      additionalProperties: false
    Client:
      properties:
        contact:
          type: string
        note:
          type: string
        isEndCustomer:
          default: false
          type: boolean
        type:
          description: Type of client, customer, supplier or both.
          type: string
        companyId:
          description: Reference to companies model for internal analysis.
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    Default:
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/x-any'
        description:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        l10n:
          description: Object for storing localized values of strings
          type: object
      required:
        - name
      additionalProperties: false
    Shopify:
      properties:
        shop:
          description: Unique shop URL
          type: string
        apiKey:
          type: string
        password:
          type: string
        accessToken:
          type: string
        shopSettings:
          type: object
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - shop
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Stripe:
      properties:
        name:
          description: Name of account for user's own identification
          type: string
        apiKey:
          type: string
        active:
          default: true
          type: boolean
        autoSend:
          default: true
          description: If invoice should be sent to customer automatically upon creation
          type: boolean
        lang:
          type: string
        invoiceAction:
          description: |-
            Action to listen for issuing invoices.
            Defaults to first received if not set.
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        autoTaxClassification:
          default: standard
          description: >-
            If set, will automatically classify tax for invoice items.

            Possible values: 'standard' (default), reduced', 'zero', 'none' or
            custom.
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - name
        - active
        - autoSend
      additionalProperties: false
    TicketingHub:
      properties:
        token:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      additionalProperties: false
    BusinessPremise:
      properties:
        type:
          type: string
        taxNumber:
          description: Tax number of responsible person on premise
          type: string
        businessPremiseId:
          type: string
        premiseType:
          type: string
        cadastralNumber:
          type: number
          format: double
        buildingNumber:
          type: number
          format: double
        buildingSectionNumber:
          type: number
          format: double
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAdditional:
          type: string
        community:
          type: string
        city:
          type: string
        postalCode:
          type: string
        numbers:
          type: object
        provider:
          default: furs
          description: The fiscalization provider the premise belongs to
          type: string
        environment:
          default: production
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
      required:
        - businessPremiseId
      additionalProperties: false
    ElectronicDevice:
      properties:
        electronicDeviceId:
          type: string
        numbers:
          type: object
        provider:
          default: furs
          type: string
        environment:
          default: production
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        businessPremiseId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - electronicDeviceId
      additionalProperties: false
    AccountOrganization:
      properties:
        role:
          default: admin
          type: string
        active:
          default: true
          description: Indicates if link is active, disable to temporarily deny access.
          type: boolean
        disabled:
          default: false
          description: Indicates if access was disabled by admin.
          type: boolean
        rejected:
          default: false
          description: Indicates if invitation was rejected/ignored.
          type: boolean
        invitationEmail:
          type: string
        inviterId:
          type: string
        inviterMasterId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      additionalProperties: false
    Unit:
      properties:
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    Category:
      properties:
        name:
          type: string
        alias:
          type: string
        description:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - name
        - alias
      additionalProperties: false
    PriceList:
      properties:
        name:
          type: string
        active:
          default: true
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        type:
          default: sale
          description: Is price list for sale or purchase items
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - name
      additionalProperties: false
    Warehouse:
      properties:
        name:
          type: string
        default:
          default: false
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - name
      additionalProperties: false
    Webhook:
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        url:
          type: string
        enabled:
          default: true
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - url
      additionalProperties: false
    Order:
      properties:
        status:
          type: string
        date:
          type: string
          format: date-time
        orderId:
          description: Store order id
          type: string
        number:
          description: Store order number
          type: string
        currencyId:
          type: string
        paymentType:
          type: string
        paymentTag:
          type: string
        paid:
          default: true
          type: boolean
        paidAt:
          type: string
          format: date-time
        fulfilled:
          type: boolean
        fulfilledAt:
          type: string
          format: date-time
        cancelled:
          type: boolean
        cancelledAt:
          type: string
          format: date-time
        complete:
          type: boolean
        completedAt:
          type: string
          format: date-time
        refunded:
          type: boolean
        refundedAt:
          type: string
          format: date-time
        locale:
          description: Order specific locale
          type: string
        expectedTotalWithTax:
          type: number
          format: double
        payloads:
          description: Order original payloads
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        taxClause:
          description: Custom tax clause passed from order
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        _billingAddress:
          $ref: '#/components/schemas/DocumentClient'
        _shippingAddress:
          $ref: '#/components/schemas/DocumentClient'
        invoiceId:
          $ref: '#/components/schemas/ObjectID'
        estimateId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        shopifyId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        magento1Id:
          $ref: '#/components/schemas/ObjectID'
        woocommerceId:
          $ref: '#/components/schemas/ObjectID'
        customIntegrationId:
          $ref: '#/components/schemas/ObjectID'
        customId:
          $ref: '#/components/schemas/ObjectID'
        thrivecartId:
          $ref: '#/components/schemas/ObjectID'
        _items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        _transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransaction'
        bokunId:
          $ref: '#/components/schemas/ObjectID'
        shopamineId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - status
        - date
        - paymentType
        - paid
        - payloads
      additionalProperties: false
    Magento1:
      properties:
        host:
          description: Store host address used for API
          type: string
        apiUser:
          type: string
        apiKey:
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Woocommerce:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    CustomIntegration:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Thrivecart:
      properties:
        addTax:
          description: Should tax be added to items
          type: boolean
        addedTaxRateClassification:
          description: >-
            Classification of default tax to use for items that weren't related
            to saved items.

            Defaults to 'standard'
          type: string
        ignoreTestOrders:
          description: Ignore orders made in test mode
          type: boolean
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Bokun:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Shopamine:
      properties:
        shop:
          description: |-
            Unique shop URL/name used when querying Shopamine API
            Required only when updating inventory on shop from API
          type: string
        apiKey:
          description: Required only when updating inventory on shop from API
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    Organization:
      properties:
        locale:
          type: string
        timezone:
          type: string
        active:
          default: true
          type: boolean
        supportPin:
          type: number
          format: double
        size:
          type: string
        industry:
          type: string
        companyId:
          description: Reference to companies model for internal tracking.
          type: string
        billingEmail:
          description: Billing email used for SI customers if is billing organization
          type: string
        activatedAt:
          type: string
          format: date-time
        deactivatedAt:
          type: string
          format: date-time
        sandbox:
          type: boolean
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - active
        - name
      additionalProperties: false
    Currency:
      properties:
        isoName:
          type: string
        name:
          type: string
        namePlural:
          type: string
        symbol:
          type: string
        symbolNative:
          type: string
        decimalDigits:
          default: 2
          type: number
          format: double
        type:
          type: string
      required:
        - isoName
        - name
        - type
      additionalProperties: false
    AccessToken:
      properties:
        id:
          type: string
        ttl:
          default: 1209600
          description: time to live in seconds (2 weeks by default)
          type: number
          format: double
        scopes:
          description: Array of scopes granted to this access token.
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        userId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - id
      additionalProperties: false
    Usage:
      properties:
        month:
          type: number
          format: double
        year:
          type: number
          format: double
        documentsPerOrganization:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        documentsCount:
          description: Number of documents issued
          type: number
          format: double
        documentsTotal:
          description: Sum of issued invoices and credit notes net totals in EUR
          type: number
          format: double
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        organizationsBillableCount:
          default: 0
          type: number
          format: double
        billingCycle:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        subscriptionId:
          $ref: '#/components/schemas/ObjectID'
        invoiceId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - month
        - year
        - documentsCount
      additionalProperties: false
    Log:
      properties:
        uniqueId:
          description: Unique ID of request used for idempotency
          type: string
        host:
          type: string
        origin:
          type: string
        url:
          type: string
        ip:
          type: string
        reqBody:
          default: {}
          description: Stringified request body
          type: object
        method:
          description: Request method
          type: string
        query:
          default: {}
          type: object
        resBody:
          default: {}
          description: Stringified response body
          type: object
        status:
          description: Response status
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    Account:
      properties:
        firstname:
          type: string
        lastname:
          type: string
        taxNumber:
          description: Personal tax number, required for fiscalization.
          type: string
        role:
          description: Role in company.
          type: string
        locale:
          default: en
          type: string
        label:
          description: Label of person issuing invoices. Required for fiscalization.
          type: string
        softwareSupplierTaxNumber:
          description: >-
            For tax number of clients providing fiscal verification to their end
            customers.
          type: string
        activateRedirect:
          description: Custom activation redirect URL for sub accounts of this account.
          type: string
        invitationLink:
          description: Custom link where invited user can review invitations.
          type: string
        invitationNewLink:
          description: Custom link to view invitation for non existing user.
          type: string
        documentShareableLink:
          description: Custom link for shareable document view.
          type: string
        disableCreatingChildOrganizations:
          description: Disable child accounts creating organizations
          type: boolean
        resetRedirect:
          description: Custom password reset redirect URL for sub accounts of this account.
          type: string
        newsletter:
          description: Consent to newsletter on signup
          type: boolean
        productUpdates:
          description: Consent to product updates on signup
          type: boolean
        skipChildAccountVerification:
          type: boolean
        realm:
          type: string
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        masterId:
          $ref: '#/components/schemas/ObjectID'
        parentId:
          $ref: '#/components/schemas/ObjectID'
        billingOrganizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - email
      additionalProperties: false
    Company:
      properties:
        dateFounded:
          type: string
          format: date-time
        serviceClassification:
          description: |-
            Country specific classification of the main service / activity the
            business performs.
          type: string
        source:
          description: |-
            Identification of source of data ie. 'FURS'.
            IMPORTANT: Field is used by populating scripts to clear old data.
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    WhiteLabel:
      properties:
        active:
          default: false
          type: boolean
        name:
          description: Name of your White Label instance.
          type: string
        domain:
          description: Your domain for Apollo white label implementation.
          type: string
        subdomain:
          description: Apollo subdomain for testing white label implemention.
          type: string
        baseColor:
          type: string
        logo:
          type: string
        separateDashboardIcon:
          default: false
          description: >-
            Should a separate icon for dashboard be used in the sidebar instead
            of the logo serving as the button.
          type: boolean
        googleAnalyticsId:
          description: Google analytics tracking code.
          type: string
        chatAppType:
          default: Intercom
          description: |-
            Type of chat app to display.
            Currently Intercom and Tidio are supported out of the box.
          type: string
        chatAppId:
          description: Intercom or other chat app ID
          type: string
        privacyPolicyLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        termsOfServiceLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        websiteURL:
          description: |-
            URL to redirect user to if clicks on Website link in sidebar.
            Hidden if not provided.
          type: string
        supportEmail:
          description: |-
            Support email to display to user if clicks on Email link in sidebar.
            Hidden if not provided.
          type: string
        supportPhone:
          description: >-
            Support phone number to display to user if clicks on Call us link in
            sidebar.

            Hidden if not provided.
          type: string
        blogURL:
          description: |-
            URL to redirect user to if clicks on Blog link in sidebar.
            Hidden if not provided.
          type: string
        hideLoginPage:
          default: true
          description: |-
            Should the Login page be hidden to users.
            If disabled the Uanuthorized redirect URL has to be provided.
          type: boolean
        showSignup:
          default: false
          description: Should the Signup button be shown on the login page.
          type: boolean
        unauthorizedRedirectURL:
          description: |-
            URL to redirect user to in case of unauthorized in app.
            Used only if Login page is not displayed.
          type: string
        passwordResetURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        signupURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        allowInPromo:
          default: true
          description: |-
            Allow Space Invoices to showcase your brand in our promo materials.
            ie. website, blog, newsletter etc.
          type: boolean
        interface:
          description: Allows hiding specific interface elements like menus and menu items.
          type: object
        id:
          $ref: '#/components/schemas/ObjectID'
        subscriptionId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    Subscription:
      properties:
        dateStart:
          type: string
          format: date-time
        active:
          default: true
          type: boolean
        billingCycle:
          default: month
          type: string
        billingLocation:
          description: Should subscription be charged from EU or US entity
          type: string
        currencyId:
          type: string
        canceledAt:
          type: string
          format: date-time
        churnedAt:
          type: string
          format: date-time
        comment:
          type: string
        gateway:
          type: string
        gatewayChargeRetries:
          default: 0
          type: number
          format: double
        gatewayPaymentMethodId:
          type: string
        recurrenceCount:
          type: number
          format: double
        cronLogs:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        id:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        planId:
          $ref: '#/components/schemas/ObjectID'
        _subscriptionPlan:
          $ref: '#/components/schemas/SubscriptionPlan'
      required:
        - dateStart
        - active
        - gatewayChargeRetries
      additionalProperties: false
    Plan:
      properties:
        active:
          default: true
          type: boolean
        default:
          default: false
          type: boolean
        name:
          type: string
        description:
          type: string
        identifier:
          type: string
        tier:
          type: number
          format: double
        documentLimit:
          default: 10
          type: number
          format: double
        priceDocuments:
          type: array
          items: {}
        organizationLimit:
          default: 1
          type: number
          format: double
        priceOrganization:
          type: number
          format: double
        priceFullUI:
          type: number
          format: double
        priceWhiteLabelUI:
          type: number
          format: double
        fee:
          description: |-
            Fee percent to charge based on issued documents
            if percent deal
          type: number
          format: double
        licenseFee:
          description: Fixed monthly license fee
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - active
        - default
        - name
        - identifier
        - tier
        - documentLimit
        - organizationLimit
      additionalProperties: false
    Country:
      properties:
        name:
          type: string
        alpha2Code:
          type: string
        alpha3Code:
          type: string
        nativeName:
          type: string
        numericCode:
          type: string
        taxes:
          type: array
          items:
            type: object
        states:
          type: array
          items:
            type: object
        currency:
          type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        union:
          type: string
        defaults:
          description: Country specific default overrides
          type: array
          items:
            type: object
      required:
        - name
        - alpha2Code
        - alpha3Code
        - nativeName
      additionalProperties: false
    Price:
      properties:
        amount:
          type: number
          format: double
        id:
          $ref: '#/components/schemas/ObjectID'
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        itemId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - amount
      additionalProperties: false
    ObjectID:
      type: string
      pattern: ^[a-fA-F\d]{24}$
    RecurrenceDate:
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        iteration:
          type: number
          format: double
        documentId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - date
        - iteration
      additionalProperties: false
    DocumentIssuer:
      properties:
        id:
          type: string
        throwEslogErrors:
          type: boolean
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
        - name
      additionalProperties: false
    DocumentClient:
      properties:
        id:
          type: string
        isEndCustomer:
          default: false
          type: boolean
        throwEslogErrors:
          type: boolean
        ipAddress:
          type: string
        fatturaPaChannelId:
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
        - name
      additionalProperties: false
    Furs:
      properties:
        eor:
          type: string
        zoi:
          type: string
        qr:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        invoiceNumber:
          type: number
          format: double
        strategy:
          description: Fiscalization strategy used, C or B
          type: string
        operatorTaxNumber:
          description: |-
            Mandatory, can be omitted if person doesn't have a Slo tax number
            using omitOperatorTaxNumber
          type: string
        omitOperatorTaxNumber:
          default: false
          description: |-
            Specify if operatorTaxNumber should be omitted in case operator
            doesn't have Slo tax number.
          type: boolean
        operatorLabel:
          description: |-
            Label of operator ie. issuer of document.
            Copied from account creator.
          type: string
        foreignOperator:
          default: false
          type: boolean
        iteration:
          default: 0
          description: Iteration of document editing.
          type: number
          format: double
        printCount:
          default: 0
          description: Number of prints of document. If > 1 should print 'copy n' on it.
          type: number
          format: double
        environment:
          default: production
          type: string
        payload:
          type: object
        id:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - businessPremiseId
        - electronicDeviceId
        - invoiceNumber
        - strategy
        - omitOperatorTaxNumber
        - operatorLabel
        - foreignOperator
        - iteration
        - printCount
        - environment
      additionalProperties: false
    At:
      properties:
        hash:
          type: string
        qrString:
          type: string
        certificateVersion:
          type: string
        hashExtract:
          type: string
        id:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
        previousDocumentId:
          $ref: '#/components/schemas/ObjectID'
        atcudSeriesId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - hash
        - qrString
        - certificateVersion
        - hashExtract
      additionalProperties: false
    Fina:
      properties:
        JIR:
          type: string
        ZKI:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        invoiceNumber:
          type: number
          format: double
        strategy:
          description: Fiscalization strategy used, C or B
          type: string
        operatorTaxNumber:
          type: string
        operatorLabel:
          description: |-
            Label of operator ie. issuer of document.
            Copied from account creator.
          type: string
        paymentType:
          type: string
        environment:
          default: production
          type: string
        payload:
          type: object
        id:
          type: string
        accountId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - businessPremiseId
        - electronicDeviceId
        - invoiceNumber
        - strategy
        - operatorLabel
        - environment
      additionalProperties: false
    DocumentConversionRate:
      properties:
        id:
          type: string
        dualCurrency:
          description: |-
            Is conversion meant for dual currency display.
            i.e. for Croatian organizations from 5.9.2022 to 1.1.2023
            Shows conversion only for total and not taxes
          type: boolean
        from:
          type: string
        to:
          type: string
        rate:
          type: number
          format: double
        date:
          type: string
          format: date-time
        source:
          type: string
      required:
        - id
        - from
        - to
        - rate
        - date
        - source
      additionalProperties: false
    DocumentUnit:
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - id
        - name
      additionalProperties: false
    Data:
      properties:
        id:
          type: string
        name:
          description: Name identifier of data
          type: string
        value:
          $ref: '#/components/schemas/x-any'
        options:
          description: |-
            Different data options.
            Ie. should the value be persistem to the document `onPDF: boolean`.
            This includes displaying on PDF.
            Note that only two values will be displayed per PDF on Client.
            Add Document data to export using `export: boolean`
          type: object
      required:
        - id
        - name
      additionalProperties: false
    BPay:
      properties:
        billerCode:
          type: string
        reference:
          type: string
        hidden:
          type: boolean
        id:
          type: string
      additionalProperties: false
    OrderItem:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          default: ''
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        unit:
          type: string
        SKU:
          type: string
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _taxes:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemTax'
      required:
        - id
        - name
      additionalProperties: false
    OrderTransaction:
      properties:
        id:
          type: string
        amount:
          type: number
          format: double
        gateway:
          type: string
        type:
          type: string
        status:
          type: string
        tag:
          description: Payment tag for sub categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - id
        - amount
        - gateway
        - type
        - status
        - date
      additionalProperties: false
    SubscriptionPlan:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        identifier:
          type: string
        tier:
          type: number
          format: double
        documentLimit:
          default: 10
          type: number
          format: double
        priceDocuments:
          type: array
          items: {}
        organizationLimit:
          default: 1
          type: number
          format: double
        priceOrganization:
          type: number
          format: double
        priceFullUI:
          type: number
          format: double
        priceWhiteLabelUI:
          type: number
          format: double
        fee:
          description: |-
            Fee percent to charge based on issued documents
            if percent deal
          type: number
          format: double
        licenseFee:
          description: Fixed monthly license fee
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - identifier
        - tier
        - documentLimit
        - organizationLimit
      additionalProperties: false
    OrderItemTax:
      properties:
        id:
          type: string
        rate:
          type: number
          format: double
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
      required:
        - id
        - rate
        - recoverable
        - compound
      additionalProperties: false
    _new_Payment:
      properties:
        amount:
          type: number
          format: double
        type:
          type: string
        tag:
          description: Payment tag for sub categorization
          type: string
        date:
          type: string
          format: date-time
        note:
          type: string
        transactionId:
          description: Transaction id from payment gateway
          type: string
        documentId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - amount
        - type
        - date
      additionalProperties: false
    _new_DocumentCategory:
      properties:
        amount:
          type: number
          format: double
        amountConverted:
          type: number
          format: double
        date:
          type: string
          format: date-time
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        documentId:
          $ref: '#/components/schemas/ObjectID'
        categoryId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - amount
      additionalProperties: false
    _new_Document:
      properties:
        _fatturaPa:
          type: object
        number:
          description: Auto-incremented on Document create if not provided.
          type: string
        previousDocumentId:
          type: string
        draft:
          default: false
          type: boolean
        date:
          description: Default is today.
          type: string
          format: date-time
        dateService:
          type: string
          format: date-time
        dateServiceTo:
          description: In case service for period, this is the end date of the period.
          type: string
          format: date-time
        dateDue:
          description: Date invoice is due.
          type: string
          format: date-time
        dateValidTill:
          description: Date estimate is valid till.
          type: string
          format: date-time
        datePaid:
          description: Date advance invoice was paid.
          type: string
          format: date-time
        dateReceived:
          description: Date document was received, used for incoming documents.
          type: string
          format: date-time
        reference:
          description: Reference for Payment or other identification
          type: string
        total:
          description: Document total without taxes.
          type: number
          format: double
        totalConverted:
          description: Document total without taxes converted to organization's currency.
          type: number
          format: double
        totalDiscount:
          description: Total discount amount.
          type: number
          format: double
        totalWithTax:
          description: Document total with taxes.
          type: number
          format: double
        totalWithTaxConverted:
          description: Document total with taxes converted to organization's currency.
          type: number
          format: double
        decimalPlaces:
          default: 4
          type: number
          format: double
        note:
          description: >-
            Document note to client. Auto-set based on Organization's Defaults
            if not provided.
          type: string
        taxClause:
          description: >-
            Document tax clause used to replace [tax clause] smart code when
            visualising document.

            Auto-set based on Organization's settings on Document create if not
            provided.
          type: string
        omitTaxes:
          description: |-
            If taxes should be omited when issuing document.
            Automatically populated on document if set using omit_tax_ default.
          type: boolean
        keepPricesAsGross:
          description: >-
            Forces not removing tax from gross price when saving document with
            omitTaxes set
          type: boolean
        ignoreOmitTaxes:
          description: Forces omit taxes setting to be ignored when saving document
          type: boolean
        footer:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        signature:
          description: Auto-set based on Organization's Defaults if not provided.
          type: string
        type:
          default: invoice
          description: Defaults is 'invoice'.
          type: string
        displayName:
          description: Customize the dispay name of an estimate.
          type: string
        canceled:
          default: false
          type: boolean
        sentSnailMail:
          default: false
          type: boolean
        totalPaid:
          default: 0
          description: Total amount paid on Document.
          type: number
          format: double
        totalDue:
          default: 0
          description: Total amount still due on Document.
          type: number
          format: double
        paidInFull:
          default: false
          description: Indicates if document was paid in full.
          type: boolean
        currencyId:
          description: |-
            Defaults to Organization's currencyId if not provided.
            3 character ISO currency code.
          type: string
        _documentTaxes:
          description: Auto-populated array of unique taxes on document.
          type: array
          items:
            type: object
        _documentReverseTaxes:
          description: Auto-populated array of unique reverse taxes on document
          type: array
          items:
            type: object
        hasUnit:
          description: >-
            Indicates if document has any items with unit specified. Used for
            display.
          type: boolean
        validateEslog:
          description: >-
            Indicates if document should be validated based on eslog e-invoice
            format.
          type: boolean
        isValidEslog:
          description: >-
            Property indicating that a document is a valid by eslog e-invoice
            validation
          type: boolean
        uniqueId:
          description: >-
            Optional user defined random unique value for each individual
            document.

            Used to prevent saving same document twice in case of connection
            drop.

            If a match happens the system returns the found document instead of
            a new one.
          type: string
        customTotals:
          description: >-
            If true document tax and amount totals won't be calculated, provided
            values will be used instead. Incoming documents only.
          type: boolean
        incoming:
          default: false
          description: Indicates document is incoming ie. expense if invoice etc.
          type: boolean
        numberInternal:
          description: Internal tracking number for incoming documents.
          type: string
        equalization:
          description: Cent equalization amount.
          type: number
          format: double
        sandbox:
          type: boolean
        issuedAt:
          description: >-
            Date document was issued, can be different than createdAt if created
            as draft
          type: string
          format: date-time
        shareableId:
          description: id used for sharing document using a public link
          type: string
        stripeConnectPaymentIntent:
          type: object
        chargesDisabled:
          description: Indicates if payment processing is disabled for this document
          type: boolean
        dateYear:
          type: number
          format: double
        documentIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _documentItems:
          type: array
          items:
            $ref: '#/components/schemas/DocumentItem'
        _documentIssuer:
          $ref: '#/components/schemas/DocumentIssuer'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        _documentClient:
          $ref: '#/components/schemas/DocumentClient'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        _comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _furs:
          $ref: '#/components/schemas/Furs'
        _at:
          $ref: '#/components/schemas/At'
        _fina:
          $ref: '#/components/schemas/Fina'
        _documentConversionRate:
          $ref: '#/components/schemas/DocumentConversionRate'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        _documentUnit:
          $ref: '#/components/schemas/DocumentUnit'
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        destinationWarehouseId:
          $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
        _bPay:
          $ref: '#/components/schemas/BPay'
      additionalProperties: false
    _new_Client:
      properties:
        contact:
          type: string
        note:
          type: string
        isEndCustomer:
          default: false
          type: boolean
        type:
          description: Type of client, customer, supplier or both.
          type: string
        companyId:
          description: Reference to companies model for internal analysis.
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    _new_Item:
      properties:
        type:
          description: Is item sold, bought or both
          type: string
        purchasePrice:
          type: number
          format: double
        purchasePriceGross:
          type: number
          format: double
        name:
          type: string
        description:
          default: ''
          type: string
        price:
          type: number
          format: double
        priceGross:
          type: number
          format: double
        classification:
          type: string
        unit:
          type: string
        SKU:
          type: string
        EAN:
          type: string
        trackInventory:
          type: boolean
        onBehalf:
          description: tax number of company selling this item/service on behalf of
          type: string
        taxExemptionCode:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        taxExemptionReason:
          description: Has to be specified in some countries if the tax is 0 or not present
          type: string
        _taxExemption:
          $ref: '#/components/schemas/TaxExemption'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        l10n:
          description: Object for storing localized values of strings
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        taxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        purchaseTaxIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        unitIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        _components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      additionalProperties: false
    _new_Tax:
      properties:
        classification:
          type: string
        country:
          description: |-
            Country the tax belongs to
            Defaults to organization country
          type: string
        countryAlpha2Code:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        recoverable:
          default: true
          type: boolean
        compound:
          default: false
          type: boolean
        taxNumber:
          description: Tax number associated with this tax.
          type: string
        _taxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - recoverable
        - compound
      additionalProperties: false
    _new_Shopify:
      properties:
        shop:
          description: Unique shop URL
          type: string
        apiKey:
          type: string
        password:
          type: string
        accessToken:
          type: string
        shopSettings:
          type: object
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - shop
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Stripe:
      properties:
        name:
          description: Name of account for user's own identification
          type: string
        apiKey:
          type: string
        active:
          default: true
          type: boolean
        autoSend:
          default: true
          description: If invoice should be sent to customer automatically upon creation
          type: boolean
        lang:
          type: string
        invoiceAction:
          description: |-
            Action to listen for issuing invoices.
            Defaults to first received if not set.
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        autoTaxClassification:
          default: standard
          description: >-
            If set, will automatically classify tax for invoice items.

            Possible values: 'standard' (default), reduced', 'zero', 'none' or
            custom.
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accountId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - name
        - active
        - autoSend
      additionalProperties: false
    _new_TicketingHub:
      properties:
        token:
          type: string
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      additionalProperties: false
    _new_Default:
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/x-any'
        description:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        l10n:
          description: Object for storing localized values of strings
          type: object
      required:
        - name
      additionalProperties: false
    _new_BusinessPremise:
      properties:
        type:
          type: string
        taxNumber:
          description: Tax number of responsible person on premise
          type: string
        businessPremiseId:
          type: string
        premiseType:
          type: string
        cadastralNumber:
          type: number
          format: double
        buildingNumber:
          type: number
          format: double
        buildingSectionNumber:
          type: number
          format: double
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAdditional:
          type: string
        community:
          type: string
        city:
          type: string
        postalCode:
          type: string
        numbers:
          type: object
        provider:
          default: furs
          description: The fiscalization provider the premise belongs to
          type: string
        environment:
          default: production
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
      required:
        - businessPremiseId
      additionalProperties: false
    _new_ElectronicDevice:
      properties:
        electronicDeviceId:
          type: string
        numbers:
          type: object
        provider:
          default: furs
          type: string
        environment:
          default: production
          type: string
        businessPremiseId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - electronicDeviceId
      additionalProperties: false
    _new_Unit:
      properties:
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - name
      additionalProperties: false
    _new_Category:
      properties:
        name:
          type: string
        alias:
          type: string
        description:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - name
        - alias
      additionalProperties: false
    _new_PriceList:
      properties:
        name:
          type: string
        active:
          default: true
          type: boolean
        activeFrom:
          type: string
          format: date-time
        activeTo:
          type: string
          format: date-time
        type:
          default: sale
          description: Is price list for sale or purchase items
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        clientId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - name
      additionalProperties: false
    _new_Warehouse:
      properties:
        name:
          type: string
        default:
          default: false
          type: boolean
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - name
      additionalProperties: false
    _new_Webhook:
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        url:
          type: string
        enabled:
          default: true
          type: boolean
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - url
      additionalProperties: false
    _new_Magento1:
      properties:
        host:
          description: Store host address used for API
          type: string
        apiUser:
          type: string
        apiKey:
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Woocommerce:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_CustomIntegration:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Thrivecart:
      properties:
        addTax:
          description: Should tax be added to items
          type: boolean
        addedTaxRateClassification:
          description: >-
            Classification of default tax to use for items that weren't related
            to saved items.

            Defaults to 'standard'
          type: string
        ignoreTestOrders:
          description: Ignore orders made in test mode
          type: boolean
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Bokun:
      properties:
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Shopamine:
      properties:
        shop:
          description: |-
            Unique shop URL/name used when querying Shopamine API
            Required only when updating inventory on shop from API
          type: string
        apiKey:
          description: Required only when updating inventory on shop from API
          type: string
        name:
          description: Name of store for user's own identification
          type: string
        active:
          default: true
          type: boolean
        locale:
          type: string
        sendInvoiceAutomatically:
          default: true
          type: boolean
        sendEstimateAutomatically:
          default: true
          type: boolean
        issueInvoiceForBankPayment:
          description: Issue invoice instead of estimate for bank payment on order received
          type: boolean
        issueInvoiceOnComplete:
          description: >-
            Issue invoice on complete status instead of immediatelly on order
            created
          type: boolean
        businessPremiseId:
          type: string
        electronicDeviceId:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        unitId:
          $ref: '#/components/schemas/ObjectID'
        warehouseId:
          $ref: '#/components/schemas/ObjectID'
        accountId:
          $ref: '#/components/schemas/ObjectID'
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        updateItemInventory:
          description: Enable updating store item inventory quantities.
          type: boolean
      required:
        - name
        - active
        - sendInvoiceAutomatically
        - sendEstimateAutomatically
      additionalProperties: false
    _new_Organization:
      properties:
        locale:
          type: string
        timezone:
          type: string
        active:
          default: true
          type: boolean
        supportPin:
          type: number
          format: double
        size:
          type: string
        industry:
          type: string
        companyId:
          description: Reference to companies model for internal tracking.
          type: string
        billingEmail:
          description: Billing email used for SI customers if is billing organization
          type: string
        activatedAt:
          type: string
          format: date-time
        deactivatedAt:
          type: string
          format: date-time
        sandbox:
          type: boolean
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        countryAlpha2Code:
          type: string
        taxNumber:
          type: string
        taxSubject:
          type: boolean
        companyNumber:
          type: string
        IBAN:
          type: string
        bank:
          type: string
        SWIFT:
          type: string
        website:
          type: string
        email:
          type: string
        phone:
          type: string
        businessType:
          type: string
        fiscalRegionCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
        _data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      required:
        - active
        - name
      additionalProperties: false
    _new_Account:
      properties:
        firstname:
          type: string
        lastname:
          type: string
        taxNumber:
          description: Personal tax number, required for fiscalization.
          type: string
        role:
          description: Role in company.
          type: string
        locale:
          default: en
          type: string
        label:
          description: Label of person issuing invoices. Required for fiscalization.
          type: string
        softwareSupplierTaxNumber:
          description: >-
            For tax number of clients providing fiscal verification to their end
            customers.
          type: string
        activateRedirect:
          description: Custom activation redirect URL for sub accounts of this account.
          type: string
        invitationLink:
          description: Custom link where invited user can review invitations.
          type: string
        invitationNewLink:
          description: Custom link to view invitation for non existing user.
          type: string
        documentShareableLink:
          description: Custom link for shareable document view.
          type: string
        disableCreatingChildOrganizations:
          description: Disable child accounts creating organizations
          type: boolean
        resetRedirect:
          description: Custom password reset redirect URL for sub accounts of this account.
          type: string
        newsletter:
          description: Consent to newsletter on signup
          type: boolean
        productUpdates:
          description: Consent to product updates on signup
          type: boolean
        skipChildAccountVerification:
          type: boolean
        realm:
          type: string
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        masterId:
          $ref: '#/components/schemas/ObjectID'
        parentId:
          $ref: '#/components/schemas/ObjectID'
        billingOrganizationId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - email
      additionalProperties: false
    _new_WhiteLabel:
      properties:
        active:
          default: false
          type: boolean
        name:
          description: Name of your White Label instance.
          type: string
        domain:
          description: Your domain for Apollo white label implementation.
          type: string
        subdomain:
          description: Apollo subdomain for testing white label implemention.
          type: string
        baseColor:
          type: string
        logo:
          type: string
        separateDashboardIcon:
          default: false
          description: >-
            Should a separate icon for dashboard be used in the sidebar instead
            of the logo serving as the button.
          type: boolean
        googleAnalyticsId:
          description: Google analytics tracking code.
          type: string
        chatAppType:
          default: Intercom
          description: |-
            Type of chat app to display.
            Currently Intercom and Tidio are supported out of the box.
          type: string
        chatAppId:
          description: Intercom or other chat app ID
          type: string
        privacyPolicyLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        termsOfServiceLink:
          description: >-
            URL to redirect user to if clicks on Terms of Service link in
            sidebar.

            Defaults to Website URL if not provided.
          type: string
        websiteURL:
          description: |-
            URL to redirect user to if clicks on Website link in sidebar.
            Hidden if not provided.
          type: string
        supportEmail:
          description: |-
            Support email to display to user if clicks on Email link in sidebar.
            Hidden if not provided.
          type: string
        supportPhone:
          description: >-
            Support phone number to display to user if clicks on Call us link in
            sidebar.

            Hidden if not provided.
          type: string
        blogURL:
          description: |-
            URL to redirect user to if clicks on Blog link in sidebar.
            Hidden if not provided.
          type: string
        hideLoginPage:
          default: true
          description: |-
            Should the Login page be hidden to users.
            If disabled the Uanuthorized redirect URL has to be provided.
          type: boolean
        showSignup:
          default: false
          description: Should the Signup button be shown on the login page.
          type: boolean
        unauthorizedRedirectURL:
          description: |-
            URL to redirect user to in case of unauthorized in app.
            Used only if Login page is not displayed.
          type: string
        passwordResetURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        signupURL:
          description: |-
            URL to redirect user to when clicking on Signup link.
            Only visible on Login page if it's displayed.
          type: string
        allowInPromo:
          default: true
          description: |-
            Allow Space Invoices to showcase your brand in our promo materials.
            ie. website, blog, newsletter etc.
          type: boolean
        interface:
          description: Allows hiding specific interface elements like menus and menu items.
          type: object
        subscriptionId:
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    _new_AtcudSeries:
      properties:
        seriesId:
          type: string
        code:
          type: string
        documentType:
          type: string
        startDate:
          type: string
          format: date-time
        firstNumber:
          type: string
        organizationId:
          $ref: '#/components/schemas/ObjectID'
      required:
        - seriesId
        - code
        - documentType
        - startDate
        - firstNumber
      additionalProperties: false
    _new_Price:
      properties:
        amount:
          type: number
          format: double
        priceListId:
          $ref: '#/components/schemas/ObjectID'
        itemId:
          $ref: '#/components/schemas/ObjectID'
        organizationId:
          $ref: '#/components/schemas/ObjectID'
        deletedAt:
          type: string
          format: date-time
        _isDeleted:
          default: false
          type: boolean
        deletedId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        custom:
          default: {}
          description: Custom field for freeform data input
          type: object
      required:
        - amount
      additionalProperties: false
    loopback.Count:
      type: object
      title: loopback.Count
      x-typescript-type: '@loopback/repository#Count'
      properties:
        count:
          type: number
    Account.ScopeFilter:
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            additionalProperties: true
      additionalProperties: false
      title: Account.ScopeFilter
    Account.IncludeFilter.Items:
      title: Account.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - accessTokens
            - organizations
            - stripeConnect
            - paymentProcessing
        scope:
          $ref: '#/components/schemas/Account.ScopeFilter'
    Account.Filter:
      type: object
      title: Account.Filter
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          title: Account.WhereFilter
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                custom:
                  type: boolean
                id:
                  type: boolean
                password:
                  type: boolean
                email:
                  type: boolean
                emailVerified:
                  type: boolean
                verificationToken:
                  type: boolean
                locale:
                  type: boolean
                firstname:
                  type: boolean
                lastname:
                  type: boolean
                taxNumber:
                  type: boolean
                label:
                  type: boolean
                parentId:
                  type: boolean
                masterId:
                  type: boolean
                billingOrganizationId:
                  type: boolean
                role:
                  type: boolean
                softwareSupplierTaxNumber:
                  type: boolean
                activateRedirect:
                  type: boolean
                invitationLink:
                  type: boolean
                invitationNewLink:
                  type: boolean
                documentShareableLink:
                  type: boolean
                disableCreatingChildOrganizations:
                  type: boolean
                resetRedirect:
                  type: boolean
                skipChildAccountVerification:
                  type: boolean
              additionalProperties: false
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - custom
                  - id
                  - password
                  - email
                  - emailVerified
                  - verificationToken
                  - locale
                  - firstname
                  - lastname
                  - taxNumber
                  - label
                  - parentId
                  - masterId
                  - billingOrganizationId
                  - role
                  - softwareSupplierTaxNumber
                  - activateRedirect
                  - invitationLink
                  - invitationNewLink
                  - documentShareableLink
                  - disableCreatingChildOrganizations
                  - resetRedirect
                  - skipChildAccountVerification
              uniqueItems: true
          title: Account.Fields
        include:
          title: Account.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Account.IncludeFilter.Items'
              - type: string
      additionalProperties: false
      x-typescript-type: '@loopback/repository#Filter<Account>'
    AtcudSeries.ScopeFilter:
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            properties: {}
            additionalProperties: true
      additionalProperties: false
      title: AtcudSeries.ScopeFilter
    AtcudSeries.IncludeFilter.Items:
      title: AtcudSeries.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - organization
        scope:
          $ref: '#/components/schemas/AtcudSeries.ScopeFilter'
    AtcudSeries.Filter:
      type: object
      title: AtcudSeries.Filter
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        fields:
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                id:
                  type: boolean
                seriesId:
                  type: boolean
                code:
                  type: boolean
                documentType:
                  type: boolean
                startDate:
                  type: boolean
                firstNumber:
                  type: boolean
                organizationId:
                  type: boolean
              additionalProperties: false
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - id
                  - seriesId
                  - code
                  - documentType
                  - startDate
                  - firstNumber
                  - organizationId
                example: createdAt
              uniqueItems: true
          title: AtcudSeries.Fields
        include:
          title: AtcudSeries.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AtcudSeries.IncludeFilter.Items'
              - type: string
      additionalProperties: false
      x-typescript-type: '@loopback/repository#Filter<AtcudSeries>'
    AtcudSeries.Filter1:
      type: object
      title: AtcudSeries.Filter
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          title: AtcudSeries.WhereFilter
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                id:
                  type: boolean
                seriesId:
                  type: boolean
                code:
                  type: boolean
                documentType:
                  type: boolean
                startDate:
                  type: boolean
                firstNumber:
                  type: boolean
                organizationId:
                  type: boolean
              additionalProperties: false
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - id
                  - seriesId
                  - code
                  - documentType
                  - startDate
                  - firstNumber
                  - organizationId
                example: createdAt
              uniqueItems: true
          title: AtcudSeries.Fields
        include:
          title: AtcudSeries.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AtcudSeries.IncludeFilter.Items'
              - type: string
      additionalProperties: false
      x-typescript-type: '@loopback/repository#Filter<AtcudSeries>'
    StripeConnect.ScopeFilter:
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            properties: {}
            additionalProperties: true
      additionalProperties: false
      title: StripeConnect.ScopeFilter
    StripeConnect.IncludeFilter.Items:
      title: StripeConnect.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - account
            - stripeConnectAccounts
        scope:
          $ref: '#/components/schemas/StripeConnect.ScopeFilter'
    StripeConnect.Filter:
      type: object
      title: StripeConnect.Filter
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          title: StripeConnect.WhereFilter
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                custom:
                  type: boolean
                id:
                  type: boolean
                privateKey:
                  type: boolean
                publicKey:
                  type: boolean
                webhookSecret:
                  type: boolean
                connectWebhookSecret:
                  type: boolean
                active:
                  type: boolean
                refreshUrl:
                  type: boolean
                returnUrl:
                  type: boolean
                applicationFee:
                  type: boolean
                spaceInvoicesFee:
                  type: boolean
                accountId:
                  type: boolean
              additionalProperties: false
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - custom
                  - id
                  - privateKey
                  - publicKey
                  - webhookSecret
                  - connectWebhookSecret
                  - active
                  - refreshUrl
                  - returnUrl
                  - applicationFee
                  - spaceInvoicesFee
                  - accountId
                example: createdAt
              uniqueItems: true
          title: StripeConnect.Fields
        include:
          title: StripeConnect.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/StripeConnect.IncludeFilter.Items'
              - type: string
      additionalProperties: false
      x-typescript-type: '@loopback/repository#Filter<StripeConnect>'
    Invoice.ScopeFilter:
      type: object
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        where:
          type: object
          additionalProperties: true
        fields:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: array
              items:
                type: string
              uniqueItems: true
        include:
          type: array
          items:
            type: object
            properties: {}
            additionalProperties: true
      additionalProperties: false
      title: Invoice.ScopeFilter
    Invoice.IncludeFilter.Items:
      title: Invoice.IncludeFilter.Items
      type: object
      properties:
        relation:
          type: string
          enum:
            - organization
            - account
            - client
        scope:
          $ref: '#/components/schemas/Invoice.ScopeFilter'
    Invoice.Filter:
      type: object
      title: Invoice.Filter
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
          example: 100
        skip:
          type: integer
          minimum: 0
        order:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        fields:
          oneOf:
            - type: object
              properties:
                createdAt:
                  type: boolean
                updatedAt:
                  type: boolean
                custom:
                  type: boolean
                l10n:
                  type: boolean
                _isDeleted:
                  type: boolean
                deletedAt:
                  type: boolean
                number:
                  type: boolean
                date:
                  type: boolean
                reference:
                  type: boolean
                total:
                  type: boolean
                totalConverted:
                  type: boolean
                totalDiscount:
                  type: boolean
                totalWithTax:
                  type: boolean
                totalWithTaxConverted:
                  type: boolean
                decimalPlaces:
                  type: boolean
                note:
                  type: boolean
                taxClause:
                  type: boolean
                omitTaxes:
                  type: boolean
                footer:
                  type: boolean
                signature:
                  type: boolean
                type:
                  type: boolean
                sentSnailMail:
                  type: boolean
                currencyId:
                  type: boolean
                _documentTaxes:
                  type: boolean
                _documentReverseTaxes:
                  type: boolean
                hasUnit:
                  type: boolean
                uniqueId:
                  type: boolean
                equalization:
                  type: boolean
                issuedAt:
                  type: boolean
                dateYear:
                  type: boolean
                shareableId:
                  type: boolean
                _documentIssuer:
                  type: boolean
                _documentClient:
                  type: boolean
                _documentItems:
                  type: boolean
                incoming:
                  type: boolean
                id:
                  type: boolean
                draft:
                  type: boolean
                dateService:
                  type: boolean
                dateServiceTo:
                  type: boolean
                dateDue:
                  type: boolean
                canceled:
                  type: boolean
                totalPaid:
                  type: boolean
                totalDue:
                  type: boolean
                paidInFull:
                  type: boolean
                chargesDisabled:
                  type: boolean
                stripeConnectPaymentIntent:
                  type: boolean
                organizationId:
                  type: boolean
                accountId:
                  type: boolean
                clientId:
                  type: boolean
                _fatturaPa:
                  type: boolean
              additionalProperties: false
            - type: array
              items:
                type: string
                enum:
                  - createdAt
                  - updatedAt
                  - custom
                  - l10n
                  - _isDeleted
                  - deletedAt
                  - number
                  - date
                  - reference
                  - total
                  - totalConverted
                  - totalDiscount
                  - totalWithTax
                  - totalWithTaxConverted
                  - decimalPlaces
                  - note
                  - taxClause
                  - omitTaxes
                  - footer
                  - signature
                  - type
                  - sentSnailMail
                  - currencyId
                  - _documentTaxes
                  - _documentReverseTaxes
                  - hasUnit
                  - uniqueId
                  - equalization
                  - issuedAt
                  - dateYear
                  - shareableId
                  - _documentIssuer
                  - _documentClient
                  - _documentItems
                  - incoming
                  - id
                  - draft
                  - dateService
                  - dateServiceTo
                  - dateDue
                  - canceled
                  - totalPaid
                  - totalDue
                  - paidInFull
                  - chargesDisabled
                  - stripeConnectPaymentIntent
                  - organizationId
                  - accountId
                  - clientId
                  - _fatturaPa
                example: createdAt
              uniqueItems: true
          title: Invoice.Fields
        include:
          title: Invoice.IncludeFilter
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Invoice.IncludeFilter.Items'
              - type: string
      additionalProperties: false
      x-typescript-type: '@loopback/repository#Filter<Invoice>'
  requestBodies:
    Webhook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Webhook'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Webhook'
        application/xml:
          schema:
            $ref: '#/components/schemas/Webhook'
        text/xml:
          schema:
            $ref: '#/components/schemas/Webhook'
      description: Model instance data
    Tax:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tax'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Tax'
        application/xml:
          schema:
            $ref: '#/components/schemas/Tax'
        text/xml:
          schema:
            $ref: '#/components/schemas/Tax'
      description: Model instance data
    _new_Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_new_Payment'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/_new_Payment'
        application/xml:
          schema:
            $ref: '#/components/schemas/_new_Payment'
        text/xml:
          schema:
            $ref: '#/components/schemas/_new_Payment'
    Warehouse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Warehouse'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Warehouse'
        application/xml:
          schema:
            $ref: '#/components/schemas/Warehouse'
        text/xml:
          schema:
            $ref: '#/components/schemas/Warehouse'
      description: Model instance data
    _new_ElectronicDevice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
        application/xml:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
        text/xml:
          schema:
            $ref: '#/components/schemas/_new_ElectronicDevice'
    DocumentCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
        application/xml:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
        text/xml:
          schema:
            $ref: '#/components/schemas/DocumentCategory'
      description: Model instance data
    Category:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Category'
        application/xml:
          schema:
            $ref: '#/components/schemas/Category'
        text/xml:
          schema:
            $ref: '#/components/schemas/Category'
      description: Model instance data
    Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Payment'
        application/xml:
          schema:
            $ref: '#/components/schemas/Payment'
        text/xml:
          schema:
            $ref: '#/components/schemas/Payment'
      description: Model instance data
    Component:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Component'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Component'
        application/xml:
          schema:
            $ref: '#/components/schemas/Component'
        text/xml:
          schema:
            $ref: '#/components/schemas/Component'
    TicketingHub:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TicketingHub'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TicketingHub'
        application/xml:
          schema:
            $ref: '#/components/schemas/TicketingHub'
        text/xml:
          schema:
            $ref: '#/components/schemas/TicketingHub'
      description: Model instance data
    Document:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Document'
        application/xml:
          schema:
            $ref: '#/components/schemas/Document'
        text/xml:
          schema:
            $ref: '#/components/schemas/Document'
      description: Model instance data
    Comment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Comment'
        application/xml:
          schema:
            $ref: '#/components/schemas/Comment'
        text/xml:
          schema:
            $ref: '#/components/schemas/Comment'
    Item:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Item'
        application/xml:
          schema:
            $ref: '#/components/schemas/Item'
        text/xml:
          schema:
            $ref: '#/components/schemas/Item'
      description: Model instance data
    Client:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Client'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Client'
        application/xml:
          schema:
            $ref: '#/components/schemas/Client'
        text/xml:
          schema:
            $ref: '#/components/schemas/Client'
      description: Model instance data
    Organization.prototype.uploadImage__post_Organizations__id__upload-image:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              type:
                type: string
            required:
              - type
      required: true
    Shopify.prototype.import:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              type:
                type: string
              importOptions:
                type: string
                format: JSON
            required:
              - type
      required: true
    Account.loginCredentials:
      content:
        application/json:
          schema:
            type: object
        application/x-www-form-urlencoded:
          schema:
            type: object
        application/xml:
          schema:
            type: object
        text/xml:
          schema:
            type: object
      required: true
    Recurrence:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recurrence'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Recurrence'
        application/xml:
          schema:
            $ref: '#/components/schemas/Recurrence'
        text/xml:
          schema:
            $ref: '#/components/schemas/Recurrence'
      description: Model instance data
    AtcudSeries:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
        application/xml:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
        text/xml:
          schema:
            $ref: '#/components/schemas/AtcudSeries'
      description: Model instance data
  securitySchemes:
    accessTokenHeader:
      type: apiKey
      in: header
      name: Authorization
    accessTokenQuery:
      type: apiKey
      in: query
      name: access_token
tags:
  - name: Document
  - name: Item
  - name: Tax
  - name: Client
  - name: Organization
  - name: Shopify
  - name: Stripe
  - name: TicketingHub
  - name: Currency
  - name: Account
  - name: Recurrence
  - name: Payment
  - name: Default
  - name: Company
  - name: Subscription
  - name: Plan
  - name: WhiteLabel
  - name: container
  - name: Message
  - name: BusinessPremise
  - name: AtcudSeries
  - name: Country
  - name: Tracking
  - name: ElectronicDevice
  - name: Certificate
  - name: GeoIP
  - name: AccountOrganization
  - name: FileMeta
  - name: Unit
  - name: Category
  - name: DocumentCategory
  - name: PriceList
  - name: Price
  - name: Warehouse
  - name: Webhook
  - name: Typless
  - name: Order
  - name: Magento1
  - name: Woocommerce
  - name: CustomIntegration
  - name: Thrivecart
  - name: Bokun
  - name: Shopamine
  - name: Sendgrid
  - name: Log
  - name: AWSSES
security:
  - accessTokenHeader: []
    accessTokenQuery: []
