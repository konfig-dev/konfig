openapi: 3.1.0
info:
  title: Timmi Timesheet API
  version: '1.0'
  description: |
    Welcome on the documentation for the Timmi Timesheet API.
  contact:
    name: Timmi
    url: https://www.lucca.fr
    email: developers@lucca.fr
servers:
  - url: https://example.ilucca.net
    description: Your production environment (France)
  - url: https://example.ilucca-test.net
    description: Your test environment (France)
tags:
  - name: TimeEntries
    description: TimeEntries are the actual working hours observed by a user.
  - name: Timesheets
    description: Collection of time-entries for a User over a week / month.
  - name: Activities
    description: Time-entries referencing axis-sections to describe what the user has done.
  - name: Attendance
    description: Time-entries indicating working hours.
  - name: Workflow
    description: All actions regarding the approval process of timesheets.
  - name: Reports
    description: Reporting features of Timmi Timesheet.
paths:
  /api/v3/timeentries:
    parameters: []
    get:
      summary: List multiple TimeEntries
      tags:
        - TimeEntries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      count:
                        type: integer
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TimeEntry'
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      operationId: get-api-v3-timeentries
      description: >-
        List all TimeEntries satisfying query filters.


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object.


        Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Retrieve-time-entries.md) on
        how to retrieve TimeEntries the right way.
      parameters:
        - $ref: '#/components/parameters/paging'
        - schema:
            type: array
          in: query
          name: ownerId
          description: Filter out TimeEntries on its ownerIds
          style: form
        - schema:
            type: string
            example: between,2021-01-01,2021-02-01
          in: query
          name: startsAt
          description: '{comparator},{date-time}. Filter out TimeEntries on its startsAt.'
        - schema:
            type: array
          in: query
          name: axisSections.id
          description: Filter on a comma-separated list of AxisSections identifiers.
          style: form
        - schema:
            type: array
          in: query
          name: axisSections.code
          description: Filter on a comma-separated list of AxisSections codes.
          style: form
        - schema:
            type: string
            example: since,2021-01-01T08:45:23Z
          in: query
          name: modifiedAt
          description: >-
            {comparator},{date-time}. Filter out TimeEntries on their
            modifiedAt.
        - schema:
            type: string
            example: since,2021-01-01T08:45:23Z
          in: query
          name: archivedAt
          description: '{comparator},{date-time}. Filter out TimeEntries on their startsAt.'
        - schema:
            type: string
          in: query
          name: orderBy
          description: '{fieldName},{direction}. Defaults to {id},{asc}'
    post:
      summary: Create new TimeEntries
      operationId: post-api-v3-timeentries
      description: >-
        Create one or multiple TimeEntries. 


        A single request can create TimeEntries for several different owners.


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object, and any validation
        error that you might encounter when using this API.


        There are different ways to update TimeEntries. Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Update-time-entries.md) on
        how to update TimeEntries the right way depending on your use case.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/TimeEntry'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/TimeEntry'
              examples:
                Example 1:
                  value:
                    data:
                      ownerId: 90
                      unit: 2
                      startsAt: '2024-04-22T09:30:00'
                      duration: '03:45:00'
                      creationSource: 2
                      axisSections:
                        - id: 41
                        - id: 127
                      comment:
                        name: This is a comment
                      timeTypeId: null
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '403':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  x-stoplight:
                    id: uq2vot9ruvfs9
                  properties:
                    ownerId:
                      type: integer
                      x-stoplight:
                        id: yls9tv5bnwro7
                      example: 1
                      description: Reference to the TimeEntry owner.
                    startsAt:
                      type: string
                      x-stoplight:
                        id: nb3ojzdk2ob5v
                      description: >-
                        The timeEntry start date and time. Please do NOT send
                        any offset/timezone information ("Z", "+01:00", etc...).
                      format: date-time
                    duration:
                      type: string
                      x-stoplight:
                        id: bl9hreztqkbv9
                      format: timespan
                      description: "Duration of the TimeEntry in the\_\"c\" format of a C# timespan In other words : d.hh:mm:ss.\nMax: \"1.00:00:00\" (ie 24 hours)."
                    unit:
                      type: integer
                      x-stoplight:
                        id: tzo8tnxex6dq5
                      description: |-
                        Unit in which the TimeEntry has been entered. 
                        - 0: Days (eg "1/2 day")
                        - 1: Hours (eg "8h15min")
                        - 2: Time (eg "23:45:00") 
                    creationSource:
                      type: integer
                      x-stoplight:
                        id: yh3j23iil5oxm
                      description: >-
                        Attribute used to identify last modification source :

                        - 0: Automatic fallback on theoretical TimeEntries from
                        workcycles.

                        - 1: Entered with Timmi Timesheet quick-fill tools.

                        - 2: Manually created or edited (default).

                        - 3: Imported from external sources. Can be read-only
                        for the user depending on Timesheet configuration.

                        - 4: Entered with Timmi Timesheet clock-in clock-out
                        tool. 
                      default: 2
                    axisSections:
                      type:
                        - array
                        - 'null'
                      x-stoplight:
                        id: sv0azc22zq5vh
                      description: >-
                        Represent the activities that TimeEntry should be
                        associated with. When not in activity mode, send an
                        empty array, or do not serialize this property.
                      items:
                        $ref: '#/components/schemas/AxisSection'
                        x-stoplight:
                          id: 0bwtusdyf5cbj
                    comment:
                      type:
                        - object
                        - 'null'
                      x-stoplight:
                        id: lpoi5zmajvf1s
                      description: >-
                        A comment to add additional information about the given
                        TimeEntry. It will be visible on Timmi Timesheet user
                        interface.
                      properties:
                        content:
                          type: string
                          x-stoplight:
                            id: x6f8qln31nzkc
                    timeTypeId:
                      type:
                        - integer
                        - 'null'
                      x-stoplight:
                        id: ruczf8vauynjb
                      example: 1
                      description: >-
                        Optional reference of a configured Time Type. To use
                        only if the timesheet is set up to use Time Types. Null
                        otherwise.
                  required:
                    - ownerId
                    - startsAt
                    - duration
                    - unit
                - type: array
                  x-stoplight:
                    id: uq2vot9ruvfs9
                  items:
                    x-stoplight:
                      id: lsdc5uqqxfm6p
                    type: object
                    properties:
                      ownerId:
                        type: integer
                        x-stoplight:
                          id: 33jzvtt76aee0
                        example: 1
                        description: Reference to the TimeEntry owner.
                      startsAt:
                        type: string
                        x-stoplight:
                          id: 831cuw8ig71qp
                        description: >-
                          The timeEntry start date and time. Please do NOT send
                          any offset/timezone information ("Z", "+01:00",
                          etc...).
                        format: date-time
                      duration:
                        type: string
                        x-stoplight:
                          id: jsimqbkpx9n8j
                        description: "Duration of the TimeEntry in the\_\"c\" format of a C# timespan In other words : d.hh:mm:ss.\nMax: \"1.00:00:00\" (ie 24 hours)."
                        format: timespan
                      unit:
                        type: integer
                        x-stoplight:
                          id: p6adi2ntes9vx
                        description: |-
                          Unit in which the TimeEntry has been entered. 
                          - 0: Days (eg "1/2 day")
                          - 1: Hours (eg "8h15min")
                          - 2: Time (eg "23:45:00") 
                      creationSource:
                        type: integer
                        x-stoplight:
                          id: ayyjxzlf9eyiu
                        description: >-
                          Attribute used to identify last modification source :

                          - 0: Automatic fallback on theoretical TimeEntries
                          from workcycles.

                          - 1: Entered with Timmi Timesheet quick-fill tools.

                          - 2: Manually created or edited (default).

                          - 3: Imported from external sources. Can be read-only
                          for the user depending on Timesheet configuration.

                          - 4: Entered with Timmi Timesheet clock-in clock-out
                          tool. 
                        default: 2
                      axisSections:
                        type:
                          - array
                          - 'null'
                        x-stoplight:
                          id: 5cgs0nrx9wf5w
                        description: >-
                          Represent the activities that TimeEntry should be
                          associated with. When not in activity mode, send an
                          empty array, or do not serialize this property.
                        items:
                          $ref: '#/components/schemas/AxisSection'
                          x-stoplight:
                            id: pq6dnakvvyoxz
                      comment:
                        type:
                          - object
                          - 'null'
                        x-stoplight:
                          id: 45rgdxqtbsuqx
                        description: >-
                          A comment to add additional information about the
                          given TimeEntry. It will be visible on Timmi Timesheet
                          user interface.
                        properties:
                          content:
                            type: string
                            x-stoplight:
                              id: tefmslvby6l2d
                      timeTypeId:
                        type:
                          - integer
                          - 'null'
                        x-stoplight:
                          id: 2jc75mf5ih92q
                        description: >-
                          Optional reference of a configured Time Type. To use
                          only if the timesheet is set up to use Time Types.
                          Null otherwise.
                        example: 1
                    required:
                      - ownerId
                      - startsAt
                      - duration
                      - unit
            examples:
              Example 1:
                value:
                  ownerId: 90
                  unit: 2
                  startsAt: '2024-04-22T09:30:00'
                  duration: '03:45:00'
                  creationSource: 2
                  axisSections:
                    - id: 41
                    - id: 127
                    - id: 346
                    - id: 347
                  comment:
                    name: This is a comment
                  timeTypeId: null
        description: Create a single of multiple TimeEntry (toggle body type).
      tags:
        - TimeEntries
    put:
      summary: Update multiple TimeEntries
      operationId: put-api-v3-timeentries
      description: >-
        Update one or several TimeEntries. 


        The "id" field must be sent and correspond to an existing TimeEntry. 


        A single request can edit TimeEntries for several different owners.


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object, and any validation
        error that you might encounter when using this API.


        There are different ways to update TimeEntries. Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Update-time-entries.md) on
        how to update TimeEntries the right way depending on your use case.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  x-stoplight:
                    id: xxo6vwhyuhmqh
                  properties:
                    id:
                      type: integer
                      x-stoplight:
                        id: lflnrlv8dkqp2
                      example: 552586
                      description: Unique identifier of the TimeEntry
                    ownerId:
                      type: integer
                      x-stoplight:
                        id: k9dc7sxu751dg
                      description: Reference to the TimeEntry owner.
                      example: 1
                    startsAt:
                      type: string
                      x-stoplight:
                        id: bnj9phq7psh8u
                      description: >-
                        The timeEntry start date and time. Please do NOT send
                        any offset/timezone information ("Z", "+01:00", etc...).
                      format: date-time
                    duration:
                      type: string
                      x-stoplight:
                        id: 0kv3fms6zdlol
                      description: "Duration of the TimeEntry in the\_\"c\" format of a C# timespan In other words : d.hh:mm:ss.\nMax: \"1.00:00:00\" (ie 24 hours)."
                      format: timespan
                    unit:
                      type: integer
                      x-stoplight:
                        id: qxu7hh21qhyg6
                      description: |-
                        Unit in which the TimeEntry has been entered. 
                        - 0: Days (eg "1/2 day")
                        - 1: Hours (eg "8h15min")
                        - 2: Time (eg "23:45:00") 
                      example: '1'
                    creationSource:
                      type: integer
                      x-stoplight:
                        id: kwouifugeymhg
                      description: >-
                        Attribute used to identify last modification source :

                        - 0: Automatic fallback on theoretical TimeEntries from
                        workcycles.

                        - 1: Entered with Timmi Timesheet quick-fill tools.

                        - 2: Manually created or edited (default).

                        - 3: Imported from external sources. Can be read-only
                        for the user depending on Timesheet configuration.

                        - 4: Entered with Timmi Timesheet clock-in clock-out
                        tool. 
                      default: 2
                    axisSections:
                      type:
                        - array
                        - 'null'
                      x-stoplight:
                        id: 7kumnahilkqfi
                      description: >-
                        Represent the activities that TimeEntry should be
                        associated with. When not in activity mode, send an
                        empty array, or do not serialize this property.
                      items:
                        $ref: '#/components/schemas/AxisSection'
                        x-stoplight:
                          id: v6cugt7jpusow
                    comment:
                      type:
                        - object
                        - 'null'
                      x-stoplight:
                        id: qrbemk50bzlkx
                      description: >-
                        A comment to add additional information about the given
                        TimeEntry. It will be visible on Timmi Timesheet user
                        interface.
                      properties:
                        content:
                          type: string
                          x-stoplight:
                            id: kceyh1pakciwy
                    timeTypeId:
                      type:
                        - integer
                        - 'null'
                      x-stoplight:
                        id: cjrxoiee4p4d0
                      description: >-
                        Optional reference of a configured Time Type. To use
                        only if the timesheet is set up to use Time Types. Null
                        otherwise.
                      example: 1
                  required:
                    - id
                    - ownerId
                    - startsAt
                    - duration
                    - unit
                - type: array
                  x-stoplight:
                    id: ltd6zmc3ya91g
                  items:
                    x-stoplight:
                      id: 2opeuqwsomvdo
                    type: object
                    properties:
                      id:
                        type: integer
                        x-stoplight:
                          id: u0agophwm4xxc
                        description: Unique identifier of the TimeEntry
                        example: 552586
                      ownerId:
                        type: integer
                        x-stoplight:
                          id: j54svficxluoz
                        description: Reference to the TimeEntry owner.
                        example: 1
                      startsAt:
                        type: string
                        x-stoplight:
                          id: lzut3haqau3z0
                        description: >-
                          The timeEntry start date and time. Please do NOT send
                          any offset/timezone information ("Z", "+01:00",
                          etc...).
                        format: date-time
                      duration:
                        type: string
                        x-stoplight:
                          id: 0o74bz2th49m2
                        description: "Duration of the TimeEntry in the\_\"c\" format of a C# timespan In other words : d.hh:mm:ss.\nMax: \"1.00:00:00\" (ie 24 hours)."
                        format: timespan
                      unit:
                        type: integer
                        x-stoplight:
                          id: hzc7mdc41scdq
                        description: |-
                          Unit in which the TimeEntry has been entered. 
                          - 0: Days (eg "1/2 day")
                          - 1: Hours (eg "8h15min")
                          - 2: Time (eg "23:45:00") 
                        example: 1
                      creationSource:
                        type: integer
                        x-stoplight:
                          id: dbpasxcfr7d9p
                        description: >-
                          Attribute used to identify last modification source :

                          - 0: Automatic fallback on theoretical TimeEntries
                          from workcycles.

                          - 1: Entered with Timmi Timesheet quick-fill tools.

                          - 2: Manually created or edited (default).

                          - 3: Imported from external sources. Can be read-only
                          for the user depending on Timesheet configuration.

                          - 4: Entered with Timmi Timesheet clock-in clock-out
                          tool. 
                        default: 2
                      axisSections:
                        type:
                          - array
                          - 'null'
                        x-stoplight:
                          id: z5yean16uohte
                        description: >-
                          Represent the activities that TimeEntry should be
                          associated with. When not in activity mode, send an
                          empty array, or do not serialize this property.
                        items:
                          $ref: '#/components/schemas/AxisSection'
                          x-stoplight:
                            id: h93xmih75uybr
                      comment:
                        type:
                          - object
                          - 'null'
                        x-stoplight:
                          id: gfvvlbr5rew5l
                        description: >-
                          A comment to add additional information about the
                          given TimeEntry. It will be visible on Timmi Timesheet
                          user interface.
                        properties:
                          content:
                            type: string
                            x-stoplight:
                              id: cilgcx8g7viq5
                      timeTypeId:
                        type:
                          - integer
                          - 'null'
                        x-stoplight:
                          id: xmb5lc1tul17q
                        description: >-
                          Optional reference of a configured Time Type. To use
                          only if the timesheet is set up to use Time Types.
                          Null otherwise.
                        example: 1
                    required:
                      - id
                      - ownerId
                      - startsAt
                      - duration
                      - unit
            examples:
              Example 1:
                value:
                  id: 552586
                  ownerId: 90
                  unit: 2
                  startsAt: '2024-04-22T08:30:00'
                  duration: '04:45:00'
                  creationSource: 2
                  axisSections:
                    - id: 42
                    - id: 127
                    - id: 346
                    - id: 347
                  comment:
                    id: 59
                    name: This is another comment
                  timeTypeId: 1
        description: >-
          You can either update a single or multiple TimeEntries. Pick the
          correct body type accordingly.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/TimeEntry'
                      - type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/components/schemas/TimeEntry'
              examples: {}
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '403':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      tags:
        - TimeEntries
    delete:
      summary: Delete multiple TimeEntries
      operationId: delete-api-v3-timeentries
      description: >-
        Delete one or several TimeEntries. Deletion is irrevocable.


        The "id" field of each TimeEntry must be sent and correspond to existing
        TimeEntries.


        A single request can delete TimeEntries for several different owners.


        It actually doest not delete entirely the object, but rather sets the
        "archivedAt" field to the current DateTime.


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object, and any validation
        error that you might encounter when using this API.


        There are different ways to update TimeEntries. Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Update-time-entries.md) on
        how to update TimeEntries the right way depending on your use case.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    minimum: 0
                    description: Unique identifiers of the TimeEntries to delete.
                required:
                  - id
            examples:
              Example 1:
                value:
                  - id: 552586
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '403':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      tags:
        - TimeEntries
  /api/v3/timeentries/{timeEntryId}:
    parameters:
      - schema:
          type: integer
        name: timeEntryId
        in: path
        required: true
        description: Identifier of the TimeEntry.
    get:
      summary: Get a TimeEntry by id
      description: >-
        Retrieve a single TimeEntry identified by its unique identifier.


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object.


        Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Retrieve-time-entries.md) on
        how to retrieve TimeEntries the right way.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TimeEntry'
              examples:
                Example 1:
                  value:
                    ownerId: 90
                    unit: 2
                    startsAt: '2024-04-22T08:30:00'
                    duration: '04:45:00'
                    creationSource: 2
                    axisSections:
                      - id: 42
                      - id: 127
                      - id: 346
                      - id: 347
                    comment:
                      id: 59
                      name: This is another comment
                    timeTypeId: 1
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      operationId: get-api-v3-timeentries-timeEntryId
      parameters: []
      tags:
        - TimeEntries
    put:
      summary: Update a TimeEntry by id
      operationId: put-api-v3-timeentries-timeEntryId
      description: >-
        Update fields of a single TimeEntry identified by its unique id.


        The "id" field must be sent and correspond to an existing TimeEntry. 


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object, and any validation
        error that you might encounter when using this API.


        There are different ways to update TimeEntries. Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Update-time-entries.md) on
        how to update TimeEntries the right way depending on your use case.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TimeEntry'
              examples:
                Example 1:
                  value:
                    id: 552586,
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '403':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntry'
            examples:
              Example 1:
                value:
                  ownerId: 90
                  unit: 2
                  startsAt: '2024-04-22T08:30:00'
                  duration: '04:45:00'
                  creationSource: 2
                  axisSections:
                    - id: 42
                    - id: 127
                    - id: 346
                    - id: 347
                  comment:
                    id: 59
                    name: This is another comment
                  timeTypeId: 1
      tags:
        - TimeEntries
    delete:
      summary: Delete a TimeEntry by id
      operationId: delete-api-v3-timeentries-timeEntryId
      description: >-
        Delete a TimeEntry. Deletion is irrevocable.


        The "id" field must be set and correspond to an existing TimeEntry.


        It actually doest not delete entirely the object, but rather sets the
        "archivedAt" field to the current DateTime.


        Please refer to the [TimeEntry API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/TimeEntry)
        for additional information on the TimeEntry object, and any validation
        error that you might encounter when using this API.


        There are different ways to update TimeEntries. Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Update-time-entries.md) on
        how to update TimeEntries the right way depending on your use case.
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '403':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      tags:
        - TimeEntries
  /api/v3/timmitimesheets:
    parameters: []
    get:
      summary: List timesheets
      description: >-
        List all timesheets satisfying query filters.


        Please refer to the [Timesheet API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/Timesheet)
        for additional information on the Timesheet resource.
      tags:
        - Timesheets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        description: The list of timesheets satisfying query filters.
                        items:
                          $ref: '#/components/schemas/Timesheet'
              examples: {}
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '404':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
      operationId: get-api-v3-timesheets
      parameters:
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/Timesheet/properties/ownerId'
          in: query
          name: ownerId
          description: User's identifier.
          style: form
        - schema:
            type: string
            example: between,2022-01-01,2022-02-01
          in: query
          name: startsOn
          description: Filter on the start date of the timesheet.
        - schema:
            type: array
            items:
              $ref: '#/components/schemas/Timesheet/properties/status'
          in: query
          name: status
          description: >-
            Filter on the timesheet workflow status. 0 for temporary, 1 for
            pending, 2 for approved, 3 for rejected.
          style: form
        - schema:
            type: string
            example: until,2022-01-01
          in: query
          name: endsOn
          description: Filter on the end date of the timesheet.
  /api/v3/timmitimesheets/remindable:
    get:
      operationId: get-api-v3-timmitimesheets-remindable
      summary: List due timesheets
      description: >-
        List timesheets that are not yet submitted (status: 0). 


        You must filter on either `ownerIds`, `managerIds` or `legalEntityIds`.

        As long as a timesheet is not submitted, its unique identifier is equal
        to zero.


        Please refer to the [Timesheet API
        reference](reference/Timmi-Timesheet-v3.yaml/components/schemas/Timesheet)
        for additional information on the Timesheet resource.
      tags:
        - Timesheets
      parameters:
        - name: ownerIds
          in: query
          schema:
            type: array
            items:
              type: integer
          description: List unique identifier of owners.
        - name: legalEntityIds
          in: query
          schema:
            type: array
            items:
              type: integer
          description: List unique identifier of owners' legal establishments.
        - name: managerIds
          in: query
          schema:
            type: array
            items:
              type: integer
          description: List unique identifier of owners' managers.
        - schema:
            type: string
            format: date
          in: query
          name: start
          description: Prevent older timesheets to be returned.
        - schema:
            type: string
            format: date
          in: query
          name: end
          description: >-
            Prevent earlier timesheets to be returned (date excluded). Defaults
            to today when not sent.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Timesheet'
        '400':
          $ref: '#/components/responses/ResponseProblem'
        '401':
          $ref: '#/components/responses/ResponseProblem'
        '500':
          $ref: '#/components/responses/ResponseProblem'
  /timmi/services/workflow/remind:
    post:
      summary: Remind Timesheets
      responses:
        '200':
          $ref: '#/components/responses/ResponseWorkflowService'
        '400':
          $ref: '#/components/responses/ResponseWorkflowService'
        '401':
          $ref: '#/components/responses/ResponseWorkflowService'
        '403':
          $ref: '#/components/responses/ResponseWorkflowService'
        '404':
          $ref: '#/components/responses/ResponseWorkflowService'
        '500':
          $ref: '#/components/responses/ResponseWorkflowService'
      operationId: post-timmi-services-workflow-remind
      description: Remind users of a due timesheet. Sends him/her an email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timesheets:
                  type: array
                  items:
                    type: object
                    properties:
                      startsAt:
                        type: string
                        x-stoplight:
                          id: i3c9jye3jzskl
                        format: date
                        example: '2024-06-01'
                      endsAt:
                        type: string
                        x-stoplight:
                          id: b86lsw6ph51wq
                        format: date
                        example: '2024-07-01'
                      ownerId:
                        type: integer
                        x-stoplight:
                          id: a5z5v8ehlbk2d
                        minimum: 1
        description: Timesheets are identified by startsAt, endsAt & ownerId.
      tags:
        - Workflow
    parameters: []
  /timmi/services/workflow/submit:
    post:
      summary: Submit Timesheets
      responses:
        '200':
          $ref: '#/components/responses/ResponseWorkflowService'
        '400':
          $ref: '#/components/responses/ResponseWorkflowService'
        '401':
          $ref: '#/components/responses/ResponseWorkflowService'
        '403':
          $ref: '#/components/responses/ResponseWorkflowService'
        '404':
          $ref: '#/components/responses/ResponseWorkflowService'
        '500':
          $ref: '#/components/responses/ResponseWorkflowService'
      operationId: post-timmi-services-workflow-submit
      description: >-
        <!-- theme: warning -->

        > #### Warning

        > This endpoint will soon be deprecated, please use [Timmi Timesheet v4
        API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1submit/post)


        Timesheet is created and its status is set to `1` (pending approval). In
        some cases, timesheet may then be automatically approved (`status: 2`),
        depending on the application settings.


        Once submitted, all comprised TimeEntries for user can no longer be
        modified. In order to be able to modify them, the timesheet must first
        be rejected through `cancel`, `deny` or `invalidate` operations (depends
        on the current timesheet status).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timesheets:
                  type: array
                  items:
                    type: object
                    properties:
                      startsAt:
                        type: string
                        format: date
                      endsAt:
                        type: string
                        format: date
                      ownerId:
                        type: integer
                        minimum: 1
                      transfers:
                        type: array
                        minItems: 0
                        items:
                          $ref: '#/components/schemas/Transfer'
                    required:
                      - startsAt
                      - endsAt
                      - ownerId
        description: Timesheets are identified by startsAt, endsAt & ownerId.
      tags:
        - Workflow
    parameters: []
  /timmi/services/workflow/cancel:
    post:
      summary: Cancel Timesheets by id
      responses:
        '200':
          $ref: '#/components/responses/ResponseWorkflowService'
        '400':
          $ref: '#/components/responses/ResponseWorkflowService'
        '401':
          $ref: '#/components/responses/ResponseWorkflowService'
        '403':
          $ref: '#/components/responses/ResponseWorkflowService'
        '404':
          $ref: '#/components/responses/ResponseWorkflowService'
        '500':
          $ref: '#/components/responses/ResponseWorkflowService'
      operationId: post-timmi-services-workflow-cancel
      description: >-
        <!-- theme: warning --> 

        >#### Warning

        > This endpoint will soon be deprecated, please use [Timmi Timesheet v4
        API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1cancel/post)


        Cancel a timesheet's submission. Can only be achieved by the original
        submitter as long as the timesheet's not approved.


        Sets the timesheet status to `3` (rejected).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timesheets:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      comment:
                        type: string
                    required:
                      - id
        description: ''
      tags:
        - Workflow
    parameters: []
  /timmi/services/workflow/approve:
    post:
      summary: Approve Timesheets by id
      responses:
        '200':
          $ref: '#/components/responses/ResponseWorkflowService'
        '400':
          $ref: '#/components/responses/ResponseWorkflowService'
        '401':
          $ref: '#/components/responses/ResponseWorkflowService'
        '403':
          $ref: '#/components/responses/ResponseWorkflowService'
        '404':
          $ref: '#/components/responses/ResponseWorkflowService'
        '500':
          $ref: '#/components/responses/ResponseWorkflowService'
      operationId: post-timmi-services-workflow-approve
      description: >-
        <!-- theme: warning --> 

        >#### Warning

        > This endpoint will soon be deprecated, please use [Timmi Timesheet v4
        API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1approve/post)


        Multiple approvals can be required, depending on the configuration.


        Once all approvals needed are satisfied, the timesheet status is set to
        `2: Approved`.


        Comprised TimeEntries can only be modified by rejecting the timesheet
        through the "invalidate" operation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timesheets:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      transfers:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transfer'
                          x-stoplight:
                            id: dma639e0a6c7j
                    required:
                      - id
        description: ''
      tags:
        - Workflow
    parameters: []
  /timmi/services/workflow/deny:
    post:
      summary: Deny Timesheets by id
      responses:
        '200':
          $ref: '#/components/responses/ResponseWorkflowService'
        '400':
          $ref: '#/components/responses/ResponseWorkflowService'
        '401':
          $ref: '#/components/responses/ResponseWorkflowService'
        '403':
          $ref: '#/components/responses/ResponseWorkflowService'
        '404':
          $ref: '#/components/responses/ResponseWorkflowService'
        '500':
          $ref: '#/components/responses/ResponseWorkflowService'
      operationId: post-timmi-services-workflow-deny
      description: >-
        <!-- theme: warning --> 

        >#### Warning

        > This endpoint will soon be deprecated, please use [Timmi Timesheet v4
        API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1deny/post)


        Denies a submitted timesheet pending approval. Sets its status to `3`
        (rejected) and a new timesheet may be submitted for this User and
        [StartsOn - EndsOn[.


        Comment is mandatory.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timesheets:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      comment:
                        type: string
                    required:
                      - id
                      - comment
      tags:
        - Workflow
    parameters: []
  /timmi/services/workflow/invalidate:
    post:
      summary: Invalidate Timesheets by id
      responses:
        '200':
          $ref: '#/components/responses/ResponseWorkflowService'
        '400':
          $ref: '#/components/responses/ResponseWorkflowService'
        '401':
          $ref: '#/components/responses/ResponseWorkflowService'
        '403':
          $ref: '#/components/responses/ResponseWorkflowService'
        '404':
          $ref: '#/components/responses/ResponseWorkflowService'
        '500':
          $ref: '#/components/responses/ResponseWorkflowService'
      operationId: post-timmi-services-workflow-invalidate
      description: >-
        <!-- theme: warning --> 

        >#### Warning

        > This endpoint will soon be deprecated, please use [Timmi Timesheet v4
        API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1invalidate/post)


        Rejects an approved timesheet. Sets its status to `3` (rejected). A new
        timesheet may then be submitted for this User and [StartsOn - EndsOn[.


        Comment is mandatory.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timesheets:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      comment:
                        type: string
                    required:
                      - id
      tags:
        - Workflow
    parameters: []
  /timmi-timesheet/api/reports:
    post:
      summary: Create a new Report
      operationId: post-timmi-timesheet-api-reports
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: >-
        <!-- theme: info -->

        > This endpoint does not adhere to the "v3 API endpoints" principles.
        The "fields" query parameter is not supported, but all fields are
        systematically returned.


        Starts the creation of a a report, based on based on an existing
        report-template. So you first need to retrieve the report-template
        unique identifier `templateId`.


        Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Downloading-a-report.md) on
        how to download reports.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      tags:
        - Reports
  /timmi-timesheet/api/reports/{reportId}/download-csv:
    parameters:
      - schema:
          type: integer
        name: reportId
        in: path
        required: true
        description: Identifier of the report.
    get:
      summary: Download Report as CSV
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-timmi-timesheet-api-reports-reportId-download-csv
      description: >-
        <!-- theme: info -->

        > This endpoint does not adhere to the "v3 API endpoints" principles.


        Download a report content as an CSV file `.csv`.


        Column delimiter and numbers formating depends on the authentified
        user's culture.
  /timmi-timesheet/api/reports/{reportId}/download-excel:
    parameters:
      - schema:
          type: integer
        name: reportId
        in: path
        required: true
        description: Identifier of the report.
    get:
      summary: Download Report as Excel
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-timmi-timesheet-api-reports-reportId-download-excel
      description: >-
        <!-- theme: info -->

        > This endpoint does not adhere to the "v3 API endpoints" principles.


        Download a report content as an Excel file `.xls`.


        Column delimiter and numbers formating depends on the authentified
        user's culture.
components:
  schemas:
    TimeEntry:
      title: The TimeEntry resource
      x-stoplight:
        id: e04f983327192
      type: object
      description: >-
        TimeEntries are the working time sequences spent by a user on any given
        day.


        TimeEntries come in different **units** and **submission modes** that
        should match the timesheet configuration of a given owner on a given
        day.


        ## About units & duration


        Timmi Timesheet supports up to 3 different units when it comes to
        entering TimeEntries. These are:

        - `0: Days` In this case, the user does not enter the exact hours he/she
        started working, but rather the total duration spent as a fraction of a
        day. For example: "John worked half a day on Monday".

        - `1: Hours` In this case, the user still does not enter the exact
        hours, but only the duration spent in hours. For example: "John worked
        7h30min yesterday".

        - `2: Time` In this unit, the user has to enter the actual time he/she
        started working, as well as the end time. For example: "John started
        working at 08:00 for 3 hours, thus ending at 11:00".


        ```csharp

        enum TimeEntryUnit:

        {
            Days = 0,
            Hours = 1,
            Time = 2
        }

        ```


        Whichever the unit, the TimeEntry is mainly determined by three
        properties:

        - `(int) ownerId`: The user it belongs to.

        - `(date-time) startsAt`: The date and time when the user started
        working. In `Days` and `Hours` units, the time part can only be
        `00:00:00` for "morning" (AM) or `12:00:00` for the "afternoon" (PM).

        - `(duration) duration`: The total time spent by the user from the time
        he/she started. In all units, this property is serialized as a string
        compliant with the Timespan formating: `d.hh:mm:ss` where `d` is the
        number of days (can be omitted if equal to zero which is in most cases),
        `hh` the number of hours, `mm` the number of minutes, and `ss` the
        number of seconds.



        Some examples :

        ```js

        // TIME UNIT

        // Case: "John (id: 416) worked between 09:45 and 12:15 on January, 1st
        2021."

        var timeEntry = {
          "ownerId": 416,
          "startsAt": "2021-01-01 09:45:00",
          "duration: "02:30:00",
          "unit": 2
        };


        // HOURS UNIT

        // Case: "John (id: 416) spent 4h45min working on January, 1st 2021 in
        the morning"

        var timeEntry = {
          "ownerId": 416,
          "startsAt": "2021-01-01 00:00:00",
          "duration: "04:45:00",
          "unit": 1
        }


        // DAYS UNIT

        // Case: "John (id: 416) worked on the afternoon of January, 1st 2021"

        var timeEntry = {
          "ownerId": 416,
          "startsAt": "2021-01-01 12:00:00",
          "duration: "12:00:00",
          "unit": 0
        }

        ```


        ## About submission modes


        There are 2 submission modes in Timmi Timesheet:

        - **Attendance**: the user is expected to enter the sequences of work
        without much detail.

        - **Activities**: the user is expected to enter the time spent on each
        task / project / whatever.


        Therefore, TimeEntries in activities mode have a supplementary property:
        the set of task / project / cost center / ... the user worked on. These
        analytical items are called AxisSections. [More info
        here](reference/Timmi-Timesheet-v3.yaml/components/schemas/AxisSection).


        The TimeEntry is NOT determined by the `axisSection[]` it is associated
        with as a user can change the `axisSection[]`.



        ```json

        {
          "ownerId": 416,
          "startsAt": "2021-01-01 00:00:00",
          "duration: "04:45:00",
          "unit": 1,
          "axisSections": [
            {
              "name": "R&D",
              "axis": {
                "name": "Cost centers"
              }
            },
            {
              "name": "My awesome project",
              "axis": {
                "name": "Projects"
              }
            },
            {
              "name": "Testing",
              "axis": {
                "name": "Tasks"
              }
            }
          ]
        }

        ```


        ## About time types

        Each time-entry can reference a time type via its `timeTypeId` property.


        Time types are a configured working time classification. It is generally
        used as a way of discriminating different types of working hours
        regarding compensation:

        - Attendance

        - Travels

        - etc...


        Time types can only be used on users that belong to a specific
        regulation (ie time and attendance policy) mode: `timeTrackingMode:
        typed`. Whenever it is not the case, the `timeTypeId` property should be
        left `null`.


        ## Validation rules


        #### Locked timeentries after timesheet submission

        A TimeEntry cannot be modified if its `startsAt` date belongs to an
        already submitted or approved timesheet.


        #### StartsAt and timezones

        The `startsAt` date-time property must be considered a
        [floating](https://www.w3.org/International/wiki/FloatingTime)
        date-time. As such, no UTC offset should be sent when creating or
        editing a TimeEntry.


        #### Max duration

        A TimeEntry cannot have a duration longer than 24h00 (ie one full day). 


        #### Cut at midnight

        A TimeEntry cannot overlap 2 different days (example `startsAt =
        18:00:00` and `duration = 10:00:00`). It should be two distinct
        TimeEntries cut at `00:00:00`.


        #### Mandatory axisSection on activity timesheets

        A TimeEntry must have axisSection if the corresponding timesheet is in
        activity mode, and vice-versa.


        #### Inactive axisSection

        A TimeEntry cannot be modified if one of its axisSection is no longer
        active (`active=false`).


        #### Incompatible axisSections

        A TimeEntry cannot have nested axisSections that does not meet a correct
        parent-child tree structure.


        ## Fields
      examples:
        - id: 552586
          ownerId: 90
          owner:
            id: 90
            name: Hélène Girard
            url: https://demotimmi7.ilucca-test.net/api/v3/timesheetusers/90
          unit: 2
          startsAt: '2024-04-22T09:30:00'
          duration: '03:45:00'
          endsAt: '2024-04-22T13:15:00'
          authorId: 90
          createdAt: '2024-07-04T11:59:51.09'
          modifierId: 90
          modifiedAt: '2024-07-04T17:00:54.4'
          archivedAt: null
          creationSource: 2
          layer: 0
          axisSections:
            - id: 41
              name: Conception
              url: https://demotimmi7.ilucca-test.net/api/v3/axissections/41
            - id: 127
              name: Animal Logic
              url: https://demotimmi7.ilucca-test.net/api/v3/axissections/127
            - id: 346
              name: 'Projet Rose  : KPI - tableau de bord'
              url: https://demotimmi7.ilucca-test.net/api/v3/axissections/346
            - id: 347
              name: Art Direction
              url: https://demotimmi7.ilucca-test.net/api/v3/axissections/347
          comment:
            id: 59
            name: This is a comment
            url: https://demotimmi7.ilucca-test.net/api/v3/timeentrycomments/59
          timeTypeId: null
          timesheetId: 10967
          timesheet:
            id: 10967
            name: 90 - avril 2024 - Submitted
            url: https://demotimmi7.ilucca-test.net/api/v3/timmitimesheets/10967
      x-tags:
        - TimeEntries
      properties:
        id:
          type: integer
          minimum: 1
          description: Unique identifier for this object.
          readOnly: true
        ownerId:
          type: integer
          minimum: 1
          description: Reference to the TimeEntry owner.
          example: 199
        owner:
          $ref: '#/components/schemas/TimesheetUser'
          x-stoplight:
            id: 6l3wqgzsn60jr
          description: The owner of this TimeEntry.
        unit:
          type: integer
          enum:
            - 0
            - 1
            - 2
          example: 2
          description: |-
            Unit in which the TimeEntry has been entered. 
            - 0: Days (eg "1/2 day")
            - 1: Hours (eg "8h15min")
            - 2: Time (eg "23:45:00") 
        startsAt:
          type: string
          format: date-time
          description: >-
            The timeEntry start date and time. Please do NOT send any
            offset/timezone information ("Z", "+01:00", etc...).
          example: '2022-01-01T08:00:00'
        duration:
          type: string
          format: timespan
          default: '00:00:00'
          example: '03:45:00'
          description: "Duration of the TimeEntry in the\_\"c\" format of a C# timespan In other words : d.hh:mm:ss.\nMax: \"1.00:00:00\" (ie 24 hours)."
        endsAt:
          type: string
          format: date-time
          description: Automatically set as startsAs + duration when editing a timeentry.
          example: '2022-01-01T11:45:00'
          readOnly: true
        authorId:
          type: integer
          description: Identifier of the user who initially created this TimeEntry.
          example: 199
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: >-
            Date and time when TimeEntry was first created. (Central European
            Time)
          example: '2022-01-01T18:35:10'
          readOnly: true
        modifierId:
          type: integer
          description: The unique identifier of the user who last updated the TimeEntry.
          readOnly: true
        modifiedAt:
          type: string
          description: >-
            Date and time when TimeEntry was last modified. (Central European
            Time). The TimeEntry is modified by any change made to the
            TimeEntry, including when corresponding timesheet is sent for
            approbation (status=1) and when the timesheet is completely approved
            (status=2).
          format: date-time
          example: '2022-01-01T18:42:14'
          readOnly: true
        archivedAt:
          type: string
          x-stoplight:
            id: cj0thwch4hyrm
          description: >-
            Date and time when TimeEntry was deleted (Central European Time).
            When null, implies that the TimeEntry still has not been deleted
            (and maybe never will).
          format: date-time
          example: '2022-01-01T18:41:12'
          readOnly: true
        creationSource:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
          description: >-
            Attribute used to identify last modification source :

            - 0: Automatic fallback on theoretical TimeEntries from workcycles.

            - 1: Entered with Timmi Timesheet quick-fill tools.

            - 2: Manually created or edited (default).

            - 3: Imported from external sources. Can be read-only for the user
            depending on Timesheet configuration.

            - 4: Entered with Timmi Timesheet clock-in clock-out tool. 
          default: 2
        layer:
          type: integer
          description: >-
            Used to store the original workcycle at the time of TimeEntry
            modification. In 99.999% of use cases, you will want the 0 : Actual
            TimeEntry.

            - 0: Actual TimeEntry.

            - 1: Theoretical workcycle.
          readOnly: true
        axisSections:
          type:
            - array
            - 'null'
          description: >-
            Represent the activities that TimeEntry should be associated with.
            When not in activity mode, send an empty array, or do not serialize
            this property.
          items:
            $ref: '#/components/schemas/AxisSection'
            x-stoplight:
              id: nltwte5hhnp7y
        comment:
          type:
            - 'null'
            - object
          description: >-
            A comment to add additional information about the given TimeEntry.
            It will be visible on Timmi Timesheet user interface.
          properties:
            content:
              type: string
              description: Comment content
            authorId:
              type: integer
              description: Identifier of the user who initially created this comment
              readOnly: true
            createdAt:
              type: string
              format: date-time
              description: >-
                Date and time when the comment was first created. (Central
                European Time)
              readOnly: true
        timeTypeId:
          type:
            - integer
            - 'null'
          description: >-
            Optional reference of a configured Time Type. To use only if the
            timesheet is set up to use Time Types. Null otherwise.
        timesheetId:
          type: integer
          x-stoplight:
            id: hqs9472rr2g5a
          description: >-
            The reference to the timeshet this timeentry is associated with when
            the timesheet is at least sent for approval. Is null if the
            timesheet is still pending submission.
          readOnly: true
      required:
        - ownerId
        - unit
        - startsAt
        - duration
    Timesheet:
      title: The Timesheet resource
      type: object
      description: >-
        ## Definitions


        Timesheets are TimeEntries containers. A timesheet belongs to a single
        user `owner` and ranges over several days `[startsOn - endsOn[` (endsOn
        excluded). Its range depends on the submission frequency set up in Timmi
        Timesheet (weekly / monthly).


        A timesheet purpose is to ease the approval workflow: rather than
        approving each TimeEntry individually, they are approved in a weekly /
        monthly batch.


        The approval workflow looks like this:


        ![Timmi Timesheet - Approval
        workflow](https://stoplight.io/api/v1/projects/cHJqOjEwNjgxNg/images/xfjxCP2RUa4)


        Thus, a timesheet:

        - is created upon submission ;

        - is "pending approval" or "submitted" (`status: 1`) as long as all
        approvers have not approved it ;

        - is "approved" (`status: 2`) once all approvers have approved it ;

        - may become "rejected" (`status: 3`) whenever:
          - the submitter cancels the submission, which is possible as long as the timesheet is not fully approved ;
          - one of the approvers denies the timesheet ;
          - an administrator invalidates the timesheet, which is only possible once the timesheet is fully approved.

        Once a timesheet is rejected, a new one has to be submitted and the
        workflow starts again.


        Timesheets are created and their status are set to `submitted`. In some
        cases, timesheets may then be automatically `approved`, depending on the
        approval workflow settings.


        Once submitted, all timeentries on the period for that user can no
        longer be modified. In order to be able to modify them, the timesheet
        must first be rejected through `cancel`, `deny` or `invalidate`
        operations (depends on the current timesheet status).


        ## Available guide


        Please see [this
        guide](../docs/Use-cases/Timmi%20Timesheet/Mass-submit-timesheets.md) on
        how to submit timesheets the right way.


        ## Fields
      x-tags:
        - Timesheets
      examples:
        - id: 10959
          name: 45 - avril 2024 - Approved
          ownerId: 45
          owner:
            id: 45
            name: Noël Flantier
            url: https://demotimmi7.ilucca-test.net/api/v3/timesheetusers/45
          startsOn: '2024-04-29T00:00:00'
          endsOn: '2024-05-06T00:00:00'
          statuteId: 4
          expectedNextActorId: null
          expectedNextActor: null
          status: 2
          timeEntries:
            - id: 551915
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551915
            - id: 551916
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551916
            - id: 551917
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551917
            - id: 551918
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551918
            - id: 551919
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551919
            - id: 551920
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551920
            - id: 551921
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551921
            - id: 551922
              name: ''
              url: https://demotimmi7.ilucca-test.net/api/v3/timeentries/551922
      properties:
        id:
          type: integer
          description: Uniquer identifier of the timesheet.
          readOnly: true
        name:
          type: string
          x-stoplight:
            id: bh0o8b9c7gcab
          description: Human-readable description of the Timesheet
          example: 45 - January 2016 - Approved
          readOnly: true
        ownerId:
          type: integer
          minimum: 1
          description: Reference to the Timesheet owner.
          readOnly: true
        owner:
          allOf:
            - $ref: '#/components/schemas/TimesheetUser'
            - type: object
              properties:
                manager:
                  $ref: '#/components/schemas/TimesheetUser'
        startsOn:
          type: string
          format: date
          description: The Timesheet starting date (included).
          readOnly: true
        endsOn:
          type: string
          description: The Timesheet ending date (excluded).
          format: date
          readOnly: true
        expectedNextActorId:
          type: integer
          x-stoplight:
            id: 82bs4d7vj1hgw
          description: >-
            Reference to the TimesheetUser responsible for the next approval
            workflow step. Is null if status <> 1
          readOnly: true
        expectedNextActor:
          $ref: '#/components/schemas/TimesheetUser'
          x-stoplight:
            id: 82bs4d7vj1hgw
          description: >-
            Reference to the TimesheetUser responsible for the next approval
            workflow step. Is null if status <> 1
        status:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
          description: >
            Approval workflow status for this timesheet

            - 0: the timesheet is yet to be submitted

            - 1: the timesheet has been submitted and approval is still pending

            - 2: the timesheet has been submitted and approved.

            - 3: the timesheet has been rejected (cancelled after submission,
            denied upon approval or invalidated after having been approved)
          readOnly: true
        statuteId:
          type: integer
          description: Reference to the applicable "statute" (configuration).
          readOnly: true
    Report:
      title: The Report resource
      type: object
      description: >-
        A report is generated from an existing report-template, referenced by
        its unique identifier `templateId`.


        ## Status


        The generation of a report content is a background process. As long as
        this process is not complete, the report status stays `pending`. Once
        the report is complete, its status is set to `done`. May an error be
        encountered while generating its content, then its status is set to
        `error`.


        The report content can only be viewed and downloaded once it is `done`.


        ## Start & end dates


        Start `startsOn` and end `endsOn` dates can be left `null`. In this
        case, default dates from the report-template are applied.


        ## Filters


        Filters are usually set in the report-template. But these can be
        overriden for a given report.


        ## Fields
      x-tags:
        - Reports
      properties:
        id:
          type: integer
          description: Unique identifier of the report generated
          readOnly: true
        templateId:
          type: string
          description: Reference to a ReportTemplate to generate a report from.
        status:
          type: string
          enum:
            - pending
            - done
            - error
          description: Status of a generated report.
          readOnly: true
        name:
          type: string
          description: Name given to the generated report.
          readOnly: true
        startsOn:
          type: string
          format: date
          description: >-
            Starting date of the generated report. Default dates of the
            report-template are applied if left null.
        endsOn:
          type: string
          format: date
          description: >-
            Ending date of the generated report. Default of the report-template
            are applied if left null.
        filters:
          type:
            - array
            - 'null'
          items:
            type: object
            properties:
              kind:
                type: string
              values:
                type: array
                items:
                  type: number
        columns:
          type: array
          items:
            type: object
            properties:
              kind:
                type: string
              name:
                type: string
              category:
                type: string
              isRequired:
                type: boolean
              isDefault:
                type: boolean
              isPeriodic:
                type: boolean
                description: >-
                  Periodic columns will be duplicated as many times as there are
                  occurrences of periodicity in the report.
            readOnly: true
          readOnly: true
      required:
        - templateId
    AxisSection:
      title: The AxisSection resource
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        code:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        multilingualName:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        ownerId:
          type: integer
          minimum: 1
          readOnly: true
        startOn:
          type: string
          format: date-time
          readOnly: true
        endOn:
          type: string
          format: date-time
          readOnly: true
        active:
          type: boolean
          readOnly: true
        axisId:
          type: integer
          readOnly: true
        parentAxisSections:
          type: array
          items:
            $ref: '#/components/schemas/AxisSection'
          readOnly: true
        childrenAxisSections:
          type: array
          items:
            $ref: '#/components/schemas/AxisSection'
          readOnly: true
      x-tags:
        - TimeEntries
      description: >-
        You can [read more about this resource
        here](reference/Organization-v3.yaml/components/schemas/AxisSection).
    TimesheetUser:
      title: Timesheet User
      x-stoplight:
        id: 69qybe95taej8
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          description: Unique identifier of this User.
        firstName:
          type: string
          description: Given name.
        lastName:
          type: string
          description: Family name
        mail:
          type: string
          format: email
          description: Email address.
        legalEntityId:
          type: integer
          description: >-
            Unique identifier of the legal establishment this user currently has
            a work contract with.
      description: A Timesheet limited model of a user
    Transfer:
      title: Transfer
      x-stoplight:
        id: 2v2zjb02xdgm2
      type: object
      description: Transfer defines a change in pay's element distribution
      properties:
        transferAuthorizationId:
          type: integer
          x-stoplight:
            id: pcm10smh3hzqd
          description: Unique identifier of the associated transfer authorization.
        amount:
          type: string
          x-stoplight:
            id: tabyjeutfdh4j
          description: 'Format: d.hh:mm:ss. Max: "1.00:00:00" (ie 24 hours).'
          format: timespan
          default: '00:00:00'
          example: '03:45:00'
        comment:
          type: string
          x-stoplight:
            id: 0xvfaanqkzlyp
  responses:
    ResponseProblem:
      description: Problem
      content:
        application/json:
          schema:
            type: object
            properties:
              Status:
                type: integer
                description: HTTP status code.
                example: 401
              Message:
                type: string
                description: Human readable error message.
                example: Unauthorized
    ResponseWorkflowService:
      description: Workflow response
      content:
        application/json:
          schema:
            type: object
            properties:
              Status:
                type: integer
                description: HTTP status code.
              Message:
                type:
                  - string
                  - 'null'
                description: Human readable error message (when error).
              Items:
                type: array
                items:
                  type: object
                  properties:
                    Id:
                      type: integer
                    ExceptionMessage:
                      type: string
                    Status:
                      type: integer
                      enum:
                        - 0
                    Title:
                      type: string
                    Url:
                      type: string
                      format: uri
                      description: URL of the relevant timesheet.
  parameters:
    paging:
      name: paging
      in: query
      required: true
      schema:
        type: string
        example: 2000,500
      description: '{offset},{limit}. Defaults to 0,1000.'
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
      description: Header value must be equal to `lucca application={yourApiKey}`
security:
  - Authorization: []
