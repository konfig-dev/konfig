{
  "securitySchemes": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "You must use the specify the scheme 'Api-Key' in the Authorization header. For example, `Authorization: Api-Key <Your_Api_Key>`"
    }
  },
  "apiBaseUrl": "https://api.baseten.co",
  "apiVersion": "1.0.0",
  "apiDescription": "REST API for management of Baseten resources",
  "apiTitle": "Baseten management API",
  "endpoints": 12,
  "sdkMethods": 23,
  "schemas": 13,
  "parameters": 19,
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://api.baseten.co/v1/spec"
  },
  "customRequestSpecFilename": "baseten.co.yaml",
  "difficultyScore": 34.25,
  "difficulty": "Easy",
  "company": "Baseten",
  "sdkName": "baseten-{language}-sdk",
  "clientName": "Baseten",
  "metaDescription": "At Baseten we provide all the infrastructure you need to deploy and serve ML models performantly, scalably, and cost-efficiently.Get started in minutes, and avoid getting tangled in complex deployment processes. You can deploy best-in-class open-source models and take advantage of optimized serving for your own models.We also utilize horizontally scalable services that take you from prototype to production, with light-speed inference on infra that autoscales with your traffic.Best in class doesn't mean breaking the bank. Run your models on the best infrastructure without running up costs by taking advantage of our scaled-to-zero feature.",
  "apiStatusUrls": "inherit",
  "homepage": "baseten.co",
  "developerDocumentation": "docs.baseten.co/welcome",
  "categories": [
    "ai",
    "ml",
    "developer_tools",
    "automation",
    "collaboration",
    "media",
    "cloud",
    "open_source",
    "machine_learning",
    "deployment",
    "scalability",
    "cost_efficiency",
    "llm",
    "stable_diffusion",
    "tts",
    "text_to_audio",
    "text_to_speech",
    "text_to_image",
    "image_to_video",
    "image_classification",
    "text_embeddings",
    "audio_to_text",
    "image_to_text"
  ],
  "category": "AI Tools",
  "methods": [
    {
      "url": "/v1/secrets",
      "method": "getAllSecrets",
      "httpMethod": "get",
      "tag": "Secret",
      "typeScriptTag": "secret",
      "description": "Gets all secrets",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of Baseten secrets."
        }
      ]
    },
    {
      "url": "/v1/secrets",
      "method": "upsertNewSecret",
      "httpMethod": "post",
      "tag": "Secret",
      "typeScriptTag": "secret",
      "description": "Upserts a secret",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "VALUE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A Baseten secret. Note that we do not support retrieving secret values."
        }
      ]
    },
    {
      "url": "/v1/models",
      "method": "getAllModels",
      "httpMethod": "get",
      "tag": "Model",
      "typeScriptTag": "model",
      "description": "Gets all models",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of models."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}",
      "method": "getModelById",
      "httpMethod": "get",
      "tag": "Model",
      "typeScriptTag": "model",
      "description": "Gets a model by ID",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A model."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments",
      "method": "getAllDeployments",
      "httpMethod": "get",
      "tag": "Model",
      "typeScriptTag": "model",
      "description": "Gets all deployments of a model",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of deployments of a model."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/development",
      "method": "getDevelopmentDetails",
      "httpMethod": "get",
      "tag": "Deployment",
      "typeScriptTag": "deployment",
      "description": "Gets a model's development deployment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A deployment of a model."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/production",
      "method": "getProductionDetails",
      "httpMethod": "get",
      "tag": "Deployment",
      "typeScriptTag": "deployment",
      "description": "Gets a model's production deployment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A deployment of a model."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/{deployment_id}",
      "method": "detailsGet",
      "httpMethod": "get",
      "tag": "Deployment",
      "typeScriptTag": "deployment",
      "description": "Gets a model's deployment by id",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A deployment of a model."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/development/autoscaling_settings",
      "method": "updateDevelopmentSetting",
      "httpMethod": "patch",
      "tag": "AutoscalingSetting",
      "typeScriptTag": "autoscalingSetting",
      "description": "Updates a development deployment's autoscaling settings",
      "parameters": [
        {
          "name": "min_replica",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "max_replica",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "autoscaling_window",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "scale_down_delay",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "concurrency_target",
          "schema": "integer",
          "description": "",
          "default": null
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to update autoscaling settings."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/production/autoscaling_settings",
      "method": "updateStatus",
      "httpMethod": "patch",
      "tag": "AutoscalingSetting",
      "typeScriptTag": "autoscalingSetting",
      "description": "Updates a production deployment's autoscaling settings",
      "parameters": [
        {
          "name": "min_replica",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "max_replica",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "autoscaling_window",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "scale_down_delay",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "concurrency_target",
          "schema": "integer",
          "description": "",
          "default": null
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to update autoscaling settings."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/{deployment_id}/autoscaling_settings",
      "method": "updateDeploymentSettings",
      "httpMethod": "patch",
      "tag": "AutoscalingSetting",
      "typeScriptTag": "autoscalingSetting",
      "description": "Updates a deployment's autoscaling settings",
      "parameters": [
        {
          "name": "min_replica",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "max_replica",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "autoscaling_window",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "scale_down_delay",
          "schema": "integer",
          "description": "",
          "default": null
        },
        {
          "name": "concurrency_target",
          "schema": "integer",
          "description": "",
          "default": null
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request to update autoscaling settings."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/development/promote",
      "method": "deployPromote",
      "httpMethod": "post",
      "tag": "Model",
      "typeScriptTag": "model",
      "description": "Promotes a development deployment to production",
      "parameters": [
        {
          "name": "scale_down_previous_production",
          "schema": "boolean",
          "description": "",
          "default": true
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A deployment of a model."
        }
      ]
    },
    {
      "url": "/v1/models/{model_id}/deployments/{deployment_id}/promote",
      "method": "deploymentPromote",
      "httpMethod": "post",
      "tag": "Model",
      "typeScriptTag": "model",
      "description": "Promotes a deployment to production",
      "parameters": [
        {
          "name": "scale_down_previous_production",
          "schema": "boolean",
          "description": "",
          "default": true
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A deployment of a model."
        }
      ]
    }
  ],
  "repositoryDescription": "Baseten provides infrastructure to deploy ML models performantly, scalably, and cost-efficiently. Get started in minutes, avoid complex deployment processes, deploy open-source and custom models, and scale with affordable pricing and scaled-to-zero feature. Baseten's {language} SDK generated by Konfig (https://konfigthis.com/).",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/baseten/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/baseten/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/baseten/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/baseten/imagePreview.png",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/baseten/favicon.png",
  "clientNameCamelCase": "baseten",
  "lastUpdated": "2024-03-15T18:50:00.907Z",
  "typescriptSdkUsageCode": "import { Baseten } from 'baseten-typescript-sdk';\n\nconst baseten = new Baseten({\n    // You must use the specify the scheme 'Api-Key' in the Authorization header. For example, `Authorization: Api-Key <Your_Api_Key>`\n    apiKeyAuth: \"AUTHORIZATION\",\n})",
  "typescriptSdkFirstRequestCode": "// Gets all secrets\nconst getAllSecretsResponse = baseten.secret.getAllSecrets()",
  "fixedSpecFileName": "baseten-fixed-spec.yaml"
}
