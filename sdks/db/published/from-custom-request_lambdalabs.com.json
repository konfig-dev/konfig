{
  "securitySchemes": {
    "basicAuth": {
      "description": "Basic HTTP authentication. Allowed headers-- `Authorization: Basic <base64 encoding of api_key>:` | `Authorization: Basic <api_key>`",
      "scheme": "basic",
      "type": "http"
    },
    "bearerAuth": {
      "bearerFormat": "auth-scheme",
      "description": "Bearer HTTP authentication. Allowed headers-- `Authorization: Bearer <api_key>`",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "apiBaseUrl": "https://cloud.lambdalabs.com/api/v1/",
  "apiVersion": "1.5.3",
  "apiDescription": "API for interacting with the Lambda GPU Cloud",
  "apiTitle": "Lambda Cloud API",
  "endpoints": 9,
  "sdkMethods": 10,
  "schemas": 33,
  "parameters": 12,
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://cloud.lambdalabs.com/static/api/v1/openapi.yaml"
  },
  "customRequestSpecFilename": "lambdalabs.com.yaml",
  "difficultyScore": 23,
  "difficulty": "Very Easy",
  "company": "Lambda",
  "sdkName": "lambda-{language}-sdk",
  "clientName": "Lambda",
  "metaDescription": "Lambda provides computation to accelerate human progress. We're a team of Deep Learning engineers building the world's best GPU cloud, clusters, servers, and workstations. Our products power engineers and researchers at the forefront of human knowledge. Customers include Intel, Microsoft, Google, Amazon Research, Tencent, Kaiser Permanente, MIT, Stanford, Harvard, Caltech, Los Alamos National Lab, Disney, and the Department of Defense.",
  "apiStatusUrls": "inherit",
  "homepage": "lambdalabs.com",
  "developerDocumentation": "docs.lambdalabs.com/on-demand-cloud/cloud-api",
  "categories": [
    "artificial_intelligence",
    "gpu",
    "machine_learning",
    "gpus",
    "distributed_training"
  ],
  "category": "AI Tools",
  "methods": [
    {
      "url": "/instance-types",
      "method": "getList",
      "httpMethod": "get",
      "tag": "InstanceType",
      "typeScriptTag": "instanceType",
      "description": "Retrieve list of offered instance types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/instances",
      "method": "listRunningInstances",
      "httpMethod": "get",
      "tag": "Instance",
      "typeScriptTag": "instance",
      "description": "List running instances",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/instances/{id}",
      "method": "getDetails",
      "httpMethod": "get",
      "tag": "Instance",
      "typeScriptTag": "instance",
      "description": "List details of a specific instance",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier (https://docs.lambdalabs.com/on-demand-cloud/cloud-api of the instance",
          "example": "0920582c7ff041399e34823a0be62549"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/instance-operations/launch",
      "method": "createInstances",
      "httpMethod": "post",
      "tag": "Instance",
      "typeScriptTag": "instance",
      "description": "Launch instances",
      "parameters": [
        {
          "name": "region_name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "us-tx-1"
        },
        {
          "name": "instance_type_name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "gpu_1x_a100"
        },
        {
          "name": "ssh_key_names",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "file_system_names",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": false,
          "description": "",
          "default": 1
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "",
          "example": "training-node-1"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/instance-operations/terminate",
      "method": "terminateInstance",
      "httpMethod": "post",
      "tag": "Instance",
      "typeScriptTag": "instance",
      "description": "Terminate an instance",
      "parameters": [
        {
          "name": "instance_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/instance-operations/restart",
      "method": "restartInstances",
      "httpMethod": "post",
      "tag": "Instance",
      "typeScriptTag": "instance",
      "description": "Restart instances",
      "parameters": [
        {
          "name": "instance_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/ssh-keys",
      "method": "getList",
      "httpMethod": "get",
      "tag": "Key",
      "typeScriptTag": "key",
      "description": "List SSH keys",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/ssh-keys",
      "method": "addSshKey",
      "httpMethod": "post",
      "tag": "Key",
      "typeScriptTag": "key",
      "description": "Add SSH key",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "macbook-pro"
        },
        {
          "name": "public_key",
          "schema": "string",
          "required": false,
          "description": "",
          "example": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfKpav4ILY54InZe27G user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The added or generated SSH public key. If a new key pair was generated, the response body contains a `private_key` property that *must* be saved locally. Lambda Cloud does not store private keys."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/ssh-keys/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "SSHKey",
      "typeScriptTag": "sshKey",
      "description": "Delete SSH key",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The unique identifier (https://docs.lambdalabs.com/on-demand-cloud/cloud-api of the SSH key",
          "example": "0920582c7ff041399e34823a0be62548"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Deletion successful"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/file-systems",
      "method": "getList",
      "httpMethod": "get",
      "tag": "FileSystem",
      "typeScriptTag": "fileSystem",
      "description": "List file systems",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    }
  ],
  "repositoryDescription": "Lambda accelerates human progress with cutting-edge Deep Learning solutions. Our GPU cloud, clusters, and workstations empower top engineers and researchers worldwide. Lambda's {language} SDK generated by Konfig (https://konfigthis.com/).",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lambda/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lambda/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/lambda/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lambda/imagePreview.png",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/lambda/favicon.png",
  "clientNameCamelCase": "lambda",
  "lastUpdated": "2024-04-16T19:21:46.323Z",
  "typescriptSdkUsageCode": "import { Lambda } from 'lambda-typescript-sdk';\n\nconst lambda = new Lambda({\n    // Basic HTTP authentication. Allowed headers-- `Authorization: Basic <base64 encoding of api_key>:` | `Authorization: Basic <api_key>`\n    username: \"USERNAME\",\n    password: \"PASSWORD\",\n    // Bearer HTTP authentication. Allowed headers-- `Authorization: Bearer <api_key>`\n    bearerAuth: \"BEARER_AUTH\"\n})",
  "typescriptSdkFirstRequestCode": "// Retrieve list of offered instance types\nconst getListResponse = lambda.instanceType.getList()",
  "fixedSpecFileName": "lambda-fixed-spec.yaml"
}