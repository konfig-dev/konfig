{
  "securitySchemes": {
    "BasicAuth": {
      "type": "http",
      "scheme": "basic"
    }
  },
  "apiBaseUrl": "https://cloud.langfuse.com",
  "apiVersion": "",
  "apiDescription": "## Authentication\n\nAuthenticate with the API using Basic Auth, get API keys in the project settings:\n\n- username: Langfuse Public Key\n- password: Langfuse Secret Key",
  "apiTitle": "langfuse",
  "endpoints": 18,
  "sdkMethods": 22,
  "schemas": 161,
  "parameters": 59,
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://cloud.langfuse.com/openapi-server.yml",
    "servers": [
      {
        "url": "https://cloud.langfuse.com",
        "description": "EU"
      },
      {
        "url": "https://us.cloud.langfuse.com",
        "description": "US"
      }
    ]
  },
  "customRequestSpecFilename": "langfuse.com.yaml",
  "difficultyScore": 73.75,
  "difficulty": "Easy",
  "company": "Langfuse",
  "sdkName": "langfuse-{language}-sdk",
  "clientName": "Langfuse",
  "metaDescription": "Open source LLM engineering platform. Traces, evals, prompt management and metrics to debug and improve your LLM application.",
  "apiStatusUrls": "inherit",
  "homepage": "langfuse.com",
  "developerDocumentation": "langfuse.com/docs",
  "categories": [
    "llm",
    "machine_learning",
    "llmops"
  ],
  "category": "AI Tools",
  "methods": [
    {
      "url": "/api/public/dataset-items",
      "method": "create",
      "httpMethod": "post",
      "tag": "DatasetItems",
      "typeScriptTag": "datasetItems",
      "description": "Create a dataset item",
      "parameters": [
        {
          "name": "datasetName",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "DATASETNAME"
        },
        {
          "name": "input",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "expectedOutput",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/dataset-items/{id}",
      "method": "get",
      "httpMethod": "get",
      "tag": "DatasetItems",
      "typeScriptTag": "datasetItems",
      "description": "Get a dataset item",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/dataset-run-items",
      "method": "create",
      "httpMethod": "post",
      "tag": "DatasetRunItems",
      "typeScriptTag": "datasetRunItems",
      "description": "Create a dataset run item",
      "parameters": [
        {
          "name": "runName",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "RUNNAME"
        },
        {
          "name": "runDescription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "datasetItemId",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "DATASETITEMID"
        },
        {
          "name": "observationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "traceId",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/datasets",
      "method": "list",
      "httpMethod": "get",
      "tag": "Datasets",
      "typeScriptTag": "datasets",
      "description": "Get all datasets",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/datasets",
      "method": "create",
      "httpMethod": "post",
      "tag": "Datasets",
      "typeScriptTag": "datasets",
      "description": "Create a dataset",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/datasets/{datasetName}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Datasets",
      "typeScriptTag": "datasets",
      "description": "Get a dataset and its items",
      "parameters": [
        {
          "name": "datasetName",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "DATASETNAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/datasets/{datasetName}/runs/{runName}",
      "method": "getRuns",
      "httpMethod": "get",
      "tag": "Datasets",
      "typeScriptTag": "datasets",
      "description": "Get a dataset run and its items",
      "parameters": [
        {
          "name": "datasetName",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "DATASETNAME"
        },
        {
          "name": "runName",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "RUNNAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/health",
      "method": "health",
      "httpMethod": "get",
      "tag": "Health",
      "typeScriptTag": "health",
      "description": "Check health of API and database",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/ingestion",
      "method": "batch",
      "httpMethod": "post",
      "tag": "Ingestion",
      "typeScriptTag": "ingestion",
      "description": "Batched ingestion for Langfuse Tracing",
      "parameters": [
        {
          "name": "batch",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/metrics/daily",
      "method": "daily",
      "httpMethod": "get",
      "tag": "Metrics",
      "typeScriptTag": "metrics",
      "description": "Get daily metrics of the Langfuse project",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "page number, starts at 1"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "limit of items per page"
        },
        {
          "name": "traceName",
          "schema": "string",
          "required": false,
          "description": "Optional filter by the name of the trace"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": "Optional filter by the userId associated with the trace"
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": "Optional filter for metrics where traces include all of these tags"
        },
        {
          "name": "fromTimestamp",
          "schema": "string",
          "required": false,
          "description": "Optional filter to only include traces on or after a certain timestamp"
        },
        {
          "name": "toTimestamp",
          "schema": "string",
          "required": false,
          "description": "Optional filter to only include traces before a certain timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/observations/{observationId}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Observations",
      "typeScriptTag": "observations",
      "description": "Get a observation",
      "parameters": [
        {
          "name": "observationId",
          "schema": "string",
          "required": true,
          "description": "The unique langfuse identifier of an observation, can be an event, span or generation",
          "example": "OBSERVATIONID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/observations",
      "method": "getMany",
      "httpMethod": "get",
      "tag": "Observations",
      "typeScriptTag": "observations",
      "description": "Get a list of observations",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "page number, starts at 1"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "limit of items per page"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "traceId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parentObservationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fromStartTime",
          "schema": "string",
          "required": false,
          "description": "Retrieve only observations with a start_time greater than this timestamp."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/projects",
      "method": "get",
      "httpMethod": "get",
      "tag": "Projects",
      "typeScriptTag": "projects",
      "description": "Get Project associated with API key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/prompts",
      "method": "get",
      "httpMethod": "get",
      "tag": "Prompts",
      "typeScriptTag": "prompts",
      "description": "Get a prompt",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/prompts",
      "method": "create",
      "httpMethod": "post",
      "tag": "Prompts",
      "typeScriptTag": "prompts",
      "description": "Create a prompt",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/scores",
      "method": "get",
      "httpMethod": "get",
      "tag": "Score",
      "typeScriptTag": "score",
      "description": "Get a list of scores",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "page number, starts at 1"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "limit of items per page"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fromTimestamp",
          "schema": "string",
          "required": false,
          "description": "Retrieve only scores newer than this timestamp."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/scores",
      "method": "create",
      "httpMethod": "post",
      "tag": "Score",
      "typeScriptTag": "score",
      "description": "Create a score",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "traceId",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "TRACEID"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        },
        {
          "name": "value",
          "schema": "number",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "observationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/scores/{scoreId}",
      "method": "delete",
      "httpMethod": "delete",
      "tag": "Score",
      "typeScriptTag": "score",
      "description": "Delete a score",
      "parameters": [
        {
          "name": "scoreId",
          "schema": "string",
          "required": true,
          "description": "The unique langfuse identifier of a score",
          "example": "SCOREID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/scores/{scoreId}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Score",
      "typeScriptTag": "score",
      "description": "Get a score",
      "parameters": [
        {
          "name": "scoreId",
          "schema": "string",
          "required": true,
          "description": "The unique langfuse identifier of a score",
          "example": "SCOREID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/sessions/{sessionId}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Sessions",
      "typeScriptTag": "sessions",
      "description": "Get a session",
      "parameters": [
        {
          "name": "sessionId",
          "schema": "string",
          "required": true,
          "description": "The unique id of a session",
          "example": "SESSIONID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/traces/{traceId}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Trace",
      "typeScriptTag": "trace",
      "description": "Get a specific trace",
      "parameters": [
        {
          "name": "traceId",
          "schema": "string",
          "required": true,
          "description": "The unique langfuse identifier of a trace",
          "example": "TRACEID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/public/traces",
      "method": "list",
      "httpMethod": "get",
      "tag": "Trace",
      "typeScriptTag": "trace",
      "description": "Get list of traces",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "page number, starts at 1"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "limit of items per page"
        },
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "fromTimestamp",
          "schema": "string",
          "required": false,
          "description": "Retrieve only traces newer than this timestamp."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Format of the string [field].[asc/desc]. Fields: id, timestamp, name, userId, release, version, public, bookmarked, sessionId. Example: timestamp.asc"
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": "Only traces that include all of these tags will be returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "405",
          "description": ""
        }
      ]
    }
  ],
  "repositoryDescription": "Open source LLM engineering platform. Traces, evals, prompt management and metrics to debug and improve your LLM application. Langfuse's {language} SDK generated by Konfig (https://konfigthis.com/).",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/langfuse/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/langfuse/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/langfuse/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/langfuse/imagePreview.png",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/langfuse/favicon.png",
  "clientNameCamelCase": "langfuse",
  "lastUpdated": "2024-08-20T23:26:58.174Z",
  "typescriptSdkUsageCode": "import { Langfuse } from 'langfuse-typescript-sdk';\n\nconst langfuse = new Langfuse({\n    username: \"USERNAME\",\n    password: \"PASSWORD\"\n})",
  "typescriptSdkFirstRequestCode": "// Create a dataset item\nconst createResponse = langfuse.datasetItems.create({\n    datasetName: \"DATASETNAME\"\n})",
  "fixedSpecFileName": "langfuse-fixed-spec.yaml"
}