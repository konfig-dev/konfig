{
  "securitySchemes": {
    "OAuth2": {
      "type": "oauth2",
      "description": "OAuth2 security scheme",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://accounts-api.brex.com/oauth2/default/v1/authorize",
          "tokenUrl": "https://accounts-api.brex.com/oauth2/default/v1/token",
          "scopes": {
            "openid": "openid",
            "offline_access": "offline access",
            "users.readonly": "View user data",
            "users": "View and manage user data",
            "locations.readonly": "View location data",
            "locations": "View and manage location data",
            "departments.readonly": "View department data",
            "departments": "View and manage department data",
            "titles": "View and manage title data",
            "titles.readonly": "View title data",
            "cards": "View and manage card data",
            "cards.readonly": "View card data",
            "cards.pan": "View and Send card number data"
          }
        }
      }
    }
  },
  "apiBaseUrl": "https://platform.brexapis.com",
  "apiVersion": "1.0",
  "apiDescription": "\nThe team API lets you manage users, departments, locations, and cards.\n",
  "apiTitle": "Team API",
  "endpoints": 18,
  "sdkMethods": 26,
  "schemas": 43,
  "parameters": 81,
  "contactUrl": "https://brex.com",
  "contactEmail": "developer-access@brex.com",
  "originalCustomRequest": {
    "lambda": true
  },
  "customRequestSpecFilename": "brex.com_Team.yaml",
  "difficultyScore": 67.75,
  "difficulty": "Easy",
  "company": "Brex",
  "serviceName": "Team",
  "sdkName": "brex-team-{language}-sdk",
  "clientName": "BrexTeam",
  "metaDescription": "Brex is the AI-powered spend platform. We transform finance teams from reactive no-sayers to proactive growth drivers. With Brex, companies spend with confidence by empowering employees to make smarter financial decisions from anywhere. Brex provides corporate cards, business accounts, and global payments, plus intuitive software for travel and expenses, that make it easy to plan and track all company spend in one place, in real time. Over 20,000 companies from startups to global enterprises — including DoorDash, Flexport, and Compass — use Brex to proactively control spend, reduce costs, and increase efficiency on a global scale.",
  "apiStatusUrls": "inherit",
  "homepage": "brex.com",
  "developerDocumentation": "developer.brex.com/openapi/team_api/",
  "categories": [
    "finance",
    "payments",
    "online_payments",
    "fintech",
    "automation",
    "banking"
  ],
  "methods": [
    {
      "url": "/v2/cards",
      "method": "listByUserId",
      "httpMethod": "get",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nList cards\n",
      "parameters": [
        {
          "name": "userId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/cards",
      "method": "createNewCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nCreate card\n",
      "parameters": [
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "IDEMPOTENCY-KEY"
        },
        {
          "name": "owner",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "card_name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "CARD_NAME"
        },
        {
          "name": "card_type",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "CARD_TYPE"
        },
        {
          "name": "limit_type",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "LIMIT_TYPE"
        },
        {
          "name": "spend_controls",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "mailing_address",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "card_attribute_preferences",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nOnly cards with limit_type = CARD have spend_controls\n"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nGet card\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nOnly cards with limit_type = CARD have spend_controls\n"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}",
      "method": "updateCard",
      "httpMethod": "put",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nUpdate card\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "spend_controls",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nOnly cards with limit_type = CARD have spend_controls\n"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}/lock",
      "method": "lockCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nLock card\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "REASON"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nOnly cards with limit_type = CARD have spend_controls\n"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}/pan",
      "method": "getCardDetails",
      "httpMethod": "get",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nGet card number\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nCard number, CVV, and expiration date of a card.\n"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}/secure_email",
      "method": "createSecureEmail",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nCreate secure email to send card number \n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "IDEMPOTENCY-KEY"
        },
        {
          "name": "recipient_email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sender_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expiry_days",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "emailCardNumber 200 response"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}/terminate",
      "method": "terminateExistingCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nTerminate card\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "REASON"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nOnly cards with limit_type = CARD have spend_controls\n"
        }
      ]
    },
    {
      "url": "/v2/cards/{id}/unlock",
      "method": "unlockExistingCard",
      "httpMethod": "post",
      "tag": "Cards",
      "typeScriptTag": "cards",
      "description": "\nUnlock card\n",
      "parameters": [
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "\nOnly cards with limit_type = CARD have spend_controls\n"
        }
      ]
    },
    {
      "url": "/v2/company",
      "method": "getInfo",
      "httpMethod": "get",
      "tag": "Companies",
      "typeScriptTag": "companies",
      "description": "\nGet company\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/departments",
      "method": "listAll",
      "httpMethod": "get",
      "tag": "Departments",
      "typeScriptTag": "departments",
      "description": "\nList departments\n",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/departments",
      "method": "addNewDepartment",
      "httpMethod": "post",
      "tag": "Departments",
      "typeScriptTag": "departments",
      "description": "\nCreate department\n",
      "parameters": [
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/departments/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Departments",
      "typeScriptTag": "departments",
      "description": "\nGet department\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/locations",
      "method": "getAllLocations",
      "httpMethod": "get",
      "tag": "Locations",
      "typeScriptTag": "locations",
      "description": "\nList locations\n",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/locations",
      "method": "addNewLocation",
      "httpMethod": "post",
      "tag": "Locations",
      "typeScriptTag": "locations",
      "description": "\nCreate location\n",
      "parameters": [
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/locations/{id}",
      "method": "getLocationById",
      "httpMethod": "get",
      "tag": "Locations",
      "typeScriptTag": "locations",
      "description": "\nGet location\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/titles",
      "method": "getAll",
      "httpMethod": "get",
      "tag": "Titles",
      "typeScriptTag": "titles",
      "description": "\nList titles\n",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/titles",
      "method": "createNewTitle",
      "httpMethod": "post",
      "tag": "Titles",
      "typeScriptTag": "titles",
      "description": "\nCreate title\n",
      "parameters": [
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/titles/{id}",
      "method": "getTitleById",
      "httpMethod": "get",
      "tag": "Titles",
      "typeScriptTag": "titles",
      "description": "\nGet title\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users",
      "method": "listUsers",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nList users\n",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "remoteDisplayId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expand[]",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users",
      "method": "inviteNewEmployee",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nInvite user\n",
      "parameters": [
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "FIRST_NAME"
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "LAST_NAME"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "EMAIL"
        },
        {
          "name": "manager_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "department_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users/me",
      "method": "getCurrentUser",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nGet current user\n",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users/{id}",
      "method": "getUserById",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nGet user\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users/{id}",
      "method": "updateUser",
      "httpMethod": "put",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nUpdate user\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "manager_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "department_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "location_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users/{id}/limit",
      "method": "getMonthlyLimit",
      "httpMethod": "get",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nGet limit for the user\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2/users/{id}/limit",
      "method": "setMonthlyLimit",
      "httpMethod": "post",
      "tag": "Users",
      "typeScriptTag": "users",
      "description": "\nSet limit for the user\n",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "idempotencyKey",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "monthly_limit",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "repositoryDescription": "Brex is a transformative finance platform empowering companies to spend confidently with corporate cards, business accounts, global payments, and intuitive software for real-time tracking. Over 20,000 companies worldwide, including DoorDash and Flexport, trust Brex for cost control and efficiency.",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/brex/team/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/brex/team/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/brex/team/imagePreview.jpg",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/brex/team/favicon.png",
  "clientNameCamelCase": "brexTeam",
  "lastUpdated": "2024-03-13T01:35:30.474Z",
  "typescriptSdkUsageCode": "import { BrexTeam } from 'brex-team-typescript-sdk';\n\nconst brexTeam = new BrexTeam({\n    // OAuth2 security scheme\n    clientId: \"CLIENT_ID\",\n    clientSecret: \"CLIENT_SECRET\",\n    redirectUri: \"REDIRECT_URI\",\n})",
  "typescriptSdkFirstRequestCode": "// \nList cards\n\nconst listByUserIdResponse = brexTeam.cards.listByUserId({\n    userId: undefined\n    cursor: undefined\n    limit: undefined\n})",
  "fixedSpecFileName": "brex-team-fixed-spec.yaml"
}