{
  "securitySchemes": {
    "BearerAuth": {
      "type": "http",
      "scheme": "bearer"
    }
  },
  "apiBaseUrl": "https://{subdomain}.myclickfunnels.com/api/v2",
  "apiVersion": "V2",
  "apiDescription": "# Introduction\n\nThe ClickFunnels v2 API lets you:\n\n- import data from other apps and sources into ClickFunnels and export data that you need somewhere else\n- extend the ClickFunnels platform to your own needs and embed it in your own applications\n- act on behalf of other ClickFunnels users via OAuth to offer extended services to other fellow ClickFunnels entrepreneurs\n\nWe are starting with exposing a given set of resources but the goal is to converge in terms of\nfunctionality with what the actual app is offering and also offering functionality on top.\n\nFor any feedback, please drop us a line at:\n\n- https://feedback.myclickfunnels.com/feature-requests?category=api\n\nFor issues and support you can currently go here:\n\n- https://help.clickfunnels.com/hc/en-us\n\n# Authentication\n\nMaking your first request is easiest with a Bearer token:\n\n```shell\n$ curl 'https://myteam.myclickfunnels.com/api/v2/teams' \\\n--header 'Authorization: Bearer AVJrj0ZMJ-xoraUk1xxVM6UuL9KXmsWmnJvvSosUO6X'\n[{\"id\":3,\"name\":\"My Team\", # ... more output...}]\n```\n\nHow to get your API key step by step:\n\nhttps://developers.myclickfunnels.com/docs/getting-started\n\n# Rate limiting\n\nThe rate limit is currently set per IP address.\n\nThe actual rate limit and the approach on how this is handled is subject to change in future\nreleases. Please let us know if you have special request limit needs.\n\n# Pagination and Ordering\n\nIn order to paginate through a large list response, you can use our cursor-based pagination using\nthe `id` field of a given object in the list.\n\nThere is a limit of 20 objects per list response ordered ascending by ID. So, you can get to items\nafter the last one in the list, by taking the last item's ID and submitting it in a list request\nas the value of an `after` URL parameter. For example:\n\n```shell\n# The first 20 contacts are returned without any pagination nor ordering params:\n$ curl 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts' --header 'Authorization: Bearer ...'\n[{\"id\": 1, \"email_address\": \"first@contact.com\" ...}, {\"id\": 4, ...} ... {\"id\": 55, \"email_address\": \"last@contact.com\", ...}]\n\n$ curl 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts?after=55' --header 'Authorization: Bearer ...'\n[{\"id\": 56, ...}] # There is one more record after ID 55.\n```\n\nThe `after` param always acts as if you are \"turning the next page\". So if you order in a descending\norder, you will also use `after` to get to the next records:\n\n```shell\n$ curl 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts?sort_order=desc' --header 'Authorization: Bearer ...'\n[{\"id\": 56, ...},  {\"id\": 55, ...}, {\"id\": 4, ...}] # All contacts in descending order.\n\n$ curl 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts?sort_order=desc&after=4' --header 'Authorization: Bearer ...'\n[{\"id\": 1, ...}] # There is one more contact on the next page after ID 55.\n```\n\nYou can also use the `Pagination-Next` header to get the last ID value directly:\n\n```http request\n# Example header.\nPagination-Next: 55\n```\n\nAnd you can use the `Link` header to get the next page directly without needing to calculate it\nyourself:\n\n```http request\n# Example header.\nLink: <https://localteam.myclickfunnels.com/api/v2/workspaces/3/contacts?after=55>; rel=\"next\"\n```\n\n# Filtering\n\n**Current filters**\n\nIf filtering is available for a specific endpoint, 'filter' will be listed as one of the options in the query parameters section of the Request area. Attributes by which you can filter will be listed as well.\n\n**How it works**\n\nThere is a filter mechanism that adheres to some simple conventions. The filters provided on\nlist endpoints, like `filter[email_address]` and `filter[id]` on the `Contacts` list endpoint, need\nto be \"simple\" and \"fast\". These filters are supposed to be easy to use and allow you to filter by\none or more concrete values.\n\nHere's an example of how you could use the filter to find a contact with a certain email address:\n\n```shell\n$ curl -g 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts?filter[email_address]=you@cf.com' --header 'Authorization: Bearer ...'\n[{\"email_address\": \"you@cf.com\",...}]\n```\n\nYou can also filter by multiple values:\n\n```shell\n$ curl -g 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts?filter[email_address]=you@cf.com,u2@cf.com' --header 'Authorization: Bearer ...'\n[{\"email_address\": \"you@cf.com\",...}, {\"email_address\": \"u2@cf.com\",...}]\n```\n\nYou can also filter by multiple attributes. Similar to filters that you might be familiar with when\nusing GitHub (e.g.: filtering PRs by closed and assignee), those filters are `AND` filters, which\ngive you the intersection of multiple records:\n\n```shell\n# If you@cf.com comes with an ID of 1, you will only see this record for this API call:\n$ curl -g 'https://myteam.myclickfunnels.com/api/v2/workspaces/3/contacts?filter[email_address]=you@cf.com,u2@cf.com&filter[id]=1' --header 'Authorization: Bearer ...'\n[{\"email_address\": \"you@cf.com\",...}] \n# u2@cf.com is not included because it has a different ID that is not included in the filter.\n```\n\n> Please let us know your use case if you need more filter or complex search capabilities, we are \n> actively improving these areas: https://feedback.myclickfunnels.com/feature-requests?category=api\n\n# Webhooks\n\nClickFunnels webhooks allow you to react to many events in the ClickFunnels app on your own server, \nZapier and other similar tools.\n\nYou need to configure one or more endpoints within the ClickFunnels API by using the [Webhooks::Outgoing::Endpoints](https://apidocs.myclickfunnels.com/tag/Webhooks::Outgoing::Endpoint) \nendpoint with the `event_type_ids` that you want to listen to (see below for all types).\n\nOnce configured, you will receive POST requrests from us to the configured endpoint URL with the\n[Webhooks::Outgoing::Event](https://apidocs.myclickfunnels.com/tag/Webhooks::Outgoing::Event#operation/getWebhooksOutgoingEvents) \npayload, that will contain the subject payload in the `data` property. Like here for the\n`contact.identified` webhook in V2 version:\n\n```json\n{\n  \"id\": null,\n  \"public_id\": \"YVIOwX\",\n  \"workspace_id\": 32,\n  \"uuid\": \"94856650751bb2c141fc38436fd699cb\",\n  \"event_type_id\": \"contact.identified\",\n  \"subject_id\": 100,\n  \"subject_type\": \"Contact\",\n  \"data\": {\n    \"id\": 12,\n    \"public_id\": \"fdPJAZ\",\n    \"workspace_id\": 32,\n    \"anonymous\": null,\n    \"email_address\": \"joe.doe@example.com\",\n    \"first_name\": \"Joe\",\n    \"last_name\": \"Doe\",\n    \"phone_number\": \"1-241-822-5555\",\n    \"time_zone\": \"Pacific Time (US & Canada)\",\n    \"uuid\": \"26281ba2-7d3b-524d-8ea3-b01ff8414120\",\n    \"unsubscribed_at\": null,\n    \"last_notification_email_sent_at\": null,\n    \"fb_url\": \"https://www.facebook.com/example\",\n    \"twitter_url\": \"https://twitter.com/example\",\n    \"instagram_url\": \"https://instagram.com/example\",\n    \"linkedin_url\": \"https://www.linkedin.com/in/example\",\n    \"website_url\": \"https://example.com\",\n    \"created_at\": \"2023-12-31T18:57:40.871Z\",\n    \"updated_at\": \"2023-12-31T18:57:40.872Z\",\n    \"tags\": [\n      {\n        \"id\": 20,\n        \"public_id\": \"bRkQrc\",\n        \"name\": \"Example Tag\",\n        \"color\": \"#59b0a8\"\n      }\n    ]\n  },\n  \"created_at\": \"2023-12-31T18:57:41.872Z\"\n}\n```\n\nThe content of the `data` property will vary depending on the event type that you are receiving.\n\nEvent types are structured like this: `subject.action`. So, for a `contact.identified` webhook, your\n`data` payload will contain data that you can source from [the contact response schema/example in the\ndocumentation](https://apidocs.myclickfunnels.com/tag/Contact#operation/getContacts). Similarly, for\nwebhooks like `order.created` and `one-time-order.identified`, you will find the documentation in\n[the Order resource description](https://apidocs.myclickfunnels.com/tag/Order#operation/getOrders).\n\n**Contact webhooks**\n\nAre delivered with [the Contact data payload](https://apidocs.myclickfunnels.com/tag/Contact#operation/getContacts).\n\n| <div style=\"width:375px;\">Event type</div>| Versions available | Description                                                            | \n|--------------------------------------------------|--------------------|------------------------------------------------------------------------|\n| ***Contact***                                    |                    |                                                                        |\n| `contact.created`                                | V1, V2             | Sent when a Contact is created                                         |\n| `contact.updated`                                | V1, V2             | Sent when a Contact is updated                                         |\n| `contact.deleted`                                | V1, V2             | Sent when a Contact is deleted                                         |\n| `contact.identified`                             | V1, V2             | Sent when a Contact is identified by email address and/or phone number |\n| `contact.unsubscribed`                           | V1, V2             | Sent when a Contact unsubscribes from getting communications from the ClickFunnels workspace                         |\n\n**Contact::AppliedTag webhooks**\n\nAre delivered with [the Contact::AppliedTag data payload](https://apidocs.myclickfunnels.com/tag/Contacts::AppliedTag#operation/getContactsAppliedTags)\n\n| <div style=\"width:375px;\">Event type</div>| Versions available | Description                                                            |\n|--------------------------------------------------|--------------------|------------------------------------------------------------------------|\n| ***Contacts::AppliedTag***                       |                    |                                                                        |\n| `contact/applied_tag.created`                    | V2                 | Sent when a Contacts::AppliedTag is created                            |\n| `contact/applied_tag.deleted`                    | V2                 | Sent when a Contacts::AppliedTag is deleted\n\n**Courses webhooks**\n\nPayloads correspond to the respective API resources:\n\n- [Course](https://apidocs.myclickfunnels.com/tag/Course#operation/getCourses)\n- [Courses::Enrollment](https://apidocs.myclickfunnels.com/tag/Courses::Enrollment#operation/getCoursesEnrollments)\n- [Courses::Section](https://apidocs.myclickfunnels.com/tag/Courses::Section#operation/getCoursesSections)\n- [Courses::Lesson](https://apidocs.myclickfunnels.com/tag/Courses::Lesson#operation/getCoursesLessons)\n\n| <div style=\"width:375px;\">Event type</div>| Versions available | Description                                                            | \n|--------------------------------------------------|--------------------|------------------------------------------------------------------------|\n| ***Course***                                     |                    |                                                                        |\n| `course.created`                                 | V2             | Sent when a Course is created                                          |\n| `course.updated`                                 | V2             | Sent when a Course is updated                                          |\n| `course.deleted`                                 | V2             | Sent when a Course is deleted                                          |\n| `course.published`                               | V2                 | Sent when a Course has been published                                  |\n| ***Courses::Enrollment***                        |                    |                                                                        |\n| `courses/enrollment.created`                     | V2             | Sent when a Course::Enrollment is created                              |\n| `courses/enrollment.updated`                     | V2             | Sent when a Course::Enrollment is updated                              |\n| `courses/enrollment.deleted`                     | V2             | Sent when a Course::Enrollment is deleted                              |\n| `courses/enrollment.suspended`                   | V2                 | Sent when a Course::Enrollment has been suspended                      |\n| `courses/enrollment.course_completed`                   | V2                 | Sent when a Course::Enrollment completes a course                      |\n| \n***Courses::Section***                           |                    |                                                                        |\n| `courses/section.created`                        | V2             | Sent when a Courses::Section is created                                |\n| `courses/section.updated`                        | V2             | Sent when a Courses::Section is updated                                |\n| `courses/section.deleted`                        | V2             | Sent when a Courses::Section is deleted                                |\n| `courses/section.published`                       | V2                 | Sent when a Courses::Lesson has been published                         |\n|                      |\n***Courses::Lesson***                            |                    |                                                                        |\n| `courses/lesson.created`                         | V2             | Sent when a Courses::Lesson is created                                 |\n| `courses/lesson.updated`                         | V2             | Sent when a Courses::Lesson is updated                                 |\n| `courses/lesson.deleted`                         | V2             | Sent when a Courses::Lesson is deleted                                 |\n| `courses/lesson.published`                       | V2                 | Sent when a Courses::Lesson has been published                         |\n|                      |\n\n**Form submission webhooks**\n\nCurrently only available in V1 with the following JSON payload sample:\n\n```json\n{\n  \"data\": {\n    \"id\": \"4892034\",\n    \"type\": \"form_submission\",\n    \"attributes\": {\n      \"id\": 9874322,\n      \"data\": {\n        \"action\": \"submit\",\n        \"contact\": {\n          \"email\": \"joe.doe@example.com\",\n          \"aff_sub\": \"43242122e8c15480e9117143ce806d111\"\n        },\n        \"controller\": \"user_pages/pages\",\n        \"redirect_to\": \"https://www.example.com/thank-you-newsletter\"\n      },\n      \"page_id\": 2342324,\n      \"contact_id\": 234424,\n      \"created_at\": \"2023-11-14T23:25:54.070Z\",\n      \"updated_at\": \"2023-11-14T23:25:54.134Z\",\n      \"workspace_id\": 11\n    }\n  },\n  \"event_id\": \"bb50ab45-3da8-4532-9d7e-1c85d159ee71\",\n  \"event_type\": \"form_submission.created\",\n  \"subject_id\": 9894793,\n  \"subject_type\": \"FormSubmission\"\n}\n```\n\n| <div style=\"width:375px;\">Event type</div>| Versions available | Description                             | \n|--------------------------------------------------|--------------------|-----------------------------------------|\n| ***Form::Submission***                           |                    |                                         |\n| `form/submission.created`                        | V1                 | Sent when a Form::Submission is created |\n\n**Order webhooks**\n\nSubscriptions and orders are all of type \"Order\" and their payload will be as in the [Order resources\nresponse payload](https://apidocs.myclickfunnels.com/tag/Order#operation/getOrders).\n\n| <div style=\"width:375px;\">Event type</div> | Versions available | Description                                                                                               | \n|--------------------------------------------|--------------------|-----------------------------------------------------------------------------------------------------------|\n| ***Order***                                |                    |                                                                                                           |\n| `order.created`                            | V1, V2             | Sent when an Order has been created                                                                       |\n| `order.updated`                            | V1, V2             | Sent when an Order has been updated                                                                       |\n| `order.deleted`                            | V1, V2             | Sent when an Order has been deleted                                                                       |\n| `order.completed`                          | V1, V2             | Sent when a one-time order was paid or a subscription order's service period has concluded                |\n| ***One-Time Order***                       |                    |                                                                                                           |\n| `one-time-order.completed`                 | V1, V2             | Sent when an Order of `order_type: \"one-time-order\"` has been completed                                   |\n| `one_time_order.refunded`                  | V1, V2             | Sent when an Order of `order_type: \"one-time-order\"` refund has been issued                               |\n| ***Subscription***                         |                    |                                                                                                           |\n| `subscription.canceled`                    | V1, V2             | Sent when an Order of `order_type: \"subscription\"` has been canceled                                      |\n| `subscription.reactivated`                 | V1, V2             | Sent when an Order of `order_type: \"subscription\"` that was canceled was reactivated                      |\n| `subscription.downgraded`                  | V1, V2             | Sent when an Order of `order_type: \"subscription\"` is changed to a product of smaller value               |\n| `subscription.upgraded`                    | V1, V2             | Sent when an Order of `order_type: \"subscription\"` is changed to a product of higher value                |\n| `subscription.churned`                     | V1, V2             | Sent when an Order of `order_type: \"subscription\"` has been churned                                       |\n| `subscription.modified`                    | V1, V2             | Sent when an Order of `order_type: \"subscription\"` has been modified                                      |\n| `subscription.activated`                   | V1, V2             | Sent when an Order of `order_type: \"subscription\"` has been activated                                     |\n| `subscription.completed`                   | V1, V2             | Sent when an Order of `order_type: \"subscription\"` has been completed                                     |\n| `subscription.first_payment_received`      | V1, V2             | Sent when an Order of `order_type: \"subscription\"` received first non-setup payment for subscription item |\n\n**Orders::Transaction Webhooks**\n\nOrders transactions are currently not part of our V2 API, but you can refer to this sample V2 webhook data payload: \n\n```json\n{\n  \"id\": 1821233,\n  \"arn\": null,\n  \"amount\": \"200.00\",\n  \"reason\": null,\n  \"result\": \"approved\",\n  \"status\": \"completed\",\n  \"currency\": \"USD\",\n  \"order_id\": 110030,\n  \"is_rebill\": false,\n  \"public_id\": \"asLOAY\",\n  \"created_at\": \"2024-01-30T06:25:06.754Z\",\n  \"updated_at\": \"2024-01-30T06:25:06.754Z\",\n  \"external_id\": \"txn_01HNCGNQE2C234PCFNERD2AVFZ\",\n  \"external_type\": \"sale\",\n  \"rebill_number\": 0,\n  \"adjusted_transaction_id\": null,\n  \"billing_payment_instruction_id\": 1333223,\n  \"billing_payment_instruction_type\": \"Billing::PaymentMethod\"\n}\n```\n\n| <div style=\"width:375px;\">Event type</div>                            | Versions available | Description                                       | \n|---------------------------------------|--------------------|---------------------------------------------------|\n| ***Orders::Transaction***                      |                    |                                                   |\n| `orders/transaction.created`                   | V1, V2             | Sent when an Orders::Transaction has been created |\n| `orders/transaction.updated`                   | V1, V2             | Sent when an Orders::Transaction has been updated |\n\n**Invoice webhooks**\n\nWith the [Invoice payload](https://apidocs.myclickfunnels.com/tag/Orders::Invoice).\n\n| <div style=\"width:375px;\">Event type</div>   | Versions available   | Description                                                                 | \n|----------------------------------------------|----------------------|-----------------------------------------------------------------------------|\n| ***Orders::Invoice***                        |                      |                                                                             |\n| `orders/invoice.created`                     | V1, V2               | Sent when an Orders::Invoice has been created                               |\n| `orders/invoice.updated`                     | V1, V2               | Sent when an Orders::Invoice has been updated                               |\n| `orders/invoice.refunded`                    | V1, V2               | Sent when an Orders::Invoice has been refunded                              |\n| `renewal-invoice-payment-declined`           | V1, V2               | Issued when a renewal Orders::Invoice payment has been declined             |\n| ***OneTimeOrder::Invoice***                  |                      |                                                                             |\n| `one-time-order.invoice.paid`                | V1, V2               | Sent when an Order::Invoice of `order_type: \"one-time-order\"` has been paid |\n| ***Subscription::Invoice***                  |                      |                                                                             |\n| `subscription/invoice.paid`                  | V1, V2               | Sent when an Order of `order_type: \"subscription\"` has been paid            |\n\n**Workflow-based webhooks**\n\nThese are mostly used for [the UI-based ClickFunnels Workflows functionality](https://support.myclickfunnels.com/support/solutions/articles/150000156983-using-the-webhook-step-in-a-workflow).\n\n| <div style=\"width:375px;\">Event type</div>| Versions available | Description                                                        | \n|--------------------------------------------------|--------------------|--------------------------------------------------------------------| \n| ***Runs::Step***                                 |                    |                                                                    |\n| `runs/step.dontrunme`                            | V1                 | Issued when the `dontrunme` step has been ran on a Workflow        |\n| ***Workflows::Integration::Step***               |                    |                                                                    |\n| `workflows_integration_step.executed`            | V1                 | Sent when a Workflows::Integration::Step has been executed         |\n| ***Workflows::Steps::IntegrationStep***          |                    |                                                                    |\n| `workflows/steps/integration_step.executed`      | V1                 | Sent when a Workflows::Steps::IntegrationStep has been executed    |\n| ***Workflows::Steps::DeliverWebhookStep***       |                    |                                                                    |\n| `workflows/steps/deliver_webhook_step.executed`  | V1                 | Sent when a Workflows::Steps::DeliverWebhookStep has been executed |\n",
  "apiTitle": "ClickFunnels API",
  "endpoints": 82,
  "sdkMethods": 156,
  "schemas": 500,
  "parameters": 288,
  "contactUrl": "https://developers.myclickfunnels.com",
  "originalCustomRequest": {
    "lambda": true
  },
  "customRequestSpecFilename": "clickfunnels.com.yaml",
  "difficultyScore": 265,
  "difficulty": "Hard",
  "company": "ClickFunnels",
  "sdkName": "click-funnels-{language}-sdk",
  "clientName": "ClickFunnels",
  "metaDescription": "With ClickFunnels, you are just a few simple clicks away from a beautifully-designed website marketing funnel. Because we believe that's how it should be!",
  "apiStatusUrls": false,
  "homepage": "www.clickfunnels.com/",
  "developerDocumentation": "developers.myclickfunnels.com/",
  "categories": [
    "marketing",
    "workspace"
  ],
  "category": "Website Builders",
  "methods": [
    {
      "url": "/teams",
      "method": "getAll",
      "httpMethod": "get",
      "tag": "Team",
      "typeScriptTag": "team",
      "description": "List Teams",
      "parameters": [
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{id}",
      "method": "getSingle",
      "httpMethod": "get",
      "tag": "Team",
      "typeScriptTag": "team",
      "description": "Fetch Team",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Teams"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{id}",
      "method": "updateTeamById",
      "httpMethod": "put",
      "tag": "Team",
      "typeScriptTag": "team",
      "description": "Update Team",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "team",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Team",
            "time_zone": "Pacific Time (US & Canada)",
            "locale": "en"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Teams"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users",
      "method": "listCurrentAccountUsers",
      "httpMethod": "get",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "List Users",
      "parameters": [
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "getSingle",
      "httpMethod": "get",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Fetch User",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Profile"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/users/{id}",
      "method": "updateSingleUser",
      "httpMethod": "put",
      "tag": "User",
      "typeScriptTag": "user",
      "description": "Update User",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "user",
          "schema": "object",
          "description": "",
          "example": {
            "email": "regena.rowe@grimes.co",
            "first_name": "Zachary",
            "last_name": "Schaefer",
            "time_zone": "Pacific Time (US & Canada)",
            "locale": "en"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Profile"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id}/workspaces",
      "method": "listWorkspaces",
      "httpMethod": "get",
      "tag": "Workspace",
      "typeScriptTag": "workspace",
      "description": "List Workspaces",
      "parameters": [
        {
          "name": "teamId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{team_id}/workspaces",
      "method": "addNew",
      "httpMethod": "post",
      "tag": "Workspace",
      "typeScriptTag": "workspace",
      "description": "Create Workspace",
      "parameters": [
        {
          "name": "teamId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "workspace",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Workspace",
            "subdomain": "example"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Workspaces"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Workspace",
      "typeScriptTag": "workspace",
      "description": "Fetch Workspace",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Workspaces"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{id}",
      "method": "update",
      "httpMethod": "put",
      "tag": "Workspace",
      "typeScriptTag": "workspace",
      "description": "Update Workspace",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "workspace",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Workspace",
            "subdomain": "example"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Workspaces"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/contacts",
      "method": "listForWorkspace",
      "httpMethod": "get",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "List Contacts",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Filtering\n\n- Keep in mind that depending on the tools that you use, you might run into different situations where additional encoding is needed. For example:\n    - You might need to encode `filter[id]=1` as `filter%5Bid%5D=1` or use special options in your tools of choice to do it for you (like `g` in CURL).\n    -  Special URL characters like `%`, `+`, or unicode characters in emails (like Chinese characters) will need additional encoding.\n "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/contacts",
      "method": "createNewContact",
      "httpMethod": "post",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "Create Contact",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "contact",
          "schema": "object",
          "description": "",
          "example": {
            "email_address": "test-2ea19f39988b38755344@example.com",
            "first_name": "Cory",
            "last_name": "Rosenbaum",
            "phone_number": "234.346.5721 x8239",
            "time_zone": "Pacific Time (US & Canada)",
            "fb_url": "https://www.facebook.com/example",
            "twitter_url": "https://twitter.com/example",
            "linkedin_url": "https://www.linkedin.com/in/example",
            "website_url": "https://example.com"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Contacts"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "Remove Contact",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{id}",
      "method": "getContactById",
      "httpMethod": "get",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "Fetch Contact",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contacts"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{id}",
      "method": "updateContactById",
      "httpMethod": "put",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "Update Contact",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "contact",
          "schema": "object",
          "description": "",
          "example": {
            "email_address": "test-2ea19f39988b38755344@example.com",
            "first_name": "Cory",
            "last_name": "Rosenbaum",
            "phone_number": "234.346.5721 x8239",
            "time_zone": "Pacific Time (US & Canada)",
            "fb_url": "https://www.facebook.com/example",
            "twitter_url": "https://twitter.com/example",
            "linkedin_url": "https://www.linkedin.com/in/example",
            "website_url": "https://example.com"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contacts"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{id}/gdpr_destroy",
      "method": "redactPersonallyIdentifiable",
      "httpMethod": "delete",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "Redact Contact",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OK"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/contacts/upsert",
      "method": "upsert",
      "httpMethod": "post",
      "tag": "Contact",
      "typeScriptTag": "contact",
      "description": "Upsert a Contact",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "WORKSPACE_ID"
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": "Unprocessable Entity"
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/applied_tags",
      "method": "list",
      "httpMethod": "get",
      "tag": "Contacts::AppliedTag",
      "typeScriptTag": "contacts::appliedTag",
      "description": "List Applied Tags",
      "parameters": [
        {
          "name": "contactId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/{contact_id}/applied_tags",
      "method": "createAppliedTag",
      "httpMethod": "post",
      "tag": "Contacts::AppliedTag",
      "typeScriptTag": "contacts::appliedTag",
      "description": "Create Applied Tag",
      "parameters": [
        {
          "name": "contactId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "contacts_applied_tag",
          "schema": "object",
          "description": "",
          "example": {
            "tag_id": 3
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Contacts Applied Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/applied_tags/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Contacts::AppliedTag",
      "typeScriptTag": "contacts::appliedTag",
      "description": "Remove Applied Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/applied_tags/{id}",
      "method": "getForContact",
      "httpMethod": "get",
      "tag": "Contacts::AppliedTag",
      "typeScriptTag": "contacts::appliedTag",
      "description": "Fetch Applied Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contacts Applied Tags"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/contacts/tags",
      "method": "list",
      "httpMethod": "get",
      "tag": "Contacts::Tag",
      "typeScriptTag": "contacts::tag",
      "description": "List Tags",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/contacts/tags",
      "method": "createNewTag",
      "httpMethod": "post",
      "tag": "Contacts::Tag",
      "typeScriptTag": "contacts::tag",
      "description": "Create Tag",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "contacts_tag",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Tag",
            "color": "#b569d2"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Contact Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/tags/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Contacts::Tag",
      "typeScriptTag": "contacts::tag",
      "description": "Remove Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/tags/{id}",
      "method": "getSingle",
      "httpMethod": "get",
      "tag": "Contacts::Tag",
      "typeScriptTag": "contacts::tag",
      "description": "Fetch Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contact Tags"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/contacts/tags/{id}",
      "method": "updateSpecificTag",
      "httpMethod": "put",
      "tag": "Contacts::Tag",
      "typeScriptTag": "contacts::tag",
      "description": "Update Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "contacts_tag",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Tag",
            "color": "#b569d2"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contact Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/courses",
      "method": "listForWorkspace",
      "httpMethod": "get",
      "tag": "Course",
      "typeScriptTag": "course",
      "description": "List Courses",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Course",
      "typeScriptTag": "course",
      "description": "Fetch Course",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Courses"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{course_id}/enrollments",
      "method": "list",
      "httpMethod": "get",
      "tag": "Courses::Enrollment",
      "typeScriptTag": "courses::enrollment",
      "description": "List Enrollments",
      "parameters": [
        {
          "name": "courseId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{course_id}/enrollments",
      "method": "createNewEnrollment",
      "httpMethod": "post",
      "tag": "Courses::Enrollment",
      "typeScriptTag": "courses::enrollment",
      "description": "Create Enrollment",
      "parameters": [
        {
          "name": "courseId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "courses_enrollment",
          "schema": "object",
          "description": "",
          "example": {
            "contact_id": 3,
            "suspension_reason": "Call in to reapply after robot incident"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Enrollments"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/enrollments/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Courses::Enrollment",
      "typeScriptTag": "courses::enrollment",
      "description": "Fetch Enrollment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Enrollments"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/enrollments/{id}",
      "method": "updateSpecificEnrollment",
      "httpMethod": "put",
      "tag": "Courses::Enrollment",
      "typeScriptTag": "courses::enrollment",
      "description": "Update Enrollment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "courses_enrollment",
          "schema": "object",
          "description": "",
          "example": {
            "contact_id": 3,
            "suspension_reason": "Call in to reapply after robot incident"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Enrollments"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/{course_id}/sections",
      "method": "listSections",
      "httpMethod": "get",
      "tag": "Courses::Section",
      "typeScriptTag": "courses::section",
      "description": "List Sections",
      "parameters": [
        {
          "name": "courseId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/sections/{id}",
      "method": "getSection",
      "httpMethod": "get",
      "tag": "Courses::Section",
      "typeScriptTag": "courses::section",
      "description": "Fetch Section",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Modules"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/sections/{id}",
      "method": "updateSectionById",
      "httpMethod": "put",
      "tag": "Courses::Section",
      "typeScriptTag": "courses::section",
      "description": "Update Section",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "courses_section",
          "schema": "object",
          "description": "",
          "example": {
            "title": "Module 1",
            "is_hidden_from_non_members": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Modules"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/sections/{section_id}/lessons",
      "method": "listLessons",
      "httpMethod": "get",
      "tag": "Courses::Lesson",
      "typeScriptTag": "courses::lesson",
      "description": "List Lessons",
      "parameters": [
        {
          "name": "sectionId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/lessons/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Courses::Lesson",
      "typeScriptTag": "courses::lesson",
      "description": "Fetch Lesson",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Lessons"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/courses/lessons/{id}",
      "method": "updateLessonById",
      "httpMethod": "put",
      "tag": "Courses::Lesson",
      "typeScriptTag": "courses::lesson",
      "description": "Update Lesson",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "courses_lesson",
          "schema": "object",
          "description": "",
          "example": {
            "title": "Lesson 1"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Lessons"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/forms",
      "method": "listWorkspaceForms",
      "httpMethod": "get",
      "tag": "Form",
      "typeScriptTag": "form",
      "description": "List Forms",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/forms",
      "method": "createNewForm",
      "httpMethod": "post",
      "tag": "Form",
      "typeScriptTag": "form",
      "description": "Create Form",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "form",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Form"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Forms"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Form",
      "typeScriptTag": "form",
      "description": "Remove Form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{id}",
      "method": "getForm",
      "httpMethod": "get",
      "tag": "Form",
      "typeScriptTag": "form",
      "description": "Fetch Form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Forms"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{id}",
      "method": "updateFormById",
      "httpMethod": "put",
      "tag": "Form",
      "typeScriptTag": "form",
      "description": "Update Form",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "form",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Form"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Forms"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}/field_sets",
      "method": "list",
      "httpMethod": "get",
      "tag": "Forms::FieldSet",
      "typeScriptTag": "forms::fieldSet",
      "description": "List Field Sets",
      "parameters": [
        {
          "name": "formId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}/field_sets",
      "method": "createNewFieldSet",
      "httpMethod": "post",
      "tag": "Forms::FieldSet",
      "typeScriptTag": "forms::fieldSet",
      "description": "Create Field Set",
      "parameters": [
        {
          "name": "formId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "forms_field_set",
          "schema": "object",
          "description": "",
          "example": {
            "title": "Example Field Set"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Field sets"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/field_sets/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Forms::FieldSet",
      "typeScriptTag": "forms::fieldSet",
      "description": "Remove Field Set",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/field_sets/{id}",
      "method": "getFieldSet",
      "httpMethod": "get",
      "tag": "Forms::FieldSet",
      "typeScriptTag": "forms::fieldSet",
      "description": "Fetch Field Set",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Field sets"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/field_sets/{id}",
      "method": "updateFieldSetById",
      "httpMethod": "put",
      "tag": "Forms::FieldSet",
      "typeScriptTag": "forms::fieldSet",
      "description": "Update Field Set",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "forms_field_set",
          "schema": "object",
          "description": "",
          "example": {
            "title": "Example Field Set"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Field sets"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/field_sets/{field_set_id}/fields",
      "method": "listFieldsForFieldSet",
      "httpMethod": "get",
      "tag": "Forms::Field",
      "typeScriptTag": "forms::field",
      "description": "List Fields",
      "parameters": [
        {
          "name": "fieldSetId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/field_sets/{field_set_id}/fields",
      "method": "addNewField",
      "httpMethod": "post",
      "tag": "Forms::Field",
      "typeScriptTag": "forms::field",
      "description": "Create Field",
      "parameters": [
        {
          "name": "fieldSetId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "forms_field",
          "schema": "object",
          "description": "",
          "example": {
            "label": "MyString",
            "field_type": "MyString"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Fields"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/{id}",
      "method": "removeField",
      "httpMethod": "delete",
      "tag": "Forms::Field",
      "typeScriptTag": "forms::field",
      "description": "Remove Field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/{id}",
      "method": "getField",
      "httpMethod": "get",
      "tag": "Forms::Field",
      "typeScriptTag": "forms::field",
      "description": "Fetch Field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Fields"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/{id}",
      "method": "updateFieldById",
      "httpMethod": "put",
      "tag": "Forms::Field",
      "typeScriptTag": "forms::field",
      "description": "Update Field",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "forms_field",
          "schema": "object",
          "description": "",
          "example": {
            "label": "MyString",
            "field_type": "MyString"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Fields"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/{field_id}/options",
      "method": "list",
      "httpMethod": "get",
      "tag": "Forms::Fields::Option",
      "typeScriptTag": "forms::fields::option",
      "description": "List Options",
      "parameters": [
        {
          "name": "fieldId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/{field_id}/options",
      "method": "createNewFieldOption",
      "httpMethod": "post",
      "tag": "Forms::Fields::Option",
      "typeScriptTag": "forms::fields::option",
      "description": "Create Option",
      "parameters": [
        {
          "name": "fieldId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "forms_fields_option",
          "schema": "object",
          "description": "",
          "example": {
            "label": "voluptatem"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Options"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/options/{id}",
      "method": "deleteOptionForField",
      "httpMethod": "delete",
      "tag": "Forms::Fields::Option",
      "typeScriptTag": "forms::fields::option",
      "description": "Remove Option",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/options/{id}",
      "method": "getFieldOption",
      "httpMethod": "get",
      "tag": "Forms::Fields::Option",
      "typeScriptTag": "forms::fields::option",
      "description": "Fetch Option",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Options"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/fields/options/{id}",
      "method": "updateFieldOption",
      "httpMethod": "put",
      "tag": "Forms::Fields::Option",
      "typeScriptTag": "forms::fields::option",
      "description": "Update Option",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "forms_fields_option",
          "schema": "object",
          "description": "",
          "example": {
            "label": "voluptatem"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Options"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}/submissions",
      "method": "list",
      "httpMethod": "get",
      "tag": "Forms::Submission",
      "typeScriptTag": "forms::submission",
      "description": "List Submissions",
      "parameters": [
        {
          "name": "formId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/{form_id}/submissions",
      "method": "createNewSubmission",
      "httpMethod": "post",
      "tag": "Forms::Submission",
      "typeScriptTag": "forms::submission",
      "description": "Create Submission",
      "parameters": [
        {
          "name": "formId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "forms_submission",
          "schema": "object",
          "description": "",
          "example": {
            "contact_id": 4
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Submissions"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Forms::Submission",
      "typeScriptTag": "forms::submission",
      "description": "Remove Submission",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Forms::Submission",
      "typeScriptTag": "forms::submission",
      "description": "Fetch Submission",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Submissions"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/{id}",
      "method": "updateSubmission",
      "httpMethod": "put",
      "tag": "Forms::Submission",
      "typeScriptTag": "forms::submission",
      "description": "Update Submission",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "forms_submission",
          "schema": "object",
          "description": "",
          "example": {
            "contact_id": 4
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Submissions"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/{submission_id}/answers",
      "method": "list",
      "httpMethod": "get",
      "tag": "Forms::Submissions::Answer",
      "typeScriptTag": "forms::submissions::answer",
      "description": "List Answers",
      "parameters": [
        {
          "name": "submissionId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/{submission_id}/answers",
      "method": "addNewAnswer",
      "httpMethod": "post",
      "tag": "Forms::Submissions::Answer",
      "typeScriptTag": "forms::submissions::answer",
      "description": "Create Answer",
      "parameters": [
        {
          "name": "submissionId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "forms_submissions_answer",
          "schema": "object",
          "description": "",
          "example": {
            "field_id": 3,
            "fields_option_id": 8,
            "entry": "MyText"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Answers"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/answers/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Forms::Submissions::Answer",
      "typeScriptTag": "forms::submissions::answer",
      "description": "Remove Answer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/answers/{id}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Forms::Submissions::Answer",
      "typeScriptTag": "forms::submissions::answer",
      "description": "Fetch Answer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Answers"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/forms/submissions/answers/{id}",
      "method": "updateAnswer",
      "httpMethod": "put",
      "tag": "Forms::Submissions::Answer",
      "typeScriptTag": "forms::submissions::answer",
      "description": "Update Answer",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "forms_submissions_answer",
          "schema": "object",
          "description": "",
          "example": {
            "field_id": 3,
            "fields_option_id": 8,
            "entry": "MyText"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Answers"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/form_submissions",
      "method": "listSubmissions",
      "httpMethod": "get",
      "tag": "FormSubmission",
      "typeScriptTag": "formSubmission",
      "description": "List Form Submissions",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/form_submissions/{id}",
      "method": "getSubmission",
      "httpMethod": "get",
      "tag": "FormSubmission",
      "typeScriptTag": "formSubmission",
      "description": "Fetch Form Submission",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Form submissions"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/fulfillments",
      "method": "list",
      "httpMethod": "get",
      "tag": "Fulfillment",
      "typeScriptTag": "fulfillment",
      "description": "List Fulfillments",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/fulfillments",
      "method": "create",
      "httpMethod": "post",
      "tag": "Fulfillment",
      "typeScriptTag": "fulfillment",
      "description": "Create Fulfillment",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "fulfillment",
          "schema": "object",
          "description": "",
          "example": {
            "contact_id": 7,
            "tracking_url": "https://usps.com/track/1234567890",
            "shipping_provider": "USPS",
            "tracking_code": "1234567890",
            "location_id": 1
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Fulfillments"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Fulfillment",
      "typeScriptTag": "fulfillment",
      "description": "Fetch Fulfillment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Fulfillments"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/{id}",
      "method": "updateById",
      "httpMethod": "put",
      "tag": "Fulfillment",
      "typeScriptTag": "fulfillment",
      "description": "Update Fulfillment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "fulfillment",
          "schema": "object",
          "description": "",
          "example": {
            "contact_id": 7,
            "tracking_url": "https://usps.com/track/1234567890",
            "shipping_provider": "USPS",
            "tracking_code": "1234567890",
            "location_id": 1
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Fulfillments"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/{id}/cancel",
      "method": "cancelFulfillment",
      "httpMethod": "post",
      "tag": "Fulfillment",
      "typeScriptTag": "fulfillment",
      "description": "Cancel a Fulfillment",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Fulfillments"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        },
        {
          "statusCode": "409",
          "description": "Conflict - occurs if product is already cancelled."
        },
        {
          "statusCode": "422",
          "description": "Unprocessable Entity"
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/fulfillments/locations",
      "method": "list",
      "httpMethod": "get",
      "tag": "Fulfillments::Location",
      "typeScriptTag": "fulfillments::location",
      "description": "List Locations",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/fulfillments/locations",
      "method": "createNewLocation",
      "httpMethod": "post",
      "tag": "Fulfillments::Location",
      "typeScriptTag": "fulfillments::location",
      "description": "Create Location",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "fulfillments_location",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Location",
            "address_name": "Example Address",
            "email_address": "myemail1713195228@example.com",
            "phone_number": "(https://developers.myclickfunnels.com/-555-4567"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Locations"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/locations/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Fulfillments::Location",
      "typeScriptTag": "fulfillments::location",
      "description": "Remove Location",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/locations/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Fulfillments::Location",
      "typeScriptTag": "fulfillments::location",
      "description": "Fetch Location",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Locations"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/fulfillments/locations/{id}",
      "method": "updateById",
      "httpMethod": "put",
      "tag": "Fulfillments::Location",
      "typeScriptTag": "fulfillments::location",
      "description": "Update Location",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "fulfillments_location",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Location",
            "address_name": "Example Address",
            "email_address": "myemail1713195228@example.com",
            "phone_number": "(https://developers.myclickfunnels.com/-555-4567"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Locations"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/images",
      "method": "list",
      "httpMethod": "get",
      "tag": "Image",
      "typeScriptTag": "image",
      "description": "List Images",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/images",
      "method": "create",
      "httpMethod": "post",
      "tag": "Image",
      "typeScriptTag": "image",
      "description": "Create Image",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "image",
          "schema": "object",
          "description": "",
          "example": {
            "alt_text": "Alt text of the image",
            "name": "Amazing Shot",
            "upload_source_url": "https://image-hosting-x.com/cdn/123"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Images"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/images/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Image",
      "typeScriptTag": "image",
      "description": "Remove Image",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/images/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Image",
      "typeScriptTag": "image",
      "description": "Fetch Image",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Images"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/images/{id}",
      "method": "updateById",
      "httpMethod": "put",
      "tag": "Image",
      "typeScriptTag": "image",
      "description": "Update Image",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "image",
          "schema": "object",
          "description": "",
          "example": {
            "alt_text": "Alt text of the image",
            "name": "Amazing Shot",
            "upload_source_url": "https://image-hosting-x.com/cdn/123"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Images"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/orders",
      "method": "listOrders",
      "httpMethod": "get",
      "tag": "Order",
      "typeScriptTag": "order",
      "description": "List Orders",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        },
        {
          "name": "filter",
          "schema": "object",
          "required": false,
          "description": "Filtering\n\n- Keep in mind that depending on the tools that you use, you might run into different situations where additional encoding is needed. For example:\n    - You might need to encode `filter[id]=1` as `filter%5Bid%5D=1` or use special options in your tools of choice to do it for you (like `g` in CURL).\n    -  Special URL characters like `%`, `+`, or unicode characters in emails (like Chinese characters) will need additional encoding.\n "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{id}",
      "method": "getSingle",
      "httpMethod": "get",
      "tag": "Order",
      "typeScriptTag": "order",
      "description": "Fetch Order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Orders"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{id}",
      "method": "updateSpecific",
      "httpMethod": "put",
      "tag": "Order",
      "typeScriptTag": "order",
      "description": "Update Order",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "order",
          "schema": "object",
          "description": "",
          "example": {
            "notes": "Sapiente consequatur incidunt repellendus."
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Orders"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/orders/invoices/restocks",
      "method": "listRestocks",
      "httpMethod": "get",
      "tag": "Orders::Invoices::Restock",
      "typeScriptTag": "orders::invoices::restock",
      "description": "List Restocks",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/invoices/restocks/{id}",
      "method": "getRestock",
      "httpMethod": "get",
      "tag": "Orders::Invoices::Restock",
      "typeScriptTag": "orders::invoices::restock",
      "description": "Fetch Restock",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Restock"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{order_id}/applied_tags",
      "method": "list",
      "httpMethod": "get",
      "tag": "Orders::AppliedTag",
      "typeScriptTag": "orders::appliedTag",
      "description": "List Applied Tags",
      "parameters": [
        {
          "name": "orderId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{order_id}/applied_tags",
      "method": "createAppliedTag",
      "httpMethod": "post",
      "tag": "Orders::AppliedTag",
      "typeScriptTag": "orders::appliedTag",
      "description": "Create Applied Tag",
      "parameters": [
        {
          "name": "orderId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "orders_applied_tag",
          "schema": "object",
          "description": "",
          "example": {
            "tag_id": 4
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Orders Applied Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/applied_tags/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Orders::AppliedTag",
      "typeScriptTag": "orders::appliedTag",
      "description": "Remove Applied Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/applied_tags/{id}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Orders::AppliedTag",
      "typeScriptTag": "orders::appliedTag",
      "description": "Fetch Applied Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Orders Applied Tags"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{order_id}/invoices",
      "method": "listForOrder",
      "httpMethod": "get",
      "tag": "Orders::Invoice",
      "typeScriptTag": "orders::invoice",
      "description": "List Invoices",
      "parameters": [
        {
          "name": "orderId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/invoices/{id}",
      "method": "getForOrder",
      "httpMethod": "get",
      "tag": "Orders::Invoice",
      "typeScriptTag": "orders::invoice",
      "description": "Fetch Invoice",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Invoices"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/{order_id}/transactions",
      "method": "getList",
      "httpMethod": "get",
      "tag": "Orders::Transaction",
      "typeScriptTag": "orders::transaction",
      "description": "List Transactions",
      "parameters": [
        {
          "name": "orderId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/transactions/{id}",
      "method": "getById",
      "httpMethod": "get",
      "tag": "Orders::Transaction",
      "typeScriptTag": "orders::transaction",
      "description": "Fetch Transaction",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Payments"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/orders/tags",
      "method": "list",
      "httpMethod": "get",
      "tag": "Orders::Tag",
      "typeScriptTag": "orders::tag",
      "description": "List Tags",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/orders/tags",
      "method": "createNewTag",
      "httpMethod": "post",
      "tag": "Orders::Tag",
      "typeScriptTag": "orders::tag",
      "description": "Create Tag",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "orders_tag",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Tag",
            "color": "#585673"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Order Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/tags/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Orders::Tag",
      "typeScriptTag": "orders::tag",
      "description": "Remove Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/tags/{id}",
      "method": "getSingle",
      "httpMethod": "get",
      "tag": "Orders::Tag",
      "typeScriptTag": "orders::tag",
      "description": "Fetch Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Order Tags"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/orders/tags/{id}",
      "method": "updateSpecificOrderTag",
      "httpMethod": "put",
      "tag": "Orders::Tag",
      "typeScriptTag": "orders::tag",
      "description": "Update Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "orders_tag",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Tag",
            "color": "#585673"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Order Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/products",
      "method": "listForWorkspace",
      "httpMethod": "get",
      "tag": "Product",
      "typeScriptTag": "product",
      "description": "List Products",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/products",
      "method": "addNewToWorkspace",
      "httpMethod": "post",
      "tag": "Product",
      "typeScriptTag": "product",
      "description": "Create Product",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "product",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Synergistic Wool Knife 5d6055",
            "visible_in_store": true,
            "visible_in_customer_center": true,
            "seo_title": "Voluptatibus repudiandae sed iste.",
            "seo_description": "Velit quos asperiores sint.",
            "commissionable": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Products"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}",
      "method": "getForWorkspace",
      "httpMethod": "get",
      "tag": "Product",
      "typeScriptTag": "product",
      "description": "Fetch Product",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Products"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}",
      "method": "updateForWorkspace",
      "httpMethod": "put",
      "tag": "Product",
      "typeScriptTag": "product",
      "description": "Update Product",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "product",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Synergistic Wool Knife 5d6055",
            "visible_in_store": true,
            "visible_in_customer_center": true,
            "seo_title": "Voluptatibus repudiandae sed iste.",
            "seo_description": "Velit quos asperiores sint.",
            "commissionable": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Products"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}/archive",
      "method": "archiveProduct",
      "httpMethod": "post",
      "tag": "Product",
      "typeScriptTag": "product",
      "description": "Archive a Product",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Products"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        },
        {
          "statusCode": "409",
          "description": "Conflict - occurs if product is already archived."
        },
        {
          "statusCode": "422",
          "description": "Unprocessable Entity"
        }
      ]
    },
    {
      "url": "/products/{id}/unarchive",
      "method": "unarchiveById",
      "httpMethod": "post",
      "tag": "Product",
      "typeScriptTag": "product",
      "description": "Unarchive a Product",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Products"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        },
        {
          "statusCode": "409",
          "description": "Conflict - occurs if product is not archived."
        },
        {
          "statusCode": "422",
          "description": "Unprocessable Entity"
        }
      ]
    },
    {
      "url": "/products/variants/{variant_id}/prices",
      "method": "createNewPrice",
      "httpMethod": "post",
      "tag": "Products::Price",
      "typeScriptTag": "products::price",
      "description": "Create Price",
      "parameters": [
        {
          "name": "variantId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "products_price",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Price",
            "amount": "100.00",
            "cost": "0.00",
            "currency": "USD",
            "duration": 1,
            "interval": "months",
            "trial_amount": "0.00",
            "self_cancel": true,
            "self_upgrade": true,
            "self_downgrade": true,
            "self_reactivate": true,
            "interval_count": 1,
            "visible": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Prices"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/prices",
      "method": "listForVariant",
      "httpMethod": "get",
      "tag": "Products::Price",
      "typeScriptTag": "products::price",
      "description": "List Prices",
      "parameters": [
        {
          "name": "productId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/prices/{id}",
      "method": "getSinglePrice",
      "httpMethod": "get",
      "tag": "Products::Price",
      "typeScriptTag": "products::price",
      "description": "Fetch Price",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Prices"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/prices/{id}",
      "method": "updateSinglePrice",
      "httpMethod": "put",
      "tag": "Products::Price",
      "typeScriptTag": "products::price",
      "description": "Update Price",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "products_price",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Price",
            "amount": "100.00",
            "cost": "0.00",
            "currency": "USD",
            "duration": 1,
            "interval": "months",
            "trial_amount": "0.00",
            "self_cancel": true,
            "self_upgrade": true,
            "self_downgrade": true,
            "self_reactivate": true,
            "interval_count": 1,
            "visible": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Prices"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/variants",
      "method": "list",
      "httpMethod": "get",
      "tag": "Products::Variant",
      "typeScriptTag": "products::variant",
      "description": "List Variants",
      "parameters": [
        {
          "name": "productId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{product_id}/variants",
      "method": "createNewVariant",
      "httpMethod": "post",
      "tag": "Products::Variant",
      "typeScriptTag": "products::variant",
      "description": "Create Variant",
      "parameters": [
        {
          "name": "productId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "products_variant",
          "schema": "object",
          "description": "",
          "example": {
            "description": "Et repellat ullam corporis.",
            "name": "Enormous Wooden Gloves variant d045",
            "sku": "TnGhoa6ZpD3Lpby9",
            "product_type": "physical",
            "weight": "55.0",
            "weight_unit": "lb",
            "height": "71.0",
            "width": "761.0",
            "length": "84.0",
            "dimensions_unit": "inches",
            "visible": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Variants"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/variants/{id}",
      "method": "getSingle",
      "httpMethod": "get",
      "tag": "Products::Variant",
      "typeScriptTag": "products::variant",
      "description": "Fetch Variant",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Variants"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/variants/{id}",
      "method": "updateSingle",
      "httpMethod": "put",
      "tag": "Products::Variant",
      "typeScriptTag": "products::variant",
      "description": "Update Variant",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "products_variant",
          "schema": "object",
          "description": "",
          "example": {
            "description": "Et repellat ullam corporis.",
            "name": "Enormous Wooden Gloves variant d045",
            "sku": "TnGhoa6ZpD3Lpby9",
            "product_type": "physical",
            "weight": "55.0",
            "weight_unit": "lb",
            "height": "71.0",
            "width": "761.0",
            "length": "84.0",
            "dimensions_unit": "inches",
            "visible": true
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Variants"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/products/tags",
      "method": "list",
      "httpMethod": "get",
      "tag": "Products::Tag",
      "typeScriptTag": "products::tag",
      "description": "List Tags",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/products/tags",
      "method": "createNewTag",
      "httpMethod": "post",
      "tag": "Products::Tag",
      "typeScriptTag": "products::tag",
      "description": "Create Tag",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "products_tag",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Tag",
            "color": "lilac"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Product Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/tags/{id}",
      "method": "deleteTagById",
      "httpMethod": "delete",
      "tag": "Products::Tag",
      "typeScriptTag": "products::tag",
      "description": "Remove Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/tags/{id}",
      "method": "getTagById",
      "httpMethod": "get",
      "tag": "Products::Tag",
      "typeScriptTag": "products::tag",
      "description": "Fetch Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Product Tags"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/tags/{id}",
      "method": "updateTagById",
      "httpMethod": "put",
      "tag": "Products::Tag",
      "typeScriptTag": "products::tag",
      "description": "Update Tag",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "products_tag",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Tag",
            "color": "lilac"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Product Tags"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/profiles/{profile_id}/location_groups",
      "method": "list",
      "httpMethod": "get",
      "tag": "Shipping::LocationGroup",
      "typeScriptTag": "shipping::locationGroup",
      "description": "List Location Groups",
      "parameters": [
        {
          "name": "profileId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/location_groups/{id}",
      "method": "getProfileLocationGroup",
      "httpMethod": "get",
      "tag": "Shipping::LocationGroup",
      "typeScriptTag": "shipping::locationGroup",
      "description": "Fetch Location Group",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Location groups"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/shipping/packages",
      "method": "listForWorkspace",
      "httpMethod": "get",
      "tag": "Shipping::Package",
      "typeScriptTag": "shipping::package",
      "description": "List Packages",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/shipping/packages",
      "method": "addToWorkspace",
      "httpMethod": "post",
      "tag": "Shipping::Package",
      "typeScriptTag": "shipping::package",
      "description": "Create Package",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "shipping_package",
          "schema": "object",
          "description": "",
          "example": {
            "package_type": "box",
            "height": "4.0",
            "width": "2.0",
            "length": "2.0",
            "distance_unit": "in",
            "weight": "0.0",
            "weight_unit": "lb",
            "name": "Example Package"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Packages"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/packages/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Shipping::Package",
      "typeScriptTag": "shipping::package",
      "description": "Remove Package",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/packages/{id}",
      "method": "getForWorkspace",
      "httpMethod": "get",
      "tag": "Shipping::Package",
      "typeScriptTag": "shipping::package",
      "description": "Fetch Package",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Packages"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/packages/{id}",
      "method": "updateForWorkspace",
      "httpMethod": "put",
      "tag": "Shipping::Package",
      "typeScriptTag": "shipping::package",
      "description": "Update Package",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "shipping_package",
          "schema": "object",
          "description": "",
          "example": {
            "package_type": "box",
            "height": "4.0",
            "width": "2.0",
            "length": "2.0",
            "distance_unit": "in",
            "weight": "0.0",
            "weight_unit": "lb",
            "name": "Example Package"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Packages"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/shipping/profiles",
      "method": "list",
      "httpMethod": "get",
      "tag": "Shipping::Profile",
      "typeScriptTag": "shipping::profile",
      "description": "List Profiles",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/shipping/profiles",
      "method": "createNew",
      "httpMethod": "post",
      "tag": "Shipping::Profile",
      "typeScriptTag": "shipping::profile",
      "description": "Create Profile",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "shipping_profile",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Shipping Profile"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Profiles"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/profiles/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Shipping::Profile",
      "typeScriptTag": "shipping::profile",
      "description": "Remove Profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/profiles/{id}",
      "method": "getWorkspaceProfile",
      "httpMethod": "get",
      "tag": "Shipping::Profile",
      "typeScriptTag": "shipping::profile",
      "description": "Fetch Profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Profiles"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/profiles/{id}",
      "method": "updateForWorkspace",
      "httpMethod": "put",
      "tag": "Shipping::Profile",
      "typeScriptTag": "shipping::profile",
      "description": "Update Profile",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "shipping_profile",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Shipping Profile"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Profiles"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/zones/{zone_id}/rates",
      "method": "listForZone",
      "httpMethod": "get",
      "tag": "Shipping::Rate",
      "typeScriptTag": "shipping::rate",
      "description": "List Rates",
      "parameters": [
        {
          "name": "zoneId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/zones/{zone_id}/rates",
      "method": "createRateForZone",
      "httpMethod": "post",
      "tag": "Shipping::Rate",
      "typeScriptTag": "shipping::rate",
      "description": "Create Rate",
      "parameters": [
        {
          "name": "zoneId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "shipping_rate",
          "schema": "object",
          "description": "",
          "example": {
            "provider_name": "Amb. Chantay Lind",
            "price": "10.00",
            "price_currency": "USD",
            "rates_name_id": 1
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Rates"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/rates/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Shipping::Rate",
      "typeScriptTag": "shipping::rate",
      "description": "Remove Rate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/rates/{id}",
      "method": "getRateById",
      "httpMethod": "get",
      "tag": "Shipping::Rate",
      "typeScriptTag": "shipping::rate",
      "description": "Fetch Rate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Rates"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/rates/{id}",
      "method": "updateRateForZone",
      "httpMethod": "put",
      "tag": "Shipping::Rate",
      "typeScriptTag": "shipping::rate",
      "description": "Update Rate",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "shipping_rate",
          "schema": "object",
          "description": "",
          "example": {
            "provider_name": "Amb. Chantay Lind",
            "price": "10.00",
            "price_currency": "USD",
            "rates_name_id": 1
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Rates"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/location_groups/{location_group_id}/zones",
      "method": "listZones",
      "httpMethod": "get",
      "tag": "Shipping::Zone",
      "typeScriptTag": "shipping::zone",
      "description": "List Zones",
      "parameters": [
        {
          "name": "locationGroupId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/location_groups/{location_group_id}/zones",
      "method": "addNewZone",
      "httpMethod": "post",
      "tag": "Shipping::Zone",
      "typeScriptTag": "shipping::zone",
      "description": "Create Zone",
      "parameters": [
        {
          "name": "locationGroupId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "shipping_zone",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Ron Weimann"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Zones"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/zones/{id}",
      "method": "removeById",
      "httpMethod": "delete",
      "tag": "Shipping::Zone",
      "typeScriptTag": "shipping::zone",
      "description": "Remove Zone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/zones/{id}",
      "method": "getZoneById",
      "httpMethod": "get",
      "tag": "Shipping::Zone",
      "typeScriptTag": "shipping::zone",
      "description": "Fetch Zone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zones"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/zones/{id}",
      "method": "updateZoneById",
      "httpMethod": "put",
      "tag": "Shipping::Zone",
      "typeScriptTag": "shipping::zone",
      "description": "Update Zone",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "shipping_zone",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Ron Weimann"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zones"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/shipping/rates/names",
      "method": "list",
      "httpMethod": "get",
      "tag": "Shipping::Rates::Name",
      "typeScriptTag": "shipping::rates::name",
      "description": "List Names",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/shipping/rates/names",
      "method": "createNewRateName",
      "httpMethod": "post",
      "tag": "Shipping::Rates::Name",
      "typeScriptTag": "shipping::rates::name",
      "description": "Create Name",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "shipping_rates_name",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Shipping Rates Name"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Rate Names"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/rates/names/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Shipping::Rates::Name",
      "typeScriptTag": "shipping::rates::name",
      "description": "Remove Name",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/rates/names/{id}",
      "method": "getRateName",
      "httpMethod": "get",
      "tag": "Shipping::Rates::Name",
      "typeScriptTag": "shipping::rates::name",
      "description": "Fetch Name",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Rate Names"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shipping/rates/names/{id}",
      "method": "updateName",
      "httpMethod": "put",
      "tag": "Shipping::Rates::Name",
      "typeScriptTag": "shipping::rates::name",
      "description": "Update Name",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "shipping_rates_name",
          "schema": "object",
          "description": "",
          "example": {
            "name": "Example Shipping Rates Name"
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Rate Names"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/webhooks/outgoing/endpoints",
      "method": "listEndpoints",
      "httpMethod": "get",
      "tag": "Webhooks::Outgoing::Endpoint",
      "typeScriptTag": "webhooks::outgoing::endpoint",
      "description": "List Endpoints",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/webhooks/outgoing/endpoints",
      "method": "createNew",
      "httpMethod": "post",
      "tag": "Webhooks::Outgoing::Endpoint",
      "typeScriptTag": "webhooks::outgoing::endpoint",
      "description": "Create Endpoint",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "webhooks_outgoing_endpoint",
          "schema": "object",
          "description": "",
          "example": {
            "url": "https://example.com/some-endpoint-url",
            "name": "Example Endpoint",
            "event_type_ids": [
              "contact.identified"
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Webhooks"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhooks/outgoing/endpoints/{id}",
      "method": "remove",
      "httpMethod": "delete",
      "tag": "Webhooks::Outgoing::Endpoint",
      "typeScriptTag": "webhooks::outgoing::endpoint",
      "description": "Remove Endpoint",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "No Content"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhooks/outgoing/endpoints/{id}",
      "method": "get",
      "httpMethod": "get",
      "tag": "Webhooks::Outgoing::Endpoint",
      "typeScriptTag": "webhooks::outgoing::endpoint",
      "description": "Fetch Endpoint",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhooks"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhooks/outgoing/endpoints/{id}",
      "method": "updateEndpoint",
      "httpMethod": "put",
      "tag": "Webhooks::Outgoing::Endpoint",
      "typeScriptTag": "webhooks::outgoing::endpoint",
      "description": "Update Endpoint",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        },
        {
          "name": "webhooks_outgoing_endpoint",
          "schema": "object",
          "description": "",
          "example": {
            "url": "https://example.com/some-endpoint-url",
            "name": "Example Endpoint",
            "event_type_ids": [
              "contact.identified"
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhooks"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/workspaces/{workspace_id}/webhooks/outgoing/events",
      "method": "listForWorkspace",
      "httpMethod": "get",
      "tag": "Webhooks::Outgoing::Event",
      "typeScriptTag": "webhooks::outgoing::event",
      "description": "List Events",
      "parameters": [
        {
          "name": "workspaceId",
          "schema": "integer",
          "required": true,
          "description": "",
          "example": 0
        },
        {
          "name": "after",
          "schema": "string",
          "required": false,
          "description": "ID of item after which the collection should be returned"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "required": false,
          "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (https://developers.myclickfunnels.com/ sort order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhooks/outgoing/events/{id}",
      "method": "getForWorkspace",
      "httpMethod": "get",
      "tag": "Webhooks::Outgoing::Event",
      "typeScriptTag": "webhooks::outgoing::event",
      "description": "Fetch Event",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhooks Events"
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "repositoryDescription": "With ClickFunnels, you are just a few simple clicks away from a beautifully-designed website marketing funnel. Because we believe that's how it should be!. ClickFunnels's {language} SDK generated by Konfig (https://konfigthis.com/).",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/clickfunnels/logo.png",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/clickfunnels/openapi.yaml",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/clickfunnels/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/clickfunnels/imagePreview.png",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/clickfunnels/favicon.png",
  "clientNameCamelCase": "clickFunnels",
  "lastUpdated": "2024-08-20T23:26:58.174Z",
  "typescriptSdkUsageCode": "import { ClickFunnels } from 'click-funnels-typescript-sdk';\n\nconst clickFunnels = new ClickFunnels({\n    bearerAuth: \"BEARER_AUTH\"\n})",
  "typescriptSdkFirstRequestCode": "// List Teams\nconst getAllResponse = clickFunnels.team.getAll()",
  "fixedSpecFileName": "click-funnels-fixed-spec.yaml"
}