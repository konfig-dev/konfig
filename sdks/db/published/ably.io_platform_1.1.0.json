{
  "openapiDirectoryPath": "ably.io/platform/1.1.0/openapi.yaml",
  "providerName": "ably.io",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/ably/platform/openapi.yaml",
  "securitySchemes": {
    "basicAuth": {
      "description": "Basic Authentication using an [API key](https://www.ably.io/documentation/core-features/authentication#basic-authentication).",
      "scheme": "basic",
      "type": "http"
    },
    "bearerAuth": {
      "description": "Token Authentication using an [Ably Token](https://www.ably.io/documentation/core-features/authentication#basic-authentication), or optionally an [Ably JWT](https://www.ably.io/documentation/core-features/authentication#ably-jwt-process).",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "homepage": "ably.com",
  "serviceName": "Platform",
  "apiVersion": "1.1.0",
  "apiBaseUrl": "https://rest.ably.io",
  "apiDescription": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
  "apiTitle": "Platform API",
  "endpoints": 14,
  "sdkMethods": 36,
  "schemas": 14,
  "parameters": 76,
  "contactUrl": "https://www.ably.io/contact",
  "contactEmail": "support@ably.io",
  "difficultyScore": 62,
  "difficulty": "Easy",
  "company": "Ably",
  "sdkName": "ably-platform-{language}-sdk",
  "clientName": "Ably",
  "metaDescription": "Ably provides a suite of APIs to build, extend, and deliver powerful digital experiences in realtime. Organizations like Toyota, Bloomberg, HubSpot, and Hopin depend on Ablyâ€™s platform to offload the growing complexity of business-critical realtime data synchronization at global scale.",
  "categories": [
    "cloud"
  ],
  "methods": [
    {
      "url": "/channels",
      "method": "getMetadataOfAllChannels",
      "httpMethod": "get",
      "tag": "Status",
      "typeScriptTag": "status",
      "description": "Enumerate all active channels of the application",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "description": "Optionally limits the query to only those channels whose name starts with the given prefix"
        },
        {
          "name": "by",
          "schema": "string",
          "description": "optionally specifies whether to return just channel names (by=id) or ChannelDetails (by=value)"
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/channels/{channel_id}",
      "method": "getMetadataOfChannel",
      "httpMethod": "get",
      "tag": "Status",
      "typeScriptTag": "status",
      "description": "Get metadata of a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/channels/{channel_id}/messages",
      "method": "getMessagesByChannel",
      "httpMethod": "get",
      "tag": "History",
      "typeScriptTag": "history",
      "description": "Get message history for a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        },
        {
          "name": "start",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        }
      ]
    },
    {
      "url": "/channels/{channel_id}/messages",
      "method": "publishMessagesToChannel",
      "httpMethod": "post",
      "tag": "Publishing",
      "typeScriptTag": "publishing",
      "description": "Publish a message to a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connectionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "data",
          "schema": "string",
          "description": ""
        },
        {
          "name": "encoding",
          "schema": "string",
          "description": ""
        },
        {
          "name": "extras",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/channels/{channel_id}/presence",
      "method": "getPresenceOfChannel",
      "httpMethod": "get",
      "tag": "Status",
      "typeScriptTag": "status",
      "description": "Get presence of a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "connectionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/channels/{channel_id}/presence/history",
      "method": "getPresenceHistoryOfChannel",
      "httpMethod": "get",
      "tag": "History",
      "typeScriptTag": "history",
      "description": "Get presence history of a channel",
      "parameters": [
        {
          "name": "channelId",
          "schema": "string",
          "required": true,
          "description": "The [Channel's ID](https://www.ably.io/documentation/rest/channels)."
        },
        {
          "name": "start",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/keys/{keyName}/requestToken",
      "method": "requestAccessToken",
      "httpMethod": "post",
      "tag": "Authentication",
      "typeScriptTag": "authentication",
      "description": "Request an access token",
      "parameters": [
        {
          "name": "keyName",
          "schema": "string",
          "required": true,
          "description": "The [key name](https://www.ably.io/documentation/rest-api/token-request-spec#api-key-format) comprises of the app ID and key ID of an API key."
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/channelSubscriptions",
      "method": "deletePushDeviceDetails",
      "httpMethod": "delete",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Delete a registered device's update token",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "description": "Filter to restrict to subscriptions associated with that channel."
        },
        {
          "name": "deviceId",
          "schema": "string",
          "description": "Must be set when clientId is empty, cannot be used with clientId."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": "Must be set when deviceId is empty, cannot be used with deviceId."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/channelSubscriptions",
      "method": "getPushSubscriptionsOnChannels",
      "httpMethod": "get",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "List channel subscriptions",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "description": "Filter to restrict to subscriptions associated with that channel."
        },
        {
          "name": "deviceId",
          "schema": "string",
          "description": "Optional filter to restrict to devices associated with that deviceId. Cannot be used with clientId."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": "Optional filter to restrict to devices associated with that clientId. Cannot be used with deviceId."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "The maximum number of records to return."
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/channelSubscriptions",
      "method": "subscribePushDeviceToChannel",
      "httpMethod": "post",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Subscribe a device to a channel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/channels",
      "method": "getChannelsWithPushSubscribers",
      "httpMethod": "get",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "List all channels with at least one subscribed device",
      "parameters": [],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations",
      "method": "unregisterAllPushDevices",
      "httpMethod": "delete",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Unregister matching devices for push notifications",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "description": "Optional filter to restrict to devices associated with that deviceId. Cannot be used with clientId."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": "Optional filter to restrict to devices associated with that clientId. Cannot be used with deviceId."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations",
      "method": "getRegisteredPushDevices",
      "httpMethod": "get",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "List devices registered for receiving push notifications",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "description": "Optional filter to restrict to devices associated with that deviceId."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": "Optional filter to restrict to devices associated with that clientId."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "The maximum number of records to return."
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations",
      "method": "registerPushDevice",
      "httpMethod": "post",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Register a device for receiving push notifications",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deviceSecret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "formFactor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "description": ""
        },
        {
          "name": "push.recipient",
          "schema": "object",
          "description": ""
        },
        {
          "name": "push.state",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations/{device_id}",
      "method": "unregisterPushDevice",
      "httpMethod": "delete",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Unregister a single device for push notifications",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Device's ID."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations/{device_id}",
      "method": "getPushDeviceDetails",
      "httpMethod": "get",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Get a device registration",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Device's ID."
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations/{device_id}",
      "method": "patchPushDeviceDetails",
      "httpMethod": "patch",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Update a device registration",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Device's ID."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deviceSecret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "formFactor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "description": ""
        },
        {
          "name": "push.recipient",
          "schema": "object",
          "description": ""
        },
        {
          "name": "push.state",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations/{device_id}",
      "method": "putPushDeviceDetails",
      "httpMethod": "put",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Update a device registration",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Device's ID."
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deviceSecret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "formFactor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "description": ""
        },
        {
          "name": "push.recipient",
          "schema": "object",
          "description": ""
        },
        {
          "name": "push.state",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
      "method": "updatePushDeviceDetails",
      "httpMethod": "get",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Reset a registered device's update token",
      "parameters": [
        {
          "name": "deviceId",
          "schema": "string",
          "required": true,
          "description": "Device's ID."
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/push/publish",
      "method": "publishPushNotificationToDevices",
      "httpMethod": "post",
      "tag": "Push",
      "typeScriptTag": "push",
      "description": "Publish a push notification to device(s)",
      "parameters": [
        {
          "name": "push",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recipient",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/stats",
      "method": "getStats",
      "httpMethod": "get",
      "tag": "Stats",
      "typeScriptTag": "stats",
      "description": "Retrieve usage statistics for an application",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unit",
          "schema": "string",
          "description": "Specifies the unit of aggregation in the returned results."
        }
      ],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    },
    {
      "url": "/time",
      "method": "getTime",
      "httpMethod": "get",
      "tag": "Stats",
      "typeScriptTag": "stats",
      "description": "Get the service time",
      "parameters": [],
      "responses": [
        {
          "statusCode": "2XX",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Returned error from failed REST."
        }
      ]
    }
  ],
  "originalSpecUrl": "https://raw.githubusercontent.com/ably/open-specs/main/definitions/platform-v1.yaml",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/ably/platform/logo.png",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/ably/platform/imagePreview.jpeg",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/ably/platform/favicon.ico",
  "clientNameCamelCase": "ably",
  "lastUpdated": "2024-01-30T00:35:27.195Z",
  "typescriptSdkUsageCode": "import { Ably } from 'ably-platform-typescript-sdk';\n\nconst ably = new Ably({\n    // Basic Authentication using an [API key](https://www.ably.io/documentation/core-features/authentication#basic-authentication).\n    username: \"USERNAME\",\n    password: \"PASSWORD\",\n    // Token Authentication using an [Ably Token](https://www.ably.io/documentation/core-features/authentication#basic-authentication), or optionally an [Ably JWT](https://www.ably.io/documentation/core-features/authentication#ably-jwt-process).\n    // token: \"TOKEN\",\n})"
}