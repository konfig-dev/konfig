{
  "openapiDirectoryPath": "shutterstock.com/1.1.32/openapi.yaml",
  "providerName": "shutterstock.com",
  "openApiRaw": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/shutterstock/openapi.yaml",
  "securitySchemes": {
    "basic": {
      "scheme": "basic",
      "type": "http"
    },
    "customer_accessCode": {
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://accounts.shutterstock.com/oauth/authorize",
          "scopes": {
            "collections.edit": "Grant the ability to create new collections, edit a collection, and modify the contents of a collection",
            "collections.view": "Grant read-only access to a collection and its contents.",
            "licenses.create": "Grant the ability to download and license media on behalf of the user.",
            "licenses.view": "Grant read-only access to a user's licenses.",
            "purchases.view": "Grant read-only access to a user's purchase history.",
            "user.view": "*Originally missing*"
          },
          "tokenUrl": "https://api.shutterstock.com/v2/oauth/access_token"
        }
      },
      "type": "oauth2",
      "x-shutterstock-realm": "customer"
    }
  },
  "categories": [
    "media"
  ],
  "homepage": "developers.shutterstock.com",
  "apiVersion": "1.1.32",
  "apiBaseUrl": "https://api.shutterstock.com",
  "apiDescription": "The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.",
  "apiTitle": "Shutterstock API Explorer",
  "endpoints": 91,
  "sdkMethods": 118,
  "schemas": 169,
  "parameters": 526,
  "difficultyScore": 333,
  "difficulty": "Hard",
  "company": "Shutterstock",
  "sdkName": "shutterstock-{language}-sdk",
  "clientName": "Shutterstock",
  "metaDescription": "Download the best royalty free images from Shutterstock, including photos, vectors, and illustrations. Enjoy straightforward pricing and simple licensing.",
  "methods": [
    {
      "url": "/v2/ai/audio/descriptors",
      "method": "listAudioDescriptors",
      "httpMethod": "get",
      "tag": "custom_music",
      "typeScriptTag": "customMusic",
      "description": "List computer audio descriptors",
      "parameters": [
        {
          "name": "renderSpeedOver",
          "schema": "number",
          "description": "Show descriptors with an average render speed that is greater than or equal to the specified value",
          "example": 5
        },
        {
          "name": "bandId",
          "schema": "string",
          "description": "Show descriptors that contain the specified band (case-sentsitive)",
          "example": "Corporate Folk Bonfire Band 1"
        },
        {
          "name": "bandName",
          "schema": "string",
          "description": "Show descriptors with the specified band name (case-sensitive)",
          "example": "Documentary Underscore Heartfelt Band 1"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 1,
          "default": 20
        },
        {
          "name": "id",
          "schema": "array",
          "description": "Show descriptors with the specified IDs (case-sensitive)",
          "example": "documentary_underscore_heartfelt"
        },
        {
          "name": "instrumentName",
          "schema": "string",
          "description": "Show descriptors with the specified instrument name (case-sensitive)",
          "example": "Precision Bass - Full"
        },
        {
          "name": "instrumentId",
          "schema": "string",
          "description": "Show descriptors with the specified instrument ID (case-sensitive)",
          "example": "direct_fluorescent_synth_lead"
        },
        {
          "name": "tempo",
          "schema": "number",
          "description": "Show descriptors whose tempo range includes the specified tempo in beats per minute",
          "example": 90
        },
        {
          "name": "tempoTo",
          "schema": "number",
          "description": "Show descriptors with a tempo that is less than or equal to the specified number",
          "example": 120
        },
        {
          "name": "tempoFrom",
          "schema": "number",
          "description": "Show descriptors that have a tempo range that includes the specified tempo in beats per minute",
          "example": 60
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Show descriptors with the specified name (case-sensitive)",
          "example": "Corporate Pop Inspirational High Energy"
        },
        {
          "name": "tag",
          "schema": "string",
          "description": "Show descriptors with the specified tag, such as Cinematic or Roomy (case-sensitive)",
          "example": "Cinematic"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List Descriptors results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/ai/audio/instruments",
      "method": "listComputerAudioInstruments",
      "httpMethod": "get",
      "tag": "custom_music",
      "typeScriptTag": "customMusic",
      "description": "List computer audio instruments",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": "Show instruments with the specified ID",
          "example": "wood_blocks"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 1,
          "default": 20
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "name",
          "schema": "string",
          "description": "Show instruments with the specified name (case-sensitive)",
          "example": "Precision Bass - Full"
        },
        {
          "name": "tag",
          "schema": "string",
          "description": "Show instruments with the specified tag, such as Percussion or Strings (case-sensitive)",
          "example": "Percussion"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Image search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/ai/audio/renders",
      "method": "getAudioRendersDetails",
      "httpMethod": "get",
      "tag": "custom_music",
      "typeScriptTag": "customMusic",
      "description": "Get details about audio renders",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "One or more render IDs",
          "example": [
            "L2w7h9VNFlkzpllSUunSYayenKjN",
            "BeHx3UNXzMBB4dGsC9aa6VxnpcWl"
          ]
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audio render data"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/ai/audio/renders",
      "method": "createRenderedAudio",
      "httpMethod": "post",
      "tag": "custom_music",
      "typeScriptTag": "customMusic",
      "description": "Create rendered audio",
      "parameters": [
        {
          "name": "audio_renders",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audio render data"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio",
      "method": "listTracks",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "List audio tracks",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "One or more audio IDs",
          "example": [
            "442583",
            "434750"
          ]
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "full",
          "default": "minimal"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of tracks"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/collections",
      "method": "listCollections",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "List audio collections",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 100,
          "default": 100
        },
        {
          "name": "embed",
          "schema": "array",
          "description": "Which sharing information to include in the response, such as a URL to the collection",
          "example": "share_code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of collections"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/collections",
      "method": "createCollections",
      "httpMethod": "post",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Create audio collections",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Collection creation response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/collections/{id}",
      "method": "deleteCollection",
      "httpMethod": "delete",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Delete audio collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "48433111"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully deleted collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/audio/collections/{id}",
      "method": "getCollectionDetails",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Get the details of audio collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "48433107"
        },
        {
          "name": "embed",
          "schema": "array",
          "description": "Which sharing information to include in the response, such as a URL to the collection"
        },
        {
          "name": "shareCode",
          "schema": "string",
          "description": "Code to retrieve a shared collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about a collection of assets"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/audio/collections/{id}",
      "method": "setCollectionName",
      "httpMethod": "post",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Rename audio collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "48433107"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully updated collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/audio/collections/{id}/items",
      "method": "removeTracksFromCollection",
      "httpMethod": "delete",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Remove audio tracks from collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "48433119"
        },
        {
          "name": "itemId",
          "schema": "array",
          "description": "One or more item IDs to remove from the collection",
          "example": [
            "76688182",
            "40005859"
          ]
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully removed collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/audio/collections/{id}/items",
      "method": "listCollectionItems",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Get the contents of audio collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "126351027"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        },
        {
          "name": "shareCode",
          "schema": "string",
          "description": "Code to retrieve the contents of a shared collection"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "oldest"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of items in a collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/audio/collections/{id}/items",
      "method": "addTracksToCollection",
      "httpMethod": "post",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Add audio tracks to collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "48433115"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully added collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/audio/genres",
      "method": "listGenres",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "List audio genres",
      "parameters": [
        {
          "name": "language",
          "schema": "string",
          "description": "Which language the genres will be returned"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of audio genres"
        }
      ]
    },
    {
      "url": "/v2/audio/instruments",
      "method": "listInstruments",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "List audio instruments",
      "parameters": [
        {
          "name": "language",
          "schema": "string",
          "description": "Which language the instruments will be returned in"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of instruments"
        }
      ]
    },
    {
      "url": "/v2/audio/licenses",
      "method": "listAudioLicenses",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "List audio licenses",
      "parameters": [
        {
          "name": "audioId",
          "schema": "string",
          "description": "Show licenses for the specified track ID",
          "example": "1"
        },
        {
          "name": "license",
          "schema": "string",
          "description": "Restrict results by license. Prepending a `-` sign will exclude results by license",
          "example": "48433107"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "newest"
        },
        {
          "name": "username",
          "schema": "string",
          "description": "Filter licenses by username of licensee",
          "example": "aUniqueUsername"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show licenses created on or after the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show licenses created before the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "downloadAvailability",
          "schema": "string",
          "description": "Filter licenses by download availability",
          "default": "all"
        },
        {
          "name": "teamHistory",
          "schema": "boolean",
          "description": "Set to true to see license history for all members of your team.",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of download events"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/licenses",
      "method": "licenseTracks",
      "httpMethod": "post",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "License audio tracks",
      "parameters": [
        {
          "name": "license",
          "schema": "string",
          "description": "License type",
          "example": "audio_platform"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that led to licensing this track",
          "example": "p5S6QwRikdFJTHXwsoiqTg"
        },
        {
          "name": "audio",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of audio license results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/licenses/{id}/downloads",
      "method": "redownloadTracks",
      "httpMethod": "post",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Download audio tracks",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "License ID",
          "example": "e123"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audio License URL object"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/moods",
      "method": "listMoods",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "List audio moods",
      "parameters": [
        {
          "name": "language",
          "schema": "string",
          "description": "Which language the moods will be returned in"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of audio moods"
        }
      ]
    },
    {
      "url": "/v2/audio/search",
      "method": "searchTracks",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Search for tracks",
      "parameters": [
        {
          "name": "artists",
          "schema": "array",
          "description": "Show tracks with one of the specified artist names or IDs"
        },
        {
          "name": "bpm",
          "schema": "integer",
          "description": "(Deprecated; use bpm_from and bpm_to instead) Show tracks with the specified beats per minute"
        },
        {
          "name": "bpmFrom",
          "schema": "integer",
          "description": "Show tracks with the specified beats per minute or faster",
          "example": 80
        },
        {
          "name": "bpmTo",
          "schema": "integer",
          "description": "Show tracks with the specified beats per minute or slower",
          "example": 120
        },
        {
          "name": "duration",
          "schema": "integer",
          "description": "Show tracks with the specified duration in seconds",
          "example": 180
        },
        {
          "name": "durationFrom",
          "schema": "integer",
          "description": "Show tracks with the specified duration or longer in seconds",
          "example": 30
        },
        {
          "name": "durationTo",
          "schema": "integer",
          "description": "Show tracks with the specified duration or shorter in seconds",
          "example": 180
        },
        {
          "name": "genre",
          "schema": "array",
          "description": "Show tracks with each of the specified genres; to get the list of genres, use `GET /v2/audio/genres`",
          "example": [
            "Classical",
            "Holiday"
          ]
        },
        {
          "name": "isInstrumental",
          "schema": "boolean",
          "description": "Show instrumental music only",
          "example": true
        },
        {
          "name": "instruments",
          "schema": "array",
          "description": "Show tracks with each of the specified instruments; to get the list of instruments, use `GET /v2/audio/instruments`",
          "example": [
            "Trumpet",
            "Percussion"
          ]
        },
        {
          "name": "moods",
          "schema": "array",
          "description": "Show tracks with each of the specified moods; to get the list of moods, use `GET /v2/audio/moods`",
          "example": [
            "Confident",
            "Playful"
          ]
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 1,
          "default": 20
        },
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces",
          "example": "drum"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "example": "score"
        },
        {
          "name": "sortOrder",
          "schema": "string",
          "description": "Sort order",
          "default": "desc"
        },
        {
          "name": "vocalDescription",
          "schema": "string",
          "description": "Show tracks with the specified vocal description (male, female)",
          "example": "female"
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "full",
          "default": "minimal"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Fields to display in the response; see the documentation for the fields parameter in the overview section"
        },
        {
          "name": "library",
          "schema": "string",
          "description": "Which library to search",
          "default": "premier"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Which language to search in"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audio search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/audio/{id}",
      "method": "getTrackDetails",
      "httpMethod": "get",
      "tag": "audio",
      "typeScriptTag": "audio",
      "description": "Get details about audio tracks",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Audio track ID",
          "example": 442583
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "full",
          "default": "full"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audio metadata"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/bulk_search/images",
      "method": "runMultipleSearches",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Run multiple image searches",
      "parameters": [
        {
          "name": "addedDate",
          "schema": "string",
          "description": "Show images added on the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "addedDateStart",
          "schema": "string",
          "description": "Show images added on or after the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "aspectRatioMin",
          "schema": "number",
          "description": "Show images with the specified aspect ratio or higher, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image",
          "example": 1.7778
        },
        {
          "name": "aspectRatioMax",
          "schema": "number",
          "description": "Show images with the specified aspect ratio or lower, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image",
          "example": 1.7778
        },
        {
          "name": "aspectRatio",
          "schema": "number",
          "description": "Show images with the specified aspect ratio, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image",
          "example": 1.7778
        },
        {
          "name": "addedDateEnd",
          "schema": "string",
          "description": "Show images added before the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "category",
          "schema": "string",
          "description": "Show images with the specified Shutterstock-defined category; specify a category name or ID"
        },
        {
          "name": "color",
          "schema": "string",
          "description": "Specify either a hexadecimal color in the format '4F21EA' or 'grayscale'; the API returns images that use similar colors",
          "example": "4F21EA"
        },
        {
          "name": "contributor",
          "schema": "array",
          "description": "Show images with the specified contributor names or IDs, allows multiple",
          "example": [
            "123456"
          ]
        },
        {
          "name": "contributorCountry",
          "schema": "undefined",
          "description": "Show images from contributors in one or more specified countries, or start with NOT to exclude a country from the search",
          "example": "US"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Fields to display in the response; see the documentation for the fields parameter in the overview section"
        },
        {
          "name": "height",
          "schema": "integer",
          "description": "(Deprecated; use height_from and height_to instead) Show images with the specified height"
        },
        {
          "name": "heightFrom",
          "schema": "integer",
          "description": "Show images with the specified height or larger, in pixels",
          "example": 1080
        },
        {
          "name": "heightTo",
          "schema": "integer",
          "description": "Show images with the specified height or smaller, in pixels",
          "example": 1080
        },
        {
          "name": "imageType",
          "schema": "array",
          "description": "Show images of the specified type",
          "example": "photo"
        },
        {
          "name": "keywordSafeSearch",
          "schema": "boolean",
          "description": "Hide results with potentially unsafe keywords",
          "default": true
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Set query and result language (uses Accept-Language header if not set)",
          "example": "fr"
        },
        {
          "name": "license",
          "schema": "array",
          "description": "Show only images with the specified license"
        },
        {
          "name": "model",
          "schema": "array",
          "description": "Show image results with the specified model IDs",
          "example": [
            "12345",
            "67890"
          ]
        },
        {
          "name": "orientation",
          "schema": "string",
          "description": "Show image results with horizontal or vertical orientation",
          "example": "vertical"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 10,
          "default": 20
        },
        {
          "name": "peopleModelReleased",
          "schema": "boolean",
          "description": "Show images of people with a signed model release",
          "example": true
        },
        {
          "name": "peopleAge",
          "schema": "string",
          "description": "Show images that feature people of the specified age category",
          "example": "20s"
        },
        {
          "name": "peopleEthnicity",
          "schema": "array",
          "description": "Show images with people of the specified ethnicities, or start with NOT to show images without those ethnicities",
          "example": "hispanic"
        },
        {
          "name": "peopleGender",
          "schema": "string",
          "description": "Show images with people of the specified gender",
          "example": "both"
        },
        {
          "name": "peopleNumber",
          "schema": "integer",
          "description": "Show images with the specified number of people",
          "example": 2
        },
        {
          "name": "region",
          "schema": "undefined",
          "description": "Raise or lower search result rankings based on the result's relevance to a specified region; you can provide a country code or an IP address from which the API infers a country",
          "example": "US"
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Enable or disable safe search",
          "default": true
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "popular"
        },
        {
          "name": "spellcheckQuery",
          "schema": "boolean",
          "description": "Spellcheck the search query and return results on suggested spellings",
          "default": true
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        },
        {
          "name": "width",
          "schema": "integer",
          "description": "(Deprecated; use width_from and width_to instead) Show images with the specified width"
        },
        {
          "name": "widthFrom",
          "schema": "integer",
          "description": "Show images with the specified width or larger, in pixels",
          "example": 1920
        },
        {
          "name": "widthTo",
          "schema": "integer",
          "description": "Show images with the specified width or smaller, in pixels",
          "example": 1920
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of search results for each given query"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/catalog/collections",
      "method": "listCollections",
      "httpMethod": "get",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "List catalog collections",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 20,
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "newest"
        },
        {
          "name": "shared",
          "schema": "boolean",
          "description": "Set to true to omit collections that you own and return only collections  that are shared with you",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of catalog collections"
        },
        {
          "statusCode": "400",
          "description": "Invalid status value"
        }
      ]
    },
    {
      "url": "/v2/catalog/collections",
      "method": "createCollection",
      "httpMethod": "post",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Create catalog collections",
      "parameters": [
        {
          "name": "items",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": false,
          "description": "",
          "default": "private"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Catalog collection"
        }
      ]
    },
    {
      "url": "/v2/catalog/collections/{collection_id}",
      "method": "deleteCollection",
      "httpMethod": "delete",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Delete catalog collections",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to delete",
          "example": "126351028"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "OK"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/catalog/collections/{collection_id}",
      "method": "updateCollectionMetadata",
      "httpMethod": "patch",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Update collection metadata",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "ID of collection that needs to be modified",
          "example": "126351028"
        },
        {
          "name": "cover_asset",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Catalog collection"
        }
      ]
    },
    {
      "url": "/v2/catalog/collections/{collection_id}/items",
      "method": "removeItemsFromCollection",
      "httpMethod": "delete",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Remove items from catalog collection",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to remove assets from",
          "example": "126351028"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Catalog collection"
        }
      ]
    },
    {
      "url": "/v2/catalog/collections/{collection_id}/items",
      "method": "addToCollectionItems",
      "httpMethod": "post",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Add items to catalog collections",
      "parameters": [
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to add assets to",
          "example": "126351028"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Catalog collection"
        }
      ]
    },
    {
      "url": "/v2/catalog/search",
      "method": "searchAssets",
      "httpMethod": "get",
      "tag": "catalog",
      "typeScriptTag": "catalog",
      "description": "Search catalogs for assets",
      "parameters": [
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "newest"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 50,
          "default": 20
        },
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces",
          "example": "dogs on the beach"
        },
        {
          "name": "collectionId",
          "schema": "array",
          "description": "Filter by collection id",
          "example": [
            "123456",
            "456789",
            "13579"
          ]
        },
        {
          "name": "assetType",
          "schema": "array",
          "description": "Filter by asset type",
          "example": [
            "image",
            "editorial-image"
          ]
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of catalog collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/contributors",
      "method": "getDetailsMultiple",
      "httpMethod": "get",
      "tag": "contributors",
      "typeScriptTag": "contributors",
      "description": "Get details about multiple contributors",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "One or more contributor IDs",
          "example": [
            800506,
            1653538
          ]
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of contributor profiles"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/contributors/{contributor_id}",
      "method": "getDetails",
      "httpMethod": "get",
      "tag": "contributors",
      "typeScriptTag": "contributors",
      "description": "Get details about a single contributor",
      "parameters": [
        {
          "name": "contributorId",
          "schema": "string",
          "required": true,
          "description": "Contributor ID",
          "example": 1653538
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contributor profile data"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/contributors/{contributor_id}/collections",
      "method": "listCollections",
      "httpMethod": "get",
      "tag": "contributors",
      "typeScriptTag": "contributors",
      "description": "List contributors' collections",
      "parameters": [
        {
          "name": "contributorId",
          "schema": "string",
          "required": true,
          "description": "Contributor ID",
          "example": 800506
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of collections"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Contributor not found"
        }
      ]
    },
    {
      "url": "/v2/contributors/{contributor_id}/collections/{id}",
      "method": "getCollectionDetails",
      "httpMethod": "get",
      "tag": "contributors",
      "typeScriptTag": "contributors",
      "description": "Get details about contributors' collections",
      "parameters": [
        {
          "name": "contributorId",
          "schema": "string",
          "required": true,
          "description": "Contributor ID",
          "example": 800506
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID that belongs to the contributor",
          "example": 1991678
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about a collection of assets"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Set not found"
        }
      ]
    },
    {
      "url": "/v2/contributors/{contributor_id}/collections/{id}/items",
      "method": "getCollectionItems",
      "httpMethod": "get",
      "tag": "contributors",
      "typeScriptTag": "contributors",
      "description": "Get the items in contributors' collections",
      "parameters": [
        {
          "name": "contributorId",
          "schema": "string",
          "required": true,
          "description": "Contributor ID",
          "example": 800506
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID that belongs to the contributor",
          "example": 1991678
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of items in a collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Set not found"
        }
      ]
    },
    {
      "url": "/v2/cv/images",
      "method": "uploadImage",
      "httpMethod": "post",
      "tag": "computer_vision",
      "typeScriptTag": "computerVision",
      "description": "Upload images",
      "parameters": [
        {
          "name": "base64_image",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "BASE64_IMAGE"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Asset upload information"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "413",
          "description": "Payload Too Large"
        },
        {
          "statusCode": "415",
          "description": "Unsupported Media Type"
        }
      ]
    },
    {
      "url": "/v2/cv/keywords",
      "method": "listSuggestedKeywords",
      "httpMethod": "get",
      "tag": "computer_vision",
      "typeScriptTag": "computerVision",
      "description": "List suggested keywords",
      "parameters": [
        {
          "name": "assetId",
          "schema": "undefined",
          "required": true,
          "description": "The asset ID or upload ID to suggest keywords for",
          "example": "U6ba16262e3bc2db470b8e3cfa8aaab25"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of keywords"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "415",
          "description": "Unsupported Media Type"
        }
      ]
    },
    {
      "url": "/v2/cv/similar/images",
      "method": "listSimilarImages",
      "httpMethod": "get",
      "tag": "computer_vision",
      "typeScriptTag": "computerVision",
      "description": "List similar images",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID or upload ID to find similar images for",
          "example": "U6ba16262e3bc2db470b8e3cfa8aaab25"
        },
        {
          "name": "license",
          "schema": "array",
          "description": "Show only images with the specified license",
          "default": [
            "commercial"
          ]
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Enable or disable safe search",
          "default": true
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Image search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/cv/similar/videos",
      "method": "listSimilarVideos",
      "httpMethod": "get",
      "tag": "computer_vision",
      "typeScriptTag": "computerVision",
      "description": "List similar videos",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": true,
          "description": "The asset ID or upload ID to find similar videos for",
          "example": "U6ba16262e3bc2db470b8e3cfa8aaab25"
        },
        {
          "name": "license",
          "schema": "array",
          "description": "Show only videos with the specified license",
          "default": [
            "commercial"
          ]
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Enable or disable safe search",
          "default": true
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Video search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/categories",
      "method": "listCategories",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) List editorial categories",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial categories"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/categories",
      "method": "listCategories",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "List editorial categories",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial categories"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/licenses",
      "method": "listLicenses",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "List editorial image licenses",
      "parameters": [
        {
          "name": "imageId",
          "schema": "string",
          "description": "Show licenses for the specified editorial image ID",
          "example": "12345678"
        },
        {
          "name": "license",
          "schema": "string",
          "description": "Show editorial images that are available with the specified license name",
          "example": "premier_editorial_all_digital"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "newest"
        },
        {
          "name": "username",
          "schema": "string",
          "description": "Filter licenses by username of licensee",
          "example": "aUniqueUsername"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show licenses created on or after the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show licenses created before the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "downloadAvailability",
          "schema": "string",
          "description": "Filter licenses by download availability",
          "default": "all"
        },
        {
          "name": "teamHistory",
          "schema": "boolean",
          "description": "Set to true to see license history for all members of your team.",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of download events"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/licenses",
      "method": "licenseContent",
      "httpMethod": "post",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "License editorial content",
      "parameters": [
        {
          "name": "country",
          "schema": "undefined",
          "required": true,
          "description": "",
          "example": "USA"
        },
        {
          "name": "editorial",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial license results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/livefeeds",
      "method": "listLivefeedImages",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "Get editorial livefeed list",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only livefeeds that are available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial livefeeds"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/livefeeds/{id}",
      "method": "getLivefeedImages",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "Get editorial livefeed",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial livefeed ID; must be an URI encoded string",
          "example": "2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the livefeed is available for distribution in a certain country",
          "example": "USA"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about editorial livefeed"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/livefeeds/{id}/items",
      "method": "getLivefeedItems",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "Get editorial livefeed items",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial livefeed ID; must be an URI encoded string",
          "example": "2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the livefeed items are available for distribution in a certain country",
          "example": "USA"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/search",
      "method": "search",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "Search editorial images",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces",
          "example": "The Academy Awards"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "relevant"
        },
        {
          "name": "category",
          "schema": "string",
          "description": "Show editorial content with each of the specified editorial categories; specify category names in a comma-separated list",
          "example": "Alone,Performing"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Show only editorial content that is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "supplierCode",
          "schema": "array",
          "description": "Show only editorial content from certain suppliers"
        },
        {
          "name": "dateStart",
          "schema": "string",
          "description": "Show only editorial content generated on or after a specific date",
          "example": "2020-05-29T00:00:00.000Z"
        },
        {
          "name": "dateEnd",
          "schema": "string",
          "description": "Show only editorial content generated on or before a specific date",
          "example": "2021-05-29T00:00:00.000Z"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "The cursor of the page with which to start fetching results; this cursor is returned from previous requests",
          "example": "eyJ2IjoxLCJzIjoxfQ=="
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Editorial search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/updated",
      "method": "listUpdatedContent",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "List updated content",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Specify `addition` to return only images that were added or `edit` to return only images that were edited or deleted",
          "example": "edit"
        },
        {
          "name": "dateUpdatedStart",
          "schema": "string",
          "required": true,
          "description": "Show images images added, edited, or deleted after the specified date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00.",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "dateUpdatedEnd",
          "schema": "string",
          "required": true,
          "description": "Show images images added, edited, or deleted before the specified date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00.",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "dateTakenStart",
          "schema": "string",
          "description": "Show images that were taken on or after the specified date; use this parameter if you want recently created images from the collection instead of updated older assets",
          "example": "2020-02-04T00:00:00.000Z"
        },
        {
          "name": "dateTakenEnd",
          "schema": "string",
          "description": "Show images that were taken before the specified date",
          "example": "2020-02-05T00:00:00.000Z"
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "The cursor of the page with which to start fetching results; this cursor is returned from previous requests",
          "example": "eyJ2IjoxLCJzIjoyfQ=="
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "example": "newest",
          "default": "newest"
        },
        {
          "name": "supplierCode",
          "schema": "array",
          "description": "Show only editorial content from certain suppliers",
          "example": "ABC"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Show only editorial content that is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 200,
          "default": 500
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Editorial updated results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/images/{id}",
      "method": "getImageDetails",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "Get editorial content details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial ID",
          "example": "9926131a"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the content is available for distribution in a certain country",
          "example": "USA"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about editorial content"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/editorial/licenses",
      "method": "licenseContent",
      "httpMethod": "post",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) License editorial content",
      "parameters": [
        {
          "name": "country",
          "schema": "undefined",
          "required": true,
          "description": "",
          "example": "USA"
        },
        {
          "name": "editorial",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial license results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/livefeeds",
      "method": "getLivefeedList",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) Get editorial livefeed list",
      "parameters": [
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only livefeeds that are available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial livefeeds"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/livefeeds/{id}",
      "method": "getLivefeedItems",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) Get editorial livefeed",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial livefeed ID; must be an URI encoded string",
          "example": "2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the livefeed is available for distribution in a certain country",
          "example": "USA"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about editorial livefeed"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/livefeeds/{id}/items",
      "method": "getLivefeedItems",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) Get editorial livefeed items",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial livefeed ID; must be an URI encoded string",
          "example": "2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the livefeed items are available for distribution in a certain country",
          "example": "USA"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/search",
      "method": "searchContent",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) Search editorial content",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "relevant"
        },
        {
          "name": "category",
          "schema": "string",
          "description": "Show editorial content within a certain editorial category; specify by category name"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Show only editorial content that is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "supplierCode",
          "schema": "array",
          "description": "Show only editorial content from certain suppliers"
        },
        {
          "name": "dateStart",
          "schema": "string",
          "description": "Show only editorial content generated on or after a specific date"
        },
        {
          "name": "dateEnd",
          "schema": "string",
          "description": "Show only editorial content generated on or before a specific date"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "The cursor of the page with which to start fetching results; this cursor is returned from previous requests"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Editorial search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/updated",
      "method": "listUpdatedContent",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) List updated content",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Specify `addition` to return only images that were added or `edit` to return only images that were edited or deleted",
          "example": "edit"
        },
        {
          "name": "dateUpdatedStart",
          "schema": "string",
          "required": true,
          "description": "Show images images added, edited, or deleted after the specified date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00.",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "dateUpdatedEnd",
          "schema": "string",
          "required": true,
          "description": "Show images images added, edited, or deleted before the specified date. Acceptable range is 1970-01-01T00:00:01 to 2038-01-19T00:00:00.",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "dateTakenStart",
          "schema": "string",
          "description": "Show images that were taken on or after the specified date; use this parameter if you want recently created images from the collection instead of updated older assets",
          "example": "2020-02-04T00:00:00.000Z"
        },
        {
          "name": "dateTakenEnd",
          "schema": "string",
          "description": "Show images that were taken before the specified date",
          "example": "2020-02-05T00:00:00.000Z"
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "The cursor of the page with which to start fetching results; this cursor is returned from previous requests",
          "example": "eyJ2IjoxLCJzIjoyfQ=="
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "example": "newest",
          "default": "newest"
        },
        {
          "name": "supplierCode",
          "schema": "array",
          "description": "Show only editorial content from certain suppliers",
          "example": "ABC"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Show only editorial content that is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 200,
          "default": 500
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Editorial updated results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/videos/categories",
      "method": "listVideoCategories",
      "httpMethod": "get",
      "tag": "editorial_video",
      "typeScriptTag": "editorialVideo",
      "description": "List editorial video categories",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial video categories"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/videos/licenses",
      "method": "listVideoLicenses",
      "httpMethod": "get",
      "tag": "editorial_video",
      "typeScriptTag": "editorialVideo",
      "description": "List editorial video licenses",
      "parameters": [
        {
          "name": "videoId",
          "schema": "string",
          "description": "Show licenses for the specified editorial video ID",
          "example": "12345678"
        },
        {
          "name": "license",
          "schema": "string",
          "description": "Show editorial videos that are available with the specified license name",
          "example": "premier_editorial_all_media"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "newest"
        },
        {
          "name": "username",
          "schema": "string",
          "description": "Filter licenses by username of licensee",
          "example": "aUniqueUsername"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show licenses created on or after the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show licenses created before the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "downloadAvailability",
          "schema": "string",
          "description": "Filter licenses by download availability",
          "default": "all"
        },
        {
          "name": "teamHistory",
          "schema": "boolean",
          "description": "Set to true to see license history for all members of your team.",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of download events"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/videos/licenses",
      "method": "licenseVideos",
      "httpMethod": "post",
      "tag": "editorial_video",
      "typeScriptTag": "editorialVideo",
      "description": "License editorial video content",
      "parameters": [
        {
          "name": "country",
          "schema": "undefined",
          "required": true,
          "description": "",
          "example": "USA"
        },
        {
          "name": "editorial",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of editorial license results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/editorial/videos/search",
      "method": "searchVideoContent",
      "httpMethod": "get",
      "tag": "editorial_video",
      "typeScriptTag": "editorialVideo",
      "description": "Search editorial video content",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces",
          "example": "The Academy Awards"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "relevant"
        },
        {
          "name": "category",
          "schema": "string",
          "description": "Show editorial content with each of the specified editorial categories; specify category names in a comma-separated list",
          "example": "Alone,Performing"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Show only editorial video content that is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "supplierCode",
          "schema": "array",
          "description": "Show only editorial video content from certain suppliers"
        },
        {
          "name": "dateStart",
          "schema": "string",
          "description": "Show only editorial video content generated on or after a specific date",
          "example": "2020-05-29T00:00:00.000Z"
        },
        {
          "name": "dateEnd",
          "schema": "string",
          "description": "Show only editorial video content generated on or before a specific date",
          "example": "2021-05-29T00:00:00.000Z"
        },
        {
          "name": "resolution",
          "schema": "string",
          "description": "Show only editorial video content with specific resolution",
          "example": "4k"
        },
        {
          "name": "fps",
          "schema": "number",
          "description": "Show only editorial video content generated with specific frames per second",
          "example": 24
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "cursor",
          "schema": "string",
          "description": "The cursor of the page with which to start fetching results; this cursor is returned from previous requests",
          "example": "eyJ2IjoxLCJzIjoxfQ=="
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Editorial search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/videos/{id}",
      "method": "getContentDetails",
      "httpMethod": "get",
      "tag": "editorial_video",
      "typeScriptTag": "editorialVideo",
      "description": "Get editorial video content details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial ID",
          "example": "9926131a"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the content is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about editorial content"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "406",
          "description": "Not Acceptable"
        }
      ]
    },
    {
      "url": "/v2/editorial/{id}",
      "method": "getDetails",
      "httpMethod": "get",
      "tag": "editorial_images",
      "typeScriptTag": "editorialImages",
      "description": "(Deprecated) Get editorial content details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Editorial ID",
          "example": "9926131a"
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Returns only if the content is available for distribution in a certain country",
          "example": "USA"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about editorial content"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not Found"
        }
      ]
    },
    {
      "url": "/v2/images",
      "method": "listInfo",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List images",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "One or more image IDs",
          "example": [
            "1110335168",
            "465011609"
          ]
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "minimal",
          "default": "minimal"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of images"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images",
      "method": "uploadImageEphemeral",
      "httpMethod": "post",
      "tag": "computer_vision",
      "typeScriptTag": "computerVision",
      "description": "Upload ephemeral images",
      "parameters": [
        {
          "name": "base64_image",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "BASE64_IMAGE"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Image upload information"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "413",
          "description": "Payload Too Large"
        }
      ]
    },
    {
      "url": "/v2/images/categories",
      "method": "listCategories",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List image categories",
      "parameters": [
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of categories that images can belong to"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/collections",
      "method": "listCollections",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List image collections",
      "parameters": [
        {
          "name": "embed",
          "schema": "array",
          "description": "Which sharing information to include in the response, such as a URL to the collection",
          "example": "share_code"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 2,
          "default": 100
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of collections"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/collections",
      "method": "createCollection",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Create image collections",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Collection creation response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/collections/featured",
      "method": "listFeaturedCollections",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List featured image collections",
      "parameters": [
        {
          "name": "embed",
          "schema": "string",
          "description": "Which sharing information to include in the response, such as a URL to the collection",
          "example": "share_url"
        },
        {
          "name": "type",
          "schema": "array",
          "description": "The types of collections to return",
          "example": [
            "photo"
          ]
        },
        {
          "name": "assetHint",
          "schema": "string",
          "description": "Cover image size",
          "example": "1x",
          "default": "1x"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of featured collections"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/collections/featured/{id}",
      "method": "featuredCollectionDetails",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get the details of featured image collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "136351027"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "Which sharing information to include in the response, such as a URL to the collection"
        },
        {
          "name": "assetHint",
          "schema": "string",
          "description": "Cover image size",
          "default": "1x"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about a featured collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Featured collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/featured/{id}/items",
      "method": "getCollectionItems",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get the contents of featured image collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "136351027"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of items in a collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Featured collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/{id}",
      "method": "deleteCollection",
      "httpMethod": "delete",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Delete image collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "136351027"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully deleted collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/{id}",
      "method": "getCollectionDetails",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get the details of image collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "126351027"
        },
        {
          "name": "embed",
          "schema": "array",
          "description": "Which sharing information to include in the response, such as a URL to the collection"
        },
        {
          "name": "shareCode",
          "schema": "string",
          "description": "Code to retrieve a shared collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about a collection of assets"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/{id}",
      "method": "renameCollection",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Rename image collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "126351027"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully updated collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/{id}/items",
      "method": "removeFromCollection",
      "httpMethod": "delete",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Remove images from collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "126351027"
        },
        {
          "name": "itemId",
          "schema": "array",
          "description": "One or more image IDs to remove from the collection"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully removed collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/{id}/items",
      "method": "getCollectionItems",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get the contents of image collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "126351027"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        },
        {
          "name": "shareCode",
          "schema": "string",
          "description": "Code to retrieve the contents of a shared collection"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "oldest"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of items in a collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/collections/{id}/items",
      "method": "addToCollectionItems",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Add images to collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "126351027"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully added collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/images/licenses",
      "method": "listLicenses",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List image licenses",
      "parameters": [
        {
          "name": "imageId",
          "schema": "string",
          "description": "Show licenses for the specified image ID",
          "example": "12345678"
        },
        {
          "name": "license",
          "schema": "string",
          "description": "Show images that are available with the specified license, such as `standard` or `enhanced`; prepending a `-` sign excludes results from that license",
          "example": "standard"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "newest"
        },
        {
          "name": "username",
          "schema": "string",
          "description": "Filter licenses by username of licensee",
          "example": "aUniqueUsername"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show licenses created on or after the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show licenses created before the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "downloadAvailability",
          "schema": "string",
          "description": "Filter licenses by download availability",
          "default": "all"
        },
        {
          "name": "teamHistory",
          "schema": "boolean",
          "description": "Set to true to see license history for all members of your team.",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of download events"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/licenses",
      "method": "licenseImagesForMultiple",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "License images",
      "parameters": [
        {
          "name": "subscriptionId",
          "schema": "string",
          "description": "Subscription ID to use to license the image"
        },
        {
          "name": "format",
          "schema": "string",
          "description": "(Deprecated) Image format"
        },
        {
          "name": "size",
          "schema": "string",
          "description": "Image size",
          "default": "huge"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "Search ID that was provided in the results of an image search"
        },
        {
          "name": "images",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of information about licensed images"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/licenses/{id}/downloads",
      "method": "redownloadLicense",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Download images",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "License ID",
          "example": "e123"
        },
        {
          "name": "auth_cookie",
          "schema": "object",
          "description": "",
          "example": {
            "name": "The name of the cookie",
            "value": "The value of the cookie"
          }
        },
        {
          "name": "show_modal",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "size",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verification_code",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "URL object"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/recommendations",
      "method": "listRecommendedImages",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List recommended images",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "Image IDs",
          "example": [
            465011609
          ]
        },
        {
          "name": "maxItems",
          "schema": "integer",
          "description": "Maximum number of results returned in the response",
          "default": 20
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Restrict results to safe images",
          "default": true
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of recommended images"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/search",
      "method": "searchImages",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Search for images",
      "parameters": [
        {
          "name": "addedDate",
          "schema": "string",
          "description": "Show images added on the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "addedDateStart",
          "schema": "string",
          "description": "Show images added on or after the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "aspectRatioMin",
          "schema": "number",
          "description": "Show images with the specified aspect ratio or higher, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image",
          "example": 1.7778
        },
        {
          "name": "aspectRatioMax",
          "schema": "number",
          "description": "Show images with the specified aspect ratio or lower, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image",
          "example": 1.7778
        },
        {
          "name": "aspectRatio",
          "schema": "number",
          "description": "Show images with the specified aspect ratio, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image",
          "example": 1.7778
        },
        {
          "name": "aiSearch",
          "schema": "boolean",
          "description": "Set to true and specify the `ai_objective` and `ai_industry` parameters to use AI-powered search; the API returns information about how well images meet the objective for the industry "
        },
        {
          "name": "aiLabelsLimit",
          "schema": "integer",
          "description": "For AI-powered search, specify the maximum number of labels to return",
          "default": 20
        },
        {
          "name": "aiIndustry",
          "schema": "string",
          "description": "For AI-powered search, specify the industry to target; requires that the `ai_search` parameter is set to true"
        },
        {
          "name": "aiObjective",
          "schema": "string",
          "description": "For AI-powered search, specify the goal of the media; requires that the `ai_search` parameter is set to true"
        },
        {
          "name": "addedDateEnd",
          "schema": "string",
          "description": "Show images added before the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "category",
          "schema": "string",
          "description": "Show images with the specified Shutterstock-defined category; specify a category name or ID"
        },
        {
          "name": "color",
          "schema": "string",
          "description": "Specify either a hexadecimal color in the format '4F21EA' or 'grayscale'; the API returns images that use similar colors",
          "example": "4F21EA"
        },
        {
          "name": "contributor",
          "schema": "array",
          "description": "Show images with the specified contributor names or IDs, allows multiple",
          "example": [
            "123456"
          ]
        },
        {
          "name": "contributorCountry",
          "schema": "undefined",
          "description": "Show images from contributors in one or more specified countries, or start with NOT to exclude a country from the search",
          "example": "US"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": "Fields to display in the response; see the documentation for the fields parameter in the overview section"
        },
        {
          "name": "height",
          "schema": "integer",
          "description": "(Deprecated; use height_from and height_to instead) Show images with the specified height"
        },
        {
          "name": "heightFrom",
          "schema": "integer",
          "description": "Show images with the specified height or larger, in pixels",
          "example": 1080
        },
        {
          "name": "heightTo",
          "schema": "integer",
          "description": "Show images with the specified height or smaller, in pixels",
          "example": 1080
        },
        {
          "name": "imageType",
          "schema": "array",
          "description": "Show images of the specified type",
          "example": "photo"
        },
        {
          "name": "keywordSafeSearch",
          "schema": "boolean",
          "description": "Hide results with potentially unsafe keywords",
          "default": true
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Set query and result language (uses Accept-Language header if not set)",
          "example": "fr"
        },
        {
          "name": "license",
          "schema": "array",
          "description": "Show only images with the specified license"
        },
        {
          "name": "model",
          "schema": "array",
          "description": "Show image results with the specified model IDs",
          "example": [
            "12345",
            "67890"
          ]
        },
        {
          "name": "orientation",
          "schema": "string",
          "description": "Show image results with horizontal or vertical orientation",
          "example": "vertical"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "example": 1,
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 50,
          "default": 20
        },
        {
          "name": "peopleModelReleased",
          "schema": "boolean",
          "description": "Show images of people with a signed model release",
          "example": true
        },
        {
          "name": "peopleAge",
          "schema": "string",
          "description": "Show images that feature people of the specified age category",
          "example": "20s"
        },
        {
          "name": "peopleEthnicity",
          "schema": "array",
          "description": "Show images with people of the specified ethnicities, or start with NOT to show images without those ethnicities",
          "example": "hispanic"
        },
        {
          "name": "peopleGender",
          "schema": "string",
          "description": "Show images with people of the specified gender",
          "example": "both"
        },
        {
          "name": "peopleNumber",
          "schema": "integer",
          "description": "Show images with the specified number of people",
          "example": 2
        },
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces; you can use NOT to filter out images that match a term",
          "example": "dogs on the beach"
        },
        {
          "name": "region",
          "schema": "undefined",
          "description": "Raise or lower search result rankings based on the result's relevance to a specified region; you can provide a country code or an IP address from which the API infers a country",
          "example": "US"
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Enable or disable safe search",
          "default": true
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "default": "popular"
        },
        {
          "name": "spellcheckQuery",
          "schema": "boolean",
          "description": "Spellcheck the search query and return results on suggested spellings",
          "default": true
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        },
        {
          "name": "width",
          "schema": "integer",
          "description": "(Deprecated; use width_from and width_to instead) Show images with the specified width"
        },
        {
          "name": "widthFrom",
          "schema": "integer",
          "description": "Show images with the specified width or larger, in pixels",
          "example": 1920
        },
        {
          "name": "widthTo",
          "schema": "integer",
          "description": "Show images with the specified width or smaller, in pixels",
          "example": 1920
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Image search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/search/suggestions",
      "method": "getSearchSuggestions",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get suggestions for a search term",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Search term for which you want keyword suggestions",
          "example": "cats"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Limit the number of suggestions",
          "default": 10
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of search suggestions"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/search/suggestions",
      "method": "extractKeywordsFromText",
      "httpMethod": "post",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get keywords from text",
      "parameters": [
        {
          "name": "text",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "TEXT"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The response to a request for keyword analysis"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/updated",
      "method": "listUpdatedContent",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List updated images",
      "parameters": [
        {
          "name": "type",
          "schema": "array",
          "description": "Show images that were added, deleted, or edited; by default, the endpoint returns images that were updated in any of these ways",
          "example": "addition"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show images updated on or after the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show images updated before the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "interval",
          "schema": "string",
          "description": "Show images updated in the specified time period, where the time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR, or 30 MINUTE; the default is 1 HOUR, which shows images that were updated in the hour preceding the request",
          "default": "1 HOUR"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "newest"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of updated media"
        }
      ]
    },
    {
      "url": "/v2/images/{id}",
      "method": "getDetails",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "Get details about images",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Image ID",
          "example": "465011609"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "full"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about an image"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/images/{id}/similar",
      "method": "listSimilarImages",
      "httpMethod": "get",
      "tag": "images",
      "typeScriptTag": "images",
      "description": "List similar images",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Image ID",
          "example": "465011609"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Image search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/oauth/access_token",
      "method": "getUserAccessToken",
      "httpMethod": "post",
      "tag": "oauth",
      "typeScriptTag": "oauth",
      "description": "Get access tokens",
      "parameters": [
        {
          "name": "client_id",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "CLIENT_ID"
        },
        {
          "name": "client_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expires",
          "schema": "boolean",
          "required": false,
          "description": "",
          "default": false
        },
        {
          "name": "grant_type",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "GRANT_TYPE"
        },
        {
          "name": "realm",
          "schema": "string",
          "required": false,
          "description": "",
          "default": "customer"
        },
        {
          "name": "refresh_token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Access token response to client apps"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/oauth/authorize",
      "method": "authorizeApplications",
      "httpMethod": "get",
      "tag": "oauth",
      "typeScriptTag": "oauth",
      "description": "Authorize applications",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "Client ID (Consumer Key) of your application",
          "example": "6d097450b209c6dcd859"
        },
        {
          "name": "realm",
          "schema": "string",
          "description": "User type to be authorized (usually 'customer')",
          "example": "customer",
          "default": "customer"
        },
        {
          "name": "redirectUri",
          "schema": "string",
          "required": true,
          "description": "The callback URI to send the request to after authorization; must use a host name that is registered with your application",
          "example": "localhost"
        },
        {
          "name": "responseType",
          "schema": "string",
          "required": true,
          "description": "Type of temporary authorization code that will be used to generate an access code; the only valid value is 'code'",
          "example": "code"
        },
        {
          "name": "scope",
          "schema": "string",
          "description": "Space-separated list of scopes to be authorized",
          "example": "user.view",
          "default": "user.view"
        },
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": "Unique value used by the calling app to verify the request",
          "example": "1540290465000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OK"
        },
        {
          "statusCode": "302",
          "description": "HTML redirect URL that contains the application authorization 'code'"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/sfx",
      "method": "listDetails",
      "httpMethod": "get",
      "tag": "sound_effects",
      "typeScriptTag": "soundEffects",
      "description": "List details about sound effects",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "One or more sound effect IDs",
          "example": [
            "1110335168",
            "465011609"
          ]
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "minimal",
          "default": "minimal"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "cs"
        },
        {
          "name": "library",
          "schema": "string",
          "description": "Which library to fetch from",
          "example": "shutterstock"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of sound effects"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/sfx/licenses",
      "method": "listLicenses",
      "httpMethod": "get",
      "tag": "sound_effects",
      "typeScriptTag": "soundEffects",
      "description": "List sound effects licenses",
      "parameters": [
        {
          "name": "sfxId",
          "schema": "string",
          "description": "Show licenses for the specified sound effects ID",
          "example": "12345678"
        },
        {
          "name": "license",
          "schema": "string",
          "description": "Show sound effects that are available with the specified license, such as `standard` or `enhanced`; prepending a `-` sign excludes results from that license",
          "example": "standard"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "newest"
        },
        {
          "name": "username",
          "schema": "string",
          "description": "Filter licenses by username of licensee",
          "example": "aUniqueUsername"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show licenses created on or after the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show licenses created before the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "licenseId",
          "schema": "string",
          "description": "Filter by the license ID"
        },
        {
          "name": "downloadAvailability",
          "schema": "string",
          "description": "Filter licenses by download availability",
          "default": "all"
        },
        {
          "name": "teamHistory",
          "schema": "boolean",
          "description": "Set to true to see license history for all members of your team.",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of download events"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/sfx/licenses",
      "method": "licenseAssets",
      "httpMethod": "post",
      "tag": "sound_effects",
      "typeScriptTag": "soundEffects",
      "description": "License sound effects",
      "parameters": [
        {
          "name": "sound_effects",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of information about licensed sound effects"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/sfx/licenses/{id}/downloads",
      "method": "redownloadLicenses",
      "httpMethod": "post",
      "tag": "sound_effects",
      "typeScriptTag": "soundEffects",
      "description": "Download sound effects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "License ID",
          "example": "123"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Sound effect license URL object"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/sfx/search",
      "method": "searchSoundEffects",
      "httpMethod": "get",
      "tag": "sound_effects",
      "typeScriptTag": "soundEffects",
      "description": "Search for sound effects",
      "parameters": [
        {
          "name": "addedDate",
          "schema": "string",
          "description": "Show sound effects added on the specified date",
          "example": "2022-09-23T00:00:00.000Z"
        },
        {
          "name": "addedDateStart",
          "schema": "string",
          "description": "Show sound effects added on or after the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "addedDateEnd",
          "schema": "string",
          "description": "Show sound effects added before the specified date",
          "example": "2021-03-29T00:00:00.000Z"
        },
        {
          "name": "duration",
          "schema": "integer",
          "description": "Show sound effects with the specified duration in seconds",
          "example": 180
        },
        {
          "name": "durationFrom",
          "schema": "integer",
          "description": "Show sound effects with the specified duration or longer in seconds",
          "example": 30
        },
        {
          "name": "durationTo",
          "schema": "integer",
          "description": "Show sound effects with the specified duration or shorter in seconds",
          "example": 180
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "example": 1,
          "default": 20
        },
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces",
          "example": "drum"
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Enable or disable safe search",
          "default": true
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by",
          "example": "popular",
          "default": "popular"
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "full",
          "default": "minimal"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Set query and result language (uses Accept-Language header if not set)",
          "example": "cs"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Sound effects search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "503",
          "description": "Service Unavailable"
        }
      ]
    },
    {
      "url": "/v2/sfx/{id}",
      "method": "getDetails",
      "httpMethod": "get",
      "tag": "sound_effects",
      "typeScriptTag": "soundEffects",
      "description": "Get details about sound effects",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Audio track ID",
          "example": 442583
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "cs"
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "example": "full",
          "default": "minimal"
        },
        {
          "name": "library",
          "schema": "string",
          "description": "Which library to fetch from",
          "example": "shutterstock"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SFX metadata"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "503",
          "description": "Service Unavailable"
        }
      ]
    },
    {
      "url": "/v2/test",
      "method": "echoText",
      "httpMethod": "get",
      "tag": "test",
      "typeScriptTag": "test",
      "description": "Echo text",
      "parameters": [
        {
          "name": "text",
          "schema": "string",
          "description": "Text to echo",
          "default": "ok"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Text to echo in the response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/test/validate",
      "method": "inputValidation",
      "httpMethod": "get",
      "tag": "test",
      "typeScriptTag": "test",
      "description": "Validate input",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Integer ID",
          "example": 123
        },
        {
          "name": "tag",
          "schema": "array",
          "description": "List of tags"
        },
        {
          "name": "userAgent",
          "schema": "string",
          "description": "User agent"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Validation results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/user",
      "method": "getUserDetails",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get user details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "User details"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/user/access_token",
      "method": "getAccessTokenDetails",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "Get access token details",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Access token details that are currently associated with this user"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/user/subscriptions",
      "method": "listSubscriptions",
      "httpMethod": "get",
      "tag": "users",
      "typeScriptTag": "users",
      "description": "List user subscriptions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of subscriptions"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos",
      "method": "listVideo",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List videos",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "One or more video IDs",
          "example": [
            "639703",
            "993721"
          ]
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of videos"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/categories",
      "method": "listCategories",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List video categories",
      "parameters": [
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of categories that images can belong to"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/collections",
      "method": "listCollections",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List video collections",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        },
        {
          "name": "embed",
          "schema": "array",
          "description": "Which sharing information to include in the response, such as a URL to the collection",
          "example": "share_code"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of collections"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/collections",
      "method": "createVideoCollections",
      "httpMethod": "post",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Create video collections",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Collection creation response"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/featured",
      "method": "listFeaturedVideoCollections",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List featured video collections",
      "parameters": [
        {
          "name": "embed",
          "schema": "string",
          "description": "What information to include in the response, such as a URL to the collection",
          "example": "share_url"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of featured collections"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/featured/{id}",
      "method": "collectionDetailsGet",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Get the details of featured video collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "136351027"
        },
        {
          "name": "embed",
          "schema": "string",
          "description": "What information to include in the response, such as a URL to the collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about a featured collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Featured collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/featured/{id}/items",
      "method": "getFeaturedCollectionItems",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Get the contents of featured video collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "136351027"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of items in a collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Featured collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/{id}",
      "method": "deleteCollection",
      "httpMethod": "delete",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Delete video collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to delete",
          "example": "17555176"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully deleted collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/{id}",
      "method": "collectionDetailsGet",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Get the details of video collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to return",
          "example": "17555176"
        },
        {
          "name": "embed",
          "schema": "array",
          "description": "Which sharing information to include in the response, such as a URL to the collection"
        },
        {
          "name": "shareCode",
          "schema": "string",
          "description": "Code to retrieve a shared collection"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Metadata about a collection of assets"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/{id}",
      "method": "setNewName",
      "httpMethod": "post",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Rename video collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to rename",
          "example": "17555176"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "",
          "example": "NAME"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully updated collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/{id}/items",
      "method": "removeFromCollection",
      "httpMethod": "delete",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Remove videos from collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the Collection from which items will be deleted",
          "example": "17555176"
        },
        {
          "name": "itemId",
          "schema": "array",
          "description": "One or more video IDs to remove from the collection"
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully removed collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/{id}/items",
      "method": "getCollectionItems",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Get the contents of video collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Collection ID",
          "example": "17555176"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        },
        {
          "name": "shareCode",
          "schema": "string",
          "description": "Code to retrieve the contents of a shared collection"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort order",
          "default": "oldest"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of items in a collection"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/collections/{id}/items",
      "method": "addToCollectionItems",
      "httpMethod": "post",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Add videos to collections",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of the collection to which items should be added",
          "example": "17555176"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "204",
          "description": "Successfully added collection items"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Collection not found"
        }
      ]
    },
    {
      "url": "/v2/videos/licenses",
      "method": "listLicenses",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List video licenses",
      "parameters": [
        {
          "name": "videoId",
          "schema": "string",
          "description": "Show licenses for the specified video ID",
          "example": "12345678"
        },
        {
          "name": "license",
          "schema": "string",
          "description": "Show videos that are available with the specified license, such as `standard` or `enhanced`; prepending a `-` sign excludes results from that license",
          "example": "standard"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by oldest or newest videos first",
          "default": "newest"
        },
        {
          "name": "username",
          "schema": "string",
          "description": "Filter licenses by username of licensee",
          "example": "aUniqueUsername"
        },
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show licenses created on or after the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show licenses created before the specified date",
          "example": "2021-03-29T13:25:13.521Z"
        },
        {
          "name": "downloadAvailability",
          "schema": "string",
          "description": "Filter licenses by download availability",
          "default": "all"
        },
        {
          "name": "teamHistory",
          "schema": "boolean",
          "description": "Set to true to see license history for all members of your team.",
          "default": false
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of download events"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/licenses",
      "method": "licenseVideos",
      "httpMethod": "post",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "License videos",
      "parameters": [
        {
          "name": "subscriptionId",
          "schema": "string",
          "description": "The subscription ID to use for licensing",
          "example": "s12345678"
        },
        {
          "name": "size",
          "schema": "string",
          "description": "The size of the video to license",
          "default": "web"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The Search ID that led to this licensing event"
        },
        {
          "name": "videos",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of video license results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/licenses/{id}/downloads",
      "method": "redownloadDownloads",
      "httpMethod": "post",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Download videos",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The license ID of the item to (re)download. The download links in the response are valid for 8 hours.",
          "example": "e123"
        },
        {
          "name": "auth_cookie",
          "schema": "object",
          "description": "",
          "example": {
            "name": "The name of the cookie",
            "value": "The value of the cookie"
          }
        },
        {
          "name": "show_modal",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "size",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verification_code",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "URL object"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/search",
      "method": "searchVideo",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Search for videos",
      "parameters": [
        {
          "name": "addedDate",
          "schema": "string",
          "description": "Show videos added on the specified date",
          "example": "2020-05-29T00:00:00.000Z"
        },
        {
          "name": "addedDateStart",
          "schema": "string",
          "description": "Show videos added on or after the specified date",
          "example": "2020-05-29T00:00:00.000Z"
        },
        {
          "name": "addedDateEnd",
          "schema": "string",
          "description": "Show videos added before the specified date",
          "example": "2020-05-29T00:00:00.000Z"
        },
        {
          "name": "aspectRatio",
          "schema": "string",
          "description": "Show videos with the specified aspect ratio",
          "example": 43
        },
        {
          "name": "category",
          "schema": "string",
          "description": "Show videos with the specified Shutterstock-defined category; specify a category name or ID"
        },
        {
          "name": "contributor",
          "schema": "array",
          "description": "Show videos with the specified artist names or IDs",
          "example": "[12345678]"
        },
        {
          "name": "contributorCountry",
          "schema": "array",
          "description": "Show videos from contributors in one or more specified countries",
          "example": "US"
        },
        {
          "name": "duration",
          "schema": "integer",
          "description": "(Deprecated; use duration_from and duration_to instead) Show videos with the specified duration in seconds"
        },
        {
          "name": "durationFrom",
          "schema": "integer",
          "description": "Show videos with the specified duration or longer in seconds",
          "example": 60
        },
        {
          "name": "durationTo",
          "schema": "integer",
          "description": "Show videos with the specified duration or shorter in seconds",
          "example": 180
        },
        {
          "name": "fps",
          "schema": "number",
          "description": "(Deprecated; use fps_from and fps_to instead) Show videos with the specified frames per second"
        },
        {
          "name": "fpsFrom",
          "schema": "number",
          "description": "Show videos with the specified frames per second or more",
          "example": 24
        },
        {
          "name": "fpsTo",
          "schema": "number",
          "description": "Show videos with the specified frames per second or fewer",
          "example": 60
        },
        {
          "name": "keywordSafeSearch",
          "schema": "boolean",
          "description": "Hide results with potentially unsafe keywords",
          "default": true
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Set query and result language (uses Accept-Language header if not set)",
          "example": "cs"
        },
        {
          "name": "license",
          "schema": "array",
          "description": "Show only videos with the specified license or licenses",
          "example": [
            "commercial",
            "editorial"
          ]
        },
        {
          "name": "model",
          "schema": "array",
          "description": "Show videos with each of the specified models",
          "example": [
            "442583",
            "434750"
          ]
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "peopleAge",
          "schema": "string",
          "description": "Show videos that feature people of the specified age range",
          "example": "20s"
        },
        {
          "name": "peopleEthnicity",
          "schema": "array",
          "description": "Show videos with people of the specified ethnicities",
          "example": "hispanic"
        },
        {
          "name": "peopleGender",
          "schema": "string",
          "description": "Show videos with people with the specified gender",
          "example": "female"
        },
        {
          "name": "peopleNumber",
          "schema": "integer",
          "description": "Show videos with the specified number of people",
          "example": 2
        },
        {
          "name": "peopleModelReleased",
          "schema": "boolean",
          "description": "Show only videos of people with a signed model release",
          "example": true
        },
        {
          "name": "query",
          "schema": "string",
          "description": "One or more search terms separated by spaces; you can use NOT to filter out videos that match a term",
          "example": "dogs running on the beach"
        },
        {
          "name": "resolution",
          "schema": "string",
          "description": "Show videos with the specified resolution",
          "example": "4k"
        },
        {
          "name": "safe",
          "schema": "boolean",
          "description": "Enable or disable safe search",
          "default": true
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by one of these categories",
          "default": "popular"
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Video search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not found"
        }
      ]
    },
    {
      "url": "/v2/videos/search/suggestions",
      "method": "searchSuggestions",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Get suggestions for a search term",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Search term for which you want keyword suggestions",
          "example": "cats"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "Limit the number of the suggestions",
          "default": 10
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of search suggestions"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    },
    {
      "url": "/v2/videos/updated",
      "method": "listUpdatedVideos",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List updated videos",
      "parameters": [
        {
          "name": "startDate",
          "schema": "string",
          "description": "Show videos updated on or after the specified date",
          "example": "2020-05-29T00:00:00.000Z"
        },
        {
          "name": "endDate",
          "schema": "string",
          "description": "Show videos updated before the specified date",
          "example": "2021-05-29T00:00:00.000Z"
        },
        {
          "name": "interval",
          "schema": "string",
          "description": "Show videos updated in the specified time period, where the time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR, or 30 MINUTE; the default is 1 HOUR, which shows videos that were updated in the hour preceding the request",
          "default": "1 HOUR"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 100
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sort by oldest or newest videos first",
          "default": "newest"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of updated media"
        }
      ]
    },
    {
      "url": "/v2/videos/{id}",
      "method": "videoDetails",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "Get details about videos",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Video ID",
          "example": "639703"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "full"
        },
        {
          "name": "searchId",
          "schema": "string",
          "description": "The ID of the search that is related to this request",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information about a video"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        },
        {
          "statusCode": "404",
          "description": "Not found"
        }
      ]
    },
    {
      "url": "/v2/videos/{id}/similar",
      "method": "findSimilar",
      "httpMethod": "get",
      "tag": "videos",
      "typeScriptTag": "videos",
      "description": "List similar videos",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The ID of a video for which similar videos should be returned",
          "example": "2140697"
        },
        {
          "name": "language",
          "schema": "string",
          "description": "Language for the keywords and categories in the response",
          "example": "es"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number",
          "default": 1
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Number of results per page",
          "default": 20
        },
        {
          "name": "view",
          "schema": "string",
          "description": "Amount of detail to render in the response",
          "default": "minimal"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Video search results"
        },
        {
          "statusCode": "400",
          "description": "Bad Request"
        },
        {
          "statusCode": "401",
          "description": "Unauthorized"
        },
        {
          "statusCode": "403",
          "description": "Forbidden"
        }
      ]
    }
  ],
  "repositoryDescription": "Download the best royalty free images from Shutterstock, including photos, vectors, and illustrations. Enjoy straightforward pricing and simple licensing. Shutterstock's {language} SDK generated by Konfig (https://konfigthis.com/).",
  "originalSpecUrl": "https://api-explorer.shutterstock.com/openapi.json",
  "logo": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/shutterstock/logo.png",
  "openApiGitHubUi": "https://github.com/konfig-sdks/openapi-examples/tree/HEAD/shutterstock/openapi.yaml",
  "previewLinkImage": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/shutterstock/imagePreview.png",
  "faviconUrl": "https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/shutterstock/favicon.ico",
  "clientNameCamelCase": "shutterstock",
  "lastUpdated": "2024-03-13T02:25:22.175Z",
  "typescriptSdkUsageCode": "import { Shutterstock } from 'shutterstock-typescript-sdk';\n\nconst shutterstock = new Shutterstock({\n    username: \"USERNAME\",\n    password: \"PASSWORD\",\n    clientId: \"CLIENT_ID\",\n    clientSecret: \"CLIENT_SECRET\",\n    redirectUri: \"REDIRECT_URI\",\n})",
  "typescriptSdkFirstRequestCode": "// List computer audio descriptors\nconst listAudioDescriptorsResponse = shutterstock.customMusic.listAudioDescriptors({\n    renderSpeedOver: 5\n    bandId: \"Corporate Folk Bonfire Band 1\"\n    bandName: \"Documentary Underscore Heartfelt Band 1\"\n    page: 1\n    perPage: 1\n    id: \"documentary_underscore_heartfelt\"\n    instrumentName: \"Precision Bass - Full\"\n    instrumentId: \"direct_fluorescent_synth_lead\"\n    tempo: 90\n    tempoTo: 120\n    tempoFrom: 60\n    name: \"Corporate Pop Inspirational High Energy\"\n    tag: \"Cinematic\"\n})",
  "fixedSpecFileName": "shutterstock-fixed-spec.yaml"
}