openapi: 3.0.1
info:
  title: Revenium Metering API
  description: Revenium Metering API
  contact:
    name: Revenium
    url: https://revenium.io
    email: info@revenium.io
  version: 1.14.0-SNAPSHOT
externalDocs:
  description: Revenium Metering API
  url: https://revenium.io
servers:
  - url: https://api.revenium.io/meter/v1/api
    description: Revenium Metering API (Production)
security:
  - api_key: []
tags:
  - name: Events
    description: Event based metering operations
  - name: Metring
    description: Metering operations
paths:
  /users/{id}:
    get:
      tags:
        - Users
      summary: Retrieve a user
      description: Retrieve a user
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Users
      summary: Update a user
      description: Update a user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
        required: true
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Users
      summary: Delete a User
      description: Delete a User
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user has been deleted
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /users/{id}/deactivate:
    put:
      tags:
        - Users
      summary: Deactivate a user
      description: Deactivate a user
      operationId: deactivateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /users/{id}/activate:
    put:
      tags:
        - Users
      summary: Activate a user
      description: Activate a user
      operationId: activateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /traffic-anomalies/rules:
    put:
      tags:
        - Traffic Anomalies
      summary: Update a traffic anomaly rule
      description: Update a traffic anomaly rule
      operationId: updateTrafficAnomalyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrafficAnomalyRuleRequest'
        required: true
      responses:
        '201':
          description: The traffic anomaly rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomalyRuleView'
        '403':
          description: Forbidden to create traffic anomaly rules for this organization
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Traffic Anomalies
      summary: Create a traffic anomaly rule
      description: Create a traffic anomaly rule
      operationId: createTrafficAnomalyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrafficAnomalyRuleRequest'
        required: true
      responses:
        '201':
          description: The traffic anomaly rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomalyRuleView'
        '403':
          description: Forbidden to create traffic anomaly rules for this organization
          content:
            application/json:
              schema:
                type: object
  /tiers/{id}:
    get:
      tags:
        - Tiers
      summary: Get a tier
      description: Get a tier
      operationId: getTier
      parameters:
        - name: id
          in: path
          description: The tier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to access this tier
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Tiers
      summary: Update a tier
      description: Update a tier
      operationId: updateTier
      parameters:
        - name: id
          in: path
          description: The tier id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTierRequest'
        required: true
      responses:
        '200':
          description: The updated plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Tiers
      summary: Delete a tier
      description: Delete a tier
      operationId: deleteTier
      parameters:
        - name: id
          in: path
          description: The tier id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Tier not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /tenants/{id}:
    get:
      tags:
        - Tenants
      summary: Retrieve a tenant
      description: Retrieve a tenant
      operationId: getTenant
      parameters:
        - name: id
          in: path
          description: The tenant id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
    put:
      tags:
        - Tenants
      summary: Update a tenant
      description: Update a tenant
      operationId: updateTenants
      parameters:
        - name: id
          in: path
          description: The tenant id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantDto'
        required: true
      responses:
        '200':
          description: The updated tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
    delete:
      tags:
        - Tenants
      summary: Delete a tenant
      description: Delete a tenant
      operationId: deleteTenant
      parameters:
        - name: id
          in: path
          description: The tenant id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The tenant has been deleted
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /subscription-notification:
    put:
      tags:
        - Subscription Notifications
      summary: Update a subscriber notification
      description: Update a subscriber notification
      operationId: updateSubscriberNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberNotificationRequest'
        required: true
      responses:
        '200':
          description: The subscriber notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberNotificationView'
        '403':
          description: Forbidden to access this subscriber notification
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Subscriber notification not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Subscription Notifications
      summary: Create an subscriber notification
      description: Create an subscriber notification
      operationId: createSubscriberNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriberNotificationRequest'
        required: true
      responses:
        '201':
          description: The subscription notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberNotificationView'
        '403':
          description: Forbidden create a subscriber notification
          content:
            application/json:
              schema:
                type: object
  /stored-filters/{filterId}:
    get:
      tags:
        - Stored filters
      summary: Get an stored filter
      description: Get an stored filter
      operationId: getStoredFilterById
      parameters:
        - name: filterId
          in: path
          description: The stored filter id
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Stored filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
    put:
      tags:
        - Stored filters
      summary: Update an stored filter
      description: Update an stored filter
      operationId: updateStoredFilter
      parameters:
        - name: filterId
          in: path
          description: The stored filter id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoredFilterRequest'
        required: true
      responses:
        '200':
          description: The updated stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
    delete:
      tags:
        - Stored filters
      summary: Delete an stored filter
      description: Delete an stored filter
      operationId: deleteStoredFilter
      parameters:
        - name: organizationId
          in: query
          description: Id of asset's organization
          required: true
          schema:
            type: string
        - name: filterId
          in: path
          description: The stored filter id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Stored filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /sla-definitions/{id}:
    get:
      tags:
        - SLA Definitions
      summary: Retrieve a sla definition
      description: Retrieve a sla definition
      operationId: getSLADefinition
      parameters:
        - name: id
          in: path
          description: The sla definition id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The SLA Definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - SLA Definitions
      summary: Update an sla definition
      description: Update an sla definition
      operationId: updateSLADefinition
      parameters:
        - name: id
          in: path
          description: The sla definition id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSLADefinitionRequest'
        required: true
      responses:
        '200':
          description: The updated sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - SLA Definitions
      summary: Delete a sla definition
      description: Delete a sla definition
      operationId: deleteSLADefinition
      parameters:
        - name: id
          in: path
          description: The sla definition id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /sites:
    get:
      tags:
        - Sites
      summary: List sites
      description: List sites
      operationId: listSites
      parameters:
        - name: organizationId
          in: query
          description: Id of site's organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePageResponse'
        '403':
          description: Forbidden to list sites for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Sites
      summary: Update a site
      description: Update a site
      operationId: updateSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteRequest'
        required: true
      responses:
        '200':
          description: The site
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SiteView'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Sites
      summary: Create an site
      description: Create a site
      operationId: createSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteRequest'
        required: true
      responses:
        '201':
          description: The site
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SiteView'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                type: object
  /site-provider/configurations/{id}:
    get:
      tags:
        - Site Provider Configurations
      summary: Retrieve a site provider configuration
      description: Retrieve a site provider configuration
      operationId: getSiteProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The site provider configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The site provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to access this site provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Site provider configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Site Provider Configurations
      summary: Update a site provider configuration
      description: Update a siteprovider configuration
      operationId: updateSiteProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The site provider configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSiteConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated site provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to access this site provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Sitep rovider configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Site Provider Configurations
      summary: Delete an site configuration
      description: Delete an site configuration
      operationId: deleteSiteProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The sit eprovider configuration id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to delete this site provider configurations
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Site provider configuration not found
          content:
            application/json:
              schema:
                type: object
  /products/{id}:
    get:
      tags:
        - Products
      summary: Get a product
      description: Get a product
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Products
      summary: Update a product
      description: Update a product
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        '200':
          description: The updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Products
      summary: Delete a product
      description: Delete a product
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to delete this product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /products/{id}/remove-trial:
    put:
      tags:
        - Products
      summary: Remove trial from a product
      description: Remove trial from a product
      operationId: removeTrial
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to update this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /product/families/{id}:
    get:
      tags:
        - Product Family
      summary: Get an product family
      description: Get an product family
      operationId: getProductFamily
      parameters:
        - name: id
          in: path
          description: The product family id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to access this product family
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product family not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Product Family
      summary: Update an product family
      description: Update an product family
      operationId: updateProductFamily
      parameters:
        - name: id
          in: path
          description: The product family id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductFamilyRequest'
        required: true
      responses:
        '200':
          description: The updated product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Product Family
      summary: Delete a product family
      description: Delete a product family
      operationId: deleteProductFamily
      parameters:
        - name: id
          in: path
          description: The product family id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Product family not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /product-keys/{productKeyId}/upgrade-product-to/{productId}:
    put:
      tags:
        - Product Keys
      summary: Upgrade a product key's product
      description: Upgrade a product key's product
      operationId: upgradeProduct
      parameters:
        - name: productKeyId
          in: path
          description: The product key id
          required: true
          schema:
            type: string
        - name: productId
          in: path
          description: The product to upgrade the product key to
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/{productKeyId}/downgrade-product-to/{productId}:
    put:
      tags:
        - Product Keys
      summary: Downgrade a product key's product
      description: Downgrade a product key's product
      operationId: downgradeProductKey
      parameters:
        - name: productKeyId
          in: path
          description: The product key id
          required: true
          schema:
            type: string
        - name: productId
          in: path
          description: The product to downgrade the product key to
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/{id}:
    get:
      tags:
        - Product Keys
      summary: Retrieve a product key
      description: Retrieve a product key
      operationId: getProductKey_1
      parameters:
        - name: id
          in: path
          description: The product key id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyView'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Product Keys
      summary: Update a product key
      description: Update a product key
      operationId: updateProductKey
      parameters:
        - name: id
          in: path
          description: The Product Key ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductKeyRequest'
        required: true
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyView'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/reactivate/{productKeyId}:
    put:
      tags:
        - Product Keys
      summary: Reactivate a product key
      description: Reactivate a product key
      operationId: reactivateProductKey
      parameters:
        - name: productKeyId
          in: path
          description: The product key id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/force-reset/{productKeyId}:
    put:
      tags:
        - Product Keys
      summary: Force reset a product key
      description: Force reset a product key
      operationId: forceResetProductKey
      parameters:
        - name: productKeyId
          in: path
          description: The product key id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /pricing-rules/{ruleId}:
    get:
      tags:
        - Pricing Rules
      summary: Get a pricing rule
      description: Get a pricing rule
      operationId: getPricingRule
      parameters:
        - name: ruleId
          in: path
          description: The rule id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleView'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset or pricing rule not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Pricing Rules
      summary: Update a pricing rule
      description: Update a pricing rule
      operationId: updatePricingRule
      parameters:
        - name: ruleId
          in: path
          description: The rule id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricingRuleRequest'
        required: true
      responses:
        '201':
          description: The created pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleView'
        '403':
          description: Forbidden to create the pricing rule
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Pricing Rules
      summary: Delete a pricing rule
      description: Delete a pricing rule
      operationId: deletePricingRule
      parameters:
        - name: ruleId
          in: path
          description: The rule id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Pricing rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /plans/{id}:
    get:
      tags:
        - Plans
      summary: Get an plan
      description: Get an plan
      operationId: getPlan
      parameters:
        - name: id
          in: path
          description: The plan id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to access this plan
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Plans
      summary: Update an plan
      description: Update an plan
      operationId: updatePlan
      parameters:
        - name: id
          in: path
          description: The plan id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanRequest'
        required: true
      responses:
        '200':
          description: The updated plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Plans
      summary: Delete a plan
      description: Delete a plan
      operationId: deletePlan
      parameters:
        - name: id
          in: path
          description: The plan id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /plans/{id}/remove-trial:
    put:
      tags:
        - Plans
      summary: Remove trial from a plan
      description: Remove trial from a plan
      operationId: removeTrial_1
      parameters:
        - name: id
          in: path
          description: The plan id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to update this plan
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                type: object
  /plan-elements/{id}:
    get:
      tags:
        - Elements
      summary: Get an plan element
      description: Get an plan element
      operationId: getPlanElement
      parameters:
        - name: id
          in: path
          description: The plan element id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to access this plan element
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Elements
      summary: Update a plan element
      description: Update a plan element
      operationId: updatePlanElement
      parameters:
        - name: id
          in: path
          description: The plan element id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanElementRequest'
        required: true
      responses:
        '200':
          description: The updated plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Elements
      summary: Delete a plan element
      description: Delete a plan element
      operationId: deletePlanElement
      parameters:
        - name: id
          in: path
          description: The plan element id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /payment/pay/customer/{customerId}:
    put:
      tags:
        - Payment
      summary: Pay outstanding invoices
      description: Pay outstanding invoices
      operationId: payInvoices
      parameters:
        - name: customerId
          in: path
          description: Customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The client secret
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/force-reset/product/{productId}/user/{userId}:
    put:
      tags:
        - Payment
      summary: Force reset payment record and payment customer for testing
      description: Force reset payment record and payment customer for testing
      operationId: forceReset
      parameters:
        - name: productId
          in: path
          description: Product id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: string
  /payment/customers/{id}/pay:
    put:
      tags:
        - Payment Methods
      summary: Pay all outstanding invoices for payment customer
      description: Pay all outstanding invoices for payment customer
      operationId: Pay
      parameters:
        - name: id
          in: path
          description: The payment customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers/{customerId}/default/method/{methodId}:
    put:
      tags:
        - Payment Methods
      summary: Set default payment method for a payment customer
      description: Set default payment method for a payment customer
      operationId: setDefaultPaymentMethod
      parameters:
        - name: customerId
          in: path
          description: The payment customer id
          required: true
          schema:
            type: string
        - name: methodId
          in: path
          description: The default payment method id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers/force-reset/{id}:
    put:
      tags:
        - Payment Methods
      summary: Force reset payment customer for testing
      description: Force reset payment customer for testing
      operationId: forceResetById
      parameters:
        - name: id
          in: path
          description: The payment customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: string
  /payment/customers/force-reset/user/{userId}/configuration/{paymentConfigurationId}:
    put:
      tags:
        - Payment Methods
      summary: Force reset payment customer for testing
      description: Force reset payment customer for testing
      operationId: forceResetByUserAndConfiguration
      parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: string
        - name: paymentConfigurationId
          in: path
          description: Product Id
          required: true
          schema:
            type: string
      responses:
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: string
  /payment/configurations/{id}:
    get:
      tags:
        - Payment Configurations
      summary: Retrieve a payment configuration
      description: Retrieve a payment configuration
      operationId: getPaymentConfiguration
      parameters:
        - name: id
          in: path
          description: The payment configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to access this payment configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Payment configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Payment Configurations
      summary: Update a payment configuration
      description: Update a payment configuration
      operationId: updatePaymentConfiguration
      parameters:
        - name: id
          in: path
          description: The payment configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated payment configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to access this payment configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Payment configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Payment Configurations
      summary: Delete a payment configuration
      description: Delete a payment configuration
      operationId: deletePaymentConfiguration
      parameters:
        - name: id
          in: path
          description: The payment configuration id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this payment configurations
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Payment configuration not found
          content:
            application/json:
              schema:
                type: object
  /payment/complete-subscription/product/{productId}/user/{userId}:
    put:
      tags:
        - Payment
      summary: Get product key for payment
      description: Get product key for payment
      operationId: getProductKey
      parameters:
        - name: productId
          in: path
          description: Product Id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: string
        - name: applicationId
          in: query
          required: false
          schema:
            type: string
        - name: contractExternalId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Payment record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/cancel/product/{productId}/user/{userId}:
    put:
      tags:
        - Payment
      summary: Cancel payment
      description: Cancel payment
      operationId: cancelPayment
      parameters:
        - name: productId
          in: path
          description: Product Id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: string
      responses:
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /organizations/{id}:
    get:
      tags:
        - Organizations
      summary: Retrieve an organization
      description: Retrieve an organization
      operationId: getOrganization
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationView'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Organizations
      summary: Update an organization
      description: Update an organization
      operationId: updateOrganization
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationDto'
        required: true
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationView'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Organizations
      summary: Delete an organization
      description: Delete an organization
      operationId: deleteOrganization
      parameters:
        - name: id
          in: path
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /notification-provider/configurations/{id}:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve a notification provider configuration
      description: Retrieve a notification provider configuration
      operationId: getConsumerNotificationProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The notification provider configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The notification provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: Forbidden to access this notification provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Notification provider configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Notification Provider Configurations
      summary: Update a notification provider configuration
      description: Update a notification provider configuration
      operationId: updateNotificationProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The notification provider configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateNotificationProviderConfigurationRequest
        required: true
      responses:
        '200':
          description: The updated notification provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: Forbidden to access this notification provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Notification provider configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Notification Provider Configurations
      summary: Delete a notification provider configuration
      description: Delete a notification provider configuration
      operationId: deleteNotificationProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The notification provider configuration id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to delete this notification provider configurations
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Notification provider configuration not found
          content:
            application/json:
              schema:
                type: object
  /notification-custom-content:
    put:
      tags:
        - Notification Custom Content
      summary: Update a notification template
      description: Update a notification template
      operationId: updateNotificationTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationTemplateRequest'
        required: true
      responses:
        '200':
          description: The notification templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationTemplateView'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /identity-provider/configurations/{id}:
    get:
      tags:
        - Identity Provider Configurations
      summary: Retrieve an Identity Provider Configuration
      description: Retrieve an Identity Provider Configuration
      operationId: getIdentityProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The API Management Configuration ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Identity Provider Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: Forbidden to access this Identity Provider Configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Identity Provider Configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Identity Provider Configurations
      summary: Update an identity provider management configuration
      description: Update an identity provider configuration
      operationId: updateIdentityProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The identity provider configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated identity provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: Forbidden to access this identity provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Identity provider configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Identity Provider Configurations
      summary: Delete an Identity Provider Configuration
      description: Delete an dentity Provider Configuration
      operationId: deleteIdentityProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The Identity Provider Configuration ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to delete this Identity Provider Configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Identity Provider Configuration not found
          content:
            application/json:
              schema:
                type: object
  /features/{id}:
    get:
      tags:
        - Features
      summary: Get an feature
      description: Get an feature
      operationId: getFeature
      parameters:
        - name: id
          in: path
          description: The feature id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to access this feature
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Features
      summary: Update an feature
      description: Update an feature
      operationId: updateFeature
      parameters:
        - name: id
          in: path
          description: The feature id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeatureRequest'
        required: true
      responses:
        '200':
          description: The updated feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Features
      summary: Delete a feature
      description: Delete a feature
      operationId: deleteFeature
      parameters:
        - name: id
          in: path
          description: The Feature ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /export/configurations/{id}:
    get:
      tags:
        - Export Configurations
      summary: Retrieve an export configuration
      description: Retrieve an export configuration
      operationId: getExportConfiguration
      parameters:
        - name: id
          in: path
          description: The export configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The export configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this export configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Export configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Export Configurations
      summary: Update an export configuration
      description: Update an export configuration
      operationId: updateExportConfiguration
      parameters:
        - name: id
          in: path
          description: The export configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExportConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated export configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this export configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Export configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Export Configurations
      summary: Delete an export configuration
      description: Delete an export configuration
      operationId: deleteExportConfiguration
      parameters:
        - name: id
          in: path
          description: The export configuration's id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this export configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Export configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /element-definitions/{id}:
    get:
      tags:
        - Element Definitions
      operationId: getElementDefinitionById
      parameters:
        - name: id
          in: path
          description: The element definition id
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionView'
    put:
      tags:
        - Element Definitions
      operationId: updateElementDefinition
      parameters:
        - name: id
          in: path
          description: The element definition id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementDefinitionUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionView'
    delete:
      tags:
        - Element Definitions
      operationId: deleteElementDefinition
      parameters:
        - name: id
          in: path
          description: The element definition id
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /consumer-data-provider/configurations/{id}:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve an data provider configuration
      description: Retrieve an data provider configuration
      operationId: getConsumerDataProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The data provider configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The data provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: Forbidden to access this data provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Data provider configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Consumer Data Provider Configurations
      summary: Update an data provider configuration
      description: Update an consumer data provider configuration
      operationId: updateConsumerDataProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The consumer data provider configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UpdateConsumerDataProviderConfigurationRequest
        required: true
      responses:
        '200':
          description: The updated consumer data provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: Forbidden to access this consumer data provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Consumer data provider configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Consumer Data Provider Configurations
      summary: Delete a data provider configuration
      description: Delete a data provider configuration
      operationId: deleteConsumerDataProviderConfiguration
      parameters:
        - name: id
          in: path
          description: The consumer data provider configuration id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to delete this consumer data provider configurations
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Consumer data provider configuration not found
          content:
            application/json:
              schema:
                type: object
  /billing-metadata/{id}:
    put:
      tags:
        - Billing Metadata
      summary: Update an billing metadata
      description: Update an billing metadata
      operationId: updateBillingMetadata
      parameters:
        - name: id
          in: path
          description: The billing metadata id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillingMetadataRequest'
        required: true
      responses:
        '201':
          description: The created billing netadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataView'
        '403':
          description: Forbidden to create the billingmetadata
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Billing Metadata
      summary: Delete billing metadata
      description: Delete billing metadata
      operationId: deleteBillingMetadata
      parameters:
        - name: id
          in: path
          description: The billing metadata id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this billing metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Billing metadata not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /assets/{id}:
    get:
      tags:
        - Assets
      summary: Get an asset
      description: Get an asset
      operationId: getAsset
      parameters:
        - name: id
          in: path
          description: The asset id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Assets
      summary: Update an asset
      description: Update an asset
      operationId: updateAsset
      parameters:
        - name: id
          in: path
          description: The asset id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetRequest'
        required: true
      responses:
        '200':
          description: The updated asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Assets
      summary: Delete an asset
      description: Delete an asset
      operationId: deleteAsset
      parameters:
        - name: id
          in: path
          description: The asset id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /applications:
    get:
      tags:
        - Applications
      summary: List applications
      description: List applications
      operationId: listApplications
      parameters:
        - name: organizationId
          in: query
          description: Id of application's organization
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Applications
      summary: Update an application
      description: Update an application
      operationId: updateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
        required: true
      responses:
        '200':
          description: The application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
        '403':
          description: Forbidden to access this application
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Applications
      summary: Create an application
      description: Create an application
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '201':
          description: The application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
        '403':
          description: Forbidden to access this application
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                type: object
  /apim/configurations/{id}:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve an API management configuration
      description: Retrieve an API management configuration
      operationId: getAPIMConfiguration
      parameters:
        - name: id
          in: path
          description: The API management configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: Forbidden to access this API management configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - API Management Configurations
      summary: Update an API management configuration
      description: Update an API management configuration
      operationId: updateAPIMConfiguration
      parameters:
        - name: id
          in: path
          description: The API management configuration id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAPIMConfigurationRequest'
        required: true
      responses:
        '200':
          description: The updated API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: Forbidden to access this API management configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - API Management Configurations
      summary: Delete an API management configuration
      description: Delete an API management configuration
      operationId: deleteAPIMConfiguration
      parameters:
        - name: id
          in: path
          description: The API management configuration id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to delete this API management configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                type: object
  /account-tier:
    get:
      tags:
        - Account Tiers
      summary: Get all account tiers
      description: Get all account tiers
      operationId: getAccountTiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Account Tiers
      summary: Update an account tier
      description: Update an account tier
      operationId: updateAccountTier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountTierRequest'
        required: true
      responses:
        '200':
          description: The account tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTierView'
        '404':
          description: Account tier not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Account Tiers
      summary: Create an AccountTier
      description: Create an AccountTier
      operationId: createAccountTier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountTierRequest'
        required: true
      responses:
        '201':
          description: The account tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTierView'
        '404':
          description: Account tier not found
          content:
            application/json:
              schema:
                type: object
  /account-tier/{id}/upgrade:
    put:
      tags:
        - Account Tiers
      summary: Upgrade account tier
      description: Upgrade account tier
      operationId: upgradeAccountTier
      parameters:
        - name: id
          in: path
          description: The account tier ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeAccountTierRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /account-tier/{id}/sync:
    put:
      tags:
        - Account Tiers
      summary: Sync account tier data
      description: Sync account tier data
      operationId: sync
      parameters:
        - name: id
          in: path
          description: The account tier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /account-tier/{id}/payment-methods/{paymentMethodId}/default:
    put:
      tags:
        - Account Tiers
      summary: Set default payment method
      description: Set default payment method
      operationId: setDefaultPaymentMethod_1
      parameters:
        - name: id
          in: path
          description: The account tier id
          required: true
          schema:
            type: string
        - name: paymentMethodId
          in: path
          description: The payment method ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /account-tier/{id}/downgrade:
    put:
      tags:
        - Account Tiers
      summary: Downgrade account tier
      description: Downgrade account tier
      operationId: downgradeAccountTier
      parameters:
        - name: id
          in: path
          description: The account tier id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DowngradeAccountTierRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /users:
    get:
      tags:
        - Users
      summary: Retrieve a lst of users for the supplied organzization / tenant
      description: Retrieve a lst of users for the supplied organzization / tenant
      operationId: listUsers
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: false
          schema:
            type: string
        - name: tenantId
          in: query
          description: The Tenant ID
          required: false
          schema:
            type: string
        - name: currentOrganizationId
          in: query
          description: The current organization ID
          required: false
          schema:
            type: string
        - name: roleNames
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserView'
    post:
      tags:
        - Users
      summary: Create a user
      description: Create a user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
        required: true
      responses:
        '201':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
  /tiers:
    get:
      tags:
        - Tiers
      summary: List of tiers owned by a organization
      description: List of tiers owned by a organization
      operationId: listTiers
      parameters:
        - name: organizationId
          in: query
          description: Id of tiers organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Tiers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Tiers
      summary: Create a tier
      description: Create a tier
      operationId: createTier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTierRequest'
        required: true
      responses:
        '201':
          description: The created tier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierView'
        '403':
          description: Forbidden to create the tier
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /tenants:
    get:
      tags:
        - Tenants
      summary: List tenants
      description: List tenants
      operationId: listTenants
      responses:
        '200':
          description: The tenants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantView'
    post:
      tags:
        - Tenants
      summary: Create a tenant
      description: Create a tenant
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantDto'
        required: true
      responses:
        '201':
          description: The Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantView'
  /templates:
    post:
      tags:
        - Templates
      summary: Create a template
      description: Create a template
      operationId: createTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequest'
        required: true
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to manage templates for this organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /stored-filters:
    post:
      tags:
        - Stored filters
      summary: Create an storedfilter
      description: Create an storedfilter
      operationId: createStoredFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoredFilterRequest'
        required: true
      responses:
        '201':
          description: The created stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to create the stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
  /sla-violations/review:
    post:
      tags:
        - SLA Violations
      summary: Review sla violations
      description: Review sla violations
      operationId: reviewSLAViolations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewSLAViolationRequest'
        required: true
      responses:
        '201':
          description: The sla violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization or sla not found
          content:
            application/json:
              schema:
                type: object
  /sla-definitions:
    get:
      tags:
        - SLA Definitions
      summary: List sla definitions by organization
      description: List sla definitions by organization
      operationId: getSLADefinitions
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - SLA Definitions
      summary: Create a sla definition
      description: Create a sla definition
      operationId: createSLADefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSLADefinitionDTO'
        required: true
      responses:
        '201':
          description: The sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /site-provider/configurations:
    get:
      tags:
        - Site Provider Configurations
      summary: List site provider configurations
      description: List site provider configurations
      operationId: listSiteProviderConfigurations
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: paged
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: List of site provider configurations for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Site Provider Configurations
      summary: Create an consumerdataprovider configuration
      description: Create an consumerdataprovider configuration
      operationId: createConsumerDataProviderConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSiteConfigurationRequest'
        required: true
      responses:
        '201':
          description: The site provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigurationView'
        '403':
          description: Forbidden to create site configurations for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /registration:
    post:
      tags:
        - Registration
      operationId: beginRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSelfServiceUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SelfServiceUserResponse'
  /products:
    get:
      tags:
        - Products
      summary: List products
      description: |-
        List products (three modes of pperation):  
        mode 1: [organizationId, userId, cpqConfigurationId, cpqStaged] 
        mode 2: [organizationId, userId, expand, start, end] 
        mode 3: [organizationId, tag]
      operationId: listProducts
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: false
          schema:
            type: string
        - name: ownerId
          in: query
          description: The owner id
          required: false
          schema:
            type: string
        - name: tag
          in: query
          required: false
          schema:
            type: string
        - name: cpqStaged
          in: query
          description: Retrieve cpq staged products?
          required: false
          schema:
            type: boolean
        - name: cpqConfigurationId
          in: query
          description: The cpq configuration id
          required: false
          schema:
            type: string
        - name: expand
          in: query
          description: >-
            Attributes to expand (any combination of the following allowed):
            [calls, spends, consumers]
          required: false
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (for expanded sla violations and invoices)
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (for expanded sla violations and invoices)
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Products
      summary: Create a product
      description: Create a product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        '201':
          description: The Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to create the product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /product/families:
    get:
      tags:
        - Product Family
      summary: List of product families owned by a organization
      description: List of product families owned by a organization
      operationId: listProductFamilies
      parameters:
        - name: organizationId
          in: query
          description: Id of product families organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product families
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Product Family
      summary: Create an product family
      description: Create an product family
      operationId: createProductFamily
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductFamilyRequest'
        required: true
      responses:
        '201':
          description: The created product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyView'
        '403':
          description: Forbidden to create the product family
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /product-keys:
    post:
      tags:
        - Product Keys
      summary: Create a product key
      description: Create a product key
      operationId: createProductKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductKeyRequest'
        required: true
      responses:
        '201':
          description: The Product Keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyView'
        '400':
          description: User doesn't belong to the organization
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this organization or user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/validate:
    post:
      tags:
        - Product Keys
      summary: Retrieve the status of a product key
      description: Retrieve the status of a product key
      operationId: validateProductKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductKeyStatusRequestRequest'
        required: true
      responses:
        '200':
          description: The product key's status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyStatusResponseView'
  /pricing-rules:
    post:
      tags:
        - Pricing Rules
      summary: Create a pricing rule
      description: Create a pricing rule
      operationId: createPricingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricingRuleRequest'
        required: true
      responses:
        '201':
          description: The created pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleView'
        '403':
          description: Forbidden to create the pricing rule
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /plans:
    get:
      tags:
        - Plans
      summary: List of plans owned by a organization
      description: List of plans owned by a organization
      operationId: listPlans
      parameters:
        - name: organizationId
          in: query
          description: ID of Plans Organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Plans
      summary: Create an plan
      description: Create an plan
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanRequest'
        required: true
      responses:
        '201':
          description: The created plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanView'
        '403':
          description: Forbidden to create the plan
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /plan-elements:
    get:
      tags:
        - Elements
      summary: List of plan elements owned by a organization
      description: List of plan elements owned by a organization
      operationId: listPlanElements
      parameters:
        - name: organizationId
          in: query
          description: Id of plan elements organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Elements
      summary: Create a plan element
      description: Create a plan element
      operationId: createPlanElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanElementRequest'
        required: true
      responses:
        '201':
          description: The created plan element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementView'
        '403':
          description: Forbidden to create the plan element
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /payment/open:
    post:
      tags:
        - Payment
      summary: Initiate payment
      description: Initiate payment
      operationId: initiatePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        required: true
      responses:
        '200':
          description: The client secret
          content:
            application/json:
              schema:
                type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers:
    get:
      tags:
        - Payment Methods
      summary: List Payment Customers
      description: List Payment Customers
      operationId: listPaymentCustomers
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List payment customers for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentCustomerView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Payment Methods
      summary: Add a new payment method
      description: Add a new payment method to payment customer
      operationId: addPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentCustomerRequest'
        required: true
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers/{id}/method:
    post:
      tags:
        - Payment Methods
      summary: Add a new payment method
      description: Add a new payment method to payment customer
      operationId: addPaymentMethod_1
      parameters:
        - name: id
          in: path
          description: The Payment Customer ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The client secret
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: object
  /payment/configurations:
    get:
      tags:
        - Payment Configurations
      summary: List payment configurations
      description: List payment configurations
      operationId: listPaymentConfigurations
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of payment configurations for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Payment Configurations
      summary: Create a payment configuration
      description: Create a payment configuration
      operationId: createPaymentConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentConfigurationRequest'
        required: true
      responses:
        '201':
          description: The payment configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfigurationView'
        '403':
          description: Forbidden to create paymentconfigurations for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/checkout:
    post:
      tags:
        - Payment
      summary: Initiate payment
      description: Initiate payment
      operationId: initiatePayment_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequestRequest'
        required: true
      responses:
        '200':
          description: The payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /organizations:
    get:
      tags:
        - Organizations
      summary: List organizations
      description: List organizations
      operationId: listOrganizations
      parameters:
        - name: tenantId
          in: query
          description: The tenant id
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          description: The parent organization id
          required: false
          schema:
            type: string
        - name: currentOrganizationId
          in: query
          description: The current organization id
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationView'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Organizations
      summary: Create an organization
      description: Create an organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
        required: true
      responses:
        '201':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationView'
  /notification-provider/configurations:
    get:
      tags:
        - Notification Provider Configurations
      operationId: list
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of notification provider configuration for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotificationProviderConfigurationView'
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotificationProviderConfigurationView'
    post:
      tags:
        - Notification Provider Configurations
      summary: Create a notificationprovider configuration
      description: Create a notificationprovider configuration
      operationId: createNotificationProviderConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateNotificationProviderConfigurationRequest
        required: true
      responses:
        '201':
          description: The notification provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '403':
          description: >-
            Forbidden to create a notification provider configurations for this
            organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /invoices/refunds:
    post:
      tags:
        - Invoices
      summary: Issue a refund
      description: Issue a refund
      operationId: issueRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        required: true
      responses:
        '204':
          description: 'If the refund was successfully created '
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to issue refunds
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /invoices/payment:
    post:
      tags:
        - Invoices
      summary: Add a received payment to an invoice
      description: Add a received payment to an invoice
      operationId: addPaymentReceived
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentReceivedRequest'
        required: true
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
  /invoices/line-items:
    post:
      tags:
        - Invoices
      summary: Submit a line item to be recorded
      description: Submit a line item to be recorded
      operationId: recordLineItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLineItemRequest'
        required: true
      responses:
        '204':
          description: When the line item is successfully recorded
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to record a line item
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key or asset not found
          content:
            application/json:
              schema:
                type: object
  /identity-provider/configurations:
    get:
      tags:
        - Identity Provider Configurations
      summary: List Identity Provide Configurations
      description: List Identity Provide Configurations
      operationId: listIdentityProviderConfigurations
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Identity Provider Configurations for Organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Identity Provider Configurations
      summary: Create an Identity Provider Configuration
      description: Create an Identity Provider Configuration
      operationId: createIdentityProviderConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdentityProviderConfigurationRequest'
        required: true
      responses:
        '201':
          description: The Identity Ptovider Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderConfigurationView'
        '403':
          description: >-
            Forbidden to create Identity Provider Configurations for this
            Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /features:
    get:
      tags:
        - Features
      summary: List of features owned by a organization
      description: List of features owned by a organization
      operationId: listFeatures
      parameters:
        - name: organizationId
          in: query
          description: Id of features organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Features
      summary: Create an feature
      description: Create an feature
      operationId: createFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureRequest'
        required: true
      responses:
        '201':
          description: The created feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureView'
        '403':
          description: Forbidden to create the feature
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /export/configurations:
    get:
      tags:
        - Export Configurations
      summary: List export configurations
      description: List export configurations
      operationId: listExportConfigurations
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The export configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Export Configurations
      summary: Create an export configuration
      description: Create an export configuration
      operationId: createExportConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExportConfigurationRequest'
        required: true
      responses:
        '201':
          description: The export configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConfigurationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /element-definitions:
    get:
      tags:
        - Element Definitions
      operationId: getAllElementDefinitions
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElementDefinitionView'
    post:
      tags:
        - Element Definitions
      operationId: createElementDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementDefinitionCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementDefinitionView'
  /demo/rules/lineitem:
    post:
      tags:
        - Demo Pricing Rules
      summary: Evaluate a pricing rule against some demo data
      description: Evaluate a pricing rule against some demo data
      operationId: evaluatePricingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoPricingRulesDSLRequest'
        required: true
      responses:
        '200':
          description: Demo pricing rule evaluation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoPricingRuleResultView'
  /consumer-data-provider/configurations:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: List data provider configurations
      description: List data provider configurations
      operationId: listConsumerDataProviderConfigurations
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: paged
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: List of data provider configurations for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Consumer Data Provider Configurations
      summary: Create an consumerdataprovider configuration
      description: Create an consumerdataprovider configuration
      operationId: createConsumerDataProviderConfiguration_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CreateConsumerDataProviderConfigurationRequest
        required: true
      responses:
        '201':
          description: The data provider configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        '403':
          description: >-
            Forbidden to create consumer data provider configurations for this
            organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /communications:
    get:
      tags:
        - Communications
      summary: List communications (paginated)
      description: List communications (paginated)
      operationId: pagedCommunications
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The communications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Communications
      summary: Create a communication
      description: Create a communication
      operationId: createCommunication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommunicationRequest'
        required: true
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to create communications
          content:
            application/json:
              schema:
                type: object
  /commerce/terms:
    get:
      tags:
        - Commerce Portal Acceptance Terms
      operationId: getAcceptedTerms
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommercePortalAcceptanceTermView'
    post:
      tags:
        - Commerce Portal Acceptance Terms
      operationId: acceptTerms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptTermsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /billing-metadata:
    get:
      tags:
        - Billing Metadata
      summary: List billing metadata by organization
      description: List billing metadata by organization
      operationId: getBillingMetadata
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The billing metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingMetadataView'
        '403':
          description: Forbidden to access billing metadata for this organization
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Billing Metadata
      summary: Create billing metadata
      description: Create billing metadata
      operationId: createBillingMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingMetadataRequest'
        required: true
      responses:
        '201':
          description: The created billin gmetadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetadataView'
        '403':
          description: Forbidden to create the billin gmetadata
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /assets:
    get:
      tags:
        - Assets
      summary: List of assets owned by a user
      description: List of assets owned by an organization
      operationId: listAssets
      parameters:
        - name: organizationId
          in: query
          description: Id of assets organization
          required: true
          schema:
            type: string
        - name: apimConfigurationId
          in: query
          description: Id of the API management configuration
          required: true
          schema:
            type: string
        - name: environmentId
          in: query
          description: Id of the environment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The APIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Assets
      summary: Create an asset
      description: Create an asset
      operationId: createAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetRequest'
        required: true
      responses:
        '201':
          description: The created asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetView'
        '403':
          description: Forbidden to create the asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /apim/configurations:
    get:
      tags:
        - API Management Configurations
      summary: List API management configurations
      description: List API management configurations
      operationId: listAPIMConfigurations
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API management configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - API Management Configurations
      summary: Create an API management configuration
      description: Create an API management configuration
      operationId: createAPIMConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIMConfigurationRequest'
        required: true
      responses:
        '201':
          description: The API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMConfigurationView'
        '403':
          description: >-
            Forbidden to create API management configurations for this
            organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /api-keys:
    get:
      tags:
        - API Keys
      summary: List API leys
      description: List API keys
      operationId: listAPIKeys
      parameters:
        - name: organizationId
          in: query
          description: Id of API key's organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyPageResponse'
        '403':
          description: Forbidden to list API keys for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - API Keys
      summary: Create an API key
      description: Create an API key
      operationId: createAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIRequest'
        required: true
      responses:
        '201':
          description: The API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyView'
        '403':
          description: Forbidden to create API keys for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: A required resource is not found
          content:
            application/json:
              schema:
                type: object
  /admin/tenant/unsuspend:
    post:
      tags:
        - Admin
      operationId: suspendTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsuspendTenant'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /admin/tenant/suspend:
    post:
      tags:
        - Admin
      operationId: suspendTenant_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendTenant'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /account-tier/{id}/payment-methods:
    get:
      tags:
        - Account Tiers
      summary: Get details of loaded payment methods for account tiers
      description: Get details of loaded payment methods for account tiers
      operationId: payment-methods_1
      parameters:
        - name: id
          in: path
          description: The account tier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Account Tiers
      summary: Get details of loaded payment methods for account tiers
      description: Get details of loaded payment methods for account tiers
      operationId: payment-methods
      parameters:
        - name: id
          in: path
          description: The account tier ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /users/paged:
    get:
      tags:
        - Users
      summary: Paginated list of users
      description: Paginated list of users
      operationId: pagedUsers
      parameters:
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: roleName
          in: query
          description: Name of role
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithInvoiceView'
  /users/notification-sources:
    get:
      tags:
        - Users
      summary: Retrieve the currently logged in/authenticated user
      description: Retrieve the currently logged in/authenticated user
      operationId: listUsers_1
      parameters:
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
        - name: currentOrganizationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The User
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationSourceView'
  /users/isotope/entrypoint:
    get:
      tags:
        - Users
      summary: Generate the isotope docker entrypoint
      description: Generate the isotope docker entrypoint
      operationId: generateIsotopeEntryPoint
      parameters:
        - name: organizationId
          in: query
          description: Id of the organization
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The isotope entrypoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsotopeCommand'
  /users/isotope/command:
    get:
      tags:
        - Users
      summary: Generate the isotope install command string
      description: Generate the isotope install command string
      operationId: generateIsotopeCommand
      parameters:
        - name: organizationId
          in: query
          description: ID of the organization
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The isotope command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsotopeCommand'
  /users/current:
    get:
      tags:
        - Users
      summary: Retrieve the currently logged in/authenticated user
      description: Retrieve the currently logged in/authenticated user
      operationId: getLoggedInUser
      responses:
        '200':
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
  /traffic-anomalies:
    get:
      tags:
        - Traffic Anomalies
      summary: List traffic anomalies for the organization
      description: List traffic anomalies for the organization
      operationId: listTrafficAnomalies
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The anomalies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficAnomalyView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /tiers/paged:
    get:
      tags:
        - Tiers
      summary: List of tiers (paginated)
      description: List of tiers (paginated)
      operationId: pagedTiers
      parameters:
        - name: ownerId
          in: query
          description: Id of tier's owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of tier's organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Tiers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /tenants/paged:
    get:
      tags:
        - Tenants
      summary: List tenants (paginated)
      description: List tenants (paginated)
      operationId: pagedTenants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /tags:
    get:
      tags:
        - Tags
      summary: List tags by organization
      description: List tags by organization
      operationId: getTags
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagView'
        '403':
          description: Forbidden to access tag for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Tag not found
          content:
            application/json:
              schema:
                type: object
  /subscription-notification/{id}:
    get:
      tags:
        - Subscription Notifications
      summary: Retrieve subscriber notifications for the organization
      description: Retrieve subscriber notifications for the organization
      operationId: getSubscriberNotifications
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
        - name: affectedProducts
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: specificRecipients
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: affectedOwners
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The subscription notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriberNotificationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Subscription Notifications
      summary: Delete an subscribernotification
      description: Delete an subscribernotification
      operationId: deleteSubscriberNotification
      parameters:
        - name: id
          in: path
          description: The subscriber notification id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this subscriber notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Subscriber notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /subscription-notification/owners/{id}:
    get:
      tags:
        - Subscription Notifications
      summary: Retrieve the number of recipients for a subscription notification
      description: Retrieve the number of recipients for a subscription notification
      operationId: getRecipientsSize
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
        - name: affectedProducts
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: affectedProductLicenseOwners
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The subscription notification recipient size
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserView'
        '403':
          description: Forbidden to access this subscription notification
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /subscription-notification/body/{id}:
    get:
      tags:
        - Subscription Notifications
      operationId: getBody
      parameters:
        - name: id
          in: path
          description: The subscriber notification id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The subscriber notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecificSubscriberNotificationView'
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this subscriber notification
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Subscriber notification not found
          content:
            application/json:
              schema:
                type: object
  /stored-filters/userId/{userId}:
    get:
      tags:
        - Stored filters
      summary: Get an stored filters
      description: Get an stored filters
      operationId: getStoredFiltersByUserId
      parameters:
        - name: organizationId
          in: query
          description: Id of stored filter's organization
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The stored filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredFilterResponse'
        '403':
          description: Forbidden to access this stored filter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoredFilterResponse'
        '404':
          description: Stored filter not found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoredFilterResponse'
  /slas/summarized-by-violation:
    get:
      tags:
        - SLAs
      summary: List slas by organization
      description: List slas by organization
      operationId: getSLAsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: productId
          in: query
          description: The product id
          required: false
          schema:
            type: string
        - name: slaDefinitionId
          in: query
          description: The sla definition id
          required: false
          schema:
            type: string
        - name: consumingOrganizationId
          in: query
          description: The consuming organization id
          required: false
          schema:
            type: string
        - name: isReviewed
          in: query
          description: Filter on reviewed
          required: false
          schema:
            type: boolean
        - name: violationType
          in: query
          description: The sla violation type
          required: false
          schema:
            type: string
          example: LATENCY, RESPONSE_CODE
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /sla-violations/{slaId}/summarized:
    get:
      tags:
        - SLA Violations
      summary: List summarized sla violations
      description: List summarized sla violations
      operationId: listSummarizedSLAViolations
      parameters:
        - name: slaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /sla-violations/total-refunded:
    get:
      tags:
        - SLA Violations
      summary: Get total refund amount for slas for an organization or consumer
      description: Get total refund amount for slas for an organization
      operationId: getTotalRefunded
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: consumerId
          in: query
          description: The consumer id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The sla definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAWithSLAEnforcedView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /sla-violations/slas:
    get:
      tags:
        - SLA Violations
      summary: List slas by organization
      description: List slas by organization
      operationId: getSLAsByOrganization_1
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /sla-definitions/paged:
    get:
      tags:
        - SLA Definitions
      summary: List sla definitions (paginated)
      description: List sla definitions (paginated)
      operationId: pagedSLADefinitions
      parameters:
        - name: organizationId
          in: query
          description: Id of the organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The sla definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLADefinitionPageResponse'
        '403':
          description: Forbidden to access this sla definition
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Sla definition not found
          content:
            application/json:
              schema:
                type: object
  /sites/{id}:
    get:
      tags:
        - Sites
      summary: Get an site
      description: Get an site
      operationId: getSite
      parameters:
        - name: id
          in: path
          description: The asset id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The site
          content:
            site/json:
              schema:
                $ref: '#/components/schemas/SiteView'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Sites
      summary: Delete an site
      description: Delete an site
      operationId: deleteSite
      parameters:
        - name: id
          in: path
          description: The Site ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /site-provider/configurations/property-names:
    get:
      tags:
        - Site Provider Configurations
      summary: Retrieve site provider configuration property names
      description: Retrieve site provider configuration property names
      operationId: getConfigurationPropertyNames
      parameters:
        - name: provider
          in: query
          description: The site provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of site provider property names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Site provider  not found
          content:
            application/json:
              schema:
                type: object
  /site-provider/configurations/property-descriptions:
    get:
      tags:
        - Site Provider Configurations
      summary: Retrieve site provider configuration property descriptions
      description: Retrieve site provider configuration property descriptions
      operationId: getConfigurationPropertyDescriptions
      parameters:
        - name: provider
          in: query
          description: The site provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of site provider property descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Sitep provider not found
          content:
            application/json:
              schema:
                type: object
  /products/{id}/trial:
    get:
      tags:
        - Products
      summary: Get trial data for product and owner
      description: Get trial data for product and owner
      operationId: getTrialData
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
        - name: clientId
          in: query
          description: The client id
          required: false
          schema:
            type: string
        - name: clientEmailAddress
          in: query
          description: The client email address
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The product trial data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTrialView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /products/{id}/product-keys:
    get:
      tags:
        - Products
      summary: Retrieve product keys associated with an product
      description: Retrieve product keys associated with an product
      operationId: listProductKeys
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /products/trial:
    get:
      tags:
        - Products
      summary: Get product trial data for owner
      description: Get product trial data for owner
      operationId: getClientTrialData
      parameters:
        - name: clientId
          in: query
          description: The client id
          required: false
          schema:
            type: string
        - name: clientEmailAddress
          in: query
          description: The client email address
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of product trial data for client
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductTrialView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /products/summarized:
    get:
      tags:
        - Products
      summary: List products (summarized)
      description: List products (summarized)
      operationId: listSummarizedProducts
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: environmentId
          in: query
          description: The environment id
          required: true
          schema:
            type: string
        - name: ownerId
          in: query
          description: The ownerid id
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSummaryView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/summarized/{id}:
    get:
      tags:
        - Products
      summary: Get a product
      description: Get a product
      operationId: getProduct_1
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /products/summarized/paged:
    get:
      tags:
        - Products
      summary: List products (paginated and summarized)
      description: List products (paginated and summarized)
      operationId: pageSummarizedProducts
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: environmentId
          in: query
          description: The environment id
          required: true
          schema:
            type: string
        - name: ownerId
          in: query
          description: The owner id
          required: false
          schema:
            type: string
        - name: staged
          in: query
          description: >-
            Filter on products being staged or unstaged for commerce portal
            publication
          required: false
          schema:
            type: boolean
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSummaryView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/search:
    get:
      tags:
        - Products
      summary: Search for products
      description: Search for products
      operationId: searchProducts
      parameters:
        - name: organizationId
          in: query
          description: Id of product's organization
          required: true
          schema:
            type: string
        - name: externalId
          in: query
          description: Search by the external id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/reports/asset-consumer-count-by-product:
    get:
      tags:
        - Product Reports
      summary: Retrieve asset consumer count associated with a product
      description: Retrieve asset consumer count associated with a product
      operationId: getAPIConsumerCountByProduct
      parameters:
        - name: productId
          in: query
          description: The Product ID
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The count of asset consumers
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /products/paged:
    get:
      tags:
        - Products
      summary: List products (paginated)
      description: List products (paginated)
      operationId: pagedProducts
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: false
          schema:
            type: string
        - name: ownerId
          in: query
          description: The Owner ID
          required: false
          schema:
            type: string
        - name: expand
          in: query
          description: >-
            Attributes to expand (any combination of the following allowed):
            [calls, spends, consumers]
          required: false
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (for expanded sla violations and invoices)
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (for expanded sla violations and invoices)
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPagedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/metrics:
    get:
      tags:
        - Products
      summary: Retrieve product metrics for the organization
      description: Retrieve product metrics for the organization
      operationId: listProductMetrics
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: 'The starting timestamp '
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The Product Metrics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductMetricsView'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/metrics/organization:
    get:
      tags:
        - Products
      summary: Retrieve consumer product metrics for the organization
      description: Retrieve product metrics for the organization
      operationId: listMetricsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: 'The starting timestamp '
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The Product Metrics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductMetricsView'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/counts:
    get:
      tags:
        - Products
      summary: Get product counts
      description: Get product counts
      operationId: getProductCounts
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product metrics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCountsView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /products/changelogs/{id}:
    get:
      tags:
        - Products
      summary: Get changelogs for a product
      description: Get changelogs for a product
      operationId: getProductChangeLogs
      parameters:
        - name: id
          in: path
          description: The product id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Changelogs for a product
          content:
            application/json: {}
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /product/families/summarized/{id}:
    get:
      tags:
        - Product Family
      summary: Get an product family
      description: Get an product family
      operationId: getProductFamily_1
      parameters:
        - name: id
          in: path
          description: The product family id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilySummaryView'
        '403':
          description: Forbidden to access this product family
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product family not found
          content:
            application/json:
              schema:
                type: object
  /product/families/summarized/paged:
    get:
      tags:
        - Product Family
      summary: List of product families (paginated)
      description: List of product families (paginated)
      operationId: pagedProductFamilies
      parameters:
        - name: ownerId
          in: query
          description: Id of product families owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of product families organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product families
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilySummaryPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /product/families/paged:
    get:
      tags:
        - Product Family
      summary: List of product families (paginated)
      description: List of product families (paginated)
      operationId: pagedProductFamilies_1
      parameters:
        - name: ownerId
          in: query
          description: Id of product families owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of product families organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product families
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFamilyPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/{id}/line-items:
    get:
      tags:
        - Product Keys
      summary: Retrieve line items associated with a product key
      description: Retrieve line items associated with a product key
      operationId: getLineItems
      parameters:
        - name: id
          in: path
          description: The ProductKey ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The LineItems
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineItemView'
        '403':
          description: Forbidden to access this product key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/summarized/{id}:
    get:
      tags:
        - Product Keys
      summary: Get summarized product key
      description: Get summarized product key
      operationId: getSummarizedProductKey
      parameters:
        - name: id
          in: path
          description: The product key id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product Key
          content:
            ProductKey/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this Product Key
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/search:
    get:
      tags:
        - Product Keys
      summary: Search for product keys
      description: Search for product keys
      operationId: ProductKeys
      parameters:
        - name: organizationId
          in: query
          description: Id of product key's organization
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/paged:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the organization
      description: Retrieve product keys for the organization
      operationId: getProductKeysPagedByOrganization
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/events/summarized:
    get:
      tags:
        - Product Keys
      summary: >-
        Retrieve summarized productkeyevents associated with the supplied
        organization
      description: >-
        Retrieve summarized productkeyevents associated with the supplied
        organization
      operationId: getProductKeyEventsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The summarized product key events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /product-keys/events/search:
    get:
      tags:
        - Product Keys
      summary: Search for product key events
      description: Search for product key events
      operationId: searchProductKeyEvents
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product key events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyEventPageResponse'
        '403':
          description: Forbidden to access product key events for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/events/paged:
    get:
      tags:
        - Product Keys
      summary: Paginated list of product key events
      description: Paginated list of product key events
      operationId: getProductKeyEvents
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product key events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyEventPageResponse'
        '403':
          description: Forbidden to access product key events for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/client:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the user
      description: Retrieve product keys for the user
      operationId: getProductKeys
      parameters:
        - name: emailAddress
          in: query
          description: The Email Address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKeyView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/client/{id}:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the user
      description: Retrieve product keys for the user
      operationId: getProductKeys_1
      parameters:
        - name: id
          in: path
          description: The User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKeyView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/client/{id}/paged:
    get:
      tags:
        - Product Keys
      summary: Retrieve product keys for the user
      description: Retrieve product keys for the user
      operationId: getProductKeysPaged
      parameters:
        - name: organizationId
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /product-keys/client/summarized:
    get:
      tags:
        - Product Keys
      summary: Retrieve all product keys associated with the user
      description: Retrieve all product keys associated with the user
      operationId: getProductKeysByOrganization
      parameters:
        - name: emailAddress
          in: query
          description: The email address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product Keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /pricing-rules/{accountId}/cost:
    get:
      tags:
        - Pricing Rules
      summary: Retrieve cost by account
      description: Retrieve cost by account
      operationId: getCostByAccount
      parameters:
        - name: accountId
          in: path
          description: The Account ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The cost
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this account
          content:
            application/json:
              schema:
                type: number
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                type: number
  /pricing-rules/organization/{organizationId}:
    get:
      tags:
        - Pricing Rules
      summary: Get all pricing rules for an organization
      description: Get all pricing rules for an organization
      operationId: listPricingRulesByOrganization
      parameters:
        - name: organizationId
          in: path
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The pricing rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRulePageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /pricing-rules/execution-logs:
    get:
      tags:
        - Pricing Rules
      summary: Get pricing rule execution logs for an organization
      description: Get pricing rule execution logs for an organization
      operationId: listPricingRuleExecutionLogsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The pricing rule execution logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingRuleExecutionLogPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /plans/paged:
    get:
      tags:
        - Plans
      summary: List of plans (paginated)
      description: List of plans (paginated)
      operationId: pagedPlans
      parameters:
        - name: ownerId
          in: query
          description: Id of plans owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of plans organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /plan-elements/paged:
    get:
      tags:
        - Elements
      summary: List of plan elements (paginated)
      description: List of plan elements (paginated)
      operationId: pagedPlanElements
      parameters:
        - name: ownerId
          in: query
          description: Id of plan elements owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of plan elements organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The plan elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanElementPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /payment/record/product/{productId}/user/{userId}:
    get:
      tags:
        - Payment
      summary: Get payment record
      description: Get payment record
      operationId: PaymentRecord
      parameters:
        - name: productId
          in: path
          description: Product Id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/paged:
    get:
      tags:
        - Payment
      summary: List payment records (paginated)
      description: List payment records (paginated)
      operationId: pagedPaymentRecords
      parameters:
        - name: tenantId
          in: query
          description: ID of Tenant
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordPagedResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /payment/history/tenant/{tenantId}:
    get:
      tags:
        - Payment
      summary: Get payment records
      description: Get payment records
      operationId: PaymentRecords
      parameters:
        - name: tenantId
          in: path
          description: Tenant id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentRecordView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/history/product/{productId}/user/{userId}:
    get:
      tags:
        - Payment
      summary: Get payment record
      description: Get payment record
      operationId: PaymentRecord_1
      parameters:
        - name: productId
          in: path
          description: Product id
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentRecordView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers/{id}:
    get:
      tags:
        - Payment Methods
      summary: 'Retrieve payment customer data '
      description: Retrieve payment customer data including payment methods
      operationId: getPaymentCustomer
      parameters:
        - name: id
          in: path
          description: The payment customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '403':
          description: Forbidden to access this payment customer
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Payment Methods
      summary: Delete a payment customer
      description: Delete a payment customer
      operationId: deletePaymentCustomer
      parameters:
        - name: id
          in: path
          description: The payment customer id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this payment customer
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers/user/{userId}/configuration/{paymentConfigurationId}:
    get:
      tags:
        - Payment Methods
      summary: Get payment customer
      description: Get payment customer
      operationId: getPaymentCustomer_1
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          schema:
            type: string
        - name: paymentConfigurationId
          in: path
          description: Payment configuration id
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The API management configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /payment/configurations/property-names:
    get:
      tags:
        - Payment Configurations
      summary: Retrieve payment configuration property names
      description: Retrieve payment configuration property names
      operationId: getConfigurationPropertyNames_1
      parameters:
        - name: provider
          in: query
          description: The payment provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of payment property names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Payment provider not found
          content:
            application/json:
              schema:
                type: object
  /organizations/{id}/product-keys:
    get:
      tags:
        - Organizations
      summary: Retrieve all product keys associated with an organization
      description: Retrieve all product keys associated with an organization
      operationId: getProductKeysByOrganization_1
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Product Keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /organizations/{id}/product-keys/summarized:
    get:
      tags:
        - Organizations
      summary: Retrieve all product keys associated with an organization
      description: Retrieve all product keys associated with an organization
      operationId: getProductKeysByOrganization_2
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
        - name: ownerId
          in: query
          description: The owner id
          required: false
          schema:
            type: string
        - name: clientId
          in: query
          description: The client id
          required: false
          schema:
            type: string
        - name: consumingOrganizationId
          in: query
          description: The consuming organization id
          required: false
          schema:
            type: string
        - name: includeDeactivated
          in: query
          description: Include deactivated keys?
          required: false
          schema:
            type: boolean
        - name: paged
          in: query
          description: Return paginated data?
          required: false
          schema:
            type: boolean
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: false
          schema:
            type: integer
            format: int64
        - name: productId
          in: query
          description: Filter product keys on productid
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /organizations/paged:
    get:
      tags:
        - Organizations
      summary: List organizations (paginated)
      description: List organizations (paginated)
      operationId: pagedOrganizations
      parameters:
        - name: tenantId
          in: query
          description: The tenant id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationPageResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /notifications/update/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock update notification
      description: Send mock update notification
      operationId: sendUpdateNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/successful-payment/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock successful payment notification
      description: Send mock successful payment notification
      operationId: sendSuccessfulPayment
      parameters:
        - name: organizationId
          in: path
          description: The current organization id
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/reactivation/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock reactivation notification
      description: Send mock reactivation notification
      operationId: sendReactivationNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/quota/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock quota warning notification
      description: Send mock quota warning notification
      operationId: sendQuotaNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/quota-tier/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock quota tier warning notification
      description: Send mock quota tier warning notification
      operationId: sendQuotaTierNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/invoice/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock invoice notification
      description: Send mock invoice notification
      operationId: sendInvoiceNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/invalid/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock invalid notification
      description: Send mock invalid notification
      operationId: sendInvalidNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/free-trial/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock free trial notification
      description: Send mock free trial notification
      operationId: sendFreeTrialNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/failed-payment/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock failed payment notification
      description: Send mock failed payment notification
      operationId: sendFailedPaymentNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/deactivate/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock update notification
      description: Send mock update notification
      operationId: sendUpdateNotification_1
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/creation/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock creation notification
      description: Send mock creation notification
      operationId: sendCreationNotification
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notifications/activation/{organizationId}/{userEmail}:
    get:
      tags:
        - Notifications
      summary: Send mock activation notification
      description: Send mock activation notification
      operationId: sendReactivationNotification_1
      parameters:
        - name: organizationId
          in: path
          description: The current organization ID
          required: true
          schema:
            type: string
        - name: userEmail
          in: path
          description: The current user ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification Sent
          content:
            application/json:
              schema:
                type: string
  /notification-provider/configurations/{id}/connectivity-status:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve a notification provider configuration's connectivity status
      description: Retrieve a notification provider configuration's connectivity status
      operationId: getNotificationProviderConfigurationConnectivityStatus
      parameters:
        - name: id
          in: path
          description: The notification provider configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /notification-provider/configurations/property-names:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve notification provider configuration property names
      description: Retrieve notification provider configuration property names
      operationId: getConfigurationPropertyNames_2
      parameters:
        - name: provider
          in: query
          description: The notification provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of notification provider property names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationProviderConfigurationView'
        '404':
          description: Notification provider not found
          content:
            application/json:
              schema:
                type: object
  /notification-provider/configurations/property-descriptions:
    get:
      tags:
        - Notification Provider Configurations
      summary: Retrieve notification provider configuration property descriptions
      description: Retrieve notification provider configuration property descriptions
      operationId: getConfigurationPropertyDescriptions_1
      parameters:
        - name: provider
          in: query
          description: The notification provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of NotificationProvider Property Names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: NotificationProvider Provider not found
          content:
            application/json:
              schema:
                type: object
  /notification-custom-content/{id}:
    get:
      tags:
        - Notification Custom Content
      summary: Get notification templates for org
      description: Get notification templates for org
      operationId: getNotificationTemplates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The notification templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationTemplateView'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices:
    get:
      tags:
        - Invoices
      summary: List invoices for a user
      description: List invoices for a user
      operationId: listInvoicesByUser
      parameters:
        - name: userId
          in: query
          description: The User ID
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          description: The User's email address
          required: false
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve an invoice
      description: Retrieve an invoice
      operationId: getInvoice
      parameters:
        - name: id
          in: path
          description: The invoice id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceView'
        '403':
          description: Forbidden to access this Invoice
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
            application/pdf:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
            application/pdf:
              schema:
                type: object
  /invoices/{id}/refunds:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds by invoice
      description: Retrieve refunds by invoice
      operationId: listRefundsByInvoice
      parameters:
        - name: id
          in: path
          description: The invoice id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The refunds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundView'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
  /invoices/{id}/line-items:
    get:
      tags:
        - Invoices
      summary: Retrieve line items by invoice
      description: Retrieve line items by invoice
      operationId: listLineItemsByInvoice
      parameters:
        - name: id
          in: path
          description: The invoice id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineItemView'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
  /invoices/user/{userId}/summarized:
    get:
      tags:
        - Invoices
      summary: Paginated list of summarized invoices
      description: Paginated list of summarized invoices
      operationId: summarizedInvoicesByUser
      parameters:
        - name: userId
          in: path
          description: The user's id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/user/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve invoices for a user
      description: Retrieve invoices for a user
      operationId: listInvoices
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/user/{id}/refunds/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds for a user
      description: Retrieve refunds for a user
      operationId: listPagedRefundsByUser
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/user/{id}/recent-transactions/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve transactions for a user
      description: Retrieve transactions for a user
      operationId: listPagedTransactionsByUser
      parameters:
        - name: id
          in: path
          description: The User ID
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this User
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/user/{id}/line-items:
    get:
      tags:
        - Invoices
      summary: Retrieve line items for a user
      description: Retrieve line items for a user
      operationId: listLineItemsByUser
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineItemView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/user/{id}/line-items/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve line items for a user (paginated)
      description: Retrieve line items for a user (paginated)
      operationId: listPagedLineItemsByUser
      parameters:
        - name: id
          in: path
          description: The User ID
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          content:
            '*/*':
              schema:
                type: integer
                default: '0'
        - name: size
          in: query
          description: Number of records per page.
          content:
            '*/*':
              schema:
                type: integer
                default: '5'
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItemPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/summarized/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve a summarized invoice
      description: Retrieve a summarized invoice
      operationId: getSummarizedInvoice
      parameters:
        - name: id
          in: path
          description: The invoice id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceView'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reset-quotas:
    get:
      tags:
        - Invoices
      summary: Reset quotas for the given settlement period
      description: Reset quotas for the given settlement period
      operationId: resetQuotas
      parameters:
        - name: settlementPeriod
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /invoices/reports/total-revenue-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an asset over the defined interval
      description: Retrieve total spend for an asset over the defined interval
      operationId: getTotalAssetSpendByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/total-requests-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total requests by organization over the defined interval
      description: Retrieve total requests by organization over the defined interval
      operationId: getTotalRequestsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-requests-by-consuming-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top requests by consuming organization over the defined
        interval
      description: >-
        Retrieve top requests by consuming organization over the defined
        interval
      operationId: getTopRequestsByConsumingOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/top-products-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating products for an organization over the
        defined interval
      description: >-
        Retrieve top revenue generating products for an organization over the
        defined interval
      operationId: getTopProductsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-producer-requests-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top producer requests over the defined interval
      description: Retrieve top producer requests over the defined interval
      operationId: getTopProducerRequestsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-elements-by-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating elements for an organization over the
        defined interval
      description: Retrieve top consumed elements for a product over the defined interval
      operationId: findTopElementsByProduct
      parameters:
        - name: productId
          in: query
          description: The product id
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The intervals (days, weeks or months)
          required: false
          schema:
            type: string
            default: days
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-elements-by-consuming-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating elements for an organization over the
        defined interval
      description: >-
        Retrieve top consumed elements for a consuming organizations over the
        defined interval
      operationId: getTopElementsForOrganizationByConsumer
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: tenantId
          in: query
          description: The tenant id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-consumers-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumers over the defined interval
      description: Retrieve top consumers over the defined interval
      operationId: getTopConsumersByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-consumer-revenue-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumer revenue over the defined interval
      description: Retrieve top consumer revenue over the defined interval
      operationId: getTopConsumerRevenueByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-consumer-requests-by-product-key-creation:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top consumer requests by productkey creation over the defined
        interval
      description: >-
        Retrieve top consumer requests by productkey creation over the defined
        interval
      operationId: getTopConsumerRequestsByOrganizationByProductKeyCreation
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: true
          schema:
            type: string
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/top-consumer-requests-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumer requests over the defined interval
      description: Retrieve top consumer requests over the defined interval
      operationId: getTopConsumerRequestsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/top-consumer-line-items-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve top consumer requests over the defined interval
      description: Retrieve top consumer requests over the defined interval
      operationId: getTopConsumerLineItemsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: false
          schema:
            type: string
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/top-assets-by-providing-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating assets for an organization over the
        defined interval
      description: >-
        Retrieve top consumed assets by producing organization over the defined
        interval
      operationId: getTopAssetsByProvidingOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-assets-by-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating assets for an organization over the
        defined interval
      description: Retrieve top consumed assets for a product over the defined interval
      operationId: findTopAssetsByProduct
      parameters:
        - name: productId
          in: query
          description: The product id
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The intervals (days, weeks or months)
          required: false
          schema:
            type: string
            default: days
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/top-assets-by-consuming-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve top revenue generating assets for an organization over the
        defined interval
      description: >-
        Retrieve top consumed assets for a consuming organizations over the
        defined interval
      operationId: getTopAssetsByConsumingOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: tenantId
          in: query
          description: The tenant id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/spend-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for a user over the defined interval
      description: Retrieve total spend for a user over the defined interval
      operationId: getTotalSpendForUser
      parameters:
        - name: userId
          in: query
          description: The user id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total user spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/spend-by-product:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an asset over the defined interval
      description: Retrieve total spend for an asset over the defined interval
      operationId: getTotalAssetSpendByProduct
      parameters:
        - name: productId
          in: query
          description: The product id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/spend-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an organization over the defined interval
      description: Retrieve total spend for an organization over the defined interval
      operationId: getTotalSpendForOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/spend-by-assets:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend across multiple assets over the defined interval
      description: Retrieve total spend across multiple assets over the defined interval
      operationId: getTotalSpendByAssets
      parameters:
        - name: assetIds
          in: query
          description: A list of asset ids
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/spend-by-asset:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total spend for an asset over the defined interval
      description: Retrieve total spend for an asset over the defined interval
      operationId: getTotalSpendByAsset
      parameters:
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/recent-charges-by-product-owner:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total charges across all assets over the defined intervals
      description: Retrieve total charges across all assets over the defined intervals
      operationId: getChargeReportForProductByOwner
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: false
          schema:
            type: string
        - name: ownerId
          in: query
          description: The product owner (user) id
          required: false
          schema:
            type: string
        - name: quarterStart
          in: query
          description: The quarter start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: quarterEnd
          in: query
          description: The quarter end timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: yearStart
          in: query
          description: The year start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: yearEnd
          in: query
          description: The year end timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: monthStart
          in: query
          description: The month start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: monthEnd
          in: query
          description: The month end timestamp(milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The charge data
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/recent-charges-by-product-consumer:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total charges across all assets over the defined intervals
      description: Retrieve total charges across all assets over the defined intervals
      operationId: getRecentChargesByConsumer
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: false
          schema:
            type: string
        - name: consumerId
          in: query
          description: The product owner (user) id
          required: false
          schema:
            type: string
        - name: quarterStart
          in: query
          description: The quarter start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: quarterEnd
          in: query
          description: The quarter end timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: yearStart
          in: query
          description: The year start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: yearEnd
          in: query
          description: The year end timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: monthStart
          in: query
          description: The month start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: monthEnd
          in: query
          description: The month end timestamp(milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The charge data
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/recent-charges-by-asset:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total charges across all assets over the defined intervals
      description: Retrieve total charges across all assets over the defined intervals
      operationId: getChargeReportForAsset
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: quarterStart
          in: query
          description: The quarter start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: quarterEnd
          in: query
          description: The quarter end timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: yearStart
          in: query
          description: The year start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: yearEnd
          in: query
          description: The year end timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: monthStart
          in: query
          description: The month start timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: monthEnd
          in: query
          description: The month end timestamp(milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The charge data
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Forbidden to access this Asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/product-keys-without-activity:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve productkeys without activity over the defined interval
      description: Retrieve productkeys without activity over the defined interval
      operationId: getProductKeysWithoutActivity
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKeyProjectedResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/most-engaged-consuming-organizations:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve most engaged consuming organizations over the defined interval
      description: Retrieve most engaged consuming organizations over the defined interval
      operationId: findMostEngagedConsumingOrganizations
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The intervals (days, weeks or months)
          required: false
          schema:
            type: string
            default: days
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/most-engaged-consumers:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve most engaged consumers over the defined interval
      description: Retrieve most engaged consumers over the defined interval
      operationId: getMostEngagedConsumersByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The intervals (days, weeks or months)
          required: false
          schema:
            type: string
            default: days
        - name: aggregationType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT_KEY_CLIENT
      responses:
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/inactive-consumers:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve most inactive consumers consumers over the defined interval
      description: Retrieve inactive consumers over the defined interval
      operationId: getInactiveConsumersByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The intervals (days, weeks or months)
          required: false
          schema:
            type: string
            default: days
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/created-product-key-counts:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total active product key counts over the defined interval
      description: Retrieve total active product key counts over the defined interval
      operationId: getActiveProductKeyCounts
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: productId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: >-
            The total active product key count grouped by day over the supplied
            interval
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/consumers-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve consumers for an organization
      description: Retrieve consumers for an organization
      operationId: getConsumersByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/calls-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total call count for a user over the defined interval
      description: Retrieve total call count for a user over the defined interval
      operationId: getTotalCallCountForUser
      parameters:
        - name: userId
          in: query
          description: The user id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The interval (days, weeks or months)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The total asset call counts
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/calls-by-product:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total calls for a product over the defined interval
      description: Retrieve total calls for a product over the defined interval
      operationId: getTotalCallsByProduct
      parameters:
        - name: productId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/calls-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total call count for an organization over the defined interval
      description: Retrieve total call count for an organization over the defined interval
      operationId: getTotalCallCountForOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: consumingOrganizationId
          in: query
          description: The consuming organization id
          required: false
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The interval (days, weeks or months)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The total Organization call counts
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/calls-by-client-and-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve total call count for an product's usage by a given client over
        the defined interval
      description: >-
        Retrieve total call count for an product's usage by a given client over
        the defined interval
      operationId: getCallCountByClientAndProduct
      parameters:
        - name: clientId
          in: query
          description: The client id
          required: true
          schema:
            type: string
        - name: productId
          in: query
          description: The product id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total product calls
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/calls-by-client-and-asset:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve total call count for an asset's usage by a given client over
        the defined interval
      description: >-
        Retrieve total call count for an asset's usage by a given client over
        the defined interval
      operationId: getCallCountByClientAndAsset
      parameters:
        - name: clientId
          in: query
          description: The client id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: numberOfMonths
          in: query
          description: The number of months of data to get
          required: false
          schema:
            type: integer
            format: int32
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset calls
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/reports/calls-by-asset:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total calls for an asset over the defined interval
      description: Retrieve total calls for an asset over the defined interval
      operationId: getTotalAssetCalls
      parameters:
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this asset
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/asset-total-spend-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for a user
      description: Retrieve total asset spend for a user
      operationId: getTotalSpendByUser
      parameters:
        - name: userId
          in: query
          description: The user id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/asset-spend-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for a user
      description: Retrieve total asset spend for a user
      operationId: getTotalAssetSpendForUserByAsset
      parameters:
        - name: userId
          in: query
          description: The user id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/asset-spend-by-owner:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for an organization over the defined interval
      description: Retrieve total asset spend for an organization over the defined interval
      operationId: getTotalAssetSpendByOrganization_1
      parameters:
        - name: ownerId
          in: query
          description: The owner id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this owner
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/asset-spend-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset spend for an organization over the defined interval
      description: Retrieve total asset spend for an organization over the defined interval
      operationId: getTotalSpendByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset spend
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/asset-calls-by-user:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total asset call count for a user over the defined interval
      description: Retrieve total asset call count for a user over the defined interval
      operationId: getTotalAssetCallCountForUser
      parameters:
        - name: userId
          in: query
          description: The user id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset call counts
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/asset-calls-by-organization:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve total asset call count for an organization over the defined
        interval
      description: >-
        Retrieve total asset call count for an organization over the defined
        interval
      operationId: getTotalAssetCallCountForOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total asset call counts
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/applications-value-by-product:
    get:
      tags:
        - Invoice Reports
      summary: >-
        Retrieve the product applications values for an organization over the
        defined interval
      description: Retrieve the product applications values over the defined interval
      operationId: findTopAssetsByProduct_1
      parameters:
        - name: productId
          in: query
          description: The product id
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          description: The intervals (days, weeks or months)
          required: false
          schema:
            type: string
            default: days
      responses:
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/reports/active-product-key-counts:
    get:
      tags:
        - Invoice Reports
      summary: Retrieve total active product key counts over the defined interval
      description: Retrieve total active product key counts over the defined interval
      operationId: getActiveProductKeyCounts_1
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: interval
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The total active productkey count grouped by day over the supplied
            interval
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/product-keys/top:
    get:
      tags:
        - Invoices
      summary: Retrieve top consuming product keys for the current user
      description: Retrieve top consuming product keys for the current user
      operationId: listTopUsedProductKeys
      parameters:
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top consumed product keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetConsumerRollUpByChargeDTO'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
  /invoices/paged:
    get:
      tags:
        - Invoices
      summary: List invoices (paginated)
      description: List invoices (paginated)
      operationId: pagedInvoices
      parameters:
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: organizationId
          in: query
          description: The organization's id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/paged/{id}/refunds:
    get:
      tags:
        - Invoices
      summary: List refunds (paginated)
      description: List refunds (paginated)
      operationId: pagedRefunds
      parameters:
        - name: id
          in: path
          description: Id of invoice
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The SLA Refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundViewPageResponse'
        '403':
          description: Forbidden to access this Invoice
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
  /invoices/paged/{id}/line-items:
    get:
      tags:
        - Invoices
      summary: List of line items (paginated)
      description: List of line items (paginated)
      operationId: pagedLineItems
      parameters:
        - name: id
          in: path
          description: Id of the invoice
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItemPageResponse'
        '403':
          description: Forbidden to access this invoice
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                type: object
  /invoices/organization/{organizationId}/summarized:
    get:
      tags:
        - Invoices
      summary: Paginated list of summarized invoices
      description: Paginated list of summarized invoices
      operationId: summarizedInvoicesByOrganization
      parameters:
        - name: organizationId
          in: path
          description: The organization's id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/organization/{organizationId}/paged:
    get:
      tags:
        - Invoices
      summary: Paginated list of invoices
      description: Paginated list of invoices
      operationId: pagedInvoicesByOrganization
      parameters:
        - name: organizationId
          in: path
          description: The organization's id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/organization/{id}/refunds/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds for an organization
      description: Retrieve refunds for a organization
      operationId: listPagedRefundsByOrganization
      parameters:
        - name: id
          in: path
          description: The User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Refunds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundViewPageResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/organization/{id}/refunds/csv:
    get:
      tags:
        - Invoices
      summary: Retrieve refunds for an organization as a csv
      description: Retrieve refunds for a organization as a csv
      operationId: getRefundsAsCSV
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The refunds
          content:
            text/plain:
              schema:
                type: string
        '403':
          description: Forbidden to access this organization
          content:
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            text/plain:
              schema:
                type: object
  /invoices/organization/{id}/recent-transactions:
    get:
      tags:
        - Invoices
      summary: Retrieve transactions for an organization
      description: Retrieve transactions for an organization
      operationId: listTransactionsByOrganization
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /invoices/organization/{id}/recent-transactions/search:
    get:
      tags:
        - Invoices
      summary: Search recent transactions for an organization
      description: Search recent transactions for an organization
      operationId: searchTransactionsByOrganization
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The line items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/organization/{id}/recent-transactions/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve transactions for an organization
      description: Retrieve transactions for an organization
      operationId: listPagedTransactionsByOrganization
      parameters:
        - name: id
          in: path
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: productIds
          in: query
          description: The product ids to filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: productLicenseIds
          in: query
          description: The product license ids to filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: clientIds
          in: query
          description: The client email address ids to filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: assetIds
          in: query
          description: The asset ids to filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: applicationIds
          in: query
          description: The application ids to filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: chargeTypes
          in: query
          description: The charge types to filter
          required: false
          schema:
            type: array
            items:
              type: string
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Results page you want to retrieve (0..N)
          content:
            '*/*':
              schema:
                type: integer
                default: '0'
        - name: size
          in: query
          description: Number of records per page.
          content:
            '*/*':
              schema:
                type: integer
                default: '5'
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionViewPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/organization/{id}/line-items/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve line items for an organization
      description: Retrieve line items for an organization
      operationId: listPagedLineItemsByOrganization
      parameters:
        - name: id
          in: path
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Line Items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItemPageResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /invoices/generate:
    get:
      tags:
        - Invoices
      summary: Generate an invoice
      description: Generate an invoice
      operationId: generateInvoice
      parameters:
        - name: settlementPeriod
          in: query
          description: Settlement period of invoice
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Invoice generation disabled not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /invoices/charge-calculation-log/{id}:
    get:
      tags:
        - Invoices
      summary: Charge calculation log
      description: Retrieves a charge calculation log
      operationId: chargeCalculationLog
      parameters:
        - name: id
          in: path
          description: Id of charge calculation log
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The charge calculation log
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeCalculationLogView'
        '403':
          description: Forbidden to access this charge calculation log
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Charge calculation log not found
          content:
            application/json:
              schema:
                type: object
  /invoices/apis/top:
    get:
      tags:
        - Invoices
      summary: Retrieve most consumed APIs for the current user
      description: Retrieve most consumed APIs for the current user
      operationId: listTopConsumedAPIs
      parameters:
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top asset rolled up charged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRollUpByChargeDTO'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /invoices/apis/top/paged:
    get:
      tags:
        - Invoices
      summary: Retrieve paginated most consumed apis for the current user
      description: Retrieve paginated most consumed apis for the current user
      operationId: pagedTopConsumedAPIs
      parameters:
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top asset rolled up charged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetRollUpByChargeDTO'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /identity-provider/configurations/property-names:
    get:
      tags:
        - Identity Provider Configurations
      summary: Retrieve Identity Provider Configuration Property Names
      description: Retrieve Identity Provider Configuration Property Names
      operationId: getConfigurationPropertyNames_3
      parameters:
        - name: provider
          in: query
          description: The Identity Provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Identity Provider Property Names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Identity Provider not found
          content:
            application/json:
              schema:
                type: object
  /identity-provider/configurations/property-descriptions:
    get:
      tags:
        - Identity Provider Configurations
      summary: >-
        Retrieve Identity Provider Management Configuration Property
        Descriptions
      description: Retrieve Identity Provider Configuration Property Descriptions
      operationId: getIdentityProviderConfigurationPropertyDescriptions
      parameters:
        - name: provider
          in: query
          description: The Identity Provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of Identity Property Names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Identity Provider not found
          content:
            application/json:
              schema:
                type: object
  /hubspot/token/{id}:
    get:
      tags:
        - Hubspot
      summary: Get a token
      description: Get a token
      operationId: getToken
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The token
          content:
            application/json:
              schema:
                type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
  /features/paged:
    get:
      tags:
        - Features
      summary: List of features (paginated)
      description: List of features (paginated)
      operationId: pagedFeatures
      parameters:
        - name: ownerId
          in: query
          description: Id of features owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of features organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturePageResponse'
        '403':
          description: Forbidden to access this User
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /export/configurations/property-names:
    get:
      tags:
        - Export Configurations
      summary: Retrieve export configuration property names
      description: Retrieve export configuration property names
      operationId: getExportConfigurationConfigurationPropertyNames
      parameters:
        - name: provider
          in: query
          description: The export provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The export configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Export Provider not found
          content:
            application/json:
              schema:
                type: object
  /environments:
    get:
      tags:
        - Environments
      summary: List environments by organization
      description: List environments by organization
      operationId: getEnvironments
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: apimConfigurationId
          in: query
          description: Filter environments by API managemnet configuration
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The environments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentView'
        '403':
          description: Forbidden to access environments for this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Environment not found
          content:
            application/json:
              schema:
                type: object
  /consumer-data-provider/configurations/{id}/connectivity-status:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve an data provider configuration's connectivity status
      description: Retrieve an data provider configuration's connectivity status
      operationId: getConsumerDataProviderConfigurationConnectivityStatus
      parameters:
        - name: id
          in: path
          description: The data provider configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The data provider configuration connectivity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationResponse'
        '403':
          description: Forbidden to access this data provider configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Data provider configuration not found
          content:
            application/json:
              schema:
                type: object
  /consumer-data-provider/configurations/queries:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve data provider queries
      description: Retrieve data provider queries
      operationId: getDataProviderQueries
      parameters:
        - name: provider
          in: query
          description: The consumer data provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of consumer data provider queries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerDataProviderQueryView'
  /consumer-data-provider/configurations/property-names:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve data provider configuration property names
      description: Retrieve data provider configuration property names
      operationId: getConfigurationPropertyNames_4
      parameters:
        - name: provider
          in: query
          description: The consumer data provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of consumer data provider property names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerDataProviderQueryView'
        '404':
          description: Consumer data provider provider not found
          content:
            application/json:
              schema:
                type: object
  /consumer-data-provider/configurations/property-descriptions:
    get:
      tags:
        - Consumer Data Provider Configurations
      summary: Retrieve data provider configuration property descriptions
      description: Retrieve data provider configuration property descriptions
      operationId: getConfigurationPropertyDescriptions_2
      parameters:
        - name: provider
          in: query
          description: The consumer data provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of ConsumerDataProvider Property Names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Consumer data provider provider not found
          content:
            application/json:
              schema:
                type: object
  /audit-trail/internal/metadata:
    get:
      tags:
        - Internal System Audit Trail
      summary: List internal audit trail event metadata
      description: List internal audit trail event metadata
      operationId: listInternalEventMetadata
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The event metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalEventMetadata'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /audit-trail/internal/events:
    get:
      tags:
        - Internal System Audit Trail
      summary: List internal audit trail events
      description: List internal audit trail events
      operationId: listInternalEvents
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: logSource
          in: query
          description: The log source
          required: false
          schema:
            type: string
        - name: operation
          in: query
          description: The operation type
          required: false
          schema:
            type: string
        - name: results
          in: query
          description: Results
          required: false
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The internal audit trail events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalSystemAuditTrail'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /audit-trail/external/metadata:
    get:
      tags:
        - External System Audit Trail
      summary: List external audit trail event metadata
      description: List external audit trail event metadata
      operationId: listExternalEventMetadata
      parameters:
        - name: organizationId
          in: query
          description: The Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The event metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalEventMetadata'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /audit-trail/external/events:
    get:
      tags:
        - External System Audit Trail
      summary: List external audit trail events
      description: List external audit trail events
      operationId: listExternalEvents
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: logSource
          in: query
          description: The log source
          required: false
          schema:
            type: string
        - name: operation
          in: query
          description: The operation type
          required: false
          schema:
            type: string
        - name: results
          in: query
          description: Results
          required: false
          schema:
            type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The external audit trail events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSystemAuditTrail'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /assets/summarized:
    get:
      tags:
        - Assets
      summary: List assets (summarized)
      description: List assets (summarized)
      operationId: listSummarizedAssets
      parameters:
        - name: organizationId
          in: query
          description: Id of asset's organization
          required: true
          schema:
            type: string
        - name: environmentId
          in: query
          description: The environment id
          required: true
          schema:
            type: string
        - name: ownerId
          in: query
          description: Id of asset's owner
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /assets/search:
    get:
      tags:
        - Assets
      summary: Search for assets
      description: Search for assets
      operationId: searchAssets
      parameters:
        - name: organizationId
          in: query
          description: Id of asset's organization
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /assets/reports/sla-violations-paged:
    get:
      tags:
        - Asset Reports
      summary: List SLA Violations by SLA and date range (paginated)
      description: List SLA Violations by SLA and date range (paginated)
      operationId: listSLAViolationsBySLAAndDateRange
      parameters:
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA Violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationReportPageResponse'
        '403':
          description: Forbidden to access this SLA
          content:
            application/json:
              schema:
                type: object
        '404':
          description: SLA not found
          content:
            application/json:
              schema:
                type: object
  /assets/reports/sla-violations-by-owner:
    get:
      tags:
        - Asset Reports
      summary: Retrieve SLA violations by owner and date range
      description: Retrieve SLA violations by owner and date range
      operationId: listSLAViolationsByOwnerAndDateRange
      parameters:
        - name: ownerId
          in: query
          description: The owner id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA violations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /assets/reports/sla-violations-by-organization:
    get:
      tags:
        - Asset Reports
      summary: List SLA violations by organization and date range (paginated)
      description: List SLA violations by organization and date range (paginated)
      operationId: listSLAViolationsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /assets/reports/sla-violations-by-consumer:
    get:
      tags:
        - Asset Reports
      summary: Retrieve SLA violations by consumer and date range
      description: Retrieve SLA violations by consumer and date range
      operationId: listSLAViolationsByConsumerAndDateRange
      parameters:
        - name: consumerId
          in: query
          description: The consumer id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The SLA violations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Consumer not found
          content:
            application/json:
              schema:
                type: object
  /assets/reports/sla-violation-count-by-organization:
    get:
      tags:
        - Asset Reports
      summary: Count of  SLA violations by organization and date range (paginated)
      description: Count of SLA violations by organization and date range (paginated)
      operationId: countSLAViolationsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The count of SLA violations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAViolationView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /assets/paged:
    get:
      tags:
        - Assets
      summary: List of assets (paginated)
      description: List of assets (paginated)
      operationId: pagedAssets
      parameters:
        - name: ownerId
          in: query
          description: Id of asset's owner
          required: true
          schema:
            type: string
        - name: organizationId
          in: query
          description: Id of assets organization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPageResponse'
        '403':
          description: Forbidden to access this user
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /assets/metadata/unclassified:
    get:
      tags:
        - Assets
      summary: Get unclassified metadata for an organization
      description: Get unclassified urls for an organization
      operationId: getUnclassifiedURLs
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unclassified asset metadata for an organization
          content:
            application/json: {}
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /assets/changelogs/{id}:
    get:
      tags:
        - Assets
      summary: Get changelogs for an asset
      description: Get changelogs for an asset
      operationId: getAssetChangeLogs
      parameters:
        - name: id
          in: path
          description: The asset id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Changelogs for an asset
          content:
            application/json: {}
        '403':
          description: Forbidden to access this product
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Asset not found
          content:
            application/json:
              schema:
                type: object
  /assets/assets-identifiers:
    get:
      tags:
        - Assets
      summary: List of assets owned by a organization
      description: List of assets owned by an organization
      operationId: listAssetsSummarised
      parameters:
        - name: organizationId
          in: query
          description: Id of asset's organization
          required: true
          schema:
            type: string
        - name: apimConfigurationId
          in: query
          description: Id of the API management configuration
          required: true
          schema:
            type: string
        - name: environmentId
          in: query
          description: Id of the environment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The APIs
          content:
            application/json: {}
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Owner not found
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/transaction-counts:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the total transaction count for the tenant
      description: Retrieve the total transaction count for the tenant
      operationId: getTotalTransactionCount
      parameters:
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total transaction count
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this tenant
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/top-applications-by-total-requests:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the top applications by total requests for the organization
      description: Retrieve the top applications by total requests for the organization
      operationId: getTopApplicationByRequests
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The assets id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The top applications by total requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/requests-by-response-type:
    get:
      tags:
        - Asset Metrics
      summary: >-
        Retrieve the total request percentage by response type for the
        organization
      description: >-
        Retrieve the total transaction request percentage response type for the
        organization
      operationId: getRequestsByResponseType
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetIds
          in: query
          description: The asset id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The total request percentage by response type
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/recent-analytics-transaction:
    get:
      tags:
        - Asset Metrics
      summary: List derived asset metrics
      description: List derived asset metrics
      operationId: getRecentAnalyticsTransaction
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: paged
          in: query
          description: Paged flag
          required: false
          schema:
            type: boolean
        - name: method
          in: query
          description: >-
            Filter: the methods use in the operations for the resources to be
            filtered
          required: false
          schema:
            type: string
        - name: assetId
          in: query
          description: 'Filter: the asset ids for the resources to be filtered'
          required: false
          schema:
            type: string
        - name: userDomain
          in: query
          description: 'Filter: the user domains related to the resources to be filtered'
          required: false
          schema:
            type: string
        - name: applicationId
          in: query
          description: 'Filter: the user domains related to the resources to be filtered'
          required: false
          schema:
            type: string
        - name: consumerEmailAddress
          in: query
          description: >-
            Filter: the consumer email address related to the resources to be
            filtered
          required: false
          schema:
            type: string
        - name: consumingOrganizationId
          in: query
          description: >-
            Filter: the consumer organization ids related to the resources to be
            filtered
          required: false
          schema:
            type: string
        - name: responseCode
          in: query
          description: 'Filter: the response codes returned by the resources to be filtered'
          required: false
          schema:
            type: string
        - name: averageLatency
          in: query
          description: >-
            Filter: the average latency calculated by the resources to be
            filtered
          required: false
          schema:
            type: string
        - name: maxLatency
          in: query
          description: >-
            Filter: the maximun latency calculated by the resources to be
            filtered
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: object
  /asset-metrics/derived:
    get:
      tags:
        - Asset Metrics
      summary: List derived asset metrics
      description: List derived asset metrics
      operationId: listDerivedAssetMetrics
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp (milliseconds)
          required: true
          schema:
            type: integer
            format: int64
        - name: group
          in: query
          description: Grouping
          required: false
          schema:
            type: string
        - name: paged
          in: query
          description: Paged
          required: false
          schema:
            type: boolean
        - name: groupFilter
          in: query
          description: GroupFilter
          required: false
          schema:
            type: array
            items:
              type: string
            default: []
      responses:
        '200':
          description: The Applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/derived/assets:
    get:
      tags:
        - Asset Metrics
      summary: List assets derived asset metrics
      description: List assets with derived asset metrics
      operationId: listAssetsWithDerivedAssetMetrics
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The summarized assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryView'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-latencies-by-period:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the api latencies by period for the organization
      description: Retrieve the api latencies by period for the organization
      operationId: getAPILatencyByPeriod
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset's id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: latencyView
          in: query
          description: The latency calculation
          required: false
          schema:
            type: string
            default: AVERAGE_LATENCY
      responses:
        '200':
          description: The API latency by period requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-latencies-by-organization:
    get:
      tags:
        - Asset Metrics
      summary: >-
        Retrieve the API latencies by consuming organization for the
        organization
      description: >-
        Retrieve the API latencies by consuming organization for the
        organization
      operationId: getAPILatencyByConsumingOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset's id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: latencyView
          in: query
          description: The latency calculation
          required: false
          schema:
            type: string
            default: AVERAGE_LATENCY
        - name: consumingOrganizationId
          in: query
          description: The consuming organization ID
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The api latency by consuming organization requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this Organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-latencies-by-api:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the API latencies by API for the organization
      description: Retrieve the API latencies by API for the organization
      operationId: getAPILatencyByAPI
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset's id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: latencyView
          in: query
          description: The latency calculation
          required: false
          schema:
            type: string
            default: AVERAGE_LATENCY
      responses:
        '200':
          description: The API latency by period requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-experience-over-time:
    get:
      tags:
        - Asset Metrics
      summary: List derived grouped asset metrics
      description: List derived grouped asset metrics
      operationId: getApiExperienceOverTime
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The asset id
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eventView
          in: query
          description: The event view selected
          required: false
          schema:
            type: string
            default: TOTAL_REQUESTS
        - name: group
          in: query
          description: The group clause
          required: true
          schema:
            type: string
            default: API_URI
        - name: period
          in: query
          required: false
          schema:
            type: string
            default: LAST_HOUR
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-errors-by-period:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the api error by period for the organization
      description: Retrieve the api error by period for the organization
      operationId: getAPIErrorsByPeriod
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The assets id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: isPercentage
          in: query
          description: The organization id
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: The API error by API requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-errors-by-organization:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the API error by the organization
      description: Retrieve the API error by the organization
      operationId: getAPIErrorsByOrganization
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The assets id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: isPercentage
          in: query
          description: The Organization ID
          required: true
          schema:
            type: boolean
        - name: consumingOrganizationId
          in: query
          description: The consuming organization ID
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: The API error by EPI requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /asset-metrics/api-errors-by-api:
    get:
      tags:
        - Asset Metrics
      summary: Retrieve the API error by API for the organization
      description: Retrieve the API error by API for the organization
      operationId: getAPIErrorsByAPI
      parameters:
        - name: organizationId
          in: query
          description: The organization id
          required: true
          schema:
            type: string
        - name: assetId
          in: query
          description: The assets id
          required: true
          schema:
            type: array
            items:
              type: string
        - name: start
          in: query
          description: The starting timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          description: The ending timestamp
          required: true
          schema:
            type: integer
            format: int64
        - name: isPercentage
          in: query
          description: The Organization ID
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: The api error by API requests
          content:
            application/json:
              schema:
                type: number
                format: double
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
  /applications/{id}:
    get:
      tags:
        - Applications
      summary: Get an Application
      description: Get an Application
      operationId: getApplication
      parameters:
        - name: id
          in: path
          description: The asset id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
        '403':
          description: Forbidden to access this Application
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Applications
      summary: Delete an application
      description: Delete an application
      operationId: deleteApplication
      parameters:
        - name: id
          in: path
          description: The application id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /applications/summarized:
    get:
      tags:
        - Applications
      summary: List summarized applications
      description: List summarized applications
      operationId: listSummarizedApplications
      parameters:
        - name: organizationId
          in: query
          description: Id of application's organization
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: false
          schema:
            type: string
        - name: includeDeactivated
          in: query
          description: Include deactivated applications?
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /applications/summarized/{id}:
    get:
      tags:
        - Applications
      summary: Get summarized applications
      description: Get summarized application
      operationId: getSummarizedApplication
      parameters:
        - name: id
          in: path
          description: The application id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /applications/search:
    get:
      tags:
        - Applications
      summary: Search for applications
      description: Search for applications
      operationId: searchApplications
      parameters:
        - name: organizationId
          in: query
          description: Id of application's organization
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: The query string
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSummaryPageResponse'
        '403':
          description: Forbidden to access this organization
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                type: object
  /apim/configurations/{id}/connectivity-status:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve an API management configuration's connectivity status
      description: Retrieve an API management configuration's connectivity status
      operationId: getAPIMConfigurationConnectivityStatus
      parameters:
        - name: id
          in: path
          description: The API management configuration ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API Management Configuration connectivity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationResponse'
        '403':
          description: Forbidden to access this API Management Configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: API Management Configuration not found
          content:
            application/json:
              schema:
                type: object
  /apim/configurations/property-names:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve API management configuration property names
      description: Retrieve API management configuration property names
      operationId: getConfigurationPropertyNames_5
      parameters:
        - name: provider
          in: query
          description: The API management provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API management property names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: API management provider not found
          content:
            application/json:
              schema:
                type: object
  /apim/configurations/property-descriptions:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve API management configuration property descriptions
      description: Retrieve API management configuration property descriptions
      operationId: getConfigurationPropertyDescriptions_3
      parameters:
        - name: provider
          in: query
          description: The API management provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API management property names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: API management provider not found
          content:
            application/json:
              schema:
                type: object
  /apim/configurations/connectivity-status:
    get:
      tags:
        - API Management Configurations
      summary: Retrieve an API management configuration's connectivity status
      description: Retrieve an API management configuration's connectivity status
      operationId: getAPIMConfigurationConnectivityStatus_1
      parameters:
        - name: clientId
          in: query
          description: The API management client id
          required: true
          schema:
            type: string
        - name: clientSecret
          in: query
          description: The API management client secret
          required: true
          schema:
            type: string
        - name: apimProvider
          in: query
          description: The API management provider
          required: true
          schema:
            type: string
        - name: authenticationMechanism
          in: query
          description: The authentication mechanism
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The API management configuration connectivity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityValidationResponse'
        '403':
          description: Forbidden to access this API management configuration
          content:
            application/json:
              schema:
                type: object
        '404':
          description: API management configuration not found
          content:
            application/json:
              schema:
                type: object
  /account-tier/{id}:
    get:
      tags:
        - Account Tiers
      summary: Get account tier
      description: Get account tier
      operationId: getAccountTier
      parameters:
        - name: id
          in: path
          description: The account tier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /account-tier/products:
    get:
      tags:
        - Account Tiers
      summary: Get details of all products configured for Account Tiers
      description: Get details of all products configured for Account Tiers
      operationId: getAccountTierProducts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /account-tier/current:
    get:
      tags:
        - Account Tiers
      summary: Get the current logged in user's account tier
      description: Get the current logged in user's account tier
      operationId: currentAccountTier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /product-keys/{productKeyId}:
    delete:
      tags:
        - Product Keys
      summary: Deactivate a productkey
      description: Deactivate a productkey
      operationId: deactivateProductKey
      parameters:
        - name: productKeyId
          in: path
          description: The product key id
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: >-
            Delete the productkey immediately as opposed to at the end of its
            associated SettlementPeriod
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Forbidden to access this ProductKey
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Product key not found
          content:
            application/json:
              schema:
                type: object
  /payment/customers/{customerId}/method/{methodId}:
    delete:
      tags:
        - Payment Methods
      summary: Delete a payment method from a payment customer
      description: Delete a payment method from a payment customer
      operationId: deletePaymentMethod
      parameters:
        - name: customerId
          in: path
          description: The payment customer id
          required: true
          schema:
            type: string
        - name: methodId
          in: path
          description: The payment method id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The payment customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCustomerView'
        '404':
          description: Payment customer not found
          content:
            application/json:
              schema:
                type: object
  /api-keys/{id}:
    delete:
      tags:
        - API Keys
      summary: Delete an API Key
      description: Delete an API key
      operationId: deleteAPIKey
      parameters:
        - name: id
          in: path
          description: The API key id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NO_CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '403':
          description: Forbidden to access this API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: API Key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /account-tier/{id}/payment-methods/{paymentMethodId}:
    delete:
      tags:
        - Account Tiers
      summary: Get details of loaded payment methods for account tiers
      description: Get details of loaded payment methods for account tiers
      operationId: payment-methods_2
      parameters:
        - name: id
          in: path
          description: The account tier ID
          required: true
          schema:
            type: string
        - name: paymentMethodId
          in: path
          description: The payment method ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /meter:
    post:
      tags:
        - Metring
      summary: Insert API metering data
      description: Insert API metering data
      operationId: meter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringRequestDTO'
        required: true
      responses:
        '200':
          description: Metering data successfully recorded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
      security:
        - api_key: []
  /event:
    post:
      tags:
        - Events
      summary: Save can API event
      description: Save an API event
      operationId: saveEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEventDTO'
        required: true
      responses:
        '201':
          description: Metering data successfully recorded
          content:
            application/json: {}
      security:
        - api_key: []
  /meter/product-key:
    get:
      tags:
        - Metring
      summary: Determine if a ProductKey is valid or not
      description: Determine if a ProductKey is valid or not
      operationId: valid
      parameters:
        - name: productKey
          in: query
          description: The product key
          required: false
          schema:
            type: string
        - name: application
          in: query
          description: The application ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      security:
        - api_key: []
components:
  schemas:
    UpdateUserDto:
      required:
        - personas
      type: object
      properties:
        username:
          type: string
          description: The unique username
          example: gabe
        emailAddress:
          type: string
          description: The user's email address
          example: gabe@revenium.io
        isActive:
          type: boolean
          description: Is the user active
          example: true
        organizationIds:
          type: array
          description: A list of the organizations the user is a member of
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            type: string
            description: A list of the organizations the user is a member of
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        administeredOrganizationIds:
          type: array
          description: A list of the organizations the user is an administrator of
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            type: string
            description: A list of the organizations the user is an administrator of
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        administeredTenantIds:
          type: array
          description: A list of the tenants the user is an administrator of
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            type: string
            description: A list of the tenants the user is an administrator of
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        roles:
          type: array
          description: The roles granted to the user
          example:
            - ROLE_ADMIN
            - ROLE_API_CONSUMER
          items:
            type: string
            description: The roles granted to the user
            example: '["ROLE_ADMIN","ROLE_API_CONSUMER"]'
        personas:
          type: array
          description: The personas associated with the user
          example:
            - CIO
            - COO
          items:
            type: string
            description: The personas associated with the user
            example: '["CIO","COO"]'
        firstName:
          type: string
        lastName:
          type: string
        active:
          type: boolean
          writeOnly: true
      description: The user
    APIKeyView:
      required:
        - id
        - key
        - name
        - organization
        - owner
        - timestamp
      type: object
      properties:
        id:
          type: string
          description: id of the API Key
          example: 3kTMd
        name:
          type: string
          description: The API key's name
          example: Acme Integration Key
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        key:
          type: string
          description: The API key
          example: 78cccd62-26bf-4868-8c7e-0329a52bbdfd
        timestamp:
          type: integer
          description: The timestamp of when the API key was created
          format: int64
          example: 1643853341000
      description: AssociatedApiKey
    ContactDetailsView:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The id of the contact details
        address1:
          type: string
          description: Address (Line 1)
        address2:
          type: string
          description: Address (Line 2)
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        postalCode:
          type: string
          description: PostalCode
        country:
          type: string
          description: Country
        phoneNumber:
          type: string
          description: PhoneNumber
        emailAddress:
          type: string
          description: EmailAddress
        url:
          type: string
          description: Url
      description: A view of an contact details
    OrganizationView:
      required:
        - currency
        - domainAliases
        - id
        - name
        - tenant
      type: object
      properties:
        id:
          type: string
          description: The id of the organization
        name:
          type: string
          description: The name of the organization
        tenant:
          $ref: '#/components/schemas/TenantView'
        parent:
          $ref: '#/components/schemas/OrganizationView'
        account:
          type: string
          description: The account id of the user
        invoiceNotificationTemplate:
          type: string
          description: Invoice notification template location
        invoiceTemplate:
          type: string
          description: Invoice template location
        productKeyCreationNotificationTemplate:
          type: string
          description: Product Key creation template location
        productKeyUpgradeNotificationTemplate:
          type: string
          description: Product Key upgrade template location
        productKeyQuotaNotificationTemplate:
          type: string
          description: Product Key quota notification template location
        productKeyTierQuotaNotificationTemplate:
          type: string
          description: Product Key tier quota notification template location
        emailFromAddress:
          type: string
          description: >-
            The sender address for notifications generated from this
            Organization (note: requires coordination with the Revenium team to
            setup the appropriate DKIM DNS records
        domainAliases:
          type: array
          description: >-
            Email domains associated with this organization (ie, acmesoft.org,
            acmesoft.io, etc)
          example:
            - acmesoft.org
            - acmesoft.io
          items:
            type: string
            description: >-
              Email domains associated with this organization (ie, acmesoft.org,
              acmesoft.io, etc)
            example: '["acmesoft.org","acmesoft.io"]'
        contactDetails:
          $ref: '#/components/schemas/ContactDetailsView'
        defaultRemittanceInstruction:
          $ref: '#/components/schemas/RemittanceInstructionView'
        logoURL:
          type: string
          description: URL for the organization's logo
        externalId:
          type: string
          description: >-
            An external identifier (e.g. in a API Management system) that is
            associated with the organization
          example: 12345abcd
        assetAutoDiscoveryEnabled:
          type: boolean
          description: Whether asset auto discovery is enabled or not
        currency:
          type: string
          description: The currency of the organization
        invoiceReflectsProduct:
          type: boolean
          description: If the invoice reflects product or product family
        assetMetricReceived:
          type: boolean
          description: If a derived asset metric has been received by this organization
        internalErrorFlagOrg:
          type: boolean
        externalErrorFlagOrg:
          type: boolean
      description: A view of an organization
      example: 3kTMd
    RemittanceInstructionView:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The Id of the RemittanceInstruction
        instructionText:
          type: string
          description: The instruction
        helpText:
          type: string
          description: The help text
        billingEmail:
          type: string
          description: The billing email address
        billingPhoneNumber:
          type: string
          description: The billing phone number
      description: A view of a remittance instruction
    TenantView:
      required:
        - defaultCurrency
        - description
        - id
        - lineItemReceived
        - name
        - profile
      type: object
      properties:
        id:
          type: string
          description: The id of the tenant
        name:
          type: string
          description: The name of the tenant
        description:
          type: string
          description: The description of the tenant
        defaultCurrency:
          type: string
          description: The default currency of the tenant
        profile:
          type: string
          description: The profile type of tenant (MONETIZATION or CHARGEBACK)
        tier:
          type: string
          description: The account tier of the tenant (FREE,PAID,etc)
        status:
          type: string
          description: The account status of the tenant (ACTIVE,INACTIVE,etc)
        lineItemReceived:
          type: boolean
          description: Whether a lineItem has been received for this tenant
        accountTierId:
          type: string
          description: Account tier id for tenant if present
      description: A view of a tenant
    UserView:
      required:
        - account
        - administeredOrganizations
        - administeredTenants
        - emailAddress
        - id
        - isActive
        - organizations
        - password
        - personas
        - roles
        - tenant
        - username
      type: object
      properties:
        id:
          type: string
          description: The id of the iser
        tenant:
          $ref: '#/components/schemas/TenantView'
        username:
          type: string
          description: The username of the user
        emailAddress:
          type: string
          description: The emaul address of the user
        password:
          type: string
        isActive:
          type: boolean
          description: Is the user active?
        account:
          type: string
          description: The account of the user
        organizations:
          type: array
          description: The organizations the user belongs to
          items:
            $ref: '#/components/schemas/OrganizationView'
        roles:
          type: array
          description: The roles of the user
          items:
            type: string
            description: The roles of the user
        administeredOrganizations:
          type: array
          description: The administered organizations of the user
          items:
            $ref: '#/components/schemas/OrganizationView'
        administeredTenants:
          type: array
          description: The administered tenants of the user
          items:
            $ref: '#/components/schemas/TenantView'
        personas:
          type: array
          description: The personas of the user
          items:
            type: string
            description: The personas of the user
        firstName:
          type: string
        lastName:
          type: string
        apiKey:
          $ref: '#/components/schemas/APIKeyView'
      description: A view of a user
    UpdateTrafficAnomalyRuleRequest:
      required:
        - anomalyCategory
        - anomalyType
        - organizationId
        - ruleId
        - thresholdCount
        - thresholdValue
        - timeWindow
        - timeWindowUnit
      type: object
      properties:
        ruleId:
          type: string
          description: The rule id
          example: sAd12df
        organizationId:
          type: string
          description: The organization associated with this rule
          example: sAd12df
        anomalyType:
          type: string
          description: The type of anomaly
          example: LATENCY_RATE_GATEWAY
        anomalyCategory:
          type: string
          description: The category of anomaly
          example: ASSET
        thresholdValue:
          type: number
          description: The threshold value
          format: double
          example: 100
        thresholdCount:
          type: integer
          description: The threshold count
          format: int32
          example: 10
        timeWindow:
          type: integer
          description: The time window
          format: int64
          example: 1
        timeWindowUnit:
          type: string
          description: The time window unit
          example: MINUTES
      description: The update traffic anomaly rule request
    TrafficAnomalyRuleView:
      required:
        - anomalyCategory
        - anomalyType
        - organizationId
        - thresholdCount
        - thresholdValue
        - timeWindow
        - timeWindowUnit
      type: object
      properties:
        organizationId:
          type: string
          description: The organization associated with this rule
          example: sAd12df
        anomalyType:
          type: string
          description: The type of anomaly
          example: LATENCY_RATE_GATEWAY
        anomalyCategory:
          type: string
          description: The category of anomaly
          example: ASSET
        thresholdValue:
          type: number
          description: The threshold value
          format: double
          example: 100
        thresholdCount:
          type: integer
          description: The threshold count
          format: int32
          example: 10
        timeWindow:
          type: integer
          description: The time window
          format: int64
          example: 1
        timeWindowUnit:
          type: string
          description: The time window unit
          example: MINUTES
    UpdateTierRequest:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          description: The id of the tier
          example: NsYmyL
        ownerId:
          type: string
          description: The id of the user that owns the plan
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the plan
          example: sBcTTs3
        name:
          type: string
          description: The name of the feature
          example: documentation
        upTo:
          type: integer
          description: Upper unit limit for tier
          example: 1343234
        unitAmount:
          type: number
          description: Unit amount of the tier
          example: 1343234
      description: The tier
    TierView:
      required:
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tier
          example: 3kTMd
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          type: string
          description: The name of the tier
          example: Free Tier
        upTo:
          type: integer
          description: Upper unit limit for tier
          example: 1343234
        unitAmount:
          type: number
          description: Unit amount of the Tier
          example: 1343234
        flatAmount:
          type: number
          description: Flat amount of the tier
          example: 1343234
        startingFrom:
          type: integer
          description: Lower range of the tier
          example: 1343234
      description: List of Plan tiers
      example: 4
    UpdateTenantDto:
      required:
        - description
        - name
        - profile
      type: object
      properties:
        name:
          type: string
          description: The name of the tenant
          example: AcmeSoft
        description:
          type: string
          description: Description of the tenant
          example: aviation.aircraft
        profile:
          type: string
          description: Profile of the tenant
          example: MONETIZATION
      description: The tenant
    UpdateSubscriberNotificationRequest:
      required:
        - affectedProductLicenseOwner
        - id
        - organizationId
        - productIds
        - selectedOwners
        - subject
      type: object
      properties:
        id:
          type: string
          description: The id of the subscriber notification
          example: aSm1Fsv
        organizationId:
          type: string
          description: The organization associated with the subscriber notification
          example: 3kTmd
        affectedProductLicenseOwner:
          type: string
          description: The type of owners affected by this notification
          example: ALLPLOWNERS
        subject:
          type: string
          description: The body for notification
          example: This is a test
        selectedOwners:
          type: array
          description: All users for notification
          items:
            type: string
            description: All users for notification
        productIds:
          type: array
          description: All products for notification
          items:
            type: string
            description: All products for notification
      description: The application request
    SubscriberNotificationView:
      required:
        - affectedProductLicenseOwners
        - id
        - lastSent
        - organization
        - subject
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the subscriber notification
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        subject:
          type: string
          description: The subject associated with the subscriber notification
          example: This is the subject
        affectedProductLicenseOwners:
          type: string
          description: What primary keys clients are selected by the user
        lastSent:
          type: integer
          description: When the last notification was sent
          format: int64
    UpdateFilterCategoryRequest:
      required:
        - items
        - operator
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: string
        operator:
          type: string
    UpdateStoredFilterRequest:
      required:
        - filterName
        - id
        - organizationId
        - rawJsonFilters
        - userEmail
        - userId
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        filterName:
          type: string
        rawJsonFilters:
          type: string
        userId:
          type: string
        userEmail:
          type: string
        methods:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        assets:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        applications:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        userDomains:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        userEmails:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        consumingOrganizations:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        responseCodes:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        maxLatencies:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
        avgLatencies:
          $ref: '#/components/schemas/UpdateFilterCategoryRequest'
      description: The stored filter to create
    FilterCategoryResponse:
      required:
        - id
        - items
        - operator
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: string
        operator:
          type: string
    StoredFilterResponse:
      required:
        - filterName
        - id
        - organizationId
        - rawJsonFilters
        - userEmail
        - userId
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        filterName:
          type: string
        rawJsonFilters:
          type: string
        userId:
          type: string
        userEmail:
          type: string
        methods:
          $ref: '#/components/schemas/FilterCategoryResponse'
        assets:
          $ref: '#/components/schemas/FilterCategoryResponse'
        applications:
          $ref: '#/components/schemas/FilterCategoryResponse'
        userDomains:
          $ref: '#/components/schemas/FilterCategoryResponse'
        userEmails:
          $ref: '#/components/schemas/FilterCategoryResponse'
        consumingOrganizations:
          $ref: '#/components/schemas/FilterCategoryResponse'
        responseCodes:
          $ref: '#/components/schemas/FilterCategoryResponse'
        maxLatencies:
          $ref: '#/components/schemas/FilterCategoryResponse'
        avgLatencies:
          $ref: '#/components/schemas/FilterCategoryResponse'
    SLAViolationRuleDTO:
      required:
        - rule
        - targetSuccessRate
        - type
      type: object
      properties:
        type:
          type: string
          description: SLA violation rule type (either LATENCY or RESPONSE_CODE)
          example: LATENCY
        rule:
          type: string
          description: >-
            In the case of “LATENCY” then the edit forms will accept millisecond
            values with a default of “100.00”.  In the case of “RESPONSE_CODE”
            the form will accept a range of values with the default being
            “200-299” 
          example: LATENCY
        targetSuccessRate:
          type: number
          description: The target, monthly success rate
          format: double
          example: 0.99
      description: An SLA Violation Rule
      example:
        - 5000
    UpdateSLADefinitionRequest:
      required:
        - violationRules
      type: object
      properties:
        name:
          type: string
          description: The name of an sla definition
          example: Production SLA (99.9% Uptime)
        ownerId:
          type: string
          description: The sla definition's owner
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        baseAdjustment:
          type: number
          description: 'The base adjustment if there is an sla violation '
          format: double
          example: 100
        pricingRuleIds:
          type: array
          description: The sla definition's pricing rules
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The sla definition's pricing rules
            example: '["3kTMd","K3TMs","mmTFd"]'
        violationRules:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationRuleDTO'
      description: The sla definition
    DynamicPricingPropertyView:
      required:
        - id
        - name
        - type
        - value
      type: object
      properties:
        id:
          type: string
          description: The id of the pricing property
          example: 3kTMd
        name:
          type: string
          description: The name of the pricing property
          example: datacenter
        value:
          type: string
          description: The value of the pricing property
          example: us-east-1
        type:
          type: string
          description: The data type of the pricing property
          example: String
      description: A dynamic pricing property
    PricingRuleView:
      required:
        - defaultExecutionNote
        - id
        - name
        - organization
        - owner
        - pricingProperties
        - script
        - target
      type: object
      properties:
        id:
          type: string
          description: The id of the pricing rule
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          type: string
          description: The name of the pricing rule
          example: compute-cost-pricing-rule
        script:
          type: string
          description: The rule's pricing script
          example: lineItem.product.baseCost * 0.20
        pricingProperties:
          type: array
          description: Dynamic properties associated with the pricing rule
          items:
            $ref: '#/components/schemas/DynamicPricingPropertyView'
        defaultExecutionNote:
          type: string
          description: The rule's default execution note
          example: sample execution note
        target:
          type: string
          description: >-
            The target of the result of the pricing rule evaluation (can be
            either CHARGE or CALL_COUNT)
          example: CHARGE
      description: A Pricing Rule
    SLADefinitionView:
      required:
        - baseAdjustment
        - id
        - name
        - organization
        - owner
        - pricingRules
        - violationRules
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of an SLA definition
          example: 3kTMd
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          type: string
          description: The name of an SLA definition
          example: Production SLA (99.9% Uptime)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        baseAdjustment:
          type: number
          description: 'The base adjustment if there is an SLA violation '
          format: double
          example: 100
        pricingRules:
          type: array
          description: The SLA definition's pricing rules
          items:
            $ref: '#/components/schemas/PricingRuleView'
        violationRules:
          type: array
          description: >-
            The rules which triggers the violation (in the case of LATENCY it
            represents the max latency in milliseconds for a backend service to
            response, in the case of RESPONSE_CODE its a comma separated list of
            valid response codes)
          example:
            - 5000
          items:
            $ref: '#/components/schemas/SLAViolationRuleDTO'
      description: An SLA definition
    UpdateSiteRequest:
      required:
        - externalId
        - id
        - name
        - organizationId
      type: object
      properties:
        id:
          type: string
          description: The id of the site
          example: aSm1Fsv
        organizationId:
          type: string
          description: The identifier of the organization associated with the site
          example: aSjk123
        name:
          type: string
          description: The name of the site
          example: My Mobile Site
        externalId:
          type: string
          description: The identifier of the site in an external system
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
      description: The site request
    SiteView:
      required:
        - id
        - organization
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the site
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        externalId:
          type: string
          description: The external site id
          example: 78cccd62-26bf-4868-8c7e-0329a52bbdfd
    UpdateSiteConfigurationRequest:
      required:
        - configurationProperties
      type: object
      properties:
        name:
          type: string
          description: The name of the site configuration
          example: Mulesoft Sites
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        siteProvider:
          type: string
          description: The site provider
          example: MulesoftACMSiteProvider
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The site provider configuration
    SiteConfigurationView:
      required:
        - apimProvider
        - configurationProperties
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the site configuration
          example: 3kTMd
        name:
          type: string
          description: The name of the site configuration
          example: MuleSoft (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        apimProvider:
          type: string
          description: The site provider
          example: MULESOFT
        configurationProperties:
          type: string
          description: Configuration Properties
          example: username=foo,environment=production,loginUr=https://foo.com
    CreatePerformanceDefinitionRequest:
      required:
        - description
        - maxRequests
        - name
        - timePeriod
        - timeUnit
      type: object
      properties:
        name:
          type: string
          description: The name of an performance definition
          example: Platinum Tier
        description:
          type: string
          description: The description of an performance definition
          example: Platinum Tier
        maxRequests:
          type: integer
          description: The maximum amount of requests allowed for the given interval
          format: int32
          example: 100
        timePeriod:
          type: integer
          description: The time period
          format: int32
          example: 2
        timeUnit:
          type: string
          description: The time unit
          example: MINUTES
      description: >-
        A performance definition defining the expected performance
        characteristics for a product
    UpdateFeatureRequestViaProduct:
      required:
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: The id of the tier
          example: NsYmyL
        name:
          type: string
          description: The name of the feature
          example: documentation
        description:
          type: string
          description: The feature description
          example: access to documentation
      description: A feature that can be used in a plan
    UpdatePlanElementRequestViaProduct:
      required:
        - distinctValue
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: The id of the plan element
          example: sBcTTs3
        name:
          type: string
          description: The name of the plan element
          example: Country
        elementDefinitionId:
          type: string
          description: The id of the element definition of the plan element
          example: sBcTTs3
        distinctValue:
          type: string
          description: The distinct value of the plan element (case insensitive)
          example: FRANCE
        flatAmount:
          type: number
          description: Flat amount of the plan element
          example: 34.33
      description: A plan element that can be used in a plan
    UpdatePlanRequestViaProduct:
      required:
        - currency
        - graduated
        - id
        - name
        - planType
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sBcTTs3
        name:
          type: string
          description: The name of the plan
          example: a plan
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
        planType:
          type: string
          description: The plan type, e.g. charge, subscription
          example: SUBSCRIPTION
        charge:
          type: number
          description: The charge for a charge type plan
          example: 3243243
        currency:
          type: string
          description: The plan's currency
          example: USD
        period:
          type: string
          description: The plan period
          example: MONTH
        periodCount:
          type: integer
          description: The period count of the plan
          format: int64
          example: 3
        trialPeriod:
          type: string
          description: The plan trial period
          example: MONTH
        trialPeriodCount:
          uniqueItems: true
          type: array
          description: Trial period count of a subscription plan
          example: 4
          items:
            $ref: '#/components/schemas/UpdateTierRequestViaProduct'
        prePaySetups:
          type: boolean
          description: >-
            Boolean that indicates if setupFees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
        features:
          uniqueItems: true
          type: array
          description: Features of a plan
          items:
            $ref: '#/components/schemas/UpdateFeatureRequestViaProduct'
        elements:
          uniqueItems: true
          type: array
          description: Elements of a plan
          items:
            $ref: '#/components/schemas/UpdatePlanElementRequestViaProduct'
        setups:
          uniqueItems: true
          type: array
          description: Setups of a plan
          items:
            $ref: '#/components/schemas/UpdateSetupFeeRequestViaProduct'
      description: A plan that can be used for a product
    UpdateProductRequest:
      required:
        - assetIds
        - audienceRestriction
        - externalId
        - isStaged
        - namedOrganizations
        - notificationAddressesOnInvoice
        - pricingRuleIds
        - productIds
        - sendDefaultNotificationOnInvoice
        - slaDefinitionIds
        - tags
        - transactionType
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the product
          example: 3kTMd
        organizationId:
          type: string
          description: The id of the organization
          example: '2'
        name:
          type: string
          description: The name of the product
          example: my-awesome-product
        description:
          type: string
          description: The description of the product
          example: Truly an awesome product
        shortDescription:
          type: string
          example: truly an awesome product
        link:
          type: string
          description: A link to the product
          example: https://portal.acmesoft/com/my-awesome-product
        version:
          type: string
          description: The version of the product
          example: 1.0.0
        baseCost:
          type: number
          description: The base cost to access the product
          example: 100
        settlementPeriod:
          type: string
          description: >-
            The settlement period that determines when product charges are
            calculated for an invoice
          example: MONTHLY
        account:
          type: string
          description: The account id
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        transactionType:
          type: string
          description: The transaction type of the product
          example: SUBSCRIPTION
        paymentConfigurationId:
          type: string
          description: The id of the payment configuration
          example: cVks1f
        pricingRuleIds:
          type: array
          description: The product's pricing rules
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The product's pricing rules
            example: '["3kTMd","K3TMs","mmTFd"]'
        assetIds:
          type: array
          description: A list of asset ids that compose the product
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of asset ids that compose the product
            example: '["3kTMd","K3TMs","mmTFd"]'
        productIds:
          type: array
          description: A list of product ids that compose the product
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of product ids that compose the product
            example: '["3kTMd","K3TMs","mmTFd"]'
        slaDefinitionIds:
          type: array
          description: 'A list of sla definition ids to add to this product. '
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: 'A list of sla definition ids to add to this product. '
            example: '["3kTMd","K3TMs","mmTFd"]'
        cpqStaged:
          type: boolean
          description: Is the product staged from a CPQ system?
          example: true
        tags:
          type: array
          description: A list of tags associated with this product.
          example:
            - tag1
            - tag2
            - tag3
          items:
            type: string
            description: A list of tags associated with this product.
            example: '["tag1","tag2","tag3"]'
        defaultQuota:
          type: integer
          description: >-
            The default transaction quota for product keys associated with this
            product
          format: int64
        defaultQuotaNotificationThreshold:
          type: number
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          format: double
        sendDefaultNotificationOnInvoice:
          type: boolean
          description: >-
            Whether or not to send invoice notifications to the recipient of the
            invoice
        notificationAddressesOnInvoice:
          type: array
          description: 'Additional email addresses to end invoice notifications to '
          items:
            type: string
            description: 'Additional email addresses to end invoice notifications to '
        overageRatePerTransaction:
          type: number
          description: >-
            The subscription overage rate per transaction for products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
        subscriptionIncludedTransactions:
          type: integer
          description: >-
            The included transaction count for products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          format: int64
        isStaged:
          type: boolean
          description: Whether or not the product should be staged or immediately live
        code:
          type: string
          description: The product's code (to correlate in an external ERP system)
          example: '1234'
        terms:
          type: string
          description: The terms and conditions
        termsDisplayName:
          type: string
          description: The terms and conditions display name
        additionalTerms1:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName1:
          type: string
          description: Additional terms and conditions display name
        additionalTerms2:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName2:
          type: string
          description: Additional terms and conditions display name
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the Asset
          example: 12345abcd
        displayPriority:
          type: number
          description: The display priority the product
          format: double
          example: 1
        notifyClientOnInvoice:
          type: boolean
          description: Notify client on invoice
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Notify client that trial is about to expire
        audienceRestriction:
          type: string
          description: The audience restriction, if any, on a product
          example: USER
        externalLabel:
          type: string
          description: >-
            An external label for the product that is exposed in developer
            portals
          example: 12345abcd
        environmentId:
          type: string
          description: The environment for the product
          example: Production
        apimConfigurationId:
          type: string
          description: >-
            The id of the APIM Configuration (if synchronizing this product with
            an external APIM)
          example: 3kTMd
        namedOrganizations:
          type: array
          description: The organizations allowed to access the product
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The organizations allowed to access the product
            example: '["3kTMd","K3TMs","mmTFd"]'
        plan:
          $ref: '#/components/schemas/UpdatePlanRequestViaProduct'
        performanceDefinition:
          $ref: '#/components/schemas/CreatePerformanceDefinitionRequest'
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        productLockedToV1:
          type: boolean
          description: Product v1 lock
        logo:
          type: string
          description: The product's logo
        staged:
          type: boolean
          writeOnly: true
      description: The product
    UpdateSetupFeeRequestViaProduct:
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          type: string
          description: The id of the setup fee
          example: sBcTTs3
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amount of the setup fee
          example: 34.33
      description: Setups of a plan
    UpdateTierRequestViaProduct:
      type: object
      properties:
        id:
          type: string
          description: The id of the tier
          example: NsYmyL
        name:
          type: string
          description: The name of the feature
          example: documentation
        upTo:
          type: integer
          description: Upper unit limit for tier
          example: 1343234
        unitAmount:
          type: number
          description: Unit amount of the tier
          example: 1343234
      description: A tier that can be used in a plan
      example: 4
    ApplicationView:
      required:
        - created
        - externalId
        - id
        - name
        - organization
        - productKeyIds
        - tags
        - user
      type: object
      properties:
        id:
          type: string
          description: Unique id of the application
          example: 3kTMd
        name:
          type: string
          description: The name of the application
          example: My Mobile Application
        organization:
          $ref: '#/components/schemas/OrganizationView'
        consumerOrganizationId:
          $ref: '#/components/schemas/OrganizationView'
        user:
          $ref: '#/components/schemas/UserView'
        externalId:
          type: string
          description: The identifier of the application in an external system
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          type: array
          description: The product keys this application is associated with
          items:
            $ref: '#/components/schemas/ProductKeyViewWithoutApplications'
        created:
          type: integer
          description: The timestamp when the product key was created
          format: int64
          example: 1654646301000
        tags:
          type: array
          description: Tags associated with the asset
          items:
            $ref: '#/components/schemas/TagView'
      description: An application
    AssetClassificationPattern:
      type: object
      properties:
        beginsWith:
          type: string
        endsWith:
          type: string
        contains:
          type: string
        regex:
          type: string
        equalsTo:
          type: string
      description: >-
        Classification patterns provide strategies to identify assets from
        metered events
    AssetPropertyView:
      required:
        - id
        - name
        - value
      type: object
      properties:
        id:
          type: string
          description: Id ID of the property
          example: 3kTMd
        name:
          type: string
          description: The name of the property
          example: url
        value:
          type: string
          description: The value of the property
          example: https://api.foo.com/v1
      description: An asset property
    AssetView:
      required:
        - accountId
        - assetType
        - classificationPatterns
        - elementDefinitions
        - id
        - name
        - organization
        - owner
        - products
        - properties
        - syncedToGateway
        - tags
        - version
      type: object
      properties:
        id:
          type: string
          description: The id of the asset
          example: sVc8ak
        assetType:
          type: string
          description: The type of the asset
          example: API
        accountId:
          type: string
          description: The account id of the asset
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          type: string
          description: The name of the asset
          example: my-awesome-asset
        description:
          type: string
          description: The description of the asset (HTML formatted)
          example: <b>Truly an awesome product</b>
        version:
          type: string
          description: The asset's version
          example: 1.0.0
        organization:
          $ref: '#/components/schemas/OrganizationView'
        products:
          type: array
          description: A list of productIds
          items:
            $ref: '#/components/schemas/ProductView'
        properties:
          type: array
          description: Dynamic properties associated with the asset
          items:
            $ref: '#/components/schemas/AssetPropertyView'
        tags:
          type: array
          description: Tags associated with the asset
          items:
            $ref: '#/components/schemas/TagView'
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the asset
          example: 12345abcd
        code:
          type: string
          description: The asset code
          example: '1234'
        environmentId:
          type: string
          description: The environment's identifier
          example: sFak12
        environment:
          type: string
          description: The environment
          example: Production
        syncedToGateway:
          type: boolean
          description: Whether or not the asset is synchronized with an API Gateway
        resource:
          type: string
          description: The asset's unique resource / URI
          example: /api/products
        method:
          type: string
          description: The asset's method
          example: GET
        applicationAutoDiscoveryEnabled:
          type: boolean
          description: Whether application auto discovery is enabled or not
        classificationPatterns:
          type: array
          description: The Asset classification patterns
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
        elementDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ElementDefinitionView'
        logoURL:
          type: string
          description: S3 Path for the Assets' logo
        devPortalLink:
          type: string
          description: The devPortalLink of the asset
      description: An asset being metered
    AssetViewWithoutProducts:
      required:
        - accountId
        - assetType
        - classificationPatterns
        - id
        - name
        - organization
        - owner
        - properties
        - syncedToGateway
        - tags
        - version
      type: object
      properties:
        id:
          type: string
          description: The ID of the asset
          example: sVc8ak
        assetType:
          type: string
          description: The type of the asset
          example: API
        accountId:
          type: string
          description: The account id of the asset
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          type: string
          description: The name of the asset
          example: my-awesome-asset
        description:
          type: string
          description: The description of the asset (HTML formatted)
          example: <b>Truly an awesome product</b>
        version:
          type: string
          description: The asset's version
          example: 1.0.0
        organization:
          $ref: '#/components/schemas/OrganizationView'
        properties:
          type: array
          description: Dynamic properties associated with the asset
          items:
            $ref: '#/components/schemas/AssetPropertyView'
        tags:
          type: array
          description: Tags associated with the asset
          items:
            $ref: '#/components/schemas/TagView'
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the asset
          example: 12345abcd
        code:
          type: string
          description: The asset code
          example: '1234'
        environment:
          type: string
          description: The environment
          example: Production
        syncedToGateway:
          type: boolean
          description: Whether or not the asset is synchronized with an API Gateway
        resource:
          type: string
          description: The asset's resource
          example: https://api.foo.com/api
        method:
          type: string
          description: The asset's method
          example: GET
        applicationAutoDiscoveryEnabled:
          type: boolean
          description: Whether auto discovery is enabled or not
        classificationPatterns:
          type: array
          description: The Asset classification patterns
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
      description: An Asset/Service being metered by the platform
    ChargeCalculationLogView:
      required:
        - baseCharge
        - charge
        - currency
        - executionLogs
        - id
        - product
        - productKey
      type: object
      properties:
        id:
          type: string
          description: The id
        executionLogs:
          type: array
          items:
            $ref: '#/components/schemas/PricingExecutionLogView'
        baseCharge:
          type: number
        charge:
          type: number
          description: The total computed charge
        product:
          $ref: '#/components/schemas/ProductView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        asset:
          $ref: '#/components/schemas/AssetView'
        currency:
          type: string
          description: The currency
      description: A charge calculation log
    ConsumerDataProviderConfigurationView:
      required:
        - configurationProperties
        - consumerDataProviderProvider
        - createSQL
        - id
        - name
        - organization
        - owner
        - querySQL
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the consumer data provider configuration
          example: 3kTMd
        name:
          type: string
          description: The name of the consumer data provider Configuration
          example: MuleSoft (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        consumerDataProviderProvider:
          type: string
          description: The consumer data provider
          example: MULESOFT
        configurationProperties:
          type: string
          description: Configuration Properties
          example: username=foo,environment=production,loginUr=https://foo.com
        createSQL:
          type: string
          description: The billing table schema creation SQL
        querySQL:
          type: string
          description: The billing table schema query SQL
      description: A consumerDataProviderConfiguration associated with the license
    ElementAggregationView:
      required:
        - count
        - id
      type: object
      properties:
        id:
          type: string
          description: The id of the element aggregation
          example: 3kTMd
        definition:
          $ref: '#/components/schemas/ElementDefinitionView'
        distinctValue:
          type: string
          description: Distinct value of element aggregation
        count:
          type: integer
          description: Count of element aggregation
          example: 3
      description: Aggregation data for an element over a subscription period
    ElementDefinitionView:
      required:
        - description
        - id
        - isActive
        - name
        - type
        - uuid
      type: object
      properties:
        id:
          type: string
          description: The id of the element definition
          example: sVc8ak
        name:
          type: string
          description: The name of the element definition
          example: definition one
        type:
          type: string
          description: The type of the element definition
          example: NUMBER or STRING
          enum:
            - STRING
            - NUMBER
        description:
          type: string
          description: The description of the element definition
          example: This is a test element definition
        uuid:
          type: string
          description: The uuid of the element definition
          example: 29d16094-4043-447b-9781-4d64a2977e79
        isActive:
          type: boolean
          example: true
        active:
          type: boolean
          writeOnly: true
      description: An ElementDefinition/Service being metered by the platform
    EnvironmentView:
      required:
        - apimConfigurationId
        - apimConfigurationName
        - apimConfigurationProvider
        - externalId
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: The environment's id
          example: 3kTMd
        name:
          type: string
          description: The environment's name
          example: Production
        externalId:
          type: string
          description: >-
            The environment's external identifier (ie, in an external API
            management platform)
          example: 0e99ac0b-d62d-4e88-adfc-54c8f267d3d8
        apimConfigurationId:
          type: string
        apimConfigurationName:
          type: string
        apimConfigurationProvider:
          type: string
      description: An environment
      example: Production
    FeatureView:
      required:
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the Tier
          example: 3kTMd
        name:
          type: string
          description: Feature Name
          example: Documentation
        description:
          type: string
          description: Feature Description
          example: Access to Documentation
      description: List of plan features
    PaymentConfigurationView:
      required:
        - configurationProperties
        - id
        - name
        - organization
        - owner
        - paymentProvider
        - tax
      type: object
      properties:
        id:
          type: string
          description: Unique id of the payment configuration
          example: 3kTMd
        name:
          type: string
          description: The name of the payment configuration
          example: Stripe (Production)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        paymentProvider:
          type: string
          description: The payment provider
          example: STRIPE
        tax:
          type: string
          description: Payment tax setting
          example: EXCLUSIVE
          enum:
            - INCLUSIVE
            - EXCLUSIVE
            - NONE
        testModeEnabled:
          type: boolean
          description: Is test mode enabled?
        configurationProperties:
          type: string
          description: Configuration Properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: Payment Configuration
    PerformanceDefinitionView:
      required:
        - description
        - id
        - maxRequests
        - name
        - timePeriod
        - timeUnit
      type: object
      properties:
        id:
          type: string
          description: Unique id of the performance definition
          example: 3kTMd
        name:
          type: string
          description: The name of the performance definition
          example: Platinum Tier
        description:
          type: string
          description: The description of the performance definition
          example: Platinum Tier
        maxRequests:
          type: integer
          description: 'The maximum amount of requests allowed for the given interval '
          format: int32
          example: 100
        timePeriod:
          type: integer
          description: The time period
          format: int32
          example: 2
        timeUnit:
          type: string
          description: The time unit
          example: MINUTES
      description: A performance definition for a product
    PlanElementForProductView:
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sVc8ak
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amount of the setup fee
          example: 34.33
      description: List of setup fees
    PlanForProductView:
      required:
        - currency
        - elements
        - features
        - graduated
        - id
        - name
        - planType
        - setups
        - template
        - tiers
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sVc8ak
        name:
          type: string
          description: Name of the plan
          example: enterprise plan
        planType:
          type: string
          description: The plan type
          example: SUBSCRIPTION
        charge:
          type: number
          description: One time payment charge
          example: 23344.77
        currency:
          type: string
          description: The currency of the plan
          example: USD
        period:
          type: string
          description: The subscription plan period
          example: MONTH
        periodCount:
          type: integer
          description: Period count of a subscription plan
          format: int64
          example: 4
        trialPeriod:
          type: string
          description: The subscription plan trial period
          example: MONTH
        trialPeriodCount:
          type: integer
          description: Trial Period count of a subscription plan
          format: int64
          example: 4
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. It
            defaults to true
        template:
          type: boolean
          description: >-
            Boolean that indicates if a plan is a template. A template plan
            cannot be attached to a product.
        prePaySetups:
          type: boolean
          description: >-
            Boolean that indicates if setupFees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
        tiers:
          uniqueItems: true
          type: array
          description: List of Plan tiers
          example: 4
          items:
            $ref: '#/components/schemas/TierForProductView'
        elements:
          uniqueItems: true
          type: array
          description: List of plan elements
          items:
            $ref: '#/components/schemas/PlanElementForProductView'
        features:
          uniqueItems: true
          type: array
          description: List of plan features
          items:
            $ref: '#/components/schemas/FeatureView'
        setups:
          uniqueItems: true
          type: array
          description: List of setup fees
          items:
            $ref: '#/components/schemas/PlanElementForProductView'
      description: The plan of the Product
      example: 3kTMd
    PlanQuotaForProductKeyView:
      required:
        - id
        - planTierId
        - planTierName
      type: object
      properties:
        id:
          type: string
          description: The ID of the Plan
          example: sVc8ak
        planTierId:
          type: string
          description: The ID of the Plan Quota Tier
          example: sVc8ak
        planTierName:
          type: string
          description: The name of the Plan Quota Tier
          example: sVc8ak
        tierQuotaConsumed:
          type: integer
          description: Amount of tier Quota consumed
          format: int64
          example: 4
        lowerTierQuotaLimit:
          type: integer
          description: Lower Tier Quota Limit
          format: int64
          example: 4
        tierQuota:
          type: integer
          description: Tier Quota
          format: int64
          example: 4
        wentOverTierQuota:
          type: boolean
          description: True if tier quota has been exceeded
          example: false
      description: A list of Plan Quotas for this Product Key
    PricingExecutionLogView:
      required:
        - id
        - note
        - organization
        - product
        - productKey
        - result
        - rule
        - timestamp
        - unmodifiedCharge
      type: object
      properties:
        id:
          type: string
          description: The id of the pricing rule
        organization:
          $ref: '#/components/schemas/OrganizationView'
        rule:
          $ref: '#/components/schemas/PricingRuleView'
        product:
          $ref: '#/components/schemas/ProductView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        result:
          type: number
          description: The result of the execution
          format: double
          example: 100
        errorMessage:
          type: string
          description: The error message of the execution
        note:
          type: string
          description: Any notes on the execution
          example: 20% Discount Applied
        unmodifiedCharge:
          type: number
          description: >-
            The amount charged in the metered period before any Pricing Rules
            have been applied
          format: double
          example: 200
        callCount:
          type: integer
          description: >-
            The amount of API calls being charged for before any Pricing Rules
            have been applied
          format: int64
          example: 100
        timestamp:
          type: integer
          description: The time the PricingRule was execution
          format: int64
          example: 1651779724000
      description: A pricing rule execution log entry
    ProductKeyView:
      required:
        - applications
        - created
        - deletionPending
        - disableProductKeyOnPaymentFailed
        - id
        - key
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - organization
        - owner
        - planQuotas
        - pricingRules
        - quota
        - quotaConsumed
        - quotaNotificationThreshold
        - sendDefaultNotificationOnCreation
        - sendDefaultNotificationOnQuotaThreshold
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the Product Key
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        description:
          type: string
          description: A description
          example: 'product key #1234'
        valid:
          type: boolean
          description: Is the key valid?
          example: true
        owner:
          $ref: '#/components/schemas/UserView'
        key:
          type: string
          description: The key
          example: 5c99c760-4d11-4463-a211-937594d913d0
        pricingRules:
          type: array
          description: A list of Pricing Rule IDs associated with this product key
          items:
            $ref: '#/components/schemas/PricingRuleView'
        expiration:
          type: integer
          description: The ProductKey's expiration timestamp (milliseconds)
          format: int64
          example: 1620579969000
        client:
          $ref: '#/components/schemas/UserView'
        externalQuoteId:
          type: string
          description: >-
            The quote the ProductKey may be associated with in an external CPQ
            system
        quota:
          type: integer
          description: The optional transaction quota associated with the product key
          format: int64
        quotaConsumed:
          type: integer
          description: The consumed quota associated with the product key
          format: int64
        quotaNotificationThreshold:
          type: number
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          format: double
        applications:
          type: array
          description: A list of Application associated with this product key
          items:
            $ref: '#/components/schemas/ApplicationView'
        sendDefaultNotificationOnCreation:
          type: boolean
          description: >-
            Whether or not to send Notifications to the ProductKey creator on
            creation
        notificationAddressesOnCreation:
          type: array
          description: Additional email addresses for ProductKey creation notification
          items:
            type: string
            description: Additional email addresses for ProductKey creation notification
        sendDefaultNotificationOnQuotaThreshold:
          type: boolean
          description: Whether or not to send quota Notifications to the ProductKey's owner
        notificationAddressesOnQuotaThreshold:
          type: array
          description: Additional email addresses for ProductKey quota notifications
          items:
            type: string
            description: Additional email addresses for ProductKey quota notifications
        subscriptionQuotaCount:
          type: integer
          description: 'The subscriptionQuotaCount '
          format: int64
        subscriptionStartDate:
          type: integer
          description: The subscription start date
          format: int64
        disableProductKeyOnPaymentFailed:
          type: boolean
          description: Whether or not to disable the ProductKey on payment failed
        deletionPending:
          type: boolean
          description: >-
            ProductKey will be deleted soon, e.g. at the end of the current
            subscription period
        created:
          type: integer
          description: The timestamp when the ProductKey was created
          format: int64
          example: 1654646301000
        subscriptionPeriodStartDate:
          type: integer
          description: Start date of current subscription period
          format: int64
        subscriptionPeriodEndDate:
          type: integer
          description: End date of current subscription period
          format: int64
        subscriptionTrialEndDate:
          type: integer
          description: End date of subscription trial period
          format: int64
        subscriptionIncludedTransactions:
          type: integer
          description: 'The subscriptionIncludedTransactions '
          format: int64
        namedConsumers:
          type: array
          description: List of user email addresses who are allowed to access the Product
          items:
            type: string
            description: List of user email addresses who are allowed to access the Product
        namedOrganizations:
          type: array
          description: The Product's Named Organizations
          items:
            $ref: '#/components/schemas/OrganizationView'
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Whether or not to notify client when trial is about to expiry
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        consumerDataProviderConfiguration:
          $ref: '#/components/schemas/ConsumerDataProviderConfigurationView'
        currentSubscriptionPeriod:
          $ref: '#/components/schemas/SubscriptionPeriodView'
        planQuotas:
          type: array
          description: A list of Plan Quotas for this Product Key
          items:
            $ref: '#/components/schemas/PlanQuotaForProductKeyView'
      description: A Product Key to accessing an Product's Asset(s)
    ProductKeyViewWithoutApplications:
      required:
        - deletionPending
        - disableProductKeyOnPaymentFailed
        - id
        - key
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - organization
        - owner
        - planQuotas
        - pricingRules
        - products
        - quota
        - quotaConsumed
        - quotaNotificationThreshold
        - sendDefaultNotificationOnCreation
        - sendDefaultNotificationOnQuotaThreshold
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the product key
          example: 3kTMd
        organization:
          $ref: '#/components/schemas/OrganizationView'
        products:
          type: array
          description: The id of the Product the ProductKey belongs to
          items:
            $ref: '#/components/schemas/ProductView'
        description:
          type: string
          description: A description
          example: 'product key #1234'
        valid:
          type: boolean
          description: Is the key valid?
          example: true
        owner:
          $ref: '#/components/schemas/UserView'
        key:
          type: string
          description: The key
          example: 5c99c760-4d11-4463-a211-937594d913d0
        pricingRules:
          type: array
          description: A list of Pricing Rule IDs associated with this product key
          items:
            $ref: '#/components/schemas/PricingRuleView'
        expiration:
          type: integer
          description: The ProductKey's expiration timestamp (milliseconds)
          format: int64
          example: 1620579969000
        client:
          $ref: '#/components/schemas/UserView'
        externalQuoteId:
          type: string
          description: >-
            The quote the ProductKey may be associated with in an external CPQ
            system
        quota:
          type: integer
          description: The optional transaction quota associated with the product key
          format: int64
        quotaConsumed:
          type: integer
          description: The consumed quota associated with the product key
          format: int64
        quotaNotificationThreshold:
          type: number
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          format: double
        sendDefaultNotificationOnCreation:
          type: boolean
          description: >-
            Whether or not to send Notifications to the ProductKey creator on
            creation
        notificationAddressesOnCreation:
          type: array
          description: Additional email addresses for ProductKey creation notification
          items:
            type: string
            description: Additional email addresses for ProductKey creation notification
        sendDefaultNotificationOnQuotaThreshold:
          type: boolean
          description: Whether or not to send quota Notifications to the ProductKey's owner
        notificationAddressesOnQuotaThreshold:
          type: array
          description: Additional email addresses for ProductKey quota notifications
          items:
            type: string
            description: Additional email addresses for ProductKey quota notifications
        subscriptionQuotaCount:
          type: integer
          description: 'The subscriptionQuotaCount '
          format: int64
        subscriptionStartDate:
          type: integer
          description: The subscription start date
          format: int64
        disableProductKeyOnPaymentFailed:
          type: boolean
          description: Whether or not to disable the ProductKey on payment failed
        deletionPending:
          type: boolean
          description: >-
            ProductKey will be deleted soon, e.g. at the end of the current
            subscription period
        subscriptionPeriodStartDate:
          type: integer
          description: Start date of current subscription period
          format: int64
        subscriptionPeriodEndDate:
          type: integer
          description: End date of current subscription period
          format: int64
        namedConsumers:
          type: array
          description: List of user email addresses who are allowed to access the Product
          items:
            type: string
            description: List of user email addresses who are allowed to access the Product
        namedOrganizations:
          type: array
          description: The Product's Named Organizations
          items:
            $ref: '#/components/schemas/OrganizationView'
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Whether or not to notify client when trial is about to expiry
        subscriptionTrialEndDate:
          type: integer
          description: End date of subscription trial
          format: int64
        currentSubscriptionPeriod:
          $ref: '#/components/schemas/SubscriptionPeriodView'
        planQuotas:
          type: array
          description: A list of Plan Quotas for this Product Key
          items:
            $ref: '#/components/schemas/PlanQuotaForProductKeyView'
      description: A product key to accessing an Product's Asset(s)
    ProductMetricsView:
      required:
        - callCount
      type: object
      properties:
        callCount:
          type: integer
          description: The total count of calls for the API over the requested date range
          format: int64
          example: 4000
        spend:
          type: number
          description: The total spend for the API over the requested date range
          format: double
          example: 1234.56
        consumerCount:
          type: integer
          description: The total count of consumers for the product
          format: int64
          example: 4000
        id:
          type: string
          description: The Product's name
          example: API Product
      description: Product Metrics
    ProductSLAView:
      required:
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          type: string
          description: The id of the SLA enforced product
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        name:
          type: string
          description: The name of the SLA
          example: platinum
        organization:
          $ref: '#/components/schemas/OrganizationView'
      description: An SLA associated with a product
    ProductView:
      required:
        - account
        - assets
        - audienceRestriction
        - baseCost
        - isStaged
        - name
        - notificationAddressesOnInvoice
        - organization
        - owner
        - pricingRules
        - products
        - sendDefaultNotificationOnInvoice
        - settlementPeriod
        - syncedToGateway
        - tags
        - transactionType
        - version
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the product
          example: 3kTMd
        name:
          type: string
          description: The name of the product
          example: my-awesome-product
        description:
          type: string
          description: The description of the product (HTML formatted)
          example: <b>Truly an awesome product</b>
        shortDescription:
          type: string
          example: Truly an awesome product
        link:
          type: string
          description: A link to the product
          example: https://portal.acmesoft/com/my-awesome-product
        version:
          type: string
          description: The version of the product
          example: 1.0.0
        baseCost:
          type: number
          description: The base transaction cost to access the product
          example: 100
        settlementPeriod:
          type: string
          description: >-
            The settlement period that determines when product charges are
            calculated for an invoice
          example: MONTHLY
        account:
          type: string
          description: The account ID
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        transactionType:
          type: string
          description: The transaction type of the product
          example: SUBSCRIPTION
        pricingRules:
          type: array
          description: The product's pricing rules
          items:
            $ref: '#/components/schemas/PricingRuleView'
        assets:
          type: array
          description: A list of assets that compose the product
          items:
            $ref: '#/components/schemas/AssetViewWithoutProducts'
        products:
          type: array
          description: A list of products that compose the product
          items:
            $ref: '#/components/schemas/ProductView'
        cpqStaged:
          type: boolean
          description: Is the product staged from a CPQ system?
          example: true
        slas:
          type: array
          description: A list of SLAs associated with the product
          items:
            $ref: '#/components/schemas/SLAView'
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        slaViolations:
          type: array
          description: A list of SLA violations
          items:
            $ref: '#/components/schemas/SLAViolationView'
        productMetrics:
          $ref: '#/components/schemas/ProductMetricsView'
        tags:
          type: array
          description: 'A list of tags associated with this product. '
          example:
            - tag1
            - tag2
            - tag3
          items:
            $ref: '#/components/schemas/TagView'
        defaultQuota:
          type: integer
          description: >-
            The default transaction quota for product keys associated with this
            product
          format: int64
        defaultQuotaNotificationThreshold:
          type: number
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          format: double
        sendDefaultNotificationOnInvoice:
          type: boolean
          description: >-
            Whether or not to send Invoice notifications to the recipient of the
            Invoice
        notificationAddressesOnInvoice:
          type: array
          description: 'Additional email addresses to end Invoice notifications to '
          items:
            type: string
            description: 'Additional email addresses to end Invoice notifications to '
        overageRatePerTransaction:
          type: number
          description: >-
            The subscription overage rate per transaction for Products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
        subscriptionIncludedTransactions:
          type: integer
          description: >-
            The included transaction count for Products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          format: int64
        externalPaymentPriceId:
          type: string
          description: Payment provider price ID
        isStaged:
          type: boolean
          description: Whether or not the Product should be staged or immediately live
        code:
          type: string
          description: The product code
          example: '1234'
        terms:
          type: string
          description: The terms and conditions
        termsDisplayName:
          type: string
          description: The terms and conditions display name
        additionalTerms1:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName1:
          type: string
          description: Additional terms and conditions displayed name
        additionalTerms2:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName2:
          type: string
          description: Additional terms and conditions displayed name
        productKeyCreationNotificationTemplate:
          type: string
        productKeyUpgradeNotificationTemplate:
          type: string
        productKeyQuotaNotificationTemplate:
          type: string
        disableProductKeyOnPaymentFailed:
          type: boolean
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the product
          example: 12345abcd
        displayPriority:
          type: number
          description: The display priority the product
          format: double
          example: 1
        notifyClientOnInvoice:
          type: boolean
          description: Notify client on invoice
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Notify client that trial is about to expire
        audienceRestriction:
          type: string
          description: The audience restriction, if any, on a product
          example: USER
        syncedToGateway:
          type: boolean
          description: Whether or not the product is synchronized with an API Gateway
        environment:
          $ref: '#/components/schemas/EnvironmentView'
        externalGroupId:
          type: string
          description: >-
            An external API group identifier (ie, in a API management system)
            that is associated with the Product
          example: 12345abcd
        externalLabel:
          type: string
          description: >-
            An external label for the Product that is exposed in developer
            portals
          example: 12345abcd
        environmentId:
          type: string
          description: The environment for the product
          example: Production
        apimConfigurationId:
          type: string
          description: >-
            The ID of the APIM Configuration (if synchronizing this product with
            an external APIM)
          example: 3kTMd
        plan:
          $ref: '#/components/schemas/PlanForProductView'
        performanceDefinition:
          $ref: '#/components/schemas/PerformanceDefinitionView'
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        productLockedToV1:
          type: boolean
          description: Product V1 Lock
        logoURL:
          type: string
        staged:
          type: boolean
          writeOnly: true
      description: A Product
    SLAView:
      required:
        - id
        - product
        - slaDefinition
      type: object
      properties:
        id:
          type: string
          description: Unique id of the SLA
          example: 3kTMd
        product:
          $ref: '#/components/schemas/ProductSLAView'
        slaDefinition:
          $ref: '#/components/schemas/SLADefinitionView'
      description: A Service Level Agreement
    SLAViolationView:
      required:
        - asset
        - consumer
        - currency
        - id
        - product
        - refundAmount
        - reviewer
        - sla
        - slaDefinitionName
        - timestamp
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the SLA Vvolation
          example: 3kTMd
        consumer:
          $ref: '#/components/schemas/UserView'
        sla:
          $ref: '#/components/schemas/SLAView'
        slaDefinitionName:
          type: string
          description: The name of the SLA definition the violation is associated with
          example: Central IT SLA (99.9% Uptime)
        description:
          type: string
          description: A description of the violation
          example: 500 response code from upstream service
        asset:
          $ref: '#/components/schemas/AssetView'
        product:
          $ref: '#/components/schemas/ProductSLAView'
        isReviewed:
          type: boolean
          description: Has the violation been reviewed?
          example: false
        timestamp:
          type: integer
          description: The violation time
          format: int64
          example: 1585104831000
        refundAmount:
          type: number
          description: The refund amount
          format: double
          example: 100
        chargeCalculationLog:
          $ref: '#/components/schemas/ChargeCalculationLogView'
        reviewer:
          $ref: '#/components/schemas/UserView'
        currency:
          type: string
          description: The currency
        reviewed:
          type: boolean
          writeOnly: true
      description: A service level Aareement violation
    SubscriptionPeriodView:
      required:
        - elementAggregations
        - id
        - periodOpen
      type: object
      properties:
        id:
          type: string
          description: The ID of the subscription period
          example: 3kTMd
        subscriptionPeriodStartDate:
          type: integer
          description: Start date of current subscription period
          format: int64
        subscriptionPeriodEndDate:
          type: integer
          description: End date of current subscription period
          format: int64
        periodOpen:
          type: boolean
          example: true
        elementAggregations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ElementAggregationView'
      description: The subscription period for a product key
    TagView:
      required:
        - id
        - name
        - organization
      type: object
      properties:
        id:
          type: string
          description: The tag's id
          example: 3kTMd
        name:
          type: string
          description: The tag's name
          example: mytag1
        organization:
          $ref: '#/components/schemas/OrganizationView'
      description: A tag
      example:
        - tag1
        - tag2
        - tag3
    TierForProductView:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique id for the tier
          example: 3kTMd
        name:
          type: string
          description: The name of the tier
          example: Free Tier
        upTo:
          type: integer
          description: Upper unit limit for tier
          example: 1343234
        unitAmount:
          type: number
          description: Unit amount of the tier
          example: 1343234
        startingFrom:
          type: integer
          description: Lower range of the tier
          example: 1343234
      description: List of Plan tiers
      example: 4
    UpdateProductFamilyRequest:
      required:
        - name
        - organizationId
        - ownerId
        - productFamilyTiers
      type: object
      properties:
        organizationId:
          type: string
          description: The id of the organization that owns the product family
          example: sBcTTs3
        ownerId:
          type: string
          description: The id of the owner of the product family
          example: sBcTTs3
        name:
          type: string
          description: The name of the product family
          example: a Product Family
        allowProductFamilyDowngrade:
          type: boolean
          description: Boolean to allow product family downgrade
          example: true
        allowProductFamilyUpgrade:
          type: boolean
          description: Boolean to allow product family upgrade
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProductFamilyTierRequest'
      description: The product family
    UpdateProductFamilyTierRequest:
      required:
        - name
        - productId
        - tier
      type: object
      properties:
        id:
          type: string
          description: The id of the product family tier
          example: sBcTTs3
        organizationId:
          type: string
          description: The id of the organization that owns the product family tier
          example: sBcTTs3
        ownerId:
          type: string
          description: The id of the owner of the product family tier
          example: sBcTTs3
        name:
          type: string
          description: The name of the product family tier
          example: a Product Family Tier
        tier:
          type: number
          description: >-
            Number (decimal) indicating the tier of the product in a product
            family
          format: double
          example: 1.3
        productId:
          type: string
          description: Product that the tier will be assigned to
        featuredTier:
          type: boolean
          description: Flag to indicate if tier is featured
          example: true
      description: A product family tier that can be used for a product
    ProductFamilyTierView:
      required:
        - The owner of the product family tier
        - The product of the product family tier
        - featuredTier
        - id
        - name
        - organization
        - tierNumber
      type: object
      properties:
        id:
          type: string
          description: The id of the product family tier
          example: sVc8ak
        organization:
          $ref: '#/components/schemas/OrganizationView'
        The owner of the product family tier:
          $ref: '#/components/schemas/UserView'
        name:
          type: string
          description: Name of the product family tier
          example: enterprise tier
        tierNumber:
          type: number
          description: The product family tier
          format: double
          example: 2.3
        The product of the product family tier:
          $ref: '#/components/schemas/ProductView'
        featuredTier:
          type: boolean
          description: Flag to indicate if tier is featured
          example: true
    ProductFamilyView:
      required:
        - allowProductFamilyDowngrade
        - allowProductFamilyUpgrade
        - id
        - name
        - organization
        - owner
        - productFamilyTiers
      type: object
      properties:
        id:
          type: string
          description: The ID of the product family
          example: 3kTMd
        name:
          type: string
          description: The name of the product family
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        allowProductFamilyDowngrade:
          type: boolean
          description: Boolean to allow product family downgrade
          example: true
        allowProductFamilyUpgrade:
          type: boolean
          description: Boolean to allow product family upgrade
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyTierView'
      description: A product family that can be used to group products
    UpdateProductKeyRequest:
      required:
        - applications
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - sendDefaultNotificationOnCreation
      type: object
      properties:
        productIds:
          type: array
          description: The id of the products the product key is entitled to
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The id of the products the product key is entitled to
            example: '["3kTMd","K3TMs","mmTFd"]'
        description:
          type: string
          description: A description
          example: 'Product Key #1234'
        valid:
          type: boolean
          description: Is the key valid?
          example: true
        ownerId:
          type: string
          description: The product key's owner
        slaDefinitionIds:
          type: array
          description: A list of sla definition ids associated with this product key
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of sla definition ids associated with this product key
            example: '["3kTMd","K3TMs","mmTFd"]'
        pricingRuleIds:
          type: array
          description: A list of pricing rule ids associated with this product key
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of pricing rule ids associated with this product key
            example: '["3kTMd","K3TMs","mmTFd"]'
        expiration:
          type: integer
          description: The product key's expiration timestamp (milliseconds)
          format: int64
          example: 1620579969000
        clientId:
          type: string
        externalQuoteId:
          type: string
          description: >-
            The quote the product key may be associated with in an external cpq
            system
        quota:
          type: integer
          description: The optional transaction quota associated with the product key
          format: int64
        subscriptionQuotaCount:
          type: integer
          description: The subscription quota associated with the product key
          format: int64
        quotaConsumed:
          type: integer
          description: The consumed quota associated with the product key
          format: int64
        quotaNotificationThreshold:
          type: number
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          format: double
        applications:
          type: array
          description: A list of application ids associated with this product key
          items:
            type: string
            description: A list of application ids associated with this product key
        sendDefaultNotificationOnCreation:
          type: boolean
          description: >-
            Whether or not to send quota notifications to the product key's
            owner
        notificationAddressesOnCreation:
          type: array
          description: Additional email addresses for product key creation notification
          items:
            type: string
            description: Additional email addresses for product key creation notification
        notificationAddressesOnQuotaThreshold:
          type: array
          description: Additional email addresses for product key quota notifications
          items:
            type: string
            description: Additional email addresses for product key quota notifications
        consumerOrganizationId:
          type: string
          description: Unique identifier of the organization the product key belongs to
          example: sa3kaL
        disableProductKeyOnPaymentFailed:
          type: boolean
          description: Whether or not to disable the product key on payment failed
        namedConsumers:
          type: array
          description: List of user email addresses who are allowed to access the product
          items:
            type: string
            description: List of user email addresses who are allowed to access the product
        namedOrganizations:
          type: array
          description: List of organization id's who are allowed to access the product
          items:
            type: string
            description: List of organization id's who are allowed to access the product
        consumerDataProviderId:
          type: string
          description: The id of the consumer data provider configuration
          example: 3kTMd
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Whether or not to notify client when trial is about to expiry
        upgradeViaPaymentFlag:
          type: boolean
          description: Flag to identify upgrade via payment/open
      description: The Product Key
    DynamicPricingPropertyRequest:
      required:
        - name
        - type
        - value
      type: object
      properties:
        name:
          type: string
          description: The name of the pricing property
          example: datacenter
        value:
          type: string
          description: The value of the pricing property
          example: us-east-1
        type:
          type: string
          description: The data type of the pricing property
          example: String
      description: A dynamic pricing property
    UpdatePricingRuleRequest:
      required:
        - pricingProperties
        - target
      type: object
      properties:
        organizationId:
          type: string
          description: The id of the organization the pricing rule belongs to
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner the pricing rule belongs to
          example: 3kTMd
        name:
          type: string
          description: The name of the pricing rule
          example: compute-cost-pricing-rule
        script:
          type: string
          description: The rule's pricing script
          example: lineItem.product.baseCost * 0.20
        pricingProperties:
          type: array
          description: Dynamic properties associated with the pricing rule
          items:
            $ref: '#/components/schemas/DynamicPricingPropertyRequest'
        defaultExecutionNote:
          type: string
          description: The rule's default execution note
          example: sample execution note
        target:
          type: string
          description: >-
            The target of the result of the PricingRule evaluation (can be
            either CHARGE or CALL_COUNT)
          example: CHARGE
      description: The pricing rule to create
    UpdateFeatureRequest:
      required:
        - description
        - id
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        id:
          type: string
          description: The id of the tier
          example: NsYmyL
        ownerId:
          type: string
          description: The id of the user that owns the plan
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the plan
          example: sBcTTs3
        name:
          type: string
          description: The name of the feature
          example: documentation
        description:
          type: string
          description: The feature description
          example: access to documentation
      description: The feature
    UpdatePlanElementRequest:
      required:
        - distinctValue
        - id
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        id:
          type: string
          description: The id of the plan element
          example: sBcTTs3
        ownerId:
          type: string
          description: The id of the user that owns the plan element
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the plan element
          example: sBcTTs3
        name:
          type: string
          description: The name of the plan element
          example: Country
        elementDefinitionId:
          type: string
          description: The id of the element definition of the plan element
          example: sBcTTs3
        distinctValue:
          type: string
          description: The distinct value of the plan element (case insensitive)
          example: FRANCE
        flatAmount:
          type: number
          description: Flat amount of the plan element
          example: 34.33
      description: The plan element
    UpdatePlanRequest:
      required:
        - currency
        - graduated
        - id
        - name
        - organizationId
        - ownerId
        - planType
        - template
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sBcTTs3
        ownerId:
          type: string
          description: The id of the user that owns the plan
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the plan
          example: sBcTTs3
        name:
          type: string
          description: The name of the plan
          example: a plan
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
        template:
          type: boolean
          description: >-
            Boolean that indicates if a plan is a template. a template plan
            cannot be attached to a product.
        planType:
          type: string
          description: The plan type, e.g. CHARGE, SUBSCRIPTION
          example: SUBSCRIPTION
        charge:
          type: number
          description: The charge for a charge type plan
          example: 3243243
        currency:
          type: string
          description: The plans currency
          example: USD
        period:
          type: string
          description: The plan period
          example: MONTH
        periodCount:
          type: integer
          description: The period count of the plan
          format: int64
          example: 3
        trialPeriod:
          type: string
          description: The plan trial period
          example: MONTH
        trialPeriodCount:
          uniqueItems: true
          type: array
          description: Trial period count of a subscription plan
          example: 4
          items:
            $ref: '#/components/schemas/UpdateTierRequest'
        prePaySetups:
          type: boolean
          description: >-
            Boolean that indicates if setupfees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
        features:
          uniqueItems: true
          type: array
          description: Features of a plan
          items:
            $ref: '#/components/schemas/UpdateFeatureRequest'
        elements:
          uniqueItems: true
          type: array
          description: Elements of a plan
          items:
            $ref: '#/components/schemas/UpdatePlanElementRequest'
        setups:
          uniqueItems: true
          type: array
          description: Setups of a plan
          items:
            $ref: '#/components/schemas/UpdateSetupFeeRequest'
      description: The plan
    UpdateSetupFeeRequest:
      required:
        - id
        - name
        - organizationId
        - ownerId
        - type
      type: object
      properties:
        id:
          type: string
          description: The id of the setup fee
          example: sBcTTs3
        ownerId:
          type: string
          description: The id of the user that owns the setup fee
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the setup fee
          example: sBcTTs3
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amount of the setup fee
          example: 34.33
      description: A setup fee that can be used in a plan
    PlanElementView:
      required:
        - distinctValue
        - elementDefinition
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          type: string
          description: The name of the plan element
          example: Country
        elementDefinition:
          $ref: '#/components/schemas/ElementDefinitionView'
        distinctValue:
          type: string
          description: The distinct value of the plan element (case insensitive)
          example: FRANCE
        flatAmount:
          type: number
          description: Flat amount of the plan element
          example: 34.33
    PlanView:
      required:
        - currency
        - elements
        - features
        - graduated
        - id
        - name
        - organization
        - owner
        - planType
        - setups
        - template
        - tiers
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          type: string
          description: Name of the plan
          example: enterprise plan
        planType:
          type: string
          description: The plan type
          example: SUBSCRIPTION
        charge:
          type: number
          description: One time payment charge
          example: 23344.77
        currency:
          type: string
          description: The currency of the plan
          example: USD
        period:
          type: string
          description: The subscription plan period
          example: MONTH
        periodCount:
          type: integer
          description: Period count of a subscription plan
          format: int64
          example: 4
        trialPeriod:
          type: string
          description: The subscription plan trial period
          example: MONTH
        trialPeriodCount:
          type: integer
          description: Trial Period count of a subscription plan
          format: int64
          example: 4
        spendLimit:
          type: number
          description: Spend Limit of Plan
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. It
            defaults to true
        template:
          type: boolean
          description: >-
            Boolean that indicates if a plan is a template. A template plan
            cannot be attached to a product.
        tiers:
          uniqueItems: true
          type: array
          description: List of Plan tiers
          example: 4
          items:
            $ref: '#/components/schemas/TierView'
        elements:
          uniqueItems: true
          type: array
          description: List of plan elements
          items:
            $ref: '#/components/schemas/PlanElementView'
        features:
          uniqueItems: true
          type: array
          description: List of plan features
          items:
            $ref: '#/components/schemas/FeatureView'
        setups:
          uniqueItems: true
          type: array
          description: List of setup fees
          items:
            $ref: '#/components/schemas/SetupFeeView'
    SetupFeeView:
      required:
        - id
        - name
        - organization
        - owner
        - type
      type: object
      properties:
        id:
          type: string
          description: The ID of the setup fee
          example: sVc8ak
        owner:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amount of the setup fee
          example: 34.33
      description: List of setup fees
    BillingAddressView:
      type: object
      properties:
        Line1:
          type: string
          description: Line 1 of billing address
          example: 3343 abc street
        Line2:
          type: string
          description: Line 2 of billing address
          example: 3343 abc street
        City:
          type: string
          description: Billing address city
          example: New York
        State:
          type: string
          description: Billing address state
          example: New York
        PostalCode:
          type: string
          description: Billing address postal code
          example: '23214'
        CountryCode:
          type: string
          description: Billing address country code
          example: US
      description: Billing Address
    ExternalPaymentMethodView:
      required:
        - externalPaymentMethodId
      type: object
      properties:
        externalPaymentMethodId:
          type: string
          description: External id of the payment method
          example: pm_3wsdr35q34234
        last4Digits:
          type: string
          description: Last 4 digits of the payment card
          example: '3343'
        brand:
          type: string
          description: Brand of the payment card
          example: visa
        expirationMonth:
          type: integer
          description: Expiration month of payment card
          format: int64
          example: 3
        expirationYear:
          type: integer
          description: Expiration year of payment card
          format: int64
          example: 2024
        country:
          type: string
          description: Country of payment card
          example: US
      description: An external payment method
    PaymentCustomerView:
      required:
        - customerDescription
        - customerName
        - id
        - paymentConfiguration
        - paymentMethods
        - user
      type: object
      properties:
        id:
          type: string
          description: Unique id of the payment customer
          example: 3kTMd
        user:
          $ref: '#/components/schemas/UserView'
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        customerName:
          type: string
          description: The Customer Name
          example: Acme Financial, Inc
        customerDescription:
          type: string
          description: The Customer Description
          example: Acme Financial, Inc
        externalCustomerId:
          type: string
          description: The customer external id
          example: cust_1KLQSrLthVAybHpeGa8QAcce
        externalSetupIntentId:
          type: string
          description: The customer external setup intent Id
          example: seti_1KLQSrLthVAybHpeGa8QAcce
        billingAddress:
          $ref: '#/components/schemas/BillingAddressView'
        paymentMethods:
          type: array
          description: The customer payment methods
          items:
            $ref: '#/components/schemas/ExternalPaymentMethodView'
        defaultPaymentMethodExternalId:
          type: string
          description: The customers default payment method external Id
      description: A Payment Customer
    UpdatePaymentConfigurationRequest:
      required:
        - configurationProperties
      type: object
      properties:
        name:
          type: string
          description: The name of the payment configuration
          example: Stripe (Production)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        paymentProvider:
          type: string
          description: The payment provider
          example: STRIPE
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The payment configuration
    PaymentEventView:
      required:
        - id
        - paymentMethod
        - paymentStatus
        - paymentType
        - timestamp
      type: object
      properties:
        id:
          type: string
          description: Unique id of the payment event
          example: 3kTMd
        paymentType:
          type: string
          description: Payment yype
        paymentStatus:
          type: string
          description: The payment status
        paymentMethod:
          type: string
          description: The payment method
        externalEventId:
          type: string
          description: The external event id
        count:
          type: integer
          description: The event count
          format: int64
        timestamp:
          type: integer
          description: Payment Event timestamp (milliseconds)
          format: int64
          example: 1584585647000
      description: A Payment Event
    PaymentLogView:
      required:
        - paymentDate
        - paymentSucceeded
        - timestamp
      type: object
      properties:
        id:
          type: string
          description: Unique id of the payment log
          example: 3kTMd
        externalInvoiceId:
          type: string
          description: External invoice id
        externalOrderId:
          type: string
          description: External order id
        externalPaymentIntentId:
          type: string
          description: External payment intent id
        externalSetupIntentId:
          type: string
          description: External payment setup intent id
        charge:
          type: integer
          description: The payment charge (minor)
          format: int64
        chargeMajor:
          type: number
          description: The payment charge (major)
          format: double
        startDate:
          type: integer
          description: The payment period start date
          format: int64
          example: 1584585647000
        endDate:
          type: integer
          description: The payment period end date
          format: int64
          example: 1584585647000
        paymentDate:
          type: integer
          description: Payment timestamp (milliseconds)
          format: int64
          example: 1584585647000
        paidCalls:
          type: integer
          description: Paid calls
          format: int64
        freeCalls:
          type: integer
          description: Free calls
          format: int64
        taxAmount:
          type: integer
          description: Tax amount in (minor)
          format: int64
        taxAmountMajor:
          type: number
          description: Tax amount in (major)
          format: double
        taxType:
          type: string
          description: Tax type
          example: exclusive
        timestamp:
          type: integer
          description: Payment log timestamp (milliseconds)
          format: int64
          example: 1584585647000
        paymentSucceeded:
          type: boolean
          description: Payment has succeeded
        testModeEnabled:
          type: boolean
          description: Is test mode enabled?
      description: A Payment Log
    PaymentRecordView:
      required:
        - Payment Open?
        - asset
        - externalId
        - id
        - paymentConfiguration
        - paymentEvents
        - paymentLogs
        - paymentProvider
        - product
        - productName
        - recordType
        - status
        - user
      type: object
      properties:
        id:
          type: string
          description: Unique id of the payment record
          example: 3kTMd
        Payment Open?:
          type: boolean
          description: >-
            Boolean indicating if payment is open, only one payment can be open
            for product and user at any time
          example: true
        product:
          type: string
          description: The product
        productName:
          type: string
          description: The product name
        user:
          $ref: '#/components/schemas/UserView'
        asset:
          $ref: '#/components/schemas/AssetView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        paymentProvider:
          type: string
          description: The payment provider
          example: stripe
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        externalId:
          type: string
          description: The external Id of the payment
          example: pi_1KLQSrLthVAybHpeGa8QAcce
        externalCustomerId:
          type: string
          description: The customer external Id of the payment
          example: cust_1KLQSrLthVAybHpeGa8QAcce
        applicationExternalId:
          type: string
          description: The application external Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        companyName:
          type: string
          description: Company name
          example: Acme
        externalSetupIntentId:
          type: string
          description: The external setup intent Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalOrderId:
          type: string
          description: The external order Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalPaymentIntentId:
          type: string
          description: The external payment intent Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalSubscriptionId:
          type: string
          description: The external subscription Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalInvoiceId:
          type: string
          description: The external Invoice Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalPaymentMethodId:
          type: string
          description: The external Payment Method Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        externalTestClockId:
          type: string
          description: The external Test Clock Id
          example: 95363966-bfe2-4de4-ace0-a397ded05f7b
        status:
          type: string
          description: The status of the payment
          example: payment_intent.succeeded
        recordType:
          type: string
          description: The payment record Type
          enum:
            - SUBSCRIPTION
            - ONETIME
            - STANDALONE
        startDate:
          type: integer
          description: The start date of the payment period
          format: int64
        paymentEvents:
          type: array
          description: A list of payment events
          items:
            $ref: '#/components/schemas/PaymentEventView'
        paymentLogs:
          type: array
          description: A list of payment logs
          items:
            $ref: '#/components/schemas/PaymentLogView'
      description: A report on current status of payment
    UpdateOrganizationDto:
      required:
        - domainAliases
      type: object
      properties:
        name:
          type: string
          description: The name of the organization
          example: Marketing
        tenantId:
          type: string
          description: The id of the tenant this organization belongs to
          example: B0NV05
        parentId:
          type: string
          description: The id of the parent organization
          example: B0NV05
        invoiceNotificationTemplate:
          type: string
          description: Invoice notification template location
        invoiceTemplate:
          type: string
          description: Invoice template location
        productKeyCreationNotificationTemplate:
          type: string
          description: Product Key creation template location
        productKeyUpgradeNotificationTemplate:
          type: string
          description: Product Key upgrade template location
        productKeyQuotaNotificationTemplate:
          type: string
          description: Product Key quota notification template location
        productKeyTierQuotaNotificationTemplate:
          type: string
          description: Product Key tier quota notification template location
        emailFromAddress:
          type: string
          description: >-
            The sender address for notifications generated from this
            Organization (note: requires coordination with the HyperCurrent team
            to setup the appropriate DKIM DNS records
        domainAliases:
          type: array
          description: >-
            Email domains associated with this organization (ie, acmesoft.org,
            acmesoft.io, etc)
          example:
            - acmesoft.org
            - acmesoft.io
          items:
            type: string
            description: >-
              Email domains associated with this organization (ie, acmesoft.org,
              acmesoft.io, etc)
            example: '["acmesoft.org","acmesoft.io"]'
        address1:
          type: string
          description: Address (Line 1)
        address2:
          type: string
          description: Address (Line 2)
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        country:
          type: string
          description: The country)
        postalCode:
          type: string
          description: PostalCode
        phoneNumber:
          type: string
          description: PhoneNumber
        emailAddress:
          type: string
          description: EmailAddress
        instructionText:
          type: string
          description: The instruction
        helpText:
          type: string
          description: The help text
        billingEmail:
          type: string
          description: The billing email address
        billingPhoneNumber:
          type: string
          description: The billing phone number
        url:
          type: string
          description: The URL
        logo:
          type: string
          description: The Organization's logo
        externalId:
          type: string
          description: >-
            An external identifier (e.g. in a API Management system) that is
            associated with the Organization
          example: 12345abcd
        assetAutoDiscoveryEnabled:
          type: boolean
          description: Whether asset auto discovery is enabled or not
        currency:
          type: string
          description: The currency of the organization
        invoiceReflectsProduct:
          type: boolean
          description: Flag if the org wants products or product tiers on their invoices
      description: The organization
    UpdateNotificationProviderConfigurationRequest:
      required:
        - configurationProperties
        - name
        - notificationProviderProvider
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          type: string
          description: The name of the notification provider configuration
          example: Slack (Production)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        notificationProviderProvider:
          type: string
          description: The notification provider
          example: SLACK
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The notification provider configuration
    NotificationProviderConfigurationView:
      required:
        - configurationProperties
        - id
        - name
        - organization
        - provider
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the notification configuration
          example: 3kTMd
        name:
          type: string
          description: The name of the notification configuration
          example: Slack (Product Management)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        default_owner:
          $ref: '#/components/schemas/UserView'
        provider:
          type: string
          description: The notification provider
          example: SLACK
        configurationProperties:
          type: string
          description: Configuration Properties
          example: username=foo,environment=production,loginUr=https://foo.com
    UpdateNotificationTemplateRequest:
      required:
        - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: The identifier of the organization associated with the template
          example: aSjk123
        productKeyCreationNotificationContent:
          type: string
          description: Body of product license creation notification
          example: This is a body of text
        productKeyDeletionNotificationContent:
          type: string
          description: Body of product license deletion notification
          example: This is a body of text
        productKeyUpgradeNotificationContent:
          type: string
          description: Body of product license upgrade notification
          example: This is a body of text
        productKeyActivationNotificationContent:
          type: string
          description: Body of product license activation notification
          example: This is a body of text
        productKeyInvalidNotificationContent:
          type: string
          description: Body of product license invalid notification
          example: This is a body of text
        productKeyFailedPaymentContent:
          type: string
          description: Body of product license creation notification
          example: This is a body of text
        successfulPaymentNotificationContent:
          type: string
          description: Body of successful payment notification
          example: This is a body of text
        'freeTrialNotificationContent:':
          type: string
          description: Subject of successful payment notification
          example: This is a test
        productKeyCreationNotificationSubject:
          type: string
          description: Subject of product license creation notification
          example: This is a subject of text
        productKeyDeletionNotificationSubject:
          type: string
          description: Subject of product license deletion notification
          example: This is subject of text
        productKeyUpgradeNotificationSubject:
          type: string
          description: Subject of product license upgrade notification
          example: This is a test
        productKeyActivationNotificationSubject:
          type: string
          description: Subject of product license activation notification
          example: This is a test
        productKeyInvalidNotificationSubject:
          type: string
          description: Subject of product license invalid notification
          example: This is a test
        productKeyFailedPaymentSubject:
          type: string
          description: Subject of product license creation notification
          example: This is a body of text
        successfulPaymentNotificationSubject:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        freeTrialNotificationSubject:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        invoiceNotificationContent:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        invoiceNotificationSubject:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        quotaNotificationContent:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        quotaNotificationSubject:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        quotaTierNotificationContent:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        quotaTierNotificationSubject:
          type: string
          description: Subject of successful payment notification
          example: This is a test
        logo:
          type: string
          description: The organization's logo
    NotificationTemplateView:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: Id of the template
        name:
          type: string
          description: Name of the template
        body:
          type: string
          description: Body of the template
        subject:
          type: string
          description: Subject of the template
        image:
          type: string
    UpdateIdentityProviderConfigurationRequest:
      required:
        - configurationProperties
      type: object
      properties:
        name:
          type: string
          description: The name of the identity provider configuration
          example: AUTH0
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        identityProvider:
          type: string
          description: The identity management provider
          example: AUTH0
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The identity provider configuration
    IdentityProviderConfigurationView:
      required:
        - configurationProperties
        - id
        - identityProvider
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the identity provider configuration
          example: 3kTMd
        name:
          type: string
          description: The name of the IDP Configuration
          example: Auth0 (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        identityProvider:
          type: string
          description: The identity provider
          example: AUTH0
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: Identity provider configuration
    UpdateExportConfigurationRequest:
      required:
        - configurationProperties
      type: object
      properties:
        name:
          type: string
          description: The name of the export configuration
          example: Email Export (SAP)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        exportProvider:
          type: string
          description: The export provider
          example: FILESYSTEM
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The export configuration
    ExportConfigurationView:
      required:
        - Configuration properties
        - The export provider
        - The id of the organization
        - The name of the export configuration
        - The owner
        - Unique identifier of the export configuration
      type: object
      properties:
        Unique identifier of the export configuration:
          type: string
          example: 3kTMd
        The name of the export configuration:
          type: string
          example: Email (SAP)
        The id of the organization:
          $ref: '#/components/schemas/OrganizationView'
        The owner:
          $ref: '#/components/schemas/UserView'
        The export provider:
          type: string
          example: FILESYSTEM
        Configuration properties:
          type: string
          example: username=foo,environment=production,loginUr=https://foo.com
    ElementDefinitionUpdateRequest:
      required:
        - organizationId
        - type
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - NUMBER
        organizationId:
          type: string
        elementDescription:
          type: string
      description: The element definition update body
    UpdateConsumerDataProviderConfigurationRequest:
      required:
        - configurationProperties
        - createSQL
        - querySQL
      type: object
      properties:
        name:
          type: string
          description: The name of the consumer date configuration
          example: Subscription (Yearly)
        organizationId:
          type: string
          description: >-
            The id of the organization associated with this consumer data
            configuration
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        consumerDataProviderProvider:
          type: string
          description: The consumer data provider
          example: SNOWFLAKE
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
        createSQL:
          type: string
          description: The billing table schema creation sql
        querySQL:
          type: string
          description: The billing table schema query sql
      description: The consumer dataa provider configuration
    UpdateBillingMetadataRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the billing metadata
        value:
          type: string
          description: The value of the billing metadata
        target:
          type: string
          description: The target of the billing metadata (either INVOICE or LINE_ITEM)
        type:
          type: string
          description: The type of the billing metadata (either STRING or NUMBER)
      description: The billing metadata to create
    BillingMetadataView:
      required:
        - id
        - name
        - target
        - type
        - value
      type: object
      properties:
        id:
          type: string
          description: The ID of the element definition
          example: sVc8ak
        name:
          type: string
          description: The name of the billing metadata
        value:
          type: string
          description: The value of the billing metadata
        target:
          type: string
          description: The target of the billing metadata (either INVOICE or LINE_ITEM)
        type:
          type: string
          description: The type of the billing metadata (either STRING or NUMBER)
    AssetPropertyRequest:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          description: The name of the property
          example: url
        value:
          type: string
          description: The value of the property
          example: https://api.foo.com/v1
      description: An asset property
    UpdateAssetRequest:
      required:
        - applicationAutoDiscoveryEnabled
        - classificationPatterns
        - elementDefinitionIds
        - ownerId
        - productIds
        - properties
        - slaDefinitionIds
        - tags
      type: object
      properties:
        assetType:
          type: string
          description: The type of the asset
          example: API
        accountId:
          type: string
          description: The account id of the asset
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        ownerId:
          type: string
          description: The id of the user that owns the asset
          example: NsYmyL
        name:
          type: string
          description: The name of the asset
          example: my-awesome-asset
        The description of the asset:
          type: string
          example: truly an awesome product
        version:
          type: string
          description: The asset's version
          example: 1.0.0
        organizationId:
          type: string
          description: The id of the organization that owns the asset
          example: sBcTTs3
        productIds:
          type: array
          description: A list of productids
          example:
            - sQYmyQ
            - jQYkyl
            - a92j3
          items:
            type: string
            description: A list of productids
            example: '["sQYmyQ","jQYkyl","a92j3"]'
        slaDefinitionIds:
          type: array
          description: 'A list of sla definition ids associated with this asset. '
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: 'A list of sla definition ids associated with this asset. '
            example: '["3kTMd","K3TMs","mmTFd"]'
        properties:
          type: array
          description: Properties associated with the asset
          items:
            $ref: '#/components/schemas/AssetPropertyRequest'
        tags:
          type: array
          description: A list of tags associated with this asset.
          example:
            - tag1
            - tag2
            - tag3
          items:
            type: string
            description: A list of tags associated with this asset.
            example: '["tag1","tag2","tag3"]'
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a api management system) that is
            associated with the asset
          example: 12345abcd
        code:
          type: string
          description: The asset code
          example: '1234'
        url:
          type: string
          description: The asset's resource
          example: /api/products
        method:
          type: string
          description: The asset's HTTP method (if applicable)
          example: POST
        applicationAutoDiscoveryEnabled:
          type: boolean
          description: Whether application auto discovery is enabled or not
        classificationPatterns:
          type: array
          description: The asset classification patterns
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
        elementDefinitionIds:
          type: array
          description: The ids of the element definitions to associate with this asset
          items:
            type: string
            description: The ids of the element definitions to associate with this asset
        logo:
          type: string
          description: The assets' logo
        devPortalLink:
          type: string
          description: The devPortalLink of the asset
          example: http://url.com
      description: The asset
    UpdateApplicationRequest:
      required:
        - externalId
        - id
        - name
        - organizationId
        - productKeyIds
        - tags
        - userId
      type: object
      properties:
        id:
          type: string
          description: The id of the application
          example: aBDk341
        name:
          type: string
          description: The name of the application
          example: My Mobile Application
        organizationId:
          type: string
          description: The id of the organization associated with the application
          example: aSjk123
        userId:
          type: string
          description: The identifier of the user associated with the application
          example: aSjk123
        externalId:
          type: string
          description: The identifier of the application in an external system
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          type: array
          description: The product keys this application is associated with
          example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
          items:
            type: string
            description: The product keys this application is associated with
            example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
        consumerOrganizationId:
          type: string
          description: Unique identifier of the organization the application belongs to
          example: sa3kaL
        tags:
          type: array
          description: 'A list of tags associated with this asset '
          example:
            - tag1
            - tag2
            - tag3
          items:
            type: string
            description: 'A list of tags associated with this asset '
            example: '["tag1","tag2","tag3"]'
      description: The application request
    UpdateAPIMConfigurationRequest:
      required:
        - authenticationMechanism
        - configurationProperties
      type: object
      properties:
        name:
          type: string
          description: The name of the api management configuration
          example: MULESOFT
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        apimProvider:
          type: string
          description: The API management provider
          example: MULESOFT
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
        authenticationMechanism:
          type: string
          description: The authentication mechanism
          example: CONNECTED_APP
      description: The API management configuration
    APIMConfigurationView:
      required:
        - apimProvider
        - authenticationMechanism
        - configurationProperties
        - id
        - name
        - organization
        - owner
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the API management configuration
          example: 3kTMd
        name:
          type: string
          description: The name of the API management configuration
          example: MuleSoft (Staging)
        organization:
          $ref: '#/components/schemas/OrganizationView'
        owner:
          $ref: '#/components/schemas/UserView'
        apimProvider:
          type: string
          description: The API management provider
          example: MULESOFT
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
        authenticationMechanism:
          type: string
          description: The authentication mechanism
          example: CONNECTED_APP
        disabledForPossibleMisconfiguration:
          type: boolean
          description: >-
            Boolean indicating that Syncing has been disabled due to possible
            misconfiguration
          example: false
      description: API management configuration
    UpdateAccountTierRequest:
      required:
        - id
        - selfServiceIncludedEvents
      type: object
      properties:
        id:
          type: string
          description: Id of Account Tier
        name:
          type: string
          description: Name of Account Tier
        selfServiceIncludedEvents:
          type: integer
          description: Number of events included in Self Service
          format: int64
      description: The account tier request
    AccountTierView:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of account tier
        accountTierType:
          type: string
          description: Type of account tier
        onDemandPriceIncludedEvents:
          type: integer
          description: Number of events included in Self Service
          format: int64
        description:
          type: string
          description: Description of Account Tier
        basePriceNickname:
          type: string
          description: Base Price Nickname
        pricingType:
          type: string
          description: Pricing type of Account Tier
        basePriceAmount:
          type: number
          description: Plan price of Account Tier
        onDemandPriceUnitAmount:
          type: number
          description: Cost per event of Account Tier
        retentionDays:
          type: integer
          description: Retention days of Account Tier
          format: int32
        onDemandPriceEventsAllowed:
          type: boolean
          description: On demand events of Account Tier
        onDemandPriceNickname:
          type: string
          description: On demand plan name of Account Tier
        basePriceLookupKey:
          type: string
          description: Base price Lookup key of Account Tier
        name:
          type: string
          description: Name key of Account Tier
        basePriceExternalId:
          type: string
          description: Base price external id
        onDemandPriceExternalId:
          type: string
          description: On demand price external id
        onDemandPriceLookupKey:
          type: string
          description: On demand price lookup key
        onDemandPriceAmountPer10KEvents:
          type: number
          description: On demand price amount per 10K events
        externalProductId:
          type: string
          description: External product id
        externalCustomerId:
          type: string
          description: External customer id
        externalSubscriptionId:
          type: string
          description: External subscription id
        periodUsageQuotaCount:
          type: integer
          description: Period Usage Quota Count
          format: int64
        trialDays:
          type: integer
          description: Number of trial days
          format: int64
        trialStartDate:
          type: integer
          description: Trial period start date
          format: int64
        trialEndDate:
          type: integer
          description: Trial period end date
          format: int64
        currentSubscriptionPeriodStartDate:
          type: integer
          description: Current subscription period start date
          format: int64
        currentSubscriptionPeriodEndDate:
          type: integer
          description: Current subscription period end date
          format: int64
        externalReveniumAccountId:
          type: string
          description: External Revenium Account id
        testMode:
          type: boolean
          description: Test Mode Enabled
        level:
          type: number
          description: Account Tier Product Level
          format: double
    UpgradeAccountTierRequest:
      required:
        - product to upgrade to
      type: object
      properties:
        product to upgrade to:
          type: string
          description: Product to upgrade to
      description: The upgrade account tier request
    DowngradeAccountTierRequest:
      required:
        - product to downgrade to
      type: object
      properties:
        product to downgrade to:
          type: string
          description: Product to downgrade to
      description: The downgrade account tier Rrquest
    CreateUserDto:
      required:
        - administeredOrganizationIds
        - administeredTenantIds
        - emailAddress
        - firstName
        - isActive
        - lastName
        - organizationIds
        - password
        - personas
        - roles
        - username
      type: object
      properties:
        username:
          type: string
          description: The unique username
          example: gabe
        emailAddress:
          type: string
          description: The user's email address
          example: gabe@pipedpiper.com
        password:
          type: string
          description: The user's password
          example: changeme
        isActive:
          type: boolean
          description: Is the user active
          example: true
        organizationIds:
          type: array
          description: A list of the organizations the User is a member of
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            type: string
            description: A list of the organizations the User is a member of
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        roles:
          type: array
          description: The roles granted to the user
          example:
            - ROLE_ADMIN
            - ROLE_API_CONSUMER
          items:
            type: string
            description: The roles granted to the user
            example: '["ROLE_ADMIN","ROLE_API_CONSUMER"]'
        administeredOrganizationIds:
          type: array
          description: A list of the organizations the user is an administrator of
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            type: string
            description: A list of the organizations the user is an administrator of
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        administeredTenantIds:
          type: array
          description: A list of the tenants the user is an administrator of
          example:
            - B0NV05
            - LA6m0o
            - bAyD0L
          items:
            type: string
            description: A list of the tenants the user is an administrator of
            example: '["B0NV05","LA6m0o","bAyD0L"]'
        personas:
          type: array
          description: The personas associated with the user
          example:
            - CIO
            - COO
          items:
            type: string
            description: The personas associated with the user
            example: '["CIO","COO"]'
        firstName:
          type: string
          description: The first name associated with the user
          example: John
        lastName:
          type: string
          description: The last name associated with the user
          example: Smith
      description: The User
    CreateTrafficAnomalyRuleRequest:
      required:
        - anomalyCategory
        - anomalyType
        - name
        - organizationId
        - thresholdCount
        - thresholdValue
        - timeWindow
        - timeWindowUnit
        - userIds
      type: object
      properties:
        name:
          type: string
          description: Name of this rule
          example: test
        organizationId:
          type: string
          description: The organization associated with this rule
          example: sAd12df
        anomalyType:
          type: string
          description: The type of anomaly
          example: LATENCY_RATE_GATEWAY
        anomalyCategory:
          type: string
          description: The category of anomaly
          example: ASSET
        thresholdValue:
          type: number
          description: The threshold value
          format: double
          example: 100
        thresholdCount:
          type: integer
          description: The threshold count
          format: int32
          example: 10
        timeWindow:
          type: integer
          description: The time window
          format: int64
          example: 1
        timeWindowUnit:
          type: string
          description: The time window unit
          example: MINUTES
        userIds:
          type: array
          description: The users that will be recipients when this rule is activated
          example: '[3kTMd,Dk12sc]'
          items:
            type: string
            description: The users that will be recipients when this rule is activated
            example: '[3kTMd,Dk12sc]'
      description: The create traffic anomaly rule request
    CreateTierRequest:
      required:
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the tier
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the tier
          example: sBcTTs3
        name:
          type: string
          description: The name of the tier
          example: Free Tier
        upTo:
          type: integer
          description: Upper unit limit for tier
          example: 1343234
        unitAmount:
          type: number
          description: Unit amount of the tier
          example: 1343234
      description: The tier to create
    CreateTenantDto:
      required:
        - description
        - name
        - profile
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 2
          type: string
          description: The name of the tenant
          example: AcmeSoft
        description:
          maxLength: 50
          minLength: 2
          type: string
          description: Description of the tenant
          example: aviation.aircraft
        profile:
          type: string
          description: Profile of the tenant
          example: MONETIZATION
      description: The tenant
    CreateTemplateRequest:
      required:
        - content
        - name
        - organizationId
        - type
      type: object
      properties:
        organizationId:
          type: string
          description: The identifier of the organization associated with the template
          example: aSjk123
        name:
          type: string
          description: The name of the template
          example: Invoice Template
        type:
          type: string
          description: The type of the template
          example: INVOICE_NOTIFICATION
        content:
          type: string
          description: The content of the template
      description: The site request
    Unit:
      type: object
    CreateSubscriberNotificationRequest:
      required:
        - affectedProductLicenseOwner
        - organizationId
        - productIds
        - selectedOwners
        - subject
      type: object
      properties:
        organizationId:
          type: string
          description: The organization associated with the subscriber notification
          example: 3kTmd
        affectedProductLicenseOwner:
          type: string
          description: The type of owners affected by this notification
          example: ALLPLOWNERS
        subject:
          type: string
          description: The body for notification
          example: This is a test
        productIds:
          type: array
          description: Products associated with this notification
          items:
            type: string
            description: Products associated with this notification
        selectedOwners:
          type: array
          description: Owners associated with this notification
          items:
            type: string
            description: Owners associated with this notification
      description: The api key request
    CreateStoredFilterRequest:
      required:
        - filterName
        - organizationId
        - rawJsonFilters
        - userEmail
        - userId
      type: object
      properties:
        organizationId:
          type: string
        filterName:
          type: string
        rawJsonFilters:
          type: string
        userId:
          type: string
        userEmail:
          type: string
        methods:
          $ref: '#/components/schemas/FilterCategoryRequest'
        assets:
          $ref: '#/components/schemas/FilterCategoryRequest'
        applications:
          $ref: '#/components/schemas/FilterCategoryRequest'
        userDomains:
          $ref: '#/components/schemas/FilterCategoryRequest'
        userEmails:
          $ref: '#/components/schemas/FilterCategoryRequest'
        consumingOrganizations:
          $ref: '#/components/schemas/FilterCategoryRequest'
        responseCodes:
          $ref: '#/components/schemas/FilterCategoryRequest'
        maxLatencies:
          $ref: '#/components/schemas/FilterCategoryRequest'
        avgLatencies:
          $ref: '#/components/schemas/FilterCategoryRequest'
      description: The stored filter to create
    FilterCategoryRequest:
      required:
        - items
        - operator
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        operator:
          type: string
    ReviewSLAViolationRequest:
      required:
        - violationIds
      type: object
      properties:
        violationIds:
          type: array
          description: The list of sla violations
          example: '[3kTMd,d2dMs]'
          items:
            type: string
            description: The list of sla violations
            example: '[3kTMd,d2dMs]'
      description: The sla violations to review
    CreateSLADefinitionDTO:
      required:
        - baseAdjustment
        - name
        - organizationId
        - ownerId
        - pricingRuleIds
        - violationRules
      type: object
      properties:
        name:
          type: string
          description: The name of an sla definition
          example: Enterprise SLA (99.9% Uptime)
        ownerId:
          type: string
          description: The sla definition's owner
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        baseAdjustment:
          type: number
          description: 'The base adjustment if there is an sla violation '
          format: double
          example: 100
        pricingRuleIds:
          type: array
          description: The sla definition's pricing rules
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The sla definition's pricing rules
            example: '["3kTMd","K3TMs","mmTFd"]'
        violationRules:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationRuleDTO'
      description: The sla definition
    CreateSiteRequest:
      required:
        - name
        - organizationId
      type: object
      properties:
        name:
          type: string
          description: The name of the site
          example: My Mobile Site
        organizationId:
          type: string
          description: The identifier of the organization associated with the site
          example: aSjk123
        externalId:
          type: string
          description: The identifier of the site in an external system
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
      description: The Site Request
    CreateSiteConfigurationRequest:
      required:
        - configurationProperties
        - name
        - organizationId
        - ownerId
        - siteProvider
      type: object
      properties:
        name:
          type: string
          description: The name of the site configuration
          example: Mulesoft Sites
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        siteProvider:
          type: string
          description: The ste provider
          example: MulesoftACMSiteProvider
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The site provider configuration
    CreateSelfServiceUserRequest:
      required:
        - companyId
        - companyName
        - contactId
        - emailAddress
        - firstName
        - lastName
        - phoneNumber
        - profileType
      type: object
      properties:
        emailAddress:
          type: string
          description: The user's email address
          example: gabe@pipedpiper.com
        firstName:
          type: string
          description: The user's first name
          example: Betram
        lastName:
          type: string
          description: The user's last name
          example: Gilfoyle
        companyName:
          type: string
          description: The user's company
          example: pipedpiper.com
        phoneNumber:
          type: string
          description: The user's phone number
          example: 555-555-5555
        role:
          type: string
          description: The user's role
          example: CTO
        gateway:
          type: string
          description: The intended gateway to integrate with
          example: MuleSoft
        profileType:
          type: string
          description: The account type (either "MONETIZATION" or "CHARGEBACK")
          example: MONETIZATION
        contactId:
          type: string
          description: The CRM ID of the contact
          example: '1234'
        companyId:
          type: string
          description: The CRM ID of the company
          example: '1234'
        testMode:
          type: boolean
          description: Is the account tier in test mode
          example: true
      description: A User to create via self-service signup
    SelfServiceUserResponse:
      required:
        - tenantId
      type: object
      properties:
        tenantId:
          type: string
          description: The id of the created tenant
          example: 1vMg34
      description: The response for self-service signup requests
    CreateFeatureRequestViaProduct:
      required:
        - description
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the feature
          example: Documentation
        description:
          type: string
          description: A description of the feature
          example: Access to Documentation
      description: Features of a plan
    CreatePlanElementRequestViaProduct:
      required:
        - distinctValue
        - elementDefinitionId
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the plan element
          example: country
        elementDefinitionId:
          type: string
          description: The id of the element definition of the plan element
          example: sBcTTs3
        distinctValue:
          type: string
          description: The distinct value of the plan element (case insensitive)
          example: FRANCE
        flatAmount:
          type: number
          description: Flat amount of the plan element
          example: 34.33
      description: Elements of a plan
    CreatePlanRequestViaProduct:
      required:
        - currency
        - elements
        - features
        - graduated
        - name
        - planType
        - setups
        - trialPeriodCount
      type: object
      properties:
        name:
          type: string
          description: The name of the plan
          example: a plan
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
        planType:
          type: string
          description: The plan type, e.g. CHARGE, SUBSCRIPTION
          example: SUBSCRIPTION
        charge:
          type: number
          description: The charge for a charge type plan
          example: 3243243
        currency:
          type: string
          description: The plan's currency
          example: USD
        period:
          type: string
          description: The plan period
          example: MONTH
        periodCount:
          type: integer
          description: The period count of the plan
          format: int64
          example: 3
        trialPeriod:
          type: string
          description: The plan trial period
          example: MONTH
        trialPeriodCount:
          uniqueItems: true
          type: array
          description: Trial period count of a subscription plan
          example: 4
          items:
            $ref: '#/components/schemas/CreateTierRequestViaProduct'
        prePaySetups:
          type: boolean
          description: >-
            Boolean that indicates if setupfees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
        features:
          uniqueItems: true
          type: array
          description: Features of a plan
          items:
            $ref: '#/components/schemas/CreateFeatureRequestViaProduct'
        elements:
          uniqueItems: true
          type: array
          description: Elements of a plan
          items:
            $ref: '#/components/schemas/CreatePlanElementRequestViaProduct'
        setups:
          uniqueItems: true
          type: array
          description: Setups of a plan
          items:
            $ref: '#/components/schemas/CreateSetupFeeRequestViaProduct'
      description: A plan that can be used for a product
      example: true
    CreateProductRequest:
      required:
        - account
        - assetIds
        - audienceRestriction
        - baseCost
        - externalId
        - isStaged
        - name
        - namedOrganizations
        - notificationAddressesOnInvoice
        - organizationId
        - ownerId
        - pricingRuleIds
        - productIds
        - sendDefaultNotificationOnInvoice
        - settlementPeriod
        - slaDefinitionIds
        - tags
        - transactionType
        - version
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the product
          example: 3kTMd
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        name:
          type: string
          description: The name of the product
          example: my-awesome-product
        description:
          type: string
          example: truly an awesome product
        shortDescription:
          type: string
          example: Truly an awesome product
        link:
          type: string
          description: A link to the product
          example: https://portal.acmesoft/com/my-awesome-product
        version:
          type: string
          description: The version of the product
          example: 1.0.0
        baseCost:
          type: number
          description: The base transaction cost to access the product
          example: 100
        settlementPeriod:
          type: string
          description: >-
            The settlement period, in days, that determines when product charges
            are calculated for an invoice
          example: '100'
        account:
          type: string
          description: The account id
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        transactionType:
          type: string
          description: The transaction type of the product
          example: 'true'
        paymentConfigurationId:
          type: string
          description: The id of the payment configuration
          example: '2'
        pricingRuleIds:
          type: array
          description: The product's pricing rules
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The product's pricing rules
            example: '["3kTMd","K3TMs","mmTFd"]'
        assetIds:
          type: array
          description: A list of asset ids that compose the product
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of asset ids that compose the product
            example: '["3kTMd","K3TMs","mmTFd"]'
        productIds:
          type: array
          description: A list of product ids that compose the product
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of product ids that compose the product
            example: '["3kTMd","K3TMs","mmTFd"]'
        slaDefinitionIds:
          type: array
          description: A list of sla definition ids associated with this product.
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of sla definition ids associated with this product.
            example: '["3kTMd","K3TMs","mmTFd"]'
        tags:
          type: array
          description: 'A list of tags associated with this product. '
          example:
            - tag1
            - tag2
            - tag3
          items:
            type: string
            description: 'A list of tags associated with this product. '
            example: '["tag1","tag2","tag3"]'
        defaultQuota:
          type: integer
          description: >-
            The default transaction quota for product keys associated with this
            product
          format: int64
        defaultQuotaNotificationThreshold:
          type: number
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          format: double
        sendDefaultNotificationOnInvoice:
          type: boolean
          description: >-
            Whether or not to send invoice notifications to the recipient of the
            invoice
        notificationAddressesOnInvoice:
          type: array
          description: 'Additional email addresses to end invoice notifications to '
          items:
            type: string
            description: 'Additional email addresses to end invoice notifications to '
        overageRatePerTransaction:
          type: number
          description: >-
            The subscription overage rate per transaction for products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
        subscriptionIncludedTransactions:
          type: integer
          description: >-
            The included transaction count for products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          format: int64
        isStaged:
          type: boolean
          description: Whether or not the product should be staged or immediately live
        code:
          type: string
          description: The product code
          example: '1234'
        terms:
          type: string
          description: The terms and conditions
        termsDisplayName:
          type: string
          description: The terms and conditions display name
        additionalTerms1:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName1:
          type: string
          description: Additional terms and conditions display name
        additionalTerms2:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName2:
          type: string
          description: Additional terms and conditions display name
        disable:
          type: boolean
          description: Disable a product key when a payment fails
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a api management system) that is
            associated with the Product
          example: 12345abcd
        displayPriority:
          type: number
          description: The display priority the product
          format: double
          example: 1
        notifyClientOnInvoice:
          type: boolean
          description: Notify client on invoice
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Notify client that trial is about to expire
        environmentId:
          type: string
          description: The environment for the product
          example: Production
        apimConfigurationId:
          type: string
          description: >-
            The id of the apim configuration (if synchronizing this product with
            an external apim)
          example: 3kTMd
        audienceRestriction:
          type: string
          description: The audience restriction, if any, on a product
          example: USER
        externalLabel:
          type: string
          description: >-
            An external label for the product that is exposed in developer
            portals
          example: 12345abcd
        namedOrganizations:
          type: array
          description: The organizations allowed to access the product
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: The organizations allowed to access the product
            example: '["3kTMd","K3TMs","mmTFd"]'
        plan:
          $ref: '#/components/schemas/CreatePlanRequestViaProduct'
        performanceDefinition:
          $ref: '#/components/schemas/CreatePerformanceDefinitionRequest'
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        productLockedToV1:
          type: boolean
          description: Product V1 Lock
        logo:
          type: string
          description: The product's logo
        staged:
          type: boolean
          writeOnly: true
      description: The product to create
    CreateSetupFeeRequestViaProduct:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amount of the setup fee
          example: 34.33
      description: Setups of a plan
    CreateTierRequestViaProduct:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the tier
          example: Free Tier
        upTo:
          type: integer
          description: Upper unit limit for the tier
          example: 1343234
        unitAmount:
          type: number
          description: Unit amount of the tier
          example: 1343234
      description: Trial period count of a subscription plan
      example: 4
    CreateProductFamilyRequest:
      required:
        - name
        - organizationId
        - ownerId
        - productFamilyTiers
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the product family
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the product family
          example: sBcTTs3
        name:
          type: string
          description: The name of the product family
          example: a Product Family
        allowProductFamilyDowngrade:
          type: boolean
          description: Boolean to allow product family downgrade
          example: true
        allowProductFamilyUpgrade:
          type: boolean
          description: Boolean to allow product family upgrade
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductFamilyTierRequest'
      description: The product family to create
    CreateProductFamilyTierRequest:
      required:
        - name
        - productId
        - tierNumber
      type: object
      properties:
        name:
          type: string
          description: The name of the product family tier
          example: a Product Family Tier
        tierNumber:
          type: number
          description: >-
            Number (decimal) indicating the tier of the product in a product
            family
          format: double
          example: 1.3
        productId:
          type: string
          description: Product that the tier will be assigned to
        featuredTier:
          type: boolean
          description: Flag to indicate if tier is featured
          example: true
      description: A product family tier that can be used for a product
    CreateProductKeyRequest:
      required:
        - applications
        - clientEmailAddress
        - description
        - disableProductKeyOnPaymentFailed
        - namedConsumers
        - namedOrganizations
        - notificationAddressesOnCreation
        - notificationAddressesOnQuotaThreshold
        - productIds
        - quotaConsumed
        - sendDefaultNotificationOnCreation
        - sendDefaultNotificationOnQuotaThreshold
      type: object
      properties:
        organizationId:
          type: string
          description: Unique id of the organization that the product key was provided by
          example: 3kTMd
        consumerOrganizationId:
          type: string
          description: Unique identifier of the organization the product key belongs to
          example: sa3kaL
        productIds:
          type: array
          description: The products the product key belongs to
          example: '[3kTMd,Dk12sc]'
          items:
            type: string
            description: The products the product key belongs to
            example: '[3kTMd,Dk12sc]'
        description:
          type: string
          description: A description
          example: 'Product Key #1234'
        valid:
          type: boolean
          description: Is the key valid?
          example: true
        ownerId:
          type: string
          description: The product key's owner
        key:
          type: string
          description: The key
          example: 5c99c760-4d11-4463-a211-937594d913d0
        slaDefinitionIds:
          type: array
          description: A list of sla definition ids associated with this product key
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of sla definition ids associated with this product key
            example: '["3kTMd","K3TMs","mmTFd"]'
        pricingRuleIds:
          type: array
          description: A list of pricing rule ids associated with this product key
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of pricing rule ids associated with this product key
            example: '["3kTMd","K3TMs","mmTFd"]'
        expiration:
          type: integer
          description: The product key's expiration timestamp (milliseconds)
          format: int64
          example: 1620579969000
        clientEmailAddress:
          type: string
          description: >-
            In the event the owner doesn't have an account an email address can
            be passed to create the account on the fly
        externalQuoteId:
          type: string
          description: >-
            The quote the product key may be associated with in an external cpq
            / financial system
        quota:
          type: integer
          description: The optional transaction quota associated with the product key
          format: int64
        quotaConsumed:
          type: integer
          description: The consumed quota associated with the product key
          format: int64
        quotaNotificationThreshold:
          type: number
          description: >-
            The percentage of quota consumption to exceed before sending a
            notification
          format: double
        applications:
          type: array
          description: A list of application id's associated with this product key
          items:
            type: string
            description: A list of application id's associated with this product key
        sendDefaultNotificationOnCreation:
          type: boolean
          description: >-
            Whether or not to send notifications to the productkey creator on
            creation
        notificationAddressesOnCreation:
          type: array
          description: Additional email addresses for product key creation notification
          items:
            type: string
            description: Additional email addresses for product key creation notification
        sendDefaultNotificationOnQuotaThreshold:
          type: boolean
          description: >-
            Whether or not to send quota notifications to the product key's
            owner
        notificationAddressesOnQuotaThreshold:
          type: array
          description: Additional email addresses for product key quota notifications
          items:
            type: string
            description: Additional email addresses for product key quota notifications
        applicationExternalId:
          type: string
          description: The external id of an application associated with this product key
        disableProductKeyOnPaymentFailed:
          type: boolean
          description: Whether or not to disable the product key on payment failed
        companyName:
          type: string
          description: Company name
          example: Acme
        namedConsumers:
          type: array
          description: List of user email addresses who are allowed to access the product
          items:
            type: string
            description: List of user email addresses who are allowed to access the product
        namedOrganizations:
          type: array
          description: List of organization id's who are allowed to access the product
          items:
            type: string
            description: List of organization id's who are allowed to access the product
        consumerDataProviderId:
          type: string
          description: The id of the consumer data provider configuration
          example: 3kTMd
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Whether or not to notify client when trial is about to expiry
      description: The Product Key
    ProductKeyStatusRequestRequest:
      required:
        - assetKey
        - productKey
      type: object
      properties:
        productKey:
          type: string
          description: The product key
          example: 5c99c760-4d11-4463-a211-937594d913d0
        assetKey:
          type: string
          description: The asset key
          example: 5c99c760-4d11-4463-a211-937594d913d0
      description: The Product Key to validate
    ProductKeyStatusResponseView:
      required:
        - valid
      type: object
      properties:
        valid:
          type: boolean
          description: Is this product key valid?
          example: true
    CreatePricingRuleRequest:
      required:
        - name
        - organizationId
        - ownerId
        - pricingProperties
        - script
      type: object
      properties:
        organizationId:
          type: string
          description: The id of the organization the pricing rule belongs to
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner the pricing rule belongs to
          example: 3kTMd
        name:
          type: string
          description: The name of the pricing rule
          example: Free Trial Pricing Rule
        script:
          type: string
          description: The rule's pricing script
          example: baseCost + properties['currentComputeCost']]
        pricingProperties:
          type: array
          description: Dynamic properties associated with the pricing rule
          items:
            $ref: '#/components/schemas/DynamicPricingPropertyRequest'
        defaultExecutionNote:
          type: string
          description: The rule's default execution note
          example: sample execution note
        target:
          type: string
          description: >-
            The target of the result of the pricingrule evaluation (can be
            either charge or call_count)
          example: CHARGE
      description: The pricing rule to create
    CreateFeatureRequest:
      required:
        - description
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the feature
          example: NsYmyL
        organizationId:
          type: string
          description: Id of the organization that owns the feature
          example: sBcTTs3
        name:
          type: string
          description: The name of the feature
          example: Documentation
        description:
          type: string
          description: A description of the feature
          example: Access to Documentation
      description: The feature to create
    CreatePlanElementRequest:
      required:
        - distinctValue
        - elementDefinitionId
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the plan element
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the plan element
          example: sBcTTs3
        name:
          type: string
          description: The name of the plan element
          example: Country
        elementDefinitionId:
          type: string
          description: The id of the element definition of the plan element
          example: sBcTTs3
        distinctValue:
          type: string
          description: The distinct value of the plan element (case insensitive)
          example: FRANCE
        flatAmount:
          type: number
          description: Flat amount of the plan element
          example: 34.33
      description: The plan element to create
    CreatePlanRequest:
      required:
        - currency
        - elements
        - features
        - graduated
        - name
        - organizationId
        - ownerId
        - planType
        - setups
        - template
        - trialPeriodCount
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the plan
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the plan
          example: sBcTTs3
        name:
          type: string
          description: The name of the plan
          example: a plan
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. it
            defaults to true
        template:
          type: boolean
          description: >-
            Boolean that indicates if a plan is a template. a template plan
            cannot be attached to a product.
        planType:
          type: string
          description: The plan type, e.g. CHARGE, SUBSCRIPTION
          example: SUBSCRIPTION
        charge:
          type: number
          description: The charge for a charge type plan
          example: 3243243
        currency:
          type: string
          description: The plans currency
          example: USD
        period:
          type: string
          description: The plan period
          example: MONTH
        periodCount:
          type: integer
          description: The period count of the plan
          format: int64
          example: 3
        trialPeriod:
          type: string
          description: The plan trial period
          example: MONTH
        trialPeriodCount:
          uniqueItems: true
          type: array
          description: Trial period count of a subscription plan
          example: 4
          items:
            $ref: '#/components/schemas/CreateTierRequest'
        prePaySetups:
          type: boolean
          description: >-
            Boolean that indicates if setupfees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
        features:
          uniqueItems: true
          type: array
          description: Features of a plan
          items:
            $ref: '#/components/schemas/CreateFeatureRequest'
        elements:
          uniqueItems: true
          type: array
          description: Elements of a plan
          items:
            $ref: '#/components/schemas/CreatePlanElementRequest'
        setups:
          uniqueItems: true
          type: array
          description: Setup fees of a plan
          items:
            $ref: '#/components/schemas/CreateSetupFeeRequest'
      description: The plan to create
    CreateSetupFeeRequest:
      required:
        - name
        - organizationId
        - ownerId
        - type
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the user that owns the setup fee
          example: NsYmyL
        organizationId:
          type: string
          description: The id of the organization that owns the setup fee
          example: sBcTTs3
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amount of the setup fee
          example: 34.33
      description: Setup fees of a plan
    CreatePaymentRequest:
      required:
        - productId
      type: object
      properties:
        productId:
          type: string
          description: The product to create the payment for
          example: 3kTMd
        userId:
          type: string
          description: The user to create the payment for
          example: 3kTMd
        assetId:
          type: string
          description: The asset for the payment
          example: 3kTMd
        productKeyId:
          type: string
          description: The product key for the payment
          example: 3kTMd
        productKeyDescription:
          type: string
          description: The product key description
          example: dummy product key
        applicationExternalId:
          type: string
          description: The external id for application
          example: 3kTMd
        externalUserId:
          type: string
          description: The external id for user
          example: 3kTMd
        userEmailAddress:
          type: string
          description: The email address for user
        billingAddressLine1:
          type: string
          description: Line 1 of billing address
          example: 3343 abc street
        billingAddressLine2:
          type: string
          description: Line 2 of billing address
          example: 3343 abc street
        billingAddressCity:
          type: string
          description: Billing address city
          example: New York
        billingAddressState:
          type: string
          description: Billing address state
          example: New York
        billingAddressPostalCode:
          type: string
          description: Billing address postal code
          example: '23214'
        billingAddressCountryCode:
          type: string
          description: Billing address country code
          example: US
        companyName:
          type: string
          description: Company name
          example: Acme
        applicationName:
          type: string
          description: Application name
          example: Acme
      description: The payment configuration
    CreateBillingAddressRequest:
      required:
        - city
        - countryCode
        - line1
        - postalCode
        - state
      type: object
      properties:
        line1:
          type: string
          description: Line 1 of billing address
          example: 3343 abc street
        line2:
          type: string
          description: Line 2 of billing address
          example: 3343 abc street
        city:
          type: string
          description: Billing address city
          example: New York
        state:
          type: string
          description: Billing address state
          example: New York
        postalCode:
          type: string
          description: Billing address postal code
          example: '23214'
        countryCode:
          type: string
          description: Billing address postal country code
          example: US
      description: Billing address data container
    CreatePaymentCustomerRequest:
      required:
        - paymentConfigurationId
        - userId
      type: object
      properties:
        userId:
          type: string
          description: The user to create the payment customer for
          example: 3kTMd
        paymentConfigurationId:
          type: string
          description: The payment configuration for the payment customer
          example: 3kTMd
        billingAddress:
          $ref: '#/components/schemas/CreateBillingAddressRequest'
      description: The payment configuration
    CreatePaymentConfigurationRequest:
      required:
        - configurationProperties
        - name
        - organizationId
        - ownerId
        - paymentProvider
        - tax
      type: object
      properties:
        name:
          type: string
          description: The name of the payment configuration
          example: Stripe Configuration (Production)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        paymentProvider:
          type: string
          description: The payment provider
          example: STRIPE
        tax:
          type: string
          description: The tax status for payment configuration
          example: INCLUSIVE
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
        testModeEnabled:
          type: boolean
          description: Indicator that test mode is enabled, defaults to false
          example: false
      description: The payment configuration
    CreatePaymentRequestRequest:
      required:
        - productId
        - userId
      type: object
      properties:
        productId:
          type: string
          description: The product to create the payment for
          example: 3kTMd
        userId:
          type: string
          description: The user to create the payment for
          example: 3kTMd
        assetId:
          type: string
          description: The asset for the payment
          example: 3kTMd
        productKeyId:
          type: string
          description: The product key for the payment
          example: 3kTMd
        productKeyDescription:
          type: string
          description: The product key description
          example: dummy product key
        applicationExternalId:
          type: string
          description: The external id for application
          example: 3kTMd
        applicationName:
          type: string
          description: The application name
        companyName:
          type: string
          description: The company name
        externalUserId:
          type: string
          description: The external id for user
          example: 3kTMd
        userEmailAddress:
          type: string
          description: The email address for user
        billingAddress:
          $ref: '#/components/schemas/CreateBillingAddressRequest'
      description: The create payment request
    PaymentRecordSummaryView:
      required:
        - asset
        - id
        - paymentConfiguration
        - paymentEvents
        - paymentLogs
        - paymentProvider
        - product
        - productName
        - recordType
        - status
        - user
      type: object
      properties:
        id:
          type: string
          description: Unique id of the payment record
          example: 3kTMd
        product:
          type: string
          description: The product
        productName:
          type: string
          description: The product's name
        user:
          $ref: '#/components/schemas/UserView'
        asset:
          $ref: '#/components/schemas/AssetView'
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        paymentProvider:
          type: string
          description: The payment provider
        paymentConfiguration:
          $ref: '#/components/schemas/PaymentConfigurationView'
        status:
          type: string
          description: The status of the payment
          example: payment_intent.succeeded
        recordType:
          type: string
          description: The payment record type
          enum:
            - SUBSCRIPTION
            - ONETIME
            - STANDALONE
        paymentEvents:
          type: array
          description: A list of payment events
          items:
            $ref: '#/components/schemas/PaymentEventView'
        paymentLogs:
          type: array
          description: A list of payment logs
          items:
            $ref: '#/components/schemas/PaymentLogView'
      description: A summary report on current status of Payment
    PaymentView:
      required:
        - paymentCustomer
        - paymentRecordData
      type: object
      properties:
        paymentRecordData:
          $ref: '#/components/schemas/PaymentRecordSummaryView'
        paymentCustomer:
          $ref: '#/components/schemas/PaymentCustomerView'
        clientSecret:
          type: string
          description: Client secret for a new payment method
      description: Payment View
    CreateOrganizationDto:
      required:
        - domainAliases
        - name
        - tenantId
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 2
          type: string
          description: The name of the organization
          example: Marketing
        tenantId:
          type: string
          description: The Id of the Tenant this organization belongs to
          example: B0NV05
        parentId:
          type: string
          description: The id of the parent organization
          example: B0NV05
        invoiceNotificationTemplate:
          type: string
          description: Invoice notification template location
        invoiceTemplate:
          type: string
          description: Invoice template location
        productKeyCreationNotificationTemplate:
          type: string
          description: Product key creation template location
        productKeyUpgradeNotificationTemplate:
          type: string
          description: Product Key upgrade template location
        productKeyQuotaNotificationTemplate:
          type: string
          description: Product Key quota notification template location
        productKeyTierQuotaNotificationTemplate:
          type: string
          description: Product key tier quota notification template location
        emailFromAddress:
          type: string
          description: >-
            The sender address for notifications generated from this
            Organization (note: requires coordination with the Revenium team to
            setup the appropriate DKIM DNS records
        domainAliases:
          type: array
          description: >-
            Email domains associated with this organization (ie, acmesoft.org,
            acmesoft.io, etc)
          example:
            - acmesoft.org
            - acmesoft.io
          items:
            type: string
            description: >-
              Email domains associated with this organization (ie, acmesoft.org,
              acmesoft.io, etc)
            example: '["acmesoft.org","acmesoft.io"]'
        address1:
          type: string
          description: Address (Line 1)
        address2:
          type: string
          description: Address (Line 2)
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        country:
          type: string
          description: The country)
        postalCode:
          type: string
          description: PostalCode
        phoneNumber:
          type: string
          description: PhoneNumber
        emailAddress:
          type: string
          description: EmailAddress
        instructionText:
          type: string
          description: The instruction)
        helpText:
          type: string
          description: The help text
        billingEmail:
          type: string
          description: The billing email address
        billingPhoneNumber:
          type: string
          description: The billing phone number
        url:
          type: string
          description: The URL
        logo:
          type: string
          description: The Organization's logo
        externalId:
          type: string
          description: >-
            An external identifier (e.g. in a API Management system) that is
            associated with the Organization
          example: 12345abcd
        assetAutoDiscoveryEnabled:
          type: boolean
          description: Whether asset auto discovery is enabled or not
        currency:
          type: string
          description: The currency of the organization
      description: The organization
    CreateNotificationProviderConfigurationRequest:
      required:
        - configurationProperties
        - name
        - notificationProviderProvider
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          type: string
          description: The name of the notification provider configuration
          example: Snowflake (Production)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        notificationProviderProvider:
          type: string
          description: The notification provider
          example: MULESOFT
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The notificationprovider configuration
    CreateRefundRequest:
      required:
        - amount
        - productKeyId
      type: object
      properties:
        productKeyId:
          type: string
          description: The id of the product key to issue the refund to
          example: 3kTMd
        amount:
          type: number
          description: The amount to be refunded
          example: 100
        notes:
          type: string
          description: Notes to give any information to why the credit was refunded
          example: Customer requested a refund
      description: Issue a refund
    CreatePaymentReceivedRequest:
      required:
        - amount
        - currency
        - invoiceId
        - paymentDate
        - payment_method
      type: object
      properties:
        paymentDate:
          type: integer
          description: Date of the payment
          format: int64
        currency:
          type: string
          description: The currency for the payment
          example: USD
        amount:
          type: number
          description: The amount for the payment
          example: 18.25
        invoiceId:
          type: string
          description: The asset for the payment
          example: 3kTMd
        payment_method:
          type: string
          description: The method used for the payment
          example: CARD
      description: The received payment  to create
    CreateLineItemRequest:
      required:
        - assetId
        - callCount
        - productKey
        - resource
        - timestamp
      type: object
      properties:
        productKey:
          type: string
          description: The product key used in the transaction
          example: bb8f0656-0f9b-4f30-a461-5c0be94055f1
        application:
          type: string
          description: The application used in the transaction
          example: bb8f0656-0f9b-4f30-a461-5c0be94055f1
        assetId:
          type: string
          description: The id of the asset used in the transaction
          example: bb8f0656-0f9b-4f30-a461-5c0be94055f1
        timestamp:
          type: integer
          description: The transaction record time of the line item
          format: int64
          example: 1585104831000
        callCount:
          type: integer
          description: The amount of times the asset was called
          format: int64
          example: 5
        resource:
          type: string
          description: The resource of the asset being called
          example: /api/widgets
        paymentProvider:
          type: string
          description: The payment provider
          example: STRIPE
        elementDTO:
          type: array
          description: ElementDTOs for the line item
          items:
            $ref: '#/components/schemas/ElementDTO'
      description: The line item to create
    ElementDTO:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          example: container-number
        value:
          type: string
          example: '1234'
      description: Dynamic metering elements
    CreateIdentityProviderConfigurationRequest:
      required:
        - configurationProperties
        - identityProviderProvider
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          type: string
          description: The name of the identity provider configuration
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        identityProviderProvider:
          type: string
          description: The identity provider
          example: AUTH0
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The Identity Provider Configuration
    CreateExportConfigurationRequest:
      required:
        - configurationProperties
        - exportProvider
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          type: string
          description: The name of the export configuration
          example: SAP Email
        organizationId:
          type: string
          description: The id of the organization associated with the export configuration
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the user who owns the export configuration
          example: 3kTMd
        exportProvider:
          type: string
          description: The export provider
          example: EMAIL
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
      description: The export configuration
    ElementDefinitionCreateRequest:
      required:
        - elementDescription
        - name
        - organizationId
        - type
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - NUMBER
        organizationId:
          type: string
        elementDescription:
          type: string
    DemoPricingRulesDSLRequest:
      required:
        - demoLineItemDTO
        - ruleScript
      type: object
      properties:
        demoLineItemDTO:
          type: string
          description: The demo line item sample data dto
        ruleScript:
          type: string
          description: The rule's pricing script
          example: baseCost + properties['currentComputeCost']]
      description: Demo pricing rules dsl
    DemoPricingRuleResultView:
      required:
        - executionNote
        - result
        - status
      type: object
      properties:
        status:
          type: string
          description: Status of pricing rule evaluation against demo data
        result:
          type: array
          description: >-
            Result of evaluating pricing rule against demo data, will be charge
            amount or error message
          items:
            type: string
            description: >-
              Result of evaluating pricing rule against demo data, will be
              charge amount or error message
        executionNote:
          type: array
          description: Execution notes
          items:
            type: string
            description: Execution notes
      description: Demo Pricing Rules DSL DTO
    CreateConsumerDataProviderConfigurationRequest:
      required:
        - configurationProperties
        - consumerDataProviderProvider
        - createSQL
        - name
        - organizationId
        - ownerId
        - querySQL
      type: object
      properties:
        name:
          type: string
          description: The name of the consumer data provider configuration
          example: Snowflake (Production)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        consumerDataProviderProvider:
          type: string
          description: The consumer data provider
          example: SNOWFLAKE
        configurationProperties:
          type: string
          description: Configuration properties for the consumer data provider
          example: username=foo,environment=production,loginUr=https://foo.com
        createSQL:
          type: string
          description: The billing table schema creation sql
        querySQL:
          type: string
          description: The billing table schema query sql
      description: The consumer data provider configuration
    CreateCommunicationRequest:
      required:
        - content
        - organizationId
        - recipient
        - subject
      type: object
      properties:
        subject:
          type: string
          description: The subject of the communication
          example: Product Access Request
        content:
          type: string
          description: The content of the communication
          example: |2-

                        Hello, 
                        
                        Please provide access to this Product
                    
        recipient:
          type: string
          description: The recipient of the communication
          example: john.wick@hypercurrent.io
        organizationId:
          type: string
          description: The id of the organization that owns the communication
          example: john.wick@hypercurrent.io
      description: The communication
    AcceptTermsRequest:
      required:
        - acceptanceTimestamp
        - ipAddress
        - signedDocumentUrl
        - userEmail
      type: object
      properties:
        userEmail:
          type: string
        acceptanceTimestamp:
          type: string
          format: date-time
        signedDocumentUrl:
          type: string
        ipAddress:
          type: string
    CreateBillingMetadataRequest:
      required:
        - name
        - organizationId
        - target
        - type
        - value
      type: object
      properties:
        organizationId:
          type: string
          description: The id of the organization
        name:
          type: string
          description: The name of the billing metadata
        value:
          type: string
          description: The value of the billing metadata
        target:
          type: string
          description: The target of the billing metadata (either INVOICE or LINE_ITEM)
        type:
          type: string
          description: The type of the billing metadata (either STRING or NUMBER)
      description: The billing metadata to create
    CreateAssetRequest:
      required:
        - applicationAutoDiscoveryEnabled
        - assetType
        - classificationPatterns
        - elementDefinitionIds
        - name
        - organizationId
        - ownerId
        - productIds
        - properties
        - slaDefinitionIds
        - tags
        - version
      type: object
      properties:
        assetType:
          type: string
          description: The type of the asset
          example: API
        accountId:
          type: string
          description: The account id of the asset
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        ownerId:
          type: string
          description: The id of the user that owns the asset
          example: NsYmyL
        name:
          type: string
          description: The name of the asset
          example: my-awesome-asset
        the description of the asset:
          type: string
          example: Truly an awesome asset
        version:
          type: string
          description: The asset's version
          example: 1.0.0
        organizationId:
          type: string
          description: The id of the organization that owns the asset
          example: sBcTTs3
        productIds:
          type: array
          description: A list of product ids associated with this asset.
          example:
            - sQYmyQ
            - jQYkyl
            - a92j3
          items:
            type: string
            description: A list of product ids associated with this asset.
            example: '["sQYmyQ","jQYkyl","a92j3"]'
        slaDefinitionIds:
          type: array
          description: A list of sla definition ids associated with this asset.
          example:
            - 3kTMd
            - K3TMs
            - mmTFd
          items:
            type: string
            description: A list of sla definition ids associated with this asset.
            example: '["3kTMd","K3TMs","mmTFd"]'
        properties:
          type: array
          description: Properties associated with the asset
          items:
            $ref: '#/components/schemas/AssetPropertyRequest'
        tags:
          type: array
          description: A list of tags associated with this asset.
          example:
            - tag1
            - tag2
            - tag3
          items:
            type: string
            description: A list of tags associated with this asset.
            example: '["tag1","tag2","tag3"]'
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a api management system) that is
            associated with the asset
          example: 12345abcd
        code:
          type: string
          description: The asset code
          example: '1234'
        resource:
          type: string
          description: The asset's resource
          example: /api/products
        method:
          type: string
          description: The asset's http method (if applicable)
          example: POST
        applicationAutoDiscoveryEnabled:
          type: boolean
          description: Whether application auto discovery is enabled or not
        classificationPatterns:
          type: array
          description: The asset classification patterns
          items:
            $ref: '#/components/schemas/AssetClassificationPattern'
        elementDefinitionIds:
          type: array
          description: The element definition ids to associate with this asset
          items:
            type: string
            description: The element definition ids to associate with this asset
        logo:
          type: string
          description: The Assets' logo
        devPortalLink:
          type: string
          description: The devPortalLink of the asset
          example: http://url.com
      description: The asset to create
    CreateApplicationRequest:
      required:
        - consumerOrganizationName
        - externalId
        - identityProviderName
        - name
        - organizationId
        - organizationName
        - productKeyIds
        - tags
        - userEmailAddress
        - userId
      type: object
      properties:
        name:
          type: string
          description: The name of the application
          example: My Mobile App
        organizationId:
          type: string
          description: The identifier of the organization associated with the application
          example: aSjk123
        organizationName:
          type: string
          description: The name of the organization associated with the application
          example: Acme Financial, Inc
        userId:
          type: string
          description: The identifier of the user associated with the application
          example: aSjk123
        userEmailAddress:
          type: string
          description: The email address of the user associated with the application
          example: aSjk123
        externalId:
          type: string
          description: >-
            The identifier of the application in an external system (generally a
            clientid in an idp)
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          type: array
          description: The product keys this application is associated with
          example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
          items:
            type: string
            description: The product keys this application is associated with
            example: '[''aca234'', ''aBsSqs'', ''1sDzsd'']'
        consumerOrganizationId:
          type: string
          description: Unique id of the consuming organization the application belongs to
          example: sa3kaL
        consumerOrganizationName:
          type: string
          description: >-
            The name of the consuming organization associated with the
            application
          example: Acme Financial, Inc
        tags:
          type: array
          description: 'A list of tags associated with this application. '
          example:
            - tag1
            - tag2
            - tag3
          items:
            type: string
            description: 'A list of tags associated with this application. '
            example: '["tag1","tag2","tag3"]'
        identityProviderName:
          type: string
          description: The name of the identity provider associated with the application
          example: aSjk123
      description: The API key request
    CreateAPIMConfigurationRequest:
      required:
        - apimProvider
        - configurationProperties
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        name:
          type: string
          description: The name of the api management configuration
          example: Gravitee (Production)
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        apimProvider:
          type: string
          description: The API management provider
          example: GRAVITEE
        configurationProperties:
          type: string
          description: Configuration properties
          example: username=foo,environment=production,loginUr=https://foo.com
        authenticationMechanism:
          type: string
          description: The authentication mechanism
          example: CONNECTED_APP
      description: The API management configuration
    CreateAPIRequest:
      required:
        - name
        - organizationId
        - ownerId
      type: object
      properties:
        ownerId:
          type: string
          description: The id of the owner
          example: 3kTMd
        organizationId:
          type: string
          description: The id of the organization
          example: 3kTMd
        name:
          type: string
          description: The API key name
          example: Acme Integration Key
      description: The API Key request
    UnsuspendTenant:
      required:
        - tenantId
      type: object
      properties:
        tenantId:
          type: string
      description: The UnsuspendTenantRequest
    SuspendTenant:
      required:
        - tenantId
      type: object
      properties:
        tenantId:
          type: string
      description: The SuspendTenantRequest
    CreateAccountTierRequest:
      required:
        - accountTierType
        - selfServiceIncludedEvents
      type: object
      properties:
        accountTierType:
          type: string
          description: Name of the account tier
        selfServiceIncludedEvents:
          type: integer
          description: Number of events included in self service
          format: int64
      description: The account tier request
    UserWithInvoiceView:
      required:
        - account
        - administeredOrganizations
        - administeredTenants
        - emailAddress
        - firstName
        - id
        - invoiceRollup
        - isActive
        - lastName
        - organizations
        - password
        - personas
        - roles
        - username
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
          example: 3kTMd
        username:
          type: string
          description: The username
          example: gabe
        firstName:
          type: string
          description: The first name
          example: gabe
        lastName:
          type: string
          description: The last name
          example: gabe
        emailAddress:
          type: string
          description: The email address
          example: gabe@pipedpiper.com
        password:
          type: string
          description: The obfuscated password
          example: '***********'
        isActive:
          type: boolean
          description: Whether or not the User is active
          example: true
        organizations:
          type: array
          description: The Organizations the User belongs to
          items:
            $ref: '#/components/schemas/OrganizationView'
        roles:
          type: array
          description: The roles granted to the user
          example:
            - ROLE_ADMIN
            - ROLE_API_CONSUMER
          items:
            type: string
            description: The roles granted to the user
            example: '["ROLE_ADMIN","ROLE_API_CONSUMER"]'
        account:
          type: string
          description: The unique account identifier associated with the user
          example: 8897e662-f1de-4404-944b-6b88434e7511
        invoiceRollup:
          type: number
          description: The total amount spent across invoices
          format: double
          example: 1500000
        administeredOrganizations:
          type: array
          description: The Organizations the User is an administrator of
          items:
            $ref: '#/components/schemas/OrganizationView'
        administeredTenants:
          type: array
          description: The Tenants the User is an administrator of
          items:
            $ref: '#/components/schemas/TenantView'
        personas:
          type: array
          description: The personas granted to the user
          example:
            - CIO
            - Platform Owner
          items:
            type: string
            description: The personas granted to the user
            example: '["CIO","Platform Owner"]'
      description: A user with expanded invoice values
    NotificationSourceView:
      required:
        - source
      type: object
      properties:
        source:
          type: string
          description: Error Message for API use
          example: This is an invalid key
      description: Shows a NotificationSource
    IsotopeCommand:
      required:
        - command
      type: object
      properties:
        command:
          type: string
          description: The Isotope command
          example: >-
            curl -sSL
            https://raw.githubusercontent.com/hypercurrentio/isotope-files/main/install_and_run.sh
            | sudo bash -s -- 8080 hak_foo
      description: The isotope command
    TrafficAnomalyView:
      required:
        - applicationId
        - applicationName
        - assetId
        - assetName
        - category
        - productId
        - productKeyId
        - productKeyName
        - productName
        - resource
        - timestamp
        - transactionId
        - type
      type: object
      properties:
        timestamp:
          type: integer
          description: The timestamp the traffic anomaly was recorded at
          format: int64
          example: 1682362487000
        transactionId:
          type: string
          description: The unique identifier of the anomaly
          example: 0d3d5351-e9b1-408e-bed0-945e14a85da4
        assetId:
          type: string
          description: The ID of the Asset associated with the traffic anomaly
          example: 0d3d5351-e9b1-408e-bed0-945e14a85da4
        assetName:
          type: string
          description: The name of the Asset associated with the traffic anomaly
          example: My Asset
        productId:
          type: string
          description: The ID of the Asset associated with the traffic anomaly
          example: gh542a
        productName:
          type: string
          description: The name of the product associated with the traffic anomaly
          example: My Product
        productKeyId:
          type: string
          description: The id of the product key associated with the traffic anomaly
          example: sVc8ak
        productKeyName:
          type: string
          description: The name of the product key associated with the traffic anomaly
          example: My Product Key
        applicationId:
          type: string
          description: The ID of the application associated with the traffic anomaly
          example: 7xBjkq1
        applicationName:
          type: string
          description: The name of the application associated with the traffic anomaly
          example: My Asset
        resource:
          type: string
          description: The resource associated with the traffic anomaly
          example: /path
        category:
          type: string
          description: The category the traffic anomaly
          example: ASSET
        type:
          type: string
          description: The type of anomaly detected
          example: ERROR_RATE
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    TierPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TierView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    NotificationUserView:
      required:
        - emailAddress
        - id
        - username
      type: object
      properties:
        id:
          type: string
          description: The id of the user
        username:
          type: string
          description: The username of the user
        emailAddress:
          type: string
          description: The email address of the user
      description: The pk owners associated with this product
    SpecificSubscriberNotificationView:
      required:
        - body
        - id
        - owners
        - selectedProducts
        - selectedProductsKeys
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        owners:
          type: array
          description: The pk owners associated with this product
          items:
            $ref: '#/components/schemas/NotificationUserView'
        selectedProducts:
          type: array
          description: The products selected by the user
          items:
            type: string
            description: The products selected by the user
        selectedProductsKeys:
          type: array
          description: The productsKeys selected by the user
          items:
            $ref: '#/components/schemas/ProductKeyView'
    SLAViolationSummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationSummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SLAViolationSummaryView:
      required:
        - actual
        - consumer
        - consumerOrganizationId
        - consumerOrganizationName
        - currency
        - description
        - id
        - reviewed
        - rule
        - slaDefinition
        - timestamp
        - type
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the SLA violation
          example: 3kTMd
        description:
          type: string
          description: Description of the SLA violation
          example: Backend latency of 0.5 greater than 0.242 ms
        slaDefinition:
          type: string
          description: The SLA definition
          example: Gold Tier
        productKeyId:
          type: string
          description: Unique id of the associated product key
          example: 3kTMd
        productKeyName:
          type: string
          description: Name of the associated product key
          example: Weyland-Yutani Product Key
        consumer:
          type: string
          description: The username of the consumer who was impacted by the SLA violation
          example: user
        consumerOrganizationId:
          type: string
          description: >-
            The ID of the consuming organization who was impacted by the SLA
            violation
          example: 3kTMd
        consumerOrganizationName:
          type: string
          description: >-
            The name of the consuming organization who was impacted by the SLA
            violation
          example: Weyland-Yutani
        rule:
          type: string
          description: The SLA rule that was violated
          example: 300ms
        type:
          type: string
          description: The type SLA rule that was violated
          example: LATENCY
        actual:
          type: string
          description: The actual value of SLA rule that was violated
          example: '555'
        reviewed:
          type: boolean
          description: Has the violation been reviewed?
        timestamp:
          type: integer
          description: The violation timestamp
          format: int64
        currency:
          type: string
          description: The currency of the Line Item
      description: A service level agreement violation
    SLAWithSLAEnforcedView:
      required:
        - id
        - product
        - slaDefinition
      type: object
      properties:
        id:
          type: string
          description: Unique id of the SLA
          example: 3kTMd
        product:
          $ref: '#/components/schemas/ProductView'
        slaDefinition:
          $ref: '#/components/schemas/SLADefinitionView'
      description: A Service Level Agreement
    SLADefinitionPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SLADefinitionView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SitePageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SiteView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductTrialView:
      required:
        - productId
      type: object
      properties:
        subscriptionTrialEndDate:
          type: integer
          description: End date of subscription trial period
          format: int64
        productId:
          type: string
          description: Unique identifier of the Product
          example: 3kTMd
      description: Product Trial End Date For Client
    PlanElementForProductSummaryView:
      required:
        - distinctValue
        - elementDefinition
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sVc8ak
        name:
          type: string
          description: The name of the plan element
          example: Country
        elementDefinition:
          type: string
          description: The element definition of the plan element
        distinctValue:
          type: string
          description: The distinct value of the plan element (case insensitive)
          example: FRANCE
        flatAmount:
          type: number
          description: Flat amount of the plan element
          example: 34.33
      description: List of plan elements
    PlanForProductSummaryView:
      required:
        - currency
        - elements
        - features
        - graduated
        - id
        - name
        - planType
        - setups
        - template
        - tiers
      type: object
      properties:
        id:
          type: string
          description: The id of the plan
          example: sVc8ak
        name:
          type: string
          description: Name of the plan
          example: enterprise plan
        planType:
          type: string
          description: The plan type
          example: SUBSCRIPTION
        charge:
          type: number
          description: One time payment charge
          example: 23344.77
        currency:
          type: string
          description: The currency of the plan
          example: USD
        period:
          type: string
          description: The subscription plan period
          example: MONTH
        periodCount:
          type: integer
          description: Period count of a subscription plan
          format: int64
          example: 4
        trialPeriod:
          type: string
          description: The subscription plan trial period
          example: MONTH
        trialPeriodCount:
          type: integer
          description: Trial Period count of a subscription plan
          format: int64
          example: 4
        graduated:
          type: boolean
          description: >-
            Boolean that indicates if volume tiers are graduated or not. It
            defaults to true
        template:
          type: boolean
          description: >-
            Boolean that indicates if a plan is a template. A template plan
            cannot be attached to a product.
        prePaySetups:
          type: boolean
          description: >-
            Boolean that indicates if setupFees should be paid upfront (i.e. at
            the beginning of a subscription instead of at the end of the first
            subscription period)
        tiers:
          uniqueItems: true
          type: array
          description: List of Plan tiers
          example: 4
          items:
            $ref: '#/components/schemas/TierForProductView'
        elements:
          uniqueItems: true
          type: array
          description: List of plan elements
          items:
            $ref: '#/components/schemas/PlanElementForProductSummaryView'
        features:
          uniqueItems: true
          type: array
          description: List of plan features
          items:
            $ref: '#/components/schemas/FeatureView'
        setups:
          uniqueItems: true
          type: array
          description: List of setup fees
          items:
            $ref: '#/components/schemas/SetupFeeForProductSummaryView'
      description: Summary view product plan
    ProductSummaryView:
      required:
        - account
        - assetIds
        - assetNames
        - audienceRestriction
        - baseCost
        - configurationProperties
        - cpqStaged
        - defaultQuota
        - defaultQuotaNotificationThreshold
        - displayPriority
        - id
        - isStaged
        - name
        - namedConsumers
        - namedOrganizationIds
        - namedOrganizationNames
        - overageRatePerTransaction
        - owner
        - paymentConfiguration
        - paymentConfigurationTax
        - pricingRules
        - productIds
        - productNames
        - settlementPeriod
        - slaIds
        - slaNames
        - syncedToGateway
        - transactionType
        - version
      type: object
      properties:
        id:
          type: string
          description: Unique id of the product
          example: 3kTMd
        name:
          type: string
          description: The name of the product
          example: my-awesome-product
        baseCost:
          type: number
          description: The base transaction cost to access the product
          example: 100
        overageRatePerTransaction:
          type: number
          description: >-
            The subscription overage rate per transaction for products defined
            with  'SUBSCRIPTION_WITH_OVERAGE'
        version:
          type: string
          description: The version of the product
          example: 1.0.0
        owner:
          type: string
          description: The user that owns the product
        account:
          type: string
          description: The account ID
          example: 23bf56cb-2df6-490e-a039-5755866e0c1c
        cpqStaged:
          type: boolean
          description: Is the Product staged from a CPQ system?
          example: true
        pricingRules:
          type: array
          description: The list of pricing rules
          items:
            type: string
            description: The list of pricing rules
        assetIds:
          type: array
          description: The list of asset id's
          items:
            type: string
            description: The list of asset id's
        assetNames:
          type: array
          description: The list of asset names
          items:
            type: string
            description: The list of asset names
        slaIds:
          type: array
          description: The list of SLA IDs
          items:
            type: string
            description: The list of SLA IDs
        slaNames:
          type: array
          description: The list of SLA names
          items:
            type: string
            description: The list of SLA names
        transactionType:
          type: string
          description: The transaction type of the product
          example: TRANSACTIONAL
        defaultQuota:
          type: integer
          description: >-
            The default transaction quota for Product Keys associated with this
            product
          format: int64
        defaultQuotaNotificationThreshold:
          type: number
          description: >-
            The default percentage of quota consumption to exceed before sending
            a notification
          format: double
        productIds:
          type: array
          description: The list of product IDs
          items:
            type: string
            description: The list of product IDs
        productNames:
          type: array
          description: The list of product names
          items:
            type: string
            description: The list of product names
        paymentConfiguration:
          type: string
          description: The payment configuration
        configurationProperties:
          type: string
          description: Configuration Properties
          example: username=foo,environment=production,loginUr=https://foo.com
        paymentConfigurationTax:
          type: string
          description: Payment configuration tax
          example: INCLUSIVE
        isStaged:
          type: boolean
          description: Is Staged?
          example: true
        terms:
          type: string
          description: The terms and conditions
        termsDisplayName:
          type: string
          description: The terms and conditions display name
        additionalTerms1:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName1:
          type: string
          description: Additional terms and conditions display name
        additionalTerms2:
          type: string
          description: Additional terms and conditions
        additionalTermsDisplayName2:
          type: string
          description: Additional terms and conditions display name
        description:
          type: string
          description: The description of the product (HTML formatted)
          example: <b>Truly an awesome product</b>
        shortDescription:
          type: string
          example: Truly an awesome product
        settlementPeriod:
          type: string
          description: >-
            The settlement period that determines when product charges are
            calculated for an invoice
          example: '100'
        disableProductKeyOnPaymentFailed:
          type: boolean
          description: Disable a product key if payment fails
          example: true
        externalId:
          type: string
          description: >-
            An external identifier (ie, in a API Management system) that is
            associated with the product
          example: 12345abcd
        displayPriority:
          type: number
          description: The display priority of the product
          format: double
          example: 1
        notifyClientOnInvoice:
          type: boolean
          description: Notify client on invoice
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Notify client that trial is about to expire
        audienceRestriction:
          type: string
          description: The audience restriction, if any, on a product
          example: USER
        syncedToGateway:
          type: boolean
          description: Whether or not the product is synchronized with an API Gateway
        environment:
          type: string
          description: The environment
          example: Production
        externalGroupId:
          type: string
          description: >-
            An external API group identifier (ie, in a API Management system)
            that is associated with the product
          example: 12345abcd
        externalLabel:
          type: string
          description: >-
            An external label for the product that is exposed in developer
            portal
          example: 12345abcd
        environmentId:
          type: string
          description: The environment for the product
          example: Production
        apimConfigurationId:
          type: string
          description: >-
            The ID of the API management configuration (if synchronizing this
            product with an external APIM)
          example: 3kTMd
        namedConsumers:
          type: array
          description: List of user email addresses who are allowed to access the product
          items:
            type: string
            description: List of user email addresses who are allowed to access the product
        namedOrganizationIds:
          type: array
          description: The product's named organizations
          items:
            type: string
            description: The product's named organizations
        namedOrganizationNames:
          type: array
          description: The product's named organizations
          items:
            type: string
            description: The product's named organizations
        plan:
          type: string
          description: The plan id of the product
          example: 3kTMd
        subscriptionIncludedTransactions:
          type: integer
          description: >-
            The included transaction count for products defined with 
            'SUBSCRIPTION_WITH_OVERAGE'
          format: int64
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        productLockedToV1:
          type: boolean
          description: Product V1 Lock
        planType:
          type: string
          description: Type of product plan
          enum:
            - SUBSCRIPTION
            - CHARGE
        planSummaryView:
          $ref: '#/components/schemas/PlanForProductSummaryView'
      description: A product
    SetupFeeForProductSummaryView:
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          type: string
          description: The id of the setup fee
          example: sVc8ak
        name:
          type: string
          description: The name of the setup fee
          example: Country
        type:
          type: string
          description: The type of the setup fee
          example: CUSTOMER
        flatAmount:
          type: number
          description: Flat amout of the setup fee
          example: 34.33
      description: List of setup fees
    AssetSummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AssetSummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AssetSummaryView:
      required:
        - accountId
        - assetType
        - id
        - name
        - organization
        - owner
        - products
        - syncedToGateway
        - tags
        - version
      type: object
      properties:
        id:
          type: string
          description: The ID of the asset
          example: sVc8ak
        name:
          type: string
          description: The name of the asset
          example: my-awesome-asset
        description:
          type: string
          description: The description of the asset (HTML formatted)
          example: <b>Truly an awesome product</b>
        assetType:
          type: string
          description: The type of the asset
          example: API
        owner:
          type: string
          description: The id of the user that owns the asset
          example: aSn3sZ
        organization:
          type: string
          description: The id of the organization that owns the asset
          example: aSn3sZ
        accountId:
          type: string
          description: The account id of the Asset
          example: c7a01027-9f5c-4e26-9ad5-3608897a723d
        version:
          type: string
          description: The asset's version
          example: 1.0.0
        products:
          type: array
          description: A list of product names
          example:
            - Product (Gold)
            - Product (Silver)
          items:
            type: string
            description: A list of product names
            example: '["Product (Gold)","Product (Silver)"]'
        tags:
          type: array
          description: Tags associated with the asset
          example:
            - tag1
            - tag2
          items:
            type: string
            description: Tags associated with the asset
            example: '["tag1","tag2"]'
        environment:
          type: string
          description: The environment
          example: Production
        syncedToGateway:
          type: boolean
          description: Whether or not the asset is synchronized with an API Gateway
        resource:
          type: string
          description: The asset's resource
          example: /api/products
        method:
          type: string
          description: The asset's method
          example: GET
      description: A summary of an Asset/Service being metered by the platform
    ProductPagedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductCountsView:
      required:
        - applicationCount
        - assetCount
        - productId
        - productKeyCount
        - productName
      type: object
      properties:
        productId:
          type: string
          description: Unique id of the product
          example: 3kTMd
        productName:
          type: string
          description: Name of the product
          example: An API product
        assetCount:
          type: integer
          description: Count of a products assets
          format: int64
          example: 1234
        productKeyCount:
          type: integer
          description: Count of a products product keys
          format: int64
          example: 1234
        applicationCount:
          type: integer
          description: Count of a products applications
          format: int64
          example: 1234
      description: Product asset counts
    ProductFamilySummaryView:
      required:
        - allowProductFamilyDowngrade
        - allowProductFamilyUpgrade
        - id
        - name
        - organization
        - owner
        - productFamilyTiers
      type: object
      properties:
        id:
          type: string
          description: The ID of the product family
          example: 3kTMd
        name:
          type: string
          description: The name of the product family
        owner:
          type: string
        organization:
          type: string
        allowProductFamilyDowngrade:
          type: boolean
          description: Boolean to allow product family downgrade
          example: true
        allowProductFamilyUpgrade:
          type: boolean
          description: Boolean to allow product family upgrade
          example: true
        productFamilyTiers:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyTierSummaryView'
      description: Summary of a product family that can be used to group products
    ProductFamilyTierSummaryView:
      required:
        - The product of the product family tier
        - featuredTier
        - id
        - name
        - tierNumber
      type: object
      properties:
        id:
          type: string
          description: The id of the product family tier
          example: sVc8ak
        name:
          type: string
          description: Name of the product family tier
          example: enterprise tier
        tierNumber:
          type: number
          description: The product family tier
          format: double
          example: 2.3
        The product of the product family tier:
          type: string
        featuredTier:
          type: boolean
          description: Flag to indicate if tier is featured
          example: true
    ProductFamilySummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilySummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductFamilyPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    LineItemView:
      required:
        - asset
        - callCount
        - charge
        - currency
        - id
        - product
        - productKey
        - timestamp
        - type
      type: object
      properties:
        id:
          type: string
          description: The ID of the line item
          example: 3kTMd
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        product:
          $ref: '#/components/schemas/ProductView'
        type:
          type: string
          description: The type of line item
          example: TRANSACTIONAL
        asset:
          $ref: '#/components/schemas/AssetView'
        callCount:
          type: integer
          description: The amount of times the asset was invoked in the metered period
          format: int64
          example: 200
        charge:
          type: number
          description: The amount charged in the metered period
          format: double
          example: 200
        timestamp:
          type: integer
          description: The timestamp of when the line item was recorded
          format: int64
          example: 1654646301000
        chargeCalculationLog:
          $ref: '#/components/schemas/ChargeCalculationLogView'
        application:
          $ref: '#/components/schemas/ApplicationView'
        resource:
          type: string
          description: The resource (URI) being associated with the line item
        currency:
          type: string
          description: The currency of the line item
        tierName:
          type: string
          description: The line item tier name'
        tierUpTo:
          type: integer
          description: The line item tier up-to value
        tierStartingFrom:
          type: integer
          description: The line item tier from value
        tierUnitAmount:
          type: number
          description: The line item tier unit amount
        elementName:
          type: string
          description: The line item element name
        elementDistinctValue:
          type: number
          description: The line item element distinct value
      description: A line item charge as part of an invoice
    ProductKeyProjectedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyProjectedView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductKeyProjectedView:
      required:
        - assetIds
        - assetNames
        - client
        - created
        - deletionPending
        - description
        - domainAliases
        - id
        - key
        - namedConsumers
        - namedOrganizationsIds
        - organization
        - owner
        - planQuotas
        - productIds
        - productNames
        - productSettlementPeriods
        - quota
        - quotaConsumed
        - subscriptionIncludedTransactions
        - subscriptionQuotaCount
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the product key
          example: 3kTMd
        valid:
          type: boolean
          description: Is the key valid?
          example: true
        owner:
          type: string
          description: The owner of the product key
        client:
          type: string
          description: >-
            In the event the owner doesn't have an account an email address can
            be passed to create the account on the fly
        description:
          type: string
          description: A description
          example: 'product key #1234'
        organization:
          type: string
          description: Name of the consuming organization
          example: Gfk2aF
        productIds:
          type: array
          description: The ids of the Products the ProductKey belongs to
          items:
            type: string
            description: The ids of the Products the ProductKey belongs to
        productNames:
          type: array
          description: The name of the Product the ProductKey belongs to
          items:
            type: string
            description: The name of the Product the ProductKey belongs to
        productSettlementPeriods:
          type: array
          description: The name of the settlement periods for the associated Products
          items:
            type: string
            description: The name of the settlement periods for the associated Products
        assetIds:
          type: array
          description: The ids of the Assets the ProductKey belongs to
          items:
            type: string
            description: The ids of the Assets the ProductKey belongs to
        assetNames:
          type: array
          description: The names of the Asset the ProductKey belongs to
          items:
            type: string
            description: The names of the Asset the ProductKey belongs to
        quotaConsumed:
          type: integer
          description: The consumed quota associated with the product key
          format: int64
        quota:
          type: integer
          description: The optional transaction quota associated with the product key
          format: int64
        subscriptionQuotaCount:
          type: integer
          description: 'The subscriptionQuotaCount '
          format: int64
        subscriptionIncludedTransactions:
          type: integer
          description: 'The subscriptionIncludedTransactions '
          format: int64
        key:
          type: string
          description: The key
          example: 5c99c760-4d11-4463-a211-937594d913d0
        created:
          type: integer
          description: The creation timestamp
          format: int64
          example: 1651779724000
        deletionPending:
          type: boolean
          description: >-
            Product key will be deleted soon, e.g. at the end of the current
            subscription period
        subscriptionPeriodStartDate:
          type: integer
          description: Start date of current subscription period
          format: int64
        subscriptionPeriodEndDate:
          type: integer
          description: End date of current subscription period
          format: int64
        namedConsumers:
          type: array
          description: List of user email addresses who are allowed to access the product
          items:
            type: string
            description: List of user email addresses who are allowed to access the product
        namedOrganizationsIds:
          type: array
          description: The product's named organizations
          items:
            type: string
            description: The product's named organizations
        domainAliases:
          type: array
          description: The list of domain aliases associated with the product key
          items:
            type: string
            description: The list of domain aliases associated with the product key
        subscriptionAllowMidPeriodCancellation:
          type: boolean
          description: >-
            Whether or not to allow mid period cancellation of the subscription
            with proration
        notifyClientTrialAboutToExpire:
          type: boolean
          description: Whether or not to notify client when trial is about to expiry
        subscriptionTrialEndDate:
          type: integer
          description: End date of subscription trial
          format: int64
        currency:
          type: string
          description: Currency of products in productKey
        planQuotas:
          type: array
          description: A list of Plan Quotas for this Product Key
          items:
            $ref: '#/components/schemas/PlanQuotaForProductKeyView'
      description: A product key to accessing an Product's Assets
    ProductKeyPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductKeyEventPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductKeyEventView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProductKeyEventView:
      required:
        - asset
        - client
        - eventType
        - product
        - productKey
        - timestamp
      type: object
      properties:
        productKey:
          $ref: '#/components/schemas/ProductKeyView'
        product:
          $ref: '#/components/schemas/ProductView'
        asset:
          $ref: '#/components/schemas/AssetView'
        client:
          $ref: '#/components/schemas/UserView'
        eventType:
          type: string
          description: The product key event type
        remoteAddress:
          type: string
          description: The address (if available) of the consumer utilizing the key
        remoteUser:
          type: string
          description: The user (if available) of the consumer utilizing the key
        timestamp:
          type: integer
          description: The time the of the event
          format: int64
      description: A product key event
    PricingRulePageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PricingRuleView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PricingRuleExecutionLogPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PricingExecutionLogView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PlanPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlanView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PlanElementPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlanElementView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PaymentRecordPagedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRecordView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    OrganizationPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageNotificationProviderConfigurationView:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/NotificationProviderConfigurationView'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    InvoiceView:
      required:
        - currency
        - end
        - id
        - organization
        - start
        - timestamp
        - totalAmount
        - totalCalls
        - user
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the invoice
          example: 3kTMd
        user:
          $ref: '#/components/schemas/UserView'
        organization:
          $ref: '#/components/schemas/OrganizationView'
        totalCalls:
          type: integer
          description: Total amount of calls for the invoiced period
          format: int64
          example: 500
        totalAmount:
          type: number
          description: Total charge invoiced for the invoiced period
          format: double
          example: 1000
        totalRefunded:
          type: number
          description: Total refunds for the invoiced period
          format: double
          example: 1000
        totalAdjusted:
          type: number
          description: Total adjusted amount for the invoiced period
          format: double
          example: 1000
        start:
          type: integer
          description: Beginning timestamp of the invoiced period (milliseconds)
          format: int64
          example: 1584585647000
        end:
          type: integer
          description: Ending timestamp of the invoiced period (milliseconds)
          format: int64
          example: 1584585647000
        timestamp:
          type: integer
          description: Invoice generation timestamp (milliseconds)
          format: int64
          example: 1584585647000
        invoiceJobId:
          type: string
          description: Invoice generation job identifier
          example: '1584585647000'
        paymentProvider:
          type: string
          description: Invoice payment provider
          example: STRIPE
        paymentLog:
          $ref: '#/components/schemas/PaymentLogView'
        products:
          type: array
          description: Products included in this invoice
          items:
            $ref: '#/components/schemas/ProductView'
        paymentReceived:
          $ref: '#/components/schemas/PaymentReceivedView'
        currency:
          type: string
          description: The currency
          example: USD
      description: A billing invoice for asset usage
    PaymentReceivedView:
      type: object
      properties:
        id:
          type: string
          description: Id of payment received
        paymentDate:
          type: integer
          description: Date the payment was received
          format: int64
        amount:
          type: number
          description: Amount received in the payment
        currency:
          type: string
          description: Currency type of the payment received
        paymentMethod:
          type: string
          description: Method used in payment received
      description: Payment received for this invoice
    RefundView:
      required:
        - amount
        - asset
        - currency
        - id
        - slaViolation
        - timestamp
      type: object
      properties:
        id:
          type: string
          description: The id of the refund
          example: 3kTMd
        slaViolation:
          $ref: '#/components/schemas/SLAViolationView'
        amount:
          type: number
          format: double
          example: 1000
        asset:
          $ref: '#/components/schemas/AssetView'
        timestamp:
          type: integer
          description: The timestamp of when the refund was issued
          format: int64
          example: 200
        notes:
          type: string
          description: Notes to give any information to why the credit was refunded
          example: Customer requested a refund
        currency:
          type: string
          description: The currency of the line item
      description: A refund applied to an invoice
    InvoiceViewPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    RefundViewPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/RefundView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ElementSummaryView:
      required:
        - count
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/ElementDefinitionView'
        distinctValue:
          type: string
          description: Distinct value of element
        count:
          type: integer
          description: Count of element
          example: 3
      description: An ElementDefinition/Element being metered by the platform
    TransactionView:
      required:
        - currency
        - id
        - timestamp
        - unmodifiedCharge
      type: object
      properties:
        id:
          type: string
          description: The id of the line item
          example: 3kTMd
        timestamp:
          type: integer
          description: The timestamp of when the line item was recorded
          format: int64
          example: 1635682849429
        productId:
          type: string
          description: Product id that generated the line item
          example: xd45fd
        productName:
          type: string
          description: Product name that generated the line item
          example: Acme Co Product
        productionKeyId:
          type: string
          description: Product key id used for the line item
        productionKeyName:
          type: string
          description: Product key name used for the line item
        ownerId:
          type: string
          description: Product key owner id for the line Item
        ownerEmailAddress:
          type: string
          description: Product key owner email address for the line item
        clientId:
          type: string
          description: Product key client id for the line item
        clientEmailAddress:
          type: string
          description: Product key client email address for the line item
        assetId:
          type: string
          description: Asset id that was called under the product
          example: xd45fd
        assetName:
          type: string
          description: Asset that was called under the Product
          example: Acme Co Hammer API
        assetType:
          type: string
          description: Asset Type - API, etc
          example: API
        applicationId:
          type: string
          description: Application id that was called under the product
          example: xd45fd
        applicationName:
          type: string
          description: Application that was called under the product
          example: Acme Co Application
        transactionType:
          type: string
          description: Type of Transaction used for product
          example: TRANSACTIONAL
        callCount:
          type: integer
          description: >-
            The amount of API calls being charged for before any Pricing Rules
            have been applied
          format: int64
          example: 100
        charge:
          type: number
          description: Cost of the usage of the asset
          example: 27
        chargeCalculationLogId:
          type: string
          description: The charge calculation log contains all pricing rules execution logs
        unmodifiedCharge:
          type: number
          description: >-
            The amount charged in the metered period before any Pricing Rules
            have been applied
          format: double
          example: 200
        resource:
          type: string
          description: Line item Resource
          example: PROFITSTREAM_SUBSCRIPTION_CHARGE
        currency:
          type: string
          description: The currency of the transaction
          example: USD
        tierId:
          type: string
          description: The tierId of the transaction
        tierName:
          type: string
          description: The tier Name of the transaction
        tierUnitAmount:
          type: number
          description: The tier unit amount of the transaction
        planElementId:
          type: string
          description: The plan element id of the transaction
        planElementName:
          type: string
          description: The plan element name of the transaction
        planElementFlatAmount:
          type: number
          description: The plan element flat amount of the transaction
        setupFeeId:
          type: string
          description: The setup fee id of the transaction
        setupFeeName:
          type: string
          description: The setup fee name of the transaction
        setupFeeType:
          type: string
          description: The setup fee type of the transaction
        setupFeeFlatAmount:
          type: number
          description: The setup fee flat amount of the transaction
        elements:
          type: array
          description: Element aggregated
          items:
            $ref: '#/components/schemas/ElementSummaryView'
        settlementPeriod:
          type: string
          description: settlement period
    TransactionViewPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TransactionView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    LineItemPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/LineItemView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AssetConsumerRollUpByChargeDTO:
      required:
        - total
        - username
      type: object
      properties:
        username:
          type: string
        total:
          type: number
          format: double
    AssetRollUpByChargeDTO:
      required:
        - total
        - url
      type: object
      properties:
        url:
          type: string
        total:
          type: number
          format: double
    FeaturePageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/FeatureView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ConnectivityValidationResponse:
      required:
        - message
        - result
      type: object
      properties:
        result:
          type: boolean
        message:
          type: string
    ConsumerDataProviderQueryView:
      required:
        - name
        - query
      type: object
      properties:
        name:
          type: string
          description: The name of the Query
          example: Default Query
        query:
          type: string
          description: The SQL query
          example: SELECT * from FOO
      description: A Data Provider Query
    CommunicationPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    CommunicationView:
      required:
        - content
        - organization
        - recipient
        - subject
      type: object
      properties:
        subject:
          type: string
          description: The subject of the notification
          example: Product Access Request
        content:
          type: string
          description: The content of the notification
          example: |2-

                        Hello, 
                        
                        Please provide access to this Product
                    
        recipient:
          type: string
          description: The recipient of the notification
          example: john.wick@hypercurrent.io
        organization:
          $ref: '#/components/schemas/OrganizationView'
      description: A communication from a customer / prospect
    CommercePortalAcceptanceTermView:
      required:
        - The commerce portal acceptance term acceptance timestamp
        - The commerce portal acceptance term id
        - The commerce portal acceptance term ip where user signed the document
        - The commerce portal acceptance term signed document url
        - The commerce portal acceptance term user email who signed
      type: object
      properties:
        The commerce portal acceptance term id:
          type: string
          example: As3ft4
        The commerce portal acceptance term user email who signed:
          type: string
          example: As3ft4
        The commerce portal acceptance term acceptance timestamp:
          type: integer
          format: int64
          example: 123676433
        The commerce portal acceptance term signed document url:
          type: string
          example: path/url
        The commerce portal acceptance term ip where user signed the document:
          type: string
          example: 123.546.12.32
    InternalEventMetadata:
      required:
        - operations
        - systems
      type: object
      properties:
        systems:
          type: array
          description: The selectable systems
          items:
            type: string
            description: The selectable systems
        operations:
          type: array
          description: The selectable operations
          items:
            type: string
            description: The selectable operations
      description: Internal audit trail event metadata
    InternalSystemAuditTrail:
      required:
        - eventId
        - operation
        - organizationId
        - system
        - timestamp
      type: object
      properties:
        timestamp:
          type: integer
          description: 'The time the audit event occurred '
          format: int64
          example: 1685820793000
        eventId:
          type: string
          description: The ID of the event
          example: 3kTMd
        organizationId:
          type: string
          description: 'The ID of the Organization the event belongs to '
          example: 7akbMd
        system:
          type: string
          description: The internal system being integrated with
          example: GRAVITEE
        operation:
          type: string
          description: The type of operation on the remote system
          example: CREATE_API
        details:
          type: string
          description: Additional details about the event
          example: Created Balances API
    ExternalEventMetadata:
      required:
        - operations
        - systems
      type: object
      properties:
        systems:
          type: array
          description: The selectable systems
          items:
            type: string
            description: The selectable systems
        operations:
          type: array
          description: The selectable operations
          items:
            type: string
            description: The selectable operations
      description: External audit trail event metadata
    ExternalSystemAuditTrail:
      required:
        - eventId
        - operation
        - organizationId
        - system
        - timestamp
      type: object
      properties:
        timestamp:
          type: integer
          description: 'The time the audit event occurred '
          format: int64
          example: 1685820793000
        eventId:
          type: string
          description: The ID of the event
          example: 3kTMd
        organizationId:
          type: string
          description: 'The id of the organization the event belongs to '
          example: 7akbMd
        system:
          type: string
          description: The external system being integrated with
          example: GRAVITEE
        operation:
          type: string
          description: The type of operation on the remote system
          example: CREATE_API
        details:
          type: string
          description: Additional details about the event
          example: Created Balances API
    SLAViolationReportPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SLAViolationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AssetPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AssetView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ApplicationSummaryPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSummaryView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ApplicationSummaryView:
      required:
        - created
        - externalId
        - id
        - name
        - organization
        - productKeyIds
        - productKeyNames
        - tags
        - user
        - userId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the Application
          example: 3kTMd
        name:
          type: string
          description: The name of the Application
          example: My Mobile Application
        organization:
          type: string
          description: The Organization associated with the Application
        consumerOrganization:
          type: string
          description: The consuming Organization the Application belongs to
          example: sa3kaL
        userId:
          type: string
          description: The ID of the user who owns this Application
        user:
          type: string
          description: The username of the user who owns this Application
        externalId:
          type: string
          description: The identifier of the Application in an external system
          example: 81d8c8a0-9383-45ff-8b63-c8a4c75d05bf
        productKeyIds:
          type: array
          items:
            type: string
        productKeyNames:
          type: array
          items:
            type: string
        created:
          type: integer
          description: The creation timestamp
          format: int64
          example: 1651779724000
        tags:
          type: array
          description: Tags associated with the Asset
          items:
            type: string
            description: Tags associated with the Asset
    ApplicationPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    APIKeyPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/APIKeyView'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        total:
          type: integer
          format: int64
          writeOnly: true
        last:
          type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    MeteringRequestDTO:
      required:
        - elements
        - method
        - platformAPIKey
        - requestHeaders
        - responseCode
        - responseHeaders
      type: object
      properties:
        api:
          type: string
          example: 3c2c3d64-2f59-4642-9406-17d7fb5e2d5c
        productKey:
          type: string
          description: The Product Key ID
          example: 53546bb0-9014-11eb-a8b3-0242ac130003
        application:
          type: string
          description: The Application ID
          example: 53546bb0-9014-11eb-a8b3-0242ac130003
        method:
          type: string
          description: The HTTP method being invoked
          example: GET
        url:
          type: string
          description: The HTTP URL being invoked
          example: https://api.foo.com/v1/api
        metadata:
          type: string
          description: >-
            Additional billing metadata (supports numeric values and
            comma-seperated key-value pairs)
          example: '5.0'
        backendLatency:
          type: number
          description: Backend API response time
          format: double
          example: 0.05
        gatewayLatency:
          type: number
          description: Latency introduced by the API GW
          format: double
          example: 0.05
        responseCode:
          type: integer
          description: Backend HTTP response code
          format: int32
          example: 200
        timedOut:
          type: boolean
          description: Whether or not the backend timed out
          example: false
        requestMessageSize:
          type: integer
          description: The size of the API request in bytes
          format: int64
          example: 10000
        responseMessageSize:
          type: integer
          description: The size of the API response in bytes
          format: int64
          example: 10000
        requestHeaders:
          type: array
          description: The comma seperated list of names of the headers in the request
          example: 10000
          items:
            type: string
            description: The comma seperated list of names of the headers in the request
            example: '10000'
        responseHeaders:
          type: array
          description: The comma seperated list of names of the headers in the response
          example: 10000
          items:
            type: string
            description: The comma seperated list of names of the headers in the response
            example: '10000'
        userAgent:
          type: string
          description: The HTTP User Agent
          example: '10000'
        remoteUser:
          type: string
          description: The Remote User
          example: apiclient
        remoteHost:
          type: string
          description: The Remote Host
          example: api.acmesoft.com
        httpProtocol:
          type: string
          description: The HTTP Protocol
          example: HTTP/1.0
        contentType:
          type: string
          description: The Content Type
          example: application/json
        correlationId:
          type: string
          description: The Correlation ID
          example: e6e62ba0-94c1-466c-8921-52f9d6b84066
        platformAPIKey:
          type: string
          description: platformAPIKey
          example: hak-1234-20a033c6fbcb453ba9c797971c237080
        elements:
          type: array
          description: Dynamic metering elements
          items:
            $ref: '#/components/schemas/ElementDTO'
    ApiEventDTO:
      required:
        - responseCode
      type: object
      properties:
        requestId:
          type: string
        eventType:
          type: string
          enum:
            - REQUEST
            - RESPONSE
        assetId:
          type: string
        productKey:
          type: string
        application:
          type: string
        method:
          type: string
        currentMillis:
          type: integer
          format: int64
        uri:
          type: string
        elapsedTime:
          type: integer
          format: int64
        metadata:
          type: string
        responseCode:
          type: integer
          format: int32
        requestMessageSize:
          type: integer
          format: int64
        responseMessageSize:
          type: integer
          format: int64
        contentType:
          type: string
        remoteHost:
          type: string
        userAgent:
          type: string
        correlationId:
          type: string
        backendLatency:
          type: number
          format: double
        clientId:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 65bd671b308e970016d90d9f
