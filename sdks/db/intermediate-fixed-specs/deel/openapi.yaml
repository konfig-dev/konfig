openapi: 3.0.1
info:
  title: Deel REST API
  contact:
    name: Deel API Team
    email: apiteam@deel.com
  termsOfService: https://www.letsdeel.com/terms-of-service
  version: 1.25.0
  description: >-
    API specification for Deel HR user provisioning API. This YAML file is a
    preview of the API Deel is building. We are looking forward to your
    feedback.
externalDocs:
  description: Find out more about Deel APIs.
  url: https://developer.letsdeel.com
servers:
  - url: https://api.letsdeel.com/rest/v2
    description: Production server
  - url: https://api-staging.letsdeel.com/rest/v2
    description: Demo server
tags:
  - name: Accounting
    description: End-points to retrieve paid invoices and receipts.
    externalDocs:
      description: See
      url: https://developer.deel.com
  - name: EOR
    description: Employee of Record (EOR).
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Global Payroll
    description: Global Payroll
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Contractors
    description: >-
      The Contracts resource lets you create, amend and, retrieve Deel
      contracts.
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#contracts
  - name: Contracts
    description: >-
      The Contracts resource lets you create, amend and, retrieve Deel
      contracts.
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#contracts
  - name: Hris
    description: API end-points related to HRIS data.
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: Invoices
    description: >-
      The Invoices resource lets you create, amend and retrieve invoices related
      to Deel contracts.
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Legal Entities
    description: The Legal Entities resource lets you manage your legal entities
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#legalentities
  - name: Lookups
    description: Helper end-points for choosing options for other operations
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#lookups
  - name: Milestones
    description: Helper end-points for managing milestones of Deel contracts
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#milestones
  - name: Off-cycle Payments
    description: End-points to manage off-cycle payments for a given contract
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#off-cycle-payments
  - name: Organizations
    description: Helper end-points for additional information about your organizations
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#organizations
  - name: Tasks
    description: End-points to manage tasks for a given contract
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#tasks
  - name: Teams
    description: Helper end-points for additional information about your teams
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Timesheets
    description: >-
      The Invoices resource lets you create, amend and retrieve timesheets of
      Deel contracts.
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Time Off
    description: Manage time off requests.
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Candidates
    description: API endpoints related to Candidates.
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: Managers
    description: API end-points related to Manager data.
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: People
    description: API end-points related to People data.
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: Partner Managed
    description: API end-points related to Partner Managed data.
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: Adjustments
    description: API end-points related to Adjustments data.
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: Token
    description: >-
      End-points to generate temporary tokens to use with embedded Deel SDK
      components.
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
paths:
  /invoices:
    get:
      operationId: getInvoiceList
      summary: Retrieve invoices
      description: Retrieve a list of paid invoices for your workforce.
      tags:
        - Accounting
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      parameters:
        - $ref: '#/components/parameters/ParamIssuedDateFrom'
        - $ref: '#/components/parameters/ParamIssuedDateTo'
        - $ref: '#/components/parameters/ParamLimit'
        - $ref: '#/components/parameters/ParamOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoices/deel:
    get:
      operationId: getDeelInvoiceList
      summary: Retrieve Deel invoices
      description: Retrieve a list of invoices related to Deel fees.
      tags:
        - Accounting
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      parameters:
        - $ref: '#/components/parameters/ParamLimit'
        - $ref: '#/components/parameters/ParamOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForDeelInvoiceList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoices/{invoice_id}/download:
    get:
      operationId: getBillingInvoiceDownloadLink
      summary: Download invoice PDF
      description: Get link to download the invoice PDF.
      tags:
        - Accounting
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceInvoiceId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceDownloadLink'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /managers:
    get:
      operationId: getManagers
      summary: List of managers
      description: List all organization managers.
      tags:
        - Managers
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      parameters:
        - $ref: '#/components/parameters/ParamLimitForAgreements'
        - $ref: '#/components/parameters/ParamOffsetForAgreements'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyToGetAdminUser'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '409':
          description: A matching profile already exists.
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createManager
      summary: Create a manager
      description: Create a new organization manager.
      tags:
        - Managers
      security:
        - deelToken: []
        - oauth2:
            - organizations:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateAdminUser'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyToCreateAdminUser'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '409':
          description: A matching profile already exists.
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /hris/direct-employees:
    post:
      operationId: createDirectEmployee
      summary: Create a new Hris direct employee
      tags:
        - People
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateHrisDirectEmployee'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForHrisDirectEmployee'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '409':
          description: A matching profile already exists
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/validations/{country_code}:
    get:
      operationId: getEorCountryValidations
      summary: Retrieve country guide
      description: >-
        Retrieve the hiring guide data for a country. This data can be used to
        create Employee of Record (EOR) contract quotes.
      tags:
        - EOR
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEorCountryCode'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorCountryValidations'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/workers/{worker_id}/payslips:
    get:
      operationId: getEORWorkerPayslips
      summary: Retrieve employee payslips
      description: Get of payslips for an employee.
      tags:
        - EOR
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEORPayslipsList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/workers/{worker_id}/payslips/{payslip_id}/download:
    get:
      operationId: getEORWorkerPayslipDownloadUrl
      summary: Download payslip PDF
      description: Get download url for EOR payslip.
      tags:
        - EOR
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
        - $ref: '#/components/parameters/PayslipId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEORPayslipDownloadUrl'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/employment_cost:
    post:
      operationId: calculateEorEmploymentCost
      summary: Employee Cost Calculator
      description: Determine EOR employee costs across the globe.
      tags:
        - EOR
      security:
        - deelToken: []
        - oauth2: []
        - public: []
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCalculateEorEmployeeCost'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorEmploymentCostCalculation'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/{contract_id}/benefits:
    get:
      operationId: getEORContractBenefits
      summary: Get EOR contract benefits
      description: Retrieve EOR contract benefits
      tags:
        - EOR
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorContractBenefits'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor:
    post:
      operationId: createEorContract
      summary: Create an EOR contract
      description: >-
        Create an Employee of Record (EOR) contract quote. The endpoints creates
        a contract quote request. Deel will process the information and get back
        with a quote for this contract.
      tags:
        - EOR
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForEorContractCreation'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorContractCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/gp:
    post:
      operationId: createGPContract
      summary: Create a contract
      description: Create a Global Payroll contract.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPContractCreation'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGPContractCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/time-based:
    post:
      operationId: createContractTimeBased
      summary: Create a new contract (time-based)
      x-internal: true
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractTimeBased'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedTimeBased'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/payslips:
    get:
      operationId: getWorkerPayslips
      summary: Retrieve employee payslips
      description: Get of payslips for an employee.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPPayslipsList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/address:
    patch:
      operationId: updateGPEmployeeAddress
      summary: Update address
      description: Update the address of a Global Payroll employee.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeeAddressUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPEmployeeAddressUpdate'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/banks:
    get:
      operationId: getGpBankAccounts
      summary: Retrieve bank accounts
      description: Retrieve all bank accounts for an employee.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForWorkerBankAccountsInfo'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: addGpBankAccount
      summary: Add bank account
      description: Add a new bank account for an employee.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForAddWorkerBankAccount'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForBankAccountUpdated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/banks/{bank_id}:
    patch:
      operationId: patchGpBankAccount
      summary: Modify bank account
      description: Modify bank account for an employee.
      tags:
        - Global Payroll
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
        - $ref: '#/components/parameters/ParamEmployeeBankAccountId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForAddWorkerBankAccount'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForBankAccountUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/banks/guide:
    get:
      operationId: getGpBankGuide
      summary: Retrieve bank guide
      description: Retrieve the bank form guide for employee.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForBankAccountGuide'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/compensation:
    patch:
      operationId: updateGPEmployeeCompensation
      summary: Update compensation
      description: >-
        Update the compensation of a Global Payroll employee. Returns the full
        compensation history including the update.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeeCompensationUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPEmployeeCompensationUpdate'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/pto-policy:
    patch:
      operationId: updateGPEmployeePto
      summary: Update PTO policy
      description: Update the PTO policy of a Global Payroll employee.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeePTOUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/employee-information:
    patch:
      operationId: updateGPEmployeeInformation
      summary: Update employee information
      description: Update Global Payroll employee information.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeeEmployeeUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPEmployeeInformationUpdate'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/payslips/{payslip_id}/download:
    get:
      operationId: getDownloadUrlForGPPayslip
      summary: Download payslip PDF
      description: Get download url for GP payslip.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
        - $ref: '#/components/parameters/PayslipId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPPayslipDownloadUrl'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/legal-entities/{legal_entity_id}/reports:
    get:
      operationId: getGPLegalEntities
      summary: List payroll events by legal entity
      description: Get list of global payroll events by legal entities.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:read
      parameters:
        - $ref: '#/components/parameters/ParamLegalEntityId'
        - $ref: '#/components/parameters/ParamPayrollReportStartDate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPPayrollEventReport'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/reports/{gp_report_id}/gross_to_net:
    get:
      operationId: getGrossToNetGPReports
      summary: List gross-to-net report
      description: Get list of global payroll reports detailing gross-to-net calculations.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:read
      parameters:
        - $ref: '#/components/parameters/ParamGlobalPayrollReportId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGlobalPayrollG2NReport'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/reports/{gp_report_id}/gross_to_net/csv:
    get:
      operationId: downloadGrossToNetGPReport
      summary: Download gross-to-net report
      description: Download global payroll reports detailing gross-to-net calculations.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:read
      parameters:
        - $ref: '#/components/parameters/ParamGlobalPayrollReportId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGlobalPayrollG2NReportCsv'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/terminations:
    post:
      operationId: requestTermination
      summary: Request termination
      description: >-
        Request a termination for a global payroll employee. A successful call
        starts the termination process and does not confirm termination.
      tags:
        - Global Payroll
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForWorkerTermination'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForWorkerTermination'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /adjustments:
    post:
      operationId: createAdjustment
      summary: Create a new adjustment
      description: Create a new adjustment.
      tags:
        - Adjustments
      security:
        - deelToken: []
        - oauth2:
            - adjustments:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateAdjustment'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForAdjustmentCreated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /adjustments/{adjustment_id}:
    get:
      operationId: getAdjustmentsById
      summary: Retrieve an adjustment
      description: Retrieve an adjustment.
      tags:
        - Adjustments
      security:
        - deelToken: []
        - oauth2:
            - adjustments:read
      parameters:
        - $ref: '#/components/parameters/ParamAdjustmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAdjustmentById'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      operationId: updateAdjustment
      summary: Update an adjustment
      description: Update an adjustment.
      security:
        - deelToken: []
        - oauth2:
            - adjustments:write
      tags:
        - Adjustments
      parameters:
        - $ref: '#/components/parameters/ParamAdjustmentId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateAdjustment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: deleteAdjustment
      summary: Delete an adjustment
      description: Delete an adjustment.
      tags:
        - Adjustments
      security:
        - deelToken: []
        - oauth2:
            - adjustments:write
      parameters:
        - $ref: '#/components/parameters/ParamAdjustmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /adjustments/categories:
    get:
      operationId: getCategories
      summary: Retrieve categories
      description: Get all categories for your organization.
      tags:
        - Adjustments
      security:
        - deelToken: []
        - oauth2:
            - adjustments:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAdjustmentsCategories'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /candidates:
    post:
      operationId: addCandidate
      summary: Add Candidate
      description: Add a candidate to Deel.
      tags:
        - Candidates
      x-forbidden-token-types:
        - personal
        - organization
      security:
        - deelToken: []
        - oauth2:
            - candidates:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateCandidate'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /candidates/{candidate_id}:
    patch:
      operationId: patchCandidate
      summary: Update Candidate
      description: Update an existed candidate.
      tags:
        - Candidates
      x-forbidden-token-types:
        - personal
        - organization
      security:
        - deelToken: []
        - oauth2:
            - candidates:write
      parameters:
        - $ref: '#/components/parameters/ParamCandidateId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToPatchCandidate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/additional-information:
    post:
      operationId: addEmployeeAdditionalInformation
      summary: Add additional information
      description: Add additional information for an EOR employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAdditionalEORInfo'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/signatures:
    post:
      operationId: signEmployeeContract
      summary: Sign a contract
      description: Sign a contract as a employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToCreateEmployeeContractSignature
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/custom-verification-letter:
    post:
      operationId: requestCustomVerificationLetter
      summary: Request custom verification letter
      description: >-
        Request employment verification letters, visa support, bank verification
        and more.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToRequestCustomVerificationLetter
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/hr-documents:
    get:
      operationId: getHrVerificationLettersAndDocuments
      summary: List HR verification letters and documents
      description: List all HR verification letters and documents available.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForHrVerificationLettersAndDocuments
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/hr-documents/{document_id}/download:
    get:
      operationId: downloadHrVerificationLettersAndDocuments
      summary: Download HR verification letters and documents
      description: Retrieve URL to download HR verification letters and documents.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamDocumentId'
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForDownloadHrVerificationLettersAndDocuments
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/offer-letter:
    get:
      operationId: getOfferLetterPreview
      summary: Preview job offer letter
      description: >-
        Retrieve an EOR job offer letter in HTML. This endpoint does not support
        IC and Global Payroll contract types.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractPreview'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/employee-agreement:
    get:
      operationId: getEmployeeAgreementPreview
      summary: Preview employee agreement
      description: Retrieve an EOR Employee Agreement content in HTML.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractPreview'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/employee-agreement/download:
    get:
      operationId: getEmployeeAgreementDownloadLink
      summary: Download employee agreement PDF
      description: Get link to download the employee agreement PDF.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeAgreementDownload'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/banks/guide:
    get:
      operationId: getBankAccountGuide
      summary: Bank account form
      description: >-
        Retrieve bank account form guide for an EOR employee. This data can be
        used to add a new bank account for an employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForBankAccountGuide'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/banks:
    post:
      operationId: addBankAccount
      summary: Add bank account
      description: Add bank account for an EOR employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAddEmployeeBankAccount'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForEmployeeBankAccountAdded'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/banks/{bank_id}:
    patch:
      operationId: patchBankAccount
      summary: Modify bank account for an EOR employee
      description: Modify bank account for an EOR employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamEmployeeBankAccountId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToModifyEmployeeBankAccount'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeBankAccountAdded'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/payslips:
    get:
      operationId: getEmployeePayslips
      summary: Get list of payslips for an EOR employee
      description: Get list of payslips for an EOR employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeePayslipsList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/compliance-documents:
    get:
      operationId: getEmployeeComplianceDocuments
      summary: List of employee compliance documents
      description: Get a list of employee compliance documents.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGetEmployeeComplianceDocuments'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/compliance-documents/{document_id}:
    post:
      operationId: uploadEmployeeComplianceDocument
      summary: Upload employee compliance document
      description: Upload an employee compliance document.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamDocumentId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToUploadEmployeeComplianceDocument
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForUploadEmployeeComplianceDocument
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/compliance-documents/{document_id}/templates/download:
    get:
      operationId: getEmployeeComplianceDocumentTemplate
      summary: Download employee compliance document template
      description: >-
        Get the download link for an employee compliance document template, if
        it exists.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamDocumentId'
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForGetEmployeeComplianceDocumentTemplateDownloadLink
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /partner-managed/employees/{employee_id}/tax-documents:
    get:
      operationId: getEmployeeTaxDocuments
      summary: List of tax documents for an employee
      description: Get list of tax documents for an employee.
      tags:
        - Partner Managed
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTaxDocumentsList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/task-based:
    post:
      operationId: createContractTaskBased
      summary: Create a new contract (task-based)
      x-internal: true
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractTaskBased'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedTaskBased'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/milestone-based:
    post:
      operationId: createContractMilestoneBased
      summary: Create a new contract (milestone-based)
      x-internal: true
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractMilestoneBased'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedMilestoneBased'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/fixed-rate:
    post:
      operationId: createContractFixedRate
      summary: Create a new contract (fixed-rate)
      x-internal: true
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractFixedRate'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedFixedRate'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts:
    get:
      operationId: getContractList
      summary: List of contracts
      description: Retrieve a list of contracts.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamAfterCursor'
        - $ref: '#/components/parameters/ParamLimit'
        - $ref: '#/components/parameters/ParamSortDir'
        - $ref: '#/components/parameters/ParamContractsTypeList'
        - $ref: '#/components/parameters/ParamContractsStatusList'
        - $ref: '#/components/parameters/ParamContractsTeamId'
        - $ref: '#/components/parameters/ParamContractsExternalId'
        - $ref: '#/components/parameters/ParamContractsCountryCodeList'
        - $ref: '#/components/parameters/ParamContractsCurrencyCodeList'
        - $ref: '#/components/parameters/ParamContractsSearchTerm'
        - $ref: '#/components/parameters/ParamContractsSortBy'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createContract
      summary: Create a new contract
      description: Create a new Deel contract.
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContract'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}:
    get:
      operationId: getContractById
      summary: Retrieve a single contract
      description: Retrieve a single contract.
      tags:
        - Contracts
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractDetails'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      operationId: attachExternalId
      summary: External Id
      description: >-
        Add an external Id to a Deel contract. You can use this to add a Deel
        contract's refernece Id in your platform. External Id can be passed as a
        query parameter in List contract endpoint to find this conract later.
      tags:
        - Contracts
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToPatchExternalId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractExternalIdPatched'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/documents:
    post:
      operationId: addContractDocument
      summary: Attach a file to contract
      description: Attach a file to contract document.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestFormForContractDocument'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractDocument'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    put:
      operationId: editContractDocument
      summary: Edit the file attached to contract document.
      description: Overwrite the file currently attached to contract document.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestFormForContractDocument'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractDocument'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/preview:
    get:
      operationId: getContractPreview
      summary: Preview a contract agreement
      description: >-
        Retrieve an IC and EOR contract agreement content in HTML. If no
        template is specified, the default or currently assigned template will
        be used. This endpoint does not support Global Payroll contract type.
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamContractTemplateIdInQuery'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractPreview'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks:
    get:
      operationId: getTasksByContract
      summary: List of tasks
      description: Retrieve a list of tasks for a given contract.
      tags:
        - Tasks
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTaskList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createContractPgoTak
      summary: Create new task
      description: Create a new task for the contractor.
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreatePgoTask'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTaskCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/alternate_emails:
    get:
      operationId: getAlternateEmailsByContractId
      summary: Find contract emails by ID
      description: Returns an array of alternate email objects
      tags:
        - Contracts
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAlternateEmailList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks/many/reviews:
    post:
      operationId: createTaskManyReview
      summary: Review multiple tasks
      description: Review multiple tasks to approve or decline the submitted work.
      tags:
        - Tasks
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreatePgoTaskReviewsReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTaskList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks/{task_id}/reviews:
    post:
      operationId: createTaskReviewById
      summary: Review a single task
      description: Review a single task to approve or decline the submitted work.
      tags:
        - Tasks
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTaskId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToCreatePgoTaskReviewsByIdReviews
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTaskList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks/{task_id}:
    delete:
      operationId: deleteContractPgoTak
      summary: Delete task
      description: Delete task from the contract.
      tags:
        - Tasks
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTaskId'
        - $ref: '#/components/parameters/ParamTaskDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/amendments:
    post:
      operationId: amendContractDetails
      summary: Amend contract
      description: >-
        Amend the details of a contract. Please note that if the contract is
        already signed or active, then the update will have to be approved and
        re-signed for to take effect.
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAmendContractDetails'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/terminations:
    post:
      operationId: terminateContract
      summary: Terminate contract
      description: Terminate an active contract.
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractTermination'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractTerminationResult'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/signatures:
    post:
      operationId: signContract
      summary: Sign a contract
      description: Sign a contract as a client.
      x-forbidden-token-types:
        - organization
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractSignature'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/archive:
    patch:
      deprecated: true
      operationId: archiveContract
      summary: Archive a contract
      description: Archive a terminated, cancelled or completed contract.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '204':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/invitations:
    post:
      operationId: inviteToSignContract
      summary: Send contract to worker
      description: Invite a worker to sign the contract. Worker will be notified via email.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractInvitation'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: uninviteToSignContract
      summary: Remove invite
      description: Remove invite in order to re-invite a worker to sign the contract.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/timesheets:
    get:
      operationId: getTimesheetsByContract
      summary: List of timesheets by contract
      description: Retrieve a list of timesheets found for a contract.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
            - timesheets:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTimesheetsContractTypeList'
        - $ref: '#/components/parameters/ParamTimesheetsStatusList'
        - $ref: '#/components/parameters/ParamTimesheetsReporterId'
        - $ref: '#/components/parameters/ParamDateFrom'
        - $ref: '#/components/parameters/ParamDateTo'
        - $ref: '#/components/parameters/ParamTimesheetsLimit'
        - $ref: '#/components/parameters/ParamTimesheetsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimesheetList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones:
    get:
      operationId: getMilestonesByContract
      summary: List of milestones by contract
      description: Retrieve a list of milestones found for a contract.
      tags:
        - Milestones
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
            - milestones:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForMilestoneList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createMilestone
      summary: Create a milestone
      description: Add a new milestone to contract.
      tags:
        - Milestones
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateMilestone'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones/{milestone_id}:
    get:
      operationId: getMilestonesByContractAndId
      summary: Retrieve a single milestone
      description: Retrieve a single milestone.
      tags:
        - Milestones
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
            - milestones:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamMilestoneId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForMilestone'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: deleteMilestoneById
      summary: Delete a milestone
      description: Delete a single milestone from a contract.
      tags:
        - Milestones
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamMilestoneId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones/{milestone_id}/reviews:
    post:
      operationId: createMilestoneReview
      summary: Review a single milestone
      description: Review a milestone to approve or decline submitted work.
      tags:
        - Milestones
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamMilestoneId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateMilestoneReview'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones/many/reviews:
    post:
      operationId: createMilestoneReviews
      summary: Review multiple milestones
      description: Review a batch of milestones to approve or reject submitted work.
      tags:
        - Milestones
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateMilestoneReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/off-cycle-payments:
    get:
      operationId: getOffCyclePaymentsByContract
      summary: List of off-cycle payments
      description: Retrieve a list of off-cycle payments for the given contract id.
      tags:
        - Off-cycle Payments
      security:
        - deelToken: []
        - oauth2:
            - off-cycle-payments:write
            - off-cycle-payments:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForOffCyclePaymentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createOffCyclePayment
      summary: Add off-cycle payment
      description: >-
        Add a new invoice line-item for the purpose of off-cycle payment for a
        given contract.
      tags:
        - Off-cycle Payments
      security:
        - deelToken: []
        - oauth2:
            - off-cycle-payments:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateOffCyclePayment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreatedWithId'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/off-cycle-payments/{offcycle_payment_id}:
    get:
      operationId: getOffCyclePaymentByContractAndId
      summary: Retrieve a single off-cycle payment
      description: Retrieve a single off-cycle payment.
      tags:
        - Off-cycle Payments
      security:
        - deelToken: []
        - oauth2:
            - off-cycle-payments:write
            - off-cycle-payments:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamOffCyclePaymentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForOffCyclePayment'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/premium:
    post:
      operationId: addPremium
      summary: Upgrade to Premium
      description: >-
        Add additional protection against misclassification by upgrading to Deel
        Premium.
      tags:
        - Contractors
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAddPremium'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForPremiumResultAdded'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: removePremiumFromContract
      summary: Downgrade from Premium
      description: Remove Deel Premium from an existing contract.
      tags:
        - Contractors
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamPremiumDeletionReason'
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/final-payments:
    get:
      x-internal: true
      operationId: calculateFinalPayment
      summary: Calculate final payment
      description: >-
        Calculate the final payment due to the contractor when ending the
        contract.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamEndDate'
        - $ref: '#/components/parameters/ParamFinalPaymentCalculationType'
        - $ref: '#/components/parameters/ParamFinalPaymentWorkweekStart'
        - $ref: '#/components/parameters/ParamFinalPaymentWorkweekEnd'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForFinalPaymentCalculated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/estimate:
    post:
      operationId: postContractEstimate
      summary: Calculate first payment amount
      description: >-
        First payment is calculated from the number of working/calendar days
        between their start date and the start of the payment cycle.
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToEstimateFirstPayment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEstimateFirstPayment'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/time-offs:
    get:
      operationId: getEorTimeOffs
      summary: List time off by contract (obsolete)
      description: Retrieve the list of time off requests by an employee.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createEorTimeOffs
      summary: Add a time off request (obsolete)
      description: Add a time off request for a full-time employee.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimeoff'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForEorTimeoffItem'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/time-offs/{timeoff_id}:
    put:
      operationId: editEorTimeOffs
      summary: Edit a time off request (obsolete)
      description: Edit a time off request for a full-time employee.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTimeoffId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimeoff'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForEorTimeoffItem'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: deleteEorTimeOffs
      summary: Cancel a time off request (obsolete)
      description: Cancel a time off request for an employee.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTimeoffId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets:
    get:
      operationId: getTimesheets
      summary: List of timesheets
      description: >-
        Retrieve a list of timesheets in your Deel account. You can filter the
        list by providing additional paramters e.g. contract_id, contract_type
        etc.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
            - timesheets:read
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetsContractId'
        - $ref: '#/components/parameters/ParamTimesheetsContractTypeList'
        - $ref: '#/components/parameters/ParamTimesheetsStatusList'
        - $ref: '#/components/parameters/ParamTimesheetsReporterId'
        - $ref: '#/components/parameters/ParamDateFrom'
        - $ref: '#/components/parameters/ParamDateTo'
        - $ref: '#/components/parameters/ParamTimesheetsLimit'
        - $ref: '#/components/parameters/ParamTimesheetsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimesheetList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createTimesheet
      summary: Create a timesheet entry
      description: Submit work for a contractor.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimesheet'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTimesheetCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets/{timesheet_id}:
    get:
      operationId: getTimesheetById
      summary: Retrieve a single timesheet entry
      description: Retrieve a single timesheet entry by Id.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
            - timesheets:read
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimesheetDetails'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      operationId: updateTimesheetById
      summary: Update a timesheet entry
      description: Update a single timesheet entry.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateTimesheet'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: deleteTimesheetById
      summary: Delete a timesheet entry
      description: Delete a single timesheet entry.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
        - $ref: '#/components/parameters/ParamTimesheetDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets/{timesheet_id}/reviews:
    post:
      operationId: createTimesheetReview
      summary: Review a single timesheet
      description: Review a timesheet to approve or decline submitted work.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimesheetReview'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets/many/reviews:
    post:
      operationId: createTimesheetReviews
      summary: Review multiple timesheets
      description: Review a batch of timesheets to approve or reject submitted work.
      tags:
        - Timesheets
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimesheetReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/invoice-adjustments:
    get:
      operationId: getInvoiceAdjustmentsByContractId
      summary: Invoice line items by contract
      description: Retrieve invoice line items for a given contract id.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
            - invoice-adjustments:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsContractTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsStatusList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsInvoiceId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsReporterId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateFrom'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateTo'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsLimit'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceAdjustmentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments:
    get:
      operationId: getInvoiceAdjustments
      summary: List invoice adjustments
      description: >-
        Retrieve invoice adjustments. You can filter the list by providing
        additional parameters e.g. contract_id, contract_type etc.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
            - invoice-adjustments:read
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsContractId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsContractTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsStatusList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsInvoiceId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsReporterId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateFrom'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateTo'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsLimit'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceAdjustmentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createInvoiceAdjustment
      summary: Create an invoice adjustment
      description: >-
        Create an invoice adjustment using this endpoint. For example, you can
        add a bonus, commission, VAT %, deduction etc. to an invoice.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentRecurring'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateInvoiceAdjustment'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForInvoiceAdjustmentCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/{invoice_adjustment_id}:
    patch:
      operationId: updateInvoiceAdjustmentById
      summary: Update an invoice adjustment
      description: >-
        Update an existing invoice adjustment. It is not possible to update VAT
        adjustments, we recommend you to delete the existing VAT adjust and
        create a new one.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateInvoiceAdjustment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: deleteInvoiceAdjustmentById
      summary: Delete an invoice adjustment
      description: Delete an existing invoice adjustment.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/{invoice_adjustment_id}/reviews:
    post:
      operationId: createInvoiceAdjustmentReview
      summary: Review an invoice adjustment
      description: Review an invoice adjustment to approve or decline it.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateInvoiceAdjustmentReview'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/many/reviews:
    post:
      operationId: createInvoiceAdjustmentReviews
      summary: Bulk review invoice adjustments
      description: Review multiple invoice adjustments to approve or decline a batch.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateInvoiceAdjustmentReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/{invoice_adjustment_id}/attachment:
    get:
      operationId: getInvoiceAdjustmentsAttachment
      summary: Retrieve Attachment file url.
      description: Retrieve Attachment file url of specified id.
      tags:
        - Invoices
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:read
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceAttachment'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /legal-entities:
    get:
      operationId: getLegalEntityList
      summary: List of legal entities
      description: Retrieve a list of legal entities in your account.
      tags:
        - Organizations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
            - accounting:read
      parameters:
        - $ref: '#/components/parameters/ParamLegalEntityType'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForLegalEntityList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/countries:
    get:
      operationId: getCountries
      summary: Country list
      description: Retrieve a list of countries supported by Deel.
      tags:
        - Lookups
      security:
        - deelToken: []
        - oauth2: []
        - public: []
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForCountryList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/currencies:
    get:
      operationId: getCurrencies
      summary: Currency list
      description: Retrieve the list of currencies used by Deel.
      tags:
        - Lookups
      security:
        - deelToken: []
        - oauth2: []
        - public: []
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForCurrencyList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/job-titles:
    get:
      operationId: getJobTitleList
      summary: Job titles list
      description: Retrieve a list of pre-defined job titles in Deel platform.
      tags:
        - Lookups
      security:
        - deelToken: []
        - oauth2: []
      parameters:
        - $ref: '#/components/parameters/ParamJobTitleListLimit'
        - $ref: '#/components/parameters/ParamJobTitleListCursor'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForJobTitleList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/seniorities:
    get:
      operationId: getSeniorityList
      summary: Seniority levels
      description: >-
        Retrieve a list of pre-defined seniority level for roles in Deel
        platform.
      tags:
        - Lookups
      security:
        - deelToken: []
        - oauth2: []
      parameters:
        - $ref: '#/components/parameters/ParamSeniorityListLimit'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForSeniorityList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/time-off-types:
    get:
      operationId: getTimeoffTypeList
      summary: Time-off types
      description: >-
        Retrieve a list of pre-defined time off types to register in Deel
        platform.
      tags:
        - Lookups
        - Time Off
      security:
        - deelToken: []
        - oauth2: []
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimeoffTypeList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /organizations:
    get:
      operationId: getOrganizations
      summary: Get current organization
      description: >-
        Retrieve the current organization details. Organization is automatically
        detected from the auth token.
      tags:
        - Organizations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForOrganizations'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /teams:
    get:
      operationId: getTeams
      summary: Get team list
      description: Retrieve a list of teams in your organization.
      tags:
        - Organizations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTeams'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /attachments:
    post:
      operationId: createFileRef
      summary: Upload file to Deel
      description: >-
        Upload file to Deel storage to use the file attachment feature for other
        endpoints.
      x-internal: true
      tags:
        - Attachments
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - invoice-adjustments:write
            - milestones:write
            - off-cycle-payments:write
            - tasks:write
            - timesheets:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateFileRef'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForFileRefCreated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /agreements:
    get:
      operationId: getAgreements
      summary: Get agreements with Deel.
      description: This end-point returns a list of your agreements with Deel.
      x-internal: true
      tags:
        - Organizations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      parameters:
        - $ref: '#/components/parameters/ParamContractIdInQuery'
        - $ref: '#/components/parameters/ParamLimitForAgreements'
        - $ref: '#/components/parameters/ParamOffsetForAgreements'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAgreementList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contract-templates:
    get:
      operationId: getContractTemplates
      summary: Get contract templates
      description: Retrieve a list of contract templates in your organization.
      x-internal: true
      tags:
        - Contracts
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractTemplateList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/entitlements:
    get:
      operationId: getEorEntitlements
      summary: List time off entitlements (obsolete)
      description: Retrieve a list of time off entitlements for a full-time employee.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorEntitlements'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/adjustments:
    get:
      operationId: getAdjustments
      summary: Retrieve adjustments
      description: Get all adjustments for the specific contract.
      tags:
        - Adjustments
      security:
        - deelToken: []
        - oauth2:
            - adjustments:read
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/FromDateInQuery'
        - $ref: '#/components/parameters/ToDateInQuery'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAdjustments'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /time-offs/:
    get:
      operationId: getEorClientTimeOffs
      summary: List of time offs (obsolete)
      description: List of time offs for all employees in your organization.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorClientTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /time-offs/{timeoff_id}/review:
    patch:
      operationId: reviewTimeoff
      summary: Review a time off request (obsolete)
      description: Approve or decline an employee's time off request.
      tags:
        - Time Off
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      parameters:
        - $ref: '#/components/parameters/ParamTimeoffId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToReviewTimeoff'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /payments:
    get:
      operationId: getPaymentList
      summary: Retrieve payment reciepts
      description: Retrieve a list of payments made to Deel.
      tags:
        - Accounting
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      parameters:
        - $ref: '#/components/parameters/ParamDateFrom'
        - $ref: '#/components/parameters/ParamDateTo'
        - $ref: '#/components/parameters/ParamContractsCurrencyCodeList'
        - $ref: '#/components/parameters/ParamLegalEntityQuery'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForPaymentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /internal/people:
    get:
      operationId: getInternalPeopleList
      summary: Get internal people list
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - profile:read
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamPeopleOffset'
        - $ref: '#/components/parameters/ParamPeopleLimit'
      responses:
        '200':
          $ref: '#/components/responses/InternalPeopleResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people:
    get:
      operationId: getPeopleList
      summary: List of people
      description: Retrieve a list of People in your organization.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:read
            - Users:read
      parameters:
        - $ref: '#/components/parameters/ParamPeopleOffset'
        - $ref: '#/components/parameters/ParamPeopleLimit'
        - $ref: '#/components/parameters/ParamContractsSearchTerm'
        - $ref: '#/components/parameters/ParamPeopleSortBy'
        - $ref: '#/components/parameters/ParamPeopleSortDir'
        - $ref: '#/components/parameters/ParamHiringStatuses'
      responses:
        '200':
          $ref: '#/components/responses/PeopleResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}:
    get:
      operationId: getPeopleById
      summary: Retrieve a single person
      description: Retrieve a single person in your organization.
      tags:
        - People
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      security:
        - deelToken: []
        - oauth2:
            - people:read
      responses:
        '200':
          $ref: '#/components/responses/PeopleByIdResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/department:
    put:
      operationId: updatePeopleDepartment
      summary: Update department
      description: Update worker department.
      tags:
        - People
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      security:
        - deelToken: []
        - oauth2:
            - people:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateWorkerDepartment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/working-location:
    put:
      operationId: updatePeopleWorkingLocation
      summary: Update working location
      description: Update worker working location.
      tags:
        - People
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      security:
        - deelToken: []
        - oauth2:
            - people:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateWorkerWorkingLocation'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/me:
    x-internal: true
    get:
      operationId: getPeople
      summary: Get my current profile
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - profile:read
            - people:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForPeopleMe'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs:
    get:
      operationId: getTimeOffsForEmployee
      summary: List of time off entries
      description: >-
        List of time offs by worker id. Worker id can be retreived using /people
        endpoint.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createTimeOffsForEmployee
      summary: Add a time off request
      description: Add a time off request for a worker. New requests are auto-approved.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreatePeopleTimeoff'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/entitlements:
    get:
      operationId: getTimeOffsEntitlementsForEmployee
      summary: List of time off entitlements
      description: Retrieve a list of time off entitlements for a worker.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsEntitlements'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/{timeoff_id}:
    patch:
      operationId: updateTimeOffsForEmployee
      summary: Edit a time off request
      description: Edit a time off request for a worker.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamNewTimeOffId'
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdatePeopleTimeoff'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: deleteTimeOffsForEmployee
      summary: Delete a time off request
      description: Delete a time off request.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamNewTimeOffId'
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/{timeoff_id}/review:
    patch:
      operationId: reviewTimeOffsForEmployee
      summary: Review a time off request
      description: >-
        Approve or decline a time off request. New requests are auto-approved.
        Hence they don't need to be manually approved.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:write
      parameters:
        - $ref: '#/components/parameters/ParamNewTimeOffId'
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToReviewTimeoffInternal'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/policies:
    get:
      operationId: getTimeOffsPoliciesForEmployee
      summary: List of time off policies
      description: Retrieve a list of time off policies for a worker.
      tags:
        - People
      security:
        - deelToken: []
        - oauth2:
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsPolicies'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /webhooks:
    get:
      operationId: getAllWebhooks
      summary: List of webhooks
      description: Retrieve a list of webhook subscriptions.
      tags:
        - Webhooks
      security:
        - deelToken: []
        - oauth2:
            - webhooks:read
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      operationId: createWebhook
      summary: Create a webhook
      description: Create a new webhooks subscription.
      tags:
        - Webhooks
      security:
        - deelToken: []
        - oauth2:
            - webhooks:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItemResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /webhooks/{id}:
    get:
      operationId: WebhookController_getById
      summary: Retrieve a single webhook
      description: Retrieve a single webhook subscription.
      tags:
        - Webhooks
      security:
        - deelToken: []
        - oauth2:
            - webhooks:read
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItemResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      operationId: WebhookController_editById
      summary: Edit a webhook
      description: Edit a webhook subscription.
      tags:
        - Webhooks
      security:
        - deelToken: []
        - oauth2:
            - webhooks:write
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWebhookRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItemResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      operationId: WebhookController_deleteById
      summary: Delete a webhook
      description: Delete a webhook subscription.
      tags:
        - Webhooks
      security:
        - deelToken: []
        - oauth2:
            - webhooks:write
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /webhooks/events/types:
    get:
      operationId: getAllWebhookEventTypes
      summary: List of webhook event types
      description: Retrieve a list of webhook event types.
      tags:
        - Webhooks
      security:
        - deelToken: []
        - oauth2:
            - webhooks:read
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEventTypeListResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /payments/{payment_id}/breakdown:
    get:
      operationId: GetPaymentsBreakDownById
      summary: Retrieve a payment breakdown
      description: >-
        Get a full breakdown of a payment made to Deel. Breakdown will include
        individual invoices and Deel fee as line items.
      tags:
        - Accounting
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
            - accounting:write
      parameters:
        - name: payment_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/PaymentBreakDownResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /departments:
    get:
      operationId: GetDepartments
      summary: Retrieve departments
      description: Get list of organization departments.
      tags:
        - Organizations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      responses:
        '200':
          $ref: '#/components/responses/DepartmentsResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /working-locations:
    get:
      operationId: GetWorkingLocations
      summary: Retrieve working locations
      description: Get organization working locations.
      tags:
        - Organizations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      responses:
        '200':
          $ref: '#/components/responses/WorkingLocationsResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /public-tokens:
    post:
      operationId: createPublicToken
      summary: Create a public token
      description: Create a public token to use with embedded Deel SDK components.
      tags:
        - Token
      security:
        - deelToken: []
        - oauth2:
            - public-token:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForCreatePublicToken'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForCreatePublicToken'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /ServiceProviderConfig:
    get:
      tags:
        - ServiceProviderConfig
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      summary: Get service provider config
      operationId: getServiceProviderConfig
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfig'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfig'
  /Users:
    get:
      tags:
        - User
      x-forbidden-token-types:
        - personal
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - Users:read
      summary: List users
      description: Retrieve a list of users in Deel HR.
      operationId: searchViaGet
      parameters:
        - name: filter
          in: query
          description: >-
            Filter results by a given value. For now, only supports equal (eq)
            expression for "email" filter.
          schema:
            type: string
            example: email eq "john.doe@example.com"
        - name: startIndex
          in: query
          description: Start index. (1-based)
          schema:
            type: integer
            format: int32
            default: 1
            example: 1
            minimum: 1
            maximum: 9999
        - name: count
          in: query
          description: Page size.
          schema:
            type: integer
            format: int32
            default: 50
            example: 50
            minimum: 1
            maximum: 99
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - User
      security:
        - deelToken: []
        - oauth2:
            - Users:write
      summary: Create a user
      operationId: createUser
      requestBody:
        description: a new user without 'id'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientUser'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/CreateClientUser'
        required: false
      responses:
        '201':
          description: successfully created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /Users/.search:
    post:
      tags:
        - User
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      summary: Search or list users
      operationId: searchViaPost
      requestBody:
        description: search parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /Users/{id}:
    get:
      tags:
        - User
      x-forbidden-token-types:
        - personal
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - Users:read
      summary: Retrieve a single User
      description: Retrieve a single user by id.
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: Retrieve a single user by id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error,
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - User
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      summary: Fully update/replace a user
      operationId: replaceUser
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
      requestBody:
        description: an existing user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/User'
        required: false
      responses:
        '200':
          description: successfully fully updated a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - User
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successfully deleted
          content:
            application/json:
              schema:
                type: object
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - User
      x-forbidden-token-types:
        - personal
        - oauth2
      security:
        - deelToken: []
        - oauth2:
            - Users:write
      summary: Partially update/patch a user
      operationId: patchUser
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
      requestBody:
        description: patch operations list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/UserPatch'
        required: false
      responses:
        '200':
          description: successfully partially updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
components:
  parameters:
    ParamContractId:
      name: contract_id
      in: path
      description: Deel contract id.
      required: true
      schema:
        type: string
      example: 37nex2x
    ParamCandidateId:
      name: candidate_id
      in: path
      description: Candidate id.
      required: true
      schema:
        type: string
      example: 37nex2x
    ParamEmployeeBankAccountId:
      name: bank_id
      in: path
      description: Bank Account id.
      required: true
      schema:
        type: string
      example: dcc7b587-2246-4909-853e-12056e90c451
    ParamCountryInQuery:
      name: country
      in: query
      description: Country code
      required: false
      schema:
        $ref: '#/components/schemas/CountryCode'
    CategoryInQuery:
      name: category
      in: query
      description: Filter adjustments by category.
      schema:
        type: string
    FromDateInQuery:
      name: from
      in: query
      description: Filter adjustments by start date.
      schema:
        type: string
        format: date
    ToDateInQuery:
      name: to
      in: query
      description: Filter adjustments by end date.
      schema:
        type: string
        format: date
    CursorInQuery:
      name: cursor
      in: query
      description: Cursor for pagination.
      schema:
        type: string
        format: date
    PageSizeInQuery:
      name: page_size
      in: query
      description: Cursor for pagination.
      schema:
        type: string
        format: date
    ParamCurrencyInQuery:
      name: currency
      in: query
      description: Currency code
      required: false
      schema:
        $ref: '#/components/schemas/CurrencyCode'
    ParamContractTemplateIdInQuery:
      name: templateId
      in: query
      description: ID of an existing contract template.
      required: false
      schema:
        type: string
    ParamContractIdInQuery:
      name: contract_id
      in: query
      description: Deel contract id.
      required: false
      schema:
        type: string
      example: 37nex2x
    ParamEorCountryCode:
      name: country_code
      description: Country code.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CountryCode'
      example: US
    ParamAdjustmentId:
      name: adjustment_id
      description: Adjustment id.
      in: path
      required: true
      schema:
        type: string
    ParamAfterCursor:
      name: after_cursor
      in: query
      description: Return next page of results after given cursor.
      schema:
        type: string
    ParamLimit:
      name: limit
      in: query
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      schema:
        type: number
        minimum: 1
        maximum: 99
        default: 10
    ParamPeopleLimit:
      name: limit
      in: query
      description: Return a page of results with given number of records.
      schema:
        type: number
        minimum: 1
        maximum: 200
    ParamPeopleOffset:
      name: offset
      in: query
      description: Return a page of results with given number of records.
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamOrganizationId:
      name: organizationId
      in: path
      description: Id of an existing organization.
      required: true
      schema:
        type: string
    ParamSortDir:
      name: order_direction
      in: query
      description: Order direction of results; ascending or descending.
      schema:
        $ref: '#/components/schemas/SortDirEnum'
    ParamPeopleSortDir:
      name: sort_order
      in: query
      description: Order direction of results; ascending or descending.
      schema:
        $ref: '#/components/schemas/SortDirEnum'
    ParamGlobalPayrollFlagQuery:
      name: gp
      in: query
      description: Filter GP legal entities
      required: false
      schema:
        type: boolean
    ParamLegalEntityIdQuery:
      name: legal_entity_id
      in: query
      description: Id of an legal entity.
      schema:
        type: string
        format: uuid
    ParamLegalEntityId:
      name: legal_entity_id
      in: path
      required: true
      description: Id of an legal entity.
      schema:
        type: string
        format: uuid
    ParamGlobalPayrollReportId:
      name: gp_report_id
      in: path
      required: true
      description: Id of gp report.
      schema:
        type: string
        format: uuid
    ParamPayrollReportStartDate:
      name: start_date
      in: query
      description: Start date of payroll report.
      schema:
        $ref: '#/components/schemas/DateString'
    ParamHiringStatuses:
      name: hiring_statuses[]
      in: query
      description: Employee's current hiring status.
      schema:
        $ref: '#/components/schemas/HiringStatusEnum'
    ParamEmployeeId:
      name: employee_id
      in: path
      description: Unique identifier for an employee in Deel.
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    ParamDocumentId:
      name: document_id
      in: path
      description: Unique identifier for a compliance document in Deel.
      required: true
      schema:
        type: number
      example: 1234
    ParamPeopleId:
      name: people_id
      in: path
      description: Unique identifier for a worker in Deel.
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    ParamWorkerId:
      name: worker_id
      in: path
      description: Unique identifier for a worker.
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    PayslipId:
      name: payslip_id
      in: path
      description: Unique identifier for a payslip.
      required: true
      schema:
        type: string
      example: ApdZbLvq0r0E
    ParamNewTimeOffId:
      name: timeoff_id
      in: path
      description: Unique identifier for a time-off in Deel.
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    ParamContractsTeamId:
      name: team_id
      in: query
      description: >-
        Filter contracts for given team ID; NOTE: technically ALL query
        parameters are strings or array of strings
      schema:
        type: string
    ParamContractsExternalId:
      name: external_id
      in: query
      description: Filter contracts for given external ID
      schema:
        type: string
    ParamContractsSearchTerm:
      name: search
      in: query
      description: >-
        Include a contract if by name or contractor name contains given search
        term.
      schema:
        type: string
    ParamContractsTypeList:
      name: types
      in: query
      description: >-
        You can filter contracts by type, a contract is included in results if
        its type is in this list.
      schema:
        $ref: '#/components/schemas/ContractTypeEnumList'
    ParamContractsStatusList:
      name: statuses
      in: query
      description: >-
        You can filter contracts by current status, a contract is included in
        results if its status is in this list.
      schema:
        $ref: '#/components/schemas/ContractStatusEnumList'
    ParamContractsCountryCodeList:
      name: countries
      in: query
      description: Country codes of contracts to filter.
      schema:
        $ref: '#/components/schemas/CountryCodeList'
    ParamContractsCurrencyCodeList:
      name: currencies
      in: query
      description: Currency codes of contracts to filter.
      schema:
        oneOf:
          - $ref: '#/components/schemas/CurrencyCodeList'
          - $ref: '#/components/schemas/CurrencyCodeRequired'
    ParamContractsSortBy:
      name: sort_by
      in: query
      description: Sort contracts by given field name.
      schema:
        $ref: '#/components/schemas/ContractsSortByEnum'
    ParamPeopleSortBy:
      name: sort_by
      in: query
      description: Sort people by given field name.
      schema:
        $ref: '#/components/schemas/PeopleSortByEnum'
    ParamTimesheetsContractId:
      name: contract_id
      in: query
      description: Id of a Deel contract.
      schema:
        type: string
    ParamTimesheetsReporterId:
      name: reporter_id
      in: query
      description: >-
        ID of an existing profile; NOTE: technically ALL query parameters are
        strings or array of strings
      schema:
        type: number
    ParamTimesheetsContractTypeList:
      name: contract_types
      in: query
      description: Types of contracts to filter.
      schema:
        $ref: '#/components/schemas/ContractTypeEnumList'
    ParamTimesheetsStatusList:
      name: statuses
      in: query
      description: Statuses of timesheets to filter.
      schema:
        $ref: '#/components/schemas/TimesheetStatusEnumList'
    ParamDateFrom:
      name: date_from
      in: query
      description: >-
        Filtered results will include records created on or after the provided
        date.
      example: '2022-01-01T00:00:00.000Z'
      schema:
        $ref: '#/components/schemas/DateString'
    ParamDateTo:
      name: date_to
      in: query
      description: Filtered results will include records created before the provided date.
      example: '2022-12-01T00:00:00.000Z'
      schema:
        $ref: '#/components/schemas/DateString'
    ParamIssuedDateFrom:
      name: issued_from_date
      in: query
      description: to get records created after given issue date
      schema:
        type: string
    ParamIssuedDateTo:
      name: issued_to_date
      in: query
      description: to get records created before given issued date
      schema:
        type: string
    ParamTimesheetsLimit:
      name: limit
      in: query
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      schema:
        type: number
        format: int64
        minimum: 1
        maximum: 99
        default: 99
    ParamTimesheetsOffset:
      name: offset
      in: query
      description: Return a page of results after given index of row
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamTimesheetId:
      name: timesheet_id
      in: path
      description: ID of an existing timesheet
      required: true
      schema:
        type: number
        format: int64
    ParamTimesheetDeletionReason:
      name: reason
      in: query
      description: Reason for deleting an existing timesheet
      required: false
      schema:
        type: string
    ParamTaskDeletionReason:
      name: reason
      in: query
      description: Reason for deleting an existing task
      required: false
      schema:
        type: string
    ParamInvoiceAdjustmentsContractId:
      name: contract_id
      in: query
      description: Id of an Deel contract.
      schema:
        type: string
    ParamInvoiceAdjustmentsReporterId:
      name: reporter_id
      in: query
      description: >-
        ID of an existing profile; NOTE: technically ALL query parameters are
        strings or array of strings
      schema:
        type: number
    ParamInvoiceAdjustmentsInvoiceId:
      name: invoice_id
      in: query
      description: >-
        ID of an existing invoice; NOTE: technically ALL query parameters are
        strings or array of strings
      schema:
        type: number
        format: int64
    ParamInvoiceInvoiceId:
      name: invoice_id
      in: path
      required: true
      description: ID of an existing invoice
      schema:
        type: string
    ParamInvoiceAdjustmentsContractTypeList:
      name: contract_types
      in: query
      description: types of contracts to filter
      schema:
        $ref: '#/components/schemas/ContractTypeEnumList'
    ParamInvoiceAdjustmentsTypeList:
      name: types
      in: query
      description: types of invoice adjustments to filter
      schema:
        $ref: '#/components/schemas/InvoiceAdjustmentTypeEnumList'
    ParamInvoiceAdjustmentsStatusList:
      name: statuses
      in: query
      description: statuses of invoice adjustment to filter
      schema:
        $ref: '#/components/schemas/InvoiceAdjustmentStatusEnumList'
    ParamInvoiceAdjustmentsDateFrom:
      name: date_from
      in: query
      description: >-
        to get invoice adjustments submitted on or after given start date
        (inclusive)
      schema:
        $ref: '#/components/schemas/DateString'
    ParamInvoiceAdjustmentsDateTo:
      name: date_to
      in: query
      description: >-
        to get invoice adjustments submitted before given end date (excludes
        records submitted on this date)
      schema:
        $ref: '#/components/schemas/DateString'
    ParamInvoiceAdjustmentsLimit:
      name: limit
      in: query
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      schema:
        type: number
        minimum: 1
        maximum: 99
        default: 10
    ParamInvoiceAdjustmentsOffset:
      name: offset
      in: query
      description: >-
        Return a page of results after given index of row; NOTE: technically ALL
        query parameters are strings or array of strings
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamInvoiceAdjustmentId:
      name: invoice_adjustment_id
      in: path
      description: ID of an existing invoice adjustment
      required: true
      schema:
        type: number
    ParamInvoiceAdjustmentRecurring:
      name: recurring
      in: query
      description: Add this invoice adjustment as recurring
      required: false
      schema:
        type: boolean
    ParamInvoiceAdjustmentDeletionReason:
      name: reason
      in: query
      description: Reason for deleting an existing invoice adjustment
      required: false
      schema:
        type: string
    ParamJobTitleListLimit:
      name: limit
      in: query
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      required: false
      schema:
        type: number
        format: int64
        minimum: 20
        maximum: 99
        default: 99
    ParamLegalEntityType:
      name: type
      in: query
      description: Return list of global payroll legal entities if provided
      required: false
      schema:
        type: string
    ParamJobTitleListCursor:
      name: after_cursor
      in: query
      description: Return next page of results after given cursor
      required: false
      schema:
        type: string
        nullable: false
    ParamSeniorityListLimit:
      name: limit
      in: query
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      required: false
      schema:
        type: number
        format: int64
        minimum: 20
        maximum: 99
        default: 50
    ParamMilestoneId:
      name: milestone_id
      in: path
      description: ID of milestone to return
      required: true
      schema:
        type: string
    ParamOffCyclePaymentId:
      name: offcycle_payment_id
      in: path
      description: ID of off-cycle payment to return
      required: true
      schema:
        type: string
    ParamTaskId:
      name: task_id
      in: path
      description: ID of task entity.
      required: true
      schema:
        type: string
    ParamLimitForAgreements:
      name: limit
      in: query
      description: Maximum number of records to return.
      required: false
      schema:
        $ref: '#/components/schemas/AgreementsParamLimit'
    ParamOffsetForAgreements:
      name: offset
      in: query
      description: Offset/index of record for the next page of records to return.
      required: false
      schema:
        $ref: '#/components/schemas/AgreementsParamOffset'
    ParamPremiumDeletionReason:
      name: reason
      in: query
      description: Reason for deleting an existing Deel Premium from a contract.
      required: false
      schema:
        type: string
    ParamEndDate:
      name: end_date
      in: query
      description: The day to end the contract.
      required: false
      schema:
        $ref: '#/components/schemas/DateString'
    ParamFinalPaymentCalculationType:
      name: calculation_type
      in: query
      description: The days to calculate.
      required: false
      schema:
        type: string
        enum:
          - CUSTOM_AMOUNT
          - WORK_DAYS
          - CALENDAR_DAYS
          - FULL_AMOUNT
    ParamFinalPaymentWorkweekStart:
      name: workweek_start
      in: query
      description: The day the work week starts, 0 to 6
      required: false
      schema:
        type: string
        minimum: 0
        maximum: 6
    ParamFinalPaymentWorkweekEnd:
      name: workweek_end
      in: query
      description: The day the work week ends, 0 to 6
      required: false
      schema:
        type: string
        minimum: 0
        maximum: 6
    ParamTimeoffId:
      name: timeoff_id
      in: path
      description: Time off Id
      required: true
      schema:
        type: string
      example: '12345'
    ParamInvoicesStatusList:
      name: statuses
      in: query
      description: statuses of invoices to filter
      schema:
        oneOf:
          - $ref: '#/components/schemas/InvoiceStatusEnumList'
          - $ref: '#/components/schemas/InvoiceStatusEnum'
    ParamLegalEntityQuery:
      name: entities
      in: query
      description: Filter by legal entity type; company, or individual
      required: false
      schema:
        oneOf:
          - $ref: '#/components/schemas/LegalEntityArray'
          - $ref: '#/components/schemas/LegalEntityType'
    ParamOffset:
      name: offset
      in: query
      description: >-
        Return a page of results after given index of row; NOTE: technically ALL
        query parameters are strings or array of strings
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamInvoicesContractId:
      name: contract_id
      in: query
      description: Id of a Deel contract.
      schema:
        type: string
  requestBodies:
    RequestBodyToCreateAdminUser:
      description: Basic information of the new admin user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminUserCreateContainer'
      required: true
    RequestBodyToCreateHrisDirectEmployee:
      description: Hris direct employee object that will be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HrisDirectEmployee'
      required: true
    RequestBodyToCreateContract:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer'
      required: true
    RequestBodyToAmendContractDetails:
      description: Contract object that needs to be amended
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToAmendDetailsContainer'
      required: true
    RequestBodyToCreateContractTimeBased:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/ContractToCreateContainer_pay_as_you_go_time_based
      required: true
    RequestBodyToCreateCandidate:
      description: Add a candidate to Deel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CandidateToCreateContainer'
      required: true
    RequestBodyToCreateAdjustment:
      description: Creation data for a new adjustment
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/AdjustmentToCreateContainer'
      required: true
    RequestBodyToUpdateAdjustment:
      description: Adjustment object that needs to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentToUpdateContainer'
      required: true
    RequestBodyToCreateContractTaskBased:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer_payg_tasks'
      required: true
    RequestBodyToAddEmployeeBankAccount:
      description: Bank Account object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountToAddContainer'
      required: true
    RequestBodyToAdditionalEORInfo:
      description: Bank Account object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdditionalEORInfoContainer'
      required: true
    RequestBodyToRequestCustomVerificationLetter:
      description: Request custom verification letter to be requested
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomVerificationLetterContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/RequestCustomVerificationLetterWithFile'
      required: true
    RequestBodyToModifyEmployeeBankAccount:
      description: Bank Account object that needs to be modified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountToAddContainer'
      required: true
    RequestBodyToCreateContractMilestoneBased:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer_payg_milestones'
      required: true
    RequestBodyToCreateContractFixedRate:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer_ongoing_time_based'
      required: true
    RequestBodyToCreateContractTermination:
      description: Contract that needs to be terminated and when.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToTerminateContainer'
      required: true
    RequestBodyToCreateContractSignature:
      description: Contract signature object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractSignatureToCreateContainer'
      required: true
    RequestBodyToCreateEmployeeContractSignature:
      description: Contract signature object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeContractSignatureToCreateContainer'
      required: true
    RequestBodyToCreateContractInvitation:
      description: Contract invitation object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractInvitationToCreateContainer'
      required: true
    RequestBodyToCreateTimesheet:
      description: Timesheet object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetToCreateContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TimesheetToCreateContainerWithFile'
      required: true
    RequestBodyToCreateTimesheetOnlyWithFile:
      description: Timesheet object that needs to be created
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TimesheetToCreateContainerWithFile'
      required: true
    RequestBodyToUpdateTimesheet:
      description: Timesheet object that needs to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetToUpdateContainer'
      required: true
    RequestBodyToCreateTimesheetReviews:
      description: Timesheet review objects that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetReviewsToCreateContainer'
    RequestBodyToCreatePgoTaskReviewsByIdReviews:
      description: Timesheet review objects that need to be created
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer
    RequestBodyToCreatePgoTaskReviewsReviews:
      description: Timesheet review objects that need to be created
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/RequestBodyToCreatePgoTaskReviewsReviewsContainer
    RequestBodyToCreateTimesheetReview:
      description: Timesheet review object that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetReviewToCreateContainer'
    RequestBodyToCreateMilestoneReviews:
      description: Milestone review objects that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneReviewsToCreateContainer'
    RequestBodyToCreateMilestoneReview:
      description: Milestone review object that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneReviewToCreateContainer'
    RequestBodyToCreateInvoiceAdjustment:
      description: InvoiceAdjustment object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentToCreateContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentToCreateWithFile'
      required: true
    RequestBodyToUpdateInvoiceAdjustment:
      description: InvoiceAdjustment object that needs to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentToUpdateContainer'
      required: true
    RequestBodyToCreateInvoiceAdjustmentReviews:
      description: InvoiceAdjustment review objects that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentReviewsToCreateContainer'
    RequestBodyToCreateInvoiceAdjustmentReview:
      description: InvoiceAdjustment review object that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentReviewToCreateContainer'
    RequestBodyToCreateMilestone:
      description: Milestone object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneToCreateContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MilestoneToCreateFormWithFile'
    RequestFormForContractDocument:
      description: A form to attach a file to contract document.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/FileObject'
    RequestBodyToCreateOffCyclePayment:
      description: Off-cycle payment object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffCyclePaymentToCreateContainer'
    RequestBodyToCreateFileRef:
      description: File info object that needs to be created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToCreateFileRef'
      required: true
    RequestBodyToEstimateFirstPayment:
      description: Pro-rata payment object that needs to estimated payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EstimateFirstPaymentContainer'
      required: true
    RequestBodyToCreatePgoTask:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToCreatePgoTask'
      required: true
    RequestBodyToPatchExternalId:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToPatchContractExternalId'
      required: true
    RequestBodyToPatchCandidate:
      description: Update an existed candidate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CandidateToPatchContainer'
      required: true
    RequestBodyToAddPremium:
      description: Answers for assessment in order to find eligibility for Deel Premium.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PremiumToAddContainer'
    RequestBodyForContractsShield:
      description: MSA ID (agreement) used to shield the contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToShieldContract'
      required: true
    RequestBodyForEorContractCreation:
      description: Employee (eor) contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorContractToCreateContainer'
      required: true
    RequestBodyToCalculateEorEmployeeCost:
      description: Information to use in the EOR employeeCost calculation.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/EorEmployeeCostCalculationRequestBodyContainer
    RequestBodyForGPContractCreation:
      description: Global Payroll (GP) contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPContractToCreateContainer'
      required: true
    RequestBodyForGPEmployeeAddressUpdate:
      description: The desired address of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeAddressToUpdateContainer'
      required: true
    RequestBodyForAddWorkerBankAccount:
      description: Request body to add new bank account for employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddWorkerBankAccountContainer'
      required: true
    RequestBodyForWorkerTermination:
      description: Request body to add new bank account for employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkerTerminationBodyContainer'
      required: true
    RequestBodyForGPEmployeePTOUpdate:
      description: The desired PTO policy of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeePTOToUpdateContainer'
      required: true
    RequestBodyForGPEmployeeEmployeeUpdate:
      description: The desired information of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeInformationToUpdateContainer'
      required: true
    RequestBodyForGPEmployeeCompensationUpdate:
      description: The desired compensation of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeCompensationToUpdateContainer'
      required: true
    RequestBodyToReviewTimeoff:
      description: Timeoff acceptance approve or decline.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeoffToReviewContainer'
      required: true
    RequestBodyToReviewTimeoffInternal:
      description: Timeoff acceptance approve or decline.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeoffToReviewInternalContainer'
      required: true
    RequestBodyToCreateTimeoff:
      description: Detail of the time off that will be registered to the contract.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTimeoffContainer'
    RequestBodyToCreatePeopleTimeoff:
      description: Detail of the time off that will be registered to the contract.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CreatePeopleTimeoff'
    RequestBodyToUpdateWorkerDepartment:
      description: Detail of the department data to attach for worker.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWorkerDepartmentContainer'
    RequestBodyToUpdateWorkerWorkingLocation:
      description: Detail of the working location data to attach for worker.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWorkerWorkingLocationContainer'
    RequestBodyToUpdatePeopleTimeoff:
      description: Detail of the time off that will be updated.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/PeopleTimeOffContainer'
    RequestBodyToUploadEmployeeComplianceDocument:
      description: The employee compliance document data to upload.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/UploadEmployeeComplianceDocumentFileContainer'
      required: true
    RequestBodyForCreatePublicToken:
      description: Public token object that needs to be created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePublicTokenContainer'
      required: true
  responses:
    ResponseBodyToCreateAdminUser:
      description: Basic information of the new admin user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAdminUserResponseContainer'
    ResponseBodyToGetAdminUser:
      description: Basic information of the new admin user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminUsersContainer'
    ResponseBodyForPaymentStatementInitiatedWebhook:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentStatementInitiatedWebhook'
    ResponseBodyForHrisDirectEmployee:
      description: Hris direct employee object that was created or edited
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HrisDirectEmployeeContainer'
    ResponseBodyForAlternateEmailList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlternateEmailList'
    ResponseBodyForApiError:
      description: Operation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorContainer'
    ResponseBodyForContractList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractListContainer'
    ResponseBodyForContractCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer'
    ResponseBodyForEstimateFirstPayment:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseEstimateFirstPaymentContainer'
    ResponseBodyForContractCreatedTimeBased:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_pay_as_you_go_time_based'
    ResponseBodyForContractCreatedTaskBased:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_payg_tasks'
    ResponseBodyForEmployeeBankAccountAdded:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountAddedContainer'
    ResponseBodyForEmployeePayslipsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeePayslipsListContainer'
    ResponseBodyForGPPayslipsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPPayslipsListContainer'
    ResponseBodyForEORPayslipsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EORPayslipsListContainer'
    ResponseBodyForEmployeeTaxDocumentsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTaxDocumentsListContainer'
    ResponseBodyForContractCreatedMilestoneBased:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_payg_milestones'
    ResponseBodyForContractCreatedFixedRate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_ongoing_time_based'
    ResponseBodyForGenericResultCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultCreated'
    ResponseBodyForGenericResultCreatedWithId:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultCreatedWithId'
    ResponseBodyForContractExternalIdPatched:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultCreated'
    ResponseBodyForContractTerminationResult:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractTerminationResultContainer'
    ResponseBodyForContractDetails:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer'
    ResponseBodyForLegalEntityList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalEntityListContainer'
    ResponseBodyForOrganizations:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationListContainer'
    ResponseBodyForTeams:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamListContainer'
    ResponseBodyForTimesheetList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetListContainer'
    ResponseBodyForTimesheetDetails:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetContainer'
    ResponseBodyForTimesheetCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentCreatedContainer'
    ResponseBodyForGenericResultUpdated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultUpdated'
    ResponseBodyForGenericResultDeleted:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultDeleted'
    ResponseBodyForEorClientTimeoffs:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorClientTimeoffsContainer'
    ResponseBodyForEmployeeTimeoffs:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsContainer'
    ResponseBodyForEmployeeTimeoffsCreation:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsCreationContainer'
    ResponseBodyForEmployeeTimeoffsEntitlements:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsEntitlementsContainer'
    ResponseBodyForEmployeeTimeoffsPolicies:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsPoliciesContainer'
    ResponseBodyForInvoiceAdjustmentList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentListContainer'
    ResponseBodyForInvoiceAttachment:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentAttachmentContainer'
    ResponseBodyForInvoiceAdjustmentCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentCreatedContainer'
    ResponseBodyForInvoiceAdjustmentDetails:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentContainer'
    ResponseBodyForCountryList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountryListContainer'
    ResponseBodyForCurrencyList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrencyListContainer'
    ResponseBodyForJobTitleList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobTitleListContainer'
    ResponseBodyForSeniorityList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeniorityListContainer'
    ResponseBodyForMilestoneList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneListContainer'
    ResponseBodyForMilestone:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneContainer'
    ResponseBodyForOffCyclePaymentList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffCyclePaymentListContainer'
    ResponseBodyForOffCyclePayment:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffCyclePaymentContainer'
    ResponseBodyForFileRefCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutputToCreateFileRefContainer'
    ResponseBodyForTaskList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskListContainer'
    ResponseBodyForTaskCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskCreatedContainer'
    ResponseBodyForAgreementList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementListContainer'
    ResponseBodyForPremiumResultAdded:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PremiumResultAddedContainer'
    ResponseBodyForEorEntitlements:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorEntitlementsContainer'
    ResponseBodyForEorTimeoffs:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorTimeoffsContainer'
    ResponseBodyForEorTimeoffItem:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorTimeoffsItemContainer'
    ResponseBodyForFinalPaymentCalculated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinalPaymentCalculatedContainer'
    ResponseBodyForContractTemplateList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractTemplateListContainer'
    ResponseBodyForEorCountryValidations:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorCountryValidationsContainer'
    ResponseBodyForGPContractCreation:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPContractCreatedContainer'
    ResponseBodyForGPEmployeeAddressUpdate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeAddressUpdatedContainer'
    ResponseBodyForGPEmployeeInformationUpdate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeInformationUpdatedContainer'
    ResponseBodyForGPEmployeeCompensationUpdate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeCompensationUpdatedContainer'
    ResponseBodyForGPPayslipDownloadUrl:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPPayslipDownloadUrlContainer'
    ResponseBodyForGPPayrollEventReport:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPPayrollEventReportContainer'
    ResponseBodyForGlobalPayrollG2NReport:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GlobalPayrollG2NReportContainer'
    ResponseBodyForGlobalPayrollG2NReportCsv:
      description: Successful operation.
      content:
        text/csv:
          schema:
            type: string
    ResponseBodyForEORPayslipDownloadUrl:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EORPayslipDownloadUrlContainer'
    ResponseBodyForEorContractBenefits:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EORContractBenefitsContainer'
    ResponseBodyForEorContractCreation:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorContractCreatedContainer'
    ResponseBodyForEorEmploymentCostCalculation:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorEmployeeCostCalculationResponseContainer'
    ResponseBodyForTimeoffTypeList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeoffTypeListContainer'
    ResponseBodyForAdjustmentsCategories:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentsCategoriesContainer'
    ResponseBodyForAdjustments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentsContainer'
    ResponseBodyForAdjustmentCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentCreatedContainer'
    ResponseBodyForAdjustmentById:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentCreatedContainer'
    ResponseBodyForEmployees:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultUpdated'
    ResponseBodyForPaymentList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentListContainer'
    ResponseBodyForInvoiceList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceListContainer'
    ResponseBodyForDeelInvoiceList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeelInvoiceListContainer'
    ResponseBodyForEmployeeAgreementDownload:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeAgreementDownloadContainer'
    ResponseBodyForHrVerificationLettersAndDocuments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/HrVerificationLettersAndDocumentsListContainer
    ResponseBodyForDownloadHrVerificationLettersAndDocuments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeAgreementDownloadContainer'
    ResponseBodyForInvoiceDownload:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceDownloadContainer'
    PaymentBreakDownResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentBreakDownContainer'
    DepartmentsResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartmentsContainer'
    WorkingLocationsResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkingLocationsContainer'
    InternalPeopleResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalPeopleContainer'
    PeopleResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleContainer'
    PeopleByIdResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleByIdContainer'
    ResponseBodyForPeopleMe:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleMe'
    ResponseBodyForContractPreview:
      description: Successful operation.
      content:
        text/html:
          schema:
            $ref: '#/components/schemas/ContractPreview'
    ResponseBodyForBankAccountGuide:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountGuideContainer'
    ResponseBodyForBankAccountUpdated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountUpdatedContainer'
    ResponseBodyForWorkerTermination:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkerTerminationContainer'
    ResponseBodyForWorkerBankAccountsInfo:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkerBankAccountsInfoContainer'
    ResponseBodyForContractDocument:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractDocumentContainer'
    ResponseBodyForGetEmployeeComplianceDocuments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeeComplianceDocumentsContainer'
    ResponseBodyForGetEmployeeComplianceDocumentTemplateDownloadLink:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/GetEmployeeComplianceDocumentTemplateDownloadLinkContainer
    ResponseBodyForUploadEmployeeComplianceDocument:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadEmployeeComplianceDocumentContainer'
    ResponseBodyForCreatePublicToken:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublicTokenCreatedContainer'
    ResponseBodyForInvoiceDownloadLink:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceDownloadLinkContainer'
  schemas:
    UploadEmployeeComplianceDocumentFileContainer:
      type: object
      x-internal: true
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: The employee compliance document to upload.
    UploadEmployeeComplianceDocumentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          properties:
            success:
              type: boolean
              description: A flag denoting if the file upload was successful.
              example: true
    GetEmployeeComplianceDocumentTemplateDownloadLinkContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          properties:
            url:
              type: string
              description: The URL for the requested compliance document template.
              example: >-
                https://s3URL/letsdeel.com/contract_requirement_templates/12345.pdf
            expires_at:
              type: string
              format: date-time
              description: Expiration date time of download URL.
              example: '2020-03-31T10:58:49.780Z'
    GetEmployeeComplianceDocumentsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - documents
          properties:
            documents:
              type: array
              items:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/UniqueObjectIdentifier'
                    description: The unique identifier of the document.
                  name:
                    type: string
                    description: The name of the document.
                    example: Example Document
                  description:
                    type: string
                    description: A short description of the document.
                    example: This document is needed for tax purposes.
                  has_template:
                    type: boolean
                    description: >-
                      Denotes if this document has a template available for
                      download
                    example: true
                  fillable:
                    type: boolean
                    description: Denotes if the document is available to fill out on Deel.
                    example: false
                  is_optional:
                    type: boolean
                    description: Denotes if the document is optional or required.
                    example: false
                  country:
                    type: string
                    description: The country associated with this document.
                    example: GB
                  uploaded_at:
                    type: string
                    description: >-
                      The timestamp when this document was uploaded / supplied
                      to Deel.
                    example: '2023-01-01T12:00:00.000Z'
                  filenames:
                    type: array
                    description: >-
                      The list of filenames for the associated uploaded
                      documents.
                    items:
                      type: string
                      description: A file name for an uploaded document.
                      example: myComplianceDocument.pdf
    PaymentStatementInitiatedWebhook:
      type: object
      required:
        - billing_invoices
        - invoices
      properties:
        billing_invoices:
          type: array
          items:
            type: number
        invoices:
          type: array
          items:
            type: number
    AlternateEmailList:
      type: array
      description: List of alternate email addresses.
      items:
        $ref: '#/components/schemas/AlternateEmailItem'
    AlternateEmailItem:
      type: object
      title: Root Schema
      required:
        - email
        - isVerified
      properties:
        email:
          $ref: '#/components/schemas/EmailType'
          title: Alternate email
        isVerified:
          type: boolean
          title: True if email has been verified
    ApiErrorContainer:
      type: object
      x-internal: true
      properties:
        request:
          $ref: '#/components/schemas/ApiErrorRequest'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
    ApiErrorRequest:
      type: object
      x-internal: true
      properties:
        method:
          type: string
          description: The HTTP method of the failed request
          example: POST
        url:
          type: string
          description: The relative URL of the failed request
          example: /rest/v2/example
        status:
          type: number
          description: The status code of the response
          example: 400
        api_req_id:
          type: string
          description: The request ID of the failed request
          example: 00000000-0000-0000-0000-000000000000
        docs:
          type: string
          description: >-
            A link to the official documentation for the requested endpoint
            resource
          example: https://developer.deel.com/reference/example
        source:
          type: string
          description: The source handler which produced the returned error
          example: AJV
        code:
          type: number
          description: The code of the source handler which produced the returned error
          example: 3
    ApiError:
      type: object
      x-internal: true
      properties:
        message:
          type: string
          description: A description of the returned error
          example: Must have required property 'example_field'
        path:
          type: string
          description: The JSON path where input validation failed
          example: /data/type
    ContractSearchForm:
      description: >-
        Search form should include parameters varied based on usage of cursor
        for pagination. NOTE: that all query parameters are based on strings
      x-internal: true
      oneOf:
        - $ref: '#/components/schemas/ContractSearchFormWithCursor'
        - $ref: '#/components/schemas/ContractSearchFormWithoutCursor'
    ContractSearchFormWithCursor:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        after_cursor:
          type: string
          description: Return next page of results after given cursor.
          nullable: false
        limit:
          type: string
          pattern: ^\d{1,5}$
          description: Return a page of results with given number of records.
          default: '10'
          nullable: false
    ContractSearchFormWithoutCursor:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        limit:
          type: string
          pattern: ^\d{1,5}$
          description: Return a page of results with given number of records.
          default: '10'
          nullable: false
        order_direction:
          $ref: '#/components/schemas/SortDirEnum'
        types:
          oneOf:
            - $ref: '#/components/schemas/ContractTypeEnum'
            - $ref: '#/components/schemas/ContractTypeEnumList'
        statuses:
          oneOf:
            - $ref: '#/components/schemas/ContractStatusEnumList'
            - $ref: '#/components/schemas/ContractStatusEnum'
        team_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        external_id:
          type: string
          description: Filter contracts for given external ID
          nullable: false
          maxLength: 255
        countries:
          oneOf:
            - $ref: '#/components/schemas/CountryCodeList'
            - $ref: '#/components/schemas/CountryCode'
        currencies:
          oneOf:
            - $ref: '#/components/schemas/CurrencyCodeList'
            - $ref: '#/components/schemas/CurrencyCodeRequired'
        search:
          description: >-
            Include a contract if by name or contractor name contains given
            search term.
          type: string
          nullable: false
        sort_by:
          $ref: '#/components/schemas/ContractsSortByEnum'
    ContractListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/ContractList'
        page:
          $ref: '#/components/schemas/PageInfo'
      required:
        - data
        - page
    ContractList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicContract'
    BasicContract:
      type: object
      x-internal: true
      properties:
        id:
          type: string
          nullable: false
          minLength: 1
        title:
          type: string
          nullable: false
          minLength: 1
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        client:
          $ref: '#/components/schemas/ClientOfBasicContract'
        worker:
          $ref: '#/components/schemas/WorkerOfBasicContract'
        invitations:
          $ref: '#/components/schemas/InvitationsOfBasicContract'
        signatures:
          $ref: '#/components/schemas/SignaturesOfBasicContract'
        is_shielded:
          type: boolean
        is_archived:
          type: boolean
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        termination_date:
          $ref: '#/components/schemas/DateTimeString'
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
        scale:
          type: string
          nullable: true
          description: The payment scale (e.g., hourly, weekly, monthly, etc.)
        who_reports:
          $ref: '#/components/schemas/ContractWhoReportsEnum'
        external_id:
          type: string
          nullable: true
          description: A unique identifier for the object provided by an external system.
      required:
        - id
        - title
        - type
        - status
        - client
        - worker
        - invitations
        - signatures
        - is_shielded
        - is_archived
        - created_at
        - termination_date
    ContractContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ContractContainer_pay_as_you_go_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    BankAccountAddedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BankAccountAdded'
    ContractContainer_payg_tasks:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ContractContainer_payg_milestones:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ContractContainer_ongoing_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ResponseEstimateFirstPaymentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ResponseEstimateFirstPayment'
    ResponseEstimateFirstPayment:
      type: object
      x-internal: true
      properties:
        pro_rata:
          $ref: '#/components/schemas/ProRata'
        first_payment_dates:
          type: array
          items:
            $ref: '#/components/schemas/FirstPaymentDate'
    BankAccountAdded:
      type: object
      x-internal: true
      properties:
        id:
          type: string
          description: ID of Bank Account.
          example: dcc7b587-2246-4909-853e-12056e90c451
        status:
          $ref: '#/components/schemas/BankAccountStatus'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        updated_at:
          $ref: '#/components/schemas/DateTimeString'
    BankAccountStatus:
      type: string
      x-internal: true
      description: Bank Account status
      enum:
        - new
        - pending
        - approved
        - failed
    Contract:
      type: object
      x-internal: true
      properties:
        id:
          type: string
          nullable: false
          minLength: 1
        title:
          type: string
          nullable: false
          minLength: 1
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        job_title:
          type: string
        seniority:
          $ref: '#/components/schemas/Seniority'
        who_reports:
          $ref: '#/components/schemas/ContractWhoReportsEnum'
        scope_of_work:
          type: string
          nullable: true
        start_date:
          $ref: '#/components/schemas/DateTimeString'
        termination_date:
          $ref: '#/components/schemas/DateTimeString'
        special_clause:
          type: string
        is_archived:
          type: boolean
        client:
          $ref: '#/components/schemas/ClientOfContract'
        worker:
          $ref: '#/components/schemas/WorkerOfContract'
        invitations:
          $ref: '#/components/schemas/InvitationsOfBasicContract'
        signatures:
          $ref: '#/components/schemas/SignaturesOfContract'
        compensation_details:
          $ref: '#/components/schemas/CompensationDetailsOfContract'
        employment_details:
          $ref: '#/components/schemas/EmploymentDetailsOfContract'
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
        contract_template:
          $ref: '#/components/schemas/ContractTemplate'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/ContractCustomField'
        quote:
          $ref: '#/components/schemas/EorQuoteBase'
          nullable: true
          description: >-
            It is the quote associated with this contract. It will only be
            present for EOR-type contracts.
        external_id:
          type: string
          nullable: true
          description: A unique identifier for the object provided by an external system.
      required:
        - id
        - title
        - type
        - status
        - created_at
        - job_title
        - seniority
        - special_clause
        - start_date
        - termination_date
        - is_archived
        - client
        - worker
        - invitations
        - signatures
        - compensation_details
        - employment_details
    ClientOfBasicContract:
      type: object
      x-internal: true
      properties:
        team:
          $ref: '#/components/schemas/TeamOfBasicContract'
    ClientOfContract:
      type: object
      x-internal: true
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        full_name:
          type: string
        email:
          $ref: '#/components/schemas/EmailType'
        team:
          $ref: '#/components/schemas/TeamOfContract'
        legal_entity:
          $ref: '#/components/schemas/ClientLegalEntity'
      required:
        - team
        - legal_entity
    ClientLegalEntity:
      type: object
      x-internal: true
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
        email:
          $ref: '#/components/schemas/EmailType'
        type:
          $ref: '#/components/schemas/LegalEntityType'
        subtype:
          $ref: '#/components/schemas/LegalEntitySubType'
        registration_number:
          type: string
        vat_number:
          type: string
      required:
        - id
        - name
        - email
        - type
        - subtype
        - registration_number
        - vat_number
    DateStringDefaultNow:
      type: string
      x-internal: true
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
      description: >-
        Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.
        Defaults to current date
      example: '1999-12-31T00:00:00.000Z'
    DateStringRequired:
      type: string
      x-internal: true
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
      description: 'Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.'
      example: '1999-12-31T00:00:00.000Z'
    DateString:
      type: string
      x-internal: true
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
      description: 'Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.'
      example: '1999-12-31T00:00:00.000Z'
      nullable: true
    DateTimeStringRequired:
      type: string
      x-internal: true
      format: date-time
      description: Long date-time format following ISO-8601
      example: '2022-05-24T09:38:46.235Z'
      nullable: false
    DateTimeString:
      type: string
      x-internal: true
      format: date-time
      description: Long date-time format following ISO-8601
      example: '2022-05-24T09:38:46.235Z'
      nullable: true
    WorkerOfBasicContract:
      type: object
      x-internal: true
      required:
        - id
        - full_name
        - email
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        full_name:
          type: string
          nullable: false
          minLength: 1
        email:
          $ref: '#/components/schemas/EmailType'
        alternate_email:
          $ref: '#/components/schemas/AlternateEmailList'
        image:
          $ref: '#/components/schemas/UrlType'
    WorkerOfContract:
      type: object
      x-internal: true
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: false
        full_name:
          type: string
          description: Worker's full name.
          nullable: false
          minLength: 1
        email:
          $ref: '#/components/schemas/EmailType'
        alternate_email:
          $ref: '#/components/schemas/AlternateEmailList'
        nationality:
          description: Worker's nationality.
          example: US
          type: string
          nullable: true
        image:
          type: string
          format: url
        legal_entity:
          $ref: '#/components/schemas/WorkerLegalEntity'
        date_of_birth:
          $ref: '#/components/schemas/DateTimeString'
        expected_email:
          $ref: '#/components/schemas/WorkerEmailType'
        first_name:
          type: string
          nullable: true
          maxLength: 255
          description: Worker's first name
          example: John
        last_name:
          type: string
          nullable: true
          maxLength: 255
          description: Worker's last name
          example: Doe
        country:
          type: string
          nullable: true
          description: Worker's country (location not nationality)
          example: US
    WorkerLegalEntity:
      type: object
      x-internal: true
      properties:
        type:
          $ref: '#/components/schemas/LegalEntityType'
        personal_name:
          type: string
        registration_number:
          type: string
      required:
        - type
        - personal_name
        - registration_number
    TeamOfBasicContract:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique reference of a team
        name:
          type: string
          nullable: true
          description: Name of a team
    TeamOfContract:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique reference of a team
        name:
          type: string
          nullable: false
          description: Name of a team
    InvitationsOfBasicContract:
      type: object
      x-internal: true
      properties:
        client_email:
          $ref: '#/components/schemas/EmailType'
        worker_email:
          $ref: '#/components/schemas/EmailType'
    SignaturesOfBasicContract:
      type: object
      x-internal: true
      required:
        - client_signed_at
        - worker_signature
        - worker_signed_at
      properties:
        client_signed_at:
          $ref: '#/components/schemas/DateTimeString'
        worker_signature:
          type: string
          description: Worker's signature.
          example: Jane Doe
          nullable: false
        worker_signed_at:
          $ref: '#/components/schemas/DateTimeString'
    SignaturesOfContract:
      type: object
      x-internal: true
      required:
        - client_signature
        - client_signed_at
        - worker_signature
        - worker_signed_at
        - signed_at
      properties:
        client_signature:
          type: string
          description: normally name of client is used as signature
        client_signed_at:
          $ref: '#/components/schemas/DateTimeString'
        worker_signature:
          type: string
          description: Signatures of client representative.
          nullable: false
        worker_signed_at:
          $ref: '#/components/schemas/DateTimeString'
        signed_at:
          $ref: '#/components/schemas/DateTimeString'
    CompensationDetailsOfContract:
      type: object
      x-internal: true
      properties:
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        amount:
          type: string
        scale:
          type: string
        frequency:
          type: string
        first_payment:
          type: string
        first_payment_date:
          $ref: '#/components/schemas/DateTimeString'
        gross_annual_salary:
          type: string
        gross_signing_bonus:
          type: string
        gross_variable_bonus:
          type: string
      required:
        - currency_code
        - amount
        - scale
        - frequency
        - first_payment
        - first_payment_date
        - gross_annual_salary
        - gross_signing_bonus
        - gross_variable_bonus
    EmploymentDetailsOfContract:
      type: object
      x-internal: true
      properties:
        type:
          type: string
        days_per_week:
          type: number
        hours_per_day:
          type: number
        probation_period:
          type: number
          nullable: true
        paid_vacation_days:
          type: number
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          type: string
          description: State code.
          example: CO
          nullable: true
      required:
        - type
        - days_per_week
        - hours_per_day
        - probation_period
        - paid_vacation_days
    ContractToAmendDetailsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractDetailsToAmend'
    ContractDetailsToAmend:
      type: object
      x-internal: true
      description: You can specify any combination of data points that need changing.
      properties:
        amount:
          type: number
          minimum: 1
          nullable: false
          example: 100
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        scale:
          $ref: '#/components/schemas/WorkStatementScaleEnum'
        effective_date:
          $ref: '#/components/schemas/DateStringRequired'
        first_payment_date:
          $ref: '#/components/schemas/DateStringRequired'
        first_payment:
          type: number
          minimum: 0
          nullable: false
        frequency:
          $ref: '#/components/schemas/WorkStatementCycleScaleEnum'
        cycle_end:
          type: number
          minimum: 1
          maximum: 31
        cycle_end_type:
          $ref: '#/components/schemas/WorkStatementCycleEndTypeEnum'
        payment_due_type:
          $ref: '#/components/schemas/WorkStatementPaymentDueTypeEnum'
        payment_due_days:
          type: number
          minimum: 0
          maximum: 90
          nullable: false
        pay_before_weekends:
          type: boolean
          nullable: false
          description: If the payment due is on a weekend, pay on Friday.
        job_title_name:
          type: string
          nullable: false
          description: You can enter new job title.
          example: 3D Designer
        job_title_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: If you want to use a predefined job title, please use a job title ID
          example: 123
        seniority_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: You can use a predefined seniority level ID.
        special_clause:
          type: string
          nullable: false
          description: Text to describe any special clause in contract.
        scope_of_work:
          type: string
          nullable: false
          description: Text to describe the scope of work of the contract.
    ContractToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate'
    AdminUserCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdminUserCreateRequest'
    ContractToCreate:
      x-internal: true
      oneOf:
        - $ref: '#/components/schemas/ContractToCreate_pay_as_you_go_time_based'
        - $ref: '#/components/schemas/ContractToCreate_payg_tasks'
        - $ref: '#/components/schemas/ContractToCreate_payg_milestones'
        - $ref: '#/components/schemas/ContractToCreate_ongoing_time_based'
    ContractToCreateContainer_pay_as_you_go_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_pay_as_you_go_time_based'
    AdjustmentToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdjustmentToCreate'
    AdjustmentToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdjustmentToUpdate'
    CandidateToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CandidateToCreate'
    CandidateToPatchContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CandidateToPatch'
    BankAccountToAddContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BankAccountToAdd'
    AdditionalEORInfoContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdditionalEORInfo'
    RequestCustomVerificationLetterContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/LetterRequest'
    RequestCustomVerificationLetterWithFile:
      type: object
      allOf:
        - $ref: '#/components/schemas/LetterRequest'
        - type: object
          required:
            - files
          properties:
            files:
              type: array
              items:
                $ref: '#/components/schemas/FileObject'
    ContractToCreateContainer_payg_tasks:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_payg_tasks'
    ContractToCreateContainer_payg_milestones:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_payg_milestones'
    ContractToCreateContainer_ongoing_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_ongoing_time_based'
    CandidateToPatch:
      type: object
      x-internal: true
      description: Details of candidate to update
      required:
        - status
      properties:
        first_name:
          type: string
          description: Candidate's first name.
          example: John
        last_name:
          type: string
          description: Candidate's last name.
          example: Doe
        status:
          $ref: '#/components/schemas/CandidateStatusEnum'
        start_date:
          $ref: '#/components/schemas/DateStringRequired'
          description: Candidate's expected start date.
        job_title:
          type: string
          description: Job Title.
          example: 3D Designer
        link:
          type: string
          description: Link to candidate's profile in ATS.
        email:
          $ref: '#/components/schemas/EmailTypeRequired'
          title: Candidate's email.
        nationality:
          $ref: '#/components/schemas/NationalityType'
          description: Candidate's nationality.
        country:
          $ref: '#/components/schemas/CountryCode'
          description: Job location country.
        state:
          type: string
          minLength: 1
          maxLength: 50
          example: AL
          description: Job location state.
    AdjustmentToCreate:
      type: object
      x-internal: true
      description: Details of adjustment to create
      required:
        - contract_id
        - amount
        - title
        - description
        - adjustment_category_id
        - file
        - vendor
        - country
      properties:
        contract_id:
          type: string
          description: The identifier of the contract associated with the adjustment
          example: m3jk2j
          minLength: 5
        amount:
          oneOf:
            - type: string
            - type: number
          description: Amount of adjustment.
          minimum: 1
          minLength: 1
          example: 100.25
        date_of_adjustment:
          $ref: '#/components/schemas/DateString'
          description: The date of the expense associated with the adjustment.
          example: '2023-11-02T00:00:00.000Z'
        title:
          type: string
          description: Title of adjustment.
          example: Your title here
          minLength: 3
          maxLength: 255
        description:
          type: string
          description: Description of adjustment.
          example: Your description here
          minLength: 3
          maxLength: 255
        cycle_reference:
          type: string
          description: Cycle reference of adjustment.
          example: my_cycle_reference
        file:
          type: string
          format: binary
          minLength: 1
          description: File of adjustment.
        adjustment_category_id:
          type: string
          description: Adjustment category id.
          example: c9cf4c2c0165f48f494415390c3b49
          minLength: 25
        move_next_cycle:
          type: boolean
          nullable: true
          description: If an adjustments can belong to another payroll cycle.
          example: true
        vendor:
          type: string
          description: Vendor of adjustment.
          example: Vendor
          minLength: 3
        country:
          $ref: '#/components/schemas/CountryCode'
          description: Country of adjustment.
          example: CA
    AdjustmentToUpdate:
      type: object
      x-internal: true
      description: Details of adjustment to update
      properties:
        amount:
          oneOf:
            - type: string
            - type: number
          description: Amount of adjustment.
          minimum: 1
          minLength: 1
          example: 100.25
        title:
          type: string
          description: Title of adjustment.
          example: Your title here
          minLength: 3
          maxLength: 255
        description:
          type: string
          description: Description of adjustment.
          example: Your description here
          minLength: 3
          maxLength: 255
        file:
          type: string
          format: binary
          minLength: 1
          description: File of adjustment.
    CandidateToCreate:
      type: object
      x-internal: true
      description: Details of candidate to create
      required:
        - id
        - first_name
        - last_name
        - status
        - start_date
        - link
      properties:
        id:
          type: string
          description: Unique identifier of candidate in your ATS.
        first_name:
          type: string
          description: Candidate's first name.
          example: John
        last_name:
          type: string
          description: Candidate's last name.
          example: Doe
        status:
          $ref: '#/components/schemas/CandidateStatusEnum'
        start_date:
          $ref: '#/components/schemas/DateStringRequired'
          description: Candidate's expected start date.
        link:
          type: string
          description: Link to candidate's profile in ATS.
        job_title:
          type: string
          description: Job Title.
          example: 3D Designer
        email:
          $ref: '#/components/schemas/EmailTypeRequired'
          title: Candidate's email.
        nationality:
          $ref: '#/components/schemas/NationalityType'
          description: Candidate's nationality.
        country:
          $ref: '#/components/schemas/CountryCode'
          description: Job location country.
        state:
          type: string
          minLength: 1
          maxLength: 50
          example: AL
          description: Job location state.
    ContractToCreate_pay_as_you_go_time_based:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
            - start_date
          properties:
            type:
              type: string
              enum:
                - pay_as_you_go_time_based
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              allOf:
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_Shared
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_pay_as_you_go_time_based
    BankAccountToAdd:
      x-internal: true
      type: array
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            type: string
            description: The key of the bank account properties.
          value:
            type: string
            description: The value for that key property.
    ContractToCreate_payg_tasks:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
            - start_date
          properties:
            type:
              type: string
              enum:
                - payg_tasks
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              $ref: >-
                #/components/schemas/CompensationDetailsOfContractToCreate_Shared
    ContractToCreate_payg_milestones:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum:
                - payg_milestones
            start_date:
              $ref: '#/components/schemas/DateString'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              $ref: >-
                #/components/schemas/CompensationDetailsOfContractToCreate_Shared
    ContractToCreate_ongoing_time_based:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
            - start_date
          properties:
            type:
              type: string
              enum:
                - ongoing_time_based
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              allOf:
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_Shared
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_ongoing_time_based
    EorQuoteBase:
      type: object
      description: EOR quote approved by Deel
      properties:
        annual_salary:
          type: number
          example: '900.00'
          description: Annual Salary in local currency
        currency:
          $ref: '#/components/schemas/CurrencyCodeRequired'
          description: Local currency
        breakdown_costs:
          $ref: '#/components/schemas/BreakdownCostsQuote'
          description: Breakdown costs
        severance_accrual_total:
          type: number
          example: '900.00'
          description: Total severance accrual in local currency
        severance_accrual_total_usd:
          type: number
          example: '900.00'
          description: Total severance accrual in USD
        recurring_allowance_total:
          type: number
          example: '900.00'
          description: Total recurring allowance in local currency
        recurring_allowance_total_usd:
          type: number
          example: '900.00'
          description: Total recurring allowance in USD
        salary_total:
          type: number
          example: '900.00'
          description: Total salary in local currency
        salary_total_usd:
          type: number
          example: '900.00'
          description: Total salary in USD
        employer_cost_total:
          type: number
          example: '900.00'
          description: Total employer cost in local currency
        employer_cost_total_usd:
          type: number
          example: '900.00'
          description: Total employer cost in USD
        platform_fee_total:
          type: number
          example: '900.00'
          description: Total platform fee in local currency
        platform_fee_total_usd:
          type: number
          example: '900.00'
          description: Total platform fee in USD
        mobility_fee_total:
          type: number
          example: '900.00'
          description: Total mobility fee in local currency
        mobility_fee_total_usd:
          type: number
          example: '900.00'
          description: Total mobility fee in USD
        monthly_cost_total:
          type: number
          example: '900.00'
          description: Total monthly cost in local currency
        monthly_cost_total_usd:
          type: number
          example: '900.00'
          description: Total monthly cost in USD
        gross_salary_total:
          type: number
          example: '900.00'
          description: Total gross salary in local currency
        gross_salary_total_usd:
          type: number
          example: '900.00'
          description: Total gross salary in USD
        cba_total:
          type: number
          example: '900.00'
          description: Total CBA in local currency
        cba_total_usd:
          type: number
          example: '900.00'
          description: Total CBA in USD
        created_at:
          $ref: '#/components/schemas/DateString'
          description: Quote creation date
        updated_at:
          $ref: '#/components/schemas/DateString'
          description: Quote updated date
    EorQuotePayload:
      type: object
      description: EOR quote approved by Deel
      allOf:
        - $ref: '#/components/schemas/EorQuoteBase'
        - type: object
          properties:
            contract_id:
              type: string
              description: Contract id
            contract_name:
              type: string
              example: My EOR Contract
              description: Contract name
            country_code:
              $ref: '#/components/schemas/CountryCode'
            country_name:
              type: string
              example: Argentina
              description: Country Name
    BenefitQuote:
      type: object
      x-internal: true
      properties:
        fee:
          type: number
          description: Fee in local currency
        fee_usd:
          type: number
          description: Fee in USD
        name:
          type: string
          description: Benefit's name
        plan:
          type: string
          description: Benefit's plan
        price:
          type: number
          description: Price in local currency
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        price_usd:
          type: number
          description: Price in USD
    BreakdownCostsQuote:
      type: object
      x-internal: true
      properties:
        monthly:
          type: object
          properties:
            costs:
              type: array
              items:
                $ref: '#/components/schemas/CostQuote'
            total:
              type: number
              description: Total costs in local currency
            total_usd:
              type: number
              description: Total costs in USD
    CostQuote:
      type: object
      x-internal: true
      properties:
        name:
          type: string
          description: Cost's name
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        total:
          type: number
          description: Total cost in local currency
        total_usd:
          type: number
          description: Total cost in USD
    ContractToCreate_Shared:
      type: object
      x-internal: true
      description: Details of contract to create
      required:
        - type
        - title
        - job_title
        - meta
        - client
      properties:
        title:
          type: string
          description: The title of the contract.
        country_code:
          $ref: '#/components/schemas/CountryCode'
        state_code:
          type: string
          description: >-
            The state or province code. Use country lookup endpoint to retrieve
            state codes.
          nullable: true
        scope_of_work:
          type: string
          description: Describe the work to be performed.
          nullable: true
        special_clause:
          type: string
          description: Enter any special clause you may have.
          nullable: true
        termination_date:
          $ref: '#/components/schemas/DateString'
        client:
          type: object
          required:
            - legal_entity
            - team
          properties:
            legal_entity:
              type: object
              description: >-
                Choose the Deel legal entity for this contract. Use legal entity
                endpoint to retrieve a list of legal entities in your
                organization.
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
            team:
              type: object
              description: >-
                Choose the Deel team for this contract. Use teams endpoint to
                retrieve a list of teams in your organization.
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
        job_title:
          type: object
          description: >-
            Worker's job title. You can enter a custom job title or use a
            pre-defiled job title using the Id retrieved in job-titles endpoint.
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              description: Id of an predefined job title.
            name:
              type: string
              nullable: true
              maxLength: 255
              description: Job title. Please leave it blank when entering an Id.
        seniority:
          type: object
          description: >-
            Job seniority level. Please use the seniority levels endpoint to
            retrieve the list of seniority levels.
          nullable: true
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
        who_reports:
          $ref: '#/components/schemas/ContractWhoReportsEnum'
        meta:
          $ref: '#/components/schemas/MetaDataOfContractToCreate'
        external_id:
          type: string
          description: External Id.
          nullable: true
        worker:
          type: object
          nullable: true
          description: Worker properties
          required:
            - first_name
            - expected_email
          properties:
            expected_email:
              $ref: '#/components/schemas/WorkerEmailType'
            first_name:
              type: string
              nullable: true
              maxLength: 255
              description: Worker's first name
              example: John
            last_name:
              type: string
              nullable: true
              maxLength: 255
              description: Worker's last name
              example: Doe
    MetaDataOfContractToCreate:
      type: object
      description: Additional custom info about a contract
      x-internal: true
      required:
        - documents_required
      properties:
        documents_required:
          type: boolean
          description: >-
            Require the contractor to upload necessary compliance documents as
            per their country’s labor laws.
        is_main_income:
          type: boolean
    CompensationDetailsOfContractToCreate_pay_as_you_go_time_based:
      x-internal: true
      type: object
      required:
        - amount
        - scale
      properties:
        amount:
          type: number
        scale:
          $ref: '#/components/schemas/WorkStatementScaleEnum'
    CompensationDetailsOfContractToCreate_ongoing_time_based:
      x-internal: true
      type: object
      required:
        - amount
        - scale
      properties:
        amount:
          type: number
        scale:
          $ref: '#/components/schemas/WorkStatementScaleEnum'
    CompensationDetailsOfContractToCreate_Shared:
      type: object
      x-internal: true
      required:
        - currency_code
        - frequency
        - cycle_end
        - cycle_end_type
        - payment_due_type
        - payment_due_days
      properties:
        amount:
          type: number
          description: >-
            Amount to be paid. This field can be excluded when creating a
            Pay-as-you-go task-based or Milestone contracts.
          example: 100
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        frequency:
          $ref: '#/components/schemas/WorkStatementCycleScaleEnum'
        cycle_end:
          type: number
          description: Date invoice cycle ends.
          minimum: 1
          maximum: 31
          example: 15
        cycle_end_type:
          $ref: '#/components/schemas/WorkStatementCycleEndTypeEnum'
        payment_due_type:
          $ref: '#/components/schemas/WorkStatementPaymentDueTypeEnum'
        payment_due_days:
          type: number
          minimum: 0
          maximum: 90
          example: 7
        pay_before_weekends:
          type: boolean
          description: If the payment due is on a weekend, pay on Friday.
          example: true
        first_payment_date:
          $ref: '#/components/schemas/DateString'
        first_payment:
          type: number
          description: First payment amount.
          default: 0
          minimum: 0
          example: 500
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
    EmployeeContractSignatureToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EmployeeContractSignatureToCreate'
    ContractSignatureToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractSignatureToCreate'
    SalaryFrequencyScaleEnum:
      type: string
      x-internal: true
      enum:
        - monthly
        - quarterly
        - annually
        - specific_month
        - specific_date
      description: Scale of the salary frequency.
      example: monthly
    EmployeeContractSignatureToCreate:
      type: object
      x-internal: true
      required:
        - signature
      properties:
        signature:
          type: string
          minLength: 2
          description: Signature of employee.
    ContractSignatureToCreate:
      type: object
      x-internal: true
      required:
        - client_signature
      properties:
        client_signature:
          type: string
          nullable: false
          minLength: 2
          description: Signature of client.
        contract_template_id:
          type: number
          nullable: true
          description: >-
            Please use null to use default Deel contract template; otherwise you
            can use the template you created and customized. If template ID is
            not in payload, template stays unchanged.
          example: 12345678
    ContractInvitationToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractInvitationToCreate'
    ContractInvitationToCreate:
      type: object
      x-internal: true
      required:
        - email
        - message
      properties:
        email:
          $ref: '#/components/schemas/EmailTypeRequired'
        message:
          type: string
          description: Message for the worker.
          nullable: false
          minLength: 1
    WorkStatementScaleEnumOptional:
      type: string
      x-internal: true
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - biweekly
        - semimonthly
        - custom
      description: >-
        Defines the scale at which the amount is paid. For example, enter
        'hourly' to define the amount per hour. This field can be excluded when
        creating a Pay-as-you-go task-based or Milestone contracts.
      example: daily
      nullable: true
    WorkStatementScaleEnum:
      type: string
      x-internal: true
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - biweekly
        - semimonthly
        - custom
      description: >-
        Defines the scale at which the amount is paid. For example, enter
        'hourly' to define the amount per hour. This field can be excluded when
        creating a Pay-as-you-go task-based or Milestone contracts.
      example: daily
    WorkStatementCycleScaleEnum:
      type: string
      x-internal: true
      enum:
        - weekly
        - monthly
        - biweekly
        - semimonthly
        - calendar-month
      description: Scale of the invoice cycle.
      example: monthly
    WorkStatementCycleEndTypeEnum:
      type: string
      x-internal: true
      enum:
        - DAY_OF_WEEK
        - DAY_OF_LAST_WEEK
        - DAY_OF_MONTH
      description: Cycle end can be weekly 1-7 (Monday = 1) or monthly 1-31.
      example: DAY_OF_WEEK
    WeekDaysEnum:
      type: string
      x-internal: true
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      description: Days of the week.
      example: Monday
    WorkStatementPaymentDueTypeEnum:
      type: string
      x-internal: true
      default: REGULAR
      enum:
        - REGULAR
        - WITHIN_MONTH
      description: >-
        Type of payment due. If the payment is due on the last day of month,
        enter 'WITHIN_MONTH'.
      example: REGULAR
    LegalEntityListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/LegalEntityList'
    LegalEntityList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicLegalEntity'
    BasicLegalEntity:
      type: object
      x-internal: true
      required:
        - id
        - name
        - entity_type
        - entity_subtype
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          nullable: false
        country:
          type: string
          nullable: false
        entity_type:
          $ref: '#/components/schemas/LegalEntityType'
        entity_subtype:
          $ref: '#/components/schemas/LegalEntitySubType'
    OrganizationListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OrganizationList'
    OrganizationList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicOrganization'
    BasicOrganization:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          nullable: false
          minLength: 1
    TeamListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TeamList'
    TeamList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicTeam'
    BasicTeam:
      type: object
      required:
        - id
        - name
      x-internal: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          nullable: false
          minLength: 1
    TimesheetListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/TimesheetList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursor'
      required:
        - data
        - page
    TimesheetList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicTimesheet'
    BasicTimesheet:
      type: object
      x-internal: true
      required:
        - id
        - type
        - status
        - description
        - date_submitted
        - created_at
        - currency_code
        - total_amount
        - quantity
        - contract
        - worksheet
        - reported_by
        - reviewed_by
        - attachment
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        type:
          type: string
          description: Deprecated - it is always "work"
        status:
          $ref: '#/components/schemas/TimesheetStatusEnum'
        description:
          type: string
          nullable: false
        date_submitted:
          $ref: '#/components/schemas/DateTimeStringRequired'
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        total_amount:
          type: string
          example: '200.0000'
          description: >-
            is equal to quantity times rate of active work statement + bonus in
            this record
          nullable: false
        quantity:
          type: number
          example: 1
          nullable: true
        created_at:
          type: string
          example: '2022-05-04T03:45:27.108Z'
          nullable: false
        scale:
          type: string
          example: custom
          nullable: true
        custom_scale:
          type: string
          nullable: true
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
        worksheet:
          type: object
          nullable: true
          required:
            - weeks
            - days
            - hours
            - minutes
          properties:
            weeks:
              type: number
              example: 0
              minimum: 0
            days:
              type: number
              example: 0
              minimum: 0
            hours:
              type: number
              example: 1
              minimum: 0
            minutes:
              type: number
              example: 0
              minimum: 0
        reviewed_by:
          type: object
          nullable: true
          required:
            - id
            - full_name
            - reviewed_at
            - remarks
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: Jane Smith
            reviewed_at:
              type: string
              example: '2022-05-04T03:45:27.899Z'
            remarks:
              type: string
              nullable: false
        contract:
          type: object
          required:
            - id
            - title
            - type
          properties:
            id:
              type: string
              nullable: false
            title:
              type: string
              nullable: false
            type:
              $ref: '#/components/schemas/ContractTypeEnum'
        payment_cycle:
          type: object
          properties:
            start_date:
              $ref: '#/components/schemas/DateTimeString'
            end_date:
              $ref: '#/components/schemas/DateTimeString'
        reported_by:
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: John Smith
              nullable: false
    TimesheetContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/Timesheet'
      required:
        - data
    Timesheet:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/BasicTimesheet'
        - $ref: '#/components/schemas/TimesheetApproversContainer'
    TimesheetApproversContainer:
      type: object
      x-internal: true
      required:
        - approvers
      properties:
        approvers:
          $ref: '#/components/schemas/TimesheetApproverList'
    TimesheetApproverList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/TimesheetApprover'
    TimesheetApprover:
      type: object
      x-internal: true
      required:
        - full_name
        - email
        - approved
      properties:
        full_name:
          type: string
        email:
          type: string
        approved:
          type: boolean
    TimesheetToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetToCreate'
    TimesheetToCreateContainerWithFile:
      allOf:
        - $ref: '#/components/schemas/TimesheetToCreateWithFile'
      x-internal: true
    TimesheetSharedProperties:
      type: object
      x-internal: true
      required:
        - contract_id
        - quantity
        - date_submitted
        - description
      description: >-
        Details of the timesheet to create. Both a client or a contractor may
        create a timesheet.
      properties:
        contract_id:
          type: string
          description: Id of a Deel contract.
          nullable: false
        description:
          type: string
          nullable: false
          default: ''
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        quantity:
          type: number
          minimum: 0.01
          nullable: false
          description: >-
            This is based on the scale of work statement of the associated
            contract
          example: 2
    TimesheetToCreate:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/TimesheetSharedProperties'
    TimesheetToCreateWithFile:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/TimesheetSharedProperties'
        - $ref: '#/components/schemas/FileObject'
    TimesheetToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetToUpdate'
    TimesheetToUpdate:
      type: object
      x-internal: true
      required:
        - quantity
        - description
      description: >-
        Details of the timesheet to update. Both a client or a contractor may
        update a timesheet.
      properties:
        description:
          type: string
          nullable: false
        quantity:
          type: number
          nullable: false
    TimesheetReviewsToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetReviewsToCreate'
    RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskReviewsByIdToCreate'
    RequestBodyToCreatePgoTaskReviewsReviewsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskReviewsToCreate'
    TimesheetReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
        ids:
          $ref: '#/components/schemas/TimesheetIdItems'
    GenericReportReviewCreatedContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/GenericReportReviewCreatedList'
      required:
        - data
    GenericReportReviewCreatedList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/GenericReportReviewCreated'
    GenericReportReviewCreated:
      type: object
      x-internal: true
      required:
        - status
        - id
      properties:
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    PgoTaskReviewsByIdToCreate:
      type: object
      x-internal: true
      required:
        - status
      properties:
        status:
          type: string
          description: Review status.
          example: approved
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          description: Review comments.
          example: Excited!
          nullable: true
    PgoTaskReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
      properties:
        status:
          type: string
          nullable: false
          description: Review status.
          example: approved
          enum:
            - approved
            - declined
        reason:
          type: string
          description: Additional comments with the reivew.
          nullable: true
          example: Great work.
        ids:
          type: array
          minItems: 1
          maxItems: 1000
          example:
            - 1234
            - 1235
          items:
            $ref: '#/components/schemas/UniqueObjectIdentifier'
            description: ID of an existing timesheet record
    TimesheetReviewToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetReviewToCreate'
    TimesheetReviewToCreate:
      type: object
      x-internal: true
      required:
        - status
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
    TimesheetSearchContainer:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        limit:
          type: string
          pattern: ^\d{1,5}$
          description: Return a page of results with given number of records.
          default: '10'
          maxLength: 5
          nullable: false
        offset:
          type: string
          pattern: ^\d{1,5}$
          maxLength: 5
          default: '10'
          nullable: false
        order_direction:
          $ref: '#/components/schemas/SortDirEnum'
        contract_id:
          type: string
          nullable: false
        invoice_id:
          type: string
          nullable: false
          pattern: ^\d+$
          maxLength: 10
        reporter_id:
          type: string
          nullable: false
          pattern: ^\d+$
          maxLength: 10
        contract_types:
          oneOf:
            - $ref: '#/components/schemas/ContractTypeEnumList'
            - $ref: '#/components/schemas/ContractTypeEnum'
        types:
          oneOf:
            - $ref: '#/components/schemas/TimesheetTypeEnumList'
            - $ref: '#/components/schemas/TimesheetTypeEnum'
        statuses:
          oneOf:
            - $ref: '#/components/schemas/TimesheetStatusEnumList'
            - $ref: '#/components/schemas/TimesheetStatusEnum'
        date_from:
          $ref: '#/components/schemas/DateString'
        date_to:
          $ref: '#/components/schemas/DateString'
    TimesheetAccountingRefs:
      type: array
      x-internal: true
      nullable: true
      items:
        type: object
        nullable: false
        required:
          - integration
        properties:
          integration:
            type: string
            nullable: false
          mapping_category:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                nullable: false
              name:
                type: string
                nullable: false
    InvoiceAdjustmentSearchContainer:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        limit:
          type: string
          pattern: ^\d{1,5}$
          description: Return a page of results with given number of records.
          default: '10'
          maxLength: 5
          nullable: false
        offset:
          type: string
          pattern: ^\d{1,5}$
          maxLength: 5
          default: '10'
          nullable: false
        order_direction:
          $ref: '#/components/schemas/SortDirEnum'
        contract_id:
          type: string
          nullable: false
        invoice_id:
          type: string
          nullable: false
        reporter_id:
          type: string
          nullable: false
        contract_types:
          oneOf:
            - $ref: '#/components/schemas/ContractTypeEnumList'
            - $ref: '#/components/schemas/ContractTypeEnum'
        types:
          oneOf:
            - $ref: '#/components/schemas/InvoiceAdjustmentTypeEnumList'
            - $ref: '#/components/schemas/InvoiceAdjustmentTypeEnum'
        statuses:
          oneOf:
            - $ref: '#/components/schemas/InvoiceAdjustmentStatusEnumList'
            - $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        date_from:
          $ref: '#/components/schemas/DateString'
        date_to:
          $ref: '#/components/schemas/DateString'
    InvoiceAdjustmentListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
      required:
        - data
        - page
    InvoiceAdjustmentAttachmentContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/AttachmentFileRef'
      required:
        - data
    InvoiceAdjustmentList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicInvoiceAdjustment'
    BasicInvoiceAdjustment:
      type: object
      x-internal: true
      required:
        - id
        - type
        - status
        - description
        - date_submitted
        - created_at
        - currency_code
        - quantity
        - total_amount
        - contract
        - worksheet
        - reported_by
        - reviewed_by
        - payment_cycle
        - attachment
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        type:
          $ref: '#/components/schemas/InvoiceAdjustmentTypeEnum'
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        description:
          type: string
          nullable: false
        date_submitted:
          $ref: '#/components/schemas/DateTimeStringRequired'
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        invoice_id:
          type: number
          nullable: true
        quantity:
          type: number
          example: 1
          nullable: true
        total_amount:
          type: string
          example: '200.0000'
          nullable: false
        created_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
        scale:
          type: string
          example: custom
          nullable: true
        custom_scale:
          type: string
          nullable: true
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
        worksheet:
          type: object
          nullable: true
          required:
            - weeks
            - days
            - hours
            - minutes
          properties:
            weeks:
              type: number
              example: 0
              minimum: 0
            days:
              type: number
              example: 0
              minimum: 0
            hours:
              type: number
              example: 1
              minimum: 0
            minutes:
              type: number
              example: 0
              minimum: 0
        reviewed_by:
          type: object
          nullable: true
          required:
            - id
            - full_name
            - reviewed_at
            - remarks
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: Jane Smith
            reviewed_at:
              type: string
              example: '2022-05-04T03:45:27.899Z'
            remarks:
              type: string
              nullable: false
        contract:
          type: object
          required:
            - id
            - title
            - type
          properties:
            id:
              type: string
              nullable: false
            title:
              type: string
              nullable: false
            type:
              $ref: '#/components/schemas/ContractTypeEnum'
        payment_cycle:
          type: object
          nullable: false
          required:
            - start_date
            - end_date
          properties:
            start_date:
              $ref: '#/components/schemas/DateTimeStringRequired'
            end_date:
              $ref: '#/components/schemas/DateTimeStringRequired'
        reported_by:
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: John Smith
              nullable: false
    InvoiceAdjustmentContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustment'
      required:
        - data
    InvoiceAdjustment:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/BasicInvoiceAdjustment'
        - $ref: '#/components/schemas/InvoiceAdjustmentApproversContainer'
    InvoiceAdjustmentApproversContainer:
      type: object
      x-internal: true
      required:
        - approvers
      properties:
        approvers:
          $ref: '#/components/schemas/InvoiceAdjustmentApproverList'
    InvoiceAdjustmentApproverList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/InvoiceAdjustmentApprover'
    InvoiceAdjustmentApprover:
      type: object
      x-internal: true
      required:
        - full_name
        - email
        - approved
      properties:
        full_name:
          type: string
        email:
          type: string
        approved:
          type: boolean
    InvoiceAdjustmentToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentToCreate'
    InvoiceAdjustmentToCreateWithFile:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/InvoiceAdjustmentToCreate'
        - $ref: '#/components/schemas/FileObject'
    InvoiceAdjustmentToCreate:
      type: object
      x-internal: true
      required:
        - contract_id
        - date_submitted
        - type
        - description
        - amount
      description: Details of invoice adjustment to create.
      properties:
        contract_id:
          type: string
          description: Id of a Deel contract.
          nullable: false
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        type:
          $ref: '#/components/schemas/InvoiceAdjustmentTypeToCreateEnum'
        amount:
          type: number
          nullable: false
          minimum: 0
          description: Amount to be paid. Must be a positive number.
          example: 2500
        description:
          description: Description of the adjustment.
          type: string
          maxLength: 30000
          example: Bonus for being awesome.
        paymentCycleId:
          type: number
          description: ID of an existing active payment cycle - required if type is "vat"
          nullable: true
    InvoiceAdjustmentCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentCreated'
    InvoiceAdjustmentCreated:
      type: object
      x-internal: true
      required:
        - created
      description: Details of invoice adjustment created.
      properties:
        created:
          type: boolean
          nullable: false
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: true
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
    InvoiceAdjustmentToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentToUpdate'
    InvoiceAdjustmentToUpdate:
      type: object
      x-internal: true
      required:
        - description
      description: Details of invoice adjustment to update.
      properties:
        description:
          type: string
          nullable: false
          maxLength: 30000
        amount:
          type: number
          minimum: 0
          nullable: false
    InvoiceAdjustmentReviewsToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentReviewsToCreate'
    InvoiceAdjustmentReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
        - reason
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: false
        ids:
          $ref: '#/components/schemas/TimesheetIdItems'
    TimesheetIdItems:
      type: array
      x-internal: true
      minItems: 1
      maxItems: 1000
      nullable: false
      items:
        oneOf:
          - type: number
          - type: string
        description: ID of an existing timesheet record
    InvoiceAdjustmentReviewToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentReviewToCreate'
    InvoiceAdjustmentReviewToCreate:
      type: object
      x-internal: true
      required:
        - status
        - reason
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: false
    GenericResultCreated:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - created
          properties:
            created:
              type: boolean
    GenericResultCreatedWithId:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - created
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            created:
              type: boolean
    ContractExternalIdPatchedResponseContainer:
      $ref: '#/components/schemas/ContractExternalIdToPatch'
    ContractExternalIdPatchedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractExternalIdToPatch'
    GenericResultUpdated:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - updated
          properties:
            updated:
              type: boolean
    GenericResultDeleted:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: boolean
              description: Confirms the deletion.
              nullable: false
    ContractTypeEnumList:
      type: array
      x-internal: true
      description: List of contract types
      items:
        $ref: '#/components/schemas/ContractTypeEnum'
    ContractTypeEnum:
      type: string
      x-internal: true
      description: Type of a contract
      enum:
        - ongoing_time_based
        - milestones
        - time_based
        - pay_as_you_go_time_based
        - commission
        - payg_milestones
        - payg_tasks
        - eor
        - unknown
        - employee
        - global_payroll
        - shield_msa
        - hris_direct_employee
    ContractTypeEnumForEstimate:
      type: string
      x-internal: true
      description: Type of a contract
      enum:
        - ongoing_time_based
        - payg_tasks
    AdjustmentStatusEnum:
      type: string
      x-internal: true
      description: Adjustment status
      enum:
        - open
        - pending_approval
        - overwritten
        - failed
        - success
    CandidateStatusEnum:
      type: string
      x-internal: true
      description: Offer status
      enum:
        - offer-accepted
        - offer-sent
        - offer-declined
        - offer-deleted
    ContractTypeEnumToCreate:
      type: string
      x-internal: true
      description: Type of a contract
      enum:
        - pay_as_you_go_time_based
        - payg_tasks
        - payg_milestones
    ContractStatusEnumList:
      type: array
      x-internal: true
      description: List of contract statuses
      items:
        $ref: '#/components/schemas/ContractStatusEnum'
    ContractStatusEnum:
      type: string
      x-internal: true
      description: Status of a contract in Deel workflow
      nullable: false
      enum:
        - new
        - under_review
        - waiting_for_employee_contract
        - waiting_for_client_sign
        - processing_payment
        - waiting_for_contractor_sign
        - waiting_for_eor_sign
        - waiting_for_employee_sign
        - awaiting_deposit_payment
        - in_progress
        - completed
        - cancelled
        - user_cancelled
        - rejected
        - waiting_for_client_payment
    ContractWhoReportsEnum:
      type: string
      x-internal: true
      enum:
        - both
        - client
        - contractor
      description: Flag to indicate who is supposed to provide regular reports
    ContractFirstSignEnum:
      type: string
      x-internal: true
      enum:
        - client
        - contractor
      description: Flag to indicate who is supposed to sign a contract
    ContractsSortByEnum:
      type: string
      x-internal: true
      enum:
        - contract_title
        - worker_name
    PeopleSortByEnum:
      type: string
      x-internal: true
      enum:
        - id
        - first_name
        - last_name
        - full_name
        - email
        - country
        - birth_date
        - hiring_type
        - start_date
        - team
        - job_title
        - hiring_status
        - completion_date
        - direct_manager
        - direct_reports_count
    ProfileTypeEnum:
      type: string
      x-internal: true
      enum:
        - client
        - contractor
        - icp
        - direct_employee
        - hris_direct_employee
        - service_account
    CountryListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CountryList'
    CountryList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Country'
    Country:
      type: object
      x-internal: true
      required:
        - code
        - name
        - visa_support
        - eor_support
        - state_type
        - states
      properties:
        code:
          $ref: '#/components/schemas/CountryCode'
        name:
          type: string
          description: Country name.
          nullable: false
          minLength: 1
          example: United States
        visa_support:
          type: boolean
          description: >-
            Identifies if Deel provides visa support for employees being hired
            in this country.
          nullable: false
        eor_support:
          type: boolean
          description: Identifies if Deel support EoR in this country.
          nullable: false
        state_type:
          type: string
          nullable: true
          example: state
          description: >-
            Identifies the type of sub-territory within a country where local
            laws may apply. Some countries may have states, provinces,
            prefectures or regions.
        states:
          type: array
          items:
            $ref: '#/components/schemas/StateOfCountry'
    StateOfCountry:
      type: object
      x-internal: true
      required:
        - code
        - name
      description: >-
        It may be called states, provinces, prefectures or regions, or none at
        all
      properties:
        code:
          type: string
          description: Territory code.
          nullable: false
          minLength: 1
          example: NY
        name:
          type: string
          description: Territory name.
          nullable: false
          minLength: 1
          example: New York
    CurrencyListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CurrencyList'
    CurrencyList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Currency'
    Currency:
      type: object
      x-internal: true
      required:
        - code
        - name
      properties:
        code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        name:
          type: string
          nullable: false
          minLength: 1
          example: Euro
    PaymentMethodEnumList:
      type: array
      description: filter invoices by payment method
      items:
        $ref: '#/components/schemas/PaymentMethodEnum'
    PaymentMethodEnum:
      type: string
      description: All the supported payment types
      nullable: false
      enum:
        - stripe_bacs_debit
        - pay_pal
        - stripe_card
        - bt_card
        - stripe_ach
        - coinbase
        - go_cardless
        - brex
        - stripe_sepa_debit
        - transferwise
        - go_cardless_becs
        - bank_transfer
        - mercury_wire
        - bt_pay_pal
    PaymentStatusEnumList:
      type: array
      items:
        $ref: '#/components/schemas/PaymentStatusEnum'
    PaymentStatusEnum:
      type: string
      description: status of payment
      enum:
        - paid
        - processing
    InvoiceStatusEnumList:
      type: array
      description: >-
        filter invoices by current status, show a invoice if its status is in
        this list
      items:
        $ref: '#/components/schemas/InvoiceStatusEnum'
    InvoiceStatusEnum:
      type: string
      description: Current status of the invoice.
      nullable: false
      enum:
        - pending
        - paid
        - processing
        - canceled
        - skipped
        - failed
        - refunded
      example: paid
    InvoiceTypeEnum:
      type: string
      description: invoice's type
      nullable: false
      enum:
        - PAYMENT
        - EOR_DEPOSIT
        - EOR_FIRST_PAYMENT
        - EOR_TERMINATION_OFFCYCLE
        - SIGNING_BONUS
        - REFUND_STATEMENT
        - EOR_TAX_RULING
        - GP_DEPOSIT_STATEMENT
        - GP_FUNDING_STATEMENT
        - GLOBAL_PAYROLL_FEES
        - SHIELD_DEPOSIT
        - EOR_MANAGEMENT_FEE
      example: GP_DEPOSIT_STATEMENT
    CountryCodeList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/CountryCode'
    CountryCode:
      type: string
      description: Country code.
      x-internal: true
      pattern: ^[A-Z]{2}$
      minLength: 2
      maxLength: 2
      example: US
    CountryCodeNulleable:
      type: string
      description: Country code.
      x-internal: true
      pattern: ^[A-Z]{2}$
      nullable: true
      minLength: 2
      maxLength: 2
      example: US
    CurrencyCodeList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/CurrencyCodeRequired'
    CurrencyCodeRequired:
      type: string
      x-internal: true
      pattern: ^[A-Z]{3}$
      minLength: 3
      maxLength: 3
      example: GBP
    CurrencyCode:
      type: string
      description: Currency code.
      x-internal: true
      pattern: ^[A-Z]{3}$
      nullable: false
      minLength: 3
      maxLength: 3
      example: GBP
    LegalEntityArray:
      type: array
      items:
        $ref: '#/components/schemas/LegalEntityType'
    LegalEntityType:
      type: string
      x-internal: true
      enum:
        - individual
        - company
    LegalEntitySubType:
      type: string
      x-internal: true
    JobTitleListContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          $ref: '#/components/schemas/JobTitleList'
        page:
          type: object
          required:
            - cursor
          properties:
            cursor:
              type: string
              description: >-
                Use for pagination to get next set of records after the given
                cursor.
              example: eyJvZmZzZXQiOjEwMCwibGltaXQiOjEwMCwiZmlsdGVyVHlwZSI6ImFsbCJ9
    JobTitleList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/JobTitle'
    JobTitle:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier for the job title in Deel platform.
        name:
          type: string
          description: Job title.
          nullable: false
          example: 3D Artist
    SeniorityListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/SeniorityList'
    SeniorityList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/SeniorityRequired'
    SeniorityRequired:
      description: Seniority describes level of expertise at a job e.g. junior
      type: object
      x-internal: true
      required:
        - id
        - name
        - level
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier for seniority record.
        name:
          type: string
          description: Name of seniority level e.g. Mid (Individual Contributor Level 2)
          nullable: false
          minLength: 1
          example: Mid (Individual Contributor Level 2)
        level:
          type: number
          description: Level of seniority level e.g. 2
          nullable: false
          example: 2
    Seniority:
      description: Seniority describes level of expertise at a job e.g. junior
      type: object
      x-internal: true
      nullable: true
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier for seniority record
        name:
          type: string
          description: Name of seniority level e.g. Mid (Individual Contributor Level 2)
          nullable: false
          minLength: 1
          example: Mid (Individual Contributor Level 2)
        level:
          type: number
          nullable: true
          description: Level of seniority level e.g. 2
          example: 2
    TimesheetTypeEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/TimesheetTypeEnum'
    TimesheetTypeEnum:
      type: string
      x-internal: true
      description: Type for timesheet
      enum:
        - work
    OffCyclePaymentTypeEnum:
      type: string
      x-internal: true
      description: Type for Off-cycle payments
      enum:
        - offcycle
    TimesheetStatusEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/TimesheetStatusEnum'
    TimesheetStatusEnum:
      type: string
      nullable: true
      x-internal: true
      description: Status of this entry.
      example: approved
      enum:
        - approved
        - declined
        - not_payable
        - paid
        - pending
        - processing
        - null
    InvoiceAdjustmentTypeEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/InvoiceAdjustmentTypeEnum'
    InvoiceAdjustmentTypeEnum:
      type: string
      x-internal: true
      description: Type of invoice adjustment.
      enum:
        - accrued_holiday
        - additional_fee
        - allowance
        - bonus
        - commission
        - deduction
        - deposit
        - deposit_refund
        - employer_cost
        - expense
        - health_allowance
        - health_benefit
        - health_insurance_fee
        - legal_fee
        - management_fee
        - milestone
        - offcycle
        - other
        - overtime
        - pension
        - pro_rata
        - setup_fee
        - severance
        - shield_service
        - signing_bonus
        - signing_bonus_employer_cost
        - refund
        - task
        - time_off
        - vat
        - withholding_tax
        - work
    InvoiceAdjustmentTypeToCreateEnum:
      type: string
      x-internal: true
      description: Type of invoice adjustment.
      enum:
        - bonus
        - commission
        - deduction
        - expense
        - other
        - overtime
        - time_off
        - vat
    InvoiceAdjustmentStatusEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
    InvoiceAdjustmentStatusEnum:
      type: string
      nullable: true
      x-internal: true
      description: status of invoice adjustment
      enum:
        - approved
        - declined
        - not_payable
        - paid
        - pending
        - processing
        - null
    SortDirEnum:
      type: string
      x-internal: true
      enum:
        - asc
        - desc
    HiringStatusEnum:
      type: string
      x-internal: true
      enum:
        - active
        - inactive
        - onboarding
    EmailTypeRequired:
      type: string
      description: Worker's email address.
      x-internal: true
      format: email
      minLength: 5
    WorkerEmailType:
      type: string
      description: Worker's email address.
      x-internal: true
      format: email
      minLength: 5
      nullable: true
    EmailType:
      type: string
      description: User's email address.
      x-internal: true
      format: email
      minLength: 5
      nullable: true
    NationalityType:
      type: string
      x-internal: true
      minLength: 2
      maxLength: 2
      example: US
    UrlTypeRequired:
      type: string
      x-internal: true
      format: uri
      nullable: false
      minLength: 5
    UrlType:
      type: string
      x-internal: true
      format: uri
      nullable: true
      minLength: 5
    PageInfo:
      type: object
      x-internal: true
      required:
        - cursor
        - total_rows
      properties:
        cursor:
          type: string
          nullable: false
        total_rows:
          type: number
          nullable: false
    PageInfoWithoutCursor:
      type: object
      x-internal: true
      required:
        - total_rows
      properties:
        total_rows:
          type: number
          nullable: false
    PageInfoWithoutCursorNew:
      type: object
      x-internal: true
      required:
        - total_rows
        - items_per_page
        - offset
      properties:
        total_rows:
          type: number
          nullable: false
        items_per_page:
          type: number
          nullable: false
          minimum: 1
          maximum: 99
        offset:
          type: number
          nullable: false
          minimum: 0
          maximum: 999999999
    PageInfoWithCursorNew:
      type: object
      x-internal: true
      required:
        - total_rows
        - items_per_page
        - offset
      properties:
        total_rows:
          type: number
          nullable: false
        items_per_page:
          type: number
          nullable: false
          minimum: 1
          maximum: 99
        offset:
          type: number
          nullable: false
          minimum: 0
          maximum: 999999999
        cursor:
          type: string
          description: >-
            Use for pagination to get next set of records after the given
            cursor.
          example: eyJvZmZzZXQiOjEwMCwibGltaXQiOjEwMCwiZmlsdGVyVHlwZSI6ImFsbCJ9
    MilestoneContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Milestone'
    MilestoneToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneToCreate'
    MilestoneToCreateFormWithFile:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/MilestoneProperties'
        - $ref: '#/components/schemas/FileObject'
    MilestoneToCreate:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/MilestoneProperties'
    MilestoneProperties:
      type: object
      x-internal: true
      nullable: false
      required:
        - amount
        - title
        - description
      properties:
        amount:
          type: string
          nullable: false
          description: Amount to be paid for the milestone.
          example: '900.00'
        title:
          type: string
          nullable: false
          description: Title of milestone.
          example: Sprint 2
        description:
          type: string
          nullable: false
          description: Description of milestone.
          example: 'Sprint #2'
    MilestoneListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneList'
    MilestoneList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Milestone'
    Milestone:
      type: object
      x-internal: true
      nullable: false
      required:
        - amount
        - approval_requested
        - reviewed_by
        - reported_by
        - id
        - title
        - description
        - status
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier for the milestone.
        amount:
          type: string
          description: Amount to be paid for the milestone.
          example: '900.00'
        approval_requested:
          type: boolean
          description: >-
            Indicates if the contractor has requested the approval for the
            milestone.
          example: false
        reviewed_by:
          type: object
          description: Reviewer's information.
          nullable: true
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              description: Reviewer's unique Deel id.
            full_name:
              description: Reviewer's full name.
              type: string
              nullable: false
              example: Jane Doe
        reported_by:
          type: object
          description: Milestone creator.
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              description: Reporter's unique Deel id.
            full_name:
              type: string
              description: Reporter's full name.
              nullable: false
              example: Jane Doe
        title:
          type: string
          description: Title of milestone.
          nullable: false
          example: Sprint 1
        description:
          type: string
          description: Description of milestone.
          nullable: false
          example: 'Sprint #1'
        status:
          type: string
          description: Current status of milestone.
          nullable: false
          example: pending
        created_at:
          $ref: '#/components/schemas/DateTimeString'
    MilestoneReviewsToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneReviewsToCreate'
    MilestoneReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
        ids:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            type: number
            nullable: false
            description: ID of an existing milestone record
    MilestoneReviewToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneReviewToCreate'
    MilestoneReviewToCreate:
      type: object
      x-internal: true
      required:
        - status
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
    OffCyclePaymentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OffCyclePayment'
    OffCyclePaymentToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OffCyclePaymentToCreate'
    EstimateFirstPaymentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EstimateFirstPayment'
    OffCyclePaymentToCreate:
      type: object
      x-internal: true
      nullable: false
      required:
        - date_submitted
        - amount
      description: Details of invoice adjustment to create.
      properties:
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        amount:
          type: number
          nullable: false
          description: Amount to be paid. Must be a positive number.
          minimum: 0
          example: 2500
        description:
          type: string
          nullable: false
          description: Description of off-cycle payment.
    EstimateFirstPayment:
      type: object
      description: Details of pro rata payment to create.
      x-internal: true
      nullable: false
      required:
        - start_date
        - country_code
        - type
        - compensation_details
      properties:
        type:
          $ref: '#/components/schemas/ContractTypeEnumForEstimate'
        country_code:
          $ref: '#/components/schemas/CountryCode'
        start_date:
          $ref: '#/components/schemas/DateStringRequired'
        compensation_details:
          type: object
          properties:
            amount:
              type: number
              nullable: false
              description: Amount to be paid. Must be a positive number.
              minimum: 0
              example: 2500
            currency_code:
              $ref: '#/components/schemas/CurrencyCodeRequired'
            scale:
              $ref: '#/components/schemas/WorkStatementCycleScaleEnum'
            cycle_end:
              type: number
              description: Date invoice cycle ends.
              minimum: 1
              maximum: 31
            cycle_end_type:
              $ref: '#/components/schemas/WorkStatementCycleEndTypeEnum'
            payment_due_type:
              $ref: '#/components/schemas/WorkStatementPaymentDueTypeEnum'
            payment_due_days:
              type: number
              minimum: 0
              maximum: 90
              nullable: false
            calculation_type:
              type: string
              enum:
                - CUSTOM_AMOUNT
                - WORK_DAYS
                - CALENDAR_DAYS
                - FULL_AMOUNT
              description: Either works days or calendar days
              nullable: false
            work_week_start:
              $ref: '#/components/schemas/WeekDaysEnum'
            work_week_end:
              $ref: '#/components/schemas/WeekDaysEnum'
    ProRata:
      type: object
      description: Details of the pro rata for the first payment
      x-internal: true
      nullable: false
      properties:
        calculation_type:
          type: string
          enum:
            - CUSTOM_AMOUNT
            - WORK_DAYS
            - CALENDAR_DAYS
            - FULL_AMOUNT
          description: Either works days or calendar days
          nullable: false
        rate:
          type: number
          nullable: false
          description: Rate to be paid.
          minimum: 0
          example: 2500
        daily_rate:
          type: number
          nullable: false
          description: Daily rate to be paid.
          minimum: 0
          example: 2500
        total:
          type: number
          nullable: false
          description: Total to be paid.
          minimum: 0
          example: 2500
        cycle_work_days:
          type: number
          nullable: false
          description: Total days to be work.
          minimum: 0
          example: 11
        work_week_start:
          $ref: '#/components/schemas/WeekDaysEnum'
        work_week_end:
          $ref: '#/components/schemas/WeekDaysEnum'
        cycle_start:
          $ref: '#/components/schemas/DateStringRequired'
        cycle_end:
          $ref: '#/components/schemas/DateStringRequired'
    FirstPaymentDate:
      type: object
      description: First payment date
      x-internal: true
      nullable: false
      properties:
        due:
          $ref: '#/components/schemas/DateStringRequired'
    OffCyclePaymentListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OffCyclePaymentList'
    OffCyclePaymentList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/OffCyclePayment'
    OffCyclePayment:
      type: object
      x-internal: true
      nullable: false
      required:
        - id
        - status
        - description
        - date_submitted
        - created_at
        - currency_code
        - amount
        - reported_by
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        description:
          type: string
          nullable: false
          description: Description of the off-cycle payment entry.
          example: Yearly bonus.
        date_submitted:
          $ref: '#/components/schemas/DateTimeStringRequired'
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        amount:
          type: string
          description: Amount of off-cycle payment.
          example: '200.00'
          nullable: false
        created_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
        reported_by:
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              description: Profile id of the creator.
            full_name:
              type: string
              description: Full name of the creator.
              example: John Smith
              nullable: false
    Payslips:
      type: object
      x-internal: true
      required:
        - id
        - from
        - to
        - status
      properties:
        id:
          type: string
          description: Unique identifier for the payslip.
          example: 9K1rw5vwkZX2
        from:
          format: date-time
          description: Start date of the payslip.
          example: '2023-08-01T00:00:00.000Z'
        to:
          format: date-time
          description: End date of the payslip.
          example: '2023-08-31T00:00:00.000Z'
        status:
          type: string
          description: Status of the payslip.
          example: PUBLISHED
    BankAccountGuide:
      type: object
      x-internal: true
      required:
        - key
        - required
      properties:
        key:
          type: string
          description: The key of the field.
          example: countryCode
        label:
          type: string
          description: Label for this field.
          example: Country
        required:
          type: boolean
          description: Whether the field is required or not.
          example: true
        values_allowed:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountValueAllowed'
        validations:
          type: array
          items:
            $ref: '#/components/schemas/ValidationType'
        type:
          type: string
          description: Type of the field
          example: text
    EmployeePayslipsList:
      type: object
      x-internal: true
      required:
        - id
        - from
        - to
        - filename
        - status
        - rejected_at
        - reject_reason
        - uploaded_at
        - published_at
        - schedule_publishing_date
        - created_at
        - updated_at
        - url
      properties:
        id:
          type: string
          example: 9K1rw5vwkZX2
        from:
          type: string
          format: date-time
          example: '2023-08-01T00:00:00.000Z'
        to:
          type: string
          format: date-time
          example: '2023-08-31T00:00:00.000Z'
        filename:
          type: string
          example: payslip_demo.pdf
        status:
          type: string
          example: PUBLISHED
        rejected_at:
          type: string
          format: date-time
          example: '2023-08-29T00:00:00.000Z'
        reject_reason:
          type: string
          example: Something wrong
        uploaded_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.464Z'
        published_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        schedule_publishing_date:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        created_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        url:
          type: string
          example: http://example.com/file.pdf
    EmployeeTaxDocumentsList:
      type: object
      x-internal: true
      properties:
        year:
          type: number
          example: 2023
        type:
          type: string
          example: Tax Document
        country:
          type: string
          example: IL
        id:
          type: string
          example: 9AmobdjMwXOq
        url:
          type: string
          example: https://example.com/file.pdf
    ValidationType:
      type: object
      x-internal: true
      properties:
        type:
          $ref: '#/components/schemas/ValidationTypeEnum'
          description: Validation type.
        value:
          oneOf:
            - type: string
            - type: number
          description: Validation value.
          example: 2
    ValidationTypeEnum:
      type: string
      enum:
        - MIN_LENGTH
        - MAX_LENGTH
        - REGEXP
    BankAccountValueAllowed:
      x-internal: true
      type: object
      properties:
        value:
          type: string
          description: The key of the allowed value.
          example: AR
        label:
          type: string
          description: The name of the allowed value.
          example: Argentina
    FileAttachmentInfo:
      type: object
      nullable: true
      required:
        - filename
        - key
      x-internal: true
      description: This object is used for linking file attachments to your records.
      properties:
        filename:
          type: string
          nullable: false
          description: Original filename you used to upload using attachments end-point.
        key:
          type: string
          nullable: false
          description: >-
            You can call attachments end-point, get key and URL to upload your
            file.
    FileObject:
      type: object
      description: This is the file you will upload in a multi-part form.
      x-internal: true
      properties:
        file:
          description: Upload the file you want to attach to this entry.
          type: string
          nullable: false
          format: binary
    FileRefTypeEnum:
      type: string
      description: type of files allowed when uploading attachments
      nullable: false
      minLength: 5
      x-internal: true
      enum:
        - application/pdf
        - text/csv
        - text/plain
        - image/jpeg
        - image/png
    InputToCreateFileRef:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - content_type
          properties:
            content_type:
              $ref: '#/components/schemas/FileRefTypeEnum'
    OutputToCreateFileRef:
      type: object
      required:
        - key
        - url
      x-internal: true
      properties:
        key:
          type: string
          nullable: false
        url:
          type: string
          nullable: false
    AttachmentFileRef:
      type: object
      required:
        - url
      x-internal: true
      properties:
        url:
          type: string
          description: File URL to download the attachment.
          nullable: false
    OutputToCreateFileRefContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OutputToCreateFileRef'
    InputToPatchContractExternalId:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractExternalIdToPatch'
    InputToCreatePgoTask:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskToCreate'
    InputToDeletePgoTask:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskToDelete'
    ContractExternalIdToPatch:
      type: object
      required:
        - external_id
      properties:
        external_id:
          type: string
          nullable: false
          description: A unique identifier for the object provided by an external system.
    PgoTaskToCreate:
      type: object
      x-internal: true
      required:
        - amount
        - date_submitted
        - description
      properties:
        amount:
          type: string
          nullable: false
          minLength: 1
          description: Fixed rate for this task.
          example: '123.45'
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        description:
          type: string
          nullable: true
          description: Task description.
          example: Make the button pop.
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
    PgoTask:
      type: object
      x-internal: true
      required:
        - id
        - amount
        - date_submitted
        - description
        - status
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier of the task.
        amount:
          type: string
          nullable: false
          description: Fixed rate for this task.
          example: '200'
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        description:
          type: string
          nullable: false
          description: Task description.
          example: Make the button pop.
        status:
          $ref: '#/components/schemas/TimesheetStatusEnum'
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
    PgoTaskToDelete:
      type: object
      x-internal: true
      properties:
        description:
          type: string
          nullable: true
          description: Description of exclusion.
        delete_recurring_report:
          type: boolean
          nullable: true
          description: Request to delete recurring report.
    TaskListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TaskList'
    TaskList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/PgoTask'
    TaskCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TaskCreated'
    TaskCreated:
      type: object
      x-internal: true
      properties:
        created:
          type: boolean
          description: Whether the creation operation was successful.
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        status:
          $ref: '#/components/schemas/TimesheetStatusEnum'
    AgreementsSearchForm:
      type: object
      x-internal: true
      description: >-
        Convenient model to encapsulate query parameters to get a list of
        agreements.
      properties:
        contract_id:
          type: string
          nullable: false
        limit:
          $ref: '#/components/schemas/AgreementsParamLimit'
        offset:
          $ref: '#/components/schemas/AgreementsParamOffset'
    AgreementsParamLimit:
      type: string
      x-internal: true
      description: >-
        Maximum number of records to return. This is supposed to be an integer
        but query parameters are string. Maximum is 50.
      default: '50'
    AgreementsParamOffset:
      type: string
      x-internal: true
      description: >-
        Offset/index of record for the next page of records to return. This is
        supposed to be an integer but query parameters are string.
      default: '0'
    AgreementListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AgreementList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursor'
    AgreementList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Agreement'
    Agreement:
      type: object
      x-internal: true
      required:
        - id
        - agreement_title
        - agreement_type
        - msa
        - client_legal_entity
        - provider_legal_entity
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: false
        agreement_title:
          type: string
          nullable: false
        agreement_type:
          type: string
          nullable: false
          example: shield
        msa:
          type: object
          required:
            - id
            - title
          properties:
            id:
              type: string
              nullable: false
            title:
              type: string
              nullable: false
        client_legal_entity:
          type: object
          required:
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              nullable: false
            name:
              type: string
              nullable: false
        provider_legal_entity:
          type: object
          required:
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              nullable: false
            name:
              type: string
              nullable: false
              example: Deel Inc.
    InputToShieldContract:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          x-internal: false
          nullable: false
          required:
            - agreement_id
          properties:
            agreement_id:
              type: number
              nullable: false
              description: MSA contract id (agreement).
    PremiumToAddContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PremiumToAdd'
    PremiumToAdd:
      type: object
      x-internal: true
      nullable: false
      required:
        - agreement_reflects_relation
        - contractor_characteristics
      properties:
        agreement_reflects_relation:
          type: boolean
          enum:
            - true
            - false
          nullable: false
          description: >-
            Is the Contractor Agreement selected on the Deel Platform perfectly
            reflecting your organizations relation and actual working practices
            with the contractor?
          example: true
        contractor_characteristics:
          type: boolean
          enum:
            - true
            - false
          nullable: false
          description: >-
            Workers doing certain jobs may be considered to be employees by law,
            even if they would otherwise be considered independent contractors
            under common law. Is the work of this worker characterized as:
            Apprentice, Trainee, Labourer, Driver, Medical worker, Legal worker,
            Construction worker or someone working in the fields of
            Finance/Investment?
          example: false
    PremiumResultAddedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PremiumResultAdded'
    EorEntitlementsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorEntitlements'
    EorTimeoffsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorTimeoffs'
    EorTimeoffsItemContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorTimeoffsItem'
    EorClientTimeoffsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorClientTimeoffs'
    EmployeeTimeoffsContainer:
      type: object
      x-internal: true
      properties:
        data:
          description: List of employee time offs.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeoffsItem'
    EmployeeTimeoffsCreationContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EmployeeTimeoffsItemResponse'
    EmployeeTimeoffsEntitlementsContainer:
      type: object
      required:
        - data
      x-internal: true
      properties:
        data:
          description: List of employee time offs entitlements.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeoffsEntitlementsItem'
    EmployeeTimeoffsPoliciesContainer:
      type: object
      required:
        - data
      x-internal: true
      properties:
        data:
          description: List of employee time offs policies.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeoffsPoliciesItem'
    EmployeeTimeoffsPoliciesItem:
      type: object
      required:
        - id
        - type
        - name
        - description
        - unit_amount
        - used
        - tracking_start_date
        - tracking_end_date
        - entitlement
      properties:
        id:
          type: string
          description: Unique identifier for the time off policy.
          example: 9K1rw5vwkZX2
        type:
          type: string
          description: Type of time off policy.
          example: VACATION
        name:
          type: string
          description: Name of the time off policy.
          example: Vacation
        description:
          type: string
          description: Description of the time off policy.
          example: Vacation policy
        unit_amount:
          type: number
          description: Unit amount of the time off policy.
          example: 20
        used:
          type: number
          nullable: true
          description: Used time off policy.
          example: 10
        tracking_start_date:
          format: date-time
          nullable: true
          description: Start date of the time off policy.
          example: '2023-08-01T00:00:00.000Z'
        tracking_end_date:
          nullable: true
          format: date-time
          description: End date of the time off policy.
          example: '2023-08-31T00:00:00.000Z'
        entitlement:
          type: object
          properties:
            accrual_amount:
              nullable: true
              type: string
              description: Accrual amount of the time off policy.
              example: 0
            accrual_unit:
              nullable: true
              type: string
              description: Accrual unit of the time off policy.
              example: BUSINESS_DAY
            total:
              nullable: true
              description: Total time off policy.
              example: 20
            unit_amount:
              nullable: true
              description: Unit amount of the time off policy.
              example: 20
            unit:
              nullable: true
              type: string
              description: Unit of the time off policy.
              example: CALENDAR_DAY
            accrued:
              nullable: true
              type: string
              description: Accrued time off policy.
              example: '2.55'
    EmployeeTimeoffsEntitlementsItem:
      type: object
      required:
        - year
        - tracking_period
        - vacation_allowed
        - vacation_rollover
        - vacation_expired
        - vacation_payout
        - vacation_requested
        - vacation_approved
        - vacation_used
        - vacation_total
        - sick_leave_requested
        - sick_leave_approved
        - sick_leave_used
        - sick_leave_total
        - sick_leave_allowed
        - other_leave_requested
        - other_leave_approved
        - other_leave_used
        - other_leave_total
      properties:
        year:
          type: number
          example: 2023
        tracking_period:
          type: string
          example: '2023-01-01T00:00:00.000Z'
        vacation_allowed:
          type: string
          example: '0.00'
        vacation_rollover:
          type: string
          example: '0.00'
        vacation_expired:
          type: string
          example: '0.00'
        vacation_payout:
          type: string
          example: '0.00'
        vacation_requested:
          type: string
          example: '0.00'
        vacation_approved:
          type: string
          example: '0.00'
        vacation_used:
          type: string
          example: '7.00'
        vacation_total:
          type: string
          example: '7.00'
        sick_leave_requested:
          type: string
          example: '0.00'
        sick_leave_approved:
          type: string
          example: '0.00'
        sick_leave_used:
          type: string
          example: '0.00'
        sick_leave_total:
          type: string
          example: '0.00'
        sick_leave_allowed:
          type: string
          example: '395.00'
        other_leave_requested:
          type: string
          example: '0.00'
        other_leave_approved:
          type: string
          example: '0.00'
        other_leave_used:
          type: string
          example: '0.00'
        other_leave_total:
          type: string
          example: '0.00'
    FinalPaymentCalculatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/FinalPaymentCalculated'
    FinalPaymentCalculated:
      type: object
      x-internal: true
      required:
        - daily_rate
        - total
        - remaining_days
        - last_cycle
        - calculation_type
        - workweek_start
        - workweek_end
      properties:
        daily_rate:
          type: string
          nullable: false
          description: The daily rate paid.
          example: '5.8571'
        total:
          type: string
          nullable: false
          description: Total amount to pay.
          example: '5.8571'
        remaining_days:
          type: string
          nullable: false
          description: Dais remaining to end the contract.
          example: '5.8571'
        last_cycle:
          description: The last payment cycle.
          properties:
            start:
              $ref: '#/components/schemas/DateTimeStringRequired'
            end:
              $ref: '#/components/schemas/DateTimeStringRequired'
            completion_date:
              $ref: '#/components/schemas/DateTimeStringRequired'
        calculation_type:
          type: string
          enum:
            - CUSTOM_AMOUNT
            - WORK_DAYS
            - CALENDAR_DAYS
            - FULL_AMOUNT
          description: Either works days or calendar days
          nullable: false
        workweek_start:
          type: number
          default: 1
          description: The day the work week starts, 0 to 6
          nullable: false
        workweek_end:
          type: number
          default: 5
          description: The day the work week starts, 0 to 6
          nullable: false
    PremiumResultAdded:
      type: object
      x-internal: true
      required:
        - id
        - calculated_premium
        - misclassification_guarantee
        - penalties
        - third_party_liabilities
      properties:
        id:
          type: string
          nullable: false
          description: Deel Premium plan id.
          example: d3f79ad9-b0b5-4e0d-af2e-ad84435c0acb
        calculated_premium:
          type: number
          description: Cost for Deel Premium.
          nullable: false
          example: 50
        misclassification_guarantee:
          type: object
          nullable: false
          properties:
            name:
              type: string
              nullable: false
              description: Legal costs.
            description:
              type: string
              nullable: false
              description: Cover your legal defense costs.
        penalties:
          type: object
          nullable: false
          properties:
            name:
              type: string
              nullable: false
              description: Penalties.
            description:
              type: string
              nullable: false
              description: >-
                Get indemnity against tax authority penalties, liabilities and
                fines.
        third_party_liabilities:
          type: object
          nullable: false
          properties:
            name:
              type: string
              nullable: false
              description: Third-party liabilities.
            description:
              type: string
              nullable: false
              description: >-
                Get indemnity against third parties up to $10k depending on the
                court's decision.
    EorEntitlements:
      type: object
      description: Time-off Entitlements for EOR contracts.
      required:
        - entitlements
      properties:
        entitlements:
          description: List of entitlements.
          type: array
          items:
            $ref: '#/components/schemas/EorEntitlementListItem'
    EorEntitlementListItem:
      type: object
      description: Entitlement Item for a given year.
      properties:
        year:
          type: number
          example: 2022
        vacation_allowed:
          type: string
          description: Minimum vacation allowed.
          example: '16'
        sick_leave_allowed:
          type: string
          description: Maximum sick leave allowed.
          example: '16'
        vacation_requested:
          type: string
          description: Vacation days requested by the employee.
          example: '5'
        vacation_approved:
          type: string
          description: Vacation days approved.
          example: '5'
        vacation_used:
          type: string
          description: Vacation days used by the employee.
          example: '5'
        vacation_total:
          type: string
          description: Total number of vacation days requested, approved and used.
          example: '5'
        sick_leave_requested:
          type: string
          description: Sick days requested by the employee.
          example: '5'
        sick_leave_approved:
          type: string
          description: Sick days approved.
          example: '5'
        sick_leave_used:
          type: string
          description: Sick days used by the employee.
          example: '5'
        sick_leave_total:
          type: string
          description: Total number of sick days requested, approved and used.
          example: '5'
        other_leave_requested:
          type: string
          description: Other type of time off requested by the employee.
          example: '5'
        other_leave_approved:
          type: string
          description: Other type of time off days approved.
          example: '5'
        other_leave_used:
          type: string
          description: Other type of time off days used by the employee.
          example: '5'
        other_leave_total:
          type: string
          description: >-
            Total number of other type of time off days requested, approved and
            used.
          example: '5'
        rollover_type:
          allOf:
            - $ref: '#/components/schemas/EorHolidaysRolloverType'
          example: EXPIRATION
        max_rollover_yearly:
          type: string
          format: nullable
          example: '3'
    EorHolidaysRolloverType:
      type: string
      enum:
        - EXPIRATION
        - PAY_OUT
        - UNLIMITED_ROLLOVER
        - LIMITED_ROLLOVER
        - UNSET
    ContractToTerminateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToTerminate'
    ContractToTerminate:
      type: object
      x-internal: true
      properties:
        completion_date:
          $ref: '#/components/schemas/DateString'
        terminate_now:
          type: boolean
        message:
          type: string
          nullable: false
          description: A message for the termination
    ContractTerminationResultContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractTerminationResult'
    ContractTerminationResult:
      type: object
      x-internal: true
      properties:
        id:
          type: string
          nullable: false
          description: Deel Contract ID.
        completion_date:
          allOf:
            - $ref: '#/components/schemas/DateString'
          description: Date the contract is marked for completion
    ContractTemplateListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/ContractTemplateList'
    ContractTemplateList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/ContractTemplateSummary'
    ContractTemplateSummary:
      type: object
      x-internal: true
      required:
        - id
        - title
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier of a contract template
        title:
          type: string
          nullable: false
          description: Title of a contract template
          example: UK Employment Contract 2022.
    ContractTemplate:
      type: object
      description: Contract template details.
      nullable: true
      x-internal: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier of a contract template
        title:
          type: string
          description: Title of a contract template
          example: UK Employment Contract 2022.
    NoticePeriod:
      type: number
      description: Days before to notice the termination of contract for eather party.
      default: 0
      minimum: 0
      example: 15
    PeopleCustomField:
      type: object
      description: Customized attributes on people (Job title, Project code, etc).
      properties:
        name:
          type: string
          nullable: false
          description: Custom field property name.
          example: Job title
        value:
          type: string
          nullable: false
          description: Custom field property value.
          example: Software Engineer II
    ContractCustomField:
      type: object
      description: Customized attributes on contracts (Employee ID, Project code, etc).
      properties:
        name:
          type: string
          nullable: false
          description: Custom field property name.
          example: Employee ID
        value:
          type: string
          nullable: false
          description: Custom field property value.
          example: '54234'
    EorCountryValidationsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorCountryValidations'
    GPContractToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPContractToCreate'
    GPEmployeePTOToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeePTOUpdateData'
    GPEmployeeInformationToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeInformationUpdateData'
    GPEmployeeInformationUpdatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeInformationUpdateData'
    GPPayslipDownloadUrlContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayslipDownloadUrl'
    GPPayrollEventReportContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPPayrollEventReports'
    GlobalPayrollG2NReportContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GlobalPayrollG2NReport'
    EORPayslipDownloadUrlContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayslipDownloadUrl'
    EORContractBenefitsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EORContractBenefits'
    GPContractCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPContractCreated'
    EorContractToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorContractToCreate'
    EorEmployeeCostCalculationRequestBodyContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorEmployeeCostCalculationRequestBody'
    EorContractCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorContractCreated'
    EorEmployeeCostCalculationResponseContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorEmployeeCostCalculationResponse'
    GPEmployeeCompensationToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeCompensationUpdateData'
    GPEmployeeCompensationUpdateData:
      type: object
      required:
        - scale
        - salary
        - effective_date
      properties:
        scale:
          $ref: '#/components/schemas/GPContractSalaryScaleEnum'
        salary:
          type: number
          description: Compensation salary.
          example: 50000
        effective_date:
          $ref: '#/components/schemas/DateStringRequired'
    GPEmployeeCompensationUpdatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeCompensationUpdated'
    GPEmployeeCompensationUpdated:
      type: array
      items:
        type: object
        properties:
          status:
            $ref: '#/components/schemas/GPContractSalaryStatusEnum'
          scale:
            $ref: '#/components/schemas/GPContractSalaryScaleEnum'
          salary:
            type: number
            description: Compensation salary.
            example: 50000
          effective_date:
            $ref: '#/components/schemas/DateStringRequired'
    GPEmployeeAddressToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeAddressUpdateData'
    AddWorkerBankAccountContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/WorkerBankAccountToAdd'
    WorkerTerminationBodyContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/WorkerTerminationBody'
    GPEmployeePTOUpdateData:
      type: object
      required:
        - accrual_start_date
        - yearly_allowance
      properties:
        accrual_start_date:
          $ref: '#/components/schemas/DateStringRequired'
          description: Date when the employee starts to accrue PTO.
        yearly_allowance:
          type: string
          description: Enter the number of holidays.
          example: '15'
    GPEmployeeInformationUpdateData:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the employee.
          example: Jane
        middle_name:
          type: string
          description: Middle name of the employee.
          example: Jay
        last_name:
          type: string
          description: Last name of the employee.
          example: Doe
        date_of_birth:
          $ref: '#/components/schemas/DateString'
        gender:
          type: string
          description: Employee's gender.
        marital_status:
          $ref: '#/components/schemas/MaritalStatusEnum'
          example: Single
        employee_number:
          type: string
          description: Employee's number.
    PayslipDownloadUrl:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          example: >-
            https://s3.eu-west-1.amazonaws.com/api-dev-eks.letsdeel.com/employee_payslips/ApdZbLvq0r0E_Payslip_Kulvear_Bowie_2023-12-31.pdf?AWSAccessKeyId=ASIATHF2L5PZ545TTFF7&Expires=1698149134&Signature=DmqwQiXY%2FHmPS%2FYBcB2DOZ9SDVA%3D&x-amz-security-token=zxc
    EORContractBenefits:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: Unique identifier of the benefit.
            example: e2e09831-853d-4f56-b43f-2ec19cda7b0c
          name:
            type: string
            description: Name of the benefit.
            example: Health Insurance
          provider:
            type: object
            properties:
              name:
                type: string
                description: Name of the provider.
                example: Provider name
          offer_status:
            type: string
            enum:
              - Offered
              - Not offered
            description: Status of the offer.
            example: Offered
          plan:
            type: object
            properties:
              name:
                type: string
                description: Name of the plan.
                example: Gold
          enrollment_details:
            type: object
            properties:
              status:
                type: string
                description: Status of the enrollment.
                example: Enrolled
              plan:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the plan.
                    example: Gold
              standard:
                type: object
                properties:
                  monthly_cost:
                    nullable: true
                    type: string
                    description: Standard monthly cost.
                    example: '100'
                  monthly_contribution:
                    nullable: true
                    type: string
                    description: Standard monthly contribution.
                    example: '50'
              current:
                type: object
                properties:
                  monthly_cost:
                    type: string
                    description: Current monthly cost.
                    example: '100'
                  monthly_contribution:
                    type: string
                    description: Current monthly contribution.
                    example: '50'
    GPPayrollEventReports:
      type: array
      items:
        type: object
        required:
          - id
          - status
          - start_date
          - end_date
          - lock_date
        properties:
          id:
            type: string
            example: clqmd5qb07xwevi01cd5kb6kw
          status:
            type: string
            example: OPEN
          start_date:
            $ref: '#/components/schemas/DateTimeStringRequired'
          lock_date:
            $ref: '#/components/schemas/DateTimeStringRequired'
          end_date:
            $ref: '#/components/schemas/DateTimeStringRequired'
    GlobalPayrollG2NReport:
      type: object
      properties:
        net_pay:
          type: string
          nullable: true
        ee_loans:
          type: string
          nullable: true
        contract_id:
          type: string
        annual_bonus:
          type: number
          nullable: true
        car_allowance:
          type: number
          nullable: true
        esp_deduction:
          type: number
          nullable: true
        employee_name:
          type: string
          nullable: true
        employer_cost:
          type: string
          nullable: true
        funding_amount:
          type: number
          nullable: true
        home_allowance:
          type: string
          nullable: true
        ee_income_tax:
          type: string
          nullable: true
        employee_number:
          type: number
          nullable: true
        backdated_salary:
          type: string
          nullable: true
        employer_contribution:
          type: string
          nullable: true
        er_occupational_risk:
          type: string
          nullable: true
        employment_status_tag_internal:
          type: string
          nullable: true
        employee_job_title:
          type: string
          nullable: true
        employee_division:
          type: string
          nullable: true
        employee_department:
          type: string
          nullable: true
        pension_contribution:
          type: number
          nullable: true
        cost_center:
          type: string
          nullable: true
    MaritalStatusEnum:
      type: string
      x-internal: true
      enum:
        - Single
        - Married
        - Widowed
        - Divorced
        - Separated
        - Registered Partnership
        - Common Law
    GPEmployeeAddressUpdateData:
      type: object
      properties:
        city:
          type: string
          description: City name.
          example: London
        street:
          type: string
          description: Street name.
          example: 123 Deel Street
        zip:
          type: string
          description: Zip code.
          example: '12345'
    WorkerBankAccountInfo:
      type: object
      allOf:
        - $ref: '#/components/schemas/WorkerBankAccountToAdd'
        - type: object
          required:
            - id
            - created_at
            - updated_at
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            created_at:
              $ref: '#/components/schemas/DateTimeStringRequired'
            updated_at:
              $ref: '#/components/schemas/DateTimeStringRequired'
            status:
              type: string
              description: Current status of bank account
    WorkerBankAccountToAdd:
      type: object
      properties:
        full_name:
          type: string
          description: Full name of the user.
          example: John Doe
        phone:
          type: string
          description: The user's phone number.
          example: '+1234567890'
        address_line1:
          type: string
          description: The primary address line.
          example: 1234 Main St
        address_line2:
          type: string
          description: The secondary address line.
          example: Apartment 101
        city:
          type: string
          description: The city of the user's address.
          example: Springfield
        province_state:
          type: string
          description: The state or province of the user's address.
          example: Ontario
        postal:
          type: string
          description: The user's postal or ZIP code.
          example: '12345'
        bank_name:
          type: string
          description: Name of the user's bank.
          example: Bank of Examples
        country_code:
          type: string
          description: The country code of the user.
          example: US
        bank_country_code:
          type: string
          description: The country code where the bank is located.
          example: US
        swift_bic:
          type: string
          description: SWIFT/BIC code for the bank.
          example: EXAMPLEBIC
        account_number:
          type: string
          description: The user's bank account number.
          example: '123456789012'
        bank_code:
          type: string
          description: The bank code.
          example: '123'
        original_name:
          type: string
          description: The original name of the user.
          example: Johnathan Doe
        tax_id:
          type: string
          description: The user's tax identification number.
          example: 123-45-6789
        branch_code:
          type: string
          description: The branch code of the user's bank.
          example: '001'
        currency_code:
          type: string
          description: The currency code for transactions.
          example: USD
        bank_branch_name:
          type: string
          description: The name of the user's bank branch.
          example: Main Street Branch
        iban:
          type: string
          description: The International Bank Account Number (IBAN).
          example: GB29NWBK60161331926819
        email:
          type: string
          description: The user's email address.
          example: john.doe@example.com
        rib_number:
          type: string
          description: The RIB(Relevé d'Identité Bancaire).
          example: '12345678901'
        account_type:
          type: string
          description: Bank account type.
          example: '12345678901'
        ach_routing_number:
          type: string
          description: The ACH (Automated Clearing House) Routing Number.
          example: '12345678901'
    WorkerTerminationBody:
      type: object
      required:
        - severance
        - desired_end_date
        - last_date_of_work
        - message
        - is_voluntary
      properties:
        desired_end_date:
          type: string
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          description: The preferred end date for terminating the worker's engagement.
          example: '2023-12-31T00:00:00.000Z'
        last_date_of_work:
          type: string
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          description: The effective termination date of the worker's employment.
          example: '2023-12-31T00:00:00.000Z'
        message:
          type: string
          description: The reason for terminating the worker's engagement.
          example: Termination reason
        is_voluntary:
          type: boolean
          description: >-
            Indicates whether the worker termination is voluntary (true) or
            involuntary (false).
          example: true
        severance:
          type: object
          oneOf:
            - properties:
                amount:
                  type: number
                  description: >-
                    The amount of severance, specified in the designated
                    currency.
                  example: 100
                type:
                  description: The type of severance, either in cash or time off.
                  example: TIME
                  enum:
                    - TIME
                time_unit:
                  type: string
                  enum:
                    - DAYS
                    - WEEKS
                    - MONTHS
                  description: The unit of time for severance.
                  example: MONTHS
                currency:
                  $ref: '#/components/schemas/CurrencyCode'
              required:
                - currency
                - time_unit
                - amount
                - type
            - properties:
                amount:
                  type: number
                  description: >-
                    The amount of severance, specified in the designated
                    currency.
                  example: 100
                type:
                  description: The type of severance, either in cash or time off.
                  example: CASH
                  enum:
                    - CASH
                currency:
                  $ref: '#/components/schemas/CurrencyCode'
              required:
                - currency
                - amount
                - type
              not:
                required:
                  - time_unit
    GPEmployeeAddressUpdatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeAddressUpdated'
    GPEmployeeAddressUpdated:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          type: string
          description: State name.
          example: CO
        city:
          type: string
          description: City name.
          example: Denver
        street:
          type: string
          description: Street name.
          example: 123 Deel Street
        zip:
          type: string
          description: Zip code.
          example: '12345'
        updated_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
    GPContractToCreate:
      type: object
      required:
        - employee
        - employment
        - job_title
        - client
        - compensation_details
      properties:
        employee:
          type: object
          required:
            - first_name
            - last_name
            - email
            - address
            - work_email
          properties:
            first_name:
              type: string
              description: Employee's first name.
              example: Jane
            last_name:
              type: string
              description: Employee's last name.
              example: Doe
            email:
              description: Employee's email address.
              $ref: '#/components/schemas/EmailTypeRequired'
              example: employee@email.com
            work_email:
              description: Employee's work email address.
              $ref: '#/components/schemas/EmailTypeRequired'
              example: work@email.com
            nationality:
              description: Employee's nationality.
              example: US
              type: string
            employee_number:
              type: string
              description: Employee's number.
              example: '100'
            address:
              type: object
              required:
                - street
                - city
                - zip
                - country
              properties:
                street:
                  type: string
                  description: Street and number.
                  example: Deel Street 500
                city:
                  type: string
                  description: City name.
                  example: Denver
                state:
                  type: string
                  description: State code.
                  example: CO
                zip:
                  type: string
                  description: Zip code.
                  example: '44000'
                country:
                  $ref: '#/components/schemas/CountryCode'
        employment:
          type: object
          required:
            - type
            - start_date
            - holidays
          properties:
            type:
              allOf:
                - $ref: '#/components/schemas/GPContractStatusTypeEnum'
            start_date:
              description: Employment start date in Deel.
              $ref: '#/components/schemas/DateStringRequired'
            holidays:
              type: object
              required:
                - allowance
                - start_date
              properties:
                allowance:
                  description: Enter the number of holidays.
                  type: number
                start_date:
                  $ref: '#/components/schemas/DateStringRequired'
        job_title:
          type: string
          description: Employee's job title.
        client:
          $ref: '#/components/schemas/GPClient'
        compensation_details:
          type: object
          required:
            - salary
            - scale
          properties:
            scale:
              type: string
              description: Defines the scale at which the salary is paid.
              default: YEAR
              enum:
                - YEAR
                - MONTH
            salary:
              type: number
              description: Employee's gross annual/month salary.
            currency:
              description: Salary currency.
              example: BRL
              $ref: '#/components/schemas/CurrencyCodeRequired'
    EorContractToCreate:
      type: object
      required:
        - employment
        - employee
        - job_title
        - seniority
        - client
        - compensation_details
      properties:
        employee:
          type: object
          required:
            - first_name
            - last_name
            - nationality
          properties:
            first_name:
              type: string
              description: Employee's first name.
              example: Jane
            last_name:
              type: string
              description: Employee's last name.
              example: Doe
            email:
              type: string
              description: Employee's email address.
              example: employee@email.com
            nationality:
              description: Employee's nationality.
              example: US
              type: string
            address:
              type: object
              nullable: true
              properties:
                street:
                  type: string
                  description: Street and number.
                  example: Deel Street 500
                city:
                  type: string
                  description: City name.
                  example: Denver
                state:
                  type: string
                  description: State code.
                  example: CO
                  nullable: true
                zip:
                  type: string
                  description: Zip code.
                  example: '44000'
                country:
                  $ref: '#/components/schemas/CountryCode'
        employment:
          type: object
          required:
            - country
            - start_date
            - work_visa_required
          properties:
            country:
              $ref: '#/components/schemas/CountryCode'
            state:
              type: string
              description: >-
                State code of the state/province where the this person will be
                employed.
              nullable: true
            type:
              description: Is it a full-time contract or a part-time contract?
              type: string
              enum:
                - Full-time
                - Part-time
            work_visa_required:
              type: boolean
              description: Do you require Deel to apply for work visa for this person?
              default: false
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
            end_date:
              $ref: '#/components/schemas/DateString'
            probation_period:
              type: number
              description: Number of probation days.
              nullable: true
            scope_of_work:
              type: string
              description: Scope of work description.
            time_off_type:
              type: string
              description: >-
                If you want to use standard number of holidays for this
                employee, choose "STANDARD". If you want to enter a specific
                number of holidays, choose "SPECIFIC" and enter the number of
                days in the holidays field.
              enum:
                - STANDARD
                - SPECIFIC
            holidays:
              type: number
              description: >-
                Enter the number of holidays. Leave this field blank if you are
                chooseing "STANDARD" time_off_type.
              nullable: true
        job_title:
          type: string
          description: Employee's job title.
        seniority:
          type: object
          properties:
            id:
              description: >-
                Enter the Id retrieved from the seniority lookup endpoint. Enter
                34 for "Not Applicable".
              $ref: '#/components/schemas/UniqueObjectIdentifier'
        client:
          type: object
          required:
            - team
          properties:
            legal_entity:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
                  description: >-
                    Enter the Id of legal entity under which you want to hire
                    this person. Use /legal-entities endpoint to retrieve a list
                    of legal entities in your organization.
            team:
              type: object
              required:
                - id
              properties:
                id:
                  description: >-
                    Enter the Id of team this person will be hired in. Use
                    /teams endpoint to retrieve a list of teams in your
                    organization.
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
        compensation_details:
          type: object
          required:
            - currency
          properties:
            salary:
              type: number
              description: Employee's gross annual salary.
            currency:
              description: Salary currency.
              type: string
            variable_compensation:
              type: number
              description: >-
                Variable compensation. For example, if the person will earn 5%
                of the gross annual salary as the variable compensation, enter
                5.
              nullable: true
            variable_compensation_type:
              type: string
              nullable: true
              description: >-
                Should be set only if variable_compensation is set. It can be
                PERCENTAGE or FIXED.
              enum:
                - PERCENTAGE
                - FIXED
                - null
        quote_additional_fields:
          type: object
          nullable: true
          description: >-
            Some countries require additional employee information for
            employment contracts.
          properties:
            gender:
              type: string
              description: Employee's gender.
            worker_type:
              type: string
              description: Type of worker.
              enum:
                - Skilled
                - Unskilled
            dob:
              type: string
              description: Employee's date of birth.
        health_plan_id:
          type: string
          description: >-
            Healthcare plan id. You can see available healthcare plans in the
            country guide endpoint.
        pension:
          $ref: '#/components/schemas/PensionEORContractToCreate'
    PensionEORContractToCreate:
      type: object
      description: Some countries required a pension benefit.
      properties:
        id:
          type: string
          description: >-
            Pension provider id. You can see available pension providers in the
            country guide endpoint.
        contribution:
          type: string
          description: >-
            Enter the value of pension contribution. You should send this value
            only if the contribution object is available in the country guide
            endpoint and the value should be there between minimum and maximum
            values indicated.
    GPContractCreated:
      type: object
      properties:
        id:
          type: string
          description: Id of the contract created.
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        job_title:
          type: string
          description: Employee's job title.
          example: Designer
        employment:
          type: object
          properties:
            start_date:
              description: Employment start date in Deel.
              $ref: '#/components/schemas/DateString'
            end_date:
              description: Employment end date in Deel.
              $ref: '#/components/schemas/DateString'
            country:
              type: string
              description: Country of employment.
            state:
              type: string
              description: >-
                State code of the state/province where this person will be
                employed.
              nullable: true
            type:
              type: string
              description: Is it a full-time contract or a part-time contract?
            work_visa_required:
              type: boolean
              description: Do you require Deel to apply for a work visa for this person?
            holidays:
              type: object
              properties:
                allowance:
                  description: Number of holidays.
                  type: number
                start_date:
                  $ref: '#/components/schemas/DateString'
        client:
          type: object
          properties:
            legal_entity:
              type: object
              properties:
                name:
                  type: string
                  description: Legal entity name.
        compensation_details:
          type: object
          properties:
            salary:
              type: number
              description: Gross annual/month salary.
            currency:
              type: string
              description: Currency of gross annual/month salary.
            scale:
              type: string
              description: Scale at which the salary is paid.
        employee:
          type: object
          properties:
            first_name:
              type: string
              description: Employee's first name.
            last_name:
              type: string
              description: Employee's last name.
            email:
              type: string
              description: Employee's email address.
            employee_number:
              type: string
              description: Employee's number.
    EorContractCreated:
      type: object
      properties:
        id:
          description: Id of the contract quote created
          type: string
          nullable: false
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        job_title:
          type: string
          description: Employee's job title.
          example: Designer
        employment:
          type: object
          properties:
            scope_of_work:
              type: string
              description: Scope of work description.
              example: >-
                A designer works on the entire process of defining requirements,
                visualizing and creating graphics including illustrations or
                logos. Also, the designer works on shaping the visual aspects of
                websites, product packaging, and more.
            start_date:
              $ref: '#/components/schemas/DateString'
            end_date:
              $ref: '#/components/schemas/DateString'
            country:
              type: string
              description: Country of employement.
            state:
              type: string
              description: >-
                State code of the state/province where the this person will be
                employed.
              nullable: true
            work_visa_required:
              type: boolean
              description: Do you require Deel to apply for work visa for this person?
            time_off_type:
              type: string
              description: >-
                If you want to use standard number of holidays for this
                employee, choose "STANDARD". If you want to enter a specific
                number of holidays, choose "SPECIFIC" and enter the number of
                days in the holidays field.
            probation_period:
              type: number
              description: Number of probation days.
              nullable: true
            calculated_holidays:
              type: string
              description: Number of calculate holidays for this contract.
        client:
          type: object
          properties:
            legal_entity:
              type: object
              properties:
                name:
                  type: string
                  description: Legal entity name.
        compensation_details:
          type: object
          properties:
            salary:
              type: number
              description: Gross annual salary.
            currency:
              type: string
              description: Currency of gross annual salary.
            variable_compensation:
              type: string
              description: Variable compensation acount or percentage.
            variable_compensation_type:
              type: string
              nullable: true
              description: Type fo variable compensation.
        employee:
          type: object
          properties:
            legal_name:
              type: string
              description: Employee's legal name.
            first_name:
              type: string
              description: Employee's first name.
            last_name:
              type: string
              description: Employee's last name.
            email:
              type: string
              description: Employee's email.
        health_plan:
          type: object
          nullable: true
          properties:
            id:
              type: string
              description: Health plan ID
            name:
              type: string
              description: Health plan name
        seniority:
          $ref: '#/components/schemas/Seniority'
    EorEmployeeCostCalculationRequestBody:
      type: object
      required:
        - salary
        - country
        - currency
      properties:
        salary:
          type: number
          description: The gross annual salary of the employee.
          minimum: 1
          example: 50000
        country:
          type: string
          description: The country of employment.
          example: Germany
        currency:
          type: string
          description: The currency that the salary is paid in.
          example: EUR
        benefits:
          type: array
          description: Benefits which should be included in the calculation.
          nullable: true
          items:
            type: object
            required:
              - provider_id
            properties:
              provider_id:
                type: string
                description: The ID of a benefits provider to include in the calculation.
                example: 00000000-0000-0000-0000-000000000000
              plan_id:
                type: string
                description: The ID of a benefits plan to include in the calculation.
                example: 00000000-0000-0000-0000-000000000000
                nullable: true
    EorEmployeeCostCalculationResponse:
      type: object
      properties:
        salary:
          type: string
          description: The gross annual salary of the employee.
          example: 5000
        currency:
          type: string
          description: The currency of the employee salary.
          example: EUR
        country:
          type: string
          description: The country of employment.
          example: Germany
        country_code:
          type: string
          description: The country code for the country of employment.
          example: DE
        frequency:
          type: string
          description: The frequency that the salary is paid out to the employee.
          example: Monthly
        deel_fee:
          type: string
          description: The monthly Deel fee.
          example: 500
        severance_accrual:
          type: string
          description: >-
            Monthly funds to cover future potential severance payments to the
            employee.
          example: 1000
        total_costs:
          type: string
          description: >-
            Total monthly cost including salary, Deel fee, severance accrual and
            employer costs.
          example: 10000
        employer_costs:
          type: string
          description: >-
            Total monthly employer costs. Does not include Deel fee, salary and
            severance accrual.
          example: 1000
        costs:
          type: array
          description: >-
            The various costs associated with employment in the specified
            country.
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the cost item.
                example: Health Insurance Estimate
              amount:
                type: string
                description: The amount or price of the cost item.
                example: 500
              frequency:
                type: string
                description: The frequency that the cost item must be paid.
                example: Monthly
              country:
                type: string
                description: The country that the cost item is associated with.
                example: Germany
              country_code:
                type: string
                description: >-
                  The country code for the country that the cost item is
                  associated with.
                example: DE
        additional_data:
          type: object
          description: >-
            Textual notes describing important additional data regarding the
            employement process or costs.
          properties:
            additional_notes:
              type: array
              items:
                type: string
                description: >-
                  A textual note describing important additional data regarding
                  the employement process.
                example: >-
                  Kindly note that employment process X is mandatory for this
                  country.
        benefits_data:
          type: array
          description: The various benefits costs involved in the calculation, if any.
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the benefit item.
                example: Healthcare
              plan:
                type: string
                description: The name of the benefit plan.
              fee_amount:
                type: string
                description: >-
                  The amount or price of the fee associated with the benefit
                  item.
                example: 10
              amount:
                type: string
                description: The amount or price of the benefit item.
                example: 50
    EorCountryValidations:
      type: object
      properties:
        holiday:
          type: object
          description: Range of the number of holidays.
          properties:
            min:
              type: string
              description: >-
                Minimum number of holidays required for a legally compliant
                contract.
              example: '20'
        part_time_holiday:
          type: object
          description: Holiday type and range for part-time contracts.
          properties:
            type:
              type: string
              enum:
                - PRORATED
                - STANDARD
                - SPECIFIC
              example: SPECIFIC
            min:
              type: string
              description: >-
                Minimum number of holidays required for a legally compliant
                contract.
              example: '15'
        sick_days:
          type: object
          properties:
            min:
              type: string
              description: >-
                Minimum number of sick days required for a legally compliant
                contract.
              example: '0'
            max:
              type: string
              description: >-
                Maximum number of sick days allowed for a legally compliant
                contract.
              format: nullable
        salary:
          type: object
          description: Salary range.
          properties:
            min:
              type: string
              description: Minimum wage for a legally compliant contract.
              example: '14544.00'
            max:
              type: string
              description: Maximum wage allowed for a legally compliant contract.
              example: '2649300.00'
            frequency:
              type: string
              $ref: '#/components/schemas/SalaryFrequencyScaleEnum'
        probation:
          type: object
          description: Probation period range.
          properties:
            min:
              type: string
              description: >-
                Minimum probation days required for a legally compliant
                contract.
              format: nullable
            max:
              type: number
              description: Maximum probation days allowed for a legally compliant contract.
              example: 90
        part_time_probation:
          type: object
          description: Probation period range for part-time contracts.
          properties:
            min:
              type: number
              description: >-
                Minimum probation days required for a legally compliant
                contract.
              example: 30
            max:
              type: number
              description: Maximum probation days allowed for a legally compliant contract.
              example: 60
        work_schedule:
          type: object
          description: Employee's Work schedule in days and hours.
          properties:
            days:
              type: object
              properties:
                max:
                  type: string
                  example: '6'
            hours:
              type: object
              properties:
                max:
                  type: string
                  example: '10'
        insurance_fee:
          type: string
          description: Insurance fee.
          example: '15.00'
        currency:
          type: string
          description: Country currency.
          example: BRL
        hiring_guide_country_name:
          type: string
          description: Country name.
          example: brazil
        start_date_buffer:
          type: number
          description: >-
            Calculate employee's minimum start date using the start date buffer.
            Today's date + (number of business days x start_date_buffer) =
            Minimum start date.
          example: 5
        definite_contract:
          type: object
          description: Conditions to make definitive contract.
          properties:
            type:
              type: string
              enum:
                - ALLOWED_WITHOUT_LIMITATION
                - ALLOWED_WITH_MAXIMUM_LIMITATION
                - NOT_ALLOWED
              example: ALLOWED_WITH_MAXIMUM_LIMITATION
            maximum_limitation:
              type: number
              example: 36
        adjustments_information_box:
          type: string
          description: Country specific notes and information.
          example: Not allowed to contract people under 21.
        health_insurance:
          type: object
          nullable: true
          properties:
            status:
              $ref: '#/components/schemas/BenefitStatusEnum'
              description: Health insurance status.
            providers:
              type: array
              items:
                $ref: '#/components/schemas/HealthInsuranceProvider'
        pension:
          type: object
          description: >-
            If it is there, you must specify the pension benefit when creating
            an EOR contract.
          nullable: true
          properties:
            status:
              $ref: '#/components/schemas/BenefitStatusEnum'
              description: Pension benefit status.
            providers:
              type: array
              items:
                $ref: '#/components/schemas/PensionProvider'
        mandatory_fields:
          type: array
          items:
            $ref: '#/components/schemas/EorField'
    EorField:
      type: object
      description: Mandatory EOR field.
      properties:
        label:
          type: string
          example: Country of birth
        property_name:
          type: string
          example: countryOfBirth
        input_type:
          type: string
          example: select
        is_optional:
          type: boolean
          example: false
        options:
          type: array
          example:
            - Afghanistan (AF)
            - Canada (CA)
            - Zimbabwe (ZW)
          items:
            type: string
    PensionProvider:
      type: object
      description: Pension provider.
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier of a Pension provider.
        name:
          type: string
          description: Name of pension provider.
          example: US Pension
        home_page_url:
          type: string
          description: Pension provider's home page url.
          example: https://bit.ly/3uW72fp
        contribution:
          $ref: '#/components/schemas/Contribution'
          description: >-
            If it is there, you must specify the contribution property when
            creating an EOR contract.
    Contribution:
      type: object
      description: Pension contribution.
      x-internal: true
      properties:
        type:
          $ref: '#/components/schemas/BenefitContributionTypeEnum'
          description: Contribution type.
        minimum:
          type: string
          description: Minimum pension contribution.
          example: '5.00'
        maximum:
          type: string
          description: Maximum pension contribution.
          example: '10.00'
    HealthInsuranceProvider:
      type: object
      description: Health insurance provider.
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Unique identifier of a health insurance provider.
        name:
          type: string
          description: Name of insurance provider.
          example: 'United Healthcare VSP Vision & Delta Dental: Singles Only'
        is_unisure:
          type: boolean
        home_page_url:
          type: string
          description: Insurance provider's home page url.
          example: https://bit.ly/3uW72fp
        currency:
          type: string
          description: Payment currency.
          example: USD
        type:
          type: string
          description: Insurance type.
          example: PLAN
        ending_rule:
          type: string
          description: Insurance cycle ending rule.
          example: END_OF_MONTH
        days_to_cancel:
          type: string
          description: Days to cancel the insurance.
          format: nullable
        pricing_info_link:
          type: string
          description: URL to price info.
          format: nullable
        fixed_price:
          description: URL to price info.
          type: boolean
        attachments:
          type: array
          description: File attachments.
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/UniqueObjectIdentifier'
              label:
                type: string
                example: Deel USA Health Care Packet.pdf
        client_info_banner:
          type: string
          description: Health insurance info banner.
          format: nullable
        is_available_for_new_quotes:
          type: boolean
        plans:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/UniqueObjectIdentifier'
                description: Insurance plan id.
              name:
                type: string
                description: Insurance plan name.
                example: USA Healthcare Plan
              price:
                type: string
                description: Insurance price.
                example: '570.00'
                nullable: true
              currency:
                type: string
                description: Insurance payment currency.
                example: USD
              is_enabled:
                type: boolean
    EorClientTimeoffs:
      required:
        - employees
        - total_requests
      properties:
        employees:
          description: List of employee time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorTimeoffsEmployeeItem'
        total_requests:
          type: number
    EmployeeTimeoffsItem:
      type: object
      required:
        - time_off_id
        - reason
        - type
        - requested_at
        - reviewed_at
        - with_multiple_dates
        - created_at
        - updated_at
        - status
        - other_time_off_name
        - denial_reason
        - requester
        - reviewer
        - days_used_start_year
        - days_used_end_year
        - days_used
        - start_date
        - end_date
        - is_start_date_half_day
        - is_end_date_half_day
        - attachments
        - change_request
      properties:
        time_off_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: true
        reason:
          type: string
          example: I need to relax.
        type:
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          description: Time off type.
          example: VACATION
        requested_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        reviewed_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        with_multiple_dates:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        updated_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        denial_reason:
          type: string
          nullable: true
          example: false
        requester:
          type: object
          properties:
            name:
              type: string
              example: Carlos from deel
        reviewer:
          type: object
          properties:
            name:
              type: string
              example: Rabia Arikdogan
        days_used_start_year:
          type: string
          example: '0.50'
        days_used_end_year:
          type: string
          example: '0.00'
        days_used:
          type: string
          example: '0.50'
        start_date:
          type: string
          example: '2024-02-23T23:00:00.000Z'
        end_date:
          type: string
          example: '2024-02-25T23:00:00.000Z'
        is_start_date_half_day:
          type: boolean
          example: false
        is_end_date_half_day:
          type: boolean
          example: true
        attachments:
          type: array
          items:
            type: object
            properties:
              attachment_id:
                type: string
                example: 3759767d-2737-4284-8263-65099896f7c3
              label:
                type: string
                example: 924177_SC_l73xijJk-Xn1xfeN4V.jpeg
              file_extension:
                type: string
                example: pdf
          example: []
        change_request:
          type: string
          nullable: true
          example: ''
    EmployeeTimeoffsItemResponse:
      type: object
      properties:
        time_off_id:
          type: string
          example: bca1738c-194a-48e7-a26d-89fddca5bff3
        time_off_type_id:
          type: string
          example: e0a91fd6-0646-41ae-84a9-ca3d2f761793
        policy_id:
          type: string
          example: 85cae186-c0b2-4b92-b554-d8eb1f0fdc1d
        policy_name:
          type: string
          example: Vacation - unlimited days
        policy_type_name:
          type: string
          example: Vacation
        reason:
          type: string
          example: I need to relax.
        type:
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          description: Time off type.
          example: VACATION
        requested_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        reviewed_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        with_multiple_dates:
          type: boolean
          example: false
        single_date:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        created_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        updated_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        denial_reason:
          type: boolean
          example: false
        requester:
          $ref: '#/components/schemas/RequesterTimeOff'
        days_used_start_year:
          type: string
          example: '0.50'
        days_used_end_year:
          type: string
          example: '0.00'
        days_used:
          type: string
          example: '0.50'
        start_date:
          type: string
          example: '2024-02-23T23:00:00.000Z'
        end_date:
          type: string
          example: '2024-02-25T23:00:00.000Z'
        is_start_date_half_day:
          type: boolean
          example: false
        is_end_date_half_day:
          type: boolean
          example: true
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 3759767d-2737-4284-8263-65099896f7c3
              time_off_id:
                type: string
                example: eb0b38d1-4851-4560-87fd-c57b7cf19e5f
              filename:
                type: string
                example: test.pdf
              created_at:
                type: string
                example: '2023-08-04T09:03:31.577Z'
              updated_at:
                type: string
                example: '2023-08-04T09:03:31.577Z'
          example: []
        change_request:
          type: string
          example: ''
        is_updated:
          type: boolean
          example: false
        applied_changes:
          type: array
          items: {}
          example: []
        can_request_changes:
          type: boolean
          example: false
    RequesterTimeOff:
      type: object
      properties:
        is_part_time:
          type: boolean
          example: false
        has_reached_end_date:
          type: boolean
          example: false
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        uuid:
          type: string
          example: 8bf2ee9c-aa43-4d8e-9f6f-ee8b880b3607
        hris_profile_id:
          type: string
          example: 05ab39e5-1200-4cc1-90bf-0969e02bcf02
        client_profile_id:
          type: string
          example: 08462445-3a37-4d3e-8413-bf28a125dabd
        organization_id:
          type: number
          example: 306415
        country:
          type: string
          example: LB
        worker_type:
          type: string
          example: hris_direct_employee
        end_date:
          type: string
          example: '2023-08-04T09:03:31.577Z'
        part_time_percentage:
          type: string
          example: ''
        created_at:
          type: string
          example: '2023-08-04T09:03:31.577Z'
        updated_at:
          type: string
          example: '2023-08-04T09:03:31.577Z'
    EorTimeoffsEmployeeItem:
      type: object
      required:
        - id
        - name
        - eor_contract_id
        - contract_id
        - vacations
        - sick_leaves
        - others
        - time_zones
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          example: Steve Timeoff
        eor_contract_id:
          type: number
          example: 110143
        contract_id:
          type: string
          example: 7WjJWdsJ113vocUN6Buwn
        vacations:
          description: List of employee vacation time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorClientTimeoffRequests'
        sick_leaves:
          description: List of employee sick leave time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorClientTimeoffRequests'
        others:
          description: List of all other employee time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorClientTimeoffRequests'
        time_zones:
          type: string
    EorClientTimeoffRequests:
      type: object
      required:
        - requests
      properties:
        year:
          type: number
          example: 2022
        days_requested:
          description: Days off requested by employee.
          type: number
        current_approved:
          description: Days off approved.
          type: number
        yearly_limit:
          description: Total number of days off allowed per year.
          type: number
        over_annual_limit:
          description: Too many days off requested by employee.
          type: boolean
        yearly_requests:
          description: Total number of time off requests this year.
          type: number
        requests:
          description: List of time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorTimeoffsItem'
    EorTimeoffs:
      type: array
      description: List of time offs.
      items:
        $ref: '#/components/schemas/EorTimeoffsItem'
    EorTimeoffsItem:
      allOf:
        - $ref: '#/components/schemas/EorTimeoffsBaseItem'
      required:
        - id
        - created_at
        - start_date
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        contract_id:
          type: string
          example: abc123
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          example: '2022-08-25T12:09:34.695Z'
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          example: '2022-08-25T12:09:34.695Z'
          nullable: true
        start_date:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          nullable: true
          example: '2022-08-25T12:09:34.695Z'
        end_date:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          nullable: true
          example: '2022-08-25T12:09:34.695Z'
        can_request_changes:
          type: boolean
          nullable: true
          description: Indicates if it is possible to make changes to the time off request.
        is_updated:
          type: boolean
          nullable: true
          description: If true, an update to the original time off request was made.
        change_request:
          allOf:
            - $ref: '#/components/schemas/EorTimeoffsBaseItem'
          nullable: true
          description: >-
            Only valid if the requester asks to change existing time off and it
            has been reviewed.
        applied_changes:
          description: List of changes applied to the time off.
          type: array
          items:
            $ref: '#/components/schemas/EorTimeoffsBaseItem'
    EorTimeoffsBaseItem:
      type: object
      required:
        - type
        - requested_at
        - status
      properties:
        reason:
          type: string
          nullable: true
          description: Reason for requesting time off.
          example: I have a doctors appointment
        type:
          allOf:
            - $ref: '#/components/schemas/TimeoffsTypeEnum'
          description: The type of time off.
          example: VACATION
        requested_at:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          description: Timestamp when time off was requested.
          example: '2022-08-25T12:09:34.695Z'
        reviewed_at:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          nullable: true
          description: Timestamp when time off was reviewed.
          example: '2022-08-25T12:09:34.695Z'
        denial_reason:
          type: string
          nullable: true
          description: Reason why time off was denied.
          example: No time off available
        has_multiple_dates:
          type: boolean
          nullable: true
          description: Indicates if multiple time off days are requested.
        status:
          allOf:
            - $ref: '#/components/schemas/TimeoffsStatusEnum'
          description: Status of the time off request.
          example: USED
        other_timeoff_name:
          type: string
          nullable: true
          description: Custom title for the time off. Only specify if type is "OTHER".
          example: This is time off for a doctor's appointment
        requester:
          allOf:
            - $ref: '#/components/schemas/TimeoffsProfile'
          nullable: true
          description: Employee who requested the time off.
        reviewer:
          allOf:
            - $ref: '#/components/schemas/TimeoffsProfile'
          description: User who reviewed the time off.
          nullable: true
        days_used_start_year:
          type: string
          description: Days used at the start year.
          example: '2.00'
        days_used_end_year:
          type: string
          description: Days used at the end year.
          example: '2.00'
        total_days_used:
          type: string
          description: Total number of time off days used.
          example: '4.00'
        start_date_is_half_day:
          type: boolean
          description: Indicates if the first day of time off is a half day.
        end_date_is_half_day:
          type: boolean
          description: Indicates if the last day of time off is a half day.
        single_date:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          nullable: true
          example: '2022-08-25T12:09:34.695Z'
        date_is_half_day:
          type: boolean
          nullable: true
          description: If true, only a single date was specified.
        attachments:
          allOf:
            - $ref: '#/components/schemas/TimeoffsAttachments'
          nullable: true
    TimeoffsAttachments:
      description: A list of attachments. 2022-09-08 FE only allows for "SICK LEAVE"
      type: array
      items:
        $ref: '#/components/schemas/TimeoffsAttachmentsItem'
    TimeoffsAttachmentsItem:
      description: A item in attachments array. 2022-09-08 FE only allows for "SICK LEAVE"
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        label:
          type: string
          description: The file name
        file_extension:
          type: string
          description: The file name extension
    GPContractStatusTypeEnum:
      type: string
      description: Is it a full-time contract or a part-time contract?
      enum:
        - Full-time
        - Part-time
    TimeoffsStatusEnum:
      type: string
      enum:
        - REQUESTED
        - APPROVED
        - REJECTED
    TimeoffsTypeEnum:
      type: string
      enum:
        - VACATION
        - SICK_LEAVE
        - OTHER
    BenefitStatusEnum:
      type: string
      enum:
        - REQUIRED
        - ENABLED
        - DISABLED
    BenefitContributionTypeEnum:
      type: string
      enum:
        - PERCENTAGE
        - FIXED_AMOUNT
        - MATCH
    BenefitContributionStatusEnum:
      type: string
      enum:
        - MANDATORY
        - OPTIONAL
        - UNAVAILABLE
    InvoiceContractTypes:
      type: string
      description: invoice's allowed contract types
      nullable: false
      enum:
        - pending
        - paid
        - processing
        - canceled
        - skipped
        - failed
        - refunded
      example: pending
    GPContractSalaryScaleEnum:
      type: string
      example: YEAR
      description: The scale to which a given salary applies.
      enum:
        - YEAR
        - MONTH
        - HOUR
    GPContractSalaryStatusEnum:
      type: string
      example: ACTIVE
      description: The status of a salary amendment.
      enum:
        - ACTIVE
        - UPCOMING
        - OUTDATED
    InvoiceContract:
      type: object
      required:
        - id
        - contract_type
      properties:
        id:
          type: string
          description: Unique identifier of a Deel contract.
          example: rhCTiRd9Mad41RwjsFWw-
        name:
          type: string
          description: Contract title.
          example: Lisandro Shanahan-Dynamic Web Specialist
        contract_type:
          type: string
          description: Type of Deel contract.
          example: pay_as_you_go_time_based
    TimeoffsProfile:
      type: object
      required:
        - id
        - name
        - profile_type
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          example: Mr. Rogers
        pic_url:
          allOf:
            - $ref: '#/components/schemas/UrlType'
          nullable: true
          description: Avatar or selfie.
          example: https://media.letsdeel.com/avatar/2ROng8m5?q=1648722955603
        profile_type:
          allOf:
            - $ref: '#/components/schemas/ProfileTypeEnum'
          example: employee
        is_employee:
          type: boolean
          description: Only valid for requester. True if requester is an employee.
    TimeoffToReviewContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimeoffReview'
    TimeoffReview:
      type: object
      required:
        - is_approved
      properties:
        is_approved:
          type: boolean
          description: Approve or decline employee's time off request.
          example: true
        denial_reason:
          type: string
          description: Denial reason for the time off requested.
          example: Not allowed for this day.
    TimeoffToReviewInternalContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimeoffReviewInternal'
    TimeoffReviewInternal:
      type: object
      required:
        - recipientId
        - status
      properties:
        status:
          type: string
          enum:
            - APPROVED
            - REJECTED
          description: The review decision to review the time off request with
          example: APPROVED
        reason:
          type: string
          description: The reason that the chosen status was chosen.
          example: Approved because there are no conflicts.
    TimeoffTypeListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimeoffTypeList'
    TimeoffTypeList:
      type: array
      items:
        type: string
      example:
        - VACATION
        - SICK_LEAVE
        - OTHER
    AdjustmentsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayrollAdjustment'
    AdjustmentCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayrollAdjustment'
    ResponseBodyForAdjustmentById:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayrollAdjustment'
    AdjustmentsCategoriesContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdjustmentCategory'
    PayrollAdjustment:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the adjustment
          example: 123e4567-e89b-12d3-a456-426614174000
        contract_id:
          type: string
          description: The identifier of the contract associated with the adjustment
          example: m3jk2j
        amount:
          type: string
          description: The amount of the adjustment
          example: '1234.56'
        date_of_adjustment:
          type: string
          format: date
          description: The date of the adjustment
          example: '2023-11-02T00:00:00.000Z'
        title:
          type: string
          description: The title of the adjustment
          example: Your title here
        description:
          type: string
          description: The description of the adjustment
          example: Your description here
        cycle_reference:
          type: string
          description: The reference to the cycle associated with the adjustment
          nullable: true
          example: your_cycle_reference
        status:
          $ref: '#/components/schemas/AdjustmentStatusEnum'
          description: The status of the adjustment
          example: open
        adjustment_category_id:
          type: string
          description: >-
            The identifier of the adjustment category associated with the
            adjustment
          example: c9cf4c2c0165f48f494415390c3b49
        actual_start_cycle_date:
          type: string
          description: The date of the actual start cycle date
          example: '2023-11-01T00:00:00.000Z'
        actual_end_cycle_date:
          type: string
          description: The date of the actual end cycle date
          example: '2023-11-15T00:00:00.000Z'
        move_next_cycle:
          type: boolean
          description: If an adjustments can belong to another payroll cycle
          example: true
        file:
          type: object
          nullable: true
          properties:
            id:
              type: string
              description: The unique identifier of the file
              example: 123e4567-e89b-12d3-a456-426614174000
            name:
              type: string
              description: The name of the file
              example: your_file_name
            fileType:
              type: string
              description: The type of the file
              example: pdf
        created_at:
          type: string
          format: date-time
          description: The date and time when the adjustment was created
          example: '2020-11-02T12:00:00.000Z'
        updated_at:
          type: string
          format: date-time
          description: The date and time when the adjustment was last updated
          example: '2020-11-02T12:00:00.000Z'
    AdjustmentCategory:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of an adjustment category.
          example: c0431543f64c448e5ba4b525a50291
        unit_type:
          type: string
          description: The unit type of the adjustment category.
          example: currency
        label:
          type: string
          description: The label of the adjustment category.
          example: Employee Dinner
    CreateTimeoffContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreateTimeoff'
    CreateTimeoff:
      type: object
      required:
        - type
        - with_multiple_dates
      properties:
        type:
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          description: Time off type.
          example: VACATION
        start_date:
          type: string
          description: Start date of employee's time off.
          example: '2022-09-03T00:00:00.000Z'
        end_date:
          type: string
          description: End date of employee's time off.
          example: '2022-09-05T00:00:00.000Z'
        with_multiple_dates:
          type: boolean
          description: >-
            If true, then multiple time off days were requested. You must supply
            a start and end date. If false, end date is ignored
        reason:
          type: string
          description: Description for employee's time off.
          example: Holiday
        is_start_date_half_day:
          type: boolean
          description: Is the start day a half day?
          example: false
        is_end_date_half_day:
          type: boolean
          description: Is the start day a half day?
          example: false
        other_timeoff_name:
          type: string
          description: Custom name for this time off.
          example: Birthday
    CreatePeopleTimeoff:
      type: object
      required:
        - type
        - start_date
        - end_date
        - reason
      properties:
        type:
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          description: Time off type.
          example: VACATION
        start_date:
          type: string
          description: Start date of employee's time off.
          example: '2022-09-03T00:00:00.000Z'
        end_date:
          type: string
          description: End date of employee's time off.
          example: '2022-09-05T00:00:00.000Z'
        reason:
          type: string
          description: Description for employee's time off.
          example: Holiday
        attachments:
          type: string
          format: binary
          description: Attachments for employee's time off.
    PeopleTimeOffContainer:
      type: object
      properties:
        type:
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          description: Time off type.
          example: VACATION
        start_date:
          type: string
          description: Start date of employee's time off.
          example: '2022-09-03T00:00:00.000Z'
        end_date:
          type: string
          description: End date of employee's time off.
          example: '2022-09-05T00:00:00.000Z'
        reason:
          type: string
          description: Description for employee's time off.
          example: Holiday
        attachments:
          type: string
          format: binary
          description: Attachments for employee's time off.
    UpdateWorkerDepartmentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/UpdateWorkerDepartment'
    UpdateWorkerWorkingLocationContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/UpdateWorkerWorkingLocation'
    UpdateWorkerDepartment:
      type: object
      required:
        - department_id
      properties:
        department_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    UpdateWorkerWorkingLocation:
      type: object
      required:
        - working_location_id
      properties:
        working_location_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    EmployeeListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeList'
    EmployeeList:
      x-internal: true
      properties:
        id:
          type: string
          example: a7cc0404-0a13-442a-92d0-dfcbc7e6f1ad
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Smith
        full_name:
          type: string
          example: John Smith
        email:
          type: string
          example: john@example.com
        timezone:
          type: string
          example: America/Sao_Paulo
        personal_email:
          type: string
          example: john@example.com
        country:
          type: string
          example: BR
        birth_date:
          type: string
          example: '1984-12-26T00:00:00.000Z'
        pic_url:
          type: string
          format: nullable
        hiring_type:
          type: string
          example: contractor
        start_date:
          type: string
          example: '2022-07-01T03:00:00.000Z'
        team:
          type: string
          example: John's Team
        team_id:
          type: number
          example: 245062
        job_title:
          type: string
          example: Director
        payments:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                example: 4000
              scale:
                type: string
                example: monthly
              currency:
                type: string
                example: BRL
              contract_name:
                type: string
                example: Demo.1
        hourly_report_total:
          type: string
          example: '8017.8000'
        client_legal_entity:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              type: string
              example: John.test2
        state:
          type: string
          example: CO
        seniority:
          type: string
          example: Junior (Individual Contributor Level 1)
        completion_date:
          type: string
          example: '2023-11-12T02:59:59.999Z'
        hiring_status:
          type: string
          example: active
        monthly_payment:
          type: object
          properties:
            count:
              type: number
              example: 10
    WebhookItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: Webhook subscription's unique identifier.
        name:
          type: string
          description: Webhook subscription name.
          nullable: true
          example: My webhooks
        description:
          type: string
          description: Webhook subscription description.
          nullable: true
          example: My first webhook
        status:
          type: string
          description: Status of webhook.
          enum:
            - enabled
            - disabled
          example: enabled
        url:
          type: string
          description: Endpoint to receive webhook.
          example: https://mywebhook.com/listening
        signing_key:
          type: string
          description: The webhook's signing key, used to generate webhook signatures.
          nullable: true
          example: null
        api_version:
          type: string
          description: Deel API version. Currently Deel accepts v1 or v2 version.
          nullable: false
          example: v2
          default: v2
        events:
          description: The list of events to enable for this subscription.
          example:
            - contract.created
          type: array
          items:
            type: string
        created_at:
          type: string
          description: Time at which the webhook was created.
        updated_at:
          type: string
          description: Time at which the webhook was updated.
        hidden:
          type: boolean
          description: >-
            Property to hide the webhook from frontend view. Commonly by Dell
            3rd party apps
          nullable: true
          example: false
      required:
        - name
        - description
        - status
        - url
        - signing_key
        - api_version
        - events
        - id
        - created_at
        - updated_at
    WebhookListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookItem'
      required:
        - data
    CreateWebhookRequest:
      type: object
      properties:
        name:
          type: string
          description: Webhook subscription name.
          nullable: true
          example: My first webhook.
        description:
          type: string
          description: Webhook subscription description.
          nullable: true
          example: I like it very much.
        status:
          type: string
          description: Status of webhook.
          enum:
            - enabled
            - disabled
          example: enabled
        url:
          type: string
          description: Endpoint to receive webhook.
          example: https://mywebhook.com
        signing_key:
          type: string
          description: The webhook's signing key, used to generate webhook signatures.
          nullable: true
          example: null
        api_version:
          type: string
          description: Deel API version. Currently Deel accepts v1 or v2 version.
          nullable: false
          default: v2
          example: v2
        events:
          description: The list of events to enable for this subscription.
          example:
            - contract.created
          type: array
          items:
            type: string
      required:
        - name
        - description
        - status
        - url
        - signing_key
        - api_version
        - events
    WebhookItemResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookItem'
      required:
        - data
    PatchWebhookRequest:
      type: object
      properties:
        name:
          type: string
          description: Webhook subscription name.
          nullable: true
          example: Demo webhook
        description:
          type: string
          description: Webhook subscription description.
          nullable: true
          example: My first webhook
        status:
          type: string
          description: Status of webhook.
          enum:
            - enabled
            - disabled
          example: enabled
        url:
          type: string
          description: Endpoint to receive webhook.
          example: https://mywebhook.com/listening
        signing_key:
          type: string
          description: The webhook's signing key, used to generate webhook signatures.
          nullable: true
          example: null
        api_version:
          type: string
          description: Deel API version. Currently Deel accepts v1 or v2 version.
          nullable: false
          example: v2
          default: v2
        events:
          description: The list of events to enable for this subscription.
          example:
            - contract.created
          type: array
          items:
            type: string
      required:
        - name
        - description
        - status
        - url
        - signing_key
        - events
    WebhookEventTypeResponse:
      type: object
      properties:
        id:
          type: number
          description: Event type unique identifier.
          nullable: false
        module_name:
          type: string
          description: Name of the rabbit queue.
          nullable: false
          example: contract
        module_label:
          type: string
          description: Display name of the rabbit queue in Deel UI.
          nullable: false
          example: Contracts
        name:
          type: string
          description: Name of the webhook event.
          nullable: false
          example: invoice-adjustment.reviewed
        description:
          type: string
          description: Describes the webhook event and other pertinent info.
          example: Triggered when a contract status changes.
        payload_example:
          type: string
          description: JSON payload example of the specific event.
          nullable: true
          example: null
        created_at:
          type: string
          description: Time at which the event type was created.
        updated_at:
          type: string
          description: Time at which the event type was updated.
      required:
        - id
        - module_name
        - module_label
        - name
        - description
    WebhookEventTypeListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventTypeResponse'
    PaymentObject:
      type: object
      properties:
        rows:
          $ref: '#/components/schemas/PaymentList'
        total:
          type: number
          nullable: false
    PaymentListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PaymentObject'
    PaymentList:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    PaymentWorkerList:
      type: array
      items:
        $ref: '#/components/schemas/PaymentWorker'
    PaymentWorker:
      type: object
      title: The worker for the payment
      required:
        - name
        - picUrl
      properties:
        id:
          type: number
          description: Worker's unique id.
          example: 123456
        name:
          type: string
          default: ''
          description: Worker's full name.
          example: Jane Doe
        picUrl:
          type: string
          default: null
          nullable: true
          description: URL to worker's Deel avatar.
        contract_id:
          type: string
          nullable: true
          description: The worker's Deel contract Id.
    PaymentMethod:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/PaymentMethodEnum'
    Payment:
      type: object
      required:
        - id
        - payment_method
        - status
        - payment_currency
        - label
        - paid_at
        - created_at
        - total
        - workers
      properties:
        id:
          type: number
          description: Unique identifier of the payment.
          example: 12345
          nullable: false
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_currency:
          $ref: '#/components/schemas/CurrencyCode'
        label:
          type: string
        paid_at:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          description: Timestamp when payment was paid.
          example: '2022-08-25T12:09:34.695Z'
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          description: Timestamp when the record was created.
          example: '2022-08-25T12:09:34.695Z'
        total:
          type: string
          description: Total paid.
          example: 1015
        workers:
          $ref: '#/components/schemas/PaymentWorkerList'
    PaymentBreakDownContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentBreakDown'
      required:
        - data
    DepartmentsContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Departments'
      required:
        - data
    WorkingLocationsContainer:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkingLocations'
      required:
        - data
    InternalPeopleContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InternalPeople'
      required:
        - data
    PeopleContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
      required:
        - data
    PeopleByIdContainer:
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/Employee'
            - type: object
              properties:
                custom_fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/PeopleCustomField'
      required:
        - data
    BankAccountGuideContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountGuide'
    BankAccountUpdatedContainer:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BankAccountUpdated'
    WorkerTerminationContainer:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/WorkerTermination'
    WorkerBankAccountsInfoContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkerBankAccountInfo'
    EmployeePayslipsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayslipsList'
    GPPayslipsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payslips'
    EORPayslipsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payslips'
    EmployeeTaxDocumentsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaxDocumentsList'
    ContractDocumentContainer:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/FileAttachmentInfo'
    PaymentBreakDown:
      type: object
      nullable: false
      properties:
        date:
          type: string
          example: '2022-10-01T00:59:28.482Z'
        general_ledger_account:
          type: string
          example: ''
        team:
          type: string
          example: Deel Inc.
        contractor_unique_identifier:
          type: string
          description: Worker's unique identifier.
          example: '12345'
        contractor_employee_name:
          type: string
          description: Worker's name.
          example: Jane Doe
        contractor_email:
          type: string
          description: Worker's email.
          example: name@email.com
        invoice_number:
          type: string
          description: Invoice number.
          example: '5069872'
        currency:
          type: string
          description: Currency code.
          example: USD
        payment_currency:
          type: string
          example: USD
        receipt_number:
          type: string
          example: '5551621'
        work:
          type: string
          example: '0.00'
        bonus:
          type: string
          example: '0.00'
        expenses:
          type: string
          example: '0.00'
        commissions:
          type: string
          example: '0.00'
        deductions:
          type: string
          example: '0.00'
        overtime:
          type: string
          example: '0.00'
        pro_rata:
          type: string
          example: '0.00'
        others:
          type: string
          example: '0.00'
        processing_fee:
          type: string
          example: '0.00'
        adjustment:
          type: string
          example: '0.00'
        total:
          type: string
          description: Total due.
          example: '1000.00'
        total_payment_currency:
          type: string
          description: Total in payment currency.
          example: '1000.00'
        payment_date:
          type: string
          description: Date of payment.
          example: '2022-11-01T17:20:32.837Z'
        frequency:
          type: string
          example: ''
        contract_country:
          type: string
          description: Country of the contract.
          example: US
        contract_start_date:
          type: string
          description: Contract start date.
          example: '2020-03-31T10:58:49.780Z'
        approvers:
          type: string
        approve_date:
          type: string
    Departments:
      type: object
      required:
        - id
        - name
      nullable: false
      properties:
        id:
          type: number
          example: 25599
        name:
          type: string
          example: Marketing
        parent:
          type: string
          nullable: true
          example: Growth
    WorkingLocations:
      type: array
      items:
        type: object
        required:
          - id
          - name
        properties:
          id:
            $ref: '#/components/schemas/UniqueObjectIdentifier'
          name:
            type: string
            example: Some locations
    InvoiceObject:
      type: object
      properties:
        rows:
          $ref: '#/components/schemas/InvoiceList'
    EmployeeAgreementDownloadObject:
      type: object
      properties:
        url:
          type: string
          description: URL to requested employee agreement to download.
          example: https://s3URL/letsdeel.com/employee-agreement/12345.pdf
        expires_at:
          type: string
          format: date-time
          description: Expiration date time of download URL.
          example: '2020-03-31T10:58:49.780Z'
    HRDocumentInfo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Document Id.
        name:
          type: string
          description: Name of the document.
          example: Standard verification letter
    InvoiceDownloadObject:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          nullable: true
          description: URL to requested invoice to download.
          example: https://s3URL/letsdeel.com/invoices/12345.pdf
    InvoiceListContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          $ref: '#/components/schemas/InvoiceList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
    DeelInvoiceListContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          $ref: '#/components/schemas/DeelInvoiceList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
    EmployeeAgreementDownloadContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EmployeeAgreementDownloadObject'
    HrVerificationLettersAndDocumentsListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HRDocumentInfo'
    InvoiceDownloadContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceDownloadObject'
    InvoiceList:
      type: array
      items:
        $ref: '#/components/schemas/Invoice'
    DeelInvoiceList:
      type: array
      items:
        $ref: '#/components/schemas/DeelInvoice'
    ExchangeRates:
      type: object
      properties:
        risk:
          type: number
        rates:
          type: object
          example:
            USD: 1
    GPClient:
      type: object
      required:
        - legal_entity
        - team
      properties:
        legal_entity:
          type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              description: >-
                Enter the Id of the legal entity under which you want to hire
                this person. Use /legal-entities endpoint to retrieve a list of
                legal entities in your organization.
        team:
          type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              description: >-
                Enter the Id of the team this person will be hired in. Use
                /teams endpoint to retrieve a list of teams in your
                organization.
    Invoice:
      type: object
      required:
        - id
        - status
        - currency
        - created_at
        - total
        - label
        - paid_at
        - vat_total
        - vat_percentage
        - vat_id
        - is_overdue
        - issued_at
        - due_date
        - contract_id
      properties:
        id:
          type: string
          description: Unique identifier of the invoice.
          example: rhCTiRd9Mad41RwjsFWw-
        status:
          $ref: '#/components/schemas/InvoiceStatusEnum'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        total:
          type: string
          description: Total invoice amount including Fee and VAT.
          example: 1000
        label:
          type: string
          description: Label of the invoice.
          example: INV-2023-4
        paid_at:
          $ref: '#/components/schemas/DateTimeString'
        vat_total:
          type: string
          nullable: true
          description: Amount of VAT.
          example: 210
        vat_percentage:
          type: string
          nullable: true
          description: VAT percentage.
          example: 21
        is_overdue:
          type: boolean
          nullable: true
          description: Indicates if the invoice is overdue.
          example: true
        issued_at:
          $ref: '#/components/schemas/DateString'
          description: Timestamp when the invoice was issued.
        vat_id:
          type: string
          description: VAT identification number.
          nullable: true
        due_date:
          $ref: '#/components/schemas/DateString'
          description: Due date for the invoice payment.
        contract_id:
          $ref: '#/components/schemas/DateString'
          description: Due date for the invoice payment.
    DeelInvoice:
      type: object
      required:
        - id
        - label
        - status
        - currency
        - total
        - created_at
      properties:
        id:
          type: string
          description: Unique identifier of the invoice.
          example: rhCTiRd9Mad41RwjsFWw-
        label:
          type: string
          description: Label of the invoice.
          example: INV-2023-4
        status:
          $ref: '#/components/schemas/InvoiceStatusEnum'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        total:
          type: string
          description: Total invoice amount including Fee and VAT.
          example: 1000
        created_at:
          $ref: '#/components/schemas/DateTimeString'
    InvoiceContractor:
      type: object
      title: Contractor
      required:
        - name
      properties:
        name:
          type: string
          default: ''
    HrisDirectEmployeeDetails:
      type: object
      properties:
        first_name:
          type: string
          minLength: 3
          maxLength: 100
          example: John
        last_name:
          type: string
          minLength: 3
          maxLength: 100
          example: Doe
        email:
          type: string
          minLength: 3
          maxLength: 255
          example: john.doe@domain.com
        work_email:
          type: string
          minLength: 3
          maxLength: 255
          example: john.doe@domain.com
        nationality:
          type: string
          minLength: 2
          maxLength: 2
          example: CA
        country:
          type: string
          minLength: 2
          maxLength: 2
          example: BR
        state:
          type: string
          minLength: 1
          maxLength: 50
          example: AC
      required:
        - first_name
        - last_name
        - email
        - work_email
        - nationality
        - country
    HrisTeamInformation:
      type: object
      properties:
        team_id:
          type: number
        legal_entity_id:
          type: number
      required:
        - team_id
        - legal_entity_id
    HrisJobInformationBase:
      type: object
      properties:
        seniority_id:
          type: number
      required:
        - seniority_id
    HrisJobInformationTitleId:
      allOf:
        - $ref: '#/components/schemas/HrisJobInformationBase'
        - type: object
          properties:
            job_title_id:
              type: number
          required:
            - seniority_id
            - job_title_id
    HrisJobInformationTitleName:
      allOf:
        - $ref: '#/components/schemas/HrisJobInformationBase'
        - type: object
          properties:
            job_title_name:
              type: string
              example: BE Software Engineer
          required:
            - seniority_id
            - job_title_name
    HrisCompensation:
      type: object
      properties:
        gross_annual_salary:
          type: number
          format: float
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: USD
      required:
        - gross_annual_salary
        - currency
    HrisContractBase:
      type: object
      properties:
        contract_oid:
          type: string
          description: The Hris Direct employee contract ID
          example: pdcMQe0cXCCXWTkqkdytw
        start_date:
          $ref: '#/components/schemas/DateStringRequired'
        employee_number:
          type: number
        end_date:
          $ref: '#/components/schemas/DateString'
      required:
        - start_date
        - employment_type
        - contract_oid
    HrisContractPartTime:
      allOf:
        - $ref: '#/components/schemas/HrisContractBase'
      type: object
      properties:
        employment_type:
          type: string
          enum:
            - PART_TIME
        part_time_percentage:
          type: number
          minimum: 1
          maximum: 99
          description: required if employmentType is "PART_TIME"
      required:
        - employment_type
        - part_time_percentage
    HrisContractFullTime:
      allOf:
        - $ref: '#/components/schemas/HrisContractBase'
      type: object
      properties:
        employment_type:
          type: string
          enum:
            - FULL_TIME
      required:
        - employment_type
    HrisDirectEmployee:
      type: object
      required:
        - employee_details
        - team_information
        - job_information
        - compensation
        - contract
      properties:
        employee_details:
          $ref: '#/components/schemas/HrisDirectEmployeeDetails'
        team_information:
          $ref: '#/components/schemas/HrisTeamInformation'
        job_information:
          oneOf:
            - $ref: '#/components/schemas/HrisJobInformationTitleId'
            - $ref: '#/components/schemas/HrisJobInformationTitleName'
        compensation:
          $ref: '#/components/schemas/HrisCompensation'
        contract:
          oneOf:
            - $ref: '#/components/schemas/HrisContractPartTime'
            - $ref: '#/components/schemas/HrisContractFullTime'
        vacation_info:
          type: object
          nullable: true
          properties:
            vacation_accrual_start_date:
              type: string
              format: date
            vacation_yearly_policy:
              type: number
              minimum: 1
              maximum: 365
          required:
            - vacation_accrual_start_date
            - vacation_yearly_policy
    HrisDirectEmployeeResponse:
      allOf:
        - $ref: '#/components/schemas/HrisDirectEmployee'
        - type: object
          properties:
            id:
              type: string
              description: The Hris Direct employee ID
              example: 6733c95b-df52-419e-906d-6904d3117dab
    HrisDirectEmployeeContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/HrisDirectEmployeeResponse'
    PeopleClientLegalEntity:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: The unique identifier for the client legal entity.
        name:
          type: string
          description: The name of the client legal entity.
    PeoplePayment:
      type: object
      properties:
        rate:
          type: number
          description: The payment rate
        scale:
          type: string
          description: The payment scale (e.g., hourly, weekly, monthly, etc.)
        currency:
          type: string
          description: The currency code (ISO 4217) for the payment
        contract_name:
          type: string
          description: The name of the contract associated with the payment
    Employment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the employment.
        name:
          type: string
          description: The name of the employment.
        team:
          $ref: '#/components/schemas/Team'
          description: The team associated with the employment.
        email:
          type: string
          description: The email associated with the employment.
        state:
          type: string
          description: The state associated with the employment.
        country:
          type: string
          description: The country associated with the employment.
        payment:
          $ref: '#/components/schemas/PeoplePayment'
          description: The payment information associated with the employment.
        is_ended:
          type: boolean
          description: Indicates whether the employment has ended.
        timezone:
          type: string
          description: The timezone associated with the employment.
        job_title:
          type: string
          description: The job title associated with the employment.
        seniority:
          type: string
          description: The seniority level associated with the employment.
        start_date:
          type: string
          description: The start date of the employment.
        work_email:
          type: string
          description: The work email associated with the employment.
        hiring_type:
          type: string
          description: The hiring type associated with the employment.
        hiring_status:
          type: string
          description: The hiring status associated with the employment.
        completion_date:
          type: string
          description: The completion date of the employment.
        contract_status:
          type: string
          description: The contract status associated with the employment.
        voluntarily_left:
          type: boolean
          description: Indicates whether the employment was left voluntarily.
        client_legal_entity:
          $ref: '#/components/schemas/PeopleClientLegalEntity'
          description: The client legal entity associated with the employment.
        has_eor_termination:
          type: boolean
          description: Indicates whether the employment had an EOR termination.
        contract_is_archived:
          type: boolean
          description: Indicates whether the employment's contract is archived.
    MonthlyPayment:
      type: object
      description: Monthly payment details for the user
      properties:
        count:
          type: integer
          description: The number of monthly payments
    Team:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          description: The unique identifier for the team.
        name:
          type: string
          description: The name of the team.
    InternalPeople:
      type: object
      description: People object representing a Deel
      properties:
        id:
          type: string
          description: Unique identifier for the user
        first_name:
          type: string
          description: First name of the user
        last_name:
          type: string
          description: Last name of the user
        full_name:
          type: string
          description: Full name of the user
        email:
          type: string
          description: Email address of the user
        work_email:
          type: string
          description: Work email address of the user
        personal_email:
          type: string
          description: Personal email address of the user
        country_name:
          type: string
          description: Name of the country where the user is located
        birth_date:
          type: string
          description: Date of birth of the user in ISO format (yyyy-mm-dd)
        pic_url:
          type: string
          description: URL of the user's profile picture
        start_date:
          type: string
          description: >-
            Date when the user started their current employment in ISO format
            (yyyy-mm-dd)
        payments:
          type: array
          description: List of payment objects representing the user's payment history
          items:
            $ref: '#/components/schemas/Payment'
        hourly_report_total:
          type: string
          description: Total amount of hours worked by the user in ISO format (hh:mm:ss)
        client_legal_entity:
          $ref: '#/components/schemas/PeopleClientLegalEntity'
          description: >-
            Object representing the client legal entity that the user is
            associated with
        state:
          type: string
          description: State where the user is located
        seniority:
          type: string
          description: Seniority level of the user's role
        completion_date:
          type: string
          description: >-
            Date when the user's current employment is expected to end in ISO
            format (yyyy-mm-ddThh:mm:ss.sssZ)
        monthly_payment:
          $ref: '#/components/schemas/MonthlyPayment'
          description: Object representing the user's monthly payment information
        direct_manager:
          type: string
          description: Name of the user's direct manager
        direct_reports:
          type: string
          description: Names of the user's direct reports
        direct_reports_count:
          type: integer
          description: Number of direct reports that the user has
        employments:
          type: array
          description: >-
            List of employment objects representing the user's employment
            history
          items:
            $ref: '#/components/schemas/Employment'
        hiring_status:
          type: string
          description: Hiring status of the user
        hiring_type:
          type: string
          description: Type of employment contract that the user has
        job_title:
          type: string
          description: Title of the user's role
        country:
          type: string
          description: ISO 3166-1 alpha-2 code of the country where the user is located
        team_id:
          type: integer
          description: Unique identifier for the team that the user belongs to
        team:
          type: string
          description: Name of the team that the user belongs to
        timezone:
          type: string
          description: Time zone of the user's location
        department:
          type: string
          description: Name of the department that the user belongs to
        work_location:
          type: string
          description: Name of the user's work location
        contract_types:
          type: array
          description: >-
            List of contract types that the user has had in the past and/or
            currently has
          items:
            type: string
        has_deel_user:
          type: boolean
          description: Indicates whether the user has a Deel account or not
    PeopleMe:
      type: object
      description: People object representing a Deel
      properties:
        id:
          type: number
          description: Unique identifier for the user profile
        user_id:
          type: number
          description: Unique identifier for the user
        username:
          type: string
          description: Username of the user
        first_name:
          type: string
          description: First name of the user
        middle_name:
          type: string
          description: Middle name of the user
          nullable: true
        last_name:
          type: string
          description: Last name of the user
        full_name:
          type: string
          description: Full name of the user
        email:
          type: string
          description: Email address of the user
        avatar_url:
          type: string
          description: URL of the user's avatar
          nullable: true
        profile_type:
          allOf:
            - $ref: '#/components/schemas/ProfileTypeEnum'
        slack_user_id:
          type: string
          description: User's slack id
          nullable: true
        slack_team_id:
          type: string
          description: User's team slack id
          nullable: true
        organization_id:
          type: number
          description: Unique identifier for the organization
        organization_name:
          type: string
          description: Name of the organization
          nullable: true
        client_country:
          $ref: '#/components/schemas/CountryCodeNulleable'
        contractor_country:
          $ref: '#/components/schemas/CountryCodeNulleable'
        hris_enabled:
          type: boolean
          description: HRIS feature enabled.
          nullable: true
    ContractPreview:
      type: string
    UniqueObjectIdentifier:
      type: string
      description: Unique identifier of this resource.
      example: 00000000-0000-0000-0000-000000000000
    PublicId:
      type: string
      format: uuid
      nullable: true
      description: The public UUID of the object
      example: 00000000-0000-0000-0000-000000000000
    InviteTeamMemberToSign:
      type: object
      required:
        - contract_oid
        - contract_name
        - invitee_id
        - invitee_name
      properties:
        contract_oid:
          type: string
          nullable: false
        contract_name:
          type: string
          nullable: false
        invitee_id:
          type: number
          nullable: false
        invitee_name:
          type: string
          nullable: false
    ContractAmendmentSentToClient:
      type: object
      required:
        - contract_oid
        - contract_name
        - client_id
        - client_name
      properties:
        contract_oid:
          type: string
          nullable: false
        contract_name:
          type: string
          nullable: false
        client_id:
          type: number
          nullable: false
        client_name:
          type: string
          nullable: false
    InvoiceAdjustmentPendingForApproval:
      type: object
      required:
        - contract_name
        - contract_oid
        - adjustment_id
        - adjustment_type
        - event_type
      properties:
        team_id:
          type: string
          nullable: false
        contract_name:
          type: string
          nullable: false
        contract_oid:
          type: string
          nullable: false
        adjustment_id:
          type: string
          nullable: false
        adjustment_type:
          type: string
          nullable: false
        approvers:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
        event_type:
          type: string
          nullable: false
    AdminUser:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: false
          description: Admin user profile id.
        first_name:
          type: string
          nullable: false
          description: User's first name
        last_name:
          nullable: false
          type: string
          description: User's last name
        email:
          type: string
          description: User's email
          format: email
    AdminUserCreateRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
          nullable: false
          minLength: 1
          description: User's first name
        last_name:
          type: string
          nullable: false
          minLength: 1
          description: User's last name
        email:
          type: string
          nullable: false
          description: User's email
          format: email
    AdminUsersContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
    CreateAdminUserResponseContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdminUser'
    Address:
      type: object
      properties:
        streetAddress:
          type: string
          description: Street and number.
          example: Deel Street 500
        locality:
          type: string
          description: Locality name.
          example: Denver
        region:
          type: string
          description: Region code.
          example: CO
        postalCode:
          type: string
          description: Postal code.
          example: '44000'
        country:
          $ref: '#/components/schemas/CountryCode'
    Employee:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the employee.
          example: 9b9fc43a-a90c-4615-ac50-baf1e314b53e
        created_at:
          type: string
          format: date-time
          description: The creation timestamp of the employee record.
          example: '2023-03-21T10:27:25.950Z'
        first_name:
          type: string
          description: The first name of the employee.
          example: John
        last_name:
          type: string
          description: The last name of the employee.
          example: Doe
        full_name:
          type: string
          description: The full name of the employee.
          example: John Doe
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
          description: An array of the employee's email addresses.
        birth_date:
          type: string
          description: The birth date of the employee.
          example: '1990-01-01T00:00:00.000Z'
        start_date:
          type: string
          format: date
          description: The date the employee started working.
          example: '2023-03-20T00:00:00.000Z'
        nationality:
          type: string
          description: The nationality of the employee.
          example: American
        client_legal_entity:
          $ref: '#/components/schemas/PeopleClientLegalEntity'
          description: The legal entity of the client.
        state:
          type: string
          description: The state of the employee.
          example: Active
        seniority:
          type: string
          description: The seniority level of the employee.
          example: Junior (Individual Contributor Level 1)
        completion_date:
          nullable: true
          type: string
          description: The completion date of the task or project.
          example: '2023-06-20T00:00:00.000Z'
        direct_manager:
          type: object
          description: The direct manager of the employee.
          nullable: false
          properties:
            id:
              type: string
              example: 642b0547-9d80-4d35-a085-fd977ef209ef
            last_name:
              type: string
              example: John
            first_name:
              type: string
              example: Doe
            work_email:
              type: string
              example: john.doe@example.com
        direct_reports:
          type: array
          description: The direct reports to the employee.
          items:
            type: object
            nullable: false
            properties:
              id:
                type: string
                example: 642b0547-9d80-4d35-a085-fd977ef209ef
              last_name:
                type: string
                example: John
              first_name:
                type: string
                example: Doe
              work_email:
                type: string
                example: john.doe@example.com
        direct_reports_count:
          type: integer
          description: The count of direct reports to the employee.
          example: 0
        employments:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentDetail'
          description: An array of the employee's employment details.
        hiring_status:
          type: string
          description: The current hiring status of the employee.
          example: onboarding
        new_hiring_status:
          type: string
          description: The new hiring status of the employee.
          example: onboarding_overdue
        hiring_type:
          type: string
          description: The type of hiring of the employee.
          example: contractor
        job_title:
          type: string
          description: The job title of the employee.
          example: Access Field Technician
        country:
          type: string
          description: The country of the employee.
          example: USA
        timezone:
          type: string
          description: The timezone of the employee.
          example: EST
        department:
          type: object
          description: The department of the employee.
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              type: string
              example: Delivery team
            parent:
              type: string
              example: Research and Development
        work_location:
          type: string
          description: The work location of the employee.
          example: Remote
        updated_at:
          $ref: '#/components/schemas/DateTimeString'
          description: Date time of the last update.
    Email:
      type: object
      properties:
        type:
          type: string
          description: The type of email.
          example: work
          enum:
            - work
        value:
          type: string
          description: The email address.
          example: work.email@example.com
        primary:
          type: boolean
          default: false
          example: true
      required:
        - type
        - value
    EmploymentDetail:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the employment.
          example: mzj524j
        name:
          type: string
          description: Name of the employee.
          example: Khizar Naeem
        team:
          type: object
          description: The team to which the employee belongs.
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              type: string
              description: The team name.
        email:
          type: string
          description: The work email of the employee.
          example: some@example.com
        state:
          type: string
          description: The state of employment.
          example: Active
        country:
          type: string
          description: The country of employment.
          example: USA
        payment:
          $ref: '#/components/schemas/PeoplePayment'
          description: The payment information associated with the employment.
        is_ended:
          type: boolean
          description: Whether the employment has ended.
          example: false
        timezone:
          type: string
          description: The timezone of the employment.
          example: EST
        job_title:
          type: string
          description: The job title of the employment.
          example: Access Field Technician
        seniority:
          type: string
          description: The seniority level of the employment.
          example: Junior (Individual Contributor Level 1)
        start_date:
          type: string
          format: date
          description: The start date of the employment.
          example: '2023-03-20T00:00:00.000Z'
        work_email:
          type: string
          description: The work email of the employment.
          example: work.email@example.com
        hiring_type:
          type: string
          description: The type of hiring of the employment.
          example: contractor
        hiring_status:
          type: string
          description: The current hiring status of the employment.
          example: onboarding
        completion_date:
          type: string
          description: The completion date of the employment contract.
          example: '2023-06-20T00:00:00.000Z'
        contract_status:
          type: string
          description: The status of the employment contract.
          example: waiting_for_client_sign
        voluntarily_left:
          type: string
          description: Whether the employee voluntarily left the employment.
          example: 'No'
        contract_coverage:
          type: array
          items:
            type: string
          description: The coverage of the employment contract.
          example:
            - no_coverage
        new_hiring_status:
          type: string
          description: The new hiring status of the employment.
          example: onboarding_overdue
        client_legal_entity:
          $ref: '#/components/schemas/PeopleClientLegalEntity'
          description: The legal entity of the client in the employment.
        has_eor_termination:
          type: string
          description: Whether the employment has an EOR termination.
          example: 'No'
        contract_is_archived:
          type: boolean
          description: Whether the employment contract is archived.
          example: false
        contract_has_contractor:
          type: boolean
          description: Whether the contract has a contractor.
          example: true
        is_user_contract_deleted:
          type: boolean
          description: Whether the user contract is deleted.
          example: false
        hris_direct_employee_invitation:
          type: string
          description: The HRIS direct employee invitation status.
          example: Invited
    LetterRequest:
      type: object
      required:
        - description
        - type
      properties:
        description:
          type: string
          description: Description of the letter (minimum 25 characters)
          minLength: 25
        includeQRCode:
          type: boolean
          description: Flag indicating whether to include a QR code
        type:
          type: string
          enum:
            - VISA_APPLICATION_FOR_PERSONAL_TRIP
            - VISA_APPLICATION_FOR_BUSINESS_TRIP
            - VISA_RENEWAL_CERTIFICATE
            - NO_OBJECTION_CERTIFICATE_FOR_TRAVELLING
            - BANK_VERIFICATION_OR_SALARY_CERTIFICATE
            - CUSTOMISED
    FileAttachment:
      type: object
      properties:
        key:
          type: string
          description: Unique key for the file
        name:
          type: string
          description: Name of the file
    AdditionalEORInfo:
      description: >-
        Fields for country validation mandatory found at
        `/eor/validations/{country_code}`.
    BankGuide:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
        required:
          type: boolean
        values_allowed:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              name:
                type: string
        validations:
          type: object
          properties:
            regex:
              type: string
            minLength:
              type: integer
            maxLength:
              type: integer
    BankAccountUpdated:
      type: object
      required:
        - id
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
        status:
          type: string
        created_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
        updated_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
    WorkerTermination:
      type: object
      required:
        - id
        - last_date_of_work
      properties:
        id:
          type: string
        last_date_of_work:
          $ref: '#/components/schemas/DateTimeStringRequired'
    CreatePublicTokenContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreatePublicToken'
    PublicTokenCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PublicToken'
    CreatePublicToken:
      type: object
      properties:
        scope:
          type: array
          description: Access scopes.
          items:
            type: string
            example: contracts:read
    PublicToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: Public token.
          example: eXampL3.t0Ken
    InvoiceDownloadLinkContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceDownloadObject'
    UsersSearchForm:
      type: object
      description: Convenient model to encapsulate query parameters to get a list of users.
      properties:
        count:
          $ref: '#/components/schemas/UsersParamLimit'
        startIndex:
          $ref: '#/components/schemas/UsersParamOffset'
    UsersParamLimit:
      type: string
      pattern: ^[0-9][0-9]?$|^100$
      nullable: false
      description: >-
        Maximum number of records to return. This is supposed to be an integer
        but query parameters are string. 1 to 100.
      default: '50'
      minimum: 0
      maximum: 100
    UsersParamOffset:
      type: string
      pattern: ^[1-9]\d{0,14}$
      nullable: false
      description: >-
        Offset/index of record for the next page of records to return (1 to
        999999999999999).
      minimum: 1
      default: '1'
    AuthenticationScheme:
      type: object
      properties:
        description:
          type: string
        documentationUrl:
          type: string
        name:
          type: string
        specUrl:
          type: string
    AuthenticationSchemes:
      type: object
      properties:
        authenticationSchemes:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationScheme'
    BulkSupported:
      type: object
      properties:
        maxOperations:
          type: integer
          format: int32
        maxPayloadSize:
          type: integer
          format: int32
        supported:
          type: boolean
          default: false
    EnterpriseUser:
      type: object
      properties:
        department:
          type: string
          description: Employee's department in Deel HR.
          example: Engineering
        costCenter:
          type: string
          description: Legal entity.
          example: 12345
        organization:
          type: string
          description: Organization name in Deel.
          example: 45321
        manager:
          $ref: '#/components/schemas/Manager'
    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: detail error message
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          description: bad request type when status code is 400
          enum:
            - uniqueness
            - tooMany
            - mutability
            - sensitive
            - invalidSyntax
            - invalidFilter
            - invalidPath
            - invalidValue
            - invalidVers
            - noTarget
        status:
          type: string
          description: same as HTTP status code, e.g. 400, 401, etc.
    FilterSupported:
      type: object
      properties:
        maxResults:
          type: integer
          format: int32
        supported:
          type: boolean
          default: false
    Meta:
      type: object
      properties:
        created:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        location:
          type: string
          description: resource location URI
        resourceType:
          type: string
          enum:
            - User
            - Group
      description: Resource metadata.
    Name:
      required:
        - familyName
        - givenName
      type: object
      properties:
        familyName:
          type: string
          description: User's family name.
          example: Doe
        givenName:
          type: string
          description: User's given name. Also known as first name.
          example: Jane
    PatchOperation:
      required:
        - op
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
            - remove
        path:
          type: string
        value:
          oneOf:
            - type: string
            - type: object
              properties: {}
          description: corresponding 'value' of that field specified by 'path'
    SearchRequest:
      type: object
      properties:
        count:
          type: integer
          description: page size
          format: int32
        filter:
          type: string
          description: only support 'userName' or 'email' filter expressions for now
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:SearchRequest
        startIndex:
          type: integer
          description: start index (1-based)
          format: int32
    ServiceProviderConfig:
      type: object
      properties:
        authenticationSchemes:
          $ref: '#/components/schemas/AuthenticationSchemes'
        bulk:
          $ref: '#/components/schemas/BulkSupported'
        changePassword:
          $ref: '#/components/schemas/Supported'
        etag:
          $ref: '#/components/schemas/Supported'
        filter:
          $ref: '#/components/schemas/FilterSupported'
        patch:
          $ref: '#/components/schemas/Supported'
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
        sort:
          $ref: '#/components/schemas/Supported'
        xmlDataFormat:
          $ref: '#/components/schemas/Supported'
    Supported:
      type: object
      properties:
        supported:
          type: boolean
          default: false
    User:
      required:
        - emails
        - name
        - schemas
        - userName
        - meta
      type: object
      properties:
        active:
          type: boolean
          description: >-
            Hiring status. True if user employment is active. False if
            employment is not active.
          default: false
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        title:
          type: string
          description: Job title.
          example: Software Engineer
        userType:
          type: string
          description: User type.
          example: employee
        id:
          type: string
          description: Unique resource id (UUID) defined by Deel.
          example: 97b727b8-bdb5-11ed-afa1-0242ac120002
        name:
          $ref: '#/components/schemas/Name'
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:schemas:core:2.0:User
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          $ref: '#/components/schemas/EnterpriseUser'
        urn:ietf:params:scim:schemas:extension:2.0:User:
          $ref: '#/components/schemas/UserExtension'
        userName:
          type: string
          description: User's work email.
          example: work.email@example.com
        meta:
          type: object
          properties:
            created:
              type: string
              description: Time at which the resource was created.
              example: '2023-02-04T18:03:18.796Z'
            lastModified:
              type: string
              description: Time at which the resource was last modified.
              example: '2023-02-04T18:03:18.796Z'
            resourceType:
              type: string
              description: Resource type.
              example: User
            version:
              type: string
              description: Latest version of resource.
              example: W/a330bc54f0671c9
            location:
              type: string
              description: API endpoint to retrieve resource.
              example: >-
                https://api.letsdeel.com/scim/v2/Users/97b727b8-bdb5-11ed-afa1-0242ac120002
    UserPatch:
      required:
        - Operations
        - schemas
      type: object
      properties:
        Operations:
          type: array
          description: patch operations list
          items:
            $ref: '#/components/schemas/PatchOperation'
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:PatchOp
    CreateClientUser:
      required:
        - schemas
        - userName
        - name
        - userType
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:schemas:core:2.0:User
          description: Schema URNs.
          example:
            - urn:ietf:params:scim:schemas:core:2.0:User
        userName:
          type: string
          description: User's email.
          example: work@email.com
        name:
          type: object
          properties:
            familyName:
              type: string
              description: Family name of the user.
              example: Jensen
            givenName:
              type: string
              description: Given name of the user.
              example: Barbara
        userType:
          type: string
          enum:
            - client
          description: Type of user.
          example: client
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            meta:
              $ref: '#/components/schemas/Meta'
    UserSearchResponse:
      type: object
      properties:
        Resources:
          type: array
          description: User list.
          items:
            $ref: '#/components/schemas/UserResponse'
        itemsPerPage:
          type: integer
          format: int64
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
        startIndex:
          type: integer
          description: Start index of the current page.
          format: int64
        totalResults:
          type: integer
          format: int64
    Manager:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: Manager's unique identifier.
          example: b29a5ff0-bdb5-11ed-afa1-0242ac120002
    UserExtension:
      type: object
      properties:
        startDate:
          type: string
          description: Start date of employment.
          format: date-time
        endDate:
          type: string
          description: End date of employment.
          format: date-time
        state:
          type: string
          description: State code.
          nullable: true
          example: CO
        country:
          type: string
          nullable: true
          description: Country code.
          example: US
        employments:
          type: array
          nullable: true
          items:
            type: object
            nullable: true
            properties:
              contractId:
                type: string
                description: Contract identifier.
                example: av4bt56
              title:
                type: string
                nullable: true
                description: Contract title
                example: International Factors Developer
              startDate:
                type: string
                description: Contract start date.
                example: '2023-04-26'
                nullable: true
              contractType:
                type: string
                description: Type of Deel contract
                example: eor
                nullable: true
              active:
                type: boolean
                description: Indicates if the contract is currently active.
                example: true
                default: false
              state:
                type: string
                description: State code.
                nullable: true
                example: CO
              country:
                type: string
                description: Country code.
                example: US
                nullable: true
  securitySchemes:
    deelToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >
        ## Authentication


        Deel API uses API tokens to authenticate requests. A bearer token is
        required to authenticate all API requests.


        All API requests must be made over HTTPS. Calls made over plain HTTP
        will fail. API requests without authentication will also fail.


        ```

        curl -X GET 'api.letsdeel.com/rest/v2/contracts' \

        -H 'Authorization: Bearer YOUR-TOKEN-HERE'

        ```


        ### Generating Access Tokens

        1. Navigate to **Apps & Perks > Developer Center**.

        2. Click on the “Generate New Token” button.

        3. In the popup, click “Generate Token” button to generate a new token.
        Your newly generated token is visible on the screen.

        4. Make sure to copy and save your token once is generated. You won't be
        able to see it again!


        ![image](developers.png)
    oauth2:
      type: oauth2
      description: >-
        Standard OAuth2 security scheme based on
        https://swagger.io/docs/specification/authentication/
      flows:
        authorizationCode:
          authorizationUrl: https://auth.deel.com/authorize
          tokenUrl: https://auth.deel.com/tokens
          scopes:
            accounting:read: View payments and invoices in your organization.
            accounting:write: Create and edit payments and invoices.
            candidates:read: View candidates in your organization.
            candidates:write: Create, edit and delete candidates in your organization.
            contracts:read: View contracts in your organization.
            contracts:write: Create and amend contracts.
            invoice-adjustments:read: View invoices of your workforce.
            invoice-adjustments:write: Create, edit, review, and delete invoice adjustments.
            milestones:read: View milestones of your contractors.
            milestones:write: Create, edit, review, and delete milestones.
            organizations:read: >-
              View basic information about your organizations, teams, legal
              entities and agreements.
            organizations:write: >-
              Modify information in your organization. Create, edit, delete
              admin users or managers.
            off-cycle-payments:read: View your off-cycle payments.
            off-cycle-payments:write: Create, edit, review your off-cycle payments.
            timesheets:read: View work submitted for time-based contracts.
            timesheets:write: Create, edit, review, and delete timesheets.
            tasks:read: View your pay-as-you-go tasks.
            tasks:write: Create, edit, review and delete your pay-as-you-go tasks.
            payslips:read: View employee payslips.
            payslips:write: Create, edit, review and delete employee payslips.
            public-token:write: Create, edit, review and delete public tokens.
            Users:read: View basic information about users.
            Users:write: Create and update users.
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 65f2fdc201c6940013319730
