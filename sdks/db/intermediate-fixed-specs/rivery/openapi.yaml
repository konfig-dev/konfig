openapi: 3.0.3
info:
  title: Rivery API
  description: >

    # Rivery API documentation


    Welcome to the Rivery API Documentation. 


    Using the Rivery API, you can automate any single or group operations you
    perform in the Rivery console. 

    You can create, execute, and delete Rivers, create DataFrames, automate
    processes, and more.

    The Rivery API is structured around REST. It accepts JSON request bodies,
    returns JSON responses,

    and employs conventional HTTP response codes, authentication, and verbs to
    access and use data through HTTP requests. 


    Consult our [Legacy API](https://api-docs.rivery.io/) documentation. 


    Please [contact our Support team]( mailto:<contact@rivery.io>) if you have
    any questions or concerns.


    # Authorization

    ## Rivery API Token

    To generate a Bearer token, please check out [Rivery's
    docs](https://docs.rivery.io/docs/rivery-api).


    Every bearer token is a combination of account, environment, and scopes
    attached. Every time the token is provided,

    the API compares its scopes with the request required scope.

    If the scope is not valid, an insufficient permissions (403) response code
    returned.


    ## Scopes

    A scope is defined as a combination of the entity in Rivery, and the
    operation allowed to perform on the entity.


    The entity can be any entity available via the API, for example -
    connection.

    An operation can be one of specific operations allowed for each scope. For
    example: list or edit.

    Therefore, listing connections scope will be set as `connection:list`.

    Please make sure the Bearer token is has the right scopes attached for all
    of the needed requests.
  contact:
    name: Rivery Documentation
    url: https://docs.rivery.io/
    email: contact@rivery.io
  version: 1.0.0
  x-logo:
    url: https://riveryio.wpengine.com/wp-content/uploads/2021/08/logo-main.svg
servers:
  - url: https://api.rivery.io
    description: US
  - url: https://api.eu-west-1.rivery.io
    description: EU
paths:
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes:
    get:
      tags:
        - Dataframes
      summary: Get Dataframes
      description: |-
        **Authorization scope:** `dataframe:list` 
         
         **Get all dataframe entities from the DB**
      operationId: list_dataframes
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframePaginationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Dataframes
      summary: Add Dataframe
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **Creates a new dataframe entity.**
        ****
        **Please note that the Dataframe's name has to be unique**
      operationId: add_dataframe
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataframeAddInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes/{dataframe_name}:
    get:
      tags:
        - Dataframes
      summary: Get Dataframe
      description: |-
        **Authorization scope:** `dataframe:list` 
         
         **Get a specific dataframe by name.**
      operationId: get_dataframe
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: Dataframe Name
          name: dataframe_name
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Dataframes
      summary: Update Dataframe
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **Updates an existing dataframe entity. Please note that only the connecting_settings field can be modified**
      operationId: update_dataframe
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: Dataframe Name
          name: dataframe_name
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataframeUpdateInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Dataframes
      summary: Delete Dataframe
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **Delete a dataframe.**
      operationId: delete_dataframe
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: Dataframe Name
          name: dataframe_name
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes/{dataframe_name}/download:
    get:
      tags:
        - Dataframes
      summary: Download Dataframe
      description: |-
        **Authorization scope:** `dataframe:list` 
         
         **This endpoint creates a new task for downloading a dataframe.**
        ****
        ****
        **Be advised: the task is an async operation, which means that**
        **after creating the task, the client must call the endpoint GET**
        **operation in order to get the result.**
      operationId: download_dataframe
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: Dataframe Name
          name: dataframe_name
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes/{dataframe_name}/clear:
    post:
      tags:
        - Dataframes
      summary: Clear Dataframe Values
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **This endpoint creates an asynchronous operation for clearing the**
        **Dataframe's data.**
        **.**
        ****
        **Please note - this is different from deleting the Dataframe,**
        **which deletes both the Dataframe's data and configuration.**
      operationId: clear_dataframe_values
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: Dataframe Name
          name: dataframe_name
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/activities_statistics:
    get:
      tags:
        - Activities
      summary: Get Activities Statistic
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get environment's activity statistics.**
        ****
        **The statistics include how many units(RPU) were consumed, and how**
        **many runs ended with each status.**
      operationId: get_activities_statistic
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: A list of statuses to filter
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
            description: A list of statuses to filter
          name: status
          in: query
        - description: The ID of the group to filter
          required: false
          schema:
            items:
              type: string
            type: array
            title: Group Id
            description: The ID of the group to filter
          name: group_id
          in: query
        - description: >-
            A flag that indicates whether the river is scheduled. If not set
            then activities of all rivers will be returned
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ScheduleEnum'
            description: >-
              A flag that indicates whether the river is scheduled. If not set
              then activities of all rivers will be returned
          name: is_scheduled
          in: query
        - description: Get statistics for rivers that has the search query in their name
          required: false
          schema:
            type: string
            title: Search
            description: Get statistics for rivers that has the search query in their name
          name: search
          in: query
        - description: The river type
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RiverTypeEnum'
            type: array
            description: The river type
          name: river_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStatisticResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_statistics:
    get:
      tags:
        - Activities
      summary: Get River Activities Statistic
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get river's activity statistics (summary).**
        ****
        **The statistics include how many units(RPU) were consumed, and how**
        **many runs ended with each status**
      operationId: get_river_activities_statistic
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
          name: status
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityStatisticResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_targets:
    get:
      tags:
        - Activities
      summary: Get River Activities Targets
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get river's activity targets (table names) in a specific time frame for**
        **specific river and their status.**
        ****
        **This endpoint should be used for multi table rivers.**
      operationId: get_river_activities_targets
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the run group ID
          required: false
          schema:
            type: string
            title: Run Group Id
            description: Filter by the run group ID
          name: run_group_id
          in: query
        - description: Filter by the sub river ID
          required: false
          schema:
            type: string
            title: Sub River Id
            description: Filter by the sub river ID
          name: sub_river_id
          in: query
        - description: >-
            A list of statuses. Only targets with those statuses will be
            returned
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
            description: >-
              A list of statuses. Only targets with those statuses will be
              returned
          name: status
          in: query
        - description: Indicates by which parameter to sort the targets
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TargetsSortByEnum'
            description: Indicates by which parameter to sort the targets
            default: last_run
          name: sort_by
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrderEnum'
            default: desc
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityTargetResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_run_groups:
    get:
      tags:
        - Activities
      summary: List River Activities Run Groups
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get list of run groups that occurred in a specific time**
        **frame for specific river and their status.**
      operationId: list_river_activities_run_groups
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the target table name
          required: false
          schema:
            type: string
            title: Target Name
            description: Filter by the target table name
          name: target_name
          in: query
        - description: Filter by the sub river ID
          required: false
          schema:
            type: string
            title: Sub River Id
            description: Filter by the sub river ID
          name: sub_river_id
          in: query
        - description: >-
            A list of statuses. Only run groups with this statuses will be
            returned.
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RunGroupStatusEnum'
            type: array
            description: >-
              A list of statuses. Only run groups with this statuses will be
              returned.
          name: status
          in: query
        - description: Cache context id is an internal query parameter for cache purposes
          required: false
          schema:
            type: string
            title: Cache Context Id
            description: Cache context id is an internal query parameter for cache purposes
          name: cache_context_id
          in: query
        - required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            default: 1
          name: page
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/RunGroupSortByEnum'
            default: last_run
          name: sort_by
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrderEnum'
            default: desc
          name: sort_order
          in: query
        - required: false
          schema:
            type: integer
            maximum: 200
            minimum: 1
            title: Items Per Page
            default: 50
          name: items_per_page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunGroupResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_run_groups/{run_group_id}:
    get:
      tags:
        - Activities
      summary: Get River Activities Run Groups
      description: Get a specific run group id
      operationId: get_river_activities_run_groups
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Run Group Id
          name: run_group_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunGroupWithStatistics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_sub_rivers:
    get:
      tags:
        - Activities
      summary: Get River Activities Sub Rivers
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get list of sub rivers that ran in a specific time frame.**
        ****
        **Additional filters can be added such as target name or run group id.**
      operationId: get_river_activities_sub_rivers
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the target table name
          required: false
          schema:
            type: string
            title: Target Name
            description: Filter by the target table name
          name: target_name
          in: query
        - description: Filter by the run group ID
          required: false
          schema:
            type: string
            title: Run Group Id
            description: Filter by the run group ID
          name: run_group_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivitySubRiverResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs:
    get:
      tags:
        - Activities
      summary: Get River Activities Runs
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get list of runs for a specific river in a specific time frame.**
        ****
        **This endpoint return information about the runs.**
      operationId: list_river_activities_runs
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the target table name
          required: false
          schema:
            type: string
            title: Target Name
            description: Filter by the target table name
          name: target_name
          in: query
        - description: Filter by the run group ID
          required: false
          schema:
            type: string
            title: Run Group Id
            description: Filter by the run group ID
          name: run_group_id
          in: query
        - description: Filter by the sub river ID
          required: false
          schema:
            type: string
            title: Sub River Id
            description: Filter by the sub river ID
          name: sub_river_id
          in: query
        - required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            default: 1
          name: page
          in: query
        - required: false
          schema:
            type: integer
            maximum: 200
            minimum: 1
            title: Items Per Page
            default: 20
          name: items_per_page
          in: query
        - description: Indicates by which parameter to sort the runs
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/RunsSortByEnum'
            description: Indicates by which parameter to sort the runs
            default: start_time
          name: sort_by
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrderEnum'
            default: desc
          name: sort_order
          in: query
        - description: Cache context id is an internal query parameter for cache purposes
          required: false
          schema:
            type: string
            title: Cache Context Id
            description: Cache context id is an internal query parameter for cache purposes
          name: cache_context_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}:
    get:
      tags:
        - Activities
      summary: Get River Activities Run
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get a specific run details.**
      operationId: get_river_activities_run
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Run Id
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/logic_steps:
    get:
      tags:
        - Activities
      summary: Get River Activities Run Logic Steps
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get the status of each logic step for a specific run.**
      operationId: get_river_activities_run_logic_steps
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Run Id
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunLogicStepsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/variables:
    get:
      tags:
        - Activities
      summary: Get Activities Logic Variables
      description: >-
        **Authorization scope:** `activity:list` 
         
         **This endpoint retrieves the values of the logic variables in a specific run.**
        **The values are stored for a short period of time and will expire after
        that time.**

        **If the values have expired, an error message will be returned.**
      operationId: get_activities_logic_variables
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Run Id
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogicVariableResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/logic_steps/{step_id}/logs:
    get:
      tags:
        - Activities
      summary: Get Activities Logic Step Log
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get the logs of a python logic step.**
      operationId: get_activities_logic_step_log
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Run Id
          name: run_id
          in: path
        - required: true
          schema:
            type: string
            title: Step Id
          name: step_id
          in: path
        - description: The step iteration number
          required: false
          schema:
            type: integer
            minimum: 0
            title: Iteration Number
            description: The step iteration number
            default: 0
          name: iteration_number
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunLogicStepsLogsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/activities:
    get:
      tags:
        - Activities
      summary: Get Activities
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get summary of activities for the account and environment summarized by**
        **river.**
      operationId: get_activities
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
          name: status
          in: query
        - description: The ID of the group to filter
          required: false
          schema:
            items:
              type: string
            type: array
            title: Group Id
            description: The ID of the group to filter
          name: group_id
          in: query
        - description: >-
            A flag that indicates whether the river is scheduled. If not set
            then activities of all rivers will be returned
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ScheduleEnum'
            description: >-
              A flag that indicates whether the river is scheduled. If not set
              then activities of all rivers will be returned
          name: is_scheduled
          in: query
        - required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            default: 1
          name: page
          in: query
        - required: false
          schema:
            type: integer
            maximum: 200
            minimum: 1
            title: Items Per Page
            default: 20
          name: items_per_page
          in: query
        - description: Cache context id is an internal query parameter for cache purposes
          required: false
          schema:
            type: string
            title: Cache Context Id
            description: Cache context id is an internal query parameter for cache purposes
          name: cache_context_id
          in: query
        - description: Search for a specific river by river name
          required: false
          schema:
            type: string
            title: Search
            description: Search for a specific river by river name
          name: search
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ActivitySortByEnum'
            default: last_run
          name: sort_by
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrderEnum'
            default: desc
          name: sort_order
          in: query
        - description: The river type
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RiverTypeEnum'
            type: array
            description: The river type
          name: river_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/logs:
    get:
      tags:
        - Activities
      summary: Get Run Logs
      description: |-
        **Authorization scope:** `activity:list` 
         
         **This method fetches the logs for a given run id of a river.**
      operationId: get_run_logs
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Run Id
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/versions:
    get:
      tags:
        - Rivers
      summary: List River Versions
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint returns all river versions for a given river_cross_id.**
      operationId: list_river_versions
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVersionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/versions/{version_id}:
    get:
      tags:
        - Rivers
      summary: Get River Version
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint returns a given version for a version id and river_cross_id.**
      operationId: get_river_version
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Version Id
          name: version_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVersions'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}:
    get:
      tags:
        - Rivers
      summary: Get River
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint gets a river.**
      operationId: get_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Beta Endpoints
      summary: Edit River
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint updates a river.**
      operationId: edit_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteRiverInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Rivers
      summary: Delete River
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint deletes a river**
      operationId: delete_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers:
    get:
      tags:
        - Rivers
      summary: List Rivers
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint gets a summary of all the rivers in an environment**
      operationId: list_rivers
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The river group name
          required: false
          schema:
            type: string
            title: Group Name
            description: The river group name
          name: group_name
          in: query
        - description: The river group id
          required: false
          schema:
            items:
              type: string
            type: array
            title: Group Id
            description: The river group id
          name: group_id
          in: query
        - description: The river name
          required: false
          schema:
            type: string
            title: Name
            description: The river name
          name: name
          in: query
        - description: The river schedule status
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/RiverScheduleStatusEnum'
            description: The river schedule status
          name: schedule
          in: query
        - description: The river status
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RiverStatusEnum'
            type: array
            description: The river status
          name: river_status
          in: query
        - description: The river sort by filter
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListRiversSortByFilterEnum'
            description: The river sort by filter
            default: last_updated_at
          name: sort_by
          in: query
        - description: The river sort order filter
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrderEnum'
            description: The river sort order filter
            default: desc
          name: sort_order
          in: query
        - description: The river type
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RiverTypeEnum'
            type: array
            description: The river type
          name: river_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Beta Endpoints
      summary: Add River
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint creates a river.**
      operationId: add_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteRiverInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/cdc_config:
    get:
      tags:
        - Rivers
      summary: Get Cdc Config
      description: >-
        **Authorization scope:** `river:list` 
         
         **This endpoint gets the cdc config:**
        ****

        *** Gets cdc offset by provided datasource type to see the last position
        of the cdc**
      operationId: get_cdc_config_limit_scope
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdcConfig'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Rivers
      summary: Set Cdc Config
      description: >-
        **Authorization scope:** `river:write` 
         
         **This endpoint set the cdc config:**
        ****

        *** Set the cdc offset that next run of the river can continue from
        specific position**
      operationId: set_cdc_config_limit_scope
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdcConfig'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Rivers
      summary: Delete Cdc Config
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint delete the cdc config:**
      operationId: delete_cdc_config
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/cancel_run:
    post:
      tags:
        - Rivers
      summary: Cancel River Run
      description: |-
        **Authorization scope:** `river:execute` 
         
         **This endpoint cancels a specific run if run_id is provided or multiple runs if run_group_id is provided.**
      operationId: cancel_river_run
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRiverRunBody'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/run:
    post:
      tags:
        - Rivers
      summary: Run River
      description: |-
        **Authorization scope:** `river:execute` 
         
         **This endpoint runs a river.**
        ****
        **Throttling rules:**
        *** River can be executed up to 2 times per minute**
        *** Each user can execute a river up to 15 times per minute**
      operationId: run_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: >-
            A flag that indicates whether to run all active sub rivers of the
            master river
          required: false
          schema:
            type: boolean
            title: Run Sub Rivers
            description: >-
              A flag that indicates whether to run all active sub rivers of the
              master river
            default: false
          name: run_sub_rivers
          in: query
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiversRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/sub_rivers/{sub_river_id}/run:
    post:
      tags:
        - Rivers
      summary: Run Sub River
      description: |-
        **Authorization scope:** `river:execute` 
         
         **This endpoint runs a sub_river.**
      operationId: run_sub_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Sub River Id
          name: sub_river_id
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiversRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/variables:
    get:
      tags:
        - Rivers
      summary: Get River Variables
      description: |-
        **Authorization scope:** `river:list` 
         
         **Get all river variables**
      operationId: get_river_variables
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVariablesPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Rivers
      summary: Update River Variable
      description: >-
        **Authorization scope:** `river:write` 
         
         **This endpoint updates a variable for a river.**
        **Given a list of variables, it will replace all existing variables for
        the logic river with the provided list.**
      operationId: update_river_variable
      parameters:
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRiverVariableInputList'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVariablesPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments:
    get:
      tags:
        - Environments
      summary: List Environments
      description: |-
        **Authorization scope:** `environment:list` 
         
         **Get list of environments entities for an account**
      operationId: list_environments
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            type: boolean
            title: Include Deleted
            default: false
          name: include_deleted
          in: query
        - required: false
          schema:
            type: boolean
            title: Is Deployable Environments
            default: false
          name: is_deployable_environments
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsPaginationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Beta Endpoints
      summary: Add Environment
      description: |-
        **Authorization scope:** `environment:list` 
         
         **Creates a new environment entity**
      operationId: add_environment
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsFields'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}:
    get:
      tags:
        - Environments
      summary: Get Environment
      description: |-
        **Authorization scope:** `environment:list` 
         
         **Get a specific environment**
      operationId: get_environment
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsFields'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Beta Endpoints
      summary: Patch Environment
      description: |-
        **Authorization scope:** `environment:edit` 
         
         **Updates an existing environment entity**
      operationId: patch_environment
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEnvironmentInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsFields'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Beta Endpoints
      summary: Delete Environment
      description: |-
        **Authorization scope:** `environment:delete` 
         
         **Delete Environment**
      operationId: delete_environment
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/scim_provisioning:
    get:
      tags:
        - Accounts
      summary: Get Scim Provisioning Status
      description: |-
        **Authorization scope:** `account:write` 
         
         **Get SCIM provisioning status**
      operationId: get_scim_provisioning_status
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScimTokenStatusResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Accounts
      summary: Add Or Update Scim Provisioning
      description: >-
        **Authorization scope:** `account:write` 
         
         **Add or update SCIM provisioning.**
        **This endpoint returns the connection string used to communicate with
        your SCIM app and the authentication token**
      operationId: create_or_update_scim_provisioning
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateScimTokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Accounts
      summary: Delete Scim Provisioning
      description: |-
        **Authorization scope:** `account:write` 
         
         **Deletes the scim provisioning. This endpoint won't delete any existing resource that were already sync by the SCIM.**
      operationId: delete_scim_provisioning
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/audit_events:
    get:
      tags:
        - Audit Events
      summary: List Audit Events
      description: |-
        **Authorization scope:** `audit:list` 
         
         **List audit events**
      operationId: list_audit_events
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: false
          schema:
            type: string
            format: date-time
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm If end_time is supplied without
            start_time the start_time will be the previous day of the end_time
          required: false
          schema:
            type: string
            format: date-time
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm If end_time is supplied without
              start_time the start_time will be the previous day of the end_time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: A list of users id's who initiated the event
          required: false
          schema:
            items:
              type: string
            type: array
            title: User Id
            description: A list of users id's who initiated the event
          example: 5eda28ee6b028e1ce7a2b5ed
          name: user_id
          in: query
        - description: A list of entity types
          required: false
          schema:
            items:
              $ref: '#/components/schemas/AuditEventTypeEnum'
            type: array
            description: A list of entity types
            examples:
              - connections
              - rivers
              - river_groups
          name: event_type
          in: query
        - description: A list of event types
          required: false
          schema:
            items:
              $ref: '#/components/schemas/AuditEntityTypeEnum'
            type: array
            description: A list of event types
            examples:
              - delete
              - create
              - update
          name: entity_type
          in: query
        - description: A unique logical identifier of an entity, usually the cross_id
          required: false
          schema:
            type: string
            title: Entity Logical Key
            description: A unique logical identifier of an entity, usually the cross_id
          example: 5eda28ee6b028e1ce7a2b5ec
          name: entity_logical_key
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEventsPaginationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/audit_events/{event_id}:
    get:
      tags:
        - Audit Events
      summary: Get Audit Event
      description: |-
        **Authorization scope:** `audit:list` 
         
         **Get a specific audit event by event_id.**
      operationId: get_audit_event
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - description: The id of the audit event
          required: true
          schema:
            type: string
            title: Event Id
            description: The id of the audit event
          example: eac285a5a9ae4ada9ccd49889a651e16
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/connections/{connection_cross_id}:
    delete:
      tags:
        - Connections
      summary: Delete Connection
      description: |-
        **Authorization scope:** `connection:delete` 
         
         **This endpoint deletes a connection**
      operationId: delete_connection
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: Connection Cross Id
          name: connection_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/teams:
    get:
      tags:
        - Groups
      summary: List Teams
      description: |-
        **Authorization scope:** `team:list` 
         
         **Get all user teams**
      operationId: list_teams
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: false
          schema:
            type: integer
            title: Page
            default: 1
          name: page
          in: query
        - required: false
          schema:
            type: integer
            maximum: 200
            title: Items Per Page
            default: 20
          name: items_per_page
          in: query
        - description: The internal display name of the team
          required: false
          schema:
            type: string
            title: Display Name
            description: The internal display name of the team
          example: Marketing team
          name: display_name
          in: query
        - description: The team source local (rivery) or external (Active Directory)
          required: false
          schema:
            type: string
            title: Source
            description: The team source local (rivery) or external (Active Directory)
          example: rivery
          name: source
          in: query
        - description: The remote display name of the team
          required: false
          schema:
            type: string
            title: Remote Display Name
            description: The remote display name of the team
          example: Core team
          name: remote_display_name
          in: query
        - description: Sorted the results by attributes
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TeamsSortByEnum'
            description: Sorted the results by attributes
            default: display_name
          name: sort_by
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrderEnum'
            default: desc
          name: sort_order
          in: query
        - description: List of team ids
          required: false
          schema:
            items:
              type: string
            type: array
            title: Team Id
            description: List of team ids
          example:
            - 65ce173412f5e196b2b9b163
          name: team_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Groups
      summary: Create Team
      description: |-
        **Authorization scope:** `team:write` 
         
         **Create user team**
      operationId: create_team
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserTeam'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/teams/{team_id}:
    get:
      tags:
        - Groups
      summary: Get Team
      description: |-
        **Authorization scope:** `team:list` 
         
         **Get user team by id**
      operationId: get_team
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Team Id
          name: team_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Groups
      summary: Update Team
      description: |-
        **Authorization scope:** `team:write` 
         
         **Update team**
      operationId: update_team
      parameters:
        - required: true
          schema:
            type: string
            title: Team Id
          name: team_id
          in: path
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserTeamsInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Groups
      summary: Delete Team
      description: |-
        **Authorization scope:** `team:write` 
         
         **Delete user team**
      operationId: delete_team
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Team Id
          name: team_id
          in: path
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Groups
      summary: Patch Team
      description: |-
        **Authorization scope:** `team:write` 
         
         **Patch team by id**
      operationId: patch_team
      parameters:
        - required: true
          schema:
            type: string
            title: Team Id
          name: team_id
          in: path
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserTeamsInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/copy:
    post:
      tags:
        - Beta Endpoints
      summary: Copy River
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint creates a copy of a river**
      operationId: copy_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '201':
          description: Successful Response
          headers:
            Location:
              description: The location of the created resource
              type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyRiverResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/restore:
    put:
      tags:
        - Beta Endpoints
      summary: Restore River Version
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint restores a river to a specific version**
      operationId: restore_river
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreRiverVersionInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/enable_cdc:
    post:
      tags:
        - Beta Endpoints
      summary: Enable Cdc
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint enables the CDC extraction for a CDC river.**
      operationId: enable_cdc
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/disable_cdc:
    post:
      tags:
        - Beta Endpoints
      summary: Disable Cdc
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint disables the CDC extraction for a CDC river.**
      operationId: disable_cdc
      parameters:
        - required: true
          schema:
            type: string
            title: Account Id
          name: account_id
          in: path
        - required: true
          schema:
            type: string
            title: Environment Id
          name: environment_id
          in: path
        - required: true
          schema:
            type: string
            title: River Cross Id
          name: river_cross_id
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/predefined_metadata/columns:
    get:
      tags:
        - Beta Endpoints
      summary: Get Predefined Columns
      description: >-
        This endpoint gets all predefined columns per datasource id and
        report_id.
      operationId: get_predefined_columns
      parameters:
        - description: The datasource of the columns.
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/SourceTypeEnum'
            description: The datasource of the columns.
          example: shopify
          name: datasource_id
          in: query
        - description: The report id
          required: true
          schema:
            type: string
            title: Report
            description: The report id
          example: orders
          name: report
          in: query
        - description: Name of the column to filter
          required: false
          schema:
            type: string
            title: Column Name
            description: Name of the column to filter
          example: id
          name: column_name
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedColumnsPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/predefined_metadata/tables:
    get:
      tags:
        - Beta Endpoints
      summary: Get Predefined Tables
      description: This endpoint gets all predefined tables per datasource id.
      operationId: get_predefined_tables
      parameters:
        - description: The datasource of the columns.
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/SourceTypeEnum'
            description: The datasource of the columns.
          example: shopify
          name: datasource_id
          in: query
        - description: Name of the report to filter
          required: false
          schema:
            type: string
            title: Report Name
            description: Name of the report to filter
          example: orders
          name: report_name
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            title: Items Per Page
            description: The number of items per page in the paginated list.
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            type: integer
            minimum: 1
            title: Page
            description: The current page number in the paginated list.
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedTablesModelPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/predefined_metadata/metadata:
    get:
      tags:
        - Beta Endpoints
      summary: Get Predefined Metadata
      description: This endpoint gets all predefined metadata datasource id and report id.
      operationId: get_predefined_metadata
      parameters:
        - description: The datasource of the columns.
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/SourceTypeEnum'
            description: The datasource of the columns.
          example: shopify
          name: datasource_id
          in: query
        - description: The report id
          required: true
          schema:
            type: string
            title: Report Id
            description: The report id
          example: predefined_orders
          name: report_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedMetadataModelResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/river_source/metadata:
    get:
      tags:
        - Beta Endpoints
      summary: Get Source Metadata
      description: This endpoint gets all source metadata.
      operationId: get_source_metadata
      parameters:
        - description: The source name
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/SourceTypeEnum'
            description: The source name
          example: shopify
          name: source_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcedMetadataModelResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
components:
  schemas:
    ActionProperties:
      properties:
        properties_type:
          type: string
          enum:
            - actions
          title: Properties Type
          default: actions
      additionalProperties: false
      type: object
      title: ActionProperties
      description: Action properties which define the action river properties
    ActivitiesResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        items:
          items:
            $ref: '#/components/schemas/Activity'
          type: array
          title: Items
        cache_context_id:
          type: string
          title: Cache Context Id
          nullable: true
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
        - cache_context_id
      title: ActivitiesResponse
      description: General activities response
    Activity:
      properties:
        account_id:
          type: string
          title: Account Id
        environment_id:
          type: string
          title: Environment Id
        cross_id:
          type: string
          title: Cross Id
        river_id:
          type: string
          title: River Id
        master_river_id:
          type: string
          title: Master River Id
        river_name:
          type: string
          title: River Name
        is_sub_river:
          type: boolean
          title: Is Sub River
        is_master_river:
          type: boolean
          title: Is Master River
        is_multi:
          type: boolean
          title: Is Multi
        is_deleted:
          type: boolean
          title: Is Deleted
        group_id:
          type: string
          title: Group Id
        is_scheduled:
          type: boolean
          title: Is Scheduled
        total_files:
          type: integer
          title: Total Files
        units:
          type: number
          title: Units
          description: Total RPU (units)
          example: 2.1
        rpu:
          type: number
          title: Rpu
          description: Total RPU
          example: 2.1
        total_size:
          type: integer
          title: Total Size
        last_run:
          type: integer
          title: Last Run
        pending:
          type: integer
          title: Pending
        failed:
          type: integer
          title: Failed
        running:
          type: integer
          title: Running
        succeeded:
          type: integer
          title: Succeeded
        canceled:
          type: integer
          title: Canceled
        datasource_id:
          type: string
          title: Datasource Id
      type: object
      required:
        - account_id
        - environment_id
        - cross_id
        - river_id
        - master_river_id
        - river_name
        - is_sub_river
        - is_master_river
        - is_multi
        - is_deleted
        - is_scheduled
        - total_files
        - units
        - rpu
        - total_size
        - last_run
        - pending
        - failed
        - running
        - succeeded
        - canceled
        - datasource_id
      title: Activity
      description: Activity properties to return.
    ActivityLogicVariableResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RiverVariablesFields'
          type: array
          title: Items
      type: object
      required:
        - items
      title: ActivityLogicVariableResponse
      description: The activities logic variables response
    ActivitySortByEnum:
      type: string
      enum:
        - river_name
        - last_run
        - units
      title: ActivitySortByEnum
      description: Activities sort properties in the UI.
    ActivityStatisticResponse:
      properties:
        account_id:
          type: string
          title: Account Id
        environment_id:
          type: string
          title: Environment Id
        total_units:
          type: number
          title: Total Units
          description: Total RPU (units)
          example: 2.1
        total_rpu:
          type: number
          title: Total Rpu
          description: Total RPU
          example: 2.1
        running:
          type: integer
          title: Running
        canceled:
          type: integer
          title: Canceled
        pending:
          type: integer
          title: Pending
        failed:
          type: integer
          title: Failed
        succeeded:
          type: integer
          title: Succeeded
        skipped:
          type: integer
          title: Skipped
      type: object
      required:
        - account_id
        - environment_id
        - total_units
        - total_rpu
        - running
        - canceled
        - pending
        - failed
        - succeeded
        - skipped
      title: ActivityStatisticResponse
      description: Activity statistics response
    ActivityStatusEnum:
      type: string
      enum:
        - pending
        - canceled
        - succeeded
        - failed
        - running
        - skipped
      title: ActivityStatusEnum
      description: The external status of a run (being used in the api)
    AthenaAdditionalTargetSettings:
      properties:
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          example: id desc,createDate asc
          nullable: true
        target_loading:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          example: merge
          nullable: true
        target_type:
          type: string
          enum:
            - athena
          title: Target Type
          description: Internal field, populated automatically
          default: athena
          nullable: true
        replace_invalid_utf_characters:
          type: boolean
          title: Replace Invalid Utf Characters
          description: Enable replacing invalid UTF characters in the target
          default: false
        truncate_columns:
          type: boolean
          title: Truncate Columns
          description: Whether or not to truncate the columns in the target
          default: false
      type: object
      title: AthenaAdditionalTargetSettings
      description: Athena specific target settings
    AthenaModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - athena
          title: Target Type
          description: Internal field, populated automatically
          default: athena
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: AthenaModifiedColumn
      description: Athena specific columns settings
    AthenaTargetSettings:
      properties:
        name:
          type: string
          enum:
            - athena
          title: Name
          description: The name of the target
          default: athena
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      title: AthenaTargetSettings
      description: Athena target settings properties to return.
    AuditEntityTypeEnum:
      type: string
      enum:
        - accounts
        - connections
        - rivers
        - river_groups
        - users
        - teams
      title: AuditEntityTypeEnum
      description: The audit event entity types
    AuditEventTypeEnum:
      type: string
      enum:
        - create
        - delete
        - update
      title: AuditEventTypeEnum
      description: The audit events, events type
    AuditEventsPaginationResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        items:
          items:
            $ref: '#/components/schemas/AuditEventsResponse'
          type: array
          title: Items
      type: object
      required:
        - items
      title: AuditEventsPaginationResponse
      description: Audit events pagination response
    AuditEventsResponse:
      properties:
        event_id:
          type: string
          title: Event Id
          description: The id of the audit event
        event_initiator:
          type: string
          title: Event Initiator
          description: Where the event was initiated
          example: UI
        event_datetime:
          type: string
          title: Event Datetime
          description: The event date time in UTC timezone
          example: '2022-08-02T13:38:44.054000'
        event_type:
          allOf:
            - $ref: '#/components/schemas/AuditEventTypeEnum'
          description: The type of the event
          example: create
        event_result_status:
          type: integer
          title: Event Result Status
          description: The status of the API request of the event
          example: 200
        event_name:
          type: string
          title: Event Name
          description: >-
            The name of the event in the following
            format-event_type:entity_type:additional_info
          example: update:rivers:without_version
        entity_type:
          allOf:
            - $ref: '#/components/schemas/AuditEntityTypeEnum'
          description: The type of entity that was recorded
          example: rivers
        entity_logical_key:
          type: string
          title: Entity Logical Key
          default: A unique logical identifier of an entity, usually the cross_id
          example: 5eda28ee6b028e1ce7a2b5ec
        account_id:
          type: string
          title: Account Id
          description: The account id the event originated for
          example: 5ebec4ca6b028e2da4191dde
        environment_id:
          type: string
          title: Environment Id
          description: The environment id the event originated for
          example: 5ebec4ca6b028e2da4191de1
        user_id:
          type: string
          title: User Id
          description: The user id the event originated for
          example: 60d08931f5682c0d9fa24890
        user_name:
          type: string
          title: User Name
          description: The name of the user that originated the event
          example: Rivi Ee
        entity_name:
          type: string
          title: Entity Name
          description: >-
            The name of the event entity, this could be the name of the river,
            connection etc.
          example: My First River
        entity_subtype:
          type: string
          title: Entity Subtype
          description: >-
            The even subtype, this could be a river classification like logic or
            s2t rivers
          examples:
            - src_to_trgt
            - logic
        additional_info:
          type: string
          title: Additional Info
          default: Additional information saved for the event
          example: '{"version_id": "637582d3c32287000fc1d69f"}'
      type: object
      required:
        - event_id
        - event_initiator
        - event_datetime
        - event_type
        - event_result_status
        - event_name
        - entity_type
        - account_id
        - environment_id
        - user_id
      title: AuditEventsResponse
      description: Audit events response
    AzureSqlAdditionalTargetSettings:
      properties:
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          example: id desc,createDate asc
          nullable: true
        target_loading:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          example: merge
          nullable: true
        target_type:
          type: string
          enum:
            - azure_sql
          title: Target Type
          description: Internal field, populated automatically
          default: azure_sql
          nullable: true
      type: object
      title: AzureSqlAdditionalTargetSettings
      description: Azure SQL specific target settings
    AzureSqlModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - azure_sql
          title: Target Type
          description: Internal field, populated automatically
          default: azure_sql
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: AzureSqlModifiedColumn
      description: AzureSql specific columns settings
    AzureSqlTargetSettings:
      properties:
        name:
          type: string
          enum:
            - azure_sql
          title: Name
          description: The name of the target
          default: azure_sql
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      title: AzureSqlTargetSettings
      description: Azure SQL target settings properties to return.
    AzureSynapseAnalyticsModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - azure_synapse_analytics
          title: Target Type
          description: Internal field, populated automatically
          default: azure_synapse_analytics
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: AzureSynapseAnalyticsModifiedColumn
      description: AzureSynapseAnalytics specific columns settings
    AzureSynapseAnalyticsTargetSettings:
      properties:
        name:
          type: string
          enum:
            - azure_synapse_analytics
          title: Name
          description: The name of the target
          default: azure_synapse_analytics
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      title: AzureSynapseAnalyticsTargetSettings
      description: Azure Synapse Analytics target settings properties to return.
    BigQueryAdditionalTargetSettings:
      properties:
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          example: id desc,createDate asc
          nullable: true
        target_loading:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          example: merge
          nullable: true
        target_type:
          type: string
          enum:
            - bigquery
          title: Target Type
          description: Internal field, populated automatically
          default: bigquery
          nullable: true
        use_standard_sql:
          type: boolean
          title: Use Standard Sql
          description: >-
            Indication if to use standard SQL, default is true, if false will
            use legacy SQL.
          example: true
          nullable: true
        split_tables:
          type: string
          title: Split Tables
          description: Split tables at target.
          default: no_split
          example: no_split
          nullable: true
        split_interval:
          type: string
          title: Split Interval
          description: The interval by which to split the tables if split table is on.
          example: daily
          nullable: true
        split_data:
          type: string
          title: Split Data
          description: >-
            The expression by which to split the tablesif split tables by
            expression is chosen.
          example: a>3
          nullable: true
        partition_type:
          type: string
          title: Partition Type
          description: The type of partition to partition that table by.
          example: timestamp
          nullable: true
        partition_granularity:
          type: string
          title: Partition Granularity
          description: The partition granularity to split the table by.
          example: day
          nullable: true
      type: object
      title: BigQueryAdditionalTargetSettings
      description: BigQuery specific target settings
    BigQueryModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        is_partition:
          type: boolean
          title: Is Partition
          description: Indication if the column is a partition column
          default: false
          nullable: true
        target_type:
          type: string
          enum:
            - bigquery
          title: Target Type
          description: Internal field, populated automatically
          default: bigquery
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: BigQueryModifiedColumn
      description: Big Query specific columns settings
    BigQueryTargetSettings:
      properties:
        name:
          type: string
          enum:
            - bigquery
          title: Name
          description: The name of the target
          default: bigquery
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
        dataset_id:
          type: string
          title: Dataset Id
          description: The dataset ID of this target
          example: dataset_1
          nullable: true
      type: object
      required:
        - loading_method
      title: BigQueryTargetSettings
      description: BigQuery target settings properties to return.
    BlobStorageSettings:
      properties:
        name:
          type: string
          enum:
            - blob_storage
          title: Name
          description: The name of the target
          default: blob_storage
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        path:
          type: string
          title: Path
          description: The path of the file zone entity.
          example: my_path
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name of the file zone entity.
          example: my_bucket
        partitioned_kind:
          allOf:
            - $ref: '#/components/schemas/PartitionedKindEnum'
          description: The partitioned kind of the file zone entity.
          example: by_day
      type: object
      required:
        - path
        - bucket_name
        - partitioned_kind
      title: BlobStorageSettings
      description: Azure Blob Storage target settings properties to return.
    CalculatedColumnModeEnum:
      type: string
      enum:
        - source
        - target
      title: CalculatedColumnModeEnum
      description: >-
        The calculated column mode

        Calculated column mode is used to determine if the calculated column is
        a new column or an override of an existing

        It can be used either on the source or the target
    CancelRiverRunBody:
      properties:
        run_id:
          type: string
          title: Run Id
          description: The run_id to cancel.
        run_group_id:
          type: string
          title: Run Group Id
          description: >-
            The run_group_id to cancel. Use this field when you want to cancel
            multiple tables or sub rivers
      type: object
      title: CancelRiverRunBody
      description: Cancel River Run body
    CdcConfig:
      properties:
        config:
          oneOf:
            - $ref: '#/components/schemas/CdcMysqlConfig'
            - $ref: '#/components/schemas/CdcPostgresConfig'
            - $ref: '#/components/schemas/CdcSqlServerConfig'
            - $ref: '#/components/schemas/CdcMongodbConfig'
            - $ref: '#/components/schemas/CdcOracleConfig'
          title: Config
          discriminator:
            propertyName: datasource_type
            mapping:
              mysql: '#/components/schemas/CdcMysqlConfig'
              postgres: '#/components/schemas/CdcPostgresConfig'
              mssql: '#/components/schemas/CdcSqlServerConfig'
              mongodb: '#/components/schemas/CdcMongodbConfig'
              oracle: '#/components/schemas/CdcOracleConfig'
      type: object
      required:
        - config
      title: CdcConfig
      description: The cdc config request class.
    CdcMongodbConfig:
      properties:
        last_updated:
          type: string
          title: Last Updated
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          type: string
          enum:
            - mongodb
          title: Datasource Type
          default: mongodb
        resume_token:
          type: string
          title: Resume Token
          description: The resume token position offset
      type: object
      required:
        - resume_token
      title: CdcMongodbConfig
      description: |-
        Cdc Mongodb Config:
        * resume token offset of the Mongodb database CDC
    CdcMysqlConfig:
      properties:
        last_updated:
          type: string
          title: Last Updated
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          type: string
          enum:
            - mysql
          title: Datasource Type
          default: mysql
        binlog_file:
          type: string
          title: Binlog File
          description: The bin log file
          example: mysql-bin-changelog.000931
        binlog_position:
          type: string
          title: Binlog Position
          description: The binlog position
          example: '515820321'
        gtid:
          type: string
          title: Gtid
          description: The gtid position offset
          example: >-
            51d431b9-585e-11ed-9222-022d1416c792:1-34,7e0646d8-b3e4-11eb-a15e-0a47d4c912dc:1-21343,8937b67f-3ab2-11ea-9bc9-0ad74248f0fe:1-5182243242,c23585e8-579a-11ed-83e3-0a47d4c912dc:1-12
      type: object
      title: CdcMysqlConfig
      description: |-
        Cdc mysql config:
        * binlog offset of the MYSQL database CDC
    CdcOracleConfig:
      properties:
        last_updated:
          type: string
          title: Last Updated
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          type: string
          enum:
            - oracle
          title: Datasource Type
          default: oracle
        scn_offset:
          type: integer
          title: Scn Offset
          description: The system change number offset
      type: object
      required:
        - scn_offset
      title: CdcOracleConfig
      description: |-
        Cdc Oracle config:
        * system change number of the Oracle database CDC
    CdcPostgresConfig:
      properties:
        last_updated:
          type: string
          title: Last Updated
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          type: string
          enum:
            - postgres
          title: Datasource Type
          default: postgres
        lsn_offset:
          type: integer
          title: Lsn Offset
          description: The lsn position offset
          example: 518
      type: object
      required:
        - lsn_offset
      title: CdcPostgresConfig
      description: |-
        Cdc postgres config:
        * lsn offset of the postgres database CDC
    CdcSqlServerConfig:
      properties:
        last_updated:
          type: string
          title: Last Updated
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          type: string
          enum:
            - mssql
          title: Datasource Type
          default: mssql
        lsn_offset_sql_server:
          type: string
          title: Lsn Offset Sql Server
          description: The lsn offset sql server position offset
          example: '0x0000004B000009350003'
      type: object
      required:
        - lsn_offset_sql_server
      title: CdcSqlServerConfig
      description: |-
        Cdc sql server config:
        * lsn offset of the sql server database CDC
    ColumnsIncrementTypeEnum:
      type: string
      enum:
        - INTEGER
        - TIMESTAMP
        - DATE
        - FLOAT
        - STRING
        - DATETIME
      title: ColumnsIncrementTypeEnum
      description: All increment columns data types
    ColumnsIntervalTypeEnum:
      type: string
      enum:
        - datetime
        - runningnumber
        - epoch
        - row_version
        - date
      title: ColumnsIntervalTypeEnum
      description: The column's interval type
    ColumnsModeEnum:
      type: string
      enum:
        - NULLABLE
        - REPEATED
      title: ColumnsModeEnum
      description: All column modes.
    ColumnsTypeEnum:
      type: string
      enum:
        - INTEGER
        - TIMESTAMP
        - DATE
        - FLOAT
        - STRING
        - DATETIME
        - BOOLEAN
        - RECORD
        - VARCHAR
        - SMALLINT
        - BIGINT
        - OBJECT
        - NUMBER
        - VARIANT
        - JSON
        - TEXT
        - TIME
        - TINYINT
      title: ColumnsTypeEnum
      description: All column data types.
    ConvertFileTypeEnum:
      type: string
      enum:
        - parquet
      title: ConvertFileTypeEnum
      description: >-
        Conversion service types of file conversions.

        The conversion service supports multiple conversion including CSV and
        JSON but the back only support PARQUET for now

        Once the back adds support for the other file types we can add them here
    CopyRiverResponse:
      properties:
        details:
          type: string
          title: Details
        cross_id:
          type: string
          title: Cross Id
          description: The new river cross id
          example: 62e7f4352c13160013dc39be
      type: object
      required:
        - details
        - cross_id
      title: CopyRiverResponse
      description: Copy river response
    CreateOrUpdateScimTokenResponse:
      properties:
        account_id:
          type: string
          title: Account Id
          description: The account id
          examples:
            - 65c2465a76ba59de1a868a4e
        scim_service_url:
          type: string
          title: Scim Service Url
          description: The connection string (URL) used to communicate with your SCIM app
          examples:
            - https://rivery-scim.rivery.io
        token:
          type: string
          title: Token
          description: >-
            The SCIM authentication token. Keep the token somewhere safe. The
            token will be shown only once.
          examples:
            - '1234'
      type: object
      required:
        - account_id
        - scim_service_url
        - token
      title: CreateOrUpdateScimTokenResponse
      description: SCIM Token create or update response.
    CreateUserTeam:
      properties:
        display_name:
          type: string
          title: Display Name
          description: The display name in rivery
          example: Rivery Core Team
        description:
          type: string
          title: Description
          description: Internal description
          example: Some description
        environments:
          type: object
          title: Environments
          description: Dictionary of environment id and environment role
          default: {}
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          type: boolean
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          default: false
          example: true
      type: object
      required:
        - display_name
      title: CreateUserTeam
      description: Request create user groups input.
    DatabaseTableInput:
      properties:
        run_type_and_datasource:
          type: string
          enum:
            - multi_tables
          title: Run Type And Datasource
          description: Internal field
          default: multi_tables
        details:
          allOf:
            - $ref: '#/components/schemas/WriteDatabaseTableDetailsInput'
          title: Details
          description: The database table details
      type: object
      required:
        - details
      title: DatabaseTableInput
      description: |-
        Table properties which define the db table data
        This schema is being used for read
    DatabricksModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - databricks
          title: Target Type
          description: Internal field, populated automatically
          default: databricks
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: DatabricksModifiedColumn
      description: Databricks specific columns settings
    DatabricksTargetSettings:
      properties:
        name:
          type: string
          enum:
            - databricks
          title: Name
          description: The name of the target
          default: databricks
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      title: DatabricksTargetSettings
      description: Databricks target settings properties to return.
    DataframeAddInput:
      properties:
        connection_settings:
          allOf:
            - $ref: '#/components/schemas/DataframeConnectionSettingsInput'
          title: Connection Settings
          description: The connection settings of the dataframe
          example: |-
            "connection_settings":{
                    "connection" : "6278159bcfc148000fad5632",
                    "datasource_id" : "s3",
                    "storage_type" : "aws",
                    "default_bucket" : "rivery-dev-tests"}
                    
        name:
          type: string
          title: Name
          description: The name of the dataframe - must be unique
          example: unique_name
      type: object
      required:
        - name
      title: DataframeAddInput
      description: |-
        Input for adding Dataframe
            
    DataframeConnectionSettingsInput:
      properties:
        connection:
          type: string
          title: Connection
          description: The connection of the connection_settings
          example: 62e7f4352c13160013dc39be
        datasource_id:
          type: string
          title: Datasource Id
          description: The datasource_id of the connection_settings
          example: aws
        default_bucket:
          type: string
          title: Default Bucket
          description: The default bucket of the connection settings
          example: some_s3_bucket
        storage_type:
          type: string
          title: Storage Type
          description: The storage type of the connection settings
          example: s3
      type: object
      required:
        - connection
        - datasource_id
        - default_bucket
        - storage_type
      title: DataframeConnectionSettingsInput
      description: |-
        Input for the Dataframe connection settings
            
    DataframePaginationResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        items:
          items:
            $ref: '#/components/schemas/DataframeResponse'
          type: array
          title: Items
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
      title: DataframePaginationResponse
      description: |-
        Dataframe response properties to return as a paginated list
            
    DataframeResponse:
      properties:
        account_id:
          type: string
          title: Account Id
          description: The account id of the user
          example: 62e7f4352c13160013dc39be
        environment_id:
          type: string
          title: Environment Id
          description: The environment id of the user
          example: 82e7f4122c13169813dc395g
        connection_settings:
          type: object
          title: Connection Settings
          description: The connection settings of the dataframe
          default: {}
          example: |-
            "connection_settings":{
                                                                    "connection" : "6278159bcfc148000fad5632",
                                                                    "datasource_id" : "s3",
                                                                    "storage_type" : "aws",
                                                                    "default_bucket" : "rivery-dev-tests"}
        name:
          type: string
          title: Name
          description: The name of the dataframe - must be unique
          example: unique_name
      type: object
      required:
        - account_id
        - environment_id
        - name
      title: DataframeResponse
      description: |-
        Dataframe response properties to return
            
    DataframeUpdateInput:
      properties:
        connection_settings:
          allOf:
            - $ref: '#/components/schemas/DataframeConnectionSettingsInput'
          title: Connection Settings
          description: The connection settings of the dataframe
          example: |-
            "connection_settings":{
                    "connection" : "6278159bcfc148000fad5632",
                    "datasource_id" : "s3",
                    "storage_type" : "aws",
                    "default_bucket" : "rivery-dev-tests"}
                    
      type: object
      title: DataframeUpdateInput
      description: Input for updating Dataframe
    DateRange:
      properties:
        time_period:
          allOf:
            - $ref: '#/components/schemas/RiverTimePeriodEnum'
          description: The time period of the river entity.
          default: custom
          example: custom
          nullable: true
        start_date:
          type: string
          title: Start Date
          description: The start date of the river entity.
          example: '2020-12-01T00:00:00.000Z'
          nullable: true
        end_date:
          type: string
          title: End Date
          description: The end date of the river entity.
          example: '2020-01-01T00:00:00.000Z'
          nullable: true
        days_back:
          type: integer
          title: Days Back
          description: The days back of the river entity.
          default: 0
          example: 1
        include_end_value:
          type: boolean
          title: Include End Value
          description: Whether to include or exclude the end_value in the date range
          default: false
          example: true
          extra:
            name: date_range.include_end_value
            type: switch
            display_name: Include the End Value of the End Date
            left_label: true
        split_time_intervals:
          allOf:
            - $ref: '#/components/schemas/SplitTimeIntervals'
          title: Split Time Intervals
          description: The interval time to split by when using date increment.
          default:
            time_interval: dont_split
            interval_size: 1
          example:
            time_interval: days
            interval_size: 3
        update_increment_on_failures:
          type: boolean
          title: Update Increment On Failures
          description: >-
            If to update the start date for the next extraction even if the
            current extraction is unsuccessful.
          default: false
          example: true
      type: object
      title: DateRange
      description: Date range when using incremental loading method.
    DistributionMethodEnum:
      type: string
      enum:
        - all
        - even
        - key
      title: DistributionMethodEnum
      description: |-
        Enum for distribution methods in Redshift as a target, example:
        ALL - A copy of the entire table is distributed to every node
    EmailTargetSettings:
      properties:
        name:
          type: string
          enum:
            - target_email
          title: Name
          description: The name of the target
          default: target_email
        email_list:
          items:
            type: string
          type: array
          maxItems: 15
          minItems: 1
          title: Email List
          description: A list of email addresses to send the data to.
          example:
            - example@example.io
      type: object
      required:
        - email_list
      title: EmailTargetSettings
      description: Email target settings properties to return.
    EnvironmentInput:
      properties:
        name:
          type: string
          title: Name
          description: The environment name
          example: Dev Environment
        color:
          allOf:
            - $ref: '#/components/schemas/EnvironmentsColorEnum'
          description: The environment color as shown in the app
          default: gray.400
          example: Gray.400
        description:
          type: string
          title: Description
          description: The environment description
          example: Development environment for new rivers
        is_default:
          type: boolean
          title: Is Default
          description: >-
            A flag that indicates whether the environment is the account's
            default environment
          default: 'False'
          example: 'True'
      type: object
      required:
        - name
      title: EnvironmentInput
      description: Add Environment Model
    EnvironmentsColorEnum:
      type: string
      enum:
        - gray.400
        - tagGreen
        - cBlues
        - tagCyan
        - tagGeekBlue
        - cPurples
        - tagPurple
        - tagMagenta
        - cOranges
        - tagOrange
        - yellow.200
      title: EnvironmentsColorEnum
      description: The EnvironmentsColor enum provides all color options for environments
    EnvironmentsFields:
      properties:
        _id:
          type: string
          title: ' Id'
          description: The environment id
          example: 633ede20f1fc5500111fd7b3
        account:
          type: string
          title: Account
          description: The account id of the user
          example: 62e7f4352c13160013dc39be
        user_created:
          type: string
          title: User Created
          description: The user id of the user who first created the environment
          example: 62e7f4352c13160013dc39be
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: string
          title: Created At
          description: >-
            The environment creation date time in UTC timezone. Time format
            YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
        cross_id:
          type: string
          title: Cross Id
          description: The cross id of the environment
          example: 62e7f4352c13160013dc39be
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: string
          title: Updated At
          description: The time in which the environment was last updated (UTC time zone)
          example: '2022-08-02T13:38:44.054000'
        environment_name:
          type: string
          title: Environment Name
          description: The environment name
          example: Dev Environment
        color:
          allOf:
            - $ref: '#/components/schemas/EnvironmentsColorEnum'
          description: The environment color as shown in the app
          default: gray.400
          example: Gray
        description:
          type: string
          title: Description
          description: The environment description
          example: Development environment for new rivers
        variables:
          type: object
          title: Variables
          description: Environment's variables
          example:
            days_ago: '0'
            aws_file_zone: Rivery-rivery
            gcs_file_zone: Rivery-rivery
            azure_file_zone: Rivery-rivery
            hours_offset: '0'
        is_deleted:
          type: boolean
          title: Is Deleted
          description: A flag that indicates whether the environment is deleted
          default: false
          example: 'False'
        deleted_by:
          type: string
          title: Deleted By
          description: >-
            The user id of the user who deleted the environment (if the
            environment is deleted)
          example: 62e7f4352c13160013dc39be
        deleted_at:
          anyOf:
            - type: string
              format: date-time
            - type: string
          title: Deleted At
          description: >-
            The time in which the environment was deleted (if the environment is
            deleted). Time format YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
        is_default:
          type: boolean
          title: Is Default
          description: >-
            A flag that indicates whether the environment is the account's
            default environment
          default: 'False'
          example: 'True'
        updated_by:
          type: string
          title: Updated By
          description: The user id of the user who last updated the environment
          example: 62e7f4352c13160013dc39be
        is_delete_lock:
          type: boolean
          title: Is Delete Lock
          description: A flag that indicates the environment deletion progress
          example: 'True'
      type: object
      required:
        - _id
        - account
        - cross_id
        - environment_name
        - variables
      title: EnvironmentsFields
      description: |-
        Environments properties to return.
            
    ExtractMethodEnum:
      type: string
      enum:
        - all
        - incremental
        - log
      title: ExtractMethodEnum
      description: |-
        Extract method enum.
        The supported extract methods are:
         - All - for extracting all the data with no filter
         - Incremental - for extracting the data with an increment filter by a certain field / column
         - LogBased - for CDC extraction using logs
    FacebookAdsAdsTypeEnum:
      type: string
      enum:
        - ads_ids
        - ads_names
        - ads_filter
      title: FacebookAdsAdsTypeEnum
      description: Facebook Ads, ads type enum
    FacebookAdsCampaignsTypeEnum:
      type: string
      enum:
        - campaigns_ids
        - campaigns_names
        - campaigns_filter
      title: FacebookAdsCampaignsTypeEnum
      description: Facebook Ads campaigns type enum
    FacebookAdsSetsTypeEnum:
      type: string
      enum:
        - adsets_ids
        - adsets_names
        - adsets_filter
      title: FacebookAdsSetsTypeEnum
      description: Facebook Ads ad sets type enum
    FinancialStatusEnum:
      type: string
      enum:
        - any
        - paid
        - unpaid
        - voided
        - pending
        - refunded
        - authorized
        - partially_paid
        - partially_refunded
      title: FinancialStatusEnum
      description: Shopify financial order status enum
    GCSModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - GCS
          title: Target Type
          description: Internal field, populated automatically
          default: GCS
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: GCSModifiedColumn
      description: GCS specific columns settings
    GcsTargetSettings:
      properties:
        name:
          type: string
          enum:
            - GCS
          title: Name
          description: The name of the target
          default: GCS
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        path:
          type: string
          title: Path
          description: The path of the file zone entity.
          example: my_path
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name of the file zone entity.
          example: my_bucket
        partitioned_kind:
          allOf:
            - $ref: '#/components/schemas/PartitionedKindEnum'
          description: The partitioned kind of the file zone entity.
          example: by_day
      type: object
      required:
        - path
        - bucket_name
        - partitioned_kind
      title: GcsTargetSettings
      description: GCS target settings properties to return.
    GeneralResponse:
      properties:
        details:
          type: string
          title: Details
      type: object
      required:
        - details
      title: GeneralResponse
      description: General response schema contains only details
    GetScimTokenStatusResponse:
      properties:
        account_id:
          type: string
          title: Account Id
          description: The account id
          examples:
            - 65c2465a76ba59de1a868a4e
        is_enabled:
          type: boolean
          title: Is Enabled
          description: A flag that indicates whether SCIM provisioning is enabled
          examples:
            - true
        scim_service_url:
          type: string
          title: Scim Service Url
          description: The connection string (URL) used to communicate with your SCIM app
          examples:
            - https://rivery-scim.rivery.io
      type: object
      required:
        - account_id
        - is_enabled
        - scim_service_url
      title: GetScimTokenStatusResponse
      description: SCIM token get status
    GroupOrUserSourceEnum:
      type: string
      enum:
        - rivery
        - active_directory
      title: GroupOrUserSourceEnum
      description: >-
        The source group. can be locally from Rivery or imported from external
        provider
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IDNameInput:
      properties:
        id:
          type: string
          title: Id
          description: The if of the entity
        name:
          type: string
          title: Name
          description: The name of the entity
      type: object
      required:
        - id
      title: IDNameInput
      description: Basic ID and Name input
    IncrementColumn:
      properties:
        name:
          type: string
          title: Name
          description: The column’s name
          example: column name
        type:
          allOf:
            - $ref: '#/components/schemas/ColumnsIncrementTypeEnum'
          description: The data type of the increment column in the DB
          example: DATETIME
        incremental_type:
          allOf:
            - $ref: '#/components/schemas/ColumnsIntervalTypeEnum'
          description: The interval type of the column
          example: datetime
        is_default:
          type: boolean
          title: Is Default
          description: >-
            A boolean field that indicates if the column should be the default
            increment column
          default: false
          example: false
      type: object
      required:
        - name
        - type
        - incremental_type
      title: IncrementColumn
      description: Increment columns for the table entity
    IncrementalFieldEnum:
      type: string
      enum:
        - updated at
        - created at
      title: IncrementalFieldEnum
      description: Shopify addresses/customers incremental field enum
    IntervalTimeExternalEnum:
      type: string
      enum:
        - dont_split
        - minutes
        - hours
        - days
        - weeks
        - months
        - years
      title: IntervalTimeExternalEnum
      description: >-
        Intervals by time options (external enum for IntervalChunkSizeEnum
        options)
    LegacyRiverResponse:
      properties:
        river_definition:
          type: object
          title: River Definition
          description: The definition of the river version
          example:
            river:
              name: river_name
              id: 55fr7d4270fdca16cac18261
              type: river_type
              version: river_version
              source:
                type: source_type
                id: 55fr7d4270fdca16cac18261
                name: source_name
        source_task_config:
          type: object
          title: Source Task Config
          description: The source task config of the river version
          example:
            task:
              name: task_name
        target_task_config:
          type: object
          title: Target Task Config
          description: The target task config of the river version
          example:
            task:
              name: task_name
      type: object
      required:
        - river_definition
        - source_task_config
      title: LegacyRiverResponse
      description: >-
        This class is used to return the river version definition in the legacy
        format.
    ListEnvironmentsPaginationResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        items:
          items:
            $ref: '#/components/schemas/EnvironmentsFields'
          type: array
          title: Items
      type: object
      required:
        - current_page_size
        - account_id
        - items
      title: ListEnvironmentsPaginationResponse
      description: The list environments response to return as a paginated list
    ListRiverObject:
      properties:
        name:
          type: string
          title: Name
          description: Name of the river
          example: river_name
        river_status:
          allOf:
            - $ref: '#/components/schemas/RiverStatusEnum'
          description: Status of the river
          example: active
        group_name:
          type: string
          title: Group Name
          description: Name of the group associated with the river
          example: river_group_1
        group_id:
          type: string
          title: Group Id
          description: the id of the group associated with the river
          example: 62e7f4352c13160013dc39be
        river_schedulers:
          items:
            type: string
          type: array
          title: River Schedulers
          description: List of schedulers used for the river
          example:
            - 0 * * * *
            - 0 0 1 * *
        datasource_id:
          type: string
          title: Datasource Id
          description: Source ID of the river
          example: 5f7d4270fdca16cac18261
        last_user_name_modified:
          type: string
          title: Last User Name Modified
          description: User name of the last modifier
          example: user_name
        river_cross_id:
          type: string
          title: River Cross Id
          description: River cross ID
          example: 5f7d4270fdca16cac18261
        last_updated_at:
          type: string
          format: date-time
          title: Last Updated At
          description: Last time the river was modified
          example: '2021-01-01T00:00:00.000Z'
        description:
          type: string
          title: Description
          description: Description of the river, if available
          example: river_description
          nullable: true
        is_api_v2:
          type: boolean
          title: Is Api V2
          description: Flag indicating whether the river is using API v2
          example: true
        river_type:
          allOf:
            - $ref: '#/components/schemas/RiverTypeEnum'
          description: Type of the river
          example: source_to_target
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Time the river was created
          example: '2021-01-01T00:00:00.000Z'
      type: object
      required:
        - name
        - river_status
        - group_name
        - group_id
        - river_schedulers
        - datasource_id
        - last_user_name_modified
        - river_cross_id
        - last_updated_at
        - is_api_v2
        - river_type
        - created_at
      title: ListRiverObject
      description: River list object for the list endpoint.
    ListRiversSortByFilterEnum:
      type: string
      enum:
        - last_updated_at
        - source_name
        - river_name
        - group_name
        - group_id
      title: ListRiversSortByFilterEnum
      description: The river sort by filter enum provide all the sort by options.
    LoadingMode:
      type: string
      enum:
        - overwrite
        - append
        - merge
      title: LoadingMode
      description: 'Enum for loading modes '
    LogicBlockTypeEnum:
      type: string
      enum:
        - big_query_sql
        - river
        - redshift
        - action
        - azure_datalake
        - azure_sql
        - azure_datalake_job
        - snowflake
        - logicode
        - azure_sql_dwh
        - postgres
        - databricks
        - firebolt
        - athena
      title: LogicBlockTypeEnum
      description: >-
        Logic step can have block types - this enum enumerate the different
        block types
    LogicContainerTypeEnum:
      type: string
      enum:
        - run_once
        - loop_over
        - condition
      title: LogicContainerTypeEnum
      description: ALl of the logic container options
    LogicProperties:
      properties:
        properties_type:
          type: string
          enum:
            - logic
          title: Properties Type
          default: logic
      additionalProperties: false
      type: object
      title: LogicProperties
      description: Logic properties which define the logic river properties
    LogicStep:
      properties:
        is_container:
          type: boolean
          title: Is Container
          description: A flag that indicates whether this step is a container or not
          example: true
        container_type:
          allOf:
            - $ref: '#/components/schemas/LogicContainerTypeEnum'
          description: The container type - if any
          example: run_once
        start_date_utc:
          type: string
          format: date-time
          title: Start Date Utc
          description: >-
            The start date time in UTC timezone.Time format
            YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
        start_date_in_milliseconds:
          type: integer
          title: Start Date In Milliseconds
          description: The start epoch in milliseconds.
          example: 1658774335000
        end_date_utc:
          type: string
          format: date-time
          title: End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
        end_date_in_milliseconds:
          type: integer
          title: End Date In Milliseconds
          description: The end epoch in milliseconds.
          example: 1658774335000
          nullable: true
        step_status:
          allOf:
            - $ref: '#/components/schemas/ActivityStatusEnum'
          description: The step status
          example: succeeded
        loop_iteration_number:
          type: integer
          title: Loop Iteration Number
          description: >-
            If loop exist, it will contain the loop iteration number, otherwise
            0
        duration:
          type: string
          title: Duration
          description: >-
            Step duration. Format h:mm:ss.ms. If step failed or canceled the
            duration will be 'None'
          example: '0:01:23.275006'
        step_execution_id:
          type: string
          title: Step Execution Id
        step_id:
          type: string
          title: Step Id
        step_index:
          type: string
          title: Step Index
        error_description:
          type: string
          title: Error Description
          description: The error description if any
          example: error
          nullable: true
        logicode_statistics:
          allOf:
            - $ref: '#/components/schemas/LogicodeStatistics'
          title: Logicode Statistics
          description: The logicode statistics of RPU, duration and network
          nullable: true
        block_type:
          allOf:
            - $ref: '#/components/schemas/LogicBlockTypeEnum'
          description: The logic block type
          example: action
          nullable: true
      type: object
      required:
        - is_container
        - start_date_utc
        - start_date_in_milliseconds
        - step_status
        - loop_iteration_number
        - duration
        - step_execution_id
        - step_id
        - step_index
      title: LogicStep
      description: Logic step configuration
    LogicodeStatistics:
      properties:
        logicode_rpu:
          type: number
          title: Logicode Rpu
          description: The total RPUs that were consumed during this step run
        logicode_network_mb:
          type: number
          title: Logicode Network Mb
          description: The total network (in and out) consumption of this step run
        logicode_duration_seconds:
          type: number
          title: Logicode Duration Seconds
          description: The duration of this step
      type: object
      required:
        - logicode_rpu
        - logicode_network_mb
        - logicode_duration_seconds
      title: LogicodeStatistics
      description: Logicode (python) statistics
    MergeMethod:
      type: string
      enum:
        - switch_tables
        - delete_insert
        - merge
      title: MergeMethod
      description: 'Enum for merge methods '
    MongoDBAdditionalSourceSettings:
      properties:
        filter_expression:
          type: string
          title: Filter Expression
          description: The filter expression of the river entity.
          default: ''
          example: id > 100
        source_type:
          type: string
          enum:
            - mongodb
          title: Source Type
          description: Internal field, populated automatically
          default: mongodb
          nullable: true
        concurrent_requests_number:
          type: integer
          title: Concurrent Requests Number
          description: Number of connections to open concurrently to MongoDB
          default: 1
          example: 1
          nullable: true
      type: object
      title: MongoDBAdditionalSourceSettings
      description: MongoDB specific source settings
    MongoDBSourceCDCSettings:
      properties:
        default_tables_migration_option:
          allOf:
            - $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
        datasource_id:
          type: string
          enum:
            - mongodb
          title: Datasource Id
          description: The data source id of this source
          default: mongodb
      type: object
      title: MongoDBSourceCDCSettings
      description: MongoDB Source settings properties.
    MySQLAdditionalSourceSettings:
      properties:
        filter_expression:
          type: string
          title: Filter Expression
          description: The filter expression of the river entity.
          default: ''
          example: id > 100
        source_type:
          type: string
          enum:
            - mysql
          title: Source Type
          description: Internal field, populated automatically
          default: mysql
          nullable: true
      type: object
      title: MySQLAdditionalSourceSettings
      description: MySQL specific source settings
    MysqlSourceCDCSettings:
      properties:
        default_tables_migration_option:
          allOf:
            - $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
        datasource_id:
          type: string
          enum:
            - mysql
          title: Datasource Id
          description: The data source id of this source
          default: mysql
      type: object
      title: MysqlSourceCDCSettings
      description: Mysql Source settings properties to return.
    NotificationSettings:
      properties:
        warning:
          allOf:
            - $ref: '#/components/schemas/RiverNotificationReport'
          title: Warning
          description: Notification report for warning.
          nullable: true
        failure:
          allOf:
            - $ref: '#/components/schemas/RiverNotificationReport'
          title: Failure
          description: Notification report for failure.
          nullable: true
        run_threshold:
          allOf:
            - $ref: '#/components/schemas/RiverNotificationReport'
          title: Run Threshold
          description: Notification report for run threshold.
          nullable: true
      type: object
      title: NotificationSettings
      description: |-
        Notification settings properties for the entire river
        (define what to do on warning, error, failure/timeout)
    OperationResponse:
      properties:
        operation_id:
          type: string
          title: Operation Id
          description: The ID of the operation
          example: 62e7f4352c13160013dc39be
        operation_type:
          type: string
          title: Operation Type
          description: The type of the operation
          example: dataframe
        last_update_date:
          type: string
          format: date-time
          title: Last Update Date
          description: The date time in UTC timezone of the last update
          example: '2022-08-02T13:38:44.054000'
        status:
          allOf:
            - $ref: '#/components/schemas/PullRequestStatus'
          description: The current status of the operation id
          example: D
        result:
          title: Result
          description: The result of the operation
          example: 'true'
        error_message:
          type: string
          title: Error Message
          description: The error message of the operation
          example: '[RVR-QBK-003]: Response value error: Missing Rows/Columns'
      type: object
      required:
        - operation_id
        - operation_type
        - last_update_date
        - status
      title: OperationResponse
      description: |-
        Operation properties to return.
            
    OracleAdditionalSourceSettings:
      properties:
        filter_expression:
          type: string
          title: Filter Expression
          description: The filter expression of the river entity.
          default: ''
          example: id > 100
        source_type:
          type: string
          enum:
            - oracle
          title: Source Type
          description: Internal field, populated automatically
          default: oracle
          nullable: true
      type: object
      title: OracleAdditionalSourceSettings
      description: Oracle specific source settings
    OracleSourceCDCSettings:
      properties:
        default_tables_migration_option:
          allOf:
            - $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
        datasource_id:
          type: string
          enum:
            - oracle
          title: Datasource Id
          description: The data source id of this source
          default: oracle
      type: object
      title: OracleSourceCDCSettings
      description: Oracle Source settings properties to return.
    PartitionedKindEnum:
      type: string
      enum:
        - by_day
        - by_hour
        - by_minute
      title: PartitionedKindEnum
      description: Partitioned kind for storages
    PatchEnvironmentInput:
      properties:
        environment_name:
          type: string
          title: Environment Name
          description: The environment name
          example: Dev Environment
        color:
          allOf:
            - $ref: '#/components/schemas/EnvironmentsColorEnum'
          description: The environment color as shown in the app
          example: Gray.400
        description:
          type: string
          title: Description
          description: The environment description
          example: Development environment for new rivers
        is_default:
          type: boolean
          title: Is Default
          description: >-
            A flag that indicates whether the environment is the account's
            default environment
          example: 'True'
      type: object
      title: PatchEnvironmentInput
      description: Patch Environment Model
    PatchUserTeamsInput:
      properties:
        display_name:
          type: string
          title: Display Name
          description: The display name in rivery
          example: Rivery Core Team
        description:
          type: string
          title: Description
          description: Internal description
          example: Some description
        environments:
          type: object
          title: Environments
          description: Dictionary of environment id and environment role
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          type: boolean
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          example: true
      type: object
      title: PatchUserTeamsInput
      description: Request patch user groups input.
    PostgreSQLAdditionalSourceSettings:
      properties:
        filter_expression:
          type: string
          title: Filter Expression
          description: The filter expression of the river entity.
          default: ''
          example: id > 100
        source_type:
          type: string
          enum:
            - postgresql
          title: Source Type
          description: Internal field, populated automatically
          default: postgresql
          nullable: true
      type: object
      title: PostgreSQLAdditionalSourceSettings
      description: PostgreSQL specific source settings
    PostgresAdditionalTargetSettings:
      properties:
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          example: id desc,createDate asc
          nullable: true
        target_loading:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          example: merge
          nullable: true
        target_type:
          type: string
          enum:
            - postgres
          title: Target Type
          description: Internal field, populated automatically
          default: postgres
          nullable: true
        analyze_tables:
          type: boolean
          title: Analyze Tables
          description: Analyze the tables after the load process
          default: false
      type: object
      title: PostgresAdditionalTargetSettings
      description: Postgres specific target settings
    PostgresModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - postgres
          title: Target Type
          description: Internal field, populated automatically
          default: postgres
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: PostgresModifiedColumn
      description: Postgres specific columns settings
    PostgresSourceCDCSettings:
      properties:
        default_tables_migration_option:
          allOf:
            - $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
        datasource_id:
          type: string
          enum:
            - postgres
          title: Datasource Id
          description: The data source id of this source
          default: postgres
        custom_replication_slot:
          type: string
          title: Custom Replication Slot
          description: The custom replication slot of this source
          example: custom_replication_slot
        custom_publication:
          type: string
          title: Custom Publication
          description: The custom publication of this source
          example: custom_publication
      type: object
      title: PostgresSourceCDCSettings
      description: Postgres Source settings properties to return.
    PostgresTargetSettings:
      properties:
        name:
          type: string
          enum:
            - postgres
          title: Name
          description: The name of the target
          default: postgres
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      title: PostgresTargetSettings
      description: Postgres target settings properties to return.
    PredefinedColumnModel:
      properties:
        name:
          type: string
          title: Name
          description: The column name.
          example: column_name
        type:
          allOf:
            - $ref: '#/components/schemas/ColumnsTypeEnum'
          description: The column's data type.
          example: STRING
        is_key:
          type: boolean
          title: Is Key
          description: Whether the column is a key.
          default: false
          example: true
        alias:
          type: string
          title: Alias
          description: The column name's alias.
          example: column_alias
        mode:
          allOf:
            - $ref: '#/components/schemas/ColumnsModeEnum'
          description: The column's mode.
          example: NULLABLE
        datasource_id:
          allOf:
            - $ref: '#/components/schemas/SourceTypeEnum'
          description: The column datasource id.
          example: shopify
        report:
          type: string
          title: Report
          description: The column's report id.
          example: orders
        fields:
          items:
            type: string
          type: array
          title: Fields
          description: A list of subfields for the original field
      type: object
      required:
        - name
        - type
        - datasource_id
        - report
      title: PredefinedColumnModel
      description: Predefined report column structure
    PredefinedColumnsPaginatedResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        items:
          items:
            $ref: '#/components/schemas/PredefinedColumnModel'
          type: array
          title: Items
          description: A list of predefined columns
      type: object
      required:
        - current_page_size
        - items
      title: PredefinedColumnsPaginatedResponse
      description: The response for the get predefined columns.
    PredefinedMetadataModelResponse:
      properties:
        title:
          type: string
          title: Title
          description: The report title.
          example: my title
        description:
          type: string
          title: Description
          description: The report description.
          example: report description
        properties:
          type: object
          title: Properties
          description: The report fields and metadata.
        required:
          items:
            type: string
          type: array
          title: Required
          description: A list of required report fields
          example:
            - id
      type: object
      required:
        - title
        - description
        - properties
      title: PredefinedMetadataModelResponse
      description: The response for the get predefined metadata.
    PredefinedReportShopifyTableInput:
      properties:
        run_type_and_datasource:
          type: string
          enum:
            - predefined_report_shopify
          title: Run Type And Datasource
          description: Internal field
          default: predefined_report_shopify
        details:
          anyOf:
            - $ref: '#/components/schemas/WriteShopifyPredefinedOrdersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedShopReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAddressesReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAnalyticReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedCustomersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedInventoryLevelsReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedMarketingEventsReport'
            - $ref: >-
                #/components/schemas/WriteShopifyPredefinedOrderTransactionsReport
            - $ref: '#/components/schemas/WriteShopifyPredefinedProductsReport'
          title: Details
          description: The predefined report table details
      additionalProperties: false
      type: object
      required:
        - details
      title: PredefinedReportShopifyTableInput
      description: |-
        Table properties which define the predefined report table data
        This schema is being used for read
    PredefinedTableModel:
      properties:
        id:
          type: string
          title: Id
          description: The table id.
          example: table_id
        increment_columns:
          items:
            $ref: '#/components/schemas/IncrementColumn'
          type: array
          title: Increment Columns
          description: List of columns that the table can run incrementally by.
          example:
            - incremental_type: runningnumber
              type: FLOAT
              name: days_unsigned__c
              is_default: false
        datasource_id:
          type: string
          title: Datasource Id
          description: The id of the datasource.
          example: shopify
        report_id:
          type: string
          title: Report Id
          description: The id of the report.
          example: predefined_orders
        report_name:
          type: string
          title: Report Name
          description: The name of the report.
          example: orders
        no_increment:
          type: boolean
          title: No Increment
          description: Indication if there is no increment for the report.
          nullable: true
        increment_required:
          type: boolean
          title: Increment Required
          description: Indication if the increment is required for the report.
          nullable: true
        user_parameters:
          items:
            type: string
          type: array
          title: User Parameters
          description: List of parameters the user can input and change.
          default: []
          example:
            - date
          nullable: true
        hide_parameters:
          items:
            type: string
          type: array
          title: Hide Parameters
          description: List of parameters hidden to the user
          default: []
          nullable: true
      type: object
      required:
        - id
        - increment_columns
        - datasource_id
        - report_id
        - report_name
      title: PredefinedTableModel
      description: >-
        Predefined table properties to return (for Shopify, Facebook ads,
        etc...)
    PredefinedTablesModelPaginatedResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        items:
          items:
            $ref: '#/components/schemas/PredefinedTableModel'
          type: array
          title: Items
          description: A list of predefined tables
      type: object
      required:
        - current_page_size
        - items
      title: PredefinedTablesModelPaginatedResponse
      description: The response for the get predefined tables.
    ProductsIncrementalFieldEnum:
      type: string
      enum:
        - updated at
        - created at
        - published at
      title: ProductsIncrementalFieldEnum
      description: Shopify products incremental field enum
    PullRequestStatus:
      type: string
      enum:
        - W
        - E
        - R
        - D
      title: PullRequestStatus
      description: >-
        The status of the pull request that we use in the back, and expose in
        the API
    RedshiftAdditionalTargetSettings:
      properties:
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          example: id desc,createDate asc
          nullable: true
        target_loading:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          example: merge
          nullable: true
        target_type:
          type: string
          enum:
            - redshift
          title: Target Type
          description: Internal field, populated automatically
          default: redshift
          nullable: true
        distribution_method:
          allOf:
            - $ref: '#/components/schemas/DistributionMethodEnum'
          description: The distribution method of the target.
          default: even
          example: even
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method of the table, if not specified the default merge
            method of the riverwill be used.
          example: merge
          nullable: true
      type: object
      title: RedshiftAdditionalTargetSettings
      description: Redshift specific target settings
    RedshiftModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - redshift
          title: Target Type
          description: Internal field, populated automatically
          default: redshift
          nullable: true
        length:
          type: integer
          title: Length
          description: The length of VARCHAR columns.
          example: 256
          nullable: true
        scale:
          type: integer
          title: Scale
          description: The scale of DECIMAL columns.
          example: 0
          nullable: true
        precision:
          type: integer
          title: Precision
          description: The precision of DECIMAL columns.
          example: 18
          nullable: true
        is_dist_key:
          type: boolean
          title: Is Dist Key
          description: >-
            If the column is a unique Distkey column on which the table is
            distributed to each node
          example: true
          nullable: true
        is_sorted:
          type: boolean
          title: Is Sorted
          description: >-
            If the column should be sorted (if true- sort_order is the order of
            the column for sorting.
          example: true
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: RedshiftModifiedColumn
      description: Redshift specific columns settings
    RedshiftTargetSettings:
      properties:
        name:
          type: string
          enum:
            - redshift
          title: Name
          description: The name of the target
          default: redshift
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
        schema_name:
          type: string
          title: Schema Name
          description: The schema name of this target
          example: Schema 1
          nullable: true
      type: object
      required:
        - loading_method
      title: RedshiftTargetSettings
      description: Redshift target settings properties to return.
    RestoreRiverVersionInput:
      properties:
        version_id:
          type: string
          title: Version Id
          description: The id of the version to restore.
          example: 5f7d4270fdca16cac18261
      additionalProperties: false
      type: object
      required:
        - version_id
      title: RestoreRiverVersionInput
      description: Input for restoring a river version
    RiverActivityRun:
      properties:
        run_id:
          type: string
          title: Run Id
          description: The run ID
          example: 5658a1c9ea724ee59f048cbb5a6f734a
        datasource_id:
          type: string
          title: Datasource Id
          description: The datasource ID
          example: mysql
        error_description:
          type: string
          title: Error Description
          description: The error description if any
          example: error
          nullable: true
        units:
          type: number
          title: Units
          description: Total RPU (units)
          example: 2.1
        rpu:
          type: number
          title: Rpu
          description: Total RPU
          example: 2.1
        run_group_id:
          type: string
          title: Run Group Id
          description: The run group id
          example: 201dcf8182ad4a59868cb41b957fdc8d
        status:
          $ref: '#/components/schemas/ActivityStatusEnum'
        source_name:
          type: string
          title: Source Name
          description: The name of the source
          example: mysql
        target_name:
          type: string
          title: Target Name
          description: The target table name
          example: table
          nullable: true
        start_date_utc:
          type: string
          format: date-time
          title: Start Date Utc
          description: >-
            The start date time in UTC timezone.Time format
            YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
        start_date_in_milliseconds:
          type: integer
          title: Start Date In Milliseconds
          description: The start epoch in milliseconds.
          example: 1658774335000
        end_date_utc:
          type: string
          format: date-time
          title: End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
        end_date_in_milliseconds:
          type: integer
          title: End Date In Milliseconds
          description: The end epoch in milliseconds.
          example: 1658774335000
          nullable: true
        sub_river_id:
          type: string
          title: Sub River Id
          description: The sub river id
          example: 507f191e810c19729de860ea
          nullable: true
        is_sub_river_run:
          type: boolean
          title: Is Sub River Run
          description: A flag that indicates whether this run is of a sub river or not
          example: false
      type: object
      required:
        - run_id
        - datasource_id
        - units
        - rpu
        - run_group_id
        - status
        - source_name
        - start_date_utc
        - start_date_in_milliseconds
        - is_sub_river_run
      title: RiverActivityRun
      description: A run
    RiverActivityRunGroup:
      properties:
        run_group_id:
          type: string
          title: Run Group Id
          description: The run group id
          example: 201dcf8182ad4a59868cb41b957fdc8d
        status:
          type: string
          title: Status
        units:
          type: number
          title: Units
          description: Total RPU (units)
          example: 2.1
        rpu:
          type: number
          title: Rpu
          description: Total RPU
          example: 2.1
        max_duration_in_milliseconds:
          type: integer
          title: Max Duration In Milliseconds
        run_date_epoch_milliseconds:
          type: integer
          title: Run Date Epoch Milliseconds
        run_date_utc:
          type: string
          format: date-time
          title: Run Date Utc
        run_end_date_epoch_milliseconds:
          type: integer
          title: Run End Date Epoch Milliseconds
          description: The end epoch in milliseconds.
          example: 1658774335000
          nullable: true
        run_end_date_utc:
          type: string
          format: date-time
          title: Run End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
      type: object
      required:
        - run_group_id
        - status
        - run_date_epoch_milliseconds
        - run_date_utc
      title: RiverActivityRunGroup
      description: The run group details
    RiverActivityRunGroupResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        items:
          items:
            $ref: '#/components/schemas/RiverActivityRunGroup'
          type: array
          title: Items
        river_cross_id:
          type: string
          title: River Cross Id
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
        - river_cross_id
      title: RiverActivityRunGroupResponse
      description: The response for the activity run groups
    RiverActivityRunGroupWithStatistics:
      properties:
        run_group_id:
          type: string
          title: Run Group Id
          description: The run group id
          example: 201dcf8182ad4a59868cb41b957fdc8d
        status:
          type: string
          title: Status
        units:
          type: number
          title: Units
          description: Total RPU (units)
          example: 2.1
        rpu:
          type: number
          title: Rpu
          description: Total RPU
          example: 2.1
        max_duration_in_milliseconds:
          type: integer
          title: Max Duration In Milliseconds
        run_date_epoch_milliseconds:
          type: integer
          title: Run Date Epoch Milliseconds
        run_date_utc:
          type: string
          format: date-time
          title: Run Date Utc
        run_end_date_epoch_milliseconds:
          type: integer
          title: Run End Date Epoch Milliseconds
          description: The end epoch in milliseconds.
          example: 1658774335000
          nullable: true
        run_end_date_utc:
          type: string
          format: date-time
          title: Run End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
        running:
          type: integer
          title: Running
        canceled:
          type: integer
          title: Canceled
        pending:
          type: integer
          title: Pending
        failed:
          type: integer
          title: Failed
        succeeded:
          type: integer
          title: Succeeded
        skipped:
          type: integer
          title: Skipped
      type: object
      required:
        - run_group_id
        - status
        - run_date_epoch_milliseconds
        - run_date_utc
        - running
        - canceled
        - pending
        - failed
        - succeeded
        - skipped
      title: RiverActivityRunGroupWithStatistics
      description: The run group details with statistics
    RiverActivityRunLogicStepsLogsResponse:
      properties:
        logs_url:
          type: string
          title: Logs Url
      type: object
      required:
        - logs_url
      title: RiverActivityRunLogicStepsLogsResponse
      description: run's logic step logs
    RiverActivityRunLogicStepsResponse:
      properties:
        account_id:
          type: string
          title: Account Id
        environment_id:
          type: string
          title: Environment Id
        river_cross_id:
          type: string
          title: River Cross Id
        run_id:
          type: string
          title: Run Id
        steps:
          additionalProperties:
            $ref: '#/components/schemas/LogicStep'
          type: object
          title: Steps
      type: object
      required:
        - account_id
        - environment_id
        - river_cross_id
        - run_id
        - steps
      title: RiverActivityRunLogicStepsResponse
      description: run's logic step
    RiverActivityRunsResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        items:
          items:
            $ref: '#/components/schemas/RiverActivityRun'
          type: array
          title: Items
        river_cross_id:
          type: string
          title: River Cross Id
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
        - river_cross_id
      title: RiverActivityRunsResponse
      description: The activity run response
    RiverActivityStatisticResponse:
      properties:
        account_id:
          type: string
          title: Account Id
        environment_id:
          type: string
          title: Environment Id
        total_units:
          type: number
          title: Total Units
          description: Total RPU (units)
          example: 2.1
        total_rpu:
          type: number
          title: Total Rpu
          description: Total RPU
          example: 2.1
        running:
          type: integer
          title: Running
        canceled:
          type: integer
          title: Canceled
        pending:
          type: integer
          title: Pending
        failed:
          type: integer
          title: Failed
        succeeded:
          type: integer
          title: Succeeded
        skipped:
          type: integer
          title: Skipped
        river_cross_id:
          type: string
          title: River Cross Id
      type: object
      required:
        - account_id
        - environment_id
        - total_units
        - total_rpu
        - running
        - canceled
        - pending
        - failed
        - succeeded
        - skipped
        - river_cross_id
      title: RiverActivityStatisticResponse
      description: Statistics response
    RiverActivitySubRiver:
      properties:
        sub_river_id:
          type: string
          title: Sub River Id
        sub_river_name:
          type: string
          title: Sub River Name
      type: object
      required:
        - sub_river_id
        - sub_river_name
      title: RiverActivitySubRiver
      description: Activity's sub river
    RiverActivitySubRiverResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RiverActivitySubRiver'
          type: array
          title: Items
        account_id:
          type: string
          title: Account Id
        environment_id:
          type: string
          title: Environment Id
        river_cross_id:
          type: string
          title: River Cross Id
      type: object
      required:
        - items
        - account_id
        - environment_id
        - river_cross_id
      title: RiverActivitySubRiverResponse
      description: The response of the sub river
    RiverActivityTarget:
      properties:
        target_name:
          type: string
          title: Target Name
        status:
          $ref: '#/components/schemas/ActivityStatusEnum'
        units:
          type: number
          title: Units
          description: Total RPU (units)
          example: 2.1
        rpu:
          type: number
          title: Rpu
          description: Total RPU
          example: 2.1
        last_run:
          type: string
          format: date-time
          title: Last Run
      type: object
      required:
        - target_name
        - status
        - units
        - rpu
        - last_run
      title: RiverActivityTarget
      description: The activity target
    RiverActivityTargetResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RiverActivityTarget'
          type: array
          title: Items
        account_id:
          type: string
          title: Account Id
        environment_id:
          type: string
          title: Environment Id
        river_cross_id:
          type: string
          title: River Cross Id
      type: object
      required:
        - items
        - account_id
        - environment_id
        - river_cross_id
      title: RiverActivityTargetResponse
      description: Target response
    RiverFileZoneSettings:
      properties:
        path:
          type: string
          title: Path
          description: The path of the file zone entity.
          example: my_path
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name of the file zone entity.
          example: my_bucket
          nullable: true
        partitioned_kind:
          allOf:
            - $ref: '#/components/schemas/PartitionedKindEnum'
          description: The partitioned kind of the file zone entity.
          example: by_day
      type: object
      required:
        - path
        - partitioned_kind
      title: RiverFileZoneSettings
      description: River File zone settings properties to return.
    RiverKindEnum:
      type: string
      enum:
        - sub_river
        - main_river
      title: RiverKindEnum
      description: River kind
    RiverListResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        items:
          items:
            $ref: '#/components/schemas/ListRiverObject'
          type: array
          title: Items
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
      title: RiverListResponse
      description: List rivers response object.
    RiverMetadata:
      properties:
        description:
          type: string
          title: Description
          description: The description of the river.
          default: ''
          example: River 1 description
        river_status:
          allOf:
            - $ref: '#/components/schemas/RiverStatusEnum'
          description: The status of the river.
          default: disabled
          example: active
      type: object
      title: RiverMetadata
      description: River metadata properties for the CREATE
    RiverMetadataExtended:
      properties:
        description:
          type: string
          title: Description
          description: The description of the river.
          default: ''
          example: River 1 description
        river_status:
          allOf:
            - $ref: '#/components/schemas/RiverStatusEnum'
          description: The status of the river.
          default: disabled
          example: active
        current_version_id:
          type: string
          title: Current Version Id
          description: The current version ID of the river.
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        created_by:
          type: string
          title: Created By
          description: The User that created the river.
          example: SomeUser
        last_updated_by:
          type: string
          title: Last Updated By
          description: The User that last updated the river.
          example: SomeUser
        created_at:
          type: string
          format: date-time
          title: Created At
          description: The date the river was created.
          example: '2020-09-01T00:00:00Z'
        last_updated_at:
          type: string
          format: date-time
          title: Last Updated At
          description: The date the river was last updated.
          example: '2020-09-01T12:00:00.000Z'
      type: object
      required:
        - last_updated_by
        - created_at
        - last_updated_at
      title: RiverMetadataExtended
      description: Extended RiverMetadata to be returned with the GET
    RiverModel:
      properties:
        cross_id:
          type: string
          title: Cross Id
          description: The river cross id.
          example: 62e7f4352c13160013dc39be
        account_id:
          type: string
          title: Account Id
          description: The account id.
          example: 62e7f4352c13160013dc39be
        kind:
          allOf:
            - $ref: '#/components/schemas/RiverKindEnum'
          description: The kind of the river.
          default: main_river
          example: main_river
        type:
          allOf:
            - $ref: '#/components/schemas/RiverTypeEnum'
          description: The type of the river.
          example: source_to_target
        name:
          type: string
          title: Name
          description: The name of the river.
          example: my_river
        environment_id:
          type: string
          title: Environment Id
          description: The environment cross id.
          example: 62e7f4352c13160013dc39be
        environment_name:
          type: string
          title: Environment Name
          description: The environment name.
          example: my_environment
        group_id:
          type: string
          title: Group Id
          description: The group id.
          example: 62e7f4352c13160013dc39be
        group_name:
          type: string
          title: Group Name
          description: The group name.
          example: my_group
        metadata:
          allOf:
            - $ref: '#/components/schemas/RiverMetadataExtended'
          title: Metadata
          description: The river metadata.
        properties:
          oneOf:
            - $ref: '#/components/schemas/SourceToTargetRiverProperties'
            - $ref: '#/components/schemas/ActionProperties'
            - $ref: '#/components/schemas/LogicProperties'
          title: Properties
          description: The river properties, will change according to the river type.
          discriminator:
            propertyName: properties_type
            mapping:
              source_to_target: '#/components/schemas/SourceToTargetRiverProperties'
              actions: '#/components/schemas/ActionProperties'
              logic: '#/components/schemas/LogicProperties'
        settings:
          allOf:
            - $ref: '#/components/schemas/RiverSettings'
          title: Settings
          description: River settings.
          nullable: true
        schedulers:
          items:
            $ref: '#/components/schemas/RiverSchedule'
          type: array
          title: Schedulers
          description: River schedulers.
          default: []
          nullable: true
      type: object
      required:
        - cross_id
        - account_id
        - type
        - name
        - environment_id
        - environment_name
        - group_id
        - group_name
        - metadata
        - properties
      title: RiverModel
      description: River properties to return
    RiverNotificationReport:
      properties:
        email:
          type: string
          title: Email
          description: Email address to send the report to in case of failure.
          example: test@test.com
        is_enabled:
          type: boolean
          title: Is Enabled
          description: A flag that indicates whether the notification is enabled.
          default: false
          example: true
        execution_time_limit_seconds:
          type: integer
          title: Execution Time Limit Seconds
          description: >-
            The execution time limit in seconds of the river before reporting,
            only relevant for on run_threshold.
          example: 43200
          nullable: true
      type: object
      required:
        - email
      title: RiverNotificationReport
      description: |-
        River Notification Report properties
            
    RiverRunResponse:
      properties:
        sub_river_id:
          type: string
          title: Sub River Id
          description: The river cross id
          example: 62e7f4352c13160013dc39be
          nullable: true
        run_id:
          type: string
          title: Run Id
          description: The run id of the run process
          example: 1f1468d097754cd8892468c2763ebfe8
        status:
          allOf:
            - $ref: '#/components/schemas/ActivityStatusEnum'
          description: the status of the run process
          example: pending
        message:
          type: string
          title: Message
          description: the message of the run process
          example: The river is already in progress.
          nullable: true
      type: object
      required:
        - run_id
        - status
      title: RiverRunResponse
      description: Run properties to return
    RiverSchedule:
      properties:
        cron_expression:
          type: string
          title: Cron Expression
          description: The cron expression of the river entity.
          example: '* * * * *'
          nullable: true
        is_enabled:
          type: boolean
          title: Is Enabled
          description: The is enabled of the river.
          default: false
          example: true
      type: object
      title: RiverSchedule
      description: |-
        River schedule properties to return.
            
    RiverScheduleStatusEnum:
      type: string
      enum:
        - all
        - scheduled
        - unscheduled
      title: RiverScheduleStatusEnum
      description: River schedule status enum
    RiverSettings:
      properties:
        run_timeout_seconds:
          type: integer
          title: Run Timeout Seconds
          description: The timeout of the river in seconds.
          default: 43200
          example: 43200
        notification:
          allOf:
            - $ref: '#/components/schemas/NotificationSettings'
          title: Notification
          description: River notification settings.
          nullable: true
      type: object
      title: RiverSettings
      description: |-
        River settings properties to return.
            
    RiverStatusEnum:
      type: string
      enum:
        - active
        - disabled
      title: RiverStatusEnum
      description: >-
        River status enum.

        Used in the is_enabled field which is part of the river properties.

        Disabled status for a river means the river cannot be executed while
        active status river can.
    RiverTablesMigrationDefaultSyncOption:
      type: string
      enum:
        - SKIP_INITIAL_MIGRATION
        - RUN_INITIAL_MIGRATION
      title: RiverTablesMigrationDefaultSyncOption
      description: >-
        Each river can have a few options when it comes to migration of tables

        1. skip_initial_migration: will mean that the tables will inherit the
        status from the river and skip the migration

        2. run_initial_migration: (default for most cases) will mean that tables
        will fully migrate in the first run
    RiverTimePeriodEnum:
      type: string
      enum:
        - custom
        - yesterday
        - today
        - last_7_days
        - last_365_days
        - week_to_date
        - previous_week
        - previous_week_to_date
        - last_week
        - month_to_date
        - previous_month
        - previous_month_to_date
        - year_to_date
      title: RiverTimePeriodEnum
      description: River supported time periods
    RiverTypeEnum:
      type: string
      enum:
        - src_to_trgt
        - source_to_target
        - actions
        - logic
      title: RiverTypeEnum
      description: All of the EXTERNAL river types
    RiverVariableSettings:
      properties:
        clear_value_on_start:
          type: boolean
          title: Clear Value On Start
          description: Option for clearing variable on river start
          default: false
          example: false
        is_multi_value:
          type: boolean
          title: Is Multi Value
          description: Indicator for variable containing multiple values
          default: false
          example: false
        is_encrypted:
          type: boolean
          title: Is Encrypted
          description: Option for encrypting variable value
          default: false
          example: true
        is_private:
          type: boolean
          title: Is Private
          description: Option for private variable value in source to target rivers
          default: false
          example: false
        add_to_results:
          type: boolean
          title: Add To Results
          description: Add variables to results for actions river
          example: false
      type: object
      title: RiverVariableSettings
      description: |-
        Variable settings fields.
            
    RiverVariablesFields:
      properties:
        account:
          type: string
          title: Account
          description: The account of the river
          example: 55fr7d4270fdca16cac18261
        env_id:
          type: string
          title: Env Id
          description: The environment of the river
          example: 55fr7d4270fdca16cac18261
        river_id:
          type: string
          title: River Id
          description: The ID of the river
          example: 55fr7d4270fdca16cac18261
        name:
          type: string
          title: Name
          description: The name of the variable
          example: credentials
        settings:
          type: object
          title: Settings
          description: variable settings
          example:
            clear_value_on_start: true
            is_multi_value: false
            is_private: false
            is_encrypted: false
        value:
          anyOf:
            - type: string
            - items: {}
              type: array
          title: Value
          description: value of variable
          example: '1234'
      type: object
      required:
        - account
        - env_id
        - river_id
        - name
        - settings
      title: RiverVariablesFields
      description: |-
        River variable properties to return.
            
    RiverVariablesPaginatedResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        items:
          items:
            $ref: '#/components/schemas/RiverVariablesFields'
          type: array
          title: Items
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
      title: RiverVariablesPaginatedResponse
      description: >-
        Final river variables paginated response for all variables in a single
        river.
            
    RiverVersionMetadata:
      properties:
        account_id:
          type: string
          title: Account Id
          description: The account id of the river version
          example: 55fr7d4270fdca16cac18261
        user_info:
          allOf:
            - $ref: '#/components/schemas/UserInfo'
          title: User Info
          description: Contains user name and user email information
          nullable: true
        environment_id:
          type: string
          title: Environment Id
          description: The environment id of the river version
          example: 55fr7d4270fdca16cac18261
        insert_date:
          type: string
          format: date-time
          title: Insert Date
          description: The insert date time of the river version in UTC timezone
          example: '2022-08-02T13:38:44.054000'
        version_id:
          type: string
          title: Version Id
          description: The version id of the river version
          example: 55fr7d4270fdca16cac18261
        previous_version:
          type: string
          title: Previous Version
          description: The previous version id of the river version
          example: 55fr7d4270fdca16cac18261
        created_by:
          type: string
          title: Created By
          description: The creator id of the river version
          example: 55fr7d4270fdca16cac18261
        river_id:
          type: string
          title: River Id
          description: The river id of the river version
          example: 55fr7d4270fdca16cac18261
        restored_by:
          type: string
          title: Restored By
          description: The restore id of the river version
          example: 55fr7d4270fdca16cac18261
        restore_date:
          type: string
          format: date-time
          title: Restore Date
          description: The restore date time of the river version in UTC timezone
          example: '2022-08-02T13:38:44.054000'
          nullable: true
        name:
          type: string
          title: Name
          description: Name of river version
          example: river_version_name
        bookmarked:
          type: boolean
          title: Bookmarked
          description: Flag indicating whether the river version is bookmarked or not
          default: false
          example: false
      type: object
      required:
        - account_id
        - environment_id
        - insert_date
        - version_id
        - created_by
        - river_id
      title: RiverVersionMetadata
      description: |-
        River Versions metadata. This class does not contain the version itself.
            
    RiverVersions:
      properties:
        account_id:
          type: string
          title: Account Id
          description: The account id of the river version
          example: 55fr7d4270fdca16cac18261
        user_info:
          allOf:
            - $ref: '#/components/schemas/UserInfo'
          title: User Info
          description: Contains user name and user email information
          nullable: true
        environment_id:
          type: string
          title: Environment Id
          description: The environment id of the river version
          example: 55fr7d4270fdca16cac18261
        insert_date:
          type: string
          format: date-time
          title: Insert Date
          description: The insert date time of the river version in UTC timezone
          example: '2022-08-02T13:38:44.054000'
        version_id:
          type: string
          title: Version Id
          description: The version id of the river version
          example: 55fr7d4270fdca16cac18261
        previous_version:
          type: string
          title: Previous Version
          description: The previous version id of the river version
          example: 55fr7d4270fdca16cac18261
        created_by:
          type: string
          title: Created By
          description: The creator id of the river version
          example: 55fr7d4270fdca16cac18261
        river_id:
          type: string
          title: River Id
          description: The river id of the river version
          example: 55fr7d4270fdca16cac18261
        restored_by:
          type: string
          title: Restored By
          description: The restore id of the river version
          example: 55fr7d4270fdca16cac18261
        restore_date:
          type: string
          format: date-time
          title: Restore Date
          description: The restore date time of the river version in UTC timezone
          example: '2022-08-02T13:38:44.054000'
          nullable: true
        name:
          type: string
          title: Name
          description: Name of river version
          example: river_version_name
        bookmarked:
          type: boolean
          title: Bookmarked
          description: Flag indicating whether the river version is bookmarked or not
          default: false
          example: false
        river:
          anyOf:
            - $ref: '#/components/schemas/LegacyRiverResponse'
            - $ref: '#/components/schemas/RiverModel'
          title: River
          description: The definition of the river version
          example:
            river definition: some definition
      type: object
      required:
        - account_id
        - environment_id
        - insert_date
        - version_id
        - created_by
        - river_id
        - river
      title: RiverVersions
      description: |-
        River Versions properties to return.
            
    RiverVersionsResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        environment_id:
          type: string
          title: Environment Id
          description: The environment id
        statistics:
          $ref: '#/components/schemas/RiverVersionsStats'
        items:
          items:
            $ref: '#/components/schemas/RiverVersionMetadata'
          type: array
          title: Items
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - statistics
        - items
      title: RiverVersionsResponse
      description: |-
        River Versions response.
            
    RiverVersionsStats:
      properties:
        bookmarked_versions:
          type: integer
          title: Bookmarked Versions
          description: Number of bookmarked river versions
          example: 3
        bookmarks_allowed:
          type: integer
          title: Bookmarks Allowed
          description: Maximum number of bookmarked river versions allowed
          example: 30
        total_versions:
          type: integer
          title: Total Versions
          description: Total number of existing river versions
          example: 3
        snapshot_versions:
          type: integer
          title: Snapshot Versions
          description: Number of snapshot river versions
          example: 2
        versions_allowed:
          type: integer
          title: Versions Allowed
          description: Maximum number of non-bookmarked river versions allowed
          example: 70
      type: object
      required:
        - bookmarked_versions
        - bookmarks_allowed
        - total_versions
        - snapshot_versions
        - versions_allowed
      title: RiverVersionsStats
      description: |-
        River versions stats fields.
            
    RiversRunResponse:
      properties:
        runs:
          items:
            $ref: '#/components/schemas/RiverRunResponse'
          type: array
          title: Runs
        river_cross_id:
          type: string
          title: River Cross Id
        run_group_id:
          type: string
          title: Run Group Id
      type: object
      required:
        - runs
        - river_cross_id
        - run_group_id
      title: RiversRunResponse
      description: >-
        Run response properties to return

        The response is a list since in the case of sub rivers that are multiple
        runs,

        and we want to be able to return them all
    RunGroupSortByEnum:
      type: string
      enum:
        - units
        - last_run
        - max_duration
      title: RunGroupSortByEnum
      description: Activities sort properties in the UI.
    RunGroupStatusEnum:
      type: string
      enum:
        - partially succeeded
        - pending
        - canceled
        - succeeded
        - failed
        - running
        - skipped
      title: RunGroupStatusEnum
      description: The run group enum provide all the status that run group can have.
    RunTypeEnum:
      type: string
      enum:
        - custom
        - multi_tables
        - legacy
        - predefined_report
      title: RunTypeEnum
      description: River run types
    RunningNumber:
      properties:
        start_value:
          type: integer
          title: Start Value
          description: The start value of the river entity.
          example: 1
          nullable: true
        end_value:
          type: integer
          title: End Value
          description: The end value of the river entity.
          example: 100
          nullable: true
        include_end_value:
          type: boolean
          title: Include End Value
          description: >-
            Whether to include or exclude the end_value in the running number
            range
          default: false
          example: true
        rows_in_chunk:
          type: integer
          title: Rows In Chunk
          description: The rows in chunk of the river entity.
          default: 100000
          example: 1000
      type: object
      title: RunningNumber
      description: >-
        Running number when using incremental on a running number and not date
        time
    RunsSortByEnum:
      type: string
      enum:
        - units
        - start_time
        - table_name
      title: RunsSortByEnum
      description: Activities sort properties in the UI.
    S3ModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - s3
          title: Target Type
          description: Internal field, populated automatically
          default: s3
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: S3ModifiedColumn
      description: S3 specific columns settings
    S3TargetSettings:
      properties:
        name:
          type: string
          enum:
            - s3
          title: Name
          description: The name of the target
          default: s3
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        path:
          type: string
          title: Path
          description: The path of the file zone entity.
          example: my_path
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name of the file zone entity.
          example: my_bucket
        partitioned_kind:
          allOf:
            - $ref: '#/components/schemas/PartitionedKindEnum'
          description: The partitioned kind of the file zone entity.
          example: by_day
        convert_file_type:
          allOf:
            - $ref: '#/components/schemas/ConvertFileTypeEnum'
          description: The type of file to convert to
          example: parquet
          nullable: true
      type: object
      required:
        - path
        - bucket_name
        - partitioned_kind
      title: S3TargetSettings
      description: S3 target settings properties to return.
    ScheduleEnum:
      type: string
      enum:
        - 'true'
        - 'false'
      title: ScheduleEnum
      description: Schedule can be either True or False (enabled or disabled)
    Schema:
      properties:
        name:
          type: string
          title: Name
          description: The name of the schema
        tables:
          items:
            oneOf:
              - $ref: '#/components/schemas/DatabaseTableInput'
              - $ref: '#/components/schemas/PredefinedReportShopifyTableInput'
            discriminator:
              propertyName: run_type_and_datasource
              mapping:
                multi_tables: '#/components/schemas/DatabaseTableInput'
                predefined_report_shopify: '#/components/schemas/PredefinedReportShopifyTableInput'
          type: array
          title: Tables
          default: []
      type: object
      required:
        - name
      title: Schema
      description: The schema we use for GET operations
    SnowflakeAdditionalTargetSettings:
      properties:
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          example: id desc,createDate asc
          nullable: true
        target_loading:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          example: merge
          nullable: true
        target_type:
          type: string
          enum:
            - snowflake
          title: Target Type
          description: Internal field, populated automatically
          default: snowflake
          nullable: true
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method of the table, if not specified the default merge
            method of the riverwill be used.
          example: merge
          nullable: true
        enforce_masking_policy:
          type: boolean
          title: Enforce Masking Policy
          description: >-
            Reserve the data masking policy that is applied on the column level
            in your target table.
          default: false
          example: false
          nullable: true
        recreate_keys:
          type: boolean
          title: Recreate Keys
          description: Recreate the table keys.
          default: false
          example: false
          nullable: true
        escape_character:
          type: string
          title: Escape Character
          description: >-
            Escape characters allow special characters in strings to be
            interpreted as literal characters, rather than as control characters
            inside the query
          example: \t
          nullable: true
      type: object
      title: SnowflakeAdditionalTargetSettings
      description: Snowflake specific target settings
    SnowflakeModifiedColumn:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the column is selected and should be modified.
          example: true
        name:
          type: string
          title: Name
          description: The name of the column.
          example: column_name
        type:
          type: string
          title: Type
          description: The type of the column.
          example: string
          nullable: true
        alias:
          type: string
          title: Alias
          description: The alias of the column in the target table.
          example: column_alias
          nullable: true
        expression:
          type: string
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          example: select 'test'
          nullable: true
        is_key:
          type: boolean
          title: Is Key
          description: If the column is a key.
          example: true
          nullable: true
        sort_order:
          type: integer
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          example: 1
          nullable: true
        is_sort_key:
          type: boolean
          title: Is Sort Key
          description: If the column is a sort column.
          example: true
          nullable: true
        calculated_column_mode:
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          example: source
          nullable: true
        order:
          type: integer
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          example: 1
          nullable: true
        target_type:
          type: string
          enum:
            - snowflake
          title: Target Type
          description: Internal field, populated automatically
          default: snowflake
          nullable: true
      additionalProperties: false
      type: object
      required:
        - is_selected
        - name
      title: SnowflakeModifiedColumn
      description: Snowflake specific columns settings
    SnowflakeTargetSettings:
      properties:
        name:
          type: string
          enum:
            - snowflake
          title: Name
          description: The name of the target
          default: snowflake
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this target
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this target
          example: Connection 1
          nullable: true
        table_name:
          type: string
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          type: string
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          type: boolean
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          default: false
          example: true
        order_expression:
          type: string
          title: Order Expression
          description: The order expression of the river entity.
          example: id desc,createDate asc
          nullable: true
        loading_method:
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          description: The loading method of this target
          example: merge
        merge_method:
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          example: merge
          nullable: true
        file_zone_settings:
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          title: File Zone Settings
          description: The file zone settings of this target
          nullable: true
        file_path_destination:
          type: string
          title: File Path Destination
          description: The file name and path
          example: path/to/file
        bucket_name:
          type: string
          title: Bucket Name
          description: The bucket name
          example: bucket
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this target
          default: {}
          example:
            key: value
          nullable: true
        database_name:
          type: string
          title: Database Name
          description: The database name of this target
          example: Database 1
          nullable: true
        schema_name:
          type: string
          title: Schema Name
          description: The schema name of this target
          example: Schema 1
          nullable: true
      type: object
      required:
        - loading_method
      title: SnowflakeTargetSettings
      description: Snowflake target settings properties to return.
    SortOrderEnum:
      type: string
      enum:
        - desc
        - asc
      title: SortOrderEnum
      description: Sorting can be either asc or desc, used in the api-service
    SourceSettings:
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/SourceTypeEnum'
          description: The name of the source (correlate to source type in db)
          example: mysql
          nullable: true
        connection_id:
          type: string
          title: Connection Id
          description: The connection ID of this source.
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          type: string
          title: Connection Name
          description: The connection name of this source.
          example: Connection 1
          nullable: true
        run_type:
          allOf:
            - $ref: '#/components/schemas/RunTypeEnum'
          description: The run type of this source.
          default: multi_tables
          example: predefined_report
        cdc_settings:
          oneOf:
            - $ref: '#/components/schemas/MysqlSourceCDCSettings'
            - $ref: '#/components/schemas/PostgresSourceCDCSettings'
            - $ref: '#/components/schemas/OracleSourceCDCSettings'
            - $ref: '#/components/schemas/MongoDBSourceCDCSettings'
          title: Cdc Settings
          description: The CDC settings of this source.
          discriminator:
            propertyName: datasource_id
            mapping:
              mysql: '#/components/schemas/MysqlSourceCDCSettings'
              postgres: '#/components/schemas/PostgresSourceCDCSettings'
              oracle: '#/components/schemas/OracleSourceCDCSettings'
              mongodb: '#/components/schemas/MongoDBSourceCDCSettings'
          nullable: true
        additional_settings:
          type: object
          title: Additional Settings
          description: The additional settings of this source.
          default: {}
          example:
            extract_method: all
          nullable: true
      type: object
      required:
        - name
      title: SourceSettings
      description: Source settings properties to return.
    SourceToTargetRiverProperties:
      properties:
        properties_type:
          type: string
          enum:
            - source_to_target
          title: Properties Type
          default: source_to_target
        source:
          allOf:
            - $ref: '#/components/schemas/SourceSettings'
          title: Source
          description: The source of the river.
        target:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeTargetSettings'
            - $ref: '#/components/schemas/BigQueryTargetSettings'
            - $ref: '#/components/schemas/RedshiftTargetSettings'
            - $ref: '#/components/schemas/S3TargetSettings'
            - $ref: '#/components/schemas/EmailTargetSettings'
            - $ref: '#/components/schemas/BlobStorageSettings'
            - $ref: '#/components/schemas/GcsTargetSettings'
            - $ref: '#/components/schemas/DatabricksTargetSettings'
            - $ref: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
            - $ref: '#/components/schemas/AthenaTargetSettings'
            - $ref: '#/components/schemas/AzureSqlTargetSettings'
            - $ref: '#/components/schemas/PostgresTargetSettings'
          title: Target
          description: The target of the river.
          discriminator:
            propertyName: name
            mapping:
              snowflake: '#/components/schemas/SnowflakeTargetSettings'
              bigquery: '#/components/schemas/BigQueryTargetSettings'
              redshift: '#/components/schemas/RedshiftTargetSettings'
              s3: '#/components/schemas/S3TargetSettings'
              target_email: '#/components/schemas/EmailTargetSettings'
              blob_storage: '#/components/schemas/BlobStorageSettings'
              GCS: '#/components/schemas/GcsTargetSettings'
              databricks: '#/components/schemas/DatabricksTargetSettings'
              azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
              athena: '#/components/schemas/AthenaTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlTargetSettings'
              postgres: '#/components/schemas/PostgresTargetSettings'
        schemas:
          items:
            $ref: '#/components/schemas/Schema'
          type: array
          title: Schemas
          description: The schemas of the river entity
          default: []
      additionalProperties: false
      type: object
      required:
        - source
        - target
      title: SourceToTargetRiverProperties
      description: Source to target River properties that is being used for GET purposes
    SourceTypeEnum:
      type: string
      enum:
        - mysql
        - postgresql
        - oracle
        - mongodb
        - shopify
        - facebook ads
      title: SourceTypeEnum
      description: The source type enum provide all the source type options.
    SourcedMetadataModelResponse:
      properties:
        title:
          type: string
          title: Title
          description: The datasource title.
          example: my title
        description:
          type: string
          title: Description
          description: The datasource description.
          example: report description
        properties:
          type: object
          title: Properties
          description: The datasource fields and metadata.
        required:
          items:
            type: string
          type: array
          title: Required
          description: A list of required datasource fields
          example:
            - id
      type: object
      required:
        - title
        - description
        - properties
      title: SourcedMetadataModelResponse
      description: The response for the get source metadata.
    SplitTimeIntervals:
      properties:
        time_interval:
          allOf:
            - $ref: '#/components/schemas/IntervalTimeExternalEnum'
          description: The interval time unit to split when using date increment.
          default: dont_split
          example: days
          extra:
            name: date_range.split_time_intervals.time_interval
            type: split_time_intervals
            display_name: >-
              Split your loading data into several intervals in case of a large
              amount of returned data by:
        interval_size:
          type: integer
          title: Interval Size
          description: >-
            The number of time units for each interval - for example, when the
            interval is set to days and the interval size is 3, each interval
            will extract data for 3 days.
          default: 1
          example: 3
          extra:
            name: date_range.split_time_intervals.interval_size
            type: number
            display_name: Split Interval Size
            condition:
              different: dont_split
              field_name: date_range.split_time_intervals.time_interval
      type: object
      title: SplitTimeIntervals
      description: >-
        Settings for splitting to time intervals when using incremental loading
        method by dates.
    StatusEnum:
      type: string
      enum:
        - any
        - cancelled
        - closed
        - open
      title: StatusEnum
      description: Shopify order status enum
    TableCDCSettings:
      properties:
        initiate_table:
          type: boolean
          title: Initiate Table
          description: Initiate migration process for CDC table
          example: true
          nullable: true
        overwrite_table_in_migration:
          type: boolean
          title: Overwrite Table In Migration
          description: Overwrite target table for CDC migration process
          example: true
          nullable: true
      type: object
      title: TableCDCSettings
      description: The table CDC settings
    TableStatusEnum:
      type: string
      enum:
        - waiting_for_migration
        - migrating
        - tracked
        - live
      title: TableStatusEnum
      description: Table status for rivers in multi table mode
    TargetsSortByEnum:
      type: string
      enum:
        - units
        - last_run
        - table_name
      title: TargetsSortByEnum
      description: Activities sort properties in the UI.
    TeamsSortByEnum:
      type: string
      enum:
        - display_name
        - created_at
        - source
        - is_all_environment_admin
      title: TeamsSortByEnum
      description: User teams sort properties in the UI.
    UpdateRiverVariableInput:
      properties:
        name:
          type: string
          title: Name
          description: The name of the variable
          example: credentials
        settings:
          allOf:
            - $ref: '#/components/schemas/RiverVariableSettings'
          title: Settings
          description: settings class for variable
          example:
            clear_value_on_start: true
            is_multi_value: false
            is_encrypted: false
        value:
          anyOf:
            - type: string
            - items: {}
              type: array
          title: Value
          description: value of a variable
          example: '1234'
      type: object
      required:
        - name
        - settings
      title: UpdateRiverVariableInput
      description: |-
        Logic river variable fields for update.
            
    UpdateRiverVariableInputList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UpdateRiverVariableInput'
          type: array
          title: Items
      type: object
      required:
        - items
      title: UpdateRiverVariableInputList
      description: |-
        List of logic river variable fields for update.
            
    UpdateUserTeamsInput:
      properties:
        display_name:
          type: string
          title: Display Name
          description: The display name in rivery
          example: Rivery Core Team
        description:
          type: string
          title: Description
          description: Internal description
          example: Some description
        environments:
          type: object
          title: Environments
          description: Dictionary of environment id and environment role
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          type: boolean
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          default: false
          example: true
      type: object
      title: UpdateUserTeamsInput
      description: Request update user groups input.
    UserInfo:
      properties:
        user_name:
          type: string
          title: User Name
          description: river version creator username
          example: createdby_username
        user_email:
          type: string
          title: User Email
          description: river version creator email
          example: createdby@rivery.io
      type: object
      required:
        - user_name
        - user_email
      title: UserInfo
      description: |-
        River version creator info.
            
    UserTeamsListResponse:
      properties:
        next_page:
          type: string
          title: Next Page
          description: The next page URL
          nullable: true
        previous_page:
          type: string
          title: Previous Page
          description: The previous page URL
          nullable: true
        page:
          type: integer
          title: Page
          description: The page number
          default: 1
        current_page_size:
          type: integer
          title: Current Page Size
          description: The current page size
        total_items:
          type: integer
          title: Total Items
          description: The total number of entities fetched
          default: 0
        account_id:
          type: string
          title: Account Id
          description: The account id
        items:
          items:
            $ref: '#/components/schemas/UserTeamsModel'
          type: array
          title: Items
      type: object
      required:
        - current_page_size
        - account_id
        - items
      title: UserTeamsListResponse
      description: List user teams response
    UserTeamsModel:
      properties:
        _id:
          type: string
          title: ' Id'
          description: The user group id
          example: 633ede20f1fc5500111fd7b3
        account_id:
          type: string
          title: Account Id
          description: The account id
          example: 55bf7c4270fdca16cac18761
        display_name:
          type: string
          title: Display Name
          description: The display name in rivery
          example: Rivery Core Team
        remote_display_name:
          type: string
          title: Remote Display Name
          description: The SCIM display name
          example: Core Team
        description:
          type: string
          title: Description
          description: Internal description
          example: Some description
        environments:
          type: object
          title: Environments
          description: Dictionary of environment id and environment role
          default: {}
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          type: boolean
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          default: false
          example: true
        source:
          allOf:
            - $ref: '#/components/schemas/GroupOrUserSourceEnum'
          description: >-
            Source if this group locally of rivery or imported from external
            such as Active Directory
          default: rivery
          example: rivery
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Created team datatime
          example: '2024-04-16T14:43:05.410714'
      type: object
      required:
        - _id
        - account_id
        - display_name
        - created_at
      title: UserTeamsModel
      description: Base user team model properties to return.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    WriteDatabaseTableDetailsInput:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: The name of the target table (relevant to multi-tables rivers)
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          allOf:
            - $ref: '#/components/schemas/ExtractMethodEnum'
          description: >-
            The extract method of the table entity.if not specified the extract
            method of the riverwill be used.
          example: incremental
          nullable: true
        name:
          type: string
          title: Name
          description: The name of the table
          example: table_name
        incremental_field:
          type: string
          title: Incremental Field
          description: The interval field of the river entity.
          example: some_date_field
          nullable: true
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: >-
            The date range of the river entity only needed if the extract method
            is incremental.
          nullable: true
        running_number:
          allOf:
            - $ref: '#/components/schemas/RunningNumber'
          title: Running Number
          description: >-
            The running number of the river entity only needed if the extract
            method is incremental.
          nullable: true
        exporter_chunk_size:
          type: integer
          title: Exporter Chunk Size
          description: >-
            The exporter chunk size of the river entity. i.e. the number of rows
            to extract per chuck
          default: 30000
          example: 1000
        table_status:
          allOf:
            - $ref: '#/components/schemas/TableStatusEnum'
          description: The table status of the river entity.
          default: waiting_for_migration
          example: waiting_for_migration
        cdc_settings:
          allOf:
            - $ref: '#/components/schemas/TableCDCSettings'
          title: Cdc Settings
          description: The CDC settings of this table.
          nullable: true
        additional_source_settings:
          oneOf:
            - $ref: '#/components/schemas/MongoDBAdditionalSourceSettings'
            - $ref: '#/components/schemas/MySQLAdditionalSourceSettings'
            - $ref: '#/components/schemas/PostgreSQLAdditionalSourceSettings'
            - $ref: '#/components/schemas/OracleAdditionalSourceSettings'
          title: Additional Source Settings
          description: The additional source settings of this table.
          examples:
            - filter_expression: ''
              source_type: mongodb
              concurrent_requests_number: 1
          discriminator:
            propertyName: source_type
            mapping:
              mongodb: '#/components/schemas/MongoDBAdditionalSourceSettings'
              mysql: '#/components/schemas/MySQLAdditionalSourceSettings'
              postgresql: '#/components/schemas/PostgreSQLAdditionalSourceSettings'
              oracle: '#/components/schemas/OracleAdditionalSourceSettings'
          nullable: true
      additionalProperties: false
      type: object
      required:
        - target_table
        - name
      title: WriteDatabaseTableDetailsInput
      description: |-
        Table properties which define the db table details data
        This schema is being used for Create or Update purposes
    WriteDatabaseTableInput:
      properties:
        run_type_and_datasource:
          type: string
          enum:
            - multi_tables
          title: Run Type And Datasource
          description: Internal field
          default: multi_tables
        details:
          allOf:
            - $ref: '#/components/schemas/WriteDatabaseTableDetailsInput'
          title: Details
          description: The database table details
      type: object
      required:
        - details
      title: WriteDatabaseTableInput
      description: |-
        Table properties which define the db table data
        This schema is being used for Create or Update purposes
    WriteFacebookAdsPredefinedAdAccountActivitiesReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_ad_account_activities
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedAdAccountActivitiesReport
      description: Facebook ads predefined ad account activities report, used for write.
    WriteFacebookAdsPredefinedAdAccountReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_ad_account
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedAdAccountReport
      description: Facebook ads predefined ad account report, used for write.
    WriteFacebookAdsPredefinedAdCreativesReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_ad_creatives
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Ads Creation Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Ads Creation Date
          example: ads_creation_date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedAdCreativesReport
      description: Facebook ads predefined ad creatives report, used for write.
    WriteFacebookAdsPredefinedAdLeadsFormsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_ad_leads_forms
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedAdLeadsFormsReport
      description: Facebook ads predefined ad leads forms report, used for write.
    WriteFacebookAdsPredefinedAdLeadsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_ad_leads
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Ads Creation Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Ads Creation Date
          example: ads_creation_date
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedAdLeadsReport
      description: Facebook ads predefined ad leads report, used for write.
    WriteFacebookAdsPredefinedAdSetsReport:
      properties:
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_adsets
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedAdSetsReport
      description: Facebook ads predefined ad sets report, used for write.
    WriteFacebookAdsPredefinedAdsPixelsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_ads_pixels
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedAdsPixelsReport
      description: Facebook ads predefined ads pixels report, used for write.
    WriteFacebookAdsPredefinedAdsReport:
      properties:
        ads_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Ads Ac
          description: Leave empty for all ads
          default: []
        ads_filter:
          items:
            type: string
          type: array
          title: Ads Filter
          description: Leave empty for all ads
          default: []
        ads_ids:
          items:
            type: string
          type: array
          title: Ads Ids
          description: Leave empty for all ads
          default: []
        ads_names:
          items:
            type: string
          type: array
          title: Ads Names
          description: Leave empty for all ads
          default: []
        ads_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
          description: The type of ads input to use
          examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_ads
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Ads Creation Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Ads Creation Date
          example: ads_creation_date
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedAdsReport
      description: Facebook ads predefined ads report, used for write.
    WriteFacebookAdsPredefinedCampaignsReport:
      properties:
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_campaigns
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedCampaignsReport
      description: Facebook ads predefined campaigns report, used for write.
    WriteFacebookAdsPredefinedCustomAudiencesReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_custom_audiences
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedCustomAudiencesReport
      description: Facebook ads predefined custom audiences report, used for write.
    WriteFacebookAdsPredefinedCustomConversionsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_custom_conversions
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedCustomConversionsReport
      description: Facebook ads predefined custom conversions report, used for write.
    WriteFacebookAdsPredefinedInsightBasicReport:
      properties:
        ads_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Ads Ac
          description: Leave empty for all ads
          default: []
        ads_filter:
          items:
            type: string
          type: array
          title: Ads Filter
          description: Leave empty for all ads
          default: []
        ads_ids:
          items:
            type: string
          type: array
          title: Ads Ids
          description: Leave empty for all ads
          default: []
        ads_names:
          items:
            type: string
          type: array
          title: Ads Names
          description: Leave empty for all ads
          default: []
        ads_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
          description: The type of ads input to use
          examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_insight_report_basic
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedInsightBasicReport
      description: Facebook ads predefined insights basic report, used for write.
    WriteFacebookAdsPredefinedInsightReportAgeGender:
      properties:
        ads_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Ads Ac
          description: Leave empty for all ads
          default: []
        ads_filter:
          items:
            type: string
          type: array
          title: Ads Filter
          description: Leave empty for all ads
          default: []
        ads_ids:
          items:
            type: string
          type: array
          title: Ads Ids
          description: Leave empty for all ads
          default: []
        ads_names:
          items:
            type: string
          type: array
          title: Ads Names
          description: Leave empty for all ads
          default: []
        ads_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
          description: The type of ads input to use
          examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_insight_report_age_gender
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedInsightReportAgeGender
      description: Facebook ads predefined insights age gender report, used for write.
    WriteFacebookAdsPredefinedInsightReportCountry:
      properties:
        ads_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Ads Ac
          description: Leave empty for all ads
          default: []
        ads_filter:
          items:
            type: string
          type: array
          title: Ads Filter
          description: Leave empty for all ads
          default: []
        ads_ids:
          items:
            type: string
          type: array
          title: Ads Ids
          description: Leave empty for all ads
          default: []
        ads_names:
          items:
            type: string
          type: array
          title: Ads Names
          description: Leave empty for all ads
          default: []
        ads_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
          description: The type of ads input to use
          examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_insight_report_country
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedInsightReportCountry
      description: Facebook ads predefined insights country report, used for write.
    WriteFacebookAdsPredefinedInsightReportPlatform:
      properties:
        ads_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Ads Ac
          description: Leave empty for all ads
          default: []
        ads_filter:
          items:
            type: string
          type: array
          title: Ads Filter
          description: Leave empty for all ads
          default: []
        ads_ids:
          items:
            type: string
          type: array
          title: Ads Ids
          description: Leave empty for all ads
          default: []
        ads_names:
          items:
            type: string
          type: array
          title: Ads Names
          description: Leave empty for all ads
          default: []
        ads_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
          description: The type of ads input to use
          examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_insight_report_platform
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedInsightReportPlatform
      description: Facebook ads predefined insights platform report, used for write.
    WriteFacebookAdsPredefinedInsightReportProduct:
      properties:
        ads_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Ads Ac
          description: Leave empty for all ads
          default: []
        ads_filter:
          items:
            type: string
          type: array
          title: Ads Filter
          description: Leave empty for all ads
          default: []
        ads_ids:
          items:
            type: string
          type: array
          title: Ads Ids
          description: Leave empty for all ads
          default: []
        ads_names:
          items:
            type: string
          type: array
          title: Ads Names
          description: Leave empty for all ads
          default: []
        ads_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
          description: The type of ads input to use
          examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Adsets Ac
          description: Leave empty for all ad sets
          default: []
        adsets_filter:
          items:
            type: string
          type: array
          title: Adsets Filter
          description: Leave empty for all ad sets
          default: []
        adsets_ids:
          items:
            type: string
          type: array
          title: Adsets Ids
          description: Leave empty for all ad sets
          default: []
        adsets_names:
          items:
            type: string
          type: array
          title: Adsets Names
          description: Leave empty for all ad sets
          default: []
        adsets_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
          description: The type of ad sets input to use
          examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_ac:
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          title: Campaigns Ac
          description: Leave empty for all campaigns
          default: []
        campaigns_filter:
          items:
            type: string
          type: array
          title: Campaigns Filter
          description: Leave empty for all campaigns
          default: []
        campaigns_ids:
          items:
            type: string
          type: array
          title: Campaigns Ids
          description: Leave empty for all campaigns
          default: []
        campaigns_names:
          items:
            type: string
          type: array
          title: Campaigns Names
          description: Leave empty for all campaigns
          default: []
        campaigns_type:
          allOf:
            - $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
          description: The type of campaigns input to use
          examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_insight_report_product
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - Date
          title: Incremental Field
          description: The interval field of the river entity.
          default: Date
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteFacebookAdsPredefinedInsightReportProduct
      description: Facebook ads predefined insights product report, used for write.
    WriteFacebookAdsPredefinedSavedAudiencesReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_saved_audiences
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteFacebookAdsPredefinedSavedAudiencesReport
      description: Facebook ads predefined saved audiences report, used for write.
    WritePredefinedReportFacebookAdsTableInput:
      properties:
        run_type_and_datasource:
          type: string
          enum:
            - predefined_report_facebook ads
          title: Run Type And Datasource
          description: Internal field
          default: predefined_report_facebook ads
        details:
          anyOf:
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightBasicReport
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedCampaignsReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdsReport'
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedAdLeadsFormsReport
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdsPixelsReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdSetsReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdAccountReport'
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedAdAccountActivitiesReport
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdCreativesReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdLeadsReport'
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedCustomAudiencesReport
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedCustomConversionsReport
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportAgeGender
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportCountry
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportPlatform
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportProduct
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedSavedAudiencesReport
          title: Details
          description: The predefined report table details
      additionalProperties: false
      type: object
      required:
        - details
      title: WritePredefinedReportFacebookAdsTableInput
      description: |-
        Table properties which define the predefined report table data
        This schema is being used for Create or Update purposes
    WritePredefinedReportShopifyTableInput:
      properties:
        run_type_and_datasource:
          type: string
          enum:
            - predefined_report_shopify
          title: Run Type And Datasource
          description: Internal field
          default: predefined_report_shopify
        details:
          anyOf:
            - $ref: '#/components/schemas/WriteShopifyPredefinedOrdersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedShopReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAddressesReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAnalyticReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedCustomersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedInventoryLevelsReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedMarketingEventsReport'
            - $ref: >-
                #/components/schemas/WriteShopifyPredefinedOrderTransactionsReport
            - $ref: '#/components/schemas/WriteShopifyPredefinedProductsReport'
          title: Details
          description: The predefined report table details
      additionalProperties: false
      type: object
      required:
        - details
      title: WritePredefinedReportShopifyTableInput
      description: |-
        Table properties which define the predefined report table data
        This schema is being used for Create or Update purposes
    WriteRiverInput:
      properties:
        name:
          type: string
          title: Name
          description: The name of the river.
          example: river_name
        kind:
          allOf:
            - $ref: '#/components/schemas/RiverKindEnum'
          description: The kind of the river.
          default: main_river
          example: main_river
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/RiverTypeEnum'
          description: The type of river.
          example: source_to_target
        group_id:
          type: string
          title: Group Id
          description: The id of the group the river belongs to.
          example: 55fr7d4270fdca16cac18261
          nullable: true
        group_name:
          type: string
          title: Group Name
          description: The name of the group the river belongs to.
          example: river_group_1
          nullable: true
        metadata:
          allOf:
            - $ref: '#/components/schemas/RiverMetadata'
          title: Metadata
          description: An object containing river metadata.
          default:
            description: ''
            river_status: disabled
        settings:
          allOf:
            - $ref: '#/components/schemas/RiverSettings'
          title: Settings
          description: An object containing river settings.
          default:
            run_timeout_seconds: 43200
        properties:
          oneOf:
            - $ref: '#/components/schemas/WriteSourceToTargetRiverPropertiesInput'
            - $ref: '#/components/schemas/ActionProperties'
            - $ref: '#/components/schemas/LogicProperties'
          title: Properties
          description: The properties of a river.
          discriminator:
            propertyName: properties_type
            mapping:
              source_to_target: '#/components/schemas/WriteSourceToTargetRiverPropertiesInput'
              actions: '#/components/schemas/ActionProperties'
              logic: '#/components/schemas/LogicProperties'
        schedulers:
          items:
            $ref: '#/components/schemas/RiverSchedule'
          type: array
          maxItems: 1
          minItems: 0
          title: Schedulers
          description: >-
            An object containing the schedule settings. Currently support only
            one scheduler
          default: []
        cross_id:
          type: string
          title: Cross Id
          description: The cross_id of the river to be deployed.
          nullable: true
          hidden: true
        deployment_definition:
          type: object
          title: Deployment Definition
          description: The deployment definition of the river to be deployed.
          nullable: true
          hidden: true
      additionalProperties: false
      type: object
      required:
        - name
        - type
        - properties
      title: WriteRiverInput
      description: River fields for new river creation / update an existing river.
    WriteSchemaInput:
      properties:
        name:
          type: string
          title: Name
          description: The name of the schema
        tables:
          items:
            oneOf:
              - $ref: '#/components/schemas/WriteDatabaseTableInput'
              - $ref: '#/components/schemas/WritePredefinedReportShopifyTableInput'
              - $ref: >-
                  #/components/schemas/WritePredefinedReportFacebookAdsTableInput
            discriminator:
              propertyName: run_type_and_datasource
              mapping:
                multi_tables: '#/components/schemas/WriteDatabaseTableInput'
                predefined_report_shopify: '#/components/schemas/WritePredefinedReportShopifyTableInput'
                predefined_report_facebook ads: >-
                  #/components/schemas/WritePredefinedReportFacebookAdsTableInput
          type: array
          title: Tables
          default: []
      type: object
      required:
        - name
      title: WriteSchemaInput
      description: Schema properties to write (PUT operations)
    WriteShopifyPredefinedAddressesReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_addresses
          title: Report Id
          description: The report id
        incremental_field:
          allOf:
            - $ref: '#/components/schemas/IncrementalFieldEnum'
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedAddressesReport
      description: Shopify predefined addresses report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
    WriteShopifyPredefinedAnalyticReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_analytic_reports
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - updated at
          title: Incremental Field
          description: The interval field of the river entity.
          default: updated at
          example: date_field
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedAnalyticReport
      description: Shopify predefined analytic report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
    WriteShopifyPredefinedCustomersReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_customers
          title: Report Id
          description: The report id
        incremental_field:
          allOf:
            - $ref: '#/components/schemas/IncrementalFieldEnum'
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedCustomersReport
      description: Shopify predefined analytic report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
    WriteShopifyPredefinedInventoryLevelsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_inventory_levels
          title: Report Id
          description: The report id
        incremental_field:
          allOf:
            - $ref: '#/components/schemas/IncrementalFieldEnum'
          description: The interval field of the river entity.
          default: created at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedInventoryLevelsReport
      description: Shopify predefined inventory levels report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
    WriteShopifyPredefinedMarketingEventsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_marketing_events
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteShopifyPredefinedMarketingEventsReport
      description: Shopify predefined marketing events report, used for write.
      report_index:
        extract_method: 0
    WriteShopifyPredefinedOrderTransactionsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_order_transactions
          title: Report Id
          description: The report id
        incremental_field:
          allOf:
            - $ref: '#/components/schemas/IncrementalFieldEnum'
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedOrderTransactionsReport
      description: Shopify predefined order transaction report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
    WriteShopifyPredefinedOrdersReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_orders
          title: Report Id
          description: The report id
        incremental_field:
          type: string
          enum:
            - updated at
          title: Incremental Field
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: Filter by order status
          default: any
          extra:
            required: true
            chakra: true
            display_name: Status
            type: list_single_options
            options:
              - id: any
                name: Any
              - id: cancelled
                name: Cancelled
              - id: closed
                name: Closed
              - id: open
                name: Open
        financial_status:
          allOf:
            - $ref: '#/components/schemas/FinancialStatusEnum'
          description: Filter by order's financial status
          default: any
          extra:
            chakra: true
            display_name: Financial Status
            type: list_single_options
            options:
              - id: any
                name: Any
              - id: paid
                name: Paid
              - id: unpaid
                name: Unpaid
              - id: voided
                name: Voided
              - id: pending
                name: Pending
              - id: refunded
                name: Refunded
              - id: authorized
                name: Authorized
              - id: partially_paid
                name: Partially paid
              - id: partially_refunded
                name: Partially refunded
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedOrdersReport
      description: Shopify predefined orders report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        status: 0
        financial_status: 1
        extract_method: 2
        incremental_field: 3
        incremental_type: 4
        date_range: 5
        advanced_settings: 6
        include_end_value: 6.1
        time_interval: 6.2
        interval_size: 6.3
        skip_failed_queues: 7
    WriteShopifyPredefinedProductsReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          type: string
          enum:
            - predefined_products
          title: Report Id
          description: The report id
        incremental_field:
          allOf:
            - $ref: '#/components/schemas/ProductsIncrementalFieldEnum'
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
              - label: published at
                value: published at
        date_range:
          allOf:
            - $ref: '#/components/schemas/DateRange'
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
      additionalProperties: false
      type: object
      required:
        - target_table
        - report_id
        - date_range
      title: WriteShopifyPredefinedProductsReport
      description: Shopify predefined products report, used for write.
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
    WriteShopifyPredefinedShopReport:
      properties:
        is_selected:
          type: boolean
          title: Is Selected
          description: If the table is selected or not.
          default: false
          example: true
        target_table:
          type: string
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          example: target_table_name
        modified_columns:
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          default: []
        additional_target_settings:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          title: Additional Target Settings
          description: The additional target settings of this table.
          examples:
            - is_ordered_merge_key: false
              target_type: snowflake
              enforce_masking_policy: false
              recreate_keys: false
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
        extract_method:
          type: string
          title: Extract Method
          description: The extract method of the table entity.
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          type: string
          enum:
            - predefined_shop
          title: Report Id
          description: The report id
      type: object
      required:
        - target_table
        - report_id
      title: WriteShopifyPredefinedShopReport
      description: Shopify predefined shop report, used for write.
      report_index:
        extract_method: 0
    WriteSourceToTargetRiverPropertiesInput:
      properties:
        properties_type:
          type: string
          enum:
            - source_to_target
          title: Properties Type
          default: source_to_target
        source:
          allOf:
            - $ref: '#/components/schemas/SourceSettings'
          title: Source
          description: The source of the river.
        target:
          oneOf:
            - $ref: '#/components/schemas/SnowflakeTargetSettings'
            - $ref: '#/components/schemas/BigQueryTargetSettings'
            - $ref: '#/components/schemas/RedshiftTargetSettings'
            - $ref: '#/components/schemas/S3TargetSettings'
            - $ref: '#/components/schemas/EmailTargetSettings'
            - $ref: '#/components/schemas/BlobStorageSettings'
            - $ref: '#/components/schemas/GcsTargetSettings'
            - $ref: '#/components/schemas/DatabricksTargetSettings'
            - $ref: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
            - $ref: '#/components/schemas/AthenaTargetSettings'
            - $ref: '#/components/schemas/AzureSqlTargetSettings'
            - $ref: '#/components/schemas/PostgresTargetSettings'
          title: Target
          description: The target of the river.
          discriminator:
            propertyName: name
            mapping:
              snowflake: '#/components/schemas/SnowflakeTargetSettings'
              bigquery: '#/components/schemas/BigQueryTargetSettings'
              redshift: '#/components/schemas/RedshiftTargetSettings'
              s3: '#/components/schemas/S3TargetSettings'
              target_email: '#/components/schemas/EmailTargetSettings'
              blob_storage: '#/components/schemas/BlobStorageSettings'
              GCS: '#/components/schemas/GcsTargetSettings'
              databricks: '#/components/schemas/DatabricksTargetSettings'
              azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
              athena: '#/components/schemas/AthenaTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlTargetSettings'
              postgres: '#/components/schemas/PostgresTargetSettings'
        schemas:
          items:
            $ref: '#/components/schemas/WriteSchemaInput'
          type: array
          title: Schemas
          description: The schemas of the river entity
          default: []
      additionalProperties: false
      type: object
      required:
        - source
        - target
      title: WriteSourceToTargetRiverPropertiesInput
      description: Source to target River properties that is being used for PUT purposes
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
tags:
  - name: Rivers
    description: Management of rivers
  - name: Activities
    description: Get the Rivery's activities data with various of GET operations
  - name: Connections
    description: Management of connection entities
  - name: Dataframes
    description: Management of dataframe entities
  - name: Environments
    description: Listing account's environments
  - name: Accounts
    description: Listing accounts
  - name: Audit Events
    description: Listing account's audit events
  - name: Beta Endpoints
    description: Beta endpoints
