openapi: 3.0.2
info:
  title: API Endpoints
  description: >-
    Deliver monetary rewards and incentives to employees, customers, survey
    participants, and more through the Tremendous API. For organizational tasks,
    like managing your organization and it's members within Tremendous, please
    see the Tremendous Organizational API.
  version: '2'
  termsOfService: https://www.tremendous.com/terms
  contact:
    name: API Support
    email: developers@tremendous.com
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: Sandbox environment
    url: https://testflight.tremendous.com/api/v2
  - description: Production environment
    url: https://www.tremendous.com/api/v2
tags:
  - name: Invoices
  - name: Rewards
  - name: Orders
  - name: Webhooks
  - name: Organizations
  - name: Members
  - name: Products
  - name: Campaigns
  - name: Funding sources
  - name: Balance transactions
  - name: Fields
paths:
  /rewards:
    get:
      tags:
        - Rewards
      summary: List rewards
      operationId: Rewards_listAllRewards
      description: |
        Retrieve a list of all created rewards
      parameters:
        - description: >-
            Offsets the returned list by the given number of rewards. The
            returned rewards are ordered (and offsetted) by their creation date
            (DESC).
          name: offset
          in: query
          required: false
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: List of existing rewards. Ordered by creation date (DESC).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsListAllRewardsResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsListAllRewards401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsListAllRewards429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsListAllRewards500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /rewards/{id}:
    get:
      tags:
        - Rewards
      summary: Retrieve single reward
      operationId: Rewards_getSingleReward
      description: |
        Retrieve the reward, identified by the given `id` in the URL
      parameters:
        - description: ID of the reward that should be retrieved
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: A reward (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGetSingleRewardResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGetSingleReward401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGetSingleReward404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGetSingleReward429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGetSingleReward500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /rewards/{id}/generate_link:
    post:
      tags:
        - Rewards
      summary: Generate a reward URL
      operationId: Rewards_generateLink
      description: >
        Generate a redemption link for the reward identified by the `id` in the
        URL
      parameters:
        - description: ID of the reward
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: A redemption link for a reward
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateLinkResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateLink401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '403':
          description: >-
            Operation not permitted; only rewards that are of type link support
            this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateLink403Response'
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateLink404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateLink429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateLink500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /rewards/{id}/generate_embed_token:
    post:
      tags:
        - Rewards
      summary: Generate a reward token
      operationId: Rewards_generateEmbedToken
      description: >
        Generate a temporary reward token identified by the `id` in the URL.

        These tokens are needed to render a reward when using [Tremendous
        Embed](https://github.com/tremendous-rewards/embed/blob/master/docs/documentation.md).

        The token is valid for 24 hours.
      parameters:
        - description: ID of the reward
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: A redemption token for a reward
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateEmbedTokenResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateEmbedToken401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateEmbedToken404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateEmbedToken429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsGenerateEmbedToken500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /rewards/{id}/resend:
    post:
      tags:
        - Rewards
      summary: Resend reward
      operationId: Rewards_resendRewardById
      description: >
        Resends a reward, identified by the given `id` in the URL, to its
        recipient.
      parameters:
        - description: ID of the reward that should be resent
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: Reward will be resent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResendRewardByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResendRewardById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResendRewardById404Response'
        '422':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResendRewardById422Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResendRewardById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResendRewardById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /orders:
    get:
      tags:
        - Orders
      summary: List orders
      operationId: Orders_getList
      description: |
        Retrieve a list of orders
      parameters:
        - description: >-
            Offsets the returned list by the given number of orders. The
            returned orders are ordered (and offsetted) by their creation date
            (DESC).
          name: offset
          in: query
          required: false
          schema:
            type: integer
          example: 10
        - description: Only return results with a matching campaign_id.
          name: campaign_id
          in: query
          required: false
          schema:
            type: string
          example: IVM0I3WNJJL0
        - description: Only return results with a matching external_id.
          name: external_id
          in: query
          required: false
          schema:
            type: string
          example: 12878
        - description: >-
            Only return results where the created_at field is greater than or
            equal to the supplied value. The string needs to be an ISO 8601
            datetime.
          name: created_at[gte]
          in: query
          required: false
          schema:
            type: string
          example: '2023-07-15T18:12:18Z'
        - description: >-
            Only return results where the created_at field is less than or equal
            to the supplied value. The string needs to be an ISO 8601 datetime.
          name: created_at[lte]
          in: query
          required: false
          schema:
            type: string
          example: '2023-08-01T18:12:18Z'
        - description: >-
            Limits the number of orders listed. The maximum value is 100 and the
            default is 10.
          name: limit
          in: query
          required: false
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: List of existing orders. Ordered by creation date (DESC).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetListResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetList401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetList429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetList500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
    post:
      tags:
        - Orders
      summary: Create order
      operationId: Orders_createOrder
      description: >
        Every time you want to send out a reward through Tremendous you need to
        create an order for it.


        > 📘 Getting started with your first order

        >

        > Our step-by-step guide walks you through everything you need

        > to send your first gift card through the Tremendous API:

        >

        > <strong><a style="display: block; margin-top: 20px;"
        href="/docs/sending-rewards-intro">Check it out!</a></strong>


        ## Request body


        <div class="object-schema-request-schema">
          <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">external_id</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Reference
        for this order, supplied by the customer.</p>


        <p>When set, <code>external_id</code> makes order idempotent. All
        requests that use the same <code>external_id</code>

        after the initial order creation, will result in a response that returns
        the data of the

        initially created order. The response will have a <code>201</code>
        response code. These responses

        <strong>fail</strong> to create any further orders.</p>


        <p>It also allows for retrieving by <code>external_id</code> instead of
        <code>id</code> only.</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">payment</code>
        </div>

        </td><td><span class="property-type">object</span></td><td></td></tr> 
        <tr>
            <td colspan="3">
              <details>
                <summary>Show object properties</summary>
                <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">funding_source_id</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Tremendous
        ID of the funding source that will be used to pay for the order. Use
        <code>balance</code> to use your Tremendous&#39;s balance.</p>

        </td></tr>
          </tbody>
        </table>


        </tr>


        <tr class=""><td><div class="property-name">
          <code class="property-name">reward</code>
        </div>

        </td><td><span class="property-type">object</span></td><td><p>A single
        reward, sent to a recipient. A reward is always part of an order.</p>


        <p>Either <code>products</code> or <code>campaign_id</code> must be
        specified.</p>

        </td></tr>  <tr>
            <td colspan="3">
              <details>
                <summary>Show object properties</summary>
                <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class="property-conditional-hint-response-only"><td><div class="property-name">
          <code class="property-name">id</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Tremendous
        ID of the reward</p>

        </td></tr>

        <tr class="property-conditional-hint-response-only"><td><div
        class="property-name">
          <code class="property-name">order_id</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Tremendous
        ID of the order this reward is part of.</p>

        </td></tr>

        <tr class="property-conditional-hint-response-only"><td><div
        class="property-name">
          <code class="property-name">created_at</code>
        </div>

        </td><td><span class="property-type">string</span> <span
        class="property-format">date-time</span></td><td><p>Date the reward was
        created</p>

        </td></tr>

        <tr class="property-conditional-hint-request-only"><td><div
        class="property-name">
          <code class="property-name">campaign_id</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>ID of the
        campaign in your account, that defines the available products (different
        gift cards, charity, etc.)

        that the recipient can choose from.</p>

        </td></tr>

        <tr class="property-conditional-hint-request-only"><td><div
        class="property-name">
          <code class="property-name">products</code>
        </div>

        </td><td><span class="property-type">array</span> <span
        class="property-format">string</span></td><td><p>List of IDs of product
        (different gift cards, charity, etc.) that will be available

        to the recipient to choose from.</p>


        <p>Providing a <code>products</code> array will override the products
        made available by the campaign

        specified using the <code>campaign_id</code> property unless the
        <code>products</code> array is empty. It will

        <em>not</em> override other campaign attributes, like the message and
        customization of the look and feel.</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">value</code>
        </div>

        </td><td><span class="property-type">object</span></td><td></td></tr> 
        <tr>
            <td colspan="3">
              <details>
                <summary>Show object properties</summary>
                <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">denomination</code>
        </div>

        </td><td><span class="property-type">number</span> <span
        class="property-format">double</span></td><td><p>Amount of the
        reward</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">currency_code</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Currency
        of the reward</p>

        </td></tr>
          </tbody>
        </table>


        </tr>


        <tr class=""><td><div class="property-name">
          <code class="property-name">recipient</code>
        </div>

        </td><td><span class="property-type">object</span></td><td><p>Details of
        the recipient of the reward</p>

        </td></tr>  <tr>
            <td colspan="3">
              <details>
                <summary>Show object properties</summary>
                <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">name</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Name of
        the recipient</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">email</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Email
        address of the recipient</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">phone</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Phone
        number of the recipient. For non-US phone numbers, specify the country
        code (prefixed with +).</p>

        </td></tr>
          </tbody>
        </table>


        </tr>


        <tr class=""><td><div class="property-name">
          <code class="property-name">deliver_at</code>
        </div>

        </td><td><span class="property-type">string</span> <span
        class="property-format">date</span></td><td><p>Timestamp of reward
        delivery within the next year. Note that if date-time is provided, the
        time values will be ignored.</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">custom_fields</code>
        </div>

        </td><td><span class="property-type">array</span></td><td></td></tr> 
        <tr>
            <td colspan="3">
              <details>
                <summary>Show array item type</summary>
                <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">id</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Tremendous
        ID of the custom field</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">value</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Value of
        the custom field</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">label</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Label of
        the custom field</p>

        </td></tr>
          </tbody>
        </table>


        </tr>


        <tr class=""><td><div class="property-name">
          <code class="property-name">language</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Set this
        to translate the redemption experience for this reward. Pass a 2-letter
        <a
        href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1
        code</a> for the desired language. Defaults to <code>en</code>.</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">delivery</code>
        </div>

        </td><td><span class="property-type">object</span></td><td><p>Details on
        how the reward is delivered to the recipient.</p>

        </td></tr>  <tr>
            <td colspan="3">
              <details>
                <summary>Show object properties</summary>
                <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">method</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>How to
        deliver the reward to the recipient.</p>


        <table>
          <thead>
            <tr>
              <th>Delivery Method</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td><code>EMAIL</code></td>
              <td>Deliver the reward to the recipient by email</td>
            </tr>
            <tr>
              <td><code>LINK</code></td>
              <td>
                <p>Deliver the reward to the recipient via a link.</p>
                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
              </td>
            </tr>
            <tr>
              <td><code>PHONE</code></td>
              <td>Deliver the reward to the recipient by SMS</td>
            </tr>
          </tbody>
        </table>

        </td></tr>
          </tbody>
        </table>


        </tr>

          </tbody>
        </table>


        </tr>

          </tbody>
        </table>


        </div>



        ### Funding sources


        There are different ways to pay for gift cards and rewards on
        Tremendous. Every payment mechanism is called a "funding source".


        You can retrieve a list of all available funding sources by using the
        [Funding sources API
        endpoint](https://tremendous.readme.io/reference/core-funding-source-index).


        The Tremendous API sandbox environment comes with a single funding
        source that allows you to spend up to $5,000 in *fake money* to test the
        API. [Learn more about the sandbox
        environment](https://tremendous.readme.io/reference/sandbox).


        The HTTP status code `200` on the response will be used to indicate
        success.


        After processing successfully the reward gets queued to be delivered to
        it's recipient

        (for delivery method `EMAIL` and `PHONE`). Delivery will happen
        asynchronously, after the response

        has been sent.


        ### Idempotence


        Requests issued with the same external_id are idempotent.


        Submitting an order with an already existing `external_id`, will result
        in a `201` response code.

        In this case the response will return a representation of the already
        existing order in the response body.
      requestBody:
        description: Order to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCreateOrderRequest'
      responses:
        '200':
          description: An order (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrderResponse'
        '201':
          description: An order (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder201Response'
        '202':
          description: An order (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder202Response'
        '400':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder400Response'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '402':
          description: >-
            Not enough funds to carry out the request. Please top-up your
            account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder402Response'
              example:
                errors:
                  message: >-
                    Not enough funds to carry out this operation. Fund your
                    balance to proceed.
                  payload: {}
        '422':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder422Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateOrder500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Retrieve order
      operationId: Orders_getOrderById
      description: |
        Retrieve the order, identified by the given `id` in the URL
      parameters:
        - description: >
            ID of the order that should be retrieved. In case the order has an
            `external_id` reference supplied by the

            customer on creation, it's possible to use it instead.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An order (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetOrderByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetOrderById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetOrderById404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetOrderById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetOrderById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /order_approvals/{id}/approve:
    post:
      tags:
        - Orders
      summary: Approve order
      operationId: Orders_approveOrderById
      description: >
        Approves an order that is pending review, identified by the given `id`
        in the URL.


        Approvals is a feature that requires orders to be approved by an
        organization admin

        before they are sent out. To enable approvals for your organization,
        please enable

        'Allow approvals via API' via the organization''s 'Order Approvals'
        settings from the Tremendous dashboard.
      parameters:
        - description: >-
            ID of the order that should be approved. In case the order has an
            `external_id` reference supplied by the customer on creation, it's
            possible to use it instead.
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: An order (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '402':
          description: >-
            Not enough funds in your account. Please send another approval
            request after you have deposited sufficient funds into your balance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById402Response'
              example:
                errors:
                  message: >-
                    Not enough funds to carry out this operation. Fund your
                    balance to proceed.
                  payload: {}
        '403':
          description: >-
            API approvals are not enabled. Enable 'Allow approvals via API' in
            the organization's settings on the Tremendous dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById403Response'
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById404Response'
        '422':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById422Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersApproveOrderById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /order_approvals/{id}/reject:
    post:
      tags:
        - Orders
      summary: Reject order
      operationId: Orders_rejectById
      description: >
        Rejects an order that is pending review, identified by the given `id` in
        the URL.


        Approvals is a feature that requires orders to be approved by an
        organization admin

        before they are sent out. To enable approvals for your organization,
        please enable

        'Allow approvals via API' via the organization''s 'Order Approvals'
        settings from the Tremendous dashboard.
      parameters:
        - description: >-
            ID of the order that should be rejected. In case the order has an
            `external_id` reference supplied by the customer on creation, it's
            possible to use it instead.
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: An order (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '403':
          description: >-
            API approvals are not enabled for this organization. Enable "Allow
            approvals via API" via the organization's order approval settings
            from the Tremendous dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectById403Response'
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectById404Response'
        '422':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectById422Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /products:
    get:
      tags:
        - Products
      summary: List products
      operationId: Products_getList
      description: |
        Retrieve a list of available products
      parameters:
        - description: >-
            Comma-separated list of [Alpha-2 country
            codes](https://www.iban.com/country-codes), used to only retrieve
            products available in the provided countries
          name: country
          in: query
          required: false
          schema:
            type: string
          example: US,UK
        - description: >-
            Comma-separated list of [currency
            codes](https://www.iban.com/currency-codes), used to only retrieve
            products available in the provided currencies
          name: currency
          in: query
          schema:
            type: string
          example: USD,EUR
      responses:
        '200':
          description: List of available products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetListResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetList401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetList429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetList500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /products/{id}:
    get:
      tags:
        - Products
      summary: Retrieve product
      operationId: Products_getById
      description: |
        Retrieve a product, identified by the given `id` in the URL
      parameters:
        - description: ID of the product that should be retrieved
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: Requested product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /campaigns:
    get:
      tags:
        - Campaigns
      summary: List campaigns
      operationId: Campaigns_getAll
      description: |
        Retrieve a list of all campaigns created in your account
      responses:
        '200':
          description: List of all campaigns in your organization's account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetAllResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetAll401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetAll429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetAll500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /campaigns/{id}:
    get:
      tags:
        - Campaigns
      summary: Retrieve campaign
      operationId: Campaigns_getById
      description: |
        Retrieve a campaign, identified by the given `id` in the URL
      parameters:
        - description: ID of the campaign that should be retrieved
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: Requested campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetById404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsGetById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /funding_sources:
    get:
      tags:
        - Funding sources
      summary: List funding sources
      operationId: FundingSources_getAll
      description: >
        Retrieve a list of all funding sources available for ordering through
        the API in your organization's account.
      responses:
        '200':
          description: >-
            List of all funding sources available in your organization's
            account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetAllResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetAll401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetAll429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetAll500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /funding_sources/{id}:
    get:
      tags:
        - Funding sources
      summary: Retrieve funding source
      operationId: FundingSources_getById
      description: |
        Retrieve a funding source, identified by the given `id` in the URL
      parameters:
        - description: ID of the funding source that should be retrieved
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: Requested funding source
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetById404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingSourcesGetById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /invoices:
    get:
      tags:
        - Invoices
      summary: List invoices
      operationId: Invoices_getAll
      description: |
        Fetch a list of all invoices on your account.

        > 🚧 Deleted invoices are omitted
        >
        > The response does not include any previously deleted invoices.
      parameters:
        - description: >-
            Offsets the returned list by the given number of invoices. The
            returned invoices are ordered (and offsetted) by their creation date
            (DESC).
          name: offset
          in: query
          required: false
          schema:
            type: integer
          example: 10
        - description: >-
            Limits the number of invoices listed. The maximum and default value
            is 10.
          name: limit
          in: query
          required: false
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: List of all invoices in state `PAID` or `OPEN`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetAllResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetAll401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetAll429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetAll500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
    post:
      tags:
        - Invoices
      summary: Create invoice
      operationId: Invoices_createAndFundAccountBalance
      description: >+
        Creating an invoice is the way for your organization to fund your
        account's balance.


        1. Create an invoice

        2. Pay the invoice

        3. Funds get added to your account's balance


        ## Request body


        <div class="object-schema-request-schema">
          <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">po_number</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>Reference
        to the purchase order number within your organization</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">amount</code>
        </div>

        </td><td><span class="property-type">number</span> <span
        class="property-format">double</span></td><td><p>Amount of the invoice
        in USD</p>

        </td></tr>

        <tr class=""><td><div class="property-name">
          <code class="property-name">memo</code>
        </div>

        </td><td><span class="property-type">string</span></td><td><p>A note to
        be included in the invoice. This is for your internal use and will not
        be visible to the recipient.</p>

        </td></tr>
          </tbody>
        </table>


        </div>

      requestBody:
        description: Invoice details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicesCreateAndFundAccountBalanceRequest'
      responses:
        '200':
          description: An invoice (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesCreateAndFundAccountBalanceResponse
        '400':
          description: The invoice couldn't be created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesCreateAndFundAccountBalance400Response
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesCreateAndFundAccountBalance401Response
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesCreateAndFundAccountBalance429Response
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InvoicesCreateAndFundAccountBalance500Response
              example:
                errors:
                  message: Something went wrong. We have been notified
  /invoices/{id}:
    get:
      tags:
        - Invoices
      summary: Retrieve invoice
      operationId: Invoices_getById
      description: |
        Retrieve an invoice, identified by the given `id` in the URL

        > 📘 Deleted Invoices
        >
        > This endpoint can be used to retrieve details on deleted invoices
        > that the list of invoices omits.
      parameters:
        - description: ID of the invoice that should be retrieved
          name: id
          in: path
          required: true
          schema:
            description: The invoice number
            type: string
            example: PPS-26873
      responses:
        '200':
          description: An invoice (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetByIdResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetById401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetById404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetById429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetById500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
    delete:
      tags:
        - Invoices
      summary: Delete invoice
      operationId: Invoices_removeInvoice
      description: >
        Removes an invoice. This has no further consequences but is a rather
        cosmetic operation.
      parameters:
        - description: ID of the invoice that should be retrieved
          name: id
          in: path
          required: true
          schema:
            description: The invoice number
            type: string
            example: PPS-26873
      responses:
        '200':
          description: An invoice (to be overwritten in specific reponses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesRemoveInvoiceResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesRemoveInvoice401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesRemoveInvoice404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesRemoveInvoice429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesRemoveInvoice500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /invoices/{id}/pdf:
    get:
      tags:
        - Invoices
      summary: Retrieve invoice as PDF
      operationId: Invoices_getPdf
      description: |
        Generates a PDF version for an invoice
      parameters:
        - description: ID of the Invoice for that the PDF should be generated
          name: id
          in: path
          required: true
          schema:
            description: The invoice number
            type: string
            example: PPS-26873
      responses:
        '200':
          description: PDF for the specified Invoice
          headers:
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="Tremendous_Invoice_ABC-12345.pdf"
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoicesGetPdfResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetPdf401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetPdf404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetPdf429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetPdf500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /invoices/{id}/csv:
    get:
      tags:
        - Invoices
      summary: Retrieve invoice as CSV
      operationId: Invoices_getCsv
      description: >
        Generates a CSV version for an invoice listing the associated rewards
        and orders
      parameters:
        - description: ID of the Invoice for that the CSV should be generated
          name: id
          in: path
          required: true
          schema:
            description: The invoice number
            type: string
            example: PPS-26873
      responses:
        '200':
          description: CSV for the specified Invoice
          headers:
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="Invoice_ABC-12345_gift_details.csv"
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/InvoicesGetCsvResponse'
        '400':
          description: >-
            The invoice can't be exported to CSV because it isn't associated
            with any rewards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetCsv400Response'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetCsv401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetCsv404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetCsv429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesGetCsv500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /balance_transactions:
    get:
      tags:
        - Balance transactions
      summary: List balance transactions
      operationId: BalanceTransactions_listAll
      description: |
        Fetch a list of all balance transactions on your account.
      parameters:
        - description: >-
            Offsets the returned list by the given number of transactions. The
            returned transactions are ordered (and offsetted) by their creation
            date (DESC).
          name: offset
          in: query
          required: false
          schema:
            type: integer
          example: 10
        - description: Limits the number of transactions listed. The default value is 10.
          name: limit
          in: query
          required: false
          schema:
            type: integer
          example: 10
        - description: >-
            Only return results where the created_at field is greater than or
            equal to the supplied value. The string needs to be an ISO 8601
            datetime.
          name: created_at[gte]
          in: query
          required: false
          schema:
            type: string
          example: '2023-07-15T18:00:00Z'
        - description: >-
            Only return results where the created_at field is less than or equal
            to the supplied value. The string needs to be an ISO 8601 datetime.
          name: created_at[lte]
          in: query
          required: false
          schema:
            type: string
          example: '2023-08-01T18:00:00Z'
      responses:
        '200':
          description: List of all transactions on this account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsListAllResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsListAll401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '422':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsListAll422Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsListAll429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsListAll500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /organizations:
    get:
      tags:
        - Organizations
      summary: List organizations
      operationId: Organizations_getList
      description: >
        The returned list only includes the organization to which the API key
        belongs to, that is used for the request.
      responses:
        '200':
          description: List of all organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetListResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetList401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetList429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetList500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
    post:
      tags:
        - Organizations
      summary: Create organization
      operationId: Organizations_createNewOrganization
      description: >
        Organizations are a way to separate different parts of your business
        within the same Tremendous account.


        You can assign users in your Tremendous team as members to any
        organization. Users can be members of multiple organizations at once.


        API keys belong to a single organization. The API key used in a request
        determines on behalf of which organization the request is carried out.


        **Important note:** When creating an organization, you are required to
        either pass `with_api_key` or `copy_settings[user]` in the request body
        as `true`. This ensures that your new Organization can either be
        accessed via the API or the Dashboard.
      requestBody:
        description: Organization details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationsCreateNewOrganizationRequest'
      responses:
        '200':
          description: The created organization
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsCreateNewOrganizationResponse
        '400':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsCreateNewOrganization400Response
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsCreateNewOrganization401Response
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsCreateNewOrganization429Response
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationsCreateNewOrganization500Response
              example:
                errors:
                  message: Something went wrong. We have been notified
  /organizations/{id}:
    get:
      tags:
        - Organizations
      summary: Retrieve organization
      operationId: Organizations_getOrganization
      parameters:
        - description: ID of the organization to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: An organization (to be overwritten in specific responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetOrganizationResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetOrganization401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetOrganization404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetOrganization429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetOrganization500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /organizations/create_api_key:
    post:
      tags:
        - Organizations
      summary: Create API key
      operationId: Organizations_createApiKey
      description: >
        Creates a new API key. The API key used to make the request will remain
        active.


        Created API keys are generated randomly and returned in the response.
        **You cannot retrieve them again.**
      responses:
        '200':
          description: The created API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateApiKeyResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateApiKey401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateApiKey404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateApiKey429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsCreateApiKey500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /members:
    get:
      tags:
        - Members
      summary: List members
      operationId: Members_listMembers
      description: >
        To list members of a sub-organization [create an API key for that
        organization](https://developers.tremendous.com/) first, then use the
        new API key in the list members request.
      responses:
        '200':
          description: List of all members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListMembersResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListMembers401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListMembers429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListMembers500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
    post:
      tags:
        - Members
      summary: Create member
      operationId: Members_createNewMember
      description: >
        Each organization has one or more users that can access and manage that
        organization. These users are called members.


        Members can take actions via the Tremendous web dashboard directly.
        These actions include adding funding sources to the organization,
        creating Campaigns, and more.


        ### Permissions


        Members can have one of two roles that determine their permissions
        within the organization:


        1. `MEMBER`: Limited permissions. Can view their own reward and order
        histories only.

        2. `ADMIN`: Update organization settings, invite other members to the
        organization, and view all member order and reward histories within
        their organization.


        To create members of a sub-organizations [create an API key for that
        organization](https://developers.tremendous.com/) first, then use the
        new API key in the create member request.


        ### Inviting new members


        After creating a member, an automatic invite is sent to the email
        address. If the user is not registered yet, that person will then need
        to sign up for a Tremendous account.


        > ❗️ Automatic invitations are not available in the sandbox

        >

        > You must manually use the returned `invite_url` field in the payload
        instead.
      requestBody:
        description: Member details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersCreateNewMemberRequest'
      responses:
        '200':
          description: A member (to be overwritten in specific responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersCreateNewMemberResponse'
        '400':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersCreateNewMember400Response'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersCreateNewMember401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersCreateNewMember429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersCreateNewMember500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /members/{id}:
    get:
      tags:
        - Members
      summary: Retrieve member
      operationId: Members_getMember
      parameters:
        - description: ID of the member to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: Details on the retrieved member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetMemberResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetMember401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetMember404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetMember429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetMember500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /fields:
    get:
      tags:
        - Fields
      summary: List fields
      operationId: Fields_getCustomFields
      description: >
        For reporting and analytics purposes, custom fields can be associated
        with rewards generated through the API. Custom fields must be first
        added by members of your admin team through the Tremendous Dashboard.
      responses:
        '200':
          description: List of all fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldsGetCustomFieldsResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldsGetCustomFields401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldsGetCustomFields429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldsGetCustomFields500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List webhooks
      operationId: Webhooks_getDetails
      description: >
        Every organization can only have one webhook. This endpoint shows the
        details about that webhook.


        > 📘 Learn more about Webhooks

        >

        > Our guide explains everything you need to know about the Tremendous
        webhooks:

        > [Read it here](https://developers.tremendous.com/)
      responses:
        '200':
          description: List of configured webhooks (never more than 1 webhook)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetailsResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
    post:
      tags:
        - Webhooks
      summary: Create webhook
      operationId: Webhooks_createWebhook
      description: >+
        Tremendous uses webhooks as a notification system for various events
        that happen in your account.


        > 📘 Learn more about Webhooks

        >

        > Our guide explains everything you need to know about the Tremendous
        webhooks:

        > [Read it here](https://developers.tremendous.com/)


        Every organization can define a single webhook endpoint where we send
        requests to, whenever an event happens.


        This endpoint allows you to setup that endpoint. The URL of the endpoint
        can be changed by making a request to this endpoint again with the new
        URL.


        ## Request body


        <div class="object-schema-request-schema">
          <table>
          <thead>
            <tr>
              <th>Property</th>
              <th>Type</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody class="object-schema-table-body">
            <tr class=""><td><div class="property-name">
          <code class="property-name">url</code>
        </div>

        </td><td><span class="property-type">string</span> <span
        class="property-format">uri</span></td><td><p>URL the webhook will make
        requests to</p>

        </td></tr>
          </tbody>
        </table>


        </div>

      requestBody:
        description: Webhook details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksCreateWebhookRequest'
      responses:
        '200':
          description: A webhook (to be overwritten in specific responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateWebhookResponse'
        '400':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateWebhook400Response'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateWebhook401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateWebhook429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateWebhook500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Retrieve webhook
      operationId: Webhooks_getDetails
      description: >
        > 📘 Learn more about Webhooks

        >

        > Our guide explains everything you need to know about the Tremendous
        webhooks:

        > [Read it here](https://developers.tremendous.com/)
      parameters:
        - description: ID of the webhook to retrieve
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: A webhook (to be overwritten in specific responses)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails200Response'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetDetails500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /webhooks/{id}/simulate:
    post:
      tags:
        - Webhooks
      summary: Test webhook
      operationId: Webhooks_triggerEvent
      description: >
        Making a request to this endpoint will cause our system to trigger a
        webhook for the specified event. This can be very useful when testing
        the setup that processes webhooks on your end.


        > 📘 Learn more about Webhooks

        >

        > Our guide explains everything you need to know about the Tremendous
        webhooks:

        > [Read it here](https://developers.tremendous.com/)
      parameters:
        - description: ID of the webhook to test
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      requestBody:
        description: Webhook details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksTriggerEventRequest'
      responses:
        '200':
          description: Webhook simulation triggered successfully
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/WebhooksTriggerEventResponse'
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksTriggerEvent401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksTriggerEvent404Response'
        '422':
          description: Validation error of the sent parameters or request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksTriggerEvent422Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksTriggerEvent429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksTriggerEvent500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
  /webhooks/{id}/events:
    get:
      tags:
        - Webhooks
      summary: List events
      operationId: Webhooks_listEvents
      description: >
        Lists all event types that can be sent to the configured webhook
        endpoint.


        > 📘 Learn more about Webhooks

        >

        > Our guide explains everything you need to know about the Tremendous
        webhooks:

        > [Read it here](https://developers.tremendous.com/)
      parameters:
        - description: ID of the webhook to list the events for
          name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
      responses:
        '200':
          description: List of all possible event types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListEventsResponse'
              example:
                events:
                  - CAMPAIGNS.CREATED
                  - CAMPAIGNS.DELETED
                  - PRODUCTS.ADDED
                  - PRODUCTS.REMOVED
                  - FUNDING_SOURCES.CREATED
                  - FUNDING_SOURCES.DELETED
                  - FUNDING_SOURCES.FUNDED
                  - INVOICES.CREATED
                  - INVOICES.DELETED
                  - INVOICES.PAID
                  - ORGANIZATIONS.CREATED
                  - MEMBERS.CREATED
                  - MEMBERS.DELETED
                  - REWARDS.CANCELED
                  - REWARDS.DELIVERY.SUCCEEDED
                  - REWARDS.DELIVERY.FAILED
                  - ORDERS.CREATED
                  - ORDERS.APPROVED
                  - ORDERS.CANCELED
                  - ORDERS.FAILED
        '401':
          description: Authorization error e.g. due to an invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListEvents401Response'
              example:
                errors:
                  message: Production Access not available for your account
                  payload: {}
        '404':
          description: No resource could be found for the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListEvents404Response'
        '429':
          description: >-
            Rate limit exceeded, this request was not processed. Future requests
            may not be processed, until your account drops below the rate limit
            threshold, again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListEvents429Response'
        '500':
          description: >-
            The server encountered an unexpected error or couldn't fulfill the
            request in time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListEvents500Response'
              example:
                errors:
                  message: Something went wrong. We have been notified
components:
  responses:
    '422':
      description: Request lacks one of the required parameters
      content:
        application/json:
          schema:
            properties:
              error:
                description: Error message
                type: string
    ErrorAuthorizationFailed:
      description: Authorization error e.g. due to an invalid or missing API key.
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
          example:
            errors:
              message: Production Access not available for your account
              payload: {}
    ErrorRateLimited:
      description: >-
        Rate limit exceeded, this request was not processed. Future requests may
        not be processed, until your account drops below the rate limit
        threshold, again.
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
            example:
              errors:
                message: Too many requests
                payload: {}
    RewardResponse:
      description: A reward (to be overwritten in specific reponses)
      content:
        application/json:
          schema:
            type: object
            required:
              - reward
            properties:
              reward:
                description: >
                  A single reward, sent to a recipient. A reward is always part
                  of an order.


                  Either `products` or `campaign_id` must be specified.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the reward
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  order_id:
                    description: Tremendous ID of the order this reward is part of.
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  created_at:
                    description: Date the reward was created
                    type: string
                    format: date-time
                  value:
                    type: object
                    properties:
                      denomination:
                        description: Amount of the reward
                        type: number
                        format: double
                      currency_code:
                        description: Currency of the reward
                        type: string
                        enum:
                          - USD
                          - CAD
                          - EUR
                          - AED
                          - AFN
                          - ALL
                          - AMD
                          - ARS
                          - AUD
                          - AZN
                          - BAM
                          - BDT
                          - BGN
                          - BHD
                          - BIF
                          - BND
                          - BOB
                          - BRL
                          - BWP
                          - BYR
                          - BZD
                          - CDF
                          - CHF
                          - CLP
                          - CNY
                          - COP
                          - CRC
                          - CVE
                          - CZK
                          - DJF
                          - DKK
                          - DOP
                          - DZD
                          - EEK
                          - EGP
                          - ERN
                          - ETB
                          - GBP
                          - GEL
                          - GHS
                          - GNF
                          - GTQ
                          - HKD
                          - HNL
                          - HRK
                          - HUF
                          - IDR
                          - ILS
                          - INR
                          - IQD
                          - IRR
                          - ISK
                          - JMD
                          - JOD
                          - JPY
                          - KES
                          - KHR
                          - KRW
                          - KWD
                          - KZT
                          - LBP
                          - LKR
                          - LTL
                          - LVL
                          - MAD
                          - MDL
                          - MGA
                          - MKD
                          - MMK
                          - MOP
                          - MUR
                          - MXN
                          - MYR
                          - MZN
                          - NAD
                          - NGN
                          - NIO
                          - NOK
                          - NPR
                          - NZD
                          - OMR
                          - PAB
                          - PEN
                          - PHP
                          - PKR
                          - PLN
                          - PYG
                          - QAR
                          - RON
                          - RSD
                          - RUB
                          - RWF
                          - SAR
                          - SDG
                          - SEK
                          - SGD
                          - SOS
                          - SYP
                          - THB
                          - TND
                          - TOP
                          - TRY
                          - TTD
                          - TWD
                          - TZS
                          - UAH
                          - UGX
                          - UYU
                          - UZS
                          - VEF
                          - VND
                          - XAF
                          - XOF
                          - YER
                          - ZAR
                          - ZMK
                        example: USD
                    required:
                      - denomination
                      - currency_code
                    example:
                      denomination: 50
                      currency_code: USD
                  recipient:
                    description: Details of the recipient of the reward
                    type: object
                    properties:
                      name:
                        description: Name of the recipient
                        type: string
                        example: John Doe Jr.
                      email:
                        description: Email address of the recipient
                        type: string
                        example: john.doe@example.com
                      phone:
                        description: >-
                          Phone number of the recipient. For non-US phone
                          numbers, specify the country code (prefixed with +).
                        type: string
                        example: 123-456-7890
                  deliver_at:
                    description: >-
                      Timestamp of reward delivery within the next year. Note
                      that if date-time is provided, the time values will be
                      ignored.
                    type: string
                    format: date
                    pattern: YYYY-MM-DD
                    example: '2023-12-31'
                  custom_fields:
                    type: array
                    items:
                      description: >-
                        Reward custom data for searching, tracking or copy (see
                        [Adding custom fields to
                        orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                      type: object
                      properties:
                        id:
                          description: Tremendous ID of the custom field
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        value:
                          description: Value of the custom field
                          type: string
                          example: Hufflepuff
                          nullable: true
                        label:
                          description: Label of the custom field
                          type: string
                          example: harry_potter_house
                  delivery:
                    description: |
                      Details on how the reward is delivered to the recipient.
                    type: object
                    properties:
                      method:
                        description: |
                          How to deliver the reward to the recipient.

                          <table>
                            <thead>
                              <tr>
                                <th>Delivery Method</th>
                                <th>Description</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td><code>EMAIL</code></td>
                                <td>Deliver the reward to the recipient by email</td>
                              </tr>
                              <tr>
                                <td><code>LINK</code></td>
                                <td>
                                  <p>Deliver the reward to the recipient via a link.</p>
                                  <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                </td>
                              </tr>
                              <tr>
                                <td><code>PHONE</code></td>
                                <td>Deliver the reward to the recipient by SMS</td>
                              </tr>
                            </tbody>
                          </table>
                        type: string
                        enum:
                          - EMAIL
                          - LINK
                          - PHONE
                      status:
                        description: >
                          Current status of the delivery of the reward:


                          * `SCHEDULED` - Reward is scheduled for delivery and
                          will be delivered soon.

                          * `FAILED` - Delivery of reward failed (e.g. email
                          bounced).

                          * `SUCCEEDED` - Reward was successfully delivered
                          (email or text message delivered or reward link
                          opened).

                          * `PENDING` - Delivery is pending but not yet
                          scheduled.
                        type: string
                        enum:
                          - SCHEDULED
                          - FAILED
                          - SUCCEEDED
                          - PENDING
                    required:
                      - method
                      - status
    ErrorNotFound:
      description: No resource could be found for the provided ID
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
    RewardLinkResponse:
      description: A redemption link for a reward
      content:
        application/json:
          schema:
            type: object
            required:
              - reward
            properties:
              reward:
                description: The redemption link for a reward.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the reward
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  link:
                    description: >
                      Link to redeem the reward at. You need to deliver this
                      link to the recipient.
                    type: string
                    example: >-
                      https://testflight.tremendous.com/rewards/payout/ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
    ErrorForbidden:
      description: >-
        Operation not permitted; only rewards that are of type link support this
        operation
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
            example:
              errors:
                message: Unsupported operation for this reward.
                payload: {}
    RewardTokenResponse:
      description: A redemption token for a reward
      content:
        application/json:
          schema:
            type: object
            required:
              - reward
            properties:
              reward:
                description: The redemption token for a reward.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the reward
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  token:
                    description: |
                      The token to redeem the reward.
                    type: string
                    example: ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
                  expires_at:
                    description: Date the token expires
                    type: string
                    format: date-time
    RequestSuccess:
      description: The request has succeeded.
      content:
        application/json:
          schema:
            type: object
          example: {}
    ErrorValidationFailed:
      description: Validation error of the sent parameters or request body
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
            example:
              errors:
                message: 'Order failed: validation failure'
                payload:
                  some_field:
                    some_sub_field: Something went wrong with this parameter
    OrderResponseWithLink:
      description: An order (to be overwritten in specific reponses)
      content:
        application/json:
          schema:
            type: object
            required:
              - order
            properties:
              order:
                description: An order wraps around the fulfilment of one or more rewards.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the order
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  external_id:
                    description: >
                      Reference for this order, supplied by the customer.


                      When set, `external_id` makes order idempotent. All
                      requests that use the same `external_id`

                      after the initial order creation, will result in a
                      response that returns the data of the

                      initially created order. The response will have a `201`
                      response code. These responses

                      **fail** to create any further orders.


                      It also allows for retrieving by `external_id` instead of
                      `id` only.
                    type: string
                    nullable: true
                    example: Your-Individual-Identifier-for-This-Order
                  campaign_id:
                    description: >
                      ID of the campaign in your account, that defines the
                      available products (different gift cards, charity, etc.)

                      that the recipient can choose from.
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: IVM0I3WNJJL0
                    nullable: true
                  created_at:
                    description: Date the order has been created
                    type: string
                    format: date-time
                  status:
                    description: |
                      Execution status of a given order

                      <table>
                        <thead>
                          <tr>
                            <th>
                              Status
                            </th>
                            <th>
                              Description
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td>
                              <code>
                                CANCELED
                              </code>
                            </td>
                            <td>
                              The order and all of its rewards were canceled.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                CART
                              </code>
                            </td>
                            <td>
                              The order has been created, but hasn't yet been processed.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                EXECUTED
                              </code>
                            </td>
                            <td>
                              The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                FAILED
                              </code>
                            </td>
                            <td>
                              The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                PENDING APPROVAL
                              </code>
                            </td>
                            <td>
                              The order has been created but needs approval to be executed.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                PENDING INTERNAL PAYMENT APPROVAL
                              </code>
                            </td>
                            <td>
                              The order has been created but it is under review and requires approval from our team.
                            </td>
                          </tr>

                        </tbody>
                      </table>
                    type: string
                    enum:
                      - CANCELED
                      - CART
                      - EXECUTED
                      - FAILED
                      - PENDING APPROVAL
                      - PENDING INTERNAL PAYMENT APPROVAL
                  payment:
                    description: >-
                      Cost breakdown of the order (cost of rewards + fees). Cost
                      and fees are always denominated in USD, independent from
                      the currency of the ordered rewards.

                      Note that this property will only appear for processed
                      orders (`status` is `EXECUTED`).
                    type: object
                    properties:
                      subtotal:
                        description: Total price of the order before fees (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 50
                      total:
                        description: Total price of the order including fees (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 52.5
                      fees:
                        description: Fees for the order (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 2.5
                      refund:
                        description: >
                          Breakdown of the order refunds (total amount in USD,
                          independent from the currency of the ordered rewards).

                          Note that this property will only appear for canceled
                          orders or orders with canceled rewards.
                        type: object
                        properties:
                          total:
                            description: Total amount of the order refunds (in USD)
                            type: number
                            format: double
                            minimum: 0
                            example: 52.5
                        required:
                          - total
                      channel:
                        description: Name of the channel in which the order was created
                        type: string
                        enum:
                          - UI
                          - API
                          - EMBED
                          - DECIPHER
                          - QUALTRICS
                          - TYPEFORM
                          - SURVEY MONKEY
                  invoice_id:
                    description: The ID for the invoice associated with this order
                    type: string
                    example: 2E59A82B-0001
                  rewards:
                    type: array
                    minItems: 1
                    items:
                      description: >
                        A single reward, sent to a recipient. A reward is always
                        part of an order.


                        Either `products` or `campaign_id` must be specified.
                      type: object
                      properties:
                        id:
                          description: Tremendous ID of the reward
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        order_id:
                          description: Tremendous ID of the order this reward is part of.
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        created_at:
                          description: Date the reward was created
                          type: string
                          format: date-time
                        value:
                          type: object
                          properties:
                            denomination:
                              description: Amount of the reward
                              type: number
                              format: double
                            currency_code:
                              description: Currency of the reward
                              type: string
                              enum:
                                - USD
                                - CAD
                                - EUR
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ARS
                                - AUD
                                - AZN
                                - BAM
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BND
                                - BOB
                                - BRL
                                - BWP
                                - BYR
                                - BZD
                                - CDF
                                - CHF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DZD
                                - EEK
                                - EGP
                                - ERN
                                - ETB
                                - GBP
                                - GEL
                                - GHS
                                - GNF
                                - GTQ
                                - HKD
                                - HNL
                                - HRK
                                - HUF
                                - IDR
                                - ILS
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KHR
                                - KRW
                                - KWD
                                - KZT
                                - LBP
                                - LKR
                                - LTL
                                - LVL
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MMK
                                - MOP
                                - MUR
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PEN
                                - PHP
                                - PKR
                                - PLN
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SDG
                                - SEK
                                - SGD
                                - SOS
                                - SYP
                                - THB
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - XAF
                                - XOF
                                - YER
                                - ZAR
                                - ZMK
                              example: USD
                          required:
                            - denomination
                            - currency_code
                          example:
                            denomination: 50
                            currency_code: USD
                        recipient:
                          description: Details of the recipient of the reward
                          type: object
                          properties:
                            name:
                              description: Name of the recipient
                              type: string
                              example: John Doe Jr.
                            email:
                              description: Email address of the recipient
                              type: string
                              example: john.doe@example.com
                            phone:
                              description: >-
                                Phone number of the recipient. For non-US phone
                                numbers, specify the country code (prefixed with
                                +).
                              type: string
                              example: 123-456-7890
                        deliver_at:
                          description: >-
                            Timestamp of reward delivery within the next year.
                            Note that if date-time is provided, the time values
                            will be ignored.
                          type: string
                          format: date
                          pattern: YYYY-MM-DD
                          example: '2023-12-31'
                        custom_fields:
                          type: array
                          items:
                            description: >-
                              Reward custom data for searching, tracking or copy
                              (see [Adding custom fields to
                              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                            type: object
                            properties:
                              id:
                                description: Tremendous ID of the custom field
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                              value:
                                description: Value of the custom field
                                type: string
                                example: Hufflepuff
                                nullable: true
                              label:
                                description: Label of the custom field
                                type: string
                                example: harry_potter_house
                        delivery:
                          description: >
                            Details on how the reward is delivered to the
                            recipient.
                          type: object
                          properties:
                            method:
                              description: |
                                How to deliver the reward to the recipient.

                                <table>
                                  <thead>
                                    <tr>
                                      <th>Delivery Method</th>
                                      <th>Description</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    <tr>
                                      <td><code>EMAIL</code></td>
                                      <td>Deliver the reward to the recipient by email</td>
                                    </tr>
                                    <tr>
                                      <td><code>LINK</code></td>
                                      <td>
                                        <p>Deliver the reward to the recipient via a link.</p>
                                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                      </td>
                                    </tr>
                                    <tr>
                                      <td><code>PHONE</code></td>
                                      <td>Deliver the reward to the recipient by SMS</td>
                                    </tr>
                                  </tbody>
                                </table>
                              type: string
                              enum:
                                - EMAIL
                                - LINK
                                - PHONE
                            status:
                              description: >
                                Current status of the delivery of the reward:


                                * `SCHEDULED` - Reward is scheduled for delivery
                                and will be delivered soon.

                                * `FAILED` - Delivery of reward failed (e.g.
                                email bounced).

                                * `SUCCEEDED` - Reward was successfully
                                delivered (email or text message delivered or
                                reward link opened).

                                * `PENDING` - Delivery is pending but not yet
                                scheduled.
                              type: string
                              enum:
                                - SCHEDULED
                                - FAILED
                                - SUCCEEDED
                                - PENDING
                            link:
                              description: >
                                Link to redeem the reward at. You need to
                                deliver this link to the recipient.


                                Only available for rewards for which the
                                `method` for delivery is set to `LINK`.
                              type: string
                              example: >-
                                https://testflight.tremendous.com/rewards/payout/z67jic92r
                          required:
                            - method
                            - status
                required:
                  - id
                  - created_at
                  - status
    OrderResponseWithoutLink:
      description: An order (to be overwritten in specific reponses)
      content:
        application/json:
          schema:
            type: object
            required:
              - order
            properties:
              order:
                description: An order wraps around the fulfilment of one or more rewards.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the order
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  external_id:
                    description: >
                      Reference for this order, supplied by the customer.


                      When set, `external_id` makes order idempotent. All
                      requests that use the same `external_id`

                      after the initial order creation, will result in a
                      response that returns the data of the

                      initially created order. The response will have a `201`
                      response code. These responses

                      **fail** to create any further orders.


                      It also allows for retrieving by `external_id` instead of
                      `id` only.
                    type: string
                    nullable: true
                    example: Your-Individual-Identifier-for-This-Order
                  campaign_id:
                    description: >
                      ID of the campaign in your account, that defines the
                      available products (different gift cards, charity, etc.)

                      that the recipient can choose from.
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: IVM0I3WNJJL0
                    nullable: true
                  created_at:
                    description: Date the order has been created
                    type: string
                    format: date-time
                  status:
                    description: |
                      Execution status of a given order

                      <table>
                        <thead>
                          <tr>
                            <th>
                              Status
                            </th>
                            <th>
                              Description
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td>
                              <code>
                                CANCELED
                              </code>
                            </td>
                            <td>
                              The order and all of its rewards were canceled.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                CART
                              </code>
                            </td>
                            <td>
                              The order has been created, but hasn't yet been processed.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                EXECUTED
                              </code>
                            </td>
                            <td>
                              The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                FAILED
                              </code>
                            </td>
                            <td>
                              The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                PENDING APPROVAL
                              </code>
                            </td>
                            <td>
                              The order has been created but needs approval to be executed.
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <code>
                                PENDING INTERNAL PAYMENT APPROVAL
                              </code>
                            </td>
                            <td>
                              The order has been created but it is under review and requires approval from our team.
                            </td>
                          </tr>

                        </tbody>
                      </table>
                    type: string
                    enum:
                      - CANCELED
                      - CART
                      - EXECUTED
                      - FAILED
                      - PENDING APPROVAL
                      - PENDING INTERNAL PAYMENT APPROVAL
                  payment:
                    description: >-
                      Cost breakdown of the order (cost of rewards + fees). Cost
                      and fees are always denominated in USD, independent from
                      the currency of the ordered rewards.

                      Note that this property will only appear for processed
                      orders (`status` is `EXECUTED`).
                    type: object
                    properties:
                      subtotal:
                        description: Total price of the order before fees (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 50
                      total:
                        description: Total price of the order including fees (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 52.5
                      fees:
                        description: Fees for the order (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 2.5
                      refund:
                        description: >
                          Breakdown of the order refunds (total amount in USD,
                          independent from the currency of the ordered rewards).

                          Note that this property will only appear for canceled
                          orders or orders with canceled rewards.
                        type: object
                        properties:
                          total:
                            description: Total amount of the order refunds (in USD)
                            type: number
                            format: double
                            minimum: 0
                            example: 52.5
                        required:
                          - total
                      channel:
                        description: Name of the channel in which the order was created
                        type: string
                        enum:
                          - UI
                          - API
                          - EMBED
                          - DECIPHER
                          - QUALTRICS
                          - TYPEFORM
                          - SURVEY MONKEY
                  invoice_id:
                    description: The ID for the invoice associated with this order
                    type: string
                    example: 2E59A82B-0001
                  reward:
                    description: >
                      A single reward, sent to a recipient. A reward is always
                      part of an order.


                      Either `products` or `campaign_id` must be specified.
                    type: object
                    properties:
                      id:
                        description: Tremendous ID of the reward
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      order_id:
                        description: Tremendous ID of the order this reward is part of.
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      created_at:
                        description: Date the reward was created
                        type: string
                        format: date-time
                      value:
                        type: object
                        properties:
                          denomination:
                            description: Amount of the reward
                            type: number
                            format: double
                          currency_code:
                            description: Currency of the reward
                            type: string
                            enum:
                              - USD
                              - CAD
                              - EUR
                              - AED
                              - AFN
                              - ALL
                              - AMD
                              - ARS
                              - AUD
                              - AZN
                              - BAM
                              - BDT
                              - BGN
                              - BHD
                              - BIF
                              - BND
                              - BOB
                              - BRL
                              - BWP
                              - BYR
                              - BZD
                              - CDF
                              - CHF
                              - CLP
                              - CNY
                              - COP
                              - CRC
                              - CVE
                              - CZK
                              - DJF
                              - DKK
                              - DOP
                              - DZD
                              - EEK
                              - EGP
                              - ERN
                              - ETB
                              - GBP
                              - GEL
                              - GHS
                              - GNF
                              - GTQ
                              - HKD
                              - HNL
                              - HRK
                              - HUF
                              - IDR
                              - ILS
                              - INR
                              - IQD
                              - IRR
                              - ISK
                              - JMD
                              - JOD
                              - JPY
                              - KES
                              - KHR
                              - KRW
                              - KWD
                              - KZT
                              - LBP
                              - LKR
                              - LTL
                              - LVL
                              - MAD
                              - MDL
                              - MGA
                              - MKD
                              - MMK
                              - MOP
                              - MUR
                              - MXN
                              - MYR
                              - MZN
                              - NAD
                              - NGN
                              - NIO
                              - NOK
                              - NPR
                              - NZD
                              - OMR
                              - PAB
                              - PEN
                              - PHP
                              - PKR
                              - PLN
                              - PYG
                              - QAR
                              - RON
                              - RSD
                              - RUB
                              - RWF
                              - SAR
                              - SDG
                              - SEK
                              - SGD
                              - SOS
                              - SYP
                              - THB
                              - TND
                              - TOP
                              - TRY
                              - TTD
                              - TWD
                              - TZS
                              - UAH
                              - UGX
                              - UYU
                              - UZS
                              - VEF
                              - VND
                              - XAF
                              - XOF
                              - YER
                              - ZAR
                              - ZMK
                            example: USD
                        required:
                          - denomination
                          - currency_code
                        example:
                          denomination: 50
                          currency_code: USD
                      recipient:
                        description: Details of the recipient of the reward
                        type: object
                        properties:
                          name:
                            description: Name of the recipient
                            type: string
                            example: John Doe Jr.
                          email:
                            description: Email address of the recipient
                            type: string
                            example: john.doe@example.com
                          phone:
                            description: >-
                              Phone number of the recipient. For non-US phone
                              numbers, specify the country code (prefixed with
                              +).
                            type: string
                            example: 123-456-7890
                      deliver_at:
                        description: >-
                          Timestamp of reward delivery within the next year.
                          Note that if date-time is provided, the time values
                          will be ignored.
                        type: string
                        format: date
                        pattern: YYYY-MM-DD
                        example: '2023-12-31'
                      custom_fields:
                        type: array
                        items:
                          description: >-
                            Reward custom data for searching, tracking or copy
                            (see [Adding custom fields to
                            orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                          type: object
                          properties:
                            id:
                              description: Tremendous ID of the custom field
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                            value:
                              description: Value of the custom field
                              type: string
                              example: Hufflepuff
                              nullable: true
                            label:
                              description: Label of the custom field
                              type: string
                              example: harry_potter_house
                      delivery:
                        description: >
                          Details on how the reward is delivered to the
                          recipient.
                        type: object
                        properties:
                          method:
                            description: |
                              How to deliver the reward to the recipient.

                              <table>
                                <thead>
                                  <tr>
                                    <th>Delivery Method</th>
                                    <th>Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td><code>EMAIL</code></td>
                                    <td>Deliver the reward to the recipient by email</td>
                                  </tr>
                                  <tr>
                                    <td><code>LINK</code></td>
                                    <td>
                                      <p>Deliver the reward to the recipient via a link.</p>
                                      <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                    </td>
                                  </tr>
                                  <tr>
                                    <td><code>PHONE</code></td>
                                    <td>Deliver the reward to the recipient by SMS</td>
                                  </tr>
                                </tbody>
                              </table>
                            type: string
                            enum:
                              - EMAIL
                              - LINK
                              - PHONE
                          status:
                            description: >
                              Current status of the delivery of the reward:


                              * `SCHEDULED` - Reward is scheduled for delivery
                              and will be delivered soon.

                              * `FAILED` - Delivery of reward failed (e.g. email
                              bounced).

                              * `SUCCEEDED` - Reward was successfully delivered
                              (email or text message delivered or reward link
                              opened).

                              * `PENDING` - Delivery is pending but not yet
                              scheduled.
                            type: string
                            enum:
                              - SCHEDULED
                              - FAILED
                              - SUCCEEDED
                              - PENDING
                        required:
                          - method
                          - status
                required:
                  - id
                  - created_at
                  - status
    ErrorPaymentRequired:
      description: Not enough funds to carry out the request. Please top-up your account
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
          example:
            errors:
              message: >-
                Not enough funds to carry out this operation. Fund your balance
                to proceed.
              payload: {}
    InvoiceResponse:
      description: An invoice (to be overwritten in specific reponses)
      content:
        application/json:
          schema:
            type: object
            required:
              - invoice
            properties:
              invoice:
                description: >
                  Invoices are instruments to fund your Tremendous account's
                  balance.


                  Invoices can be created by your organization programatically.

                  Once we receive your payment, the invoice is marked as `PAID`
                  and we add

                  the respective funds to your account's balance.
                type: object
                required:
                  - id
                  - amount
                  - status
                  - created_at
                  - paid_at
                properties:
                  id:
                    description: The invoice number
                    type: string
                    example: PPS-26873
                  po_number:
                    description: >-
                      Reference to the purchase order number within your
                      organization
                    type: string
                    nullable: true
                    example: 123-PO-EE
                  amount:
                    description: Amount of the invoice in USD
                    type: number
                    format: double
                    example: 50.35
                  status:
                    description: |
                      Status of this invoice

                      <table>
                        <thead>
                          <tr>
                            <th>Status</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><code>DELETED</code></td>
                            <td>Invoice has been deleted by your organization</td>
                          </tr>
                          <tr>
                            <td><code>PAID</code></td>
                            <td>Invoice has been paid by your organization</td>
                          </tr>
                          <tr>
                            <td><code>OPEN</code></td>
                            <td>Invoice has been created by your organization but has not been paid, yet</td>
                          </tr>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - DELETED
                      - PAID
                      - OPEN
                      - MARKED_AS_PAID
                    example: PAID
                  orders:
                    description: >-
                      List of orders related to the invoice (it doesn't apply to
                      prefunding)
                    type: array
                    items:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    example:
                      - ABC123456789
                      - DEF123456789
                  rewards:
                    description: >-
                      List of rewards related to the invoice (it doesn't apply
                      to prefunding)
                    type: array
                    items:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    example:
                      - ABC123456789
                      - DEF123456789
                  created_at:
                    description: |
                      Timestamp of when the invoice has been created.
                    type: string
                    format: date
                  paid_at:
                    description: |
                      Timestamp of when the invoice has been paid.
                    type: string
                    format: date
                    nullable: true
    CreateOrganizationResponse:
      description: The created organization
      content:
        application/json:
          schema:
            type: object
            properties:
              organization:
                description: >
                  Organizations are a way to separate different parts of your
                  business within the same Tremendous account.

                  Your root Tremendous account is an organization itself and can
                  have multiple sub-organizations.


                  You can assign users in your Tremendous team as members to any
                  organization. Users can be members of multiple

                  organizations at once.


                  Each organizations can have it's own API key.
                type: object
                properties:
                  id:
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  name:
                    description: Name of the organization
                    type: string
                    example: ACME Inc.
                  website:
                    description: URL of the website of that organization
                    type: string
                    format: uri
                    example: https://www.example.com/some-org
                  status:
                    description: >-
                      Status of the organization. Organizations need to be
                      approved to be able to use them to send out rewards.
                    type: string
                    enum:
                      - PENDING
                      - APPROVED
                      - REJECTED
                    example: APPROVED
                  created_at:
                    description: >
                      Timestamp of when the organization has been created.


                      *This field is only returned when creating an
                      organization.* It is not returned anymore when retrieving
                      or listing organizations.
                    type: string
                    format: date
                    example: '2021-08-02'
                  api_key:
                    description: >
                      The API key for the created organization.

                      This property is only returned when `with_api_key` is set
                      to `true`.
                    type: string
                required:
                  - name
                  - website
    OrganizationResponse:
      description: An organization (to be overwritten in specific responses)
      content:
        application/json:
          schema:
            type: object
            properties:
              organization:
                description: >
                  Organizations are a way to separate different parts of your
                  business within the same Tremendous account.

                  Your root Tremendous account is an organization itself and can
                  have multiple sub-organizations.


                  You can assign users in your Tremendous team as members to any
                  organization. Users can be members of multiple

                  organizations at once.


                  Each organizations can have it's own API key.
                type: object
                properties:
                  id:
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  name:
                    description: Name of the organization
                    type: string
                    example: ACME Inc.
                  website:
                    description: URL of the website of that organization
                    type: string
                    format: uri
                    example: https://www.example.com/some-org
                  status:
                    description: >-
                      Status of the organization. Organizations need to be
                      approved to be able to use them to send out rewards.
                    type: string
                    enum:
                      - PENDING
                      - APPROVED
                      - REJECTED
                    example: APPROVED
                  created_at:
                    description: >
                      Timestamp of when the organization has been created.


                      *This field is only returned when creating an
                      organization.* It is not returned anymore when retrieving
                      or listing organizations.
                    type: string
                    format: date
                    example: '2021-08-02'
                required:
                  - name
                  - website
    MemberWithoutEventsResponse:
      description: A member (to be overwritten in specific responses)
      content:
        application/json:
          schema:
            type: object
            required:
              - member
            properties:
              member:
                description: >
                  Each organization has one or more users that can access and
                  manage that organization. These users are called members.


                  Members can take actions via the Tremendous web dashboard
                  directly.


                  These actions include adding funding sources to the
                  organization, creating Campaigns, and more.
                type: object
                required:
                  - id
                  - name
                  - email
                  - role
                  - status
                properties:
                  id:
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  email:
                    description: Email address of the member
                    type: string
                    format: email
                    example: jane@example.com
                  name:
                    description: Full name of the member
                    type: string
                    example: Jane Doe
                    nullable: true
                  role:
                    description: |
                      Role of the member within the organization.

                      <table>
                        <thead>
                          <tr>
                            <th>Role</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                          <tr>
                            <td><code>MEMBER</code></td>
                            <td>Limited permissions. Can view their own reward and order histories only.</td>
                          </tr>
                          <tr>
                            <td><code>ADMIN</code></td>
                            <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                          </tr>
                          <tr>
                            <td><code>DELETED</code></td>
                            <td>No longer a member of this organization.</td>
                          </tr>
                        <tbody>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - MEMBER
                      - ADMIN
                      - DELETED
                  status:
                    description: >
                      Current status of the member's account.


                      When creating a member it starts out in the status
                      `INVITED`. As soon as that member open the invitation link
                      and registers an account, the status switches to
                      `REGISTERED`.
                    type: string
                    enum:
                      - REGISTERED
                      - INVITED
                    example: INVITED
                  created_at:
                    description: >
                      Timestamp when this member was created.


                      The `created_at` timestamp is **NOT** returned when
                      retrieving a member (but is part of the response when
                      listing or creating members).
                    type: string
                    format: date-time
                    example: '2021-08-02T11:05:59Z'
                  last_login_at:
                    description: >
                      Timestamp when this member most recently logged into the
                      dashboard of the organization associated with this API
                      key.
                    type: string
                    format: date-time
                    example: '2021-08-02T11:05:59Z'
                    nullable: true
    WebhookResponse:
      description: A webhook (to be overwritten in specific responses)
      content:
        application/json:
          schema:
            type: object
            properties:
              webhook:
                type: object
                properties:
                  id:
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  url:
                    description: URL the webhook will make requests to
                    type: string
                    format: uri
                    example: https://example.com/webhook
                    nullable: true
                  private_key:
                    description: Private key for the webhook
                    type: string
                    example: jXjdU8dozx571TG6YzL4
                required:
                  - url
    UnexpectedError:
      description: >-
        The server encountered an unexpected error or couldn't fulfill the
        request in time.
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                type: object
                properties:
                  message:
                    description: Error message
                    type: string
                  payload:
                    description: >-
                      Mirrors the request parameters structure, filled only with
                      the (nested) properties that caused an error.
                    type: object
                    example:
                      rewards:
                        catalog: At least one valid product required
          example:
            errors:
              message: Something went wrong. We have been notified
  securitySchemes:
    BearerApiKey:
      type: http
      scheme: bearer
  schemas:
    TremendousId:
      type: string
      pattern: '[A-Z0-9]{4,20}'
      example: SOMEIDSOMEID
      readOnly: true
    NullableTremendousId:
      type: string
      pattern: '[A-Z0-9]{4,20}'
      example: SOMEIDSOMEID
      readOnly: true
      nullable: true
    CurrencyCodes:
      type: string
      enum:
        - USD
        - CAD
        - EUR
        - AED
        - AFN
        - ALL
        - AMD
        - ARS
        - AUD
        - AZN
        - BAM
        - BDT
        - BGN
        - BHD
        - BIF
        - BND
        - BOB
        - BRL
        - BWP
        - BYR
        - BZD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EEK
        - EGP
        - ERN
        - ETB
        - GBP
        - GEL
        - GHS
        - GNF
        - GTQ
        - HKD
        - HNL
        - HRK
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KHR
        - KRW
        - KWD
        - KZT
        - LBP
        - LKR
        - LTL
        - LVL
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MOP
        - MUR
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SDG
        - SEK
        - SGD
        - SOS
        - SYP
        - THB
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - UYU
        - UZS
        - VEF
        - VND
        - XAF
        - XOF
        - YER
        - ZAR
        - ZMK
      example: USD
    RewardValue:
      type: object
      properties:
        denomination:
          description: Amount of the reward
          type: number
          format: double
        currency_code:
          description: Currency of the reward
          type: string
          enum:
            - USD
            - CAD
            - EUR
            - AED
            - AFN
            - ALL
            - AMD
            - ARS
            - AUD
            - AZN
            - BAM
            - BDT
            - BGN
            - BHD
            - BIF
            - BND
            - BOB
            - BRL
            - BWP
            - BYR
            - BZD
            - CDF
            - CHF
            - CLP
            - CNY
            - COP
            - CRC
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EEK
            - EGP
            - ERN
            - ETB
            - GBP
            - GEL
            - GHS
            - GNF
            - GTQ
            - HKD
            - HNL
            - HRK
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KHR
            - KRW
            - KWD
            - KZT
            - LBP
            - LKR
            - LTL
            - LVL
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MOP
            - MUR
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SDG
            - SEK
            - SGD
            - SOS
            - SYP
            - THB
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - UYU
            - UZS
            - VEF
            - VND
            - XAF
            - XOF
            - YER
            - ZAR
            - ZMK
          example: USD
      required:
        - denomination
        - currency_code
      example:
        denomination: 50
        currency_code: USD
    Recipient:
      description: Details of the recipient of the reward
      type: object
      properties:
        name:
          description: Name of the recipient
          type: string
          example: John Doe Jr.
        email:
          description: Email address of the recipient
          type: string
          example: john.doe@example.com
        phone:
          description: >-
            Phone number of the recipient. For non-US phone numbers, specify the
            country code (prefixed with +).
          type: string
          example: 123-456-7890
    CustomField:
      description: >-
        Reward custom data for searching, tracking or copy (see [Adding custom
        fields to
        orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
      type: object
      properties:
        id:
          description: Tremendous ID of the custom field
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: false
        value:
          description: Value of the custom field
          type: string
          example: Hufflepuff
          readOnly: false
          nullable: true
        label:
          description: Label of the custom field
          type: string
          example: harry_potter_house
          readOnly: false
    RewardBase:
      description: >
        A single reward, sent to a recipient. A reward is always part of an
        order.


        Either `products` or `campaign_id` must be specified.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        order_id:
          description: Tremendous ID of the order this reward is part of.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        created_at:
          description: Date the reward was created
          type: string
          format: date-time
          readOnly: true
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: false
          nullable: true
          writeOnly: true
        products:
          description: >
            List of IDs of product (different gift cards, charity, etc.) that
            will be available

            to the recipient to choose from.


            Providing a `products` array will override the products made
            available by the campaign

            specified using the `campaign_id` property unless the `products`
            array is empty. It will

            _not_ override other campaign attributes, like the message and
            customization of the look and feel.
          type: array
          writeOnly: true
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            writeOnly: true
          minItems: 1
        value:
          type: object
          properties:
            denomination:
              description: Amount of the reward
              type: number
              format: double
            currency_code:
              description: Currency of the reward
              type: string
              enum:
                - USD
                - CAD
                - EUR
                - AED
                - AFN
                - ALL
                - AMD
                - ARS
                - AUD
                - AZN
                - BAM
                - BDT
                - BGN
                - BHD
                - BIF
                - BND
                - BOB
                - BRL
                - BWP
                - BYR
                - BZD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EEK
                - EGP
                - ERN
                - ETB
                - GBP
                - GEL
                - GHS
                - GNF
                - GTQ
                - HKD
                - HNL
                - HRK
                - HUF
                - IDR
                - ILS
                - INR
                - IQD
                - IRR
                - ISK
                - JMD
                - JOD
                - JPY
                - KES
                - KHR
                - KRW
                - KWD
                - KZT
                - LBP
                - LKR
                - LTL
                - LVL
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MOP
                - MUR
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SDG
                - SEK
                - SGD
                - SOS
                - SYP
                - THB
                - TND
                - TOP
                - TRY
                - TTD
                - TWD
                - TZS
                - UAH
                - UGX
                - UYU
                - UZS
                - VEF
                - VND
                - XAF
                - XOF
                - YER
                - ZAR
                - ZMK
              example: USD
          required:
            - denomination
            - currency_code
          example:
            denomination: 50
            currency_code: USD
        recipient:
          description: Details of the recipient of the reward
          type: object
          properties:
            name:
              description: Name of the recipient
              type: string
              example: John Doe Jr.
            email:
              description: Email address of the recipient
              type: string
              example: john.doe@example.com
            phone:
              description: >-
                Phone number of the recipient. For non-US phone numbers, specify
                the country code (prefixed with +).
              type: string
              example: 123-456-7890
        deliver_at:
          description: >-
            Timestamp of reward delivery within the next year. Note that if
            date-time is provided, the time values will be ignored.
          type: string
          format: date
          pattern: YYYY-MM-DD
          example: '2023-12-31'
        custom_fields:
          type: array
          items:
            description: >-
              Reward custom data for searching, tracking or copy (see [Adding
              custom fields to
              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
            type: object
            properties:
              id:
                description: Tremendous ID of the custom field
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
              value:
                description: Value of the custom field
                type: string
                example: Hufflepuff
                readOnly: false
                nullable: true
              label:
                description: Label of the custom field
                type: string
                example: harry_potter_house
                readOnly: false
    DeliveryMethod:
      description: |
        How to deliver the reward to the recipient.

        <table>
          <thead>
            <tr>
              <th>Delivery Method</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td><code>EMAIL</code></td>
              <td>Deliver the reward to the recipient by email</td>
            </tr>
            <tr>
              <td><code>LINK</code></td>
              <td>
                <p>Deliver the reward to the recipient via a link.</p>
                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
              </td>
            </tr>
            <tr>
              <td><code>PHONE</code></td>
              <td>Deliver the reward to the recipient by SMS</td>
            </tr>
          </tbody>
        </table>
      type: string
      enum:
        - EMAIL
        - LINK
        - PHONE
    DeliveryStatus:
      description: >
        Current status of the delivery of the reward:


        * `SCHEDULED` - Reward is scheduled for delivery and will be delivered
        soon.

        * `FAILED` - Delivery of reward failed (e.g. email bounced).

        * `SUCCEEDED` - Reward was successfully delivered (email or text message
        delivered or reward link opened).

        * `PENDING` - Delivery is pending but not yet scheduled.
      type: string
      enum:
        - SCHEDULED
        - FAILED
        - SUCCEEDED
        - PENDING
      readOnly: true
    DeliveryDetails:
      description: |
        Details on how the reward is delivered to the recipient.
      type: object
      properties:
        method:
          description: |
            How to deliver the reward to the recipient.

            <table>
              <thead>
                <tr>
                  <th>Delivery Method</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><code>EMAIL</code></td>
                  <td>Deliver the reward to the recipient by email</td>
                </tr>
                <tr>
                  <td><code>LINK</code></td>
                  <td>
                    <p>Deliver the reward to the recipient via a link.</p>
                    <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                  </td>
                </tr>
                <tr>
                  <td><code>PHONE</code></td>
                  <td>Deliver the reward to the recipient by SMS</td>
                </tr>
              </tbody>
            </table>
          type: string
          enum:
            - EMAIL
            - LINK
            - PHONE
        status:
          description: >
            Current status of the delivery of the reward:


            * `SCHEDULED` - Reward is scheduled for delivery and will be
            delivered soon.

            * `FAILED` - Delivery of reward failed (e.g. email bounced).

            * `SUCCEEDED` - Reward was successfully delivered (email or text
            message delivered or reward link opened).

            * `PENDING` - Delivery is pending but not yet scheduled.
          type: string
          enum:
            - SCHEDULED
            - FAILED
            - SUCCEEDED
            - PENDING
          readOnly: true
      required:
        - method
        - status
    RewardWithoutLink:
      description: >
        A single reward, sent to a recipient. A reward is always part of an
        order.


        Either `products` or `campaign_id` must be specified.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        order_id:
          description: Tremendous ID of the order this reward is part of.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        created_at:
          description: Date the reward was created
          type: string
          format: date-time
          readOnly: true
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: false
          nullable: true
          writeOnly: true
        products:
          description: >
            List of IDs of product (different gift cards, charity, etc.) that
            will be available

            to the recipient to choose from.


            Providing a `products` array will override the products made
            available by the campaign

            specified using the `campaign_id` property unless the `products`
            array is empty. It will

            _not_ override other campaign attributes, like the message and
            customization of the look and feel.
          type: array
          writeOnly: true
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            writeOnly: true
          minItems: 1
        value:
          type: object
          properties:
            denomination:
              description: Amount of the reward
              type: number
              format: double
            currency_code:
              description: Currency of the reward
              type: string
              enum:
                - USD
                - CAD
                - EUR
                - AED
                - AFN
                - ALL
                - AMD
                - ARS
                - AUD
                - AZN
                - BAM
                - BDT
                - BGN
                - BHD
                - BIF
                - BND
                - BOB
                - BRL
                - BWP
                - BYR
                - BZD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EEK
                - EGP
                - ERN
                - ETB
                - GBP
                - GEL
                - GHS
                - GNF
                - GTQ
                - HKD
                - HNL
                - HRK
                - HUF
                - IDR
                - ILS
                - INR
                - IQD
                - IRR
                - ISK
                - JMD
                - JOD
                - JPY
                - KES
                - KHR
                - KRW
                - KWD
                - KZT
                - LBP
                - LKR
                - LTL
                - LVL
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MOP
                - MUR
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SDG
                - SEK
                - SGD
                - SOS
                - SYP
                - THB
                - TND
                - TOP
                - TRY
                - TTD
                - TWD
                - TZS
                - UAH
                - UGX
                - UYU
                - UZS
                - VEF
                - VND
                - XAF
                - XOF
                - YER
                - ZAR
                - ZMK
              example: USD
          required:
            - denomination
            - currency_code
          example:
            denomination: 50
            currency_code: USD
        recipient:
          description: Details of the recipient of the reward
          type: object
          properties:
            name:
              description: Name of the recipient
              type: string
              example: John Doe Jr.
            email:
              description: Email address of the recipient
              type: string
              example: john.doe@example.com
            phone:
              description: >-
                Phone number of the recipient. For non-US phone numbers, specify
                the country code (prefixed with +).
              type: string
              example: 123-456-7890
        deliver_at:
          description: >-
            Timestamp of reward delivery within the next year. Note that if
            date-time is provided, the time values will be ignored.
          type: string
          format: date
          pattern: YYYY-MM-DD
          example: '2023-12-31'
        custom_fields:
          type: array
          items:
            description: >-
              Reward custom data for searching, tracking or copy (see [Adding
              custom fields to
              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
            type: object
            properties:
              id:
                description: Tremendous ID of the custom field
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
              value:
                description: Value of the custom field
                type: string
                example: Hufflepuff
                readOnly: false
                nullable: true
              label:
                description: Label of the custom field
                type: string
                example: harry_potter_house
                readOnly: false
        delivery:
          description: |
            Details on how the reward is delivered to the recipient.
          type: object
          properties:
            method:
              description: |
                How to deliver the reward to the recipient.

                <table>
                  <thead>
                    <tr>
                      <th>Delivery Method</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>EMAIL</code></td>
                      <td>Deliver the reward to the recipient by email</td>
                    </tr>
                    <tr>
                      <td><code>LINK</code></td>
                      <td>
                        <p>Deliver the reward to the recipient via a link.</p>
                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                      </td>
                    </tr>
                    <tr>
                      <td><code>PHONE</code></td>
                      <td>Deliver the reward to the recipient by SMS</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - EMAIL
                - LINK
                - PHONE
            status:
              description: >
                Current status of the delivery of the reward:


                * `SCHEDULED` - Reward is scheduled for delivery and will be
                delivered soon.

                * `FAILED` - Delivery of reward failed (e.g. email bounced).

                * `SUCCEEDED` - Reward was successfully delivered (email or text
                message delivered or reward link opened).

                * `PENDING` - Delivery is pending but not yet scheduled.
              type: string
              enum:
                - SCHEDULED
                - FAILED
                - SUCCEEDED
                - PENDING
              readOnly: true
          required:
            - method
            - status
    ErrorModel:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardLink:
      description: The redemption link for a reward.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        link:
          description: >
            Link to redeem the reward at. You need to deliver this link to the
            recipient.
          type: string
          example: >-
            https://testflight.tremendous.com/rewards/payout/ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
          readOnly: true
    RewardToken:
      description: The redemption token for a reward.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        token:
          description: |
            The token to redeem the reward.
          type: string
          example: ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
          readOnly: true
        expires_at:
          description: Date the token expires
          type: string
          format: date-time
          readOnly: true
    OrderStatus:
      description: |
        Execution status of a given order

        <table>
          <thead>
            <tr>
              <th>
                Status
              </th>
              <th>
                Description
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <code>
                  CANCELED
                </code>
              </td>
              <td>
                The order and all of its rewards were canceled.
              </td>
            </tr>
            <tr>
              <td>
                <code>
                  CART
                </code>
              </td>
              <td>
                The order has been created, but hasn't yet been processed.
              </td>
            </tr>
            <tr>
              <td>
                <code>
                  EXECUTED
                </code>
              </td>
              <td>
                The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
              </td>
            </tr>
            <tr>
              <td>
                <code>
                  FAILED
                </code>
              </td>
              <td>
                The order could not be processed due to an error. E.g. due to insufficient funds in the account.
              </td>
            </tr>
            <tr>
              <td>
                <code>
                  PENDING APPROVAL
                </code>
              </td>
              <td>
                The order has been created but needs approval to be executed.
              </td>
            </tr>
            <tr>
              <td>
                <code>
                  PENDING INTERNAL PAYMENT APPROVAL
                </code>
              </td>
              <td>
                The order has been created but it is under review and requires approval from our team.
              </td>
            </tr>

          </tbody>
        </table>
      type: string
      enum:
        - CANCELED
        - CART
        - EXECUTED
        - FAILED
        - PENDING APPROVAL
        - PENDING INTERNAL PAYMENT APPROVAL
    RefundDetails:
      type: object
      properties:
        total:
          description: Total amount of the order refunds (in USD)
          type: number
          format: double
          minimum: 0
          readOnly: true
          example: 52.5
      required:
        - total
    PaymentDetails:
      type: object
      properties:
        subtotal:
          description: Total price of the order before fees (in USD)
          type: number
          format: double
          minimum: 0
          readOnly: true
          example: 50
        total:
          description: Total price of the order including fees (in USD)
          type: number
          format: double
          minimum: 0
          readOnly: true
          example: 52.5
        fees:
          description: Fees for the order (in USD)
          type: number
          format: double
          minimum: 0
          readOnly: true
          example: 2.5
        refund:
          description: >
            Breakdown of the order refunds (total amount in USD, independent
            from the currency of the ordered rewards).

            Note that this property will only appear for canceled orders or
            orders with canceled rewards.
          type: object
          properties:
            total:
              description: Total amount of the order refunds (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 52.5
          required:
            - total
        channel:
          description: Name of the channel in which the order was created
          type: string
          enum:
            - UI
            - API
            - EMBED
            - DECIPHER
            - QUALTRICS
            - TYPEFORM
            - SURVEY MONKEY
    OrderBase:
      description: An order wraps around the fulfilment of one or more rewards.
      type: object
      properties:
        id:
          description: Tremendous ID of the order
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        external_id:
          description: >
            Reference for this order, supplied by the customer.


            When set, `external_id` makes order idempotent. All requests that
            use the same `external_id`

            after the initial order creation, will result in a response that
            returns the data of the

            initially created order. The response will have a `201` response
            code. These responses

            **fail** to create any further orders.


            It also allows for retrieving by `external_id` instead of `id` only.
          type: string
          nullable: true
          example: Your-Individual-Identifier-for-This-Order
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: IVM0I3WNJJL0
          readOnly: true
          nullable: true
        created_at:
          description: Date the order has been created
          type: string
          format: date-time
          readOnly: true
        status:
          description: |
            Execution status of a given order

            <table>
              <thead>
                <tr>
                  <th>
                    Status
                  </th>
                  <th>
                    Description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <code>
                      CANCELED
                    </code>
                  </td>
                  <td>
                    The order and all of its rewards were canceled.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      CART
                    </code>
                  </td>
                  <td>
                    The order has been created, but hasn't yet been processed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      EXECUTED
                    </code>
                  </td>
                  <td>
                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      FAILED
                    </code>
                  </td>
                  <td>
                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but needs approval to be executed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING INTERNAL PAYMENT APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but it is under review and requires approval from our team.
                  </td>
                </tr>

              </tbody>
            </table>
          type: string
          enum:
            - CANCELED
            - CART
            - EXECUTED
            - FAILED
            - PENDING APPROVAL
            - PENDING INTERNAL PAYMENT APPROVAL
          readOnly: true
        payment:
          description: >-
            Cost breakdown of the order (cost of rewards + fees). Cost and fees
            are always denominated in USD, independent from the currency of the
            ordered rewards.

            Note that this property will only appear for processed orders
            (`status` is `EXECUTED`).
          type: object
          properties:
            subtotal:
              description: Total price of the order before fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 50
            total:
              description: Total price of the order including fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 52.5
            fees:
              description: Fees for the order (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 2.5
            refund:
              description: >
                Breakdown of the order refunds (total amount in USD, independent
                from the currency of the ordered rewards).

                Note that this property will only appear for canceled orders or
                orders with canceled rewards.
              type: object
              properties:
                total:
                  description: Total amount of the order refunds (in USD)
                  type: number
                  format: double
                  minimum: 0
                  readOnly: true
                  example: 52.5
              required:
                - total
            channel:
              description: Name of the channel in which the order was created
              type: string
              enum:
                - UI
                - API
                - EMBED
                - DECIPHER
                - QUALTRICS
                - TYPEFORM
                - SURVEY MONKEY
        invoice_id:
          description: The ID for the invoice associated with this order
          type: string
          readOnly: true
          example: 2E59A82B-0001
      required:
        - id
        - created_at
        - status
    OrderWithoutLink:
      description: An order wraps around the fulfilment of one or more rewards.
      type: object
      properties:
        id:
          description: Tremendous ID of the order
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        external_id:
          description: >
            Reference for this order, supplied by the customer.


            When set, `external_id` makes order idempotent. All requests that
            use the same `external_id`

            after the initial order creation, will result in a response that
            returns the data of the

            initially created order. The response will have a `201` response
            code. These responses

            **fail** to create any further orders.


            It also allows for retrieving by `external_id` instead of `id` only.
          type: string
          nullable: true
          example: Your-Individual-Identifier-for-This-Order
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: IVM0I3WNJJL0
          readOnly: true
          nullable: true
        created_at:
          description: Date the order has been created
          type: string
          format: date-time
          readOnly: true
        status:
          description: |
            Execution status of a given order

            <table>
              <thead>
                <tr>
                  <th>
                    Status
                  </th>
                  <th>
                    Description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <code>
                      CANCELED
                    </code>
                  </td>
                  <td>
                    The order and all of its rewards were canceled.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      CART
                    </code>
                  </td>
                  <td>
                    The order has been created, but hasn't yet been processed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      EXECUTED
                    </code>
                  </td>
                  <td>
                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      FAILED
                    </code>
                  </td>
                  <td>
                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but needs approval to be executed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING INTERNAL PAYMENT APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but it is under review and requires approval from our team.
                  </td>
                </tr>

              </tbody>
            </table>
          type: string
          enum:
            - CANCELED
            - CART
            - EXECUTED
            - FAILED
            - PENDING APPROVAL
            - PENDING INTERNAL PAYMENT APPROVAL
          readOnly: true
        payment:
          description: >-
            Cost breakdown of the order (cost of rewards + fees). Cost and fees
            are always denominated in USD, independent from the currency of the
            ordered rewards.

            Note that this property will only appear for processed orders
            (`status` is `EXECUTED`).
          type: object
          properties:
            subtotal:
              description: Total price of the order before fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 50
            total:
              description: Total price of the order including fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 52.5
            fees:
              description: Fees for the order (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 2.5
            refund:
              description: >
                Breakdown of the order refunds (total amount in USD, independent
                from the currency of the ordered rewards).

                Note that this property will only appear for canceled orders or
                orders with canceled rewards.
              type: object
              properties:
                total:
                  description: Total amount of the order refunds (in USD)
                  type: number
                  format: double
                  minimum: 0
                  readOnly: true
                  example: 52.5
              required:
                - total
            channel:
              description: Name of the channel in which the order was created
              type: string
              enum:
                - UI
                - API
                - EMBED
                - DECIPHER
                - QUALTRICS
                - TYPEFORM
                - SURVEY MONKEY
        invoice_id:
          description: The ID for the invoice associated with this order
          type: string
          readOnly: true
          example: 2E59A82B-0001
        reward:
          description: >
            A single reward, sent to a recipient. A reward is always part of an
            order.


            Either `products` or `campaign_id` must be specified.
          type: object
          properties:
            id:
              description: Tremendous ID of the reward
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            order_id:
              description: Tremendous ID of the order this reward is part of.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            created_at:
              description: Date the reward was created
              type: string
              format: date-time
              readOnly: true
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              nullable: true
              writeOnly: true
            products:
              description: >
                List of IDs of product (different gift cards, charity, etc.)
                that will be available

                to the recipient to choose from.


                Providing a `products` array will override the products made
                available by the campaign

                specified using the `campaign_id` property unless the `products`
                array is empty. It will

                _not_ override other campaign attributes, like the message and
                customization of the look and feel.
              type: array
              writeOnly: true
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                writeOnly: true
              minItems: 1
            value:
              type: object
              properties:
                denomination:
                  description: Amount of the reward
                  type: number
                  format: double
                currency_code:
                  description: Currency of the reward
                  type: string
                  enum:
                    - USD
                    - CAD
                    - EUR
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ARS
                    - AUD
                    - AZN
                    - BAM
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BND
                    - BOB
                    - BRL
                    - BWP
                    - BYR
                    - BZD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EEK
                    - EGP
                    - ERN
                    - ETB
                    - GBP
                    - GEL
                    - GHS
                    - GNF
                    - GTQ
                    - HKD
                    - HNL
                    - HRK
                    - HUF
                    - IDR
                    - ILS
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KHR
                    - KRW
                    - KWD
                    - KZT
                    - LBP
                    - LKR
                    - LTL
                    - LVL
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MOP
                    - MUR
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SDG
                    - SEK
                    - SGD
                    - SOS
                    - SYP
                    - THB
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - XAF
                    - XOF
                    - YER
                    - ZAR
                    - ZMK
                  example: USD
              required:
                - denomination
                - currency_code
              example:
                denomination: 50
                currency_code: USD
            recipient:
              description: Details of the recipient of the reward
              type: object
              properties:
                name:
                  description: Name of the recipient
                  type: string
                  example: John Doe Jr.
                email:
                  description: Email address of the recipient
                  type: string
                  example: john.doe@example.com
                phone:
                  description: >-
                    Phone number of the recipient. For non-US phone numbers,
                    specify the country code (prefixed with +).
                  type: string
                  example: 123-456-7890
            deliver_at:
              description: >-
                Timestamp of reward delivery within the next year. Note that if
                date-time is provided, the time values will be ignored.
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: '2023-12-31'
            custom_fields:
              type: array
              items:
                description: >-
                  Reward custom data for searching, tracking or copy (see
                  [Adding custom fields to
                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                type: object
                properties:
                  id:
                    description: Tremendous ID of the custom field
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                    readOnly: false
                  value:
                    description: Value of the custom field
                    type: string
                    example: Hufflepuff
                    readOnly: false
                    nullable: true
                  label:
                    description: Label of the custom field
                    type: string
                    example: harry_potter_house
                    readOnly: false
            delivery:
              description: |
                Details on how the reward is delivered to the recipient.
              type: object
              properties:
                method:
                  description: |
                    How to deliver the reward to the recipient.

                    <table>
                      <thead>
                        <tr>
                          <th>Delivery Method</th>
                          <th>Description</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><code>EMAIL</code></td>
                          <td>Deliver the reward to the recipient by email</td>
                        </tr>
                        <tr>
                          <td><code>LINK</code></td>
                          <td>
                            <p>Deliver the reward to the recipient via a link.</p>
                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                          </td>
                        </tr>
                        <tr>
                          <td><code>PHONE</code></td>
                          <td>Deliver the reward to the recipient by SMS</td>
                        </tr>
                      </tbody>
                    </table>
                  type: string
                  enum:
                    - EMAIL
                    - LINK
                    - PHONE
                status:
                  description: >
                    Current status of the delivery of the reward:


                    * `SCHEDULED` - Reward is scheduled for delivery and will be
                    delivered soon.

                    * `FAILED` - Delivery of reward failed (e.g. email bounced).

                    * `SUCCEEDED` - Reward was successfully delivered (email or
                    text message delivered or reward link opened).

                    * `PENDING` - Delivery is pending but not yet scheduled.
                  type: string
                  enum:
                    - SCHEDULED
                    - FAILED
                    - SUCCEEDED
                    - PENDING
                  readOnly: true
              required:
                - method
                - status
      required:
        - id
        - created_at
        - status
    RewardForOrderCreate:
      description: >
        A single reward, sent to a recipient. A reward is always part of an
        order.


        Either `products` or `campaign_id` must be specified.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        order_id:
          description: Tremendous ID of the order this reward is part of.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        created_at:
          description: Date the reward was created
          type: string
          format: date-time
          readOnly: true
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: false
          nullable: true
          writeOnly: true
        products:
          description: >
            List of IDs of product (different gift cards, charity, etc.) that
            will be available

            to the recipient to choose from.


            Providing a `products` array will override the products made
            available by the campaign

            specified using the `campaign_id` property unless the `products`
            array is empty. It will

            _not_ override other campaign attributes, like the message and
            customization of the look and feel.
          type: array
          writeOnly: true
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            writeOnly: true
          minItems: 1
        value:
          type: object
          properties:
            denomination:
              description: Amount of the reward
              type: number
              format: double
            currency_code:
              description: Currency of the reward
              type: string
              enum:
                - USD
                - CAD
                - EUR
                - AED
                - AFN
                - ALL
                - AMD
                - ARS
                - AUD
                - AZN
                - BAM
                - BDT
                - BGN
                - BHD
                - BIF
                - BND
                - BOB
                - BRL
                - BWP
                - BYR
                - BZD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EEK
                - EGP
                - ERN
                - ETB
                - GBP
                - GEL
                - GHS
                - GNF
                - GTQ
                - HKD
                - HNL
                - HRK
                - HUF
                - IDR
                - ILS
                - INR
                - IQD
                - IRR
                - ISK
                - JMD
                - JOD
                - JPY
                - KES
                - KHR
                - KRW
                - KWD
                - KZT
                - LBP
                - LKR
                - LTL
                - LVL
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MOP
                - MUR
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SDG
                - SEK
                - SGD
                - SOS
                - SYP
                - THB
                - TND
                - TOP
                - TRY
                - TTD
                - TWD
                - TZS
                - UAH
                - UGX
                - UYU
                - UZS
                - VEF
                - VND
                - XAF
                - XOF
                - YER
                - ZAR
                - ZMK
              example: USD
          required:
            - denomination
            - currency_code
          example:
            denomination: 50
            currency_code: USD
        recipient:
          description: Details of the recipient of the reward
          type: object
          properties:
            name:
              description: Name of the recipient
              type: string
              example: John Doe Jr.
            email:
              description: Email address of the recipient
              type: string
              example: john.doe@example.com
            phone:
              description: >-
                Phone number of the recipient. For non-US phone numbers, specify
                the country code (prefixed with +).
              type: string
              example: 123-456-7890
        deliver_at:
          description: >-
            Timestamp of reward delivery within the next year. Note that if
            date-time is provided, the time values will be ignored.
          type: string
          format: date
          pattern: YYYY-MM-DD
          example: '2023-12-31'
        custom_fields:
          type: array
          items:
            description: >-
              Reward custom data for searching, tracking or copy (see [Adding
              custom fields to
              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
            type: object
            properties:
              id:
                description: Tremendous ID of the custom field
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
              value:
                description: Value of the custom field
                type: string
                example: Hufflepuff
                readOnly: false
                nullable: true
              label:
                description: Label of the custom field
                type: string
                example: harry_potter_house
                readOnly: false
        language:
          description: >
            Set this to translate the redemption experience for this reward.
            Pass a 2-letter [ISO-639-1
            code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for the
            desired language. Defaults to `en`.
          type: string
          example: de
        delivery:
          description: |
            Details on how the reward is delivered to the recipient.
          type: object
          properties:
            method:
              description: |
                How to deliver the reward to the recipient.

                <table>
                  <thead>
                    <tr>
                      <th>Delivery Method</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>EMAIL</code></td>
                      <td>Deliver the reward to the recipient by email</td>
                    </tr>
                    <tr>
                      <td><code>LINK</code></td>
                      <td>
                        <p>Deliver the reward to the recipient via a link.</p>
                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                      </td>
                    </tr>
                    <tr>
                      <td><code>PHONE</code></td>
                      <td>Deliver the reward to the recipient by SMS</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - EMAIL
                - LINK
                - PHONE
    OrderForCreate:
      type: object
      properties:
        external_id:
          description: >
            Reference for this order, supplied by the customer.


            When set, `external_id` makes order idempotent. All requests that
            use the same `external_id`

            after the initial order creation, will result in a response that
            returns the data of the

            initially created order. The response will have a `201` response
            code. These responses

            **fail** to create any further orders.


            It also allows for retrieving by `external_id` instead of `id` only.
          type: string
          nullable: true
          example: Your-Individual-Identifier-for-This-Order
        payment:
          type: object
          properties:
            funding_source_id:
              description: >-
                Tremendous ID of the funding source that will be used to pay for
                the order. Use `balance` to use your Tremendous's balance.
              type: string
          required:
            - funding_source_id
        reward:
          description: >
            A single reward, sent to a recipient. A reward is always part of an
            order.


            Either `products` or `campaign_id` must be specified.
          type: object
          properties:
            id:
              description: Tremendous ID of the reward
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            order_id:
              description: Tremendous ID of the order this reward is part of.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            created_at:
              description: Date the reward was created
              type: string
              format: date-time
              readOnly: true
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              nullable: true
              writeOnly: true
            products:
              description: >
                List of IDs of product (different gift cards, charity, etc.)
                that will be available

                to the recipient to choose from.


                Providing a `products` array will override the products made
                available by the campaign

                specified using the `campaign_id` property unless the `products`
                array is empty. It will

                _not_ override other campaign attributes, like the message and
                customization of the look and feel.
              type: array
              writeOnly: true
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                writeOnly: true
              minItems: 1
            value:
              type: object
              properties:
                denomination:
                  description: Amount of the reward
                  type: number
                  format: double
                currency_code:
                  description: Currency of the reward
                  type: string
                  enum:
                    - USD
                    - CAD
                    - EUR
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ARS
                    - AUD
                    - AZN
                    - BAM
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BND
                    - BOB
                    - BRL
                    - BWP
                    - BYR
                    - BZD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EEK
                    - EGP
                    - ERN
                    - ETB
                    - GBP
                    - GEL
                    - GHS
                    - GNF
                    - GTQ
                    - HKD
                    - HNL
                    - HRK
                    - HUF
                    - IDR
                    - ILS
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KHR
                    - KRW
                    - KWD
                    - KZT
                    - LBP
                    - LKR
                    - LTL
                    - LVL
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MOP
                    - MUR
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SDG
                    - SEK
                    - SGD
                    - SOS
                    - SYP
                    - THB
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - XAF
                    - XOF
                    - YER
                    - ZAR
                    - ZMK
                  example: USD
              required:
                - denomination
                - currency_code
              example:
                denomination: 50
                currency_code: USD
            recipient:
              description: Details of the recipient of the reward
              type: object
              properties:
                name:
                  description: Name of the recipient
                  type: string
                  example: John Doe Jr.
                email:
                  description: Email address of the recipient
                  type: string
                  example: john.doe@example.com
                phone:
                  description: >-
                    Phone number of the recipient. For non-US phone numbers,
                    specify the country code (prefixed with +).
                  type: string
                  example: 123-456-7890
            deliver_at:
              description: >-
                Timestamp of reward delivery within the next year. Note that if
                date-time is provided, the time values will be ignored.
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: '2023-12-31'
            custom_fields:
              type: array
              items:
                description: >-
                  Reward custom data for searching, tracking or copy (see
                  [Adding custom fields to
                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                type: object
                properties:
                  id:
                    description: Tremendous ID of the custom field
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                    readOnly: false
                  value:
                    description: Value of the custom field
                    type: string
                    example: Hufflepuff
                    readOnly: false
                    nullable: true
                  label:
                    description: Label of the custom field
                    type: string
                    example: harry_potter_house
                    readOnly: false
            language:
              description: >
                Set this to translate the redemption experience for this reward.
                Pass a 2-letter [ISO-639-1
                code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for
                the desired language. Defaults to `en`.
              type: string
              example: de
            delivery:
              description: |
                Details on how the reward is delivered to the recipient.
              type: object
              properties:
                method:
                  description: |
                    How to deliver the reward to the recipient.

                    <table>
                      <thead>
                        <tr>
                          <th>Delivery Method</th>
                          <th>Description</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><code>EMAIL</code></td>
                          <td>Deliver the reward to the recipient by email</td>
                        </tr>
                        <tr>
                          <td><code>LINK</code></td>
                          <td>
                            <p>Deliver the reward to the recipient via a link.</p>
                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                          </td>
                        </tr>
                        <tr>
                          <td><code>PHONE</code></td>
                          <td>Deliver the reward to the recipient by SMS</td>
                        </tr>
                      </tbody>
                    </table>
                  type: string
                  enum:
                    - EMAIL
                    - LINK
                    - PHONE
      required:
        - payment
        - reward
    DeliveryDetailsWithLink:
      description: |
        Details on how the reward is delivered to the recipient.
      type: object
      properties:
        method:
          description: |
            How to deliver the reward to the recipient.

            <table>
              <thead>
                <tr>
                  <th>Delivery Method</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><code>EMAIL</code></td>
                  <td>Deliver the reward to the recipient by email</td>
                </tr>
                <tr>
                  <td><code>LINK</code></td>
                  <td>
                    <p>Deliver the reward to the recipient via a link.</p>
                    <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                  </td>
                </tr>
                <tr>
                  <td><code>PHONE</code></td>
                  <td>Deliver the reward to the recipient by SMS</td>
                </tr>
              </tbody>
            </table>
          type: string
          enum:
            - EMAIL
            - LINK
            - PHONE
        status:
          description: >
            Current status of the delivery of the reward:


            * `SCHEDULED` - Reward is scheduled for delivery and will be
            delivered soon.

            * `FAILED` - Delivery of reward failed (e.g. email bounced).

            * `SUCCEEDED` - Reward was successfully delivered (email or text
            message delivered or reward link opened).

            * `PENDING` - Delivery is pending but not yet scheduled.
          type: string
          enum:
            - SCHEDULED
            - FAILED
            - SUCCEEDED
            - PENDING
          readOnly: true
        link:
          description: >
            Link to redeem the reward at. You need to deliver this link to the
            recipient.


            Only available for rewards for which the `method` for delivery is
            set to `LINK`.
          type: string
          example: https://testflight.tremendous.com/rewards/payout/z67jic92r
          readOnly: true
      required:
        - method
        - status
    RewardWithLink:
      description: >
        A single reward, sent to a recipient. A reward is always part of an
        order.


        Either `products` or `campaign_id` must be specified.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        order_id:
          description: Tremendous ID of the order this reward is part of.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        created_at:
          description: Date the reward was created
          type: string
          format: date-time
          readOnly: true
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: false
          nullable: true
          writeOnly: true
        products:
          description: >
            List of IDs of product (different gift cards, charity, etc.) that
            will be available

            to the recipient to choose from.


            Providing a `products` array will override the products made
            available by the campaign

            specified using the `campaign_id` property unless the `products`
            array is empty. It will

            _not_ override other campaign attributes, like the message and
            customization of the look and feel.
          type: array
          writeOnly: true
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            writeOnly: true
          minItems: 1
        value:
          type: object
          properties:
            denomination:
              description: Amount of the reward
              type: number
              format: double
            currency_code:
              description: Currency of the reward
              type: string
              enum:
                - USD
                - CAD
                - EUR
                - AED
                - AFN
                - ALL
                - AMD
                - ARS
                - AUD
                - AZN
                - BAM
                - BDT
                - BGN
                - BHD
                - BIF
                - BND
                - BOB
                - BRL
                - BWP
                - BYR
                - BZD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EEK
                - EGP
                - ERN
                - ETB
                - GBP
                - GEL
                - GHS
                - GNF
                - GTQ
                - HKD
                - HNL
                - HRK
                - HUF
                - IDR
                - ILS
                - INR
                - IQD
                - IRR
                - ISK
                - JMD
                - JOD
                - JPY
                - KES
                - KHR
                - KRW
                - KWD
                - KZT
                - LBP
                - LKR
                - LTL
                - LVL
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MOP
                - MUR
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SDG
                - SEK
                - SGD
                - SOS
                - SYP
                - THB
                - TND
                - TOP
                - TRY
                - TTD
                - TWD
                - TZS
                - UAH
                - UGX
                - UYU
                - UZS
                - VEF
                - VND
                - XAF
                - XOF
                - YER
                - ZAR
                - ZMK
              example: USD
          required:
            - denomination
            - currency_code
          example:
            denomination: 50
            currency_code: USD
        recipient:
          description: Details of the recipient of the reward
          type: object
          properties:
            name:
              description: Name of the recipient
              type: string
              example: John Doe Jr.
            email:
              description: Email address of the recipient
              type: string
              example: john.doe@example.com
            phone:
              description: >-
                Phone number of the recipient. For non-US phone numbers, specify
                the country code (prefixed with +).
              type: string
              example: 123-456-7890
        deliver_at:
          description: >-
            Timestamp of reward delivery within the next year. Note that if
            date-time is provided, the time values will be ignored.
          type: string
          format: date
          pattern: YYYY-MM-DD
          example: '2023-12-31'
        custom_fields:
          type: array
          items:
            description: >-
              Reward custom data for searching, tracking or copy (see [Adding
              custom fields to
              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
            type: object
            properties:
              id:
                description: Tremendous ID of the custom field
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
              value:
                description: Value of the custom field
                type: string
                example: Hufflepuff
                readOnly: false
                nullable: true
              label:
                description: Label of the custom field
                type: string
                example: harry_potter_house
                readOnly: false
        delivery:
          description: |
            Details on how the reward is delivered to the recipient.
          type: object
          properties:
            method:
              description: |
                How to deliver the reward to the recipient.

                <table>
                  <thead>
                    <tr>
                      <th>Delivery Method</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>EMAIL</code></td>
                      <td>Deliver the reward to the recipient by email</td>
                    </tr>
                    <tr>
                      <td><code>LINK</code></td>
                      <td>
                        <p>Deliver the reward to the recipient via a link.</p>
                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                      </td>
                    </tr>
                    <tr>
                      <td><code>PHONE</code></td>
                      <td>Deliver the reward to the recipient by SMS</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - EMAIL
                - LINK
                - PHONE
            status:
              description: >
                Current status of the delivery of the reward:


                * `SCHEDULED` - Reward is scheduled for delivery and will be
                delivered soon.

                * `FAILED` - Delivery of reward failed (e.g. email bounced).

                * `SUCCEEDED` - Reward was successfully delivered (email or text
                message delivered or reward link opened).

                * `PENDING` - Delivery is pending but not yet scheduled.
              type: string
              enum:
                - SCHEDULED
                - FAILED
                - SUCCEEDED
                - PENDING
              readOnly: true
            link:
              description: >
                Link to redeem the reward at. You need to deliver this link to
                the recipient.


                Only available for rewards for which the `method` for delivery
                is set to `LINK`.
              type: string
              example: https://testflight.tremendous.com/rewards/payout/z67jic92r
              readOnly: true
          required:
            - method
            - status
    OrderWithLink:
      description: An order wraps around the fulfilment of one or more rewards.
      type: object
      properties:
        id:
          description: Tremendous ID of the order
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        external_id:
          description: >
            Reference for this order, supplied by the customer.


            When set, `external_id` makes order idempotent. All requests that
            use the same `external_id`

            after the initial order creation, will result in a response that
            returns the data of the

            initially created order. The response will have a `201` response
            code. These responses

            **fail** to create any further orders.


            It also allows for retrieving by `external_id` instead of `id` only.
          type: string
          nullable: true
          example: Your-Individual-Identifier-for-This-Order
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: IVM0I3WNJJL0
          readOnly: true
          nullable: true
        created_at:
          description: Date the order has been created
          type: string
          format: date-time
          readOnly: true
        status:
          description: |
            Execution status of a given order

            <table>
              <thead>
                <tr>
                  <th>
                    Status
                  </th>
                  <th>
                    Description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <code>
                      CANCELED
                    </code>
                  </td>
                  <td>
                    The order and all of its rewards were canceled.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      CART
                    </code>
                  </td>
                  <td>
                    The order has been created, but hasn't yet been processed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      EXECUTED
                    </code>
                  </td>
                  <td>
                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      FAILED
                    </code>
                  </td>
                  <td>
                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but needs approval to be executed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING INTERNAL PAYMENT APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but it is under review and requires approval from our team.
                  </td>
                </tr>

              </tbody>
            </table>
          type: string
          enum:
            - CANCELED
            - CART
            - EXECUTED
            - FAILED
            - PENDING APPROVAL
            - PENDING INTERNAL PAYMENT APPROVAL
          readOnly: true
        payment:
          description: >-
            Cost breakdown of the order (cost of rewards + fees). Cost and fees
            are always denominated in USD, independent from the currency of the
            ordered rewards.

            Note that this property will only appear for processed orders
            (`status` is `EXECUTED`).
          type: object
          properties:
            subtotal:
              description: Total price of the order before fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 50
            total:
              description: Total price of the order including fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 52.5
            fees:
              description: Fees for the order (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 2.5
            refund:
              description: >
                Breakdown of the order refunds (total amount in USD, independent
                from the currency of the ordered rewards).

                Note that this property will only appear for canceled orders or
                orders with canceled rewards.
              type: object
              properties:
                total:
                  description: Total amount of the order refunds (in USD)
                  type: number
                  format: double
                  minimum: 0
                  readOnly: true
                  example: 52.5
              required:
                - total
            channel:
              description: Name of the channel in which the order was created
              type: string
              enum:
                - UI
                - API
                - EMBED
                - DECIPHER
                - QUALTRICS
                - TYPEFORM
                - SURVEY MONKEY
        invoice_id:
          description: The ID for the invoice associated with this order
          type: string
          readOnly: true
          example: 2E59A82B-0001
        rewards:
          type: array
          minItems: 1
          items:
            description: >
              A single reward, sent to a recipient. A reward is always part of
              an order.


              Either `products` or `campaign_id` must be specified.
            type: object
            properties:
              id:
                description: Tremendous ID of the reward
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
              order_id:
                description: Tremendous ID of the order this reward is part of.
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
              created_at:
                description: Date the reward was created
                type: string
                format: date-time
                readOnly: true
              campaign_id:
                description: >
                  ID of the campaign in your account, that defines the available
                  products (different gift cards, charity, etc.)

                  that the recipient can choose from.
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                nullable: true
                writeOnly: true
              products:
                description: >
                  List of IDs of product (different gift cards, charity, etc.)
                  that will be available

                  to the recipient to choose from.


                  Providing a `products` array will override the products made
                  available by the campaign

                  specified using the `campaign_id` property unless the
                  `products` array is empty. It will

                  _not_ override other campaign attributes, like the message and
                  customization of the look and feel.
                type: array
                writeOnly: true
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  writeOnly: true
                minItems: 1
              value:
                type: object
                properties:
                  denomination:
                    description: Amount of the reward
                    type: number
                    format: double
                  currency_code:
                    description: Currency of the reward
                    type: string
                    enum:
                      - USD
                      - CAD
                      - EUR
                      - AED
                      - AFN
                      - ALL
                      - AMD
                      - ARS
                      - AUD
                      - AZN
                      - BAM
                      - BDT
                      - BGN
                      - BHD
                      - BIF
                      - BND
                      - BOB
                      - BRL
                      - BWP
                      - BYR
                      - BZD
                      - CDF
                      - CHF
                      - CLP
                      - CNY
                      - COP
                      - CRC
                      - CVE
                      - CZK
                      - DJF
                      - DKK
                      - DOP
                      - DZD
                      - EEK
                      - EGP
                      - ERN
                      - ETB
                      - GBP
                      - GEL
                      - GHS
                      - GNF
                      - GTQ
                      - HKD
                      - HNL
                      - HRK
                      - HUF
                      - IDR
                      - ILS
                      - INR
                      - IQD
                      - IRR
                      - ISK
                      - JMD
                      - JOD
                      - JPY
                      - KES
                      - KHR
                      - KRW
                      - KWD
                      - KZT
                      - LBP
                      - LKR
                      - LTL
                      - LVL
                      - MAD
                      - MDL
                      - MGA
                      - MKD
                      - MMK
                      - MOP
                      - MUR
                      - MXN
                      - MYR
                      - MZN
                      - NAD
                      - NGN
                      - NIO
                      - NOK
                      - NPR
                      - NZD
                      - OMR
                      - PAB
                      - PEN
                      - PHP
                      - PKR
                      - PLN
                      - PYG
                      - QAR
                      - RON
                      - RSD
                      - RUB
                      - RWF
                      - SAR
                      - SDG
                      - SEK
                      - SGD
                      - SOS
                      - SYP
                      - THB
                      - TND
                      - TOP
                      - TRY
                      - TTD
                      - TWD
                      - TZS
                      - UAH
                      - UGX
                      - UYU
                      - UZS
                      - VEF
                      - VND
                      - XAF
                      - XOF
                      - YER
                      - ZAR
                      - ZMK
                    example: USD
                required:
                  - denomination
                  - currency_code
                example:
                  denomination: 50
                  currency_code: USD
              recipient:
                description: Details of the recipient of the reward
                type: object
                properties:
                  name:
                    description: Name of the recipient
                    type: string
                    example: John Doe Jr.
                  email:
                    description: Email address of the recipient
                    type: string
                    example: john.doe@example.com
                  phone:
                    description: >-
                      Phone number of the recipient. For non-US phone numbers,
                      specify the country code (prefixed with +).
                    type: string
                    example: 123-456-7890
              deliver_at:
                description: >-
                  Timestamp of reward delivery within the next year. Note that
                  if date-time is provided, the time values will be ignored.
                type: string
                format: date
                pattern: YYYY-MM-DD
                example: '2023-12-31'
              custom_fields:
                type: array
                items:
                  description: >-
                    Reward custom data for searching, tracking or copy (see
                    [Adding custom fields to
                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                  type: object
                  properties:
                    id:
                      description: Tremendous ID of the custom field
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      readOnly: false
                    value:
                      description: Value of the custom field
                      type: string
                      example: Hufflepuff
                      readOnly: false
                      nullable: true
                    label:
                      description: Label of the custom field
                      type: string
                      example: harry_potter_house
                      readOnly: false
              delivery:
                description: |
                  Details on how the reward is delivered to the recipient.
                type: object
                properties:
                  method:
                    description: |
                      How to deliver the reward to the recipient.

                      <table>
                        <thead>
                          <tr>
                            <th>Delivery Method</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><code>EMAIL</code></td>
                            <td>Deliver the reward to the recipient by email</td>
                          </tr>
                          <tr>
                            <td><code>LINK</code></td>
                            <td>
                              <p>Deliver the reward to the recipient via a link.</p>
                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                            </td>
                          </tr>
                          <tr>
                            <td><code>PHONE</code></td>
                            <td>Deliver the reward to the recipient by SMS</td>
                          </tr>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - EMAIL
                      - LINK
                      - PHONE
                  status:
                    description: >
                      Current status of the delivery of the reward:


                      * `SCHEDULED` - Reward is scheduled for delivery and will
                      be delivered soon.

                      * `FAILED` - Delivery of reward failed (e.g. email
                      bounced).

                      * `SUCCEEDED` - Reward was successfully delivered (email
                      or text message delivered or reward link opened).

                      * `PENDING` - Delivery is pending but not yet scheduled.
                    type: string
                    enum:
                      - SCHEDULED
                      - FAILED
                      - SUCCEEDED
                      - PENDING
                    readOnly: true
                  link:
                    description: >
                      Link to redeem the reward at. You need to deliver this
                      link to the recipient.


                      Only available for rewards for which the `method` for
                      delivery is set to `LINK`.
                    type: string
                    example: https://testflight.tremendous.com/rewards/payout/z67jic92r
                    readOnly: true
                required:
                  - method
                  - status
      required:
        - id
        - created_at
        - status
    Product:
      description: >
        A product represents one way to payout a reward to it's recipient.
        Think:


        * Amazon.com gift card (ID: `OKMHM2X2OHYV`)

        * Donations to Save the Children (ID: `ESRNAD533W5A`)

        * Virtual Visa debit card (ID: `Q24BD9EZ332JT`)


        each of which is one specific product on Tremendous.


        > 📘 All available products

        >

        > See this [list](https://www.tremendous.com/catalog)


        Products can be limited in their availability to recipients by


        * geography (field `countries`)

        * currency (field `currencies`)

        * amount of the reward (field `skus`)
          * e.g. adidas gift cards accept any amount between 5 and 200 USD.

        See the description of each respective parameter for further details.
      type: object
      required:
        - id
        - name
        - description
        - category
        - disclosure
        - currency_codes
        - countries
        - images
      properties:
        description:
          description: >-
            Detailed description of the product. Mostly used for products with a
            `category` of `charities`.
          type: string
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        name:
          description: Name of the product
          type: string
        category:
          description: |
            The category of this product

            <table>
              <thead>
                <tr>
                  <th>Category</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><code>ach</code></td>
                  <td>Bank transfer to the recipient</td>
                </tr>
                <tr>
                  <td><code>charity</code></td>
                  <td>Donations to a charity</td>
                </tr>
                <tr>
                  <td><code>merchant_card</code></td>
                  <td>A gift card for a certain merchant (e.g. Amazon)</td>
                </tr>
                <tr>
                  <td><code>paypal</code></td>
                  <td>Payout via PayPal</td>
                </tr>
                <tr>
                  <td><code>venmo</code></td>
                  <td>Payout via Venmo</td>
                </tr>
                <tr>
                  <td><code>visa_card</code></td>
                  <td>Payout in form of a Visa debit card</td>
                </tr>
              </tbody>
            </table>
          type: string
          enum:
            - ach
            - charity
            - merchant_card
            - paypal
            - venmo
            - visa_card
          example: charities
        disclosure:
          description: Legal disclosures for this product. Can be in HTML format.
          type: string
          example: >-
            <ul><li><p>This card may not be exchanged for
            cash.</p></li><li><p>…</p></li></ul>
        skus:
          description: >
            Products may are restricted in their usage based on the amount of
            the reward. The `skus` array defines bands of denominations in which
            this product may be used for payouts.
          type: array
          items:
            type: object
            required:
              - min
              - max
            properties:
              min:
                description: >-
                  Minimal denomination that this product supports (in the
                  product's currency)
                type: number
                minimum: 0
                example: 20
              max:
                description: >-
                  Maximum denomination that this product supports (in the
                  product's currency)
                type: number
                minimum: 0
                example: 100
            example:
              - min: 20
                max: 100
            minItems: 0
        currency_codes:
          description: Available currencies for this product
          type: array
          minItems: 1
          items:
            type: string
            enum:
              - USD
              - CAD
              - EUR
              - AED
              - AFN
              - ALL
              - AMD
              - ARS
              - AUD
              - AZN
              - BAM
              - BDT
              - BGN
              - BHD
              - BIF
              - BND
              - BOB
              - BRL
              - BWP
              - BYR
              - BZD
              - CDF
              - CHF
              - CLP
              - CNY
              - COP
              - CRC
              - CVE
              - CZK
              - DJF
              - DKK
              - DOP
              - DZD
              - EEK
              - EGP
              - ERN
              - ETB
              - GBP
              - GEL
              - GHS
              - GNF
              - GTQ
              - HKD
              - HNL
              - HRK
              - HUF
              - IDR
              - ILS
              - INR
              - IQD
              - IRR
              - ISK
              - JMD
              - JOD
              - JPY
              - KES
              - KHR
              - KRW
              - KWD
              - KZT
              - LBP
              - LKR
              - LTL
              - LVL
              - MAD
              - MDL
              - MGA
              - MKD
              - MMK
              - MOP
              - MUR
              - MXN
              - MYR
              - MZN
              - NAD
              - NGN
              - NIO
              - NOK
              - NPR
              - NZD
              - OMR
              - PAB
              - PEN
              - PHP
              - PKR
              - PLN
              - PYG
              - QAR
              - RON
              - RSD
              - RUB
              - RWF
              - SAR
              - SDG
              - SEK
              - SGD
              - SOS
              - SYP
              - THB
              - TND
              - TOP
              - TRY
              - TTD
              - TWD
              - TZS
              - UAH
              - UGX
              - UYU
              - UZS
              - VEF
              - VND
              - XAF
              - XOF
              - YER
              - ZAR
              - ZMK
            example: USD
        countries:
          description: List of countries in which this product is available to recipients.
          type: array
          items:
            type: object
            required:
              - abbr
            properties:
              abbr:
                description: ISO 3166 country code
                type: string
                example: US
          minItems: 1
          example:
            - abbr: US
        images:
          description: >-
            List of product images associated with this product (e.g. logos or
            images of the gift cards)
          type: array
          items:
            type: object
            properties:
              src:
                description: URL to this image
                type: string
                format: uri
              type:
                description: Type of image
                type: string
                enum:
                  - card
                  - logo
            required:
              - src
              - type
          minItems: 0
          example:
            - src: https://example.com/some-logo.jpg
              type: logo
    Campaign:
      description: >
        With a campaign you can define the look & feel of how rewards are sent
        out.

        It also lets you set the available products (different gift cards,
        charity, etc.)

        recipients can choose from.


        > Note: Campaigns must be created from the Tremendous dashboard.

        >

        > • [Production Dashboard](https://app.tremendous.com)

        > • [Sandbox Dashboard](https://app.testflight.tremendous.com/)
      type: object
      required:
        - id
        - name
        - description
        - products
      properties:
        description:
          description: Description of the campaign
          type: string
          example: A campaign I use as the default in Tremendous"
          nullable: true
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        name:
          description: Name of the campaign
          type: string
          example: My Default Campaign
        products:
          description: >
            List of IDs of products (different gift cards, charity, etc.) that
            are available in this campaign.
          type: array
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          example:
            - P3MR06THYM8R
            - EFMULTF26PMR
    FundingSource:
      description: ''
      type: object
      required:
        - id
        - method
        - meta
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        method:
          description: >
            You can pay for rewards using different payment methods on
            Tremendous:


            <table>
              <thead>
                <tr>
                  <th>Payment Method</th>
                  <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                <tr>
                  <td><code>balance</code></td>
                  <td>Pre-funded balance in your Tremendous account to draw funds from to send rewards to recipients.</td>
                </tr>
                <tr>
                  <td><code>bank_account</code></td>
                  <td>Bank account to draw funds from to send rewards to recipients.</td>
                </tr>
                <tr>
                  <td><code>credit_card</code></td>
                  <td>Credit card to draw funds from to send rewards to recipients.</td>
                </tr>
                <tr>
                  <td><code>invoice</code></td>
                  <td>Send rewards to recipients and pay by invoice.</td>
                </tr>

              </tbody>
            </table>
          type: string
          enum:
            - balance
            - bank_account
            - credit_card
            - invoice
          example: balance
        type:
          description: |
            **Only available when `method` is set to `invoice`.**
          type: string
          enum:
            - COMMERCIAL
            - PRO_FORMA
            - PREFUNDING_ONLY
          example: COMMERCIAL
        meta:
          type: object
          properties:
            available_cents:
              description: |
                **Only available when `method` is set to `balance`.**

                Available amount for this funding source (in Cents USD)
              type: integer
              example: 50000
            pending_cents:
              description: >
                **Only available when `method` is set to `balance`.**


                Funds that are already registered on your Tremendous account but
                which have not yet been deposited in your account (e.g. unpaid
                invoices) (in Cents USD).
              type: integer
              example: 25000
            accountholder_name:
              description: >
                **Only available when `method` is set to `bank_account` or
                `credit_card`.**


                Name of the holder of the bank account or credit_card
              type: string
              example: Jane Doe
            account_type:
              description: |
                **Only available when `method` is set to `bank_account`.**

                Is this a checking or savings account
              type: string
              enum:
                - checking
                - savings
              example: checking
            bank_name:
              description: |
                **Only available when `method` is set to `bank_account`.**

                Name of the bank
              type: string
              example: Bank of Fancyland
              nullable: true
            account_number_mask:
              description: |
                **Only available when `method` is set to `bank_account`.**

                Last 4 digits of the account number
              type: string
              pattern: '[0-9]{4}'
              example: '1234'
            account_routing_mask:
              description: |
                **Only available when `method` is set to `bank_account`.**

                Last 4 digits of the routing number
              type: string
              pattern: '[0-9]{4}'
              example: '5678'
            refundable:
              description: |
                **Only available when `method` is set to `bank_account`.**

                Can refunds be deposited to this bank account
              type: boolean
              example: false
            network:
              description: |
                **Only available when `method` is set to `credit_card`.**

                Network of the credit card
              type: string
              enum:
                - MasterCard
                - Amex
                - JCB
                - Diner's Club
                - visa
                - discover
                - laser
                - elo
                - maestro
                - solo
              example: Amex
            last4:
              description: |
                **Only available when `method` is set to `credit_card`.**

                Last 4 digits of the credit card number
              type: string
              pattern: '[0-9]{4}'
              example: '1234'
            expired:
              description: |
                **Only available when `method` is set to `credit_card`.**

                Is this credit card expired
              type: boolean
              example: false
            last_payment_failed_at:
              description: >
                **Only available when `method` is set to `bank_account` or
                `credit_card`.**


                Point in time when the last order failed using this bank account
                or credit card as a funding source.
              type: string
              format: date-time
              nullable: true
    Invoice:
      description: |
        Invoices are instruments to fund your Tremendous account's balance.

        Invoices can be created by your organization programatically.
        Once we receive your payment, the invoice is marked as `PAID` and we add
        the respective funds to your account's balance.
      type: object
      required:
        - id
        - amount
        - status
        - created_at
        - paid_at
      properties:
        id:
          description: The invoice number
          type: string
          example: PPS-26873
        po_number:
          description: Reference to the purchase order number within your organization
          type: string
          nullable: true
          example: 123-PO-EE
        amount:
          description: Amount of the invoice in USD
          type: number
          format: double
          example: 50.35
        status:
          description: |
            Status of this invoice

            <table>
              <thead>
                <tr>
                  <th>Status</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><code>DELETED</code></td>
                  <td>Invoice has been deleted by your organization</td>
                </tr>
                <tr>
                  <td><code>PAID</code></td>
                  <td>Invoice has been paid by your organization</td>
                </tr>
                <tr>
                  <td><code>OPEN</code></td>
                  <td>Invoice has been created by your organization but has not been paid, yet</td>
                </tr>
              </tbody>
            </table>
          type: string
          enum:
            - DELETED
            - PAID
            - OPEN
            - MARKED_AS_PAID
          example: PAID
        orders:
          description: >-
            List of orders related to the invoice (it doesn't apply to
            prefunding)
          type: array
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          example:
            - ABC123456789
            - DEF123456789
        rewards:
          description: >-
            List of rewards related to the invoice (it doesn't apply to
            prefunding)
          type: array
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          example:
            - ABC123456789
            - DEF123456789
        created_at:
          description: |
            Timestamp of when the invoice has been created.
          type: string
          format: date
        paid_at:
          description: |
            Timestamp of when the invoice has been paid.
          type: string
          format: date
          nullable: true
    CreateInvoice:
      type: object
      properties:
        po_number:
          description: Reference to the purchase order number within your organization
          type: string
          nullable: true
          example: 123-PO-EE
        amount:
          description: Amount of the invoice in USD
          type: number
          format: double
          example: 50.35
        memo:
          description: >
            A note to be included in the invoice. This is for your internal use
            and will not be visible to the recipient.
          type: string
          nullable: true
      required:
        - amount
    BalanceTransaction:
      description: >
        A balance transaction represents a specific movement or change in an
        account's balance.
      type: object
      properties:
        description:
          description: A brief description of the transaction
          type: string
        created_at:
          description: Date that the transaction was created
          type: string
          format: date
        amount:
          description: Amount of the transaction in USD
          type: number
          format: double
          example: 50.35
        balance:
          description: >-
            The updated total after the transaction. Note that this running
            balance may be delayed and contain `null`.
          type: number
          format: double
          example: 92.48
        action:
          description: The action that was performed
          type: string
          example: Deposit
    Organization:
      description: >
        Organizations are a way to separate different parts of your business
        within the same Tremendous account.

        Your root Tremendous account is an organization itself and can have
        multiple sub-organizations.


        You can assign users in your Tremendous team as members to any
        organization. Users can be members of multiple

        organizations at once.


        Each organizations can have it's own API key.
      type: object
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        name:
          description: Name of the organization
          type: string
          example: ACME Inc.
        website:
          description: URL of the website of that organization
          type: string
          format: uri
          example: https://www.example.com/some-org
        status:
          description: >-
            Status of the organization. Organizations need to be approved to be
            able to use them to send out rewards.
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
          readOnly: true
          example: APPROVED
        created_at:
          description: >
            Timestamp of when the organization has been created.


            *This field is only returned when creating an organization.* It is
            not returned anymore when retrieving or listing organizations.
          type: string
          format: date
          readOnly: true
          example: '2021-08-02'
      required:
        - name
        - website
    CreateOrganization:
      type: object
      properties:
        name:
          description: Name of the organization
          type: string
          example: ACME Inc.
        website:
          description: URL of the website of that organization
          type: string
          format: uri
          example: https://www.example.com/some-org
        with_api_key:
          description: >-
            Default value is `false`. Set to true to also generate an API key
            associated to the new organization.
          type: boolean
          example: true
        copy_settings:
          description: >-
            A list of the settings that you wish to copy over to the new
            organization.
          type: object
          properties:
            campaigns:
              description: >-
                Copy over the campaigns from the current organization to the new
                organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            custom_fields:
              description: >-
                Copy over the custom fields from the current organization to the
                new organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            order_approvals:
              description: >-
                Copy over the order approvals settings from the current
                organization to the new organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            payment_methods:
              description: >-
                Copy over the payment methods from the current organization to
                the new organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            security_settings:
              description: >-
                Copy over the security settings from the current organization to
                the new organization. Defaults to `true`.
              type: boolean
              default: true
              example: true
            users:
              description: >-
                Copy over the users from the current organization to the new
                organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            fraud_prevention:
              description: >-
                Copy over the fraud prevention settings and rules from the
                current organization to the new organization. Defaults to
                `false`.
              type: boolean
              default: false
              example: false
        phone:
          description: >-
            Phone number of the organization. For non-US phone numbers, specify
            the country code (prefixed with +).
          type: string
          example: 123-456-7890
      required:
        - name
        - website
    MemberBase:
      description: >
        Each organization has one or more users that can access and manage that
        organization. These users are called members.


        Members can take actions via the Tremendous web dashboard directly.


        These actions include adding funding sources to the organization,
        creating Campaigns, and more.
      type: object
      required:
        - id
        - name
        - email
        - role
        - status
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        email:
          description: Email address of the member
          type: string
          format: email
          example: jane@example.com
        name:
          description: Full name of the member
          type: string
          example: Jane Doe
          nullable: true
        role:
          description: |
            Role of the member within the organization.

            <table>
              <thead>
                <tr>
                  <th>Role</th>
                  <th>Description</th>
                </tr>
              </thead>
                <tr>
                  <td><code>MEMBER</code></td>
                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                </tr>
                <tr>
                  <td><code>ADMIN</code></td>
                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                </tr>
                <tr>
                  <td><code>DELETED</code></td>
                  <td>No longer a member of this organization.</td>
                </tr>
              <tbody>
              </tbody>
            </table>
          type: string
          enum:
            - MEMBER
            - ADMIN
            - DELETED
        status:
          description: >
            Current status of the member's account.


            When creating a member it starts out in the status `INVITED`. As
            soon as that member open the invitation link and registers an
            account, the status switches to `REGISTERED`.
          type: string
          enum:
            - REGISTERED
            - INVITED
          example: INVITED
          readOnly: true
    MemberWithoutEvents:
      description: >
        Each organization has one or more users that can access and manage that
        organization. These users are called members.


        Members can take actions via the Tremendous web dashboard directly.


        These actions include adding funding sources to the organization,
        creating Campaigns, and more.
      type: object
      required:
        - id
        - name
        - email
        - role
        - status
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        email:
          description: Email address of the member
          type: string
          format: email
          example: jane@example.com
        name:
          description: Full name of the member
          type: string
          example: Jane Doe
          nullable: true
        role:
          description: |
            Role of the member within the organization.

            <table>
              <thead>
                <tr>
                  <th>Role</th>
                  <th>Description</th>
                </tr>
              </thead>
                <tr>
                  <td><code>MEMBER</code></td>
                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                </tr>
                <tr>
                  <td><code>ADMIN</code></td>
                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                </tr>
                <tr>
                  <td><code>DELETED</code></td>
                  <td>No longer a member of this organization.</td>
                </tr>
              <tbody>
              </tbody>
            </table>
          type: string
          enum:
            - MEMBER
            - ADMIN
            - DELETED
        status:
          description: >
            Current status of the member's account.


            When creating a member it starts out in the status `INVITED`. As
            soon as that member open the invitation link and registers an
            account, the status switches to `REGISTERED`.
          type: string
          enum:
            - REGISTERED
            - INVITED
          example: INVITED
          readOnly: true
        created_at:
          description: >
            Timestamp when this member was created.


            The `created_at` timestamp is **NOT** returned when retrieving a
            member (but is part of the response when listing or creating
            members).
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-02T11:05:59Z'
        last_login_at:
          description: >
            Timestamp when this member most recently logged into the dashboard
            of the organization associated with this API key.
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-02T11:05:59Z'
          nullable: true
    CreateMember:
      type: object
      properties:
        email:
          description: Email address of the member
          type: string
          format: email
          example: jane@example.com
        name:
          description: Full name of the member
          type: string
          example: Jane Doe
        role:
          description: |
            Role of the member within the organization.

            <table>
              <thead>
                <tr>
                  <th>Role</th>
                  <th>Description</th>
                </tr>
              </thead>
                <tr>
                  <td><code>MEMBER</code></td>
                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                </tr>
                <tr>
                  <td><code>ADMIN</code></td>
                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                </tr>
              <tbody>
            </table>
          type: string
          enum:
            - MEMBER
            - ADMIN
          example: MEMBER
      required:
        - email
        - name
        - role
    MemberWithEvents:
      description: >
        Each organization has one or more users that can access and manage that
        organization. These users are called members.


        Members can take actions via the Tremendous web dashboard directly.


        These actions include adding funding sources to the organization,
        creating Campaigns, and more.
      type: object
      required:
        - id
        - name
        - email
        - role
        - status
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        email:
          description: Email address of the member
          type: string
          format: email
          example: jane@example.com
        name:
          description: Full name of the member
          type: string
          example: Jane Doe
          nullable: true
        role:
          description: |
            Role of the member within the organization.

            <table>
              <thead>
                <tr>
                  <th>Role</th>
                  <th>Description</th>
                </tr>
              </thead>
                <tr>
                  <td><code>MEMBER</code></td>
                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                </tr>
                <tr>
                  <td><code>ADMIN</code></td>
                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                </tr>
                <tr>
                  <td><code>DELETED</code></td>
                  <td>No longer a member of this organization.</td>
                </tr>
              <tbody>
              </tbody>
            </table>
          type: string
          enum:
            - MEMBER
            - ADMIN
            - DELETED
        status:
          description: >
            Current status of the member's account.


            When creating a member it starts out in the status `INVITED`. As
            soon as that member open the invitation link and registers an
            account, the status switches to `REGISTERED`.
          type: string
          enum:
            - REGISTERED
            - INVITED
          example: INVITED
          readOnly: true
        events:
          description: List of events related to the member.
          type: array
          items:
            type: object
            properties:
              type:
                description: Event type
                type: string
                enum:
                  - created
                  - last_login
                example: created
              date_utc:
                description: Timestamp when the event happened
                type: string
                format: date-time
                example: '2021-08-02T11:05:59Z'
                nullable: true
          readOnly: true
    Field:
      type: object
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        label:
          description: Label of the field
          type: string
          example: recipient_name
        data_type:
          description: Type of the values of the field
          type: string
          example: Text
        data:
          type: object
          additionalProperties: true
        required:
          description: Is this field required (true) or optional (false)
          type: boolean
          example: true
        scope:
          description: Type of objects this field gets associated with
          type: string
          example: REWARD
    Webhook:
      type: object
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        url:
          description: URL the webhook will make requests to
          type: string
          format: uri
          example: https://example.com/webhook
          nullable: true
        private_key:
          description: Private key for the webhook
          type: string
          readOnly: true
          example: jXjdU8dozx571TG6YzL4
      required:
        - url
    WebhookPost:
      type: object
      properties:
        url:
          description: URL the webhook will make requests to
          type: string
          format: uri
          example: https://example.com/webhook
      required:
        - url
    Reward:
      description: >
        A single reward, sent to a recipient. A reward is always part of an
        order.


        Either `products` or `campaign_id` must be specified.
      type: object
      properties:
        id:
          description: Tremendous ID of the reward
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        order_id:
          description: Tremendous ID of the order this reward is part of.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        created_at:
          description: Date the reward was created
          type: string
          format: date-time
          readOnly: true
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: false
          nullable: true
          writeOnly: true
        products:
          description: >
            List of IDs of product (different gift cards, charity, etc.) that
            will be available

            to the recipient to choose from.


            Providing a `products` array will override the products made
            available by the campaign

            specified using the `campaign_id` property unless the `products`
            array is empty. It will

            _not_ override other campaign attributes, like the message and
            customization of the look and feel.
          type: array
          writeOnly: true
          items:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            writeOnly: true
          minItems: 1
        value:
          type: object
          properties:
            denomination:
              description: Amount of the reward
              type: number
              format: double
            currency_code:
              description: Currency of the reward
              type: string
              enum:
                - USD
                - CAD
                - EUR
                - AED
                - AFN
                - ALL
                - AMD
                - ARS
                - AUD
                - AZN
                - BAM
                - BDT
                - BGN
                - BHD
                - BIF
                - BND
                - BOB
                - BRL
                - BWP
                - BYR
                - BZD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EEK
                - EGP
                - ERN
                - ETB
                - GBP
                - GEL
                - GHS
                - GNF
                - GTQ
                - HKD
                - HNL
                - HRK
                - HUF
                - IDR
                - ILS
                - INR
                - IQD
                - IRR
                - ISK
                - JMD
                - JOD
                - JPY
                - KES
                - KHR
                - KRW
                - KWD
                - KZT
                - LBP
                - LKR
                - LTL
                - LVL
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MOP
                - MUR
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SDG
                - SEK
                - SGD
                - SOS
                - SYP
                - THB
                - TND
                - TOP
                - TRY
                - TTD
                - TWD
                - TZS
                - UAH
                - UGX
                - UYU
                - UZS
                - VEF
                - VND
                - XAF
                - XOF
                - YER
                - ZAR
                - ZMK
              example: USD
          required:
            - denomination
            - currency_code
          example:
            denomination: 50
            currency_code: USD
        recipient:
          description: Details of the recipient of the reward
          type: object
          properties:
            name:
              description: Name of the recipient
              type: string
              example: John Doe Jr.
            email:
              description: Email address of the recipient
              type: string
              example: john.doe@example.com
            phone:
              description: >-
                Phone number of the recipient. For non-US phone numbers, specify
                the country code (prefixed with +).
              type: string
              example: 123-456-7890
        deliver_at:
          description: >-
            Timestamp of reward delivery within the next year. Note that if
            date-time is provided, the time values will be ignored.
          type: string
          format: date
          pattern: YYYY-MM-DD
          example: '2023-12-31'
        custom_fields:
          type: array
          items:
            description: >-
              Reward custom data for searching, tracking or copy (see [Adding
              custom fields to
              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
            type: object
            properties:
              id:
                description: Tremendous ID of the custom field
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
              value:
                description: Value of the custom field
                type: string
                example: Hufflepuff
                readOnly: false
                nullable: true
              label:
                description: Label of the custom field
                type: string
                example: harry_potter_house
                readOnly: false
        delivery:
          description: |
            Details on how the reward is delivered to the recipient.
          type: object
          properties:
            method:
              description: |
                How to deliver the reward to the recipient.

                <table>
                  <thead>
                    <tr>
                      <th>Delivery Method</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>EMAIL</code></td>
                      <td>Deliver the reward to the recipient by email</td>
                    </tr>
                    <tr>
                      <td><code>LINK</code></td>
                      <td>
                        <p>Deliver the reward to the recipient via a link.</p>
                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                      </td>
                    </tr>
                    <tr>
                      <td><code>PHONE</code></td>
                      <td>Deliver the reward to the recipient by SMS</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - EMAIL
                - LINK
                - PHONE
            status:
              description: >
                Current status of the delivery of the reward:


                * `SCHEDULED` - Reward is scheduled for delivery and will be
                delivered soon.

                * `FAILED` - Delivery of reward failed (e.g. email bounced).

                * `SUCCEEDED` - Reward was successfully delivered (email or text
                message delivered or reward link opened).

                * `PENDING` - Delivery is pending but not yet scheduled.
              type: string
              enum:
                - SCHEDULED
                - FAILED
                - SUCCEEDED
                - PENDING
              readOnly: true
          required:
            - method
            - status
    Order:
      description: An order wraps around the fulfilment of one or more rewards.
      type: object
      properties:
        id:
          description: Tremendous ID of the order
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        external_id:
          description: >
            Reference for this order, supplied by the customer.


            When set, `external_id` makes order idempotent. All requests that
            use the same `external_id`

            after the initial order creation, will result in a response that
            returns the data of the

            initially created order. The response will have a `201` response
            code. These responses

            **fail** to create any further orders.


            It also allows for retrieving by `external_id` instead of `id` only.
          type: string
          nullable: true
          example: Your-Individual-Identifier-for-This-Order
        campaign_id:
          description: >
            ID of the campaign in your account, that defines the available
            products (different gift cards, charity, etc.)

            that the recipient can choose from.
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: IVM0I3WNJJL0
          readOnly: true
          nullable: true
        created_at:
          description: Date the order has been created
          type: string
          format: date-time
          readOnly: true
        status:
          description: |
            Execution status of a given order

            <table>
              <thead>
                <tr>
                  <th>
                    Status
                  </th>
                  <th>
                    Description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <code>
                      CANCELED
                    </code>
                  </td>
                  <td>
                    The order and all of its rewards were canceled.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      CART
                    </code>
                  </td>
                  <td>
                    The order has been created, but hasn't yet been processed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      EXECUTED
                    </code>
                  </td>
                  <td>
                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      FAILED
                    </code>
                  </td>
                  <td>
                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but needs approval to be executed.
                  </td>
                </tr>
                <tr>
                  <td>
                    <code>
                      PENDING INTERNAL PAYMENT APPROVAL
                    </code>
                  </td>
                  <td>
                    The order has been created but it is under review and requires approval from our team.
                  </td>
                </tr>

              </tbody>
            </table>
          type: string
          enum:
            - CANCELED
            - CART
            - EXECUTED
            - FAILED
            - PENDING APPROVAL
            - PENDING INTERNAL PAYMENT APPROVAL
          readOnly: true
        payment:
          description: >-
            Cost breakdown of the order (cost of rewards + fees). Cost and fees
            are always denominated in USD, independent from the currency of the
            ordered rewards.

            Note that this property will only appear for processed orders
            (`status` is `EXECUTED`).
          type: object
          properties:
            subtotal:
              description: Total price of the order before fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 50
            total:
              description: Total price of the order including fees (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 52.5
            fees:
              description: Fees for the order (in USD)
              type: number
              format: double
              minimum: 0
              readOnly: true
              example: 2.5
            refund:
              description: >
                Breakdown of the order refunds (total amount in USD, independent
                from the currency of the ordered rewards).

                Note that this property will only appear for canceled orders or
                orders with canceled rewards.
              type: object
              properties:
                total:
                  description: Total amount of the order refunds (in USD)
                  type: number
                  format: double
                  minimum: 0
                  readOnly: true
                  example: 52.5
              required:
                - total
            channel:
              description: Name of the channel in which the order was created
              type: string
              enum:
                - UI
                - API
                - EMBED
                - DECIPHER
                - QUALTRICS
                - TYPEFORM
                - SURVEY MONKEY
        invoice_id:
          description: The ID for the invoice associated with this order
          type: string
          readOnly: true
          example: 2E59A82B-0001
        reward:
          description: >
            A single reward, sent to a recipient. A reward is always part of an
            order.


            Either `products` or `campaign_id` must be specified.
          type: object
          properties:
            id:
              description: Tremendous ID of the reward
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            order_id:
              description: Tremendous ID of the order this reward is part of.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            created_at:
              description: Date the reward was created
              type: string
              format: date-time
              readOnly: true
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              nullable: true
              writeOnly: true
            products:
              description: >
                List of IDs of product (different gift cards, charity, etc.)
                that will be available

                to the recipient to choose from.


                Providing a `products` array will override the products made
                available by the campaign

                specified using the `campaign_id` property unless the `products`
                array is empty. It will

                _not_ override other campaign attributes, like the message and
                customization of the look and feel.
              type: array
              writeOnly: true
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                writeOnly: true
              minItems: 1
            value:
              type: object
              properties:
                denomination:
                  description: Amount of the reward
                  type: number
                  format: double
                currency_code:
                  description: Currency of the reward
                  type: string
                  enum:
                    - USD
                    - CAD
                    - EUR
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ARS
                    - AUD
                    - AZN
                    - BAM
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BND
                    - BOB
                    - BRL
                    - BWP
                    - BYR
                    - BZD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EEK
                    - EGP
                    - ERN
                    - ETB
                    - GBP
                    - GEL
                    - GHS
                    - GNF
                    - GTQ
                    - HKD
                    - HNL
                    - HRK
                    - HUF
                    - IDR
                    - ILS
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KHR
                    - KRW
                    - KWD
                    - KZT
                    - LBP
                    - LKR
                    - LTL
                    - LVL
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MOP
                    - MUR
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SDG
                    - SEK
                    - SGD
                    - SOS
                    - SYP
                    - THB
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - XAF
                    - XOF
                    - YER
                    - ZAR
                    - ZMK
                  example: USD
              required:
                - denomination
                - currency_code
              example:
                denomination: 50
                currency_code: USD
            recipient:
              description: Details of the recipient of the reward
              type: object
              properties:
                name:
                  description: Name of the recipient
                  type: string
                  example: John Doe Jr.
                email:
                  description: Email address of the recipient
                  type: string
                  example: john.doe@example.com
                phone:
                  description: >-
                    Phone number of the recipient. For non-US phone numbers,
                    specify the country code (prefixed with +).
                  type: string
                  example: 123-456-7890
            deliver_at:
              description: >-
                Timestamp of reward delivery within the next year. Note that if
                date-time is provided, the time values will be ignored.
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: '2023-12-31'
            custom_fields:
              type: array
              items:
                description: >-
                  Reward custom data for searching, tracking or copy (see
                  [Adding custom fields to
                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                type: object
                properties:
                  id:
                    description: Tremendous ID of the custom field
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                    readOnly: false
                  value:
                    description: Value of the custom field
                    type: string
                    example: Hufflepuff
                    readOnly: false
                    nullable: true
                  label:
                    description: Label of the custom field
                    type: string
                    example: harry_potter_house
                    readOnly: false
            delivery:
              description: |
                Details on how the reward is delivered to the recipient.
              type: object
              properties:
                method:
                  description: |
                    How to deliver the reward to the recipient.

                    <table>
                      <thead>
                        <tr>
                          <th>Delivery Method</th>
                          <th>Description</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><code>EMAIL</code></td>
                          <td>Deliver the reward to the recipient by email</td>
                        </tr>
                        <tr>
                          <td><code>LINK</code></td>
                          <td>
                            <p>Deliver the reward to the recipient via a link.</p>
                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                          </td>
                        </tr>
                        <tr>
                          <td><code>PHONE</code></td>
                          <td>Deliver the reward to the recipient by SMS</td>
                        </tr>
                      </tbody>
                    </table>
                  type: string
                  enum:
                    - EMAIL
                    - LINK
                    - PHONE
                status:
                  description: >
                    Current status of the delivery of the reward:


                    * `SCHEDULED` - Reward is scheduled for delivery and will be
                    delivered soon.

                    * `FAILED` - Delivery of reward failed (e.g. email bounced).

                    * `SUCCEEDED` - Reward was successfully delivered (email or
                    text message delivered or reward link opened).

                    * `PENDING` - Delivery is pending but not yet scheduled.
                  type: string
                  enum:
                    - SCHEDULED
                    - FAILED
                    - SUCCEEDED
                    - PENDING
                  readOnly: true
              required:
                - method
                - status
      required:
        - id
        - created_at
        - status
    Member:
      description: >
        Each organization has one or more users that can access and manage that
        organization. These users are called members.


        Members can take actions via the Tremendous web dashboard directly.


        These actions include adding funding sources to the organization,
        creating Campaigns, and more.
      type: object
      required:
        - id
        - name
        - email
        - role
        - status
      properties:
        id:
          type: string
          pattern: '[A-Z0-9]{4,20}'
          example: SOMEIDSOMEID
          readOnly: true
        email:
          description: Email address of the member
          type: string
          format: email
          example: jane@example.com
        name:
          description: Full name of the member
          type: string
          example: Jane Doe
          nullable: true
        role:
          description: |
            Role of the member within the organization.

            <table>
              <thead>
                <tr>
                  <th>Role</th>
                  <th>Description</th>
                </tr>
              </thead>
                <tr>
                  <td><code>MEMBER</code></td>
                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                </tr>
                <tr>
                  <td><code>ADMIN</code></td>
                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                </tr>
                <tr>
                  <td><code>DELETED</code></td>
                  <td>No longer a member of this organization.</td>
                </tr>
              <tbody>
              </tbody>
            </table>
          type: string
          enum:
            - MEMBER
            - ADMIN
            - DELETED
        status:
          description: >
            Current status of the member's account.


            When creating a member it starts out in the status `INVITED`. As
            soon as that member open the invitation link and registers an
            account, the status switches to `REGISTERED`.
          type: string
          enum:
            - REGISTERED
            - INVITED
          example: INVITED
          readOnly: true
        created_at:
          description: >
            Timestamp when this member was created.


            The `created_at` timestamp is **NOT** returned when retrieving a
            member (but is part of the response when listing or creating
            members).
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-02T11:05:59Z'
        last_login_at:
          description: >
            Timestamp when this member most recently logged into the dashboard
            of the organization associated with this API key.
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-02T11:05:59Z'
          nullable: true
    OrdersCreateOrderRequest:
      type: object
      properties:
        external_id:
          description: >
            Reference for this order, supplied by the customer.


            When set, `external_id` makes order idempotent. All requests that
            use the same `external_id`

            after the initial order creation, will result in a response that
            returns the data of the

            initially created order. The response will have a `201` response
            code. These responses

            **fail** to create any further orders.


            It also allows for retrieving by `external_id` instead of `id` only.
          type: string
          nullable: true
          example: Your-Individual-Identifier-for-This-Order
        payment:
          type: object
          properties:
            funding_source_id:
              description: >-
                Tremendous ID of the funding source that will be used to pay for
                the order. Use `balance` to use your Tremendous's balance.
              type: string
          required:
            - funding_source_id
        reward:
          description: >
            A single reward, sent to a recipient. A reward is always part of an
            order.


            Either `products` or `campaign_id` must be specified.
          type: object
          properties:
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              nullable: true
            products:
              description: >
                List of IDs of product (different gift cards, charity, etc.)
                that will be available

                to the recipient to choose from.


                Providing a `products` array will override the products made
                available by the campaign

                specified using the `campaign_id` property unless the `products`
                array is empty. It will

                _not_ override other campaign attributes, like the message and
                customization of the look and feel.
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              minItems: 1
            value:
              type: object
              properties:
                denomination:
                  description: Amount of the reward
                  type: number
                  format: double
                currency_code:
                  description: Currency of the reward
                  type: string
                  enum:
                    - USD
                    - CAD
                    - EUR
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ARS
                    - AUD
                    - AZN
                    - BAM
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BND
                    - BOB
                    - BRL
                    - BWP
                    - BYR
                    - BZD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EEK
                    - EGP
                    - ERN
                    - ETB
                    - GBP
                    - GEL
                    - GHS
                    - GNF
                    - GTQ
                    - HKD
                    - HNL
                    - HRK
                    - HUF
                    - IDR
                    - ILS
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KHR
                    - KRW
                    - KWD
                    - KZT
                    - LBP
                    - LKR
                    - LTL
                    - LVL
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MOP
                    - MUR
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SDG
                    - SEK
                    - SGD
                    - SOS
                    - SYP
                    - THB
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - XAF
                    - XOF
                    - YER
                    - ZAR
                    - ZMK
                  example: USD
              required:
                - denomination
                - currency_code
              example:
                denomination: 50
                currency_code: USD
            recipient:
              description: Details of the recipient of the reward
              type: object
              properties:
                name:
                  description: Name of the recipient
                  type: string
                  example: John Doe Jr.
                email:
                  description: Email address of the recipient
                  type: string
                  example: john.doe@example.com
                phone:
                  description: >-
                    Phone number of the recipient. For non-US phone numbers,
                    specify the country code (prefixed with +).
                  type: string
                  example: 123-456-7890
            deliver_at:
              description: >-
                Timestamp of reward delivery within the next year. Note that if
                date-time is provided, the time values will be ignored.
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: '2023-12-31'
            custom_fields:
              type: array
              items:
                description: >-
                  Reward custom data for searching, tracking or copy (see
                  [Adding custom fields to
                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                type: object
                properties:
                  id:
                    description: Tremendous ID of the custom field
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  value:
                    description: Value of the custom field
                    type: string
                    example: Hufflepuff
                    nullable: true
                  label:
                    description: Label of the custom field
                    type: string
                    example: harry_potter_house
            language:
              description: >
                Set this to translate the redemption experience for this reward.
                Pass a 2-letter [ISO-639-1
                code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for
                the desired language. Defaults to `en`.
              type: string
              example: de
            delivery:
              description: |
                Details on how the reward is delivered to the recipient.
              type: object
              properties:
                method:
                  description: |
                    How to deliver the reward to the recipient.

                    <table>
                      <thead>
                        <tr>
                          <th>Delivery Method</th>
                          <th>Description</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><code>EMAIL</code></td>
                          <td>Deliver the reward to the recipient by email</td>
                        </tr>
                        <tr>
                          <td><code>LINK</code></td>
                          <td>
                            <p>Deliver the reward to the recipient via a link.</p>
                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                          </td>
                        </tr>
                        <tr>
                          <td><code>PHONE</code></td>
                          <td>Deliver the reward to the recipient by SMS</td>
                        </tr>
                      </tbody>
                    </table>
                  type: string
                  enum:
                    - EMAIL
                    - LINK
                    - PHONE
      required:
        - payment
        - reward
    InvoicesCreateAndFundAccountBalanceRequest:
      type: object
      properties:
        po_number:
          description: Reference to the purchase order number within your organization
          type: string
          nullable: true
          example: 123-PO-EE
        amount:
          description: Amount of the invoice in USD
          type: number
          format: double
          example: 50.35
        memo:
          description: >
            A note to be included in the invoice. This is for your internal use
            and will not be visible to the recipient.
          type: string
          nullable: true
      required:
        - amount
    OrganizationsCreateNewOrganizationRequest:
      type: object
      properties:
        name:
          description: Name of the organization
          type: string
          example: ACME Inc.
        website:
          description: URL of the website of that organization
          type: string
          format: uri
          example: https://www.example.com/some-org
        with_api_key:
          description: >-
            Default value is `false`. Set to true to also generate an API key
            associated to the new organization.
          type: boolean
          example: true
        copy_settings:
          description: >-
            A list of the settings that you wish to copy over to the new
            organization.
          type: object
          properties:
            campaigns:
              description: >-
                Copy over the campaigns from the current organization to the new
                organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            custom_fields:
              description: >-
                Copy over the custom fields from the current organization to the
                new organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            order_approvals:
              description: >-
                Copy over the order approvals settings from the current
                organization to the new organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            payment_methods:
              description: >-
                Copy over the payment methods from the current organization to
                the new organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            security_settings:
              description: >-
                Copy over the security settings from the current organization to
                the new organization. Defaults to `true`.
              type: boolean
              default: true
              example: true
            users:
              description: >-
                Copy over the users from the current organization to the new
                organization. Defaults to `false`.
              type: boolean
              default: false
              example: false
            fraud_prevention:
              description: >-
                Copy over the fraud prevention settings and rules from the
                current organization to the new organization. Defaults to
                `false`.
              type: boolean
              default: false
              example: false
        phone:
          description: >-
            Phone number of the organization. For non-US phone numbers, specify
            the country code (prefixed with +).
          type: string
          example: 123-456-7890
      required:
        - name
        - website
    MembersCreateNewMemberRequest:
      type: object
      properties:
        email:
          description: Email address of the member
          type: string
          format: email
          example: jane@example.com
        name:
          description: Full name of the member
          type: string
          example: Jane Doe
        role:
          description: |
            Role of the member within the organization.

            <table>
              <thead>
                <tr>
                  <th>Role</th>
                  <th>Description</th>
                </tr>
              </thead>
                <tr>
                  <td><code>MEMBER</code></td>
                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                </tr>
                <tr>
                  <td><code>ADMIN</code></td>
                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                </tr>
              <tbody>
            </table>
          type: string
          enum:
            - MEMBER
            - ADMIN
          example: MEMBER
      required:
        - email
        - name
        - role
    WebhooksCreateWebhookRequest:
      type: object
      properties:
        url:
          description: URL the webhook will make requests to
          type: string
          format: uri
          example: https://example.com/webhook
      required:
        - url
    WebhooksTriggerEventRequest:
      type: object
      properties:
        event:
          description: >-
            The event to test. See the [List events endpoint
            reference](https://developers.tremendous.com/) for all available
            events.
          type: string
          example: INVOICES.PAID
      required:
        - event
    RewardsListAllRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          items:
            description: >
              A single reward, sent to a recipient. A reward is always part of
              an order.


              Either `products` or `campaign_id` must be specified.
            type: object
            properties:
              id:
                description: Tremendous ID of the reward
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              order_id:
                description: Tremendous ID of the order this reward is part of.
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              created_at:
                description: Date the reward was created
                type: string
                format: date-time
              value:
                type: object
                properties:
                  denomination:
                    description: Amount of the reward
                    type: number
                    format: double
                  currency_code:
                    description: Currency of the reward
                    type: string
                    enum:
                      - USD
                      - CAD
                      - EUR
                      - AED
                      - AFN
                      - ALL
                      - AMD
                      - ARS
                      - AUD
                      - AZN
                      - BAM
                      - BDT
                      - BGN
                      - BHD
                      - BIF
                      - BND
                      - BOB
                      - BRL
                      - BWP
                      - BYR
                      - BZD
                      - CDF
                      - CHF
                      - CLP
                      - CNY
                      - COP
                      - CRC
                      - CVE
                      - CZK
                      - DJF
                      - DKK
                      - DOP
                      - DZD
                      - EEK
                      - EGP
                      - ERN
                      - ETB
                      - GBP
                      - GEL
                      - GHS
                      - GNF
                      - GTQ
                      - HKD
                      - HNL
                      - HRK
                      - HUF
                      - IDR
                      - ILS
                      - INR
                      - IQD
                      - IRR
                      - ISK
                      - JMD
                      - JOD
                      - JPY
                      - KES
                      - KHR
                      - KRW
                      - KWD
                      - KZT
                      - LBP
                      - LKR
                      - LTL
                      - LVL
                      - MAD
                      - MDL
                      - MGA
                      - MKD
                      - MMK
                      - MOP
                      - MUR
                      - MXN
                      - MYR
                      - MZN
                      - NAD
                      - NGN
                      - NIO
                      - NOK
                      - NPR
                      - NZD
                      - OMR
                      - PAB
                      - PEN
                      - PHP
                      - PKR
                      - PLN
                      - PYG
                      - QAR
                      - RON
                      - RSD
                      - RUB
                      - RWF
                      - SAR
                      - SDG
                      - SEK
                      - SGD
                      - SOS
                      - SYP
                      - THB
                      - TND
                      - TOP
                      - TRY
                      - TTD
                      - TWD
                      - TZS
                      - UAH
                      - UGX
                      - UYU
                      - UZS
                      - VEF
                      - VND
                      - XAF
                      - XOF
                      - YER
                      - ZAR
                      - ZMK
                    example: USD
                required:
                  - denomination
                  - currency_code
                example:
                  denomination: 50
                  currency_code: USD
              recipient:
                description: Details of the recipient of the reward
                type: object
                properties:
                  name:
                    description: Name of the recipient
                    type: string
                    example: John Doe Jr.
                  email:
                    description: Email address of the recipient
                    type: string
                    example: john.doe@example.com
                  phone:
                    description: >-
                      Phone number of the recipient. For non-US phone numbers,
                      specify the country code (prefixed with +).
                    type: string
                    example: 123-456-7890
              deliver_at:
                description: >-
                  Timestamp of reward delivery within the next year. Note that
                  if date-time is provided, the time values will be ignored.
                type: string
                format: date
                pattern: YYYY-MM-DD
                example: '2023-12-31'
              custom_fields:
                type: array
                items:
                  description: >-
                    Reward custom data for searching, tracking or copy (see
                    [Adding custom fields to
                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                  type: object
                  properties:
                    id:
                      description: Tremendous ID of the custom field
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    value:
                      description: Value of the custom field
                      type: string
                      example: Hufflepuff
                      nullable: true
                    label:
                      description: Label of the custom field
                      type: string
                      example: harry_potter_house
              delivery:
                description: |
                  Details on how the reward is delivered to the recipient.
                type: object
                properties:
                  method:
                    description: |
                      How to deliver the reward to the recipient.

                      <table>
                        <thead>
                          <tr>
                            <th>Delivery Method</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><code>EMAIL</code></td>
                            <td>Deliver the reward to the recipient by email</td>
                          </tr>
                          <tr>
                            <td><code>LINK</code></td>
                            <td>
                              <p>Deliver the reward to the recipient via a link.</p>
                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                            </td>
                          </tr>
                          <tr>
                            <td><code>PHONE</code></td>
                            <td>Deliver the reward to the recipient by SMS</td>
                          </tr>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - EMAIL
                      - LINK
                      - PHONE
                  status:
                    description: >
                      Current status of the delivery of the reward:


                      * `SCHEDULED` - Reward is scheduled for delivery and will
                      be delivered soon.

                      * `FAILED` - Delivery of reward failed (e.g. email
                      bounced).

                      * `SUCCEEDED` - Reward was successfully delivered (email
                      or text message delivered or reward link opened).

                      * `PENDING` - Delivery is pending but not yet scheduled.
                    type: string
                    enum:
                      - SCHEDULED
                      - FAILED
                      - SUCCEEDED
                      - PENDING
                required:
                  - method
                  - status
        total_count:
          description: The total number of rewards across all pages
          type: integer
          example: 1
    RewardsListAllRewards401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsListAllRewards429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    RewardsListAllRewards500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGetSingleRewardResponse:
      type: object
      required:
        - reward
      properties:
        reward:
          description: >
            A single reward, sent to a recipient. A reward is always part of an
            order.


            Either `products` or `campaign_id` must be specified.
          type: object
          properties:
            id:
              description: Tremendous ID of the reward
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            order_id:
              description: Tremendous ID of the order this reward is part of.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            created_at:
              description: Date the reward was created
              type: string
              format: date-time
            value:
              type: object
              properties:
                denomination:
                  description: Amount of the reward
                  type: number
                  format: double
                currency_code:
                  description: Currency of the reward
                  type: string
                  enum:
                    - USD
                    - CAD
                    - EUR
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ARS
                    - AUD
                    - AZN
                    - BAM
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BND
                    - BOB
                    - BRL
                    - BWP
                    - BYR
                    - BZD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EEK
                    - EGP
                    - ERN
                    - ETB
                    - GBP
                    - GEL
                    - GHS
                    - GNF
                    - GTQ
                    - HKD
                    - HNL
                    - HRK
                    - HUF
                    - IDR
                    - ILS
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KHR
                    - KRW
                    - KWD
                    - KZT
                    - LBP
                    - LKR
                    - LTL
                    - LVL
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MOP
                    - MUR
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SDG
                    - SEK
                    - SGD
                    - SOS
                    - SYP
                    - THB
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - XAF
                    - XOF
                    - YER
                    - ZAR
                    - ZMK
                  example: USD
              required:
                - denomination
                - currency_code
              example:
                denomination: 50
                currency_code: USD
            recipient:
              description: Details of the recipient of the reward
              type: object
              properties:
                name:
                  description: Name of the recipient
                  type: string
                  example: John Doe Jr.
                email:
                  description: Email address of the recipient
                  type: string
                  example: john.doe@example.com
                phone:
                  description: >-
                    Phone number of the recipient. For non-US phone numbers,
                    specify the country code (prefixed with +).
                  type: string
                  example: 123-456-7890
            deliver_at:
              description: >-
                Timestamp of reward delivery within the next year. Note that if
                date-time is provided, the time values will be ignored.
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: '2023-12-31'
            custom_fields:
              type: array
              items:
                description: >-
                  Reward custom data for searching, tracking or copy (see
                  [Adding custom fields to
                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                type: object
                properties:
                  id:
                    description: Tremendous ID of the custom field
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  value:
                    description: Value of the custom field
                    type: string
                    example: Hufflepuff
                    nullable: true
                  label:
                    description: Label of the custom field
                    type: string
                    example: harry_potter_house
            delivery:
              description: |
                Details on how the reward is delivered to the recipient.
              type: object
              properties:
                method:
                  description: |
                    How to deliver the reward to the recipient.

                    <table>
                      <thead>
                        <tr>
                          <th>Delivery Method</th>
                          <th>Description</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td><code>EMAIL</code></td>
                          <td>Deliver the reward to the recipient by email</td>
                        </tr>
                        <tr>
                          <td><code>LINK</code></td>
                          <td>
                            <p>Deliver the reward to the recipient via a link.</p>
                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                          </td>
                        </tr>
                        <tr>
                          <td><code>PHONE</code></td>
                          <td>Deliver the reward to the recipient by SMS</td>
                        </tr>
                      </tbody>
                    </table>
                  type: string
                  enum:
                    - EMAIL
                    - LINK
                    - PHONE
                status:
                  description: >
                    Current status of the delivery of the reward:


                    * `SCHEDULED` - Reward is scheduled for delivery and will be
                    delivered soon.

                    * `FAILED` - Delivery of reward failed (e.g. email bounced).

                    * `SUCCEEDED` - Reward was successfully delivered (email or
                    text message delivered or reward link opened).

                    * `PENDING` - Delivery is pending but not yet scheduled.
                  type: string
                  enum:
                    - SCHEDULED
                    - FAILED
                    - SUCCEEDED
                    - PENDING
              required:
                - method
                - status
    RewardsGetSingleReward401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGetSingleReward404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGetSingleReward429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    RewardsGetSingleReward500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGenerateLinkResponse:
      type: object
      required:
        - reward
      properties:
        reward:
          description: The redemption link for a reward.
          type: object
          properties:
            id:
              description: Tremendous ID of the reward
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            link:
              description: >
                Link to redeem the reward at. You need to deliver this link to
                the recipient.
              type: string
              example: >-
                https://testflight.tremendous.com/rewards/payout/ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
    RewardsGenerateLink401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGenerateLink403Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Unsupported operation for this reward.
          payload: {}
    RewardsGenerateLink404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGenerateLink429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    RewardsGenerateLink500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGenerateEmbedTokenResponse:
      type: object
      required:
        - reward
      properties:
        reward:
          description: The redemption token for a reward.
          type: object
          properties:
            id:
              description: Tremendous ID of the reward
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            token:
              description: |
                The token to redeem the reward.
              type: string
              example: ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
            expires_at:
              description: Date the token expires
              type: string
              format: date-time
    RewardsGenerateEmbedToken401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGenerateEmbedToken404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsGenerateEmbedToken429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    RewardsGenerateEmbedToken500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsResendRewardByIdResponse:
      type: object
      properties: {}
      example: {}
    RewardsResendRewardById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsResendRewardById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    RewardsResendRewardById422Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    RewardsResendRewardById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    RewardsResendRewardById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersGetListResponse:
      type: object
      required:
        - orders
        - total_count
      properties:
        orders:
          type: array
          items:
            description: An order wraps around the fulfilment of one or more rewards.
            type: object
            properties:
              id:
                description: Tremendous ID of the order
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              external_id:
                description: >
                  Reference for this order, supplied by the customer.


                  When set, `external_id` makes order idempotent. All requests
                  that use the same `external_id`

                  after the initial order creation, will result in a response
                  that returns the data of the

                  initially created order. The response will have a `201`
                  response code. These responses

                  **fail** to create any further orders.


                  It also allows for retrieving by `external_id` instead of `id`
                  only.
                type: string
                nullable: true
                example: Your-Individual-Identifier-for-This-Order
              campaign_id:
                description: >
                  ID of the campaign in your account, that defines the available
                  products (different gift cards, charity, etc.)

                  that the recipient can choose from.
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: IVM0I3WNJJL0
                nullable: true
              created_at:
                description: Date the order has been created
                type: string
                format: date-time
              status:
                description: |
                  Execution status of a given order

                  <table>
                    <thead>
                      <tr>
                        <th>
                          Status
                        </th>
                        <th>
                          Description
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>
                          <code>
                            CANCELED
                          </code>
                        </td>
                        <td>
                          The order and all of its rewards were canceled.
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <code>
                            CART
                          </code>
                        </td>
                        <td>
                          The order has been created, but hasn't yet been processed.
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <code>
                            EXECUTED
                          </code>
                        </td>
                        <td>
                          The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <code>
                            FAILED
                          </code>
                        </td>
                        <td>
                          The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <code>
                            PENDING APPROVAL
                          </code>
                        </td>
                        <td>
                          The order has been created but needs approval to be executed.
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <code>
                            PENDING INTERNAL PAYMENT APPROVAL
                          </code>
                        </td>
                        <td>
                          The order has been created but it is under review and requires approval from our team.
                        </td>
                      </tr>

                    </tbody>
                  </table>
                type: string
                enum:
                  - CANCELED
                  - CART
                  - EXECUTED
                  - FAILED
                  - PENDING APPROVAL
                  - PENDING INTERNAL PAYMENT APPROVAL
              payment:
                description: >-
                  Cost breakdown of the order (cost of rewards + fees). Cost and
                  fees are always denominated in USD, independent from the
                  currency of the ordered rewards.

                  Note that this property will only appear for processed orders
                  (`status` is `EXECUTED`).
                type: object
                properties:
                  subtotal:
                    description: Total price of the order before fees (in USD)
                    type: number
                    format: double
                    minimum: 0
                    example: 50
                  total:
                    description: Total price of the order including fees (in USD)
                    type: number
                    format: double
                    minimum: 0
                    example: 52.5
                  fees:
                    description: Fees for the order (in USD)
                    type: number
                    format: double
                    minimum: 0
                    example: 2.5
                  refund:
                    description: >
                      Breakdown of the order refunds (total amount in USD,
                      independent from the currency of the ordered rewards).

                      Note that this property will only appear for canceled
                      orders or orders with canceled rewards.
                    type: object
                    properties:
                      total:
                        description: Total amount of the order refunds (in USD)
                        type: number
                        format: double
                        minimum: 0
                        example: 52.5
                    required:
                      - total
                  channel:
                    description: Name of the channel in which the order was created
                    type: string
                    enum:
                      - UI
                      - API
                      - EMBED
                      - DECIPHER
                      - QUALTRICS
                      - TYPEFORM
                      - SURVEY MONKEY
              invoice_id:
                description: The ID for the invoice associated with this order
                type: string
                example: 2E59A82B-0001
              reward:
                description: >
                  A single reward, sent to a recipient. A reward is always part
                  of an order.


                  Either `products` or `campaign_id` must be specified.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the reward
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  order_id:
                    description: Tremendous ID of the order this reward is part of.
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  created_at:
                    description: Date the reward was created
                    type: string
                    format: date-time
                  value:
                    type: object
                    properties:
                      denomination:
                        description: Amount of the reward
                        type: number
                        format: double
                      currency_code:
                        description: Currency of the reward
                        type: string
                        enum:
                          - USD
                          - CAD
                          - EUR
                          - AED
                          - AFN
                          - ALL
                          - AMD
                          - ARS
                          - AUD
                          - AZN
                          - BAM
                          - BDT
                          - BGN
                          - BHD
                          - BIF
                          - BND
                          - BOB
                          - BRL
                          - BWP
                          - BYR
                          - BZD
                          - CDF
                          - CHF
                          - CLP
                          - CNY
                          - COP
                          - CRC
                          - CVE
                          - CZK
                          - DJF
                          - DKK
                          - DOP
                          - DZD
                          - EEK
                          - EGP
                          - ERN
                          - ETB
                          - GBP
                          - GEL
                          - GHS
                          - GNF
                          - GTQ
                          - HKD
                          - HNL
                          - HRK
                          - HUF
                          - IDR
                          - ILS
                          - INR
                          - IQD
                          - IRR
                          - ISK
                          - JMD
                          - JOD
                          - JPY
                          - KES
                          - KHR
                          - KRW
                          - KWD
                          - KZT
                          - LBP
                          - LKR
                          - LTL
                          - LVL
                          - MAD
                          - MDL
                          - MGA
                          - MKD
                          - MMK
                          - MOP
                          - MUR
                          - MXN
                          - MYR
                          - MZN
                          - NAD
                          - NGN
                          - NIO
                          - NOK
                          - NPR
                          - NZD
                          - OMR
                          - PAB
                          - PEN
                          - PHP
                          - PKR
                          - PLN
                          - PYG
                          - QAR
                          - RON
                          - RSD
                          - RUB
                          - RWF
                          - SAR
                          - SDG
                          - SEK
                          - SGD
                          - SOS
                          - SYP
                          - THB
                          - TND
                          - TOP
                          - TRY
                          - TTD
                          - TWD
                          - TZS
                          - UAH
                          - UGX
                          - UYU
                          - UZS
                          - VEF
                          - VND
                          - XAF
                          - XOF
                          - YER
                          - ZAR
                          - ZMK
                        example: USD
                    required:
                      - denomination
                      - currency_code
                    example:
                      denomination: 50
                      currency_code: USD
                  recipient:
                    description: Details of the recipient of the reward
                    type: object
                    properties:
                      name:
                        description: Name of the recipient
                        type: string
                        example: John Doe Jr.
                      email:
                        description: Email address of the recipient
                        type: string
                        example: john.doe@example.com
                      phone:
                        description: >-
                          Phone number of the recipient. For non-US phone
                          numbers, specify the country code (prefixed with +).
                        type: string
                        example: 123-456-7890
                  deliver_at:
                    description: >-
                      Timestamp of reward delivery within the next year. Note
                      that if date-time is provided, the time values will be
                      ignored.
                    type: string
                    format: date
                    pattern: YYYY-MM-DD
                    example: '2023-12-31'
                  custom_fields:
                    type: array
                    items:
                      description: >-
                        Reward custom data for searching, tracking or copy (see
                        [Adding custom fields to
                        orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                      type: object
                      properties:
                        id:
                          description: Tremendous ID of the custom field
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        value:
                          description: Value of the custom field
                          type: string
                          example: Hufflepuff
                          nullable: true
                        label:
                          description: Label of the custom field
                          type: string
                          example: harry_potter_house
                  delivery:
                    description: |
                      Details on how the reward is delivered to the recipient.
                    type: object
                    properties:
                      method:
                        description: |
                          How to deliver the reward to the recipient.

                          <table>
                            <thead>
                              <tr>
                                <th>Delivery Method</th>
                                <th>Description</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td><code>EMAIL</code></td>
                                <td>Deliver the reward to the recipient by email</td>
                              </tr>
                              <tr>
                                <td><code>LINK</code></td>
                                <td>
                                  <p>Deliver the reward to the recipient via a link.</p>
                                  <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                </td>
                              </tr>
                              <tr>
                                <td><code>PHONE</code></td>
                                <td>Deliver the reward to the recipient by SMS</td>
                              </tr>
                            </tbody>
                          </table>
                        type: string
                        enum:
                          - EMAIL
                          - LINK
                          - PHONE
                      status:
                        description: >
                          Current status of the delivery of the reward:


                          * `SCHEDULED` - Reward is scheduled for delivery and
                          will be delivered soon.

                          * `FAILED` - Delivery of reward failed (e.g. email
                          bounced).

                          * `SUCCEEDED` - Reward was successfully delivered
                          (email or text message delivered or reward link
                          opened).

                          * `PENDING` - Delivery is pending but not yet
                          scheduled.
                        type: string
                        enum:
                          - SCHEDULED
                          - FAILED
                          - SUCCEEDED
                          - PENDING
                    required:
                      - method
                      - status
            required:
              - id
              - created_at
              - status
        total_count:
          description: The total number of orders across all pages
          type: integer
          example: 1
    OrdersGetList401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersGetList429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrdersGetList500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersCreateOrderResponse:
      type: object
      required:
        - order
      properties:
        order:
          description: An order wraps around the fulfilment of one or more rewards.
          type: object
          properties:
            id:
              description: Tremendous ID of the order
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            external_id:
              description: >
                Reference for this order, supplied by the customer.


                When set, `external_id` makes order idempotent. All requests
                that use the same `external_id`

                after the initial order creation, will result in a response that
                returns the data of the

                initially created order. The response will have a `201` response
                code. These responses

                **fail** to create any further orders.


                It also allows for retrieving by `external_id` instead of `id`
                only.
              type: string
              nullable: true
              example: Your-Individual-Identifier-for-This-Order
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: IVM0I3WNJJL0
              nullable: true
            created_at:
              description: Date the order has been created
              type: string
              format: date-time
            status:
              description: |
                Execution status of a given order

                <table>
                  <thead>
                    <tr>
                      <th>
                        Status
                      </th>
                      <th>
                        Description
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>
                        <code>
                          CANCELED
                        </code>
                      </td>
                      <td>
                        The order and all of its rewards were canceled.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          CART
                        </code>
                      </td>
                      <td>
                        The order has been created, but hasn't yet been processed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          EXECUTED
                        </code>
                      </td>
                      <td>
                        The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          FAILED
                        </code>
                      </td>
                      <td>
                        The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but needs approval to be executed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING INTERNAL PAYMENT APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but it is under review and requires approval from our team.
                      </td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - CANCELED
                - CART
                - EXECUTED
                - FAILED
                - PENDING APPROVAL
                - PENDING INTERNAL PAYMENT APPROVAL
            payment:
              description: >-
                Cost breakdown of the order (cost of rewards + fees). Cost and
                fees are always denominated in USD, independent from the
                currency of the ordered rewards.

                Note that this property will only appear for processed orders
                (`status` is `EXECUTED`).
              type: object
              properties:
                subtotal:
                  description: Total price of the order before fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 50
                total:
                  description: Total price of the order including fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 52.5
                fees:
                  description: Fees for the order (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 2.5
                refund:
                  description: >
                    Breakdown of the order refunds (total amount in USD,
                    independent from the currency of the ordered rewards).

                    Note that this property will only appear for canceled orders
                    or orders with canceled rewards.
                  type: object
                  properties:
                    total:
                      description: Total amount of the order refunds (in USD)
                      type: number
                      format: double
                      minimum: 0
                      example: 52.5
                  required:
                    - total
                channel:
                  description: Name of the channel in which the order was created
                  type: string
                  enum:
                    - UI
                    - API
                    - EMBED
                    - DECIPHER
                    - QUALTRICS
                    - TYPEFORM
                    - SURVEY MONKEY
            invoice_id:
              description: The ID for the invoice associated with this order
              type: string
              example: 2E59A82B-0001
            rewards:
              type: array
              minItems: 1
              items:
                description: >
                  A single reward, sent to a recipient. A reward is always part
                  of an order.


                  Either `products` or `campaign_id` must be specified.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the reward
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  order_id:
                    description: Tremendous ID of the order this reward is part of.
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  created_at:
                    description: Date the reward was created
                    type: string
                    format: date-time
                  value:
                    type: object
                    properties:
                      denomination:
                        description: Amount of the reward
                        type: number
                        format: double
                      currency_code:
                        description: Currency of the reward
                        type: string
                        enum:
                          - USD
                          - CAD
                          - EUR
                          - AED
                          - AFN
                          - ALL
                          - AMD
                          - ARS
                          - AUD
                          - AZN
                          - BAM
                          - BDT
                          - BGN
                          - BHD
                          - BIF
                          - BND
                          - BOB
                          - BRL
                          - BWP
                          - BYR
                          - BZD
                          - CDF
                          - CHF
                          - CLP
                          - CNY
                          - COP
                          - CRC
                          - CVE
                          - CZK
                          - DJF
                          - DKK
                          - DOP
                          - DZD
                          - EEK
                          - EGP
                          - ERN
                          - ETB
                          - GBP
                          - GEL
                          - GHS
                          - GNF
                          - GTQ
                          - HKD
                          - HNL
                          - HRK
                          - HUF
                          - IDR
                          - ILS
                          - INR
                          - IQD
                          - IRR
                          - ISK
                          - JMD
                          - JOD
                          - JPY
                          - KES
                          - KHR
                          - KRW
                          - KWD
                          - KZT
                          - LBP
                          - LKR
                          - LTL
                          - LVL
                          - MAD
                          - MDL
                          - MGA
                          - MKD
                          - MMK
                          - MOP
                          - MUR
                          - MXN
                          - MYR
                          - MZN
                          - NAD
                          - NGN
                          - NIO
                          - NOK
                          - NPR
                          - NZD
                          - OMR
                          - PAB
                          - PEN
                          - PHP
                          - PKR
                          - PLN
                          - PYG
                          - QAR
                          - RON
                          - RSD
                          - RUB
                          - RWF
                          - SAR
                          - SDG
                          - SEK
                          - SGD
                          - SOS
                          - SYP
                          - THB
                          - TND
                          - TOP
                          - TRY
                          - TTD
                          - TWD
                          - TZS
                          - UAH
                          - UGX
                          - UYU
                          - UZS
                          - VEF
                          - VND
                          - XAF
                          - XOF
                          - YER
                          - ZAR
                          - ZMK
                        example: USD
                    required:
                      - denomination
                      - currency_code
                    example:
                      denomination: 50
                      currency_code: USD
                  recipient:
                    description: Details of the recipient of the reward
                    type: object
                    properties:
                      name:
                        description: Name of the recipient
                        type: string
                        example: John Doe Jr.
                      email:
                        description: Email address of the recipient
                        type: string
                        example: john.doe@example.com
                      phone:
                        description: >-
                          Phone number of the recipient. For non-US phone
                          numbers, specify the country code (prefixed with +).
                        type: string
                        example: 123-456-7890
                  deliver_at:
                    description: >-
                      Timestamp of reward delivery within the next year. Note
                      that if date-time is provided, the time values will be
                      ignored.
                    type: string
                    format: date
                    pattern: YYYY-MM-DD
                    example: '2023-12-31'
                  custom_fields:
                    type: array
                    items:
                      description: >-
                        Reward custom data for searching, tracking or copy (see
                        [Adding custom fields to
                        orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                      type: object
                      properties:
                        id:
                          description: Tremendous ID of the custom field
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        value:
                          description: Value of the custom field
                          type: string
                          example: Hufflepuff
                          nullable: true
                        label:
                          description: Label of the custom field
                          type: string
                          example: harry_potter_house
                  delivery:
                    description: |
                      Details on how the reward is delivered to the recipient.
                    type: object
                    properties:
                      method:
                        description: |
                          How to deliver the reward to the recipient.

                          <table>
                            <thead>
                              <tr>
                                <th>Delivery Method</th>
                                <th>Description</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td><code>EMAIL</code></td>
                                <td>Deliver the reward to the recipient by email</td>
                              </tr>
                              <tr>
                                <td><code>LINK</code></td>
                                <td>
                                  <p>Deliver the reward to the recipient via a link.</p>
                                  <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                </td>
                              </tr>
                              <tr>
                                <td><code>PHONE</code></td>
                                <td>Deliver the reward to the recipient by SMS</td>
                              </tr>
                            </tbody>
                          </table>
                        type: string
                        enum:
                          - EMAIL
                          - LINK
                          - PHONE
                      status:
                        description: >
                          Current status of the delivery of the reward:


                          * `SCHEDULED` - Reward is scheduled for delivery and
                          will be delivered soon.

                          * `FAILED` - Delivery of reward failed (e.g. email
                          bounced).

                          * `SUCCEEDED` - Reward was successfully delivered
                          (email or text message delivered or reward link
                          opened).

                          * `PENDING` - Delivery is pending but not yet
                          scheduled.
                        type: string
                        enum:
                          - SCHEDULED
                          - FAILED
                          - SUCCEEDED
                          - PENDING
                      link:
                        description: >
                          Link to redeem the reward at. You need to deliver this
                          link to the recipient.


                          Only available for rewards for which the `method` for
                          delivery is set to `LINK`.
                        type: string
                        example: >-
                          https://testflight.tremendous.com/rewards/payout/z67jic92r
                    required:
                      - method
                      - status
          required:
            - id
            - created_at
            - status
    OrdersCreateOrder201Response:
      type: object
      required:
        - order
      properties:
        order:
          description: An order wraps around the fulfilment of one or more rewards.
          type: object
          properties:
            id:
              description: Tremendous ID of the order
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            external_id:
              description: >
                Reference for this order, supplied by the customer.


                When set, `external_id` makes order idempotent. All requests
                that use the same `external_id`

                after the initial order creation, will result in a response that
                returns the data of the

                initially created order. The response will have a `201` response
                code. These responses

                **fail** to create any further orders.


                It also allows for retrieving by `external_id` instead of `id`
                only.
              type: string
              nullable: true
              example: Your-Individual-Identifier-for-This-Order
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: IVM0I3WNJJL0
              nullable: true
            created_at:
              description: Date the order has been created
              type: string
              format: date-time
            status:
              description: |
                Execution status of a given order

                <table>
                  <thead>
                    <tr>
                      <th>
                        Status
                      </th>
                      <th>
                        Description
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>
                        <code>
                          CANCELED
                        </code>
                      </td>
                      <td>
                        The order and all of its rewards were canceled.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          CART
                        </code>
                      </td>
                      <td>
                        The order has been created, but hasn't yet been processed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          EXECUTED
                        </code>
                      </td>
                      <td>
                        The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          FAILED
                        </code>
                      </td>
                      <td>
                        The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but needs approval to be executed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING INTERNAL PAYMENT APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but it is under review and requires approval from our team.
                      </td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - CANCELED
                - CART
                - EXECUTED
                - FAILED
                - PENDING APPROVAL
                - PENDING INTERNAL PAYMENT APPROVAL
            payment:
              description: >-
                Cost breakdown of the order (cost of rewards + fees). Cost and
                fees are always denominated in USD, independent from the
                currency of the ordered rewards.

                Note that this property will only appear for processed orders
                (`status` is `EXECUTED`).
              type: object
              properties:
                subtotal:
                  description: Total price of the order before fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 50
                total:
                  description: Total price of the order including fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 52.5
                fees:
                  description: Fees for the order (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 2.5
                refund:
                  description: >
                    Breakdown of the order refunds (total amount in USD,
                    independent from the currency of the ordered rewards).

                    Note that this property will only appear for canceled orders
                    or orders with canceled rewards.
                  type: object
                  properties:
                    total:
                      description: Total amount of the order refunds (in USD)
                      type: number
                      format: double
                      minimum: 0
                      example: 52.5
                  required:
                    - total
                channel:
                  description: Name of the channel in which the order was created
                  type: string
                  enum:
                    - UI
                    - API
                    - EMBED
                    - DECIPHER
                    - QUALTRICS
                    - TYPEFORM
                    - SURVEY MONKEY
            invoice_id:
              description: The ID for the invoice associated with this order
              type: string
              example: 2E59A82B-0001
            reward:
              description: >
                A single reward, sent to a recipient. A reward is always part of
                an order.


                Either `products` or `campaign_id` must be specified.
              type: object
              properties:
                id:
                  description: Tremendous ID of the reward
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                order_id:
                  description: Tremendous ID of the order this reward is part of.
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                created_at:
                  description: Date the reward was created
                  type: string
                  format: date-time
                value:
                  type: object
                  properties:
                    denomination:
                      description: Amount of the reward
                      type: number
                      format: double
                    currency_code:
                      description: Currency of the reward
                      type: string
                      enum:
                        - USD
                        - CAD
                        - EUR
                        - AED
                        - AFN
                        - ALL
                        - AMD
                        - ARS
                        - AUD
                        - AZN
                        - BAM
                        - BDT
                        - BGN
                        - BHD
                        - BIF
                        - BND
                        - BOB
                        - BRL
                        - BWP
                        - BYR
                        - BZD
                        - CDF
                        - CHF
                        - CLP
                        - CNY
                        - COP
                        - CRC
                        - CVE
                        - CZK
                        - DJF
                        - DKK
                        - DOP
                        - DZD
                        - EEK
                        - EGP
                        - ERN
                        - ETB
                        - GBP
                        - GEL
                        - GHS
                        - GNF
                        - GTQ
                        - HKD
                        - HNL
                        - HRK
                        - HUF
                        - IDR
                        - ILS
                        - INR
                        - IQD
                        - IRR
                        - ISK
                        - JMD
                        - JOD
                        - JPY
                        - KES
                        - KHR
                        - KRW
                        - KWD
                        - KZT
                        - LBP
                        - LKR
                        - LTL
                        - LVL
                        - MAD
                        - MDL
                        - MGA
                        - MKD
                        - MMK
                        - MOP
                        - MUR
                        - MXN
                        - MYR
                        - MZN
                        - NAD
                        - NGN
                        - NIO
                        - NOK
                        - NPR
                        - NZD
                        - OMR
                        - PAB
                        - PEN
                        - PHP
                        - PKR
                        - PLN
                        - PYG
                        - QAR
                        - RON
                        - RSD
                        - RUB
                        - RWF
                        - SAR
                        - SDG
                        - SEK
                        - SGD
                        - SOS
                        - SYP
                        - THB
                        - TND
                        - TOP
                        - TRY
                        - TTD
                        - TWD
                        - TZS
                        - UAH
                        - UGX
                        - UYU
                        - UZS
                        - VEF
                        - VND
                        - XAF
                        - XOF
                        - YER
                        - ZAR
                        - ZMK
                      example: USD
                  required:
                    - denomination
                    - currency_code
                  example:
                    denomination: 50
                    currency_code: USD
                recipient:
                  description: Details of the recipient of the reward
                  type: object
                  properties:
                    name:
                      description: Name of the recipient
                      type: string
                      example: John Doe Jr.
                    email:
                      description: Email address of the recipient
                      type: string
                      example: john.doe@example.com
                    phone:
                      description: >-
                        Phone number of the recipient. For non-US phone numbers,
                        specify the country code (prefixed with +).
                      type: string
                      example: 123-456-7890
                deliver_at:
                  description: >-
                    Timestamp of reward delivery within the next year. Note that
                    if date-time is provided, the time values will be ignored.
                  type: string
                  format: date
                  pattern: YYYY-MM-DD
                  example: '2023-12-31'
                custom_fields:
                  type: array
                  items:
                    description: >-
                      Reward custom data for searching, tracking or copy (see
                      [Adding custom fields to
                      orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                    type: object
                    properties:
                      id:
                        description: Tremendous ID of the custom field
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      value:
                        description: Value of the custom field
                        type: string
                        example: Hufflepuff
                        nullable: true
                      label:
                        description: Label of the custom field
                        type: string
                        example: harry_potter_house
                delivery:
                  description: |
                    Details on how the reward is delivered to the recipient.
                  type: object
                  properties:
                    method:
                      description: |
                        How to deliver the reward to the recipient.

                        <table>
                          <thead>
                            <tr>
                              <th>Delivery Method</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><code>EMAIL</code></td>
                              <td>Deliver the reward to the recipient by email</td>
                            </tr>
                            <tr>
                              <td><code>LINK</code></td>
                              <td>
                                <p>Deliver the reward to the recipient via a link.</p>
                                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                              </td>
                            </tr>
                            <tr>
                              <td><code>PHONE</code></td>
                              <td>Deliver the reward to the recipient by SMS</td>
                            </tr>
                          </tbody>
                        </table>
                      type: string
                      enum:
                        - EMAIL
                        - LINK
                        - PHONE
                    status:
                      description: >
                        Current status of the delivery of the reward:


                        * `SCHEDULED` - Reward is scheduled for delivery and
                        will be delivered soon.

                        * `FAILED` - Delivery of reward failed (e.g. email
                        bounced).

                        * `SUCCEEDED` - Reward was successfully delivered (email
                        or text message delivered or reward link opened).

                        * `PENDING` - Delivery is pending but not yet scheduled.
                      type: string
                      enum:
                        - SCHEDULED
                        - FAILED
                        - SUCCEEDED
                        - PENDING
                  required:
                    - method
                    - status
          required:
            - id
            - created_at
            - status
    OrdersCreateOrder202Response:
      type: object
      required:
        - order
      properties:
        order:
          description: An order wraps around the fulfilment of one or more rewards.
          type: object
          properties:
            id:
              description: Tremendous ID of the order
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            external_id:
              description: >
                Reference for this order, supplied by the customer.


                When set, `external_id` makes order idempotent. All requests
                that use the same `external_id`

                after the initial order creation, will result in a response that
                returns the data of the

                initially created order. The response will have a `201` response
                code. These responses

                **fail** to create any further orders.


                It also allows for retrieving by `external_id` instead of `id`
                only.
              type: string
              nullable: true
              example: Your-Individual-Identifier-for-This-Order
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: IVM0I3WNJJL0
              nullable: true
            created_at:
              description: Date the order has been created
              type: string
              format: date-time
            status:
              description: |
                Execution status of a given order

                <table>
                  <thead>
                    <tr>
                      <th>
                        Status
                      </th>
                      <th>
                        Description
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>
                        <code>
                          CANCELED
                        </code>
                      </td>
                      <td>
                        The order and all of its rewards were canceled.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          CART
                        </code>
                      </td>
                      <td>
                        The order has been created, but hasn't yet been processed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          EXECUTED
                        </code>
                      </td>
                      <td>
                        The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          FAILED
                        </code>
                      </td>
                      <td>
                        The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but needs approval to be executed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING INTERNAL PAYMENT APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but it is under review and requires approval from our team.
                      </td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - CANCELED
                - CART
                - EXECUTED
                - FAILED
                - PENDING APPROVAL
                - PENDING INTERNAL PAYMENT APPROVAL
            payment:
              description: >-
                Cost breakdown of the order (cost of rewards + fees). Cost and
                fees are always denominated in USD, independent from the
                currency of the ordered rewards.

                Note that this property will only appear for processed orders
                (`status` is `EXECUTED`).
              type: object
              properties:
                subtotal:
                  description: Total price of the order before fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 50
                total:
                  description: Total price of the order including fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 52.5
                fees:
                  description: Fees for the order (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 2.5
                refund:
                  description: >
                    Breakdown of the order refunds (total amount in USD,
                    independent from the currency of the ordered rewards).

                    Note that this property will only appear for canceled orders
                    or orders with canceled rewards.
                  type: object
                  properties:
                    total:
                      description: Total amount of the order refunds (in USD)
                      type: number
                      format: double
                      minimum: 0
                      example: 52.5
                  required:
                    - total
                channel:
                  description: Name of the channel in which the order was created
                  type: string
                  enum:
                    - UI
                    - API
                    - EMBED
                    - DECIPHER
                    - QUALTRICS
                    - TYPEFORM
                    - SURVEY MONKEY
            invoice_id:
              description: The ID for the invoice associated with this order
              type: string
              example: 2E59A82B-0001
            rewards:
              type: array
              minItems: 1
              items:
                description: >
                  A single reward, sent to a recipient. A reward is always part
                  of an order.


                  Either `products` or `campaign_id` must be specified.
                type: object
                properties:
                  id:
                    description: Tremendous ID of the reward
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  order_id:
                    description: Tremendous ID of the order this reward is part of.
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                  created_at:
                    description: Date the reward was created
                    type: string
                    format: date-time
                  value:
                    type: object
                    properties:
                      denomination:
                        description: Amount of the reward
                        type: number
                        format: double
                      currency_code:
                        description: Currency of the reward
                        type: string
                        enum:
                          - USD
                          - CAD
                          - EUR
                          - AED
                          - AFN
                          - ALL
                          - AMD
                          - ARS
                          - AUD
                          - AZN
                          - BAM
                          - BDT
                          - BGN
                          - BHD
                          - BIF
                          - BND
                          - BOB
                          - BRL
                          - BWP
                          - BYR
                          - BZD
                          - CDF
                          - CHF
                          - CLP
                          - CNY
                          - COP
                          - CRC
                          - CVE
                          - CZK
                          - DJF
                          - DKK
                          - DOP
                          - DZD
                          - EEK
                          - EGP
                          - ERN
                          - ETB
                          - GBP
                          - GEL
                          - GHS
                          - GNF
                          - GTQ
                          - HKD
                          - HNL
                          - HRK
                          - HUF
                          - IDR
                          - ILS
                          - INR
                          - IQD
                          - IRR
                          - ISK
                          - JMD
                          - JOD
                          - JPY
                          - KES
                          - KHR
                          - KRW
                          - KWD
                          - KZT
                          - LBP
                          - LKR
                          - LTL
                          - LVL
                          - MAD
                          - MDL
                          - MGA
                          - MKD
                          - MMK
                          - MOP
                          - MUR
                          - MXN
                          - MYR
                          - MZN
                          - NAD
                          - NGN
                          - NIO
                          - NOK
                          - NPR
                          - NZD
                          - OMR
                          - PAB
                          - PEN
                          - PHP
                          - PKR
                          - PLN
                          - PYG
                          - QAR
                          - RON
                          - RSD
                          - RUB
                          - RWF
                          - SAR
                          - SDG
                          - SEK
                          - SGD
                          - SOS
                          - SYP
                          - THB
                          - TND
                          - TOP
                          - TRY
                          - TTD
                          - TWD
                          - TZS
                          - UAH
                          - UGX
                          - UYU
                          - UZS
                          - VEF
                          - VND
                          - XAF
                          - XOF
                          - YER
                          - ZAR
                          - ZMK
                        example: USD
                    required:
                      - denomination
                      - currency_code
                    example:
                      denomination: 50
                      currency_code: USD
                  recipient:
                    description: Details of the recipient of the reward
                    type: object
                    properties:
                      name:
                        description: Name of the recipient
                        type: string
                        example: John Doe Jr.
                      email:
                        description: Email address of the recipient
                        type: string
                        example: john.doe@example.com
                      phone:
                        description: >-
                          Phone number of the recipient. For non-US phone
                          numbers, specify the country code (prefixed with +).
                        type: string
                        example: 123-456-7890
                  deliver_at:
                    description: >-
                      Timestamp of reward delivery within the next year. Note
                      that if date-time is provided, the time values will be
                      ignored.
                    type: string
                    format: date
                    pattern: YYYY-MM-DD
                    example: '2023-12-31'
                  custom_fields:
                    type: array
                    items:
                      description: >-
                        Reward custom data for searching, tracking or copy (see
                        [Adding custom fields to
                        orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                      type: object
                      properties:
                        id:
                          description: Tremendous ID of the custom field
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        value:
                          description: Value of the custom field
                          type: string
                          example: Hufflepuff
                          nullable: true
                        label:
                          description: Label of the custom field
                          type: string
                          example: harry_potter_house
                  delivery:
                    description: |
                      Details on how the reward is delivered to the recipient.
                    type: object
                    properties:
                      method:
                        description: |
                          How to deliver the reward to the recipient.

                          <table>
                            <thead>
                              <tr>
                                <th>Delivery Method</th>
                                <th>Description</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td><code>EMAIL</code></td>
                                <td>Deliver the reward to the recipient by email</td>
                              </tr>
                              <tr>
                                <td><code>LINK</code></td>
                                <td>
                                  <p>Deliver the reward to the recipient via a link.</p>
                                  <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                </td>
                              </tr>
                              <tr>
                                <td><code>PHONE</code></td>
                                <td>Deliver the reward to the recipient by SMS</td>
                              </tr>
                            </tbody>
                          </table>
                        type: string
                        enum:
                          - EMAIL
                          - LINK
                          - PHONE
                      status:
                        description: >
                          Current status of the delivery of the reward:


                          * `SCHEDULED` - Reward is scheduled for delivery and
                          will be delivered soon.

                          * `FAILED` - Delivery of reward failed (e.g. email
                          bounced).

                          * `SUCCEEDED` - Reward was successfully delivered
                          (email or text message delivered or reward link
                          opened).

                          * `PENDING` - Delivery is pending but not yet
                          scheduled.
                        type: string
                        enum:
                          - SCHEDULED
                          - FAILED
                          - SUCCEEDED
                          - PENDING
                      link:
                        description: >
                          Link to redeem the reward at. You need to deliver this
                          link to the recipient.


                          Only available for rewards for which the `method` for
                          delivery is set to `LINK`.
                        type: string
                        example: >-
                          https://testflight.tremendous.com/rewards/payout/z67jic92r
                    required:
                      - method
                      - status
          required:
            - id
            - created_at
            - status
    OrdersCreateOrder400Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    OrdersCreateOrder401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersCreateOrder402Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersCreateOrder422Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    OrdersCreateOrder429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrdersCreateOrder500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersGetOrderByIdResponse:
      type: object
      required:
        - order
      properties:
        order:
          description: An order wraps around the fulfilment of one or more rewards.
          type: object
          properties:
            id:
              description: Tremendous ID of the order
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            external_id:
              description: >
                Reference for this order, supplied by the customer.


                When set, `external_id` makes order idempotent. All requests
                that use the same `external_id`

                after the initial order creation, will result in a response that
                returns the data of the

                initially created order. The response will have a `201` response
                code. These responses

                **fail** to create any further orders.


                It also allows for retrieving by `external_id` instead of `id`
                only.
              type: string
              nullable: true
              example: Your-Individual-Identifier-for-This-Order
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: IVM0I3WNJJL0
              nullable: true
            created_at:
              description: Date the order has been created
              type: string
              format: date-time
            status:
              description: |
                Execution status of a given order

                <table>
                  <thead>
                    <tr>
                      <th>
                        Status
                      </th>
                      <th>
                        Description
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>
                        <code>
                          CANCELED
                        </code>
                      </td>
                      <td>
                        The order and all of its rewards were canceled.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          CART
                        </code>
                      </td>
                      <td>
                        The order has been created, but hasn't yet been processed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          EXECUTED
                        </code>
                      </td>
                      <td>
                        The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          FAILED
                        </code>
                      </td>
                      <td>
                        The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but needs approval to be executed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING INTERNAL PAYMENT APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but it is under review and requires approval from our team.
                      </td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - CANCELED
                - CART
                - EXECUTED
                - FAILED
                - PENDING APPROVAL
                - PENDING INTERNAL PAYMENT APPROVAL
            payment:
              description: >-
                Cost breakdown of the order (cost of rewards + fees). Cost and
                fees are always denominated in USD, independent from the
                currency of the ordered rewards.

                Note that this property will only appear for processed orders
                (`status` is `EXECUTED`).
              type: object
              properties:
                subtotal:
                  description: Total price of the order before fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 50
                total:
                  description: Total price of the order including fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 52.5
                fees:
                  description: Fees for the order (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 2.5
                refund:
                  description: >
                    Breakdown of the order refunds (total amount in USD,
                    independent from the currency of the ordered rewards).

                    Note that this property will only appear for canceled orders
                    or orders with canceled rewards.
                  type: object
                  properties:
                    total:
                      description: Total amount of the order refunds (in USD)
                      type: number
                      format: double
                      minimum: 0
                      example: 52.5
                  required:
                    - total
                channel:
                  description: Name of the channel in which the order was created
                  type: string
                  enum:
                    - UI
                    - API
                    - EMBED
                    - DECIPHER
                    - QUALTRICS
                    - TYPEFORM
                    - SURVEY MONKEY
            invoice_id:
              description: The ID for the invoice associated with this order
              type: string
              example: 2E59A82B-0001
            reward:
              description: >
                A single reward, sent to a recipient. A reward is always part of
                an order.


                Either `products` or `campaign_id` must be specified.
              type: object
              properties:
                id:
                  description: Tremendous ID of the reward
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                order_id:
                  description: Tremendous ID of the order this reward is part of.
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                created_at:
                  description: Date the reward was created
                  type: string
                  format: date-time
                value:
                  type: object
                  properties:
                    denomination:
                      description: Amount of the reward
                      type: number
                      format: double
                    currency_code:
                      description: Currency of the reward
                      type: string
                      enum:
                        - USD
                        - CAD
                        - EUR
                        - AED
                        - AFN
                        - ALL
                        - AMD
                        - ARS
                        - AUD
                        - AZN
                        - BAM
                        - BDT
                        - BGN
                        - BHD
                        - BIF
                        - BND
                        - BOB
                        - BRL
                        - BWP
                        - BYR
                        - BZD
                        - CDF
                        - CHF
                        - CLP
                        - CNY
                        - COP
                        - CRC
                        - CVE
                        - CZK
                        - DJF
                        - DKK
                        - DOP
                        - DZD
                        - EEK
                        - EGP
                        - ERN
                        - ETB
                        - GBP
                        - GEL
                        - GHS
                        - GNF
                        - GTQ
                        - HKD
                        - HNL
                        - HRK
                        - HUF
                        - IDR
                        - ILS
                        - INR
                        - IQD
                        - IRR
                        - ISK
                        - JMD
                        - JOD
                        - JPY
                        - KES
                        - KHR
                        - KRW
                        - KWD
                        - KZT
                        - LBP
                        - LKR
                        - LTL
                        - LVL
                        - MAD
                        - MDL
                        - MGA
                        - MKD
                        - MMK
                        - MOP
                        - MUR
                        - MXN
                        - MYR
                        - MZN
                        - NAD
                        - NGN
                        - NIO
                        - NOK
                        - NPR
                        - NZD
                        - OMR
                        - PAB
                        - PEN
                        - PHP
                        - PKR
                        - PLN
                        - PYG
                        - QAR
                        - RON
                        - RSD
                        - RUB
                        - RWF
                        - SAR
                        - SDG
                        - SEK
                        - SGD
                        - SOS
                        - SYP
                        - THB
                        - TND
                        - TOP
                        - TRY
                        - TTD
                        - TWD
                        - TZS
                        - UAH
                        - UGX
                        - UYU
                        - UZS
                        - VEF
                        - VND
                        - XAF
                        - XOF
                        - YER
                        - ZAR
                        - ZMK
                      example: USD
                  required:
                    - denomination
                    - currency_code
                  example:
                    denomination: 50
                    currency_code: USD
                recipient:
                  description: Details of the recipient of the reward
                  type: object
                  properties:
                    name:
                      description: Name of the recipient
                      type: string
                      example: John Doe Jr.
                    email:
                      description: Email address of the recipient
                      type: string
                      example: john.doe@example.com
                    phone:
                      description: >-
                        Phone number of the recipient. For non-US phone numbers,
                        specify the country code (prefixed with +).
                      type: string
                      example: 123-456-7890
                deliver_at:
                  description: >-
                    Timestamp of reward delivery within the next year. Note that
                    if date-time is provided, the time values will be ignored.
                  type: string
                  format: date
                  pattern: YYYY-MM-DD
                  example: '2023-12-31'
                custom_fields:
                  type: array
                  items:
                    description: >-
                      Reward custom data for searching, tracking or copy (see
                      [Adding custom fields to
                      orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                    type: object
                    properties:
                      id:
                        description: Tremendous ID of the custom field
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      value:
                        description: Value of the custom field
                        type: string
                        example: Hufflepuff
                        nullable: true
                      label:
                        description: Label of the custom field
                        type: string
                        example: harry_potter_house
                delivery:
                  description: |
                    Details on how the reward is delivered to the recipient.
                  type: object
                  properties:
                    method:
                      description: |
                        How to deliver the reward to the recipient.

                        <table>
                          <thead>
                            <tr>
                              <th>Delivery Method</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><code>EMAIL</code></td>
                              <td>Deliver the reward to the recipient by email</td>
                            </tr>
                            <tr>
                              <td><code>LINK</code></td>
                              <td>
                                <p>Deliver the reward to the recipient via a link.</p>
                                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                              </td>
                            </tr>
                            <tr>
                              <td><code>PHONE</code></td>
                              <td>Deliver the reward to the recipient by SMS</td>
                            </tr>
                          </tbody>
                        </table>
                      type: string
                      enum:
                        - EMAIL
                        - LINK
                        - PHONE
                    status:
                      description: >
                        Current status of the delivery of the reward:


                        * `SCHEDULED` - Reward is scheduled for delivery and
                        will be delivered soon.

                        * `FAILED` - Delivery of reward failed (e.g. email
                        bounced).

                        * `SUCCEEDED` - Reward was successfully delivered (email
                        or text message delivered or reward link opened).

                        * `PENDING` - Delivery is pending but not yet scheduled.
                      type: string
                      enum:
                        - SCHEDULED
                        - FAILED
                        - SUCCEEDED
                        - PENDING
                  required:
                    - method
                    - status
          required:
            - id
            - created_at
            - status
    OrdersGetOrderById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersGetOrderById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersGetOrderById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrdersGetOrderById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersApproveOrderByIdResponse:
      type: object
      required:
        - order
      properties:
        order:
          description: An order wraps around the fulfilment of one or more rewards.
          type: object
          properties:
            id:
              description: Tremendous ID of the order
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            external_id:
              description: >
                Reference for this order, supplied by the customer.


                When set, `external_id` makes order idempotent. All requests
                that use the same `external_id`

                after the initial order creation, will result in a response that
                returns the data of the

                initially created order. The response will have a `201` response
                code. These responses

                **fail** to create any further orders.


                It also allows for retrieving by `external_id` instead of `id`
                only.
              type: string
              nullable: true
              example: Your-Individual-Identifier-for-This-Order
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: IVM0I3WNJJL0
              nullable: true
            created_at:
              description: Date the order has been created
              type: string
              format: date-time
            status:
              description: |
                Execution status of a given order

                <table>
                  <thead>
                    <tr>
                      <th>
                        Status
                      </th>
                      <th>
                        Description
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>
                        <code>
                          CANCELED
                        </code>
                      </td>
                      <td>
                        The order and all of its rewards were canceled.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          CART
                        </code>
                      </td>
                      <td>
                        The order has been created, but hasn't yet been processed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          EXECUTED
                        </code>
                      </td>
                      <td>
                        The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          FAILED
                        </code>
                      </td>
                      <td>
                        The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but needs approval to be executed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING INTERNAL PAYMENT APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but it is under review and requires approval from our team.
                      </td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - CANCELED
                - CART
                - EXECUTED
                - FAILED
                - PENDING APPROVAL
                - PENDING INTERNAL PAYMENT APPROVAL
            payment:
              description: >-
                Cost breakdown of the order (cost of rewards + fees). Cost and
                fees are always denominated in USD, independent from the
                currency of the ordered rewards.

                Note that this property will only appear for processed orders
                (`status` is `EXECUTED`).
              type: object
              properties:
                subtotal:
                  description: Total price of the order before fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 50
                total:
                  description: Total price of the order including fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 52.5
                fees:
                  description: Fees for the order (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 2.5
                refund:
                  description: >
                    Breakdown of the order refunds (total amount in USD,
                    independent from the currency of the ordered rewards).

                    Note that this property will only appear for canceled orders
                    or orders with canceled rewards.
                  type: object
                  properties:
                    total:
                      description: Total amount of the order refunds (in USD)
                      type: number
                      format: double
                      minimum: 0
                      example: 52.5
                  required:
                    - total
                channel:
                  description: Name of the channel in which the order was created
                  type: string
                  enum:
                    - UI
                    - API
                    - EMBED
                    - DECIPHER
                    - QUALTRICS
                    - TYPEFORM
                    - SURVEY MONKEY
            invoice_id:
              description: The ID for the invoice associated with this order
              type: string
              example: 2E59A82B-0001
            reward:
              description: >
                A single reward, sent to a recipient. A reward is always part of
                an order.


                Either `products` or `campaign_id` must be specified.
              type: object
              properties:
                id:
                  description: Tremendous ID of the reward
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                order_id:
                  description: Tremendous ID of the order this reward is part of.
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                created_at:
                  description: Date the reward was created
                  type: string
                  format: date-time
                value:
                  type: object
                  properties:
                    denomination:
                      description: Amount of the reward
                      type: number
                      format: double
                    currency_code:
                      description: Currency of the reward
                      type: string
                      enum:
                        - USD
                        - CAD
                        - EUR
                        - AED
                        - AFN
                        - ALL
                        - AMD
                        - ARS
                        - AUD
                        - AZN
                        - BAM
                        - BDT
                        - BGN
                        - BHD
                        - BIF
                        - BND
                        - BOB
                        - BRL
                        - BWP
                        - BYR
                        - BZD
                        - CDF
                        - CHF
                        - CLP
                        - CNY
                        - COP
                        - CRC
                        - CVE
                        - CZK
                        - DJF
                        - DKK
                        - DOP
                        - DZD
                        - EEK
                        - EGP
                        - ERN
                        - ETB
                        - GBP
                        - GEL
                        - GHS
                        - GNF
                        - GTQ
                        - HKD
                        - HNL
                        - HRK
                        - HUF
                        - IDR
                        - ILS
                        - INR
                        - IQD
                        - IRR
                        - ISK
                        - JMD
                        - JOD
                        - JPY
                        - KES
                        - KHR
                        - KRW
                        - KWD
                        - KZT
                        - LBP
                        - LKR
                        - LTL
                        - LVL
                        - MAD
                        - MDL
                        - MGA
                        - MKD
                        - MMK
                        - MOP
                        - MUR
                        - MXN
                        - MYR
                        - MZN
                        - NAD
                        - NGN
                        - NIO
                        - NOK
                        - NPR
                        - NZD
                        - OMR
                        - PAB
                        - PEN
                        - PHP
                        - PKR
                        - PLN
                        - PYG
                        - QAR
                        - RON
                        - RSD
                        - RUB
                        - RWF
                        - SAR
                        - SDG
                        - SEK
                        - SGD
                        - SOS
                        - SYP
                        - THB
                        - TND
                        - TOP
                        - TRY
                        - TTD
                        - TWD
                        - TZS
                        - UAH
                        - UGX
                        - UYU
                        - UZS
                        - VEF
                        - VND
                        - XAF
                        - XOF
                        - YER
                        - ZAR
                        - ZMK
                      example: USD
                  required:
                    - denomination
                    - currency_code
                  example:
                    denomination: 50
                    currency_code: USD
                recipient:
                  description: Details of the recipient of the reward
                  type: object
                  properties:
                    name:
                      description: Name of the recipient
                      type: string
                      example: John Doe Jr.
                    email:
                      description: Email address of the recipient
                      type: string
                      example: john.doe@example.com
                    phone:
                      description: >-
                        Phone number of the recipient. For non-US phone numbers,
                        specify the country code (prefixed with +).
                      type: string
                      example: 123-456-7890
                deliver_at:
                  description: >-
                    Timestamp of reward delivery within the next year. Note that
                    if date-time is provided, the time values will be ignored.
                  type: string
                  format: date
                  pattern: YYYY-MM-DD
                  example: '2023-12-31'
                custom_fields:
                  type: array
                  items:
                    description: >-
                      Reward custom data for searching, tracking or copy (see
                      [Adding custom fields to
                      orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                    type: object
                    properties:
                      id:
                        description: Tremendous ID of the custom field
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      value:
                        description: Value of the custom field
                        type: string
                        example: Hufflepuff
                        nullable: true
                      label:
                        description: Label of the custom field
                        type: string
                        example: harry_potter_house
                delivery:
                  description: |
                    Details on how the reward is delivered to the recipient.
                  type: object
                  properties:
                    method:
                      description: |
                        How to deliver the reward to the recipient.

                        <table>
                          <thead>
                            <tr>
                              <th>Delivery Method</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><code>EMAIL</code></td>
                              <td>Deliver the reward to the recipient by email</td>
                            </tr>
                            <tr>
                              <td><code>LINK</code></td>
                              <td>
                                <p>Deliver the reward to the recipient via a link.</p>
                                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                              </td>
                            </tr>
                            <tr>
                              <td><code>PHONE</code></td>
                              <td>Deliver the reward to the recipient by SMS</td>
                            </tr>
                          </tbody>
                        </table>
                      type: string
                      enum:
                        - EMAIL
                        - LINK
                        - PHONE
                    status:
                      description: >
                        Current status of the delivery of the reward:


                        * `SCHEDULED` - Reward is scheduled for delivery and
                        will be delivered soon.

                        * `FAILED` - Delivery of reward failed (e.g. email
                        bounced).

                        * `SUCCEEDED` - Reward was successfully delivered (email
                        or text message delivered or reward link opened).

                        * `PENDING` - Delivery is pending but not yet scheduled.
                      type: string
                      enum:
                        - SCHEDULED
                        - FAILED
                        - SUCCEEDED
                        - PENDING
                  required:
                    - method
                    - status
          required:
            - id
            - created_at
            - status
    OrdersApproveOrderById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersApproveOrderById402Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersApproveOrderById403Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Unsupported operation for this reward.
          payload: {}
    OrdersApproveOrderById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersApproveOrderById422Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    OrdersApproveOrderById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrdersApproveOrderById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersRejectByIdResponse:
      type: object
      required:
        - order
      properties:
        order:
          description: An order wraps around the fulfilment of one or more rewards.
          type: object
          properties:
            id:
              description: Tremendous ID of the order
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            external_id:
              description: >
                Reference for this order, supplied by the customer.


                When set, `external_id` makes order idempotent. All requests
                that use the same `external_id`

                after the initial order creation, will result in a response that
                returns the data of the

                initially created order. The response will have a `201` response
                code. These responses

                **fail** to create any further orders.


                It also allows for retrieving by `external_id` instead of `id`
                only.
              type: string
              nullable: true
              example: Your-Individual-Identifier-for-This-Order
            campaign_id:
              description: >
                ID of the campaign in your account, that defines the available
                products (different gift cards, charity, etc.)

                that the recipient can choose from.
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: IVM0I3WNJJL0
              nullable: true
            created_at:
              description: Date the order has been created
              type: string
              format: date-time
            status:
              description: |
                Execution status of a given order

                <table>
                  <thead>
                    <tr>
                      <th>
                        Status
                      </th>
                      <th>
                        Description
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>
                        <code>
                          CANCELED
                        </code>
                      </td>
                      <td>
                        The order and all of its rewards were canceled.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          CART
                        </code>
                      </td>
                      <td>
                        The order has been created, but hasn't yet been processed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          EXECUTED
                        </code>
                      </td>
                      <td>
                        The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          FAILED
                        </code>
                      </td>
                      <td>
                        The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but needs approval to be executed.
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <code>
                          PENDING INTERNAL PAYMENT APPROVAL
                        </code>
                      </td>
                      <td>
                        The order has been created but it is under review and requires approval from our team.
                      </td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - CANCELED
                - CART
                - EXECUTED
                - FAILED
                - PENDING APPROVAL
                - PENDING INTERNAL PAYMENT APPROVAL
            payment:
              description: >-
                Cost breakdown of the order (cost of rewards + fees). Cost and
                fees are always denominated in USD, independent from the
                currency of the ordered rewards.

                Note that this property will only appear for processed orders
                (`status` is `EXECUTED`).
              type: object
              properties:
                subtotal:
                  description: Total price of the order before fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 50
                total:
                  description: Total price of the order including fees (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 52.5
                fees:
                  description: Fees for the order (in USD)
                  type: number
                  format: double
                  minimum: 0
                  example: 2.5
                refund:
                  description: >
                    Breakdown of the order refunds (total amount in USD,
                    independent from the currency of the ordered rewards).

                    Note that this property will only appear for canceled orders
                    or orders with canceled rewards.
                  type: object
                  properties:
                    total:
                      description: Total amount of the order refunds (in USD)
                      type: number
                      format: double
                      minimum: 0
                      example: 52.5
                  required:
                    - total
                channel:
                  description: Name of the channel in which the order was created
                  type: string
                  enum:
                    - UI
                    - API
                    - EMBED
                    - DECIPHER
                    - QUALTRICS
                    - TYPEFORM
                    - SURVEY MONKEY
            invoice_id:
              description: The ID for the invoice associated with this order
              type: string
              example: 2E59A82B-0001
            reward:
              description: >
                A single reward, sent to a recipient. A reward is always part of
                an order.


                Either `products` or `campaign_id` must be specified.
              type: object
              properties:
                id:
                  description: Tremendous ID of the reward
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                order_id:
                  description: Tremendous ID of the order this reward is part of.
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                created_at:
                  description: Date the reward was created
                  type: string
                  format: date-time
                value:
                  type: object
                  properties:
                    denomination:
                      description: Amount of the reward
                      type: number
                      format: double
                    currency_code:
                      description: Currency of the reward
                      type: string
                      enum:
                        - USD
                        - CAD
                        - EUR
                        - AED
                        - AFN
                        - ALL
                        - AMD
                        - ARS
                        - AUD
                        - AZN
                        - BAM
                        - BDT
                        - BGN
                        - BHD
                        - BIF
                        - BND
                        - BOB
                        - BRL
                        - BWP
                        - BYR
                        - BZD
                        - CDF
                        - CHF
                        - CLP
                        - CNY
                        - COP
                        - CRC
                        - CVE
                        - CZK
                        - DJF
                        - DKK
                        - DOP
                        - DZD
                        - EEK
                        - EGP
                        - ERN
                        - ETB
                        - GBP
                        - GEL
                        - GHS
                        - GNF
                        - GTQ
                        - HKD
                        - HNL
                        - HRK
                        - HUF
                        - IDR
                        - ILS
                        - INR
                        - IQD
                        - IRR
                        - ISK
                        - JMD
                        - JOD
                        - JPY
                        - KES
                        - KHR
                        - KRW
                        - KWD
                        - KZT
                        - LBP
                        - LKR
                        - LTL
                        - LVL
                        - MAD
                        - MDL
                        - MGA
                        - MKD
                        - MMK
                        - MOP
                        - MUR
                        - MXN
                        - MYR
                        - MZN
                        - NAD
                        - NGN
                        - NIO
                        - NOK
                        - NPR
                        - NZD
                        - OMR
                        - PAB
                        - PEN
                        - PHP
                        - PKR
                        - PLN
                        - PYG
                        - QAR
                        - RON
                        - RSD
                        - RUB
                        - RWF
                        - SAR
                        - SDG
                        - SEK
                        - SGD
                        - SOS
                        - SYP
                        - THB
                        - TND
                        - TOP
                        - TRY
                        - TTD
                        - TWD
                        - TZS
                        - UAH
                        - UGX
                        - UYU
                        - UZS
                        - VEF
                        - VND
                        - XAF
                        - XOF
                        - YER
                        - ZAR
                        - ZMK
                      example: USD
                  required:
                    - denomination
                    - currency_code
                  example:
                    denomination: 50
                    currency_code: USD
                recipient:
                  description: Details of the recipient of the reward
                  type: object
                  properties:
                    name:
                      description: Name of the recipient
                      type: string
                      example: John Doe Jr.
                    email:
                      description: Email address of the recipient
                      type: string
                      example: john.doe@example.com
                    phone:
                      description: >-
                        Phone number of the recipient. For non-US phone numbers,
                        specify the country code (prefixed with +).
                      type: string
                      example: 123-456-7890
                deliver_at:
                  description: >-
                    Timestamp of reward delivery within the next year. Note that
                    if date-time is provided, the time values will be ignored.
                  type: string
                  format: date
                  pattern: YYYY-MM-DD
                  example: '2023-12-31'
                custom_fields:
                  type: array
                  items:
                    description: >-
                      Reward custom data for searching, tracking or copy (see
                      [Adding custom fields to
                      orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                    type: object
                    properties:
                      id:
                        description: Tremendous ID of the custom field
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      value:
                        description: Value of the custom field
                        type: string
                        example: Hufflepuff
                        nullable: true
                      label:
                        description: Label of the custom field
                        type: string
                        example: harry_potter_house
                delivery:
                  description: |
                    Details on how the reward is delivered to the recipient.
                  type: object
                  properties:
                    method:
                      description: |
                        How to deliver the reward to the recipient.

                        <table>
                          <thead>
                            <tr>
                              <th>Delivery Method</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><code>EMAIL</code></td>
                              <td>Deliver the reward to the recipient by email</td>
                            </tr>
                            <tr>
                              <td><code>LINK</code></td>
                              <td>
                                <p>Deliver the reward to the recipient via a link.</p>
                                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                              </td>
                            </tr>
                            <tr>
                              <td><code>PHONE</code></td>
                              <td>Deliver the reward to the recipient by SMS</td>
                            </tr>
                          </tbody>
                        </table>
                      type: string
                      enum:
                        - EMAIL
                        - LINK
                        - PHONE
                    status:
                      description: >
                        Current status of the delivery of the reward:


                        * `SCHEDULED` - Reward is scheduled for delivery and
                        will be delivered soon.

                        * `FAILED` - Delivery of reward failed (e.g. email
                        bounced).

                        * `SUCCEEDED` - Reward was successfully delivered (email
                        or text message delivered or reward link opened).

                        * `PENDING` - Delivery is pending but not yet scheduled.
                      type: string
                      enum:
                        - SCHEDULED
                        - FAILED
                        - SUCCEEDED
                        - PENDING
                  required:
                    - method
                    - status
          required:
            - id
            - created_at
            - status
    OrdersRejectById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersRejectById403Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Unsupported operation for this reward.
          payload: {}
    OrdersRejectById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrdersRejectById422Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    OrdersRejectById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrdersRejectById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    ProductsGetListResponse:
      title: ListProductsResponse
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            description: >
              A product represents one way to payout a reward to it's recipient.
              Think:


              * Amazon.com gift card (ID: `OKMHM2X2OHYV`)

              * Donations to Save the Children (ID: `ESRNAD533W5A`)

              * Virtual Visa debit card (ID: `Q24BD9EZ332JT`)


              each of which is one specific product on Tremendous.


              > 📘 All available products

              >

              > See this [list](https://www.tremendous.com/catalog)


              Products can be limited in their availability to recipients by


              * geography (field `countries`)

              * currency (field `currencies`)

              * amount of the reward (field `skus`)
                * e.g. adidas gift cards accept any amount between 5 and 200 USD.

              See the description of each respective parameter for further
              details.
            type: object
            required:
              - id
              - name
              - description
              - category
              - disclosure
              - currency_codes
              - countries
              - images
            properties:
              description:
                description: >-
                  Detailed description of the product. Mostly used for products
                  with a `category` of `charities`.
                type: string
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              name:
                description: Name of the product
                type: string
              category:
                description: |
                  The category of this product

                  <table>
                    <thead>
                      <tr>
                        <th>Category</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>ach</code></td>
                        <td>Bank transfer to the recipient</td>
                      </tr>
                      <tr>
                        <td><code>charity</code></td>
                        <td>Donations to a charity</td>
                      </tr>
                      <tr>
                        <td><code>merchant_card</code></td>
                        <td>A gift card for a certain merchant (e.g. Amazon)</td>
                      </tr>
                      <tr>
                        <td><code>paypal</code></td>
                        <td>Payout via PayPal</td>
                      </tr>
                      <tr>
                        <td><code>venmo</code></td>
                        <td>Payout via Venmo</td>
                      </tr>
                      <tr>
                        <td><code>visa_card</code></td>
                        <td>Payout in form of a Visa debit card</td>
                      </tr>
                    </tbody>
                  </table>
                type: string
                enum:
                  - ach
                  - charity
                  - merchant_card
                  - paypal
                  - venmo
                  - visa_card
                example: charities
              disclosure:
                description: Legal disclosures for this product. Can be in HTML format.
                type: string
                example: >-
                  <ul><li><p>This card may not be exchanged for
                  cash.</p></li><li><p>…</p></li></ul>
              skus:
                description: >
                  Products may are restricted in their usage based on the amount
                  of the reward. The `skus` array defines bands of denominations
                  in which this product may be used for payouts.
                type: array
                items:
                  type: object
                  required:
                    - min
                    - max
                  properties:
                    min:
                      description: >-
                        Minimal denomination that this product supports (in the
                        product's currency)
                      type: number
                      minimum: 0
                      example: 20
                    max:
                      description: >-
                        Maximum denomination that this product supports (in the
                        product's currency)
                      type: number
                      minimum: 0
                      example: 100
                  example:
                    - min: 20
                      max: 100
                  minItems: 0
              currency_codes:
                description: Available currencies for this product
                type: array
                minItems: 1
                items:
                  type: string
                  enum:
                    - USD
                    - CAD
                    - EUR
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ARS
                    - AUD
                    - AZN
                    - BAM
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BND
                    - BOB
                    - BRL
                    - BWP
                    - BYR
                    - BZD
                    - CDF
                    - CHF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DZD
                    - EEK
                    - EGP
                    - ERN
                    - ETB
                    - GBP
                    - GEL
                    - GHS
                    - GNF
                    - GTQ
                    - HKD
                    - HNL
                    - HRK
                    - HUF
                    - IDR
                    - ILS
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KHR
                    - KRW
                    - KWD
                    - KZT
                    - LBP
                    - LKR
                    - LTL
                    - LVL
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MOP
                    - MUR
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SDG
                    - SEK
                    - SGD
                    - SOS
                    - SYP
                    - THB
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - XAF
                    - XOF
                    - YER
                    - ZAR
                    - ZMK
                  example: USD
              countries:
                description: >-
                  List of countries in which this product is available to
                  recipients.
                type: array
                items:
                  type: object
                  required:
                    - abbr
                  properties:
                    abbr:
                      description: ISO 3166 country code
                      type: string
                      example: US
                minItems: 1
                example:
                  - abbr: US
              images:
                description: >-
                  List of product images associated with this product (e.g.
                  logos or images of the gift cards)
                type: array
                items:
                  type: object
                  properties:
                    src:
                      description: URL to this image
                      type: string
                      format: uri
                    type:
                      description: Type of image
                      type: string
                      enum:
                        - card
                        - logo
                  required:
                    - src
                    - type
                minItems: 0
                example:
                  - src: https://example.com/some-logo.jpg
                    type: logo
    ProductsGetList401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    ProductsGetList429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    ProductsGetList500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    ProductsGetByIdResponse:
      title: GetProductResponse
      type: object
      required:
        - product
      properties:
        product:
          description: >
            A product represents one way to payout a reward to it's recipient.
            Think:


            * Amazon.com gift card (ID: `OKMHM2X2OHYV`)

            * Donations to Save the Children (ID: `ESRNAD533W5A`)

            * Virtual Visa debit card (ID: `Q24BD9EZ332JT`)


            each of which is one specific product on Tremendous.


            > 📘 All available products

            >

            > See this [list](https://www.tremendous.com/catalog)


            Products can be limited in their availability to recipients by


            * geography (field `countries`)

            * currency (field `currencies`)

            * amount of the reward (field `skus`)
              * e.g. adidas gift cards accept any amount between 5 and 200 USD.

            See the description of each respective parameter for further
            details.
          type: object
          required:
            - id
            - name
            - description
            - category
            - disclosure
            - currency_codes
            - countries
            - images
          properties:
            description:
              description: >-
                Detailed description of the product. Mostly used for products
                with a `category` of `charities`.
              type: string
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            name:
              description: Name of the product
              type: string
            category:
              description: |
                The category of this product

                <table>
                  <thead>
                    <tr>
                      <th>Category</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>ach</code></td>
                      <td>Bank transfer to the recipient</td>
                    </tr>
                    <tr>
                      <td><code>charity</code></td>
                      <td>Donations to a charity</td>
                    </tr>
                    <tr>
                      <td><code>merchant_card</code></td>
                      <td>A gift card for a certain merchant (e.g. Amazon)</td>
                    </tr>
                    <tr>
                      <td><code>paypal</code></td>
                      <td>Payout via PayPal</td>
                    </tr>
                    <tr>
                      <td><code>venmo</code></td>
                      <td>Payout via Venmo</td>
                    </tr>
                    <tr>
                      <td><code>visa_card</code></td>
                      <td>Payout in form of a Visa debit card</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - ach
                - charity
                - merchant_card
                - paypal
                - venmo
                - visa_card
              example: charities
            disclosure:
              description: Legal disclosures for this product. Can be in HTML format.
              type: string
              example: >-
                <ul><li><p>This card may not be exchanged for
                cash.</p></li><li><p>…</p></li></ul>
            skus:
              description: >
                Products may are restricted in their usage based on the amount
                of the reward. The `skus` array defines bands of denominations
                in which this product may be used for payouts.
              type: array
              items:
                type: object
                required:
                  - min
                  - max
                properties:
                  min:
                    description: >-
                      Minimal denomination that this product supports (in the
                      product's currency)
                    type: number
                    minimum: 0
                    example: 20
                  max:
                    description: >-
                      Maximum denomination that this product supports (in the
                      product's currency)
                    type: number
                    minimum: 0
                    example: 100
                example:
                  - min: 20
                    max: 100
                minItems: 0
            currency_codes:
              description: Available currencies for this product
              type: array
              minItems: 1
              items:
                type: string
                enum:
                  - USD
                  - CAD
                  - EUR
                  - AED
                  - AFN
                  - ALL
                  - AMD
                  - ARS
                  - AUD
                  - AZN
                  - BAM
                  - BDT
                  - BGN
                  - BHD
                  - BIF
                  - BND
                  - BOB
                  - BRL
                  - BWP
                  - BYR
                  - BZD
                  - CDF
                  - CHF
                  - CLP
                  - CNY
                  - COP
                  - CRC
                  - CVE
                  - CZK
                  - DJF
                  - DKK
                  - DOP
                  - DZD
                  - EEK
                  - EGP
                  - ERN
                  - ETB
                  - GBP
                  - GEL
                  - GHS
                  - GNF
                  - GTQ
                  - HKD
                  - HNL
                  - HRK
                  - HUF
                  - IDR
                  - ILS
                  - INR
                  - IQD
                  - IRR
                  - ISK
                  - JMD
                  - JOD
                  - JPY
                  - KES
                  - KHR
                  - KRW
                  - KWD
                  - KZT
                  - LBP
                  - LKR
                  - LTL
                  - LVL
                  - MAD
                  - MDL
                  - MGA
                  - MKD
                  - MMK
                  - MOP
                  - MUR
                  - MXN
                  - MYR
                  - MZN
                  - NAD
                  - NGN
                  - NIO
                  - NOK
                  - NPR
                  - NZD
                  - OMR
                  - PAB
                  - PEN
                  - PHP
                  - PKR
                  - PLN
                  - PYG
                  - QAR
                  - RON
                  - RSD
                  - RUB
                  - RWF
                  - SAR
                  - SDG
                  - SEK
                  - SGD
                  - SOS
                  - SYP
                  - THB
                  - TND
                  - TOP
                  - TRY
                  - TTD
                  - TWD
                  - TZS
                  - UAH
                  - UGX
                  - UYU
                  - UZS
                  - VEF
                  - VND
                  - XAF
                  - XOF
                  - YER
                  - ZAR
                  - ZMK
                example: USD
            countries:
              description: >-
                List of countries in which this product is available to
                recipients.
              type: array
              items:
                type: object
                required:
                  - abbr
                properties:
                  abbr:
                    description: ISO 3166 country code
                    type: string
                    example: US
              minItems: 1
              example:
                - abbr: US
            images:
              description: >-
                List of product images associated with this product (e.g. logos
                or images of the gift cards)
              type: array
              items:
                type: object
                properties:
                  src:
                    description: URL to this image
                    type: string
                    format: uri
                  type:
                    description: Type of image
                    type: string
                    enum:
                      - card
                      - logo
                required:
                  - src
                  - type
              minItems: 0
              example:
                - src: https://example.com/some-logo.jpg
                  type: logo
    ProductsGetById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    ProductsGetById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    ProductsGetById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    ProductsGetById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    CampaignsGetAllResponse:
      type: object
      required:
        - campaigns
      properties:
        campaigns:
          type: array
          items:
            description: >
              With a campaign you can define the look & feel of how rewards are
              sent out.

              It also lets you set the available products (different gift cards,
              charity, etc.)

              recipients can choose from.


              > Note: Campaigns must be created from the Tremendous dashboard.

              >

              > • [Production Dashboard](https://app.tremendous.com)

              > • [Sandbox Dashboard](https://app.testflight.tremendous.com/)
            type: object
            required:
              - id
              - name
              - description
              - products
            properties:
              description:
                description: Description of the campaign
                type: string
                example: A campaign I use as the default in Tremendous"
                nullable: true
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              name:
                description: Name of the campaign
                type: string
                example: My Default Campaign
              products:
                description: >
                  List of IDs of products (different gift cards, charity, etc.)
                  that are available in this campaign.
                type: array
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                example:
                  - P3MR06THYM8R
                  - EFMULTF26PMR
    CampaignsGetAll401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    CampaignsGetAll429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    CampaignsGetAll500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    CampaignsGetByIdResponse:
      type: object
      required:
        - campaign
      properties:
        campaign:
          description: >
            With a campaign you can define the look & feel of how rewards are
            sent out.

            It also lets you set the available products (different gift cards,
            charity, etc.)

            recipients can choose from.


            > Note: Campaigns must be created from the Tremendous dashboard.

            >

            > • [Production Dashboard](https://app.tremendous.com)

            > • [Sandbox Dashboard](https://app.testflight.tremendous.com/)
          type: object
          required:
            - id
            - name
            - description
            - products
          properties:
            description:
              description: Description of the campaign
              type: string
              example: A campaign I use as the default in Tremendous"
              nullable: true
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            name:
              description: Name of the campaign
              type: string
              example: My Default Campaign
            products:
              description: >
                List of IDs of products (different gift cards, charity, etc.)
                that are available in this campaign.
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - P3MR06THYM8R
                - EFMULTF26PMR
    CampaignsGetById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    CampaignsGetById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    CampaignsGetById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    CampaignsGetById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FundingSourcesGetAllResponse:
      type: object
      required:
        - funding_sources
      properties:
        funding_sources:
          type: array
          items:
            description: ''
            type: object
            required:
              - id
              - method
              - meta
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              method:
                description: >
                  You can pay for rewards using different payment methods on
                  Tremendous:


                  <table>
                    <thead>
                      <tr>
                        <th>Payment Method</th>
                        <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>balance</code></td>
                        <td>Pre-funded balance in your Tremendous account to draw funds from to send rewards to recipients.</td>
                      </tr>
                      <tr>
                        <td><code>bank_account</code></td>
                        <td>Bank account to draw funds from to send rewards to recipients.</td>
                      </tr>
                      <tr>
                        <td><code>credit_card</code></td>
                        <td>Credit card to draw funds from to send rewards to recipients.</td>
                      </tr>
                      <tr>
                        <td><code>invoice</code></td>
                        <td>Send rewards to recipients and pay by invoice.</td>
                      </tr>

                    </tbody>
                  </table>
                type: string
                enum:
                  - balance
                  - bank_account
                  - credit_card
                  - invoice
                example: balance
              type:
                description: |
                  **Only available when `method` is set to `invoice`.**
                type: string
                enum:
                  - COMMERCIAL
                  - PRO_FORMA
                  - PREFUNDING_ONLY
                example: COMMERCIAL
              meta:
                type: object
                properties:
                  available_cents:
                    description: |
                      **Only available when `method` is set to `balance`.**

                      Available amount for this funding source (in Cents USD)
                    type: integer
                    example: 50000
                  pending_cents:
                    description: >
                      **Only available when `method` is set to `balance`.**


                      Funds that are already registered on your Tremendous
                      account but which have not yet been deposited in your
                      account (e.g. unpaid invoices) (in Cents USD).
                    type: integer
                    example: 25000
                  accountholder_name:
                    description: >
                      **Only available when `method` is set to `bank_account` or
                      `credit_card`.**


                      Name of the holder of the bank account or credit_card
                    type: string
                    example: Jane Doe
                  account_type:
                    description: |
                      **Only available when `method` is set to `bank_account`.**

                      Is this a checking or savings account
                    type: string
                    enum:
                      - checking
                      - savings
                    example: checking
                  bank_name:
                    description: |
                      **Only available when `method` is set to `bank_account`.**

                      Name of the bank
                    type: string
                    example: Bank of Fancyland
                    nullable: true
                  account_number_mask:
                    description: |
                      **Only available when `method` is set to `bank_account`.**

                      Last 4 digits of the account number
                    type: string
                    pattern: '[0-9]{4}'
                    example: '1234'
                  account_routing_mask:
                    description: |
                      **Only available when `method` is set to `bank_account`.**

                      Last 4 digits of the routing number
                    type: string
                    pattern: '[0-9]{4}'
                    example: '5678'
                  refundable:
                    description: |
                      **Only available when `method` is set to `bank_account`.**

                      Can refunds be deposited to this bank account
                    type: boolean
                    example: false
                  network:
                    description: |
                      **Only available when `method` is set to `credit_card`.**

                      Network of the credit card
                    type: string
                    enum:
                      - MasterCard
                      - Amex
                      - JCB
                      - Diner's Club
                      - visa
                      - discover
                      - laser
                      - elo
                      - maestro
                      - solo
                    example: Amex
                  last4:
                    description: |
                      **Only available when `method` is set to `credit_card`.**

                      Last 4 digits of the credit card number
                    type: string
                    pattern: '[0-9]{4}'
                    example: '1234'
                  expired:
                    description: |
                      **Only available when `method` is set to `credit_card`.**

                      Is this credit card expired
                    type: boolean
                    example: false
                  last_payment_failed_at:
                    description: >
                      **Only available when `method` is set to `bank_account` or
                      `credit_card`.**


                      Point in time when the last order failed using this bank
                      account or credit card as a funding source.
                    type: string
                    format: date-time
                    nullable: true
    FundingSourcesGetAll401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FundingSourcesGetAll429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    FundingSourcesGetAll500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FundingSourcesGetByIdResponse:
      type: object
      required:
        - funding_source
      properties:
        funding_source:
          description: ''
          type: object
          required:
            - id
            - method
            - meta
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            method:
              description: >
                You can pay for rewards using different payment methods on
                Tremendous:


                <table>
                  <thead>
                    <tr>
                      <th>Payment Method</th>
                      <th>Description</th>
                      </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>balance</code></td>
                      <td>Pre-funded balance in your Tremendous account to draw funds from to send rewards to recipients.</td>
                    </tr>
                    <tr>
                      <td><code>bank_account</code></td>
                      <td>Bank account to draw funds from to send rewards to recipients.</td>
                    </tr>
                    <tr>
                      <td><code>credit_card</code></td>
                      <td>Credit card to draw funds from to send rewards to recipients.</td>
                    </tr>
                    <tr>
                      <td><code>invoice</code></td>
                      <td>Send rewards to recipients and pay by invoice.</td>
                    </tr>

                  </tbody>
                </table>
              type: string
              enum:
                - balance
                - bank_account
                - credit_card
                - invoice
              example: balance
            type:
              description: |
                **Only available when `method` is set to `invoice`.**
              type: string
              enum:
                - COMMERCIAL
                - PRO_FORMA
                - PREFUNDING_ONLY
              example: COMMERCIAL
            meta:
              type: object
              properties:
                available_cents:
                  description: |
                    **Only available when `method` is set to `balance`.**

                    Available amount for this funding source (in Cents USD)
                  type: integer
                  example: 50000
                pending_cents:
                  description: >
                    **Only available when `method` is set to `balance`.**


                    Funds that are already registered on your Tremendous account
                    but which have not yet been deposited in your account (e.g.
                    unpaid invoices) (in Cents USD).
                  type: integer
                  example: 25000
                accountholder_name:
                  description: >
                    **Only available when `method` is set to `bank_account` or
                    `credit_card`.**


                    Name of the holder of the bank account or credit_card
                  type: string
                  example: Jane Doe
                account_type:
                  description: |
                    **Only available when `method` is set to `bank_account`.**

                    Is this a checking or savings account
                  type: string
                  enum:
                    - checking
                    - savings
                  example: checking
                bank_name:
                  description: |
                    **Only available when `method` is set to `bank_account`.**

                    Name of the bank
                  type: string
                  example: Bank of Fancyland
                  nullable: true
                account_number_mask:
                  description: |
                    **Only available when `method` is set to `bank_account`.**

                    Last 4 digits of the account number
                  type: string
                  pattern: '[0-9]{4}'
                  example: '1234'
                account_routing_mask:
                  description: |
                    **Only available when `method` is set to `bank_account`.**

                    Last 4 digits of the routing number
                  type: string
                  pattern: '[0-9]{4}'
                  example: '5678'
                refundable:
                  description: |
                    **Only available when `method` is set to `bank_account`.**

                    Can refunds be deposited to this bank account
                  type: boolean
                  example: false
                network:
                  description: |
                    **Only available when `method` is set to `credit_card`.**

                    Network of the credit card
                  type: string
                  enum:
                    - MasterCard
                    - Amex
                    - JCB
                    - Diner's Club
                    - visa
                    - discover
                    - laser
                    - elo
                    - maestro
                    - solo
                  example: Amex
                last4:
                  description: |
                    **Only available when `method` is set to `credit_card`.**

                    Last 4 digits of the credit card number
                  type: string
                  pattern: '[0-9]{4}'
                  example: '1234'
                expired:
                  description: |
                    **Only available when `method` is set to `credit_card`.**

                    Is this credit card expired
                  type: boolean
                  example: false
                last_payment_failed_at:
                  description: >
                    **Only available when `method` is set to `bank_account` or
                    `credit_card`.**


                    Point in time when the last order failed using this bank
                    account or credit card as a funding source.
                  type: string
                  format: date-time
                  nullable: true
    FundingSourcesGetById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FundingSourcesGetById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FundingSourcesGetById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    FundingSourcesGetById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetAllResponse:
      type: object
      required:
        - invoices
        - total_count
      properties:
        invoices:
          type: array
          items:
            description: >
              Invoices are instruments to fund your Tremendous account's
              balance.


              Invoices can be created by your organization programatically.

              Once we receive your payment, the invoice is marked as `PAID` and
              we add

              the respective funds to your account's balance.
            type: object
            required:
              - id
              - amount
              - status
              - created_at
              - paid_at
            properties:
              id:
                description: The invoice number
                type: string
                example: PPS-26873
              po_number:
                description: >-
                  Reference to the purchase order number within your
                  organization
                type: string
                nullable: true
                example: 123-PO-EE
              amount:
                description: Amount of the invoice in USD
                type: number
                format: double
                example: 50.35
              status:
                description: |
                  Status of this invoice

                  <table>
                    <thead>
                      <tr>
                        <th>Status</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>DELETED</code></td>
                        <td>Invoice has been deleted by your organization</td>
                      </tr>
                      <tr>
                        <td><code>PAID</code></td>
                        <td>Invoice has been paid by your organization</td>
                      </tr>
                      <tr>
                        <td><code>OPEN</code></td>
                        <td>Invoice has been created by your organization but has not been paid, yet</td>
                      </tr>
                    </tbody>
                  </table>
                type: string
                enum:
                  - DELETED
                  - PAID
                  - OPEN
                  - MARKED_AS_PAID
                example: PAID
              orders:
                description: >-
                  List of orders related to the invoice (it doesn't apply to
                  prefunding)
                type: array
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                example:
                  - ABC123456789
                  - DEF123456789
              rewards:
                description: >-
                  List of rewards related to the invoice (it doesn't apply to
                  prefunding)
                type: array
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                example:
                  - ABC123456789
                  - DEF123456789
              created_at:
                description: |
                  Timestamp of when the invoice has been created.
                type: string
                format: date
              paid_at:
                description: |
                  Timestamp of when the invoice has been paid.
                type: string
                format: date
                nullable: true
        total_count:
          description: The total number of invoices across all pages
          type: integer
          example: 1
    InvoicesGetAll401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetAll429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    InvoicesGetAll500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesCreateAndFundAccountBalanceResponse:
      type: object
      required:
        - invoice
      properties:
        invoice:
          description: >
            Invoices are instruments to fund your Tremendous account's balance.


            Invoices can be created by your organization programatically.

            Once we receive your payment, the invoice is marked as `PAID` and we
            add

            the respective funds to your account's balance.
          type: object
          required:
            - id
            - amount
            - status
            - created_at
            - paid_at
          properties:
            id:
              description: The invoice number
              type: string
              example: PPS-26873
            po_number:
              description: Reference to the purchase order number within your organization
              type: string
              nullable: true
              example: 123-PO-EE
            amount:
              description: Amount of the invoice in USD
              type: number
              format: double
              example: 50.35
            status:
              description: |
                Status of this invoice

                <table>
                  <thead>
                    <tr>
                      <th>Status</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>DELETED</code></td>
                      <td>Invoice has been deleted by your organization</td>
                    </tr>
                    <tr>
                      <td><code>PAID</code></td>
                      <td>Invoice has been paid by your organization</td>
                    </tr>
                    <tr>
                      <td><code>OPEN</code></td>
                      <td>Invoice has been created by your organization but has not been paid, yet</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - DELETED
                - PAID
                - OPEN
                - MARKED_AS_PAID
              example: PAID
            orders:
              description: >-
                List of orders related to the invoice (it doesn't apply to
                prefunding)
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - ABC123456789
                - DEF123456789
            rewards:
              description: >-
                List of rewards related to the invoice (it doesn't apply to
                prefunding)
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - ABC123456789
                - DEF123456789
            created_at:
              description: |
                Timestamp of when the invoice has been created.
              type: string
              format: date
            paid_at:
              description: |
                Timestamp of when the invoice has been paid.
              type: string
              format: date
              nullable: true
    InvoicesCreateAndFundAccountBalance400Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesCreateAndFundAccountBalance401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesCreateAndFundAccountBalance429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    InvoicesCreateAndFundAccountBalance500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesRemoveInvoiceResponse:
      type: object
      required:
        - invoice
      properties:
        invoice:
          description: >
            Invoices are instruments to fund your Tremendous account's balance.


            Invoices can be created by your organization programatically.

            Once we receive your payment, the invoice is marked as `PAID` and we
            add

            the respective funds to your account's balance.
          type: object
          required:
            - id
            - amount
            - status
            - created_at
            - paid_at
          properties:
            id:
              description: The invoice number
              type: string
              example: PPS-26873
            po_number:
              description: Reference to the purchase order number within your organization
              type: string
              nullable: true
              example: 123-PO-EE
            amount:
              description: Amount of the invoice in USD
              type: number
              format: double
              example: 50.35
            status:
              description: |
                Status of this invoice

                <table>
                  <thead>
                    <tr>
                      <th>Status</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>DELETED</code></td>
                      <td>Invoice has been deleted by your organization</td>
                    </tr>
                    <tr>
                      <td><code>PAID</code></td>
                      <td>Invoice has been paid by your organization</td>
                    </tr>
                    <tr>
                      <td><code>OPEN</code></td>
                      <td>Invoice has been created by your organization but has not been paid, yet</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - DELETED
                - PAID
                - OPEN
                - MARKED_AS_PAID
              example: PAID
            orders:
              description: >-
                List of orders related to the invoice (it doesn't apply to
                prefunding)
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - ABC123456789
                - DEF123456789
            rewards:
              description: >-
                List of rewards related to the invoice (it doesn't apply to
                prefunding)
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - ABC123456789
                - DEF123456789
            created_at:
              description: |
                Timestamp of when the invoice has been created.
              type: string
              format: date
            paid_at:
              description: |
                Timestamp of when the invoice has been paid.
              type: string
              format: date
              nullable: true
    InvoicesRemoveInvoice401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesRemoveInvoice404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesRemoveInvoice429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    InvoicesRemoveInvoice500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetByIdResponse:
      type: object
      required:
        - invoice
      properties:
        invoice:
          description: >
            Invoices are instruments to fund your Tremendous account's balance.


            Invoices can be created by your organization programatically.

            Once we receive your payment, the invoice is marked as `PAID` and we
            add

            the respective funds to your account's balance.
          type: object
          required:
            - id
            - amount
            - status
            - created_at
            - paid_at
          properties:
            id:
              description: The invoice number
              type: string
              example: PPS-26873
            po_number:
              description: Reference to the purchase order number within your organization
              type: string
              nullable: true
              example: 123-PO-EE
            amount:
              description: Amount of the invoice in USD
              type: number
              format: double
              example: 50.35
            status:
              description: |
                Status of this invoice

                <table>
                  <thead>
                    <tr>
                      <th>Status</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td><code>DELETED</code></td>
                      <td>Invoice has been deleted by your organization</td>
                    </tr>
                    <tr>
                      <td><code>PAID</code></td>
                      <td>Invoice has been paid by your organization</td>
                    </tr>
                    <tr>
                      <td><code>OPEN</code></td>
                      <td>Invoice has been created by your organization but has not been paid, yet</td>
                    </tr>
                  </tbody>
                </table>
              type: string
              enum:
                - DELETED
                - PAID
                - OPEN
                - MARKED_AS_PAID
              example: PAID
            orders:
              description: >-
                List of orders related to the invoice (it doesn't apply to
                prefunding)
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - ABC123456789
                - DEF123456789
            rewards:
              description: >-
                List of rewards related to the invoice (it doesn't apply to
                prefunding)
              type: array
              items:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              example:
                - ABC123456789
                - DEF123456789
            created_at:
              description: |
                Timestamp of when the invoice has been created.
              type: string
              format: date
            paid_at:
              description: |
                Timestamp of when the invoice has been paid.
              type: string
              format: date
              nullable: true
    InvoicesGetById401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetById404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetById429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    InvoicesGetById500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetPdfResponse:
      description: The PDF binary data
      type: string
      format: binary
    InvoicesGetPdf401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetPdf404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetPdf429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    InvoicesGetPdf500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetCsvResponse:
      description: The CSV text file
      type: string
      format: text
    InvoicesGetCsv400Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetCsv401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetCsv404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    InvoicesGetCsv429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    InvoicesGetCsv500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    BalanceTransactionsListAllResponse:
      type: object
      properties:
        invoices:
          type: array
          items:
            description: >
              A balance transaction represents a specific movement or change in
              an account's balance.
            type: object
            properties:
              description:
                description: A brief description of the transaction
                type: string
              created_at:
                description: Date that the transaction was created
                type: string
                format: date
              amount:
                description: Amount of the transaction in USD
                type: number
                format: double
                example: 50.35
              balance:
                description: >-
                  The updated total after the transaction. Note that this
                  running balance may be delayed and contain `null`.
                type: number
                format: double
                example: 92.48
              action:
                description: The action that was performed
                type: string
                example: Deposit
    BalanceTransactionsListAll401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    BalanceTransactionsListAll422Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    BalanceTransactionsListAll429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    BalanceTransactionsListAll500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsGetListResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            description: >
              Organizations are a way to separate different parts of your
              business within the same Tremendous account.

              Your root Tremendous account is an organization itself and can
              have multiple sub-organizations.


              You can assign users in your Tremendous team as members to any
              organization. Users can be members of multiple

              organizations at once.


              Each organizations can have it's own API key.
            type: object
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              name:
                description: Name of the organization
                type: string
                example: ACME Inc.
              website:
                description: URL of the website of that organization
                type: string
                format: uri
                example: https://www.example.com/some-org
              status:
                description: >-
                  Status of the organization. Organizations need to be approved
                  to be able to use them to send out rewards.
                type: string
                enum:
                  - PENDING
                  - APPROVED
                  - REJECTED
                example: APPROVED
              created_at:
                description: >
                  Timestamp of when the organization has been created.


                  *This field is only returned when creating an organization.*
                  It is not returned anymore when retrieving or listing
                  organizations.
                type: string
                format: date
                example: '2021-08-02'
            required:
              - name
              - website
    OrganizationsGetList401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsGetList429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrganizationsGetList500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsCreateNewOrganizationResponse:
      type: object
      properties:
        organization:
          description: >
            Organizations are a way to separate different parts of your business
            within the same Tremendous account.

            Your root Tremendous account is an organization itself and can have
            multiple sub-organizations.


            You can assign users in your Tremendous team as members to any
            organization. Users can be members of multiple

            organizations at once.


            Each organizations can have it's own API key.
          type: object
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            name:
              description: Name of the organization
              type: string
              example: ACME Inc.
            website:
              description: URL of the website of that organization
              type: string
              format: uri
              example: https://www.example.com/some-org
            status:
              description: >-
                Status of the organization. Organizations need to be approved to
                be able to use them to send out rewards.
              type: string
              enum:
                - PENDING
                - APPROVED
                - REJECTED
              example: APPROVED
            created_at:
              description: >
                Timestamp of when the organization has been created.


                *This field is only returned when creating an organization.* It
                is not returned anymore when retrieving or listing
                organizations.
              type: string
              format: date
              example: '2021-08-02'
            api_key:
              description: >
                The API key for the created organization.

                This property is only returned when `with_api_key` is set to
                `true`.
              type: string
          required:
            - name
            - website
    OrganizationsCreateNewOrganization400Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    OrganizationsCreateNewOrganization401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsCreateNewOrganization429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrganizationsCreateNewOrganization500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsGetOrganizationResponse:
      type: object
      properties:
        organization:
          description: >
            Organizations are a way to separate different parts of your business
            within the same Tremendous account.

            Your root Tremendous account is an organization itself and can have
            multiple sub-organizations.


            You can assign users in your Tremendous team as members to any
            organization. Users can be members of multiple

            organizations at once.


            Each organizations can have it's own API key.
          type: object
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            name:
              description: Name of the organization
              type: string
              example: ACME Inc.
            website:
              description: URL of the website of that organization
              type: string
              format: uri
              example: https://www.example.com/some-org
            status:
              description: >-
                Status of the organization. Organizations need to be approved to
                be able to use them to send out rewards.
              type: string
              enum:
                - PENDING
                - APPROVED
                - REJECTED
              example: APPROVED
            created_at:
              description: >
                Timestamp of when the organization has been created.


                *This field is only returned when creating an organization.* It
                is not returned anymore when retrieving or listing
                organizations.
              type: string
              format: date
              example: '2021-08-02'
          required:
            - name
            - website
    OrganizationsGetOrganization401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsGetOrganization404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsGetOrganization429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrganizationsGetOrganization500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsCreateApiKeyResponse:
      type: object
      properties:
        api_key:
          description: The new API key
          type: string
          example: >-
            TEST_02feed72c2f6ab8dadc7f6156d1106828aabf81e5c4d38ea94d62817717ea261
    OrganizationsCreateApiKey401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsCreateApiKey404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    OrganizationsCreateApiKey429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    OrganizationsCreateApiKey500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersListMembersResponse:
      type: object
      required:
        - members
      properties:
        members:
          type: array
          items:
            description: >
              Each organization has one or more users that can access and manage
              that organization. These users are called members.


              Members can take actions via the Tremendous web dashboard
              directly.


              These actions include adding funding sources to the organization,
              creating Campaigns, and more.
            type: object
            required:
              - id
              - name
              - email
              - role
              - status
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              email:
                description: Email address of the member
                type: string
                format: email
                example: jane@example.com
              name:
                description: Full name of the member
                type: string
                example: Jane Doe
                nullable: true
              role:
                description: |
                  Role of the member within the organization.

                  <table>
                    <thead>
                      <tr>
                        <th>Role</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                      <tr>
                        <td><code>MEMBER</code></td>
                        <td>Limited permissions. Can view their own reward and order histories only.</td>
                      </tr>
                      <tr>
                        <td><code>ADMIN</code></td>
                        <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                      </tr>
                      <tr>
                        <td><code>DELETED</code></td>
                        <td>No longer a member of this organization.</td>
                      </tr>
                    <tbody>
                    </tbody>
                  </table>
                type: string
                enum:
                  - MEMBER
                  - ADMIN
                  - DELETED
              status:
                description: >
                  Current status of the member's account.


                  When creating a member it starts out in the status `INVITED`.
                  As soon as that member open the invitation link and registers
                  an account, the status switches to `REGISTERED`.
                type: string
                enum:
                  - REGISTERED
                  - INVITED
                example: INVITED
              created_at:
                description: >
                  Timestamp when this member was created.


                  The `created_at` timestamp is **NOT** returned when retrieving
                  a member (but is part of the response when listing or creating
                  members).
                type: string
                format: date-time
                example: '2021-08-02T11:05:59Z'
              last_login_at:
                description: >
                  Timestamp when this member most recently logged into the
                  dashboard of the organization associated with this API key.
                type: string
                format: date-time
                example: '2021-08-02T11:05:59Z'
                nullable: true
    MembersListMembers401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersListMembers429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    MembersListMembers500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersCreateNewMemberResponse:
      type: object
      required:
        - member
      properties:
        member:
          description: >
            Each organization has one or more users that can access and manage
            that organization. These users are called members.


            Members can take actions via the Tremendous web dashboard directly.


            These actions include adding funding sources to the organization,
            creating Campaigns, and more.
          type: object
          required:
            - id
            - name
            - email
            - role
            - status
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            email:
              description: Email address of the member
              type: string
              format: email
              example: jane@example.com
            name:
              description: Full name of the member
              type: string
              example: Jane Doe
              nullable: true
            role:
              description: |
                Role of the member within the organization.

                <table>
                  <thead>
                    <tr>
                      <th>Role</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                    <tr>
                      <td><code>MEMBER</code></td>
                      <td>Limited permissions. Can view their own reward and order histories only.</td>
                    </tr>
                    <tr>
                      <td><code>ADMIN</code></td>
                      <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                    </tr>
                    <tr>
                      <td><code>DELETED</code></td>
                      <td>No longer a member of this organization.</td>
                    </tr>
                  <tbody>
                  </tbody>
                </table>
              type: string
              enum:
                - MEMBER
                - ADMIN
                - DELETED
            status:
              description: >
                Current status of the member's account.


                When creating a member it starts out in the status `INVITED`. As
                soon as that member open the invitation link and registers an
                account, the status switches to `REGISTERED`.
              type: string
              enum:
                - REGISTERED
                - INVITED
              example: INVITED
            created_at:
              description: >
                Timestamp when this member was created.


                The `created_at` timestamp is **NOT** returned when retrieving a
                member (but is part of the response when listing or creating
                members).
              type: string
              format: date-time
              example: '2021-08-02T11:05:59Z'
            last_login_at:
              description: >
                Timestamp when this member most recently logged into the
                dashboard of the organization associated with this API key.
              type: string
              format: date-time
              example: '2021-08-02T11:05:59Z'
              nullable: true
    MembersCreateNewMember400Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    MembersCreateNewMember401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersCreateNewMember429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    MembersCreateNewMember500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersGetMemberResponse:
      type: object
      required:
        - member
      properties:
        member:
          description: >
            Each organization has one or more users that can access and manage
            that organization. These users are called members.


            Members can take actions via the Tremendous web dashboard directly.


            These actions include adding funding sources to the organization,
            creating Campaigns, and more.
          type: object
          required:
            - id
            - name
            - email
            - role
            - status
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            email:
              description: Email address of the member
              type: string
              format: email
              example: jane@example.com
            name:
              description: Full name of the member
              type: string
              example: Jane Doe
              nullable: true
            role:
              description: |
                Role of the member within the organization.

                <table>
                  <thead>
                    <tr>
                      <th>Role</th>
                      <th>Description</th>
                    </tr>
                  </thead>
                    <tr>
                      <td><code>MEMBER</code></td>
                      <td>Limited permissions. Can view their own reward and order histories only.</td>
                    </tr>
                    <tr>
                      <td><code>ADMIN</code></td>
                      <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                    </tr>
                    <tr>
                      <td><code>DELETED</code></td>
                      <td>No longer a member of this organization.</td>
                    </tr>
                  <tbody>
                  </tbody>
                </table>
              type: string
              enum:
                - MEMBER
                - ADMIN
                - DELETED
            status:
              description: >
                Current status of the member's account.


                When creating a member it starts out in the status `INVITED`. As
                soon as that member open the invitation link and registers an
                account, the status switches to `REGISTERED`.
              type: string
              enum:
                - REGISTERED
                - INVITED
              example: INVITED
            events:
              description: List of events related to the member.
              type: array
              items:
                type: object
                properties:
                  type:
                    description: Event type
                    type: string
                    enum:
                      - created
                      - last_login
                    example: created
                  date_utc:
                    description: Timestamp when the event happened
                    type: string
                    format: date-time
                    example: '2021-08-02T11:05:59Z'
                    nullable: true
    MembersGetMember401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersGetMember404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    MembersGetMember429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    MembersGetMember500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FieldsGetCustomFieldsResponse:
      type: object
      properties:
        fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              label:
                description: Label of the field
                type: string
                example: recipient_name
              data_type:
                description: Type of the values of the field
                type: string
                example: Text
              data:
                type: object
                additionalProperties: true
              required:
                description: Is this field required (true) or optional (false)
                type: boolean
                example: true
              scope:
                description: Type of objects this field gets associated with
                type: string
                example: REWARD
    FieldsGetCustomFields401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    FieldsGetCustomFields429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    FieldsGetCustomFields500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksGetDetailsResponse:
      type: object
      properties:
        webhooks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
              url:
                description: URL the webhook will make requests to
                type: string
                format: uri
                example: https://example.com/webhook
                nullable: true
              private_key:
                description: Private key for the webhook
                type: string
                example: jXjdU8dozx571TG6YzL4
            required:
              - url
    WebhooksGetDetails401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksGetDetails429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    WebhooksGetDetails500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksCreateWebhookResponse:
      type: object
      properties:
        webhook:
          type: object
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            url:
              description: URL the webhook will make requests to
              type: string
              format: uri
              example: https://example.com/webhook
              nullable: true
            private_key:
              description: Private key for the webhook
              type: string
              example: jXjdU8dozx571TG6YzL4
          required:
            - url
    WebhooksCreateWebhook400Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    WebhooksCreateWebhook401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksCreateWebhook429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    WebhooksCreateWebhook500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksGetDetails200Response:
      type: object
      properties:
        webhook:
          type: object
          properties:
            id:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
            url:
              description: URL the webhook will make requests to
              type: string
              format: uri
              example: https://example.com/webhook
              nullable: true
            private_key:
              description: Private key for the webhook
              type: string
              example: jXjdU8dozx571TG6YzL4
          required:
            - url
    WebhooksGetDetails404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksTriggerEventResponse:
      description: Empty body
      type: string
    WebhooksTriggerEvent401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksTriggerEvent404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksTriggerEvent422Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: 'Order failed: validation failure'
          payload:
            some_field:
              some_sub_field: Something went wrong with this parameter
    WebhooksTriggerEvent429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    WebhooksTriggerEvent500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksListEventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            type: string
            example: CAMPAIGNS.CREATED
    WebhooksListEvents401Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksListEvents404Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
    WebhooksListEvents429Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
      example:
        errors:
          message: Too many requests
          payload: {}
    WebhooksListEvents500Response:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            message:
              description: Error message
              type: string
            payload:
              description: >-
                Mirrors the request parameters structure, filled only with the
                (nested) properties that caused an error.
              type: object
              example:
                rewards:
                  catalog: At least one valid product required
security:
  - BearerApiKey: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 60b952c39da2e5004ad1cd3c
