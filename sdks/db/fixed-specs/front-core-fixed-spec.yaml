openapi: 3.0.0
info:
  title: Core API
  description: >-
    Front is a customer operations platform that enables support, sales, and
    account management teams to deliver exceptional service at scale. Front
    streamlines customer communication by combining the efficiency of a help
    desk and the familiarity of email, with automated workflows and real-time
    collaboration behind the scenes.


    With Front, teams can centralize messages across channels, route them to the
    right person, and unlock visibility and insights across all of their
    customer operations. More than 8000 businesses use Front to drive
    operational efficiency that prevents churn, improves retention, and propels
    customer growth.
  version: 1.0.0
  contact:
    name: Front Platform
    url: https://community.front.com
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://api2.frontapp.com
tags:
  - name: Knowledge Bases
  - name: Conversations
  - name: Tags
  - name: Teammate groups
  - name: Contacts
  - name: Message Template Folders
  - name: Message Templates
  - name: Contact Groups
  - name: Inboxes
  - name: Shifts
  - name: Accounts
  - name: Custom Fields
  - name: Channels
  - name: Messages
  - name: Signatures
  - name: Drafts
  - name: Rules
  - name: Links
  - name: Teammates
  - name: Analytics
  - name: Comments
  - name: Teams
  - name: Contact Handles
  - name: Contact Notes
  - name: Events
  - name: Attachments
  - name: Token Identity
paths:
  /accounts:
    get:
      tags:
        - Accounts
      summary: List Accounts
      operationId: Accounts_listCompanyAccounts
      description: List the accounts of the company.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByAccounts'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfAccounts'
    post:
      tags:
        - Accounts
      summary: Create account
      operationId: Accounts_createNewAccount
      description: Create a new account.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          $ref: '#/components/responses/account'
  /accounts/custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Account's custom fields
      operationId: CustomFields_listAccountCustomFields
      description: Lists the custom fields that can be attached to an Account.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
  /accounts/{account_id}:
    get:
      tags:
        - Accounts
      summary: Fetch an account
      operationId: Accounts_getAccount
      description: Fetches an account
      parameters:
        - description: >-
            The Account ID. Alternatively, you can supply the account domain or
            external ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: account_id
          required: true
          schema:
            type: string
            default: acc_123
      responses:
        '200':
          $ref: '#/components/responses/account'
    patch:
      tags:
        - Accounts
      summary: Update account
      operationId: Accounts_updateAccount
      description: Updates an account.
      parameters:
        - description: >-
            The Account ID. Alternatively, you can supply the account domain or
            external ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: account_id
          required: true
          schema:
            type: string
            default: acc_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPatch'
      responses:
        '200':
          $ref: '#/components/responses/account'
    delete:
      tags:
        - Accounts
      summary: Delete an account
      operationId: Accounts_deleteAccount
      description: Deletes an account
      parameters:
        - description: >-
            The Account ID. Alternatively, you can supply the account domain or
            external ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: account_id
          required: true
          schema:
            type: string
            default: acc_123
      responses:
        '204':
          description: No content
  /accounts/{account_id}/contacts:
    get:
      tags:
        - Accounts
      summary: List account contacts
      operationId: Accounts_listAccountContacts
      description: Lists the contacts associated with an Account
      parameters:
        - description: >-
            The Account ID. Alternatively, you can supply the account domain or
            external ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: account_id
          required: true
          schema:
            type: string
            default: acc_123
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sortByCards'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfContacts'
    post:
      tags:
        - Accounts
      summary: Add contact to Account
      operationId: Accounts_addContactsToAccount
      description: Adds a list of contacts to an Account
      parameters:
        - description: >-
            The Account ID. Alternatively, you can supply the account domain or
            external ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: account_id
          required: true
          schema:
            type: string
            default: acc_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Accounts
      summary: Remove contact from Account
      operationId: Accounts_removeContactFrom
      description: Removes a list of contacts from an Account
      parameters:
        - description: >-
            The Account ID. Alternatively, you can supply the account domain or
            external ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: account_id
          required: true
          schema:
            type: string
            default: acc_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactIds'
      responses:
        '204':
          description: No content
  /analytics/exports:
    post:
      tags:
        - Analytics
      summary: Create a new analytics export.
      operationId: Analytics_createNewExport
      description: >
        Create a new analytics export of messages or events (activities) over a
        specific time span.

        The export will be executed asynchronously. The response will include a
        link that can be used to retrieve the export status & result. Refer to
        the [Analytics](https://dev.frontapp.com/reference/analytics) topic for
        details about specific metrics.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsExportRequest'
      responses:
        '201':
          description: An analytics export.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsCreateNewExportResponse'
  /analytics/exports/{export_id}:
    get:
      tags:
        - Analytics
      summary: Fetch an analytics export.
      operationId: Analytics_getExport
      description: >-
        Fetch an analytics exports. Refer to the
        [Analytics](https://dev.frontapp.com/reference/analytics) topic for
        details about specific metrics.
      parameters:
        - description: The export ID.
          in: path
          name: export_id
          required: true
          schema:
            type: string
            default: exp_123
      responses:
        '200':
          description: An analytics export.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsGetExportResponse'
  /analytics/reports:
    post:
      tags:
        - Analytics
      summary: Create a new analytics report.
      operationId: Analytics_createNewReport
      description: >
        Create a new analytics report for a set of metrics over a specific time
        span. Different filters (e.g. Inbox v Tag v Teammates) will be joined
        with AND logic, but the IDs within a filter will be joined with OR logic
        (e.g. Inbox A or Inbox B, Tag A or Tag B).

        The report will be executed asynchronously. The response will include a
        link that can be used to retrieve the

        report status & result. Refer to the
        [Analytics](https://dev.frontapp.com/reference/analytics) topic for
        details about specific metrics.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportRequest'
      responses:
        '201':
          description: An analytics report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsCreateNewReportResponse'
  /analytics/reports/{report_uid}:
    get:
      tags:
        - Analytics
      summary: Fetch an analytics report.
      operationId: Analytics_getReport
      description: >-
        Fetch an analytics report. Refer to the
        [Analytics](https://dev.frontapp.com/reference/analytics) topic for
        details about specific metrics.
      parameters:
        - description: The report UID.
          in: path
          name: report_uid
          required: true
          schema:
            type: string
            default: 723ec32796f12c6f05f6b124d8ef76191a38cec990e0f65d549206c51373f1a0
      responses:
        '200':
          description: An analytics report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsGetReportResponse'
  /channels:
    get:
      tags:
        - Channels
      summary: List channels
      operationId: Channels_list
      description: List the channels of the company.
      responses:
        '200':
          $ref: '#/components/responses/listOfChannels'
  /channels/{channel_id}:
    get:
      tags:
        - Channels
      summary: Get channel
      operationId: Channels_getChannel
      description: Fetch a channel.
      parameters:
        - description: >-
            The Channel ID. Alternatively, you can supply the channel address as
            a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: channel_id
          required: true
          schema:
            type: string
            default: cha_123
      responses:
        '200':
          $ref: '#/components/responses/channel'
    patch:
      tags:
        - Channels
      summary: Update Channel
      operationId: Channels_updateChannel
      description: Update a channel.
      parameters:
        - description: >-
            The Channel ID. Alternatively, you can supply the channel address as
            a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: channel_id
          required: true
          schema:
            type: string
            default: cha_123
      requestBody:
        description: Channel details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel'
      responses:
        '204':
          description: No content
  /channels/{channel_id}/drafts:
    post:
      tags:
        - Drafts
      summary: Create draft
      operationId: Drafts_createNewDraftMessage
      description: >-
        Create a draft message which is the first message of a new
        [conversation](https://dev.frontapp.com/reference/conversations).
      parameters:
        - description: >-
            The channel ID. Alternatively, you can supply the channel address as
            a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: channel_id
          required: true
          schema:
            type: string
            default: cha_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraft'
      responses:
        '200':
          $ref: '#/components/responses/message'
  /channels/{channel_id}/incoming_messages:
    post:
      tags:
        - Messages
      summary: Receive custom messages
      operationId: Messages_receiveCustomMessage
      description: >-
        Receive a custom message in Front. This endpoint is available for custom
        channels **ONLY**.
      parameters:
        - description: >-
            The channel ID. Alternatively, you can supply the channel address as
            a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: channel_id
          required: true
          schema:
            type: string
            default: cha_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomMessage'
      responses:
        '202':
          $ref: '#/components/responses/acceptedMessage'
  /channels/{channel_id}/messages:
    post:
      tags:
        - Messages
      summary: Create message
      operationId: Messages_createNewMessage
      description: >-
        Send a new message from a channel. This is one of the ways to create a
        new
        [conversation](https://dev.frontapp.com/reference/conversations#creating-a-new-conversation).
        The new conversation will support both messages and comments
        (discussions).
      parameters:
        - description: >-
            The sending channel ID. Alternatively, you can supply the sending
            channel address as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: channel_id
          required: true
          schema:
            type: string
            default: cha_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundMessage'
      responses:
        '202':
          $ref: '#/components/responses/message'
  /channels/{channel_id}/validate:
    post:
      tags:
        - Channels
      summary: Validate channel
      operationId: Channels_validateSMTPSettings
      description: >-
        Asynchronously validate an SMTP channel (this endpoint is irrelevant to
        other channel types). When you create an SMTP channel via the API,
        [create a
        channel](https://dev.frontapp.com/reference/post_inboxes-inbox-id-channels)
        with type smtp and the send_as set to the needed email address. You then
        [configure the email provider](https://help.front.com/en/articles/2081),
        after which you use this endpoint to asynchronously validate the SMTP
        settings.
      parameters:
        - description: >-
            The Channel ID. Alternatively, you can supply the channel address as
            a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: channel_id
          required: true
          schema:
            type: string
            default: cha_123
      responses:
        '202':
          $ref: '#/components/responses/accepted'
  /comments/{comment_id}:
    patch:
      tags:
        - Comments
      summary: Update comment
      operationId: Comments_updateComment
      description: >-
        Update a comment in a
        [conversation](https://dev.frontapp.com/reference/conversations).
      parameters:
        - description: The Comment ID
          in: path
          name: comment_id
          required: true
          schema:
            type: string
            default: com_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComment'
      responses:
        '200':
          $ref: '#/components/responses/comment'
  /comments/{comment_id}/mentions:
    get:
      tags:
        - Comments
      summary: List comment mentions
      operationId: Comments_listMentionedTeammates
      description: List the teammates mentioned in a comment.
      parameters:
        - description: The Comment ID
          in: path
          name: comment_id
          required: true
          schema:
            type: string
            default: com_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammates'
  /company/rules:
    get:
      tags:
        - Rules
      summary: List all company rules
      operationId: Rules_listAllCompanyRules
      description: List the company rules.
      responses:
        '200':
          $ref: '#/components/responses/listOfRules'
  /company/tags:
    get:
      tags:
        - Tags
      summary: List company tags
      operationId: Tags_listCompany
      description: List the company tags.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByTags'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfTags'
    post:
      tags:
        - Tags
      summary: Create company tag
      operationId: Tags_createCompanyTag
      description: Create a company tag.
      requestBody:
        description: Tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTag'
      responses:
        '201':
          $ref: '#/components/responses/tag'
  /contact_groups:
    get:
      tags:
        - Contact Groups
      summary: List groups
      operationId: ContactGroups_listGroups
      description: List the contact groups.
      responses:
        '200':
          $ref: '#/components/responses/listOfContactGroups'
    post:
      tags:
        - Contact Groups
      summary: Create group
      operationId: ContactGroups_createNewGroup
      description: Create a new contact group in the default team (workspace).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactGroup'
      responses:
        '204':
          description: No content
  /contact_groups/{contact_group_id}:
    delete:
      tags:
        - Contact Groups
      summary: Delete group
      operationId: ContactGroups_deleteGroup
      description: Delete a contact group.
      parameters:
        - description: The contact group ID
          in: path
          name: contact_group_id
          required: true
          schema:
            type: string
            default: grp_123
      responses:
        '204':
          description: No content
  /contact_groups/{contact_group_id}/contacts:
    get:
      tags:
        - Contact Groups
      summary: List contacts in group
      operationId: ContactGroups_listGroupContacts
      description: List the contacts belonging to the requested group.
      parameters:
        - description: The contact group ID
          in: path
          name: contact_group_id
          required: true
          schema:
            type: string
            default: grp_123
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/listOfContacts'
    post:
      tags:
        - Contact Groups
      summary: Add contacts to group
      operationId: ContactGroups_addContactsToGroup
      description: Add contacts to the requested group.
      parameters:
        - description: The contact group ID
          in: path
          name: contact_group_id
          required: true
          schema:
            type: string
            default: grp_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactsToGroup'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Contact Groups
      summary: Remove contacts from group
      operationId: ContactGroups_removeContacts
      description: Remove contacts from the requested group.
      parameters:
        - description: The contact group ID
          in: path
          name: contact_group_id
          required: true
          schema:
            type: string
            default: grp_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveContactsFromGroup'
      responses:
        '204':
          description: No content
  /contacts:
    get:
      tags:
        - Contacts
      summary: List contacts
      operationId: Contacts_listCompanyContacts
      description: List the contacts of the company.
      parameters:
        - $ref: '#/components/parameters/cardQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByCards'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfContacts'
    post:
      tags:
        - Contacts
      summary: Create contact
      operationId: Contacts_createNewContact
      description: Create a new contact.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContact'
      responses:
        '201':
          $ref: '#/components/responses/contact'
  /contacts/custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Contact's custom fields
      operationId: CustomFields_listContactFields
      description: Lists the custom fields that can be attached to a Contact.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
  /contacts/merge:
    post:
      tags:
        - Contacts
      summary: Merge contacts
      operationId: Contacts_mergeContacts
      description: >
        Merges the contacts specified into a single contact, deleting the
        merged-in contacts.

        If a target contact ID is supplied, the other contacts will be merged
        into that one.

        Otherwise, some contact in the contact ID list will be treated as the
        target contact.

        Merge conflicts will be resolved in the following ways:
          * name will prioritize manually-updated and non-private contact names
          * descriptions will be concatenated and separated by newlines in order from
            oldest to newest with the (optional) target contact's description first
          * all handles, groups, links, and notes will be preserved
          * other conflicts will use the most recently updated contact's value
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeContacts'
      responses:
        '200':
          $ref: '#/components/responses/contact'
  /contacts/{contact_id}:
    get:
      tags:
        - Contacts
      summary: Get contact
      operationId: Contacts_getOneContact
      description: Fetch a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      responses:
        '200':
          $ref: '#/components/responses/contact'
    patch:
      tags:
        - Contacts
      summary: Update a contact
      operationId: Contacts_updateContact
      description: Updates a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Contacts
      summary: Delete a contact
      operationId: Contacts_deleteContact
      description: Delete a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      responses:
        '204':
          description: No content
  /contacts/{contact_id}/conversations:
    get:
      tags:
        - Contacts
      summary: List contact conversations
      operationId: Contacts_listConversationsReverseChronologicalOrder
      description: >
        List the conversations for a contact in reverse chronological order
        (newest first). For more advanced filtering, see the [search
        endpoint](https://dev.frontapp.com/reference/conversations#search-conversations).
      parameters:
        - description: >-
            The Contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
        - $ref: '#/components/parameters/conversationQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversations'
  /contacts/{contact_id}/handles:
    post:
      tags:
        - Contact Handles
      summary: Add contact handle
      operationId: ContactHandles_addNewHandle
      description: Adds a new handle to a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactHandle'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Contact Handles
      summary: Delete contact handle
      operationId: ContactHandles_removeHandle
      description: Remove a handle from a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteContactHandle'
      responses:
        '204':
          description: No content
  /contacts/{contact_id}/notes:
    get:
      tags:
        - Contact Notes
      summary: List notes
      operationId: ContactNotes_list
      description: List the notes added to a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      responses:
        '202':
          $ref: '#/components/responses/listOfContactNotes'
    post:
      tags:
        - Contact Notes
      summary: Add note
      operationId: ContactNotes_createNewNote
      description: Create a new note on a contact.
      parameters:
        - description: >-
            The contact ID. Alternatively, you can supply the contact's source
            and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: contact_id
          required: true
          schema:
            type: string
            default: crd_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactNote'
      responses:
        '201':
          $ref: '#/components/responses/contactNote'
  /conversations:
    get:
      tags:
        - Conversations
      summary: List conversations
      operationId: Conversations_listInReverseChronologicalOrder
      description: >
        List the conversations in the company in reverse chronological order
        (most recently updated first). The order will respect your company's
        [bump
        settings](https://help.front.com/t/y729th/customize-when-conversations-bump-up),
        which determine when conversations bump to the top. For more advanced
        filtering, see the [search
        endpoint](https://dev.frontapp.com/reference/conversations#search-conversations).
      parameters:
        - $ref: '#/components/parameters/conversationQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByConversations'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversations'
    post:
      tags:
        - Conversations
      summary: Create discussion conversation
      operationId: Conversations_createDiscussion
      description: >-
        Create a new
        [conversation](https://dev.frontapp.com/reference/conversations#creating-a-new-conversation)
        that only supports comments (known as discussions in Front). If you want
        to create a conversation that supports messages, use the [Create
        message](https://dev.frontapp.com/reference/post_channels-channel-id-messages)
        endpoint. If you want to add a comment to an existing conversation, use
        the [Add
        comment](https://dev.frontapp.com/reference/post_conversations-conversation-id-comments)
        endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConversation'
      responses:
        '201':
          $ref: '#/components/responses/conversation'
  /conversations/custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Conversation's custom fields
      operationId: CustomFields_listConversationCustomFields
      description: Lists the custom fields that can be attached to a Conversation.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
  /conversations/search/{query}:
    get:
      tags:
        - Conversations
      summary: Search conversations
      operationId: Conversations_searchByQuery
      description: >
        Search for conversations. Response will include a count of total matches
        and an array of conversations in descending order by last activity.

        See the [search syntax
        documentation](https://dev.frontapp.com/docs/search-1) for usage
        examples.

        **Note:** This endpoint is subject to [proportional rate
        limiting](https://dev.frontapp.com/docs/rate-limiting#additional-proportional-limiting)
        at 40% of your company's rate limit.
      parameters:
        - description: >-
            Search query string. See
            [Search](https://dev.frontapp.com/docs/search-1) topic for usage
            details.
          in: path
          name: query
          required: true
          schema:
            type: string
            default: inbox:inb_123 tag:tag_345
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversationSearchResults'
  /conversations/{conversation_id}:
    get:
      tags:
        - Conversations
      summary: Get conversation
      operationId: Conversations_getById
      description: |
        Fetch a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      responses:
        '200':
          $ref: '#/components/responses/conversation'
    patch:
      tags:
        - Conversations
      summary: Update conversation
      operationId: Conversations_updateConversationById
      description: Update a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConversation'
      responses:
        '204':
          description: No content
        '400':
          description: Invalid input, such as invalid custom fields
  /conversations/{conversation_id}/assignee:
    put:
      tags:
        - Conversations
      summary: Update conversation assignee
      operationId: Conversations_updateAssignee
      description: Assign or unassign a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConversationAssignee'
      responses:
        '204':
          description: No content
  /conversations/{conversation_id}/comments:
    get:
      tags:
        - Comments
      summary: List conversation comments
      operationId: Comments_listConversationComments
      description: >-
        List the comments in a conversation in reverse chronological order
        (newest first).
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      responses:
        '200':
          $ref: '#/components/responses/listOfComments'
    post:
      tags:
        - Comments
      summary: Add comment
      operationId: Comments_addNewComment
      description: >-
        Add a comment to a
        [conversation](https://dev.frontapp.com/reference/conversations). If you
        want to create a new comment-only conversation, use the [Create
        discussion
        conversation](https://dev.frontapp.com/reference/create-conversation)
        endpoint.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComment'
      responses:
        '201':
          $ref: '#/components/responses/comment'
  /conversations/{conversation_id}/drafts:
    get:
      tags:
        - Drafts
      summary: List conversation drafts
      operationId: Drafts_listConversationDrafts
      description: List the drafts in a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      responses:
        '200':
          $ref: '#/components/responses/listOfMessages'
    post:
      tags:
        - Drafts
      summary: Create draft reply
      operationId: Drafts_createDraftReply
      description: Create a new draft as a reply to the last message in the conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyDraft'
      responses:
        '200':
          $ref: '#/components/responses/message'
  /conversations/{conversation_id}/events:
    get:
      tags:
        - Conversations
      summary: List conversation events
      operationId: Conversations_listEvents
      description: >-
        List the events that occured for a conversation in reverse chronological
        order (newest first). The order will respect your company's [bump
        settings](https://help.front.com/t/y729th/customize-when-conversations-bump-up),
        which determine when conversations bump to the top.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfEvents'
  /conversations/{conversation_id}/followers:
    get:
      tags:
        - Conversations
      summary: List conversation followers
      operationId: Conversations_listFollowers
      description: List the teammates following a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammates'
    post:
      tags:
        - Conversations
      summary: Add conversation followers
      operationId: Conversations_addFollowers
      description: Adds teammates to the list of followers of a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationsAddFollowersRequest'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Conversations
      summary: Delete conversation followers
      operationId: Conversations_removeFollowers
      description: Removes teammates from the list of followers of a conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationsRemoveFollowersRequest'
      responses:
        '204':
          description: No content
  /conversations/{conversation_id}/inboxes:
    get:
      tags:
        - Conversations
      summary: List conversation inboxes
      operationId: Conversations_listInboxes
      description: List the inboxes in which a conversation is listed.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      responses:
        '200':
          $ref: '#/components/responses/listOfInboxes'
  /conversations/{conversation_id}/links:
    post:
      tags:
        - Conversations
      summary: Add conversation link
      operationId: Conversations_addLink
      description: Adds one or more links to a conversation
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationsAddLinkRequest'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Conversations
      summary: Remove conversation links
      operationId: Conversations_removeLinks
      description: Removes one or more links to a conversation
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationsRemoveLinksRequest'
      responses:
        '204':
          description: No content
  /conversations/{conversation_id}/messages:
    get:
      tags:
        - Conversations
      summary: List conversation messages
      operationId: Conversations_listMessagesInReverseChronologicalOrder
      description: >-
        List the messages in a conversation in reverse chronological order
        (newest first).
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByConversationMessages'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfMessages'
    post:
      tags:
        - Messages
      summary: Create message reply
      operationId: Messages_createMessageReply
      description: >-
        Reply to a conversation by sending a message and appending it to the
        conversation.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundReplyMessage'
      responses:
        '202':
          $ref: '#/components/responses/message'
  /conversations/{conversation_id}/reminders:
    patch:
      tags:
        - Conversations
      summary: Update conversation reminders
      operationId: Conversations_updateReminders
      description: >
        Snooze or unsnooze a conversation for the provided user.

        For private conversations, reminders can only be created and edited
        through the API for teammates that own the conversation.

        For shared conversations, reminders created and edited through the API
        are shared for all teammates within the shared inbox(es) that the
        conversation belongs to.
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConversationReminders'
      responses:
        '204':
          description: No content
  /conversations/{conversation_id}/tags:
    post:
      tags:
        - Conversations
      summary: Add conversation tag
      operationId: Conversations_addTagsToConversation
      description: Adds one or more tags to a conversation
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        description: Tag IDs to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Conversations
      summary: Remove conversation tag
      operationId: Conversations_removeTag
      description: Removes one or more tags to a conversation
      parameters:
        - description: The conversation ID
          in: path
          name: conversation_id
          required: true
          schema:
            type: string
            default: cnv_123
      requestBody:
        description: Tag IDs to remove
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagIds'
      responses:
        '204':
          description: No content
  /custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Contact's custom fields
      operationId: CustomFields_listContactCustomFields
      description: >
        Lists the custom fields that can be attached to a Contact.


        > ⚠️ Deprecated endpoint

        >

        > This endpoint has been deprecated. Please use the fully compatible
        `GET /contacts/custom_fields` endpoint instead.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
      deprecated: true
  /download/{attachment_link_id}:
    get:
      tags:
        - Attachments
      summary: Download attachment
      operationId: Attachments_downloadAttachmentFile
      description: Download an attachment file.
      parameters:
        - description: The Attachment ID
          in: path
          name: attachment_link_id
          required: true
          schema:
            type: string
            default: fil_55c8c149
      responses:
        '200':
          $ref: '#/components/responses/attachment'
  /drafts/{draft_id}:
    delete:
      tags:
        - Drafts
      summary: Delete draft
      operationId: Drafts_deleteDraftMessage
      description: Delete a draft message.
      parameters:
        - description: The draft ID
          in: path
          name: draft_id
          required: true
          schema:
            type: string
            default: msg_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDraft'
      responses:
        '204':
          description: No content
  /events:
    get:
      tags:
        - Events
      summary: List events
      operationId: Events_listDetailedInboxEvents
      description: >
        Lists all the detailed events which occured in the inboxes of the
        company ordered in reverse chronological order (newest first).

        Refer to the [Events](https://dev.frontapp.com/reference/events) topic
        for more information, including sorting and filtering.
      parameters:
        - $ref: '#/components/parameters/activityQuery'
        - description: Max number of results per page (max 15)
          in: query
          name: limit
          schema:
            type: integer
            default: 15
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByActivities'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfEvents'
  /events/{event_id}:
    get:
      tags:
        - Events
      summary: Get event
      operationId: Events_getEvent
      description: >
        Fetch an event.

        Refer to the [Events](https://dev.frontapp.com/reference/events) topic
        for more information, including sorting and filtering.
      parameters:
        - description: The event ID
          in: path
          name: event_id
          required: true
          schema:
            type: string
            default: evt_55c8c149
      responses:
        '200':
          $ref: '#/components/responses/event'
  /inboxes:
    get:
      tags:
        - Inboxes
      summary: List inboxes
      operationId: Inboxes_listInboxes
      description: List the inboxes of the company.
      responses:
        '200':
          $ref: '#/components/responses/listOfInboxes'
    post:
      tags:
        - Inboxes
      summary: Create inbox
      operationId: Inboxes_createDefaultTeamInbox
      description: >-
        Create an inbox in the default team (workspace). The default team will
        be the oldest team created that still exists at the time of the request.
      requestBody:
        description: Inbox details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInbox'
      responses:
        '204':
          description: No content
  /inboxes/custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Inbox's custom fields
      operationId: CustomFields_listInboxCustomFields
      description: Lists the custom fields that can be attached to an Inbox.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
  /inboxes/{inbox_id}:
    get:
      tags:
        - Inboxes
      summary: Get inbox
      operationId: Inboxes_getInbox
      description: Fetch an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      responses:
        '200':
          $ref: '#/components/responses/inbox'
  /inboxes/{inbox_id}/channels:
    get:
      tags:
        - Inboxes
      summary: List inbox channels
      operationId: Inboxes_listChannels
      description: List the channels in an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      responses:
        '200':
          $ref: '#/components/responses/listOfChannels'
    post:
      tags:
        - Channels
      summary: Create a channel
      operationId: Channels_createInboxChannel
      description: Create a channel in an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      requestBody:
        description: Channel to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel'
      responses:
        '204':
          description: No content
  /inboxes/{inbox_id}/conversations:
    get:
      tags:
        - Inboxes
      summary: List inbox conversations
      operationId: Inboxes_listConversationsInbox
      description: >
        List the conversations in an inbox. For more advanced filtering, see the
        [search
        endpoint](https://dev.frontapp.com/reference/conversations#search-conversations).
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
        - $ref: '#/components/parameters/conversationQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversations'
  /inboxes/{inbox_id}/imported_messages:
    post:
      tags:
        - Messages
      summary: Import message
      operationId: Messages_importNewInboxMessage
      description: Import a new message in an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMessage'
      responses:
        '202':
          $ref: '#/components/responses/acceptedMessage'
  /inboxes/{inbox_id}/teammates:
    get:
      tags:
        - Inboxes
      summary: List inbox access
      operationId: Inboxes_listTeammatesAccess
      description: List the teammates with access to an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammates'
    post:
      tags:
        - Inboxes
      summary: Add inbox access
      operationId: Inboxes_addTeammateAccess
      description: Give access to one or more teammates to an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      requestBody:
        description: >-
          Teammate IDs to add. Alternatively, you can supply teammate emails as
          a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Inboxes
      summary: Removes inbox access
      operationId: Inboxes_removeAccess
      description: Remove access of one or more teammates from an inbox.
      parameters:
        - description: The Inbox ID
          in: path
          name: inbox_id
          required: true
          schema:
            type: string
            default: inb_123
      requestBody:
        description: >-
          Teammate IDs to remove. Alternatively, you can supply teammate emails
          as a [resource
          alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
  /knowledge_base_articles/{article_id}:
    get:
      tags:
        - Knowledge Bases
      summary: Get a knowledge base article
      operationId: KnowledgeBases_getArticleById
      description: >
        Fetches a knowledge base article.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article to fetch
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseArticleSlim'
    delete:
      tags:
        - Knowledge Bases
      summary: Delete an article
      operationId: KnowledgeBases_deleteArticle
      description: >
        Deletes an article and all its content and translations.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article to delete
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseArticleSlim'
  /knowledge_base_articles/{article_id}/content:
    get:
      tags:
        - Knowledge Bases
      summary: Get knowledge base article with content in default locale
      operationId: KnowledgeBases_getContentDefaultLocale
      description: >
        Fetches a knowledge base article with content in the default locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article to fetch
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseArticle'
    patch:
      tags:
        - Knowledge Bases
      summary: Update article content in default locale.
      operationId: KnowledgeBases_updateArticleContentDefaultLocale
      description: >
        Updates an article's content in the default locale


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article to update
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
      requestBody:
        content:
          application/json:
            schema:
              required:
                - author_id
                - content
              $ref: '#/components/schemas/KnowledgeBaseArticlePatch'
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseArticle'
  /knowledge_base_articles/{article_id}/download/{attachment_id}:
    get:
      tags:
        - Knowledge Bases
      summary: Download attachment from an article
      operationId: KnowledgeBases_downloadAttachmentArticle
      description: >
        Downloads the attachment from an article.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
        - description: The ID of the file to download
          in: path
          name: attachment_id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/attachment'
  /knowledge_base_articles/{article_id}/locales/{locale}/content:
    get:
      tags:
        - Knowledge Bases
      summary: Get knowledge base article with content in specified locale
      operationId: KnowledgeBases_getArticleContent
      description: >
        Fetches a knowledge base article with content for a given locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article to fetch
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the content to fetch
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseArticle'
    patch:
      tags:
        - Knowledge Bases
      summary: Update article content in specified locale
      operationId: KnowledgeBases_updateArticleContentLocale
      description: >
        Updates an article's content for a given locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the article to update
          in: path
          name: article_id
          required: true
          schema:
            type: string
            default: kba_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the updated content
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      requestBody:
        content:
          application/json:
            schema:
              required:
                - author_id
                - content
              $ref: '#/components/schemas/KnowledgeBaseArticlePatch'
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseArticle'
  /knowledge_base_categories/{category_id}:
    get:
      tags:
        - Knowledge Bases
      summary: Get a knowledge base category
      operationId: KnowledgeBases_getCategory
      description: >
        Fetches a knowledge base category.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category to fetch
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseCategorySlim'
    delete:
      tags:
        - Knowledge Bases
      summary: Delete a knowledge base category
      operationId: KnowledgeBases_deleteCategory
      description: >
        Deletes a knowledge base category.


        > ⚠️ Warning

        >

        > When a category is deleted, all articles in the category are also
        deleted.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category to delete
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
      responses:
        '204':
          description: No content
  /knowledge_base_categories/{category_id}/articles:
    get:
      tags:
        - Knowledge Bases
      summary: List articles in a category
      operationId: KnowledgeBases_listArticlesInCategory
      description: >
        List articles in a category.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfKnowledgeBaseArticles'
  /knowledge_base_categories/{category_id}/content:
    get:
      tags:
        - Knowledge Bases
      summary: Get knowledge base category content in default locale
      operationId: KnowledgeBases_getCategoryContentDefaultLocale
      description: >
        Fetches a knowledge base category with content in the default locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category to fetch
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseCategory'
    patch:
      tags:
        - Knowledge Bases
      summary: Update knowledge base category in default locale
      operationId: KnowledgeBases_updateCategoryDefaultLocale
      description: >
        Updates a knowledge base category in the default locale. Will republish
        the knowledge base if the knowledge base is currently published.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category to update
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseCategoryPatch'
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseCategory'
  /knowledge_base_categories/{category_id}/locales/{locale}/content:
    get:
      tags:
        - Knowledge Bases
      summary: Get knowledge base category with content in specified locale
      operationId: KnowledgeBases_getCategoryContentLocale
      description: >
        Fetches a knowledge base category with content for a given locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category to fetch
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the content to fetch
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseCategory'
    patch:
      tags:
        - Knowledge Bases
      summary: Update knowledge base category in specified locale
      operationId: KnowledgeBases_updateCategoryContentLocale
      description: >
        Updates a knowledge base category for a given locale. Will republish the
        knowledge base if the knowledge base is currently published.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the category to update
          in: path
          name: category_id
          required: true
          schema:
            type: string
            default: kbc_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the updated content
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseCategoryPatch'
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseCategory'
  /knowledge_bases:
    get:
      tags:
        - Knowledge Bases
      summary: List knowledge bases
      operationId: KnowledgeBases_listKnowledgeBases
      description: >
        List the knowledge bases of the company.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      responses:
        '200':
          $ref: '#/components/responses/listOfKnowledgeBases'
    post:
      tags:
        - Knowledge Bases
      summary: Create a knowledge base
      operationId: KnowledgeBases_createNewKnowledgeBase
      description: >
        Creates a knowledge base.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              $ref: '#/components/schemas/KnowledgeBaseCreate'
      responses:
        '201':
          $ref: '#/components/responses/knowledgeBase'
  /knowledge_bases/{knowledge_base_id}:
    get:
      tags:
        - Knowledge Bases
      summary: Get a knowledge base
      operationId: KnowledgeBases_getKnowledgeBase
      description: >
        Fetches a knowledge base.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to fetch
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBaseSlim'
  /knowledge_bases/{knowledge_base_id}/articles:
    get:
      tags:
        - Knowledge Bases
      summary: List articles in a knowledge base
      operationId: KnowledgeBases_listArticlesInBase
      description: >
        List articles in a knowledge base


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfKnowledgeBaseArticles'
    post:
      tags:
        - Knowledge Bases
      summary: Create article in a knowledge base in default locale
      operationId: KnowledgeBases_createArticleDefaultLocale
      description: >
        Creates an article in a knowledge base in the default locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to create the article in
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
      requestBody:
        content:
          application/json:
            schema:
              required:
                - author_id
                - subject
                - content
              $ref: '#/components/schemas/KnowledgeBaseArticleCreate'
      responses:
        '201':
          $ref: '#/components/responses/knowledgeBaseArticle'
  /knowledge_bases/{knowledge_base_id}/categories:
    get:
      tags:
        - Knowledge Bases
      summary: List categories in a knowledge base
      operationId: KnowledgeBases_listCategoriesInBase
      description: >
        List categories in a knowledge base.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfKnowledgeBaseCategories'
    post:
      tags:
        - Knowledge Bases
      summary: Create knowledge base category in default locale
      operationId: KnowledgeBases_createCategoryDefaultLocale
      description: >
        Creates a knowledge base category in the default locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to create the category in
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              $ref: '#/components/schemas/KnowledgeBaseCategoryCreate'
      responses:
        '201':
          $ref: '#/components/responses/knowledgeBaseCategory'
  /knowledge_bases/{knowledge_base_id}/content:
    get:
      tags:
        - Knowledge Bases
      summary: Get a knowledge base with content in default locale
      operationId: KnowledgeBases_getContentDefaultLocale
      description: >
        Fetches a knowledge base with its content in the default locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to fetch
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBase'
    patch:
      tags:
        - Knowledge Bases
      summary: Update knowledge base in default locale
      operationId: KnowledgeBases_updateDefaultKnowledgeBase
      description: >
        Updates a knowledge base in the default locale. Will republish the
        knowledge base if the knowledge base is currently published.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to update
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              $ref: '#/components/schemas/KnowledgeBasePatch'
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBase'
  /knowledge_bases/{knowledge_base_id}/locales/{locale}/articles:
    post:
      tags:
        - Knowledge Bases
      summary: Create article in a knowledge base in specified locale
      operationId: KnowledgeBases_createArticleLocale
      description: >
        Create an article for a given locale in a knowledge base.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to create the article in
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the article's content
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      requestBody:
        content:
          application/json:
            schema:
              required:
                - author_id
                - subject
                - content
              $ref: '#/components/schemas/KnowledgeBaseArticleCreate'
      responses:
        '201':
          $ref: '#/components/responses/knowledgeBaseArticle'
  /knowledge_bases/{knowledge_base_id}/locales/{locale}/categories:
    post:
      tags:
        - Knowledge Bases
      summary: Create knowledge base category in specified locale
      operationId: KnowledgeBases_createCategoryInLocale
      description: >
        Creates a knowledge base category for a given locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to create the category in
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the category's content
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              $ref: '#/components/schemas/KnowledgeBaseCategoryCreate'
      responses:
        '201':
          $ref: '#/components/responses/knowledgeBaseCategory'
  /knowledge_bases/{knowledge_base_id}/locales/{locale}/content:
    get:
      tags:
        - Knowledge Bases
      summary: Get a knowledge base with content in specified locale
      operationId: KnowledgeBases_getKnowledgeBaseContentInLocale
      description: >
        Fetches a knowledge base with its content for a given locale.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to fetch
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the content to fetch
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBase'
    patch:
      tags:
        - Knowledge Bases
      summary: Update knowledge base in specified locale
      operationId: KnowledgeBases_updateKnowledgeBaseLocale
      description: >
        Updates a knowledge base for a given locale. Will republish the
        knowledge base if the knowledge base is currently published.


        **Note**: You must use an API token to authenticate. OAuth is not
        supported at this time.
      parameters:
        - description: The ID of the knowledge base to update
          in: path
          name: knowledge_base_id
          required: true
          schema:
            type: string
            default: knb_123
        - description: >-
            The
            [locale](https://dev.frontapp.com/reference/knowledge-bases#locales)
            of the updated content
          in: path
          name: locale
          required: true
          schema:
            type: string
            default: en
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
              $ref: '#/components/schemas/KnowledgeBasePatch'
      responses:
        '200':
          $ref: '#/components/responses/knowledgeBase'
  /links:
    get:
      tags:
        - Links
      summary: List links
      operationId: Links_listByIdAndType
      description: >-
        List the links of the company paginated by id. Allows filtering by link
        type via the q.types param.
      parameters:
        - $ref: '#/components/parameters/topicQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByLinks'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfLinks'
    post:
      tags:
        - Links
      summary: Create link
      operationId: Links_createLink
      description: >-
        Create a link. You must supply either `pattern` or `external_url` in the
        request, but not both (`pattern` is for dynamic objects while
        `external_url` is for standard links). If `pattern` is provided, the API
        call updates the dynamic objects matching the exact pattern. If the link
        is resolved to an installed links integration, any name retrieved from
        the integration will override the provided name in the request.
      requestBody:
        description: Link to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLink'
      responses:
        '201':
          $ref: '#/components/responses/link'
  /links/custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Link's custom fields
      operationId: CustomFields_getList
      description: Lists the custom fields that can be attached to a Link.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
  /links/{link_id}:
    get:
      tags:
        - Links
      summary: Get link
      operationId: Links_getLink
      description: Fetch a link.
      parameters:
        - description: The link ID
          in: path
          name: link_id
          required: true
          schema:
            type: string
            default: top_123
      responses:
        '200':
          $ref: '#/components/responses/link'
    patch:
      tags:
        - Links
      summary: Update a link
      operationId: Links_updateLink
      description: Update a link.
      parameters:
        - description: The link ID
          in: path
          name: link_id
          required: true
          schema:
            type: string
            default: top_123
      requestBody:
        description: Link fields to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLink'
      responses:
        '204':
          description: No content
  /links/{link_id}/conversations:
    get:
      tags:
        - Links
      summary: List link conversations
      operationId: Links_listConversations
      description: >
        List the conversations linked to a specific link. For more advanced
        filtering, see the [search
        endpoint](https://dev.frontapp.com/reference/conversations#search-conversations).
      parameters:
        - description: The Link ID
          in: path
          name: link_id
          required: true
          schema:
            type: string
            default: top_123
        - $ref: '#/components/parameters/conversationQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByConversations'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversations'
  /me:
    get:
      tags:
        - Token Identity
      summary: API Token details
      operationId: TokenIdentity_getDetails
      description: Fetch the details of the API token.
      responses:
        '200':
          $ref: '#/components/responses/identity'
  /message_template_folders:
    get:
      tags:
        - Message Template Folders
      summary: List folders
      operationId: MessageTemplateFolders_listFolders
      description: List the message template folders.
      parameters:
        - $ref: '#/components/parameters/sortByCannedAnswerFolders'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswerFolders'
    post:
      tags:
        - Message Template Folders
      summary: Create folder
      operationId: MessageTemplateFolders_createNewFolder
      description: Create a new message template folder.
      requestBody:
        description: Message template folder to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateFolder'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswerFolder'
  /message_template_folders/{message_template_folder_id}:
    get:
      tags:
        - Message Template Folders
      summary: Get folder
      operationId: MessageTemplateFolders_getFolder
      description: Fetch a message template folder.
      parameters:
        - description: The message template folder ID
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      responses:
        '200':
          $ref: '#/components/responses/cannedAnswerFolder'
    patch:
      tags:
        - Message Template Folders
      summary: Update folder
      operationId: MessageTemplateFolders_updateFolder
      description: Update message template folder
      parameters:
        - description: The message template folder ID
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      requestBody:
        description: Message template folder to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageTemplateFolder'
      responses:
        '200':
          $ref: '#/components/responses/cannedAnswerFolder'
    delete:
      tags:
        - Message Template Folders
      summary: Delete folder
      operationId: MessageTemplateFolders_deleteFolder
      description: Delete a message template folder and child folders/templates
      parameters:
        - description: The message template folder id
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      responses:
        '202':
          $ref: '#/components/responses/acceptedCannedAnswerFolderDeletion'
  /message_template_folders/{message_template_folder_id}/message_template_folders:
    get:
      tags:
        - Message Template Folders
      summary: Get child folders
      operationId: MessageTemplateFolders_getChildFolders
      description: Fetch the child message templates folders of a message template folder.
      parameters:
        - description: The message template folder ID
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswerFolders'
    post:
      tags:
        - Message Template Folders
      summary: Create child folder
      operationId: MessageTemplateFolders_createChildFolder
      description: Create a new message template folder as a child of the given folder
      parameters:
        - description: The parent message template folder ID
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      requestBody:
        description: Message template folder to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateFolderAsChild'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswerFolder'
  /message_template_folders/{message_template_folder_id}/message_templates:
    get:
      tags:
        - Message Templates
      summary: Get child templates
      operationId: MessageTemplates_getChildTemplates
      description: Fetch the child message templates of a message template folder.
      parameters:
        - description: The message template folder ID
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswerFolders'
    post:
      tags:
        - Message Templates
      summary: Create child template
      operationId: MessageTemplates_createChildTemplate
      description: Create a new message template as a child of the given folder
      parameters:
        - description: The parent message template folder ID
          in: path
          name: message_template_folder_id
          required: true
          schema:
            type: string
            default: rsf_123
      requestBody:
        description: Message template to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateAsChild'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswer'
  /message_templates:
    get:
      tags:
        - Message Templates
      summary: List message templates
      operationId: MessageTemplates_list
      description: List the message templates.
      parameters:
        - $ref: '#/components/parameters/sortByCannedAnswers'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswers'
    post:
      tags:
        - Message Templates
      summary: Create message template
      operationId: MessageTemplates_createNewTemplate
      description: Create a new message template.
      requestBody:
        description: Message template to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSharedMessageTemplate'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswer'
  /message_templates/{message_template_id}:
    get:
      tags:
        - Message Templates
      summary: Get message template
      operationId: MessageTemplates_getTemplateById
      description: Fetch a message template.
      parameters:
        - description: The message template ID
          in: path
          name: message_template_id
          required: true
          schema:
            type: string
            default: rsp_123
      responses:
        '200':
          $ref: '#/components/responses/cannedAnswer'
    patch:
      tags:
        - Message Templates
      summary: Update message template
      operationId: MessageTemplates_updateTemplateById
      description: Update message template
      parameters:
        - description: The message template ID
          in: path
          name: message_template_id
          required: true
          schema:
            type: string
            default: rsp_123
      requestBody:
        description: Message template to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageTemplate'
      responses:
        '200':
          $ref: '#/components/responses/cannedAnswer'
    delete:
      tags:
        - Message Templates
      summary: Delete message template
      operationId: MessageTemplates_deleteTemplate
      description: Delete a message template
      parameters:
        - description: The message template ID
          in: path
          name: message_template_id
          required: true
          schema:
            type: string
            default: rsp_123
      responses:
        '204':
          description: No content
  /messages/{message_id}:
    get:
      tags:
        - Messages
      summary: Get message
      operationId: Messages_getMessageById
      description: >
        Fetch a message.


        > ℹ️ The HTTP Header `Accept` can be used to request the message in a
        different format.

        > By default, Front will return the documented JSON response. By
        requesting `message/rfc822`, the response will contain the message in
        the EML format (for email messages only).
      parameters:
        - description: The message ID
          in: path
          name: message_id
          required: true
          schema:
            type: string
            default: msg_123
      responses:
        '200':
          $ref: '#/components/responses/message'
  /messages/{message_id}/seen:
    get:
      tags:
        - Messages
      summary: Get message seen status
      operationId: Messages_getMessageSeenStatus
      description: >-
        Get the seen receipts for the given message. If no seen-by information
        is available, there will be a single entry for the first time the
        message was seen by any recipient. If seen-by information is available,
        there will be an entry for each recipient who has seen the message.
      parameters:
        - description: The message ID
          in: path
          name: message_id
          required: true
          schema:
            type: string
            default: msg_123
      responses:
        '200':
          $ref: '#/components/responses/listOfSeenReceipts'
    post:
      tags:
        - Messages
      summary: Mark message seen
      operationId: Messages_markMessageSeen
      description: >-
        Mark an outbound message from Front as seen. Note, the message seen
        route should only be called in response to an actual end-user's
        message-seen action. In accordance with this behavior, the route is rate
        limited to 10 requests per hour. The request body should send an empty
        object.
      parameters:
        - description: The message ID
          in: path
          name: message_id
          required: true
          schema:
            type: string
            default: msg_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagesMarkMessageSeenRequest'
      responses:
        '204':
          description: No content
  /rules:
    get:
      tags:
        - Rules
      summary: List rules
      operationId: Rules_listCompanyRules
      description: List the rules of the company.
      responses:
        '200':
          $ref: '#/components/responses/listOfRules'
  /rules/{rule_id}:
    get:
      tags:
        - Rules
      summary: Get rule
      operationId: Rules_getRule
      description: Fetch a rule.
      parameters:
        - description: The Rule ID
          in: path
          name: rule_id
          required: true
          schema:
            type: string
            default: rul_123
      responses:
        '200':
          $ref: '#/components/responses/rule'
  /shift/{shift_id}:
    get:
      tags:
        - Shifts
      summary: Get shift
      operationId: Shifts_getShift
      description: Fetch a shift.
      parameters:
        - description: The Shift ID
          in: path
          name: shift_id
          required: true
          schema:
            type: string
            default: shf_123
      responses:
        '200':
          $ref: '#/components/responses/shift'
  /shift/{shift_id}/teammates:
    get:
      tags:
        - Shifts
      summary: List shift's teammates
      operationId: Shifts_listShiftTeammates
      description: List the teammates assigned to a shift.
      parameters:
        - description: The Shift ID
          in: path
          name: shift_id
          required: true
          schema:
            type: string
            default: shf_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammates'
    post:
      tags:
        - Shifts
      summary: Add teammates to shift
      operationId: Shifts_addTeammatesToShift
      description: >-
        Add teammates to a shift. The selected teammates must be in the team
        that owns the shift.
      parameters:
        - description: The Shift ID
          in: path
          name: shift_id
          required: true
          schema:
            type: string
            default: shf_123
      requestBody:
        description: >-
          Teammate IDs to add. Alternatively, you can supply emails as a
          [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Shifts
      summary: Remove teammates from shift
      operationId: Shifts_removeTeammatesFromShift
      description: Remove teammates from a shift.
      parameters:
        - description: The Shift ID
          in: path
          name: shift_id
          required: true
          schema:
            type: string
            default: shf_123
      requestBody:
        description: >-
          Teammate IDs to remove. Alternatively, you can supply emails as a
          [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
  /shifts:
    get:
      tags:
        - Shifts
      summary: List Shifts
      operationId: Shifts_listShifts
      description: List the shifts.
      responses:
        '200':
          $ref: '#/components/responses/listOfShifts'
    post:
      tags:
        - Shifts
      summary: Create shift
      operationId: Shifts_createShift
      description: Create a shift.
      requestBody:
        description: Shift to create details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShift'
      responses:
        '201':
          $ref: '#/components/responses/shift'
  /shifts/{shift_id}:
    patch:
      tags:
        - Shifts
      summary: Update shift
      operationId: Shifts_updateShift
      description: Update a shift.
      parameters:
        - description: The Shift ID
          in: path
          name: shift_id
          required: true
          schema:
            type: string
            default: shf_123
      requestBody:
        description: Updated Shift Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShift'
      responses:
        '204':
          description: No content
  /signatures/{signature_id}:
    get:
      tags:
        - Signatures
      summary: Get signatures
      operationId: Signatures_getSignature
      description: Get the given signature.
      parameters:
        - description: The signature ID
          in: path
          name: signature_id
          required: true
          schema:
            type: string
            default: sig_123
      responses:
        '200':
          $ref: '#/components/responses/signature'
    patch:
      tags:
        - Signatures
      summary: Update signature
      operationId: Signatures_updateSignature
      description: Update signature
      parameters:
        - description: The signature ID
          in: path
          name: signature_id
          required: true
          schema:
            type: string
            default: sig_123
      requestBody:
        description: Signature to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSignature'
      responses:
        '200':
          $ref: '#/components/responses/signature'
    delete:
      tags:
        - Signatures
      summary: Delete signature
      operationId: Signatures_deleteSignature
      description: Delete signature
      parameters:
        - description: The signature ID
          in: path
          name: signature_id
          required: true
          schema:
            type: string
            default: sig_123
      responses:
        '204':
          description: No content
  /tags:
    get:
      tags:
        - Tags
      summary: List tags
      operationId: Tags_listAll
      description: >-
        List all the tags of the company that the API token has access to,
        whether they be company tags, team tags, or teammate tags.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByTags'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfTags'
    post:
      tags:
        - Tags
      summary: Create tag
      operationId: Tags_createTagOldestTeam
      description: >-
        Create a tag in the oldest team (workspace). This is a legacy endpoint.
        Use the Create company tag, Create team tag, or Create teammate tag
        endpoints instead.
      requestBody:
        description: Tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTag'
      responses:
        '201':
          $ref: '#/components/responses/tag'
  /tags/{tag_id}:
    get:
      tags:
        - Tags
      summary: Get tag
      operationId: Tags_getTag
      description: Fetch a tag.
      parameters:
        - description: The tag ID
          in: path
          name: tag_id
          required: true
          schema:
            type: string
            default: tag_123
      responses:
        '200':
          $ref: '#/components/responses/tag'
    patch:
      tags:
        - Tags
      summary: Update a tag
      operationId: Tags_updateTag
      description: Update a tag.
      parameters:
        - description: The tag ID
          in: path
          name: tag_id
          required: true
          schema:
            type: string
            default: tag_123
      requestBody:
        description: Child Tag to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTag'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Tags
      summary: Delete tag
      operationId: Tags_deleteTag
      description: Delete a tag.
      parameters:
        - description: The ID of the tag to delete
          in: path
          name: tag_id
          required: true
          schema:
            type: string
            default: tag_123
      responses:
        '204':
          description: No content
  /tags/{tag_id}/children:
    get:
      tags:
        - Tags
      summary: List tag children
      operationId: Tags_listChildren
      description: List the children of a specific tag.
      parameters:
        - description: The tag ID
          in: path
          name: tag_id
          required: true
          schema:
            type: string
            default: tag_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTags'
    post:
      tags:
        - Tags
      summary: Create child tag
      operationId: Tags_createChildTag
      description: Creates a child tag.
      parameters:
        - description: The tag ID
          in: path
          name: tag_id
          required: true
          schema:
            type: string
            default: tag_123
      requestBody:
        description: Child Tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTag'
      responses:
        '201':
          $ref: '#/components/responses/tag'
  /tags/{tag_id}/conversations:
    get:
      tags:
        - Tags
      summary: List tagged conversations
      operationId: Tags_listTaggedConversations
      description: >
        List the conversations tagged with a tag. For more advanced filtering,
        see the [search
        endpoint](https://dev.frontapp.com/reference/conversations#search-conversations).
      parameters:
        - description: The ID of the tag
          in: path
          name: tag_id
          required: true
          schema:
            type: string
            default: tag_123
        - $ref: '#/components/parameters/conversationQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversations'
  /teammate_groups:
    get:
      tags:
        - Teammate groups
      summary: List teammate groups
      operationId: TeammateGroups_list
      description: List the teammate groups in the company.
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammateGroups'
    post:
      tags:
        - Teammate groups
      summary: Create teammate group
      operationId: TeammateGroups_createNewGroup
      description: Create a new teammate group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeammateGroup'
      responses:
        '201':
          $ref: '#/components/responses/teammateGroup'
  /teammate_groups/{teammate_group_id}:
    get:
      tags:
        - Teammate groups
      summary: Get teammate group
      operationId: TeammateGroups_getTeammateGroup
      description: Fetch a teammate group.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      responses:
        '200':
          $ref: '#/components/responses/teammateGroup'
    patch:
      tags:
        - Teammate groups
      summary: Update a teammate group
      operationId: TeammateGroups_updateTeammateGroup
      description: >-
        Updates a teammate group. Note - You cannot modify a teammate group that
        is managed by SCIM.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeammateGroup'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Teammate groups
      summary: Delete teammate group
      operationId: TeammateGroups_deleteGroup
      description: >-
        Deletes a teammate group. Note - You cannot delete a teammate group that
        is managed by SCIM.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      responses:
        '204':
          description: No content
  /teammate_groups/{teammate_group_id}/inboxes:
    get:
      tags:
        - Teammate groups
      summary: List teammate group team inboxes
      operationId: TeammateGroups_listInboxes
      description: >-
        List inboxes that the teammate group has access to via its associated
        teams.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      responses:
        '200':
          $ref: '#/components/responses/listOfInboxes'
    post:
      tags:
        - Teammate groups
      summary: Add teammate group team inboxes
      operationId: TeammateGroups_addTeamInboxes
      description: >-
        Links non-public inboxes to the teammate group. The inbox must be part
        of a team that has been added to the teammate group.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        description: Inbox IDs to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Teammate groups
      summary: Remove teammate group team inboxes
      operationId: TeammateGroups_removeInboxLink
      description: Unlinks non-public inboxes from the teammate group.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        description: Inbox IDs to remove
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxIds'
      responses:
        '204':
          description: No content
  /teammate_groups/{teammate_group_id}/teammates:
    get:
      tags:
        - Teammate groups
      summary: List teammate group teammates
      operationId: TeammateGroups_listTeammates
      description: List teammate group teammates.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammates'
    post:
      tags:
        - Teammate groups
      summary: Add teammate group teammates
      operationId: TeammateGroups_addTeammates
      description: >-
        Add teammate group teammates. Note - You cannot modify a teammate group
        that is managed by SCIM.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        description: >-
          Teammate IDs to add. Alternatively, you can supply emails as a
          [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Teammate groups
      summary: Remove teammate group teammates
      operationId: TeammateGroups_removeTeammates
      description: >-
        Remove teammate group teammates. Note - You cannot modify a teammate
        group that is managed by SCIM.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        description: >-
          Teammate IDs to remove. Alternatively, you can supply emails as a
          [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
  /teammate_groups/{teammate_group_id}/teams:
    get:
      tags:
        - Teammate groups
      summary: List teammate group teams
      operationId: TeammateGroups_listTeammateGroupTeams
      description: >-
        List teams added to the teammate group. Any teams added to the teammate
        group will automatically link public inboxes.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      responses:
        '200':
          $ref: '#/components/responses/listOfTeams'
    post:
      tags:
        - Teammate groups
      summary: Add teammate group teams
      operationId: TeammateGroups_addTeamsToGroup
      description: >-
        Adds teams to the teammate group. Any teams added to the teammate group
        will automatically link public inboxes. Non-public inboxes can be added
        to the teammate group separately.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        description: Team IDs to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Teammate groups
      summary: Remove teammate group teams
      operationId: TeammateGroups_removeGroupTeams
      description: >-
        Remove teams from the teammate group. Unlinks to any associated team
        inboxes.
      parameters:
        - description: The teammate group ID.
          in: path
          name: teammate_group_id
          required: true
          schema:
            type: string
            default: cir_123
      requestBody:
        description: Team IDs to remove.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamIds'
      responses:
        '204':
          description: No content
  /teammates:
    get:
      tags:
        - Teammates
      summary: List teammates
      operationId: Teammates_listCompanyMembers
      description: List the teammates in the company.
      responses:
        '200':
          $ref: '#/components/responses/listOfTeammates'
  /teammates/custom_fields:
    get:
      tags:
        - Custom Fields
      summary: List Teammate's custom fields
      operationId: CustomFields_listTeammateCustomFields
      description: Lists the custom fields that can be attached to a Teammate.
      responses:
        '200':
          $ref: '#/components/responses/listOfCustomFields'
  /teammates/{teammate_id}:
    get:
      tags:
        - Teammates
      summary: Get teammate
      operationId: Teammates_getTeammateById
      description: Fetch a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/teammate'
    patch:
      tags:
        - Teammates
      summary: Update teammate
      operationId: Teammates_updateTeammate
      description: Update a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeammate'
      responses:
        '204':
          description: No content
  /teammates/{teammate_id}/channels:
    get:
      tags:
        - Channels
      summary: List teammate channels
      operationId: Channels_listTeammate
      description: List the channels of a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/listOfChannels'
  /teammates/{teammate_id}/contact_groups:
    get:
      tags:
        - Contact Groups
      summary: List teammate groups
      operationId: ContactGroups_listTeammateGroups
      description: List the contact groups belonging to the requested teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/listOfContactGroups'
    post:
      tags:
        - Contact Groups
      summary: Create teammate group
      operationId: ContactGroups_createTeammateGroup
      description: Create a new contact group for the requested teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactGroup'
      responses:
        '204':
          description: No content
  /teammates/{teammate_id}/contacts:
    get:
      tags:
        - Contacts
      summary: List teammate contacts
      operationId: Contacts_listTeammateContacts
      description: List the contacts of a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
        - $ref: '#/components/parameters/cardQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByCards'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfContacts'
    post:
      tags:
        - Contacts
      summary: Create teammate contact
      operationId: Contacts_createTeammateContact
      description: Create a contact for a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContact'
      responses:
        '201':
          $ref: '#/components/responses/contact'
  /teammates/{teammate_id}/conversations:
    get:
      tags:
        - Teammates
      summary: List assigned conversations
      operationId: Teammates_listAssignedConversations
      description: >
        List the conversations assigned to a teammate in reverse chronological
        order (most recently updated first). For more advanced filtering, see
        the [search
        endpoint](https://dev.frontapp.com/reference/conversations#search-conversations).
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
        - $ref: '#/components/parameters/conversationQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
      responses:
        '200':
          $ref: '#/components/responses/listOfConversations'
  /teammates/{teammate_id}/inboxes:
    get:
      tags:
        - Teammates
      summary: List teammate inboxes
      operationId: Teammates_getInboxList
      description: Returns list of inboxes the teammate has access to.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/listOfInboxes'
      deprecated: true
  /teammates/{teammate_id}/message_template_folders:
    get:
      tags:
        - Message Template Folders
      summary: List teammate folders
      operationId: MessageTemplateFolders_listTeammateFolders
      description: List the message template folders belonging to the requested teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
        - $ref: '#/components/parameters/sortByCannedAnswerFolders'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswerFolders'
    post:
      tags:
        - Message Template Folders
      summary: Create teammate folder
      operationId: MessageTemplateFolders_createNewFolder
      description: >-
        Create a new message template folder belonging to the requested
        teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        description: Message template folder to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateFolder'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswerFolder'
  /teammates/{teammate_id}/message_templates:
    get:
      tags:
        - Message Templates
      summary: List teammate message templates
      operationId: MessageTemplates_listTeammateTemplates
      description: List the message templates belonging to the requested teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
        - $ref: '#/components/parameters/sortByCannedAnswers'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswers'
    post:
      tags:
        - Message Templates
      summary: Create teammate message template
      operationId: MessageTemplates_addNewTeammateTemplate
      description: Create a new message template for the given teammate
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        description: Message template to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrivateMessageTemplate'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswer'
  /teammates/{teammate_id}/rules:
    get:
      tags:
        - Rules
      summary: List teammate rules
      operationId: Rules_listTeammateRules
      description: List the rules of a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/listOfRules'
  /teammates/{teammate_id}/shifts:
    get:
      tags:
        - Shifts
      summary: List Teammate Shifts
      operationId: Shifts_teammateShiftsList
      description: Lists all the shifts for the teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/listOfShifts'
  /teammates/{teammate_id}/signatures:
    get:
      tags:
        - Signatures
      summary: List teammate signatures
      operationId: Signatures_listTeammate
      description: List the signatures belonging to the given teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      responses:
        '200':
          $ref: '#/components/responses/listOfSignatures'
    post:
      tags:
        - Signatures
      summary: Create teammate signature
      operationId: Signatures_createTeammateSignature
      description: Create a new signature for the given teammate
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        description: Signature to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrivateSignature'
      responses:
        '201':
          $ref: '#/components/responses/signature'
  /teammates/{teammate_id}/tags:
    get:
      tags:
        - Tags
      summary: List teammate tags
      operationId: Tags_listTeammateTags
      description: List the tags for a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByTags'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfTags'
    post:
      tags:
        - Tags
      summary: Create teammate tag
      operationId: Tags_createTeammateTag
      description: Create a tag for a teammate.
      parameters:
        - description: >-
            The teammate ID. Alternatively, you can supply an email as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          in: path
          name: teammate_id
          required: true
          schema:
            type: string
            default: tea_123
      requestBody:
        description: Tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTag'
      responses:
        '201':
          $ref: '#/components/responses/tag'
  /teams:
    get:
      tags:
        - Teams
      summary: List teams
      operationId: Teams_listTeams
      description: List the teams (workspaces) in the company.
      responses:
        '200':
          $ref: '#/components/responses/listOfTeams'
  /teams/{team_id}:
    get:
      tags:
        - Teams
      summary: Get team
      operationId: Teams_getWorkspace
      description: Fetch a team (workspace).
      parameters:
        - description: The Team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/team'
  /teams/{team_id}/channels:
    get:
      tags:
        - Channels
      summary: List team channels
      operationId: Channels_listTeam
      description: List the channels of a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/listOfChannels'
  /teams/{team_id}/contact_groups:
    get:
      tags:
        - Contact Groups
      summary: List team groups
      operationId: ContactGroups_listTeamGroups
      description: List contact groups belonging to the requested team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/listOfContactGroups'
    post:
      tags:
        - Contact Groups
      summary: Create team group
      operationId: ContactGroups_createNewGroup
      description: Create a new contact group for the requested team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactGroup'
      responses:
        '204':
          description: No content
  /teams/{team_id}/contacts:
    get:
      tags:
        - Contacts
      summary: List team contacts
      operationId: Contacts_listTeamContacts
      description: List the contacts of a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
        - $ref: '#/components/parameters/cardQuery'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByCards'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfContacts'
    post:
      tags:
        - Contacts
      summary: Create team contact
      operationId: Contacts_createTeamContact
      description: Create a contact for a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContact'
      responses:
        '201':
          $ref: '#/components/responses/contact'
  /teams/{team_id}/inboxes:
    get:
      tags:
        - Inboxes
      summary: List team inboxes
      operationId: Inboxes_listTeamInboxes
      description: List the inboxes belonging to a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/listOfInboxes'
    post:
      tags:
        - Inboxes
      summary: Create team inbox
      operationId: Inboxes_createTeamInbox
      description: Create an inbox for a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        description: Inbox details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInbox'
      responses:
        '204':
          description: No content
  /teams/{team_id}/message_template_folders:
    get:
      tags:
        - Message Template Folders
      summary: List team folders
      operationId: MessageTemplateFolders_listTeamFolders
      description: >-
        List the message template folders belonging to the requested team
        (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_55c8c149
        - $ref: '#/components/parameters/sortByCannedAnswerFolders'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswerFolders'
    post:
      tags:
        - Message Template Folders
      summary: Create team folder
      operationId: MessageTemplateFolders_createNewFolder
      description: >-
        Create a new message template folder belonging to the requested team
        (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_55c8c149
      requestBody:
        description: Message template folder to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateFolder'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswerFolder'
  /teams/{team_id}/message_templates:
    get:
      tags:
        - Message Templates
      summary: List team message templates
      operationId: MessageTemplates_listTeamTemplates
      description: List the message templates belonging to the requested team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_55c8c149
        - $ref: '#/components/parameters/sortByCannedAnswers'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfCannedAnswers'
    post:
      tags:
        - Message Templates
      summary: Create team message template
      operationId: MessageTemplates_createTeamTemplate
      description: Create a new message template for the given team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_55c8c149
      requestBody:
        description: Message template to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSharedMessageTemplate'
      responses:
        '201':
          $ref: '#/components/responses/cannedAnswer'
  /teams/{team_id}/rules:
    get:
      tags:
        - Rules
      summary: List team rules
      operationId: Rules_listTeamRules
      description: List the rules of a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/listOfRules'
  /teams/{team_id}/shifts:
    get:
      tags:
        - Shifts
      summary: List team Shifts
      operationId: Shifts_listTeamShifts
      description: List the shifts for a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/listOfShifts'
    post:
      tags:
        - Shifts
      summary: Create team shift
      operationId: Shifts_createTeamShift
      description: Create a shift for a team (workspace).
      parameters:
        - description: The Team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        description: Shift to create details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShift'
      responses:
        '201':
          $ref: '#/components/responses/shift'
  /teams/{team_id}/signatures:
    get:
      tags:
        - Signatures
      summary: List team signatures
      operationId: Signatures_listTeam
      description: List the signatures belonging to the given team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      responses:
        '200':
          $ref: '#/components/responses/listOfSignatures'
    post:
      tags:
        - Signatures
      summary: Create team signature
      operationId: Signatures_createTeamSignature
      description: Create a new signature for the given team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        description: Signature to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSharedSignature'
      responses:
        '201':
          $ref: '#/components/responses/signature'
  /teams/{team_id}/tags:
    get:
      tags:
        - Tags
      summary: List team tags
      operationId: Tags_listTeamTags
      description: List the tags for a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/sortByTags'
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          $ref: '#/components/responses/listOfTags'
    post:
      tags:
        - Tags
      summary: Create team tag
      operationId: Tags_createTeamTag
      description: Create a tag for a team (workspace).
      parameters:
        - description: The team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        description: Tag to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTag'
      responses:
        '201':
          $ref: '#/components/responses/tag'
  /teams/{team_id}/teammates:
    post:
      tags:
        - Teams
      summary: Add teammates to team
      operationId: Teams_addTeammates
      description: Add one or more teammates to a team (workspace).
      parameters:
        - description: The Team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        description: >-
          Teammate IDs to add. Alternatively, you can supply emails as a
          [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - Teams
      summary: Remove teammates from team
      operationId: Teams_removeTeammates
      description: >-
        Remove one or more teammates from a team (workspace). Alternatively, you
        can supply emails as a [resource
        alias](https://dev.frontapp.com/docs/resource-aliases-1).
      parameters:
        - description: The Team ID
          in: path
          name: team_id
          required: true
          schema:
            type: string
            default: tim_123
      requestBody:
        description: Teammate IDs to remove from the team
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeammateIds'
      responses:
        '204':
          description: No content
  /drafts/{message_id}:
    patch:
      tags:
        - Drafts
      summary: Edit draft
      operationId: Drafts_editMessage
      description: Edit a draft message.
      parameters:
        - description: The draft ID
          in: path
          name: message_id
          required: true
          schema:
            type: string
            default: msg_123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDraft'
      responses:
        '200':
          $ref: '#/components/responses/message'
components:
  parameters:
    activityQuery:
      description: >-
        [Search query object](https://dev.frontapp.com/docs/query-object-q) with
        optional properties `before`, `after`, or `types`. `before` and `after`
        should be a timestamp in seconds with up to 3 decimal places. `types`
        should be a list of [event
        types](https://dev.frontapp.com/reference/events).
      name: q
      in: query
      schema:
        type: string
    cardQuery:
      description: >-
        [Search query object](https://dev.frontapp.com/docs/query-object-q) with
        the optional properties `updated_after` and `updated_before`, whose
        value should be a timestamp in seconds with up to 3 decimal places.
      name: q
      in: query
      schema:
        type: string
    conversationQuery:
      description: >-
        [Search query object](https://dev.frontapp.com/docs/query-object-q) with
        a property `statuses`, whose value should be a list of conversation
        statuses (`assigned`, `unassigned`, `archived`, or `deleted`).
      name: q
      in: query
      schema:
        type: string
    topicQuery:
      description: >-
        [Search query object](https://dev.frontapp.com/docs/query-object-q) with
        a property `types`, whose value should be a list of link types (examples
        - `web`, `jira`, `asana` ).
      name: q
      in: query
      schema:
        type: string
    pageToken:
      description: >-
        Token to use to request the [next
        page](https://dev.frontapp.com/docs/pagination)
      name: page_token
      in: query
      schema:
        type: string
        example: >-
          https://yourCompany.api.frontapp.com/endpoint?limit=25&page_token=92f32bcd7625333caf4e0f8fc26d920c812f
    limit:
      description: >-
        Max number of results per
        [page](https://dev.frontapp.com/docs/pagination)
      name: limit
      in: query
      schema:
        type: integer
        maximum: 100
        example: 25
    sortByAccounts:
      description: Field used to sort the accounts. Either `created_at` or `updated_at`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByActivities:
      description: Field used to sort the events. Only supports `created_at`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByCards:
      description: Field used to sort the contacts. Either `created_at` or `updated_at`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByCannedAnswers:
      description: >-
        Field used to sort the message templates. Either `created_at`,
        `updated_at`, or `sort_order`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByCannedAnswerFolders:
      description: >-
        Field used to sort the message template folders. Either `created_at` or
        `updated_at`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByConversations:
      description: Field used to sort the conversations. Only supports `date`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByConversationMessages:
      description: Field used to sort the messages. Only supports `created_at`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByLinks:
      description: Field used to sort the links. Only supports `id`.
      name: sort_by
      in: query
      schema:
        type: string
    sortByTags:
      description: Field used to sort the tags. Only supports `id`.
      name: sort_by
      in: query
      schema:
        type: string
    sortOrder:
      description: Order by which results should be sorted
      name: sort_order
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
        example: asc
  responses:
    listOfCannedAnswers:
      description: Array of message templates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageTemplatesListResponse'
    listOfCannedAnswerFolders:
      description: Array of message template folders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageTemplateFoldersListFoldersResponse'
    listOfSignatures:
      description: Array of signatures
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignaturesListTeammateResponse'
    listOfInboxes:
      description: Array of Inboxes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConversationsListInboxesResponse'
    listOfComments:
      description: Array of Comments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommentsListConversationCommentsResponse'
    listOfTeams:
      description: Array of teams
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeammateGroupsListTeammateGroupTeamsResponse'
    listOfTeammates:
      description: Array of teammates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommentsListMentionedTeammatesResponse'
    listOfTeammateGroups:
      description: Array of teammate groups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeammateGroupsListResponse'
    listOfShifts:
      description: Array of Shifts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShiftsListShiftsResponse'
    listOfContacts:
      description: Array of contacts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListAccountContactsResponse'
    listOfAccounts:
      description: Array of accounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListCompanyAccountsResponse'
    listOfContactGroups:
      description: Array of contact groups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactGroupsListGroupsResponse'
    listOfContactNotes:
      description: Array of contact notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactNotesListResponse'
    listOfMessages:
      description: Array of messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DraftsListConversationDraftsResponse'
    listOfSeenReceipts:
      description: Array of seen receipts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessagesGetMessageSeenStatusResponse'
    listOfConversations:
      description: Array of conversations
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/ContactsListConversationsReverseChronologicalOrderResponse
    listOfConversationSearchResults:
      description: Array of conversation search results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConversationsSearchByQueryResponse'
    listOfEvents:
      description: Array of events
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConversationsListEventsResponse'
    listOfRoles:
      description: Array of Roles
      content:
        application/json:
          schema:
            type: object
            properties:
              _links:
                type: object
                properties:
                  self:
                    description: Link to resource
                    type: string
              _results:
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'
    listOfRules:
      description: Array of Rules
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RulesListAllCompanyRulesResponse'
    listOfTags:
      description: Array of Tags
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagsListCompanyResponse'
    listOfLinks:
      description: Array of Links
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinksListByIdAndTypeResponse'
    listOfChannels:
      description: Array of Channels
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChannelsListResponse'
    listOfCustomFields:
      description: Array of Custom Fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomFieldsListAccountCustomFieldsResponse'
    listOfKnowledgeBases:
      description: Array of knowledge bases
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesListKnowledgeBasesResponse'
    listOfKnowledgeBaseCategories:
      description: Array of knowledge base categories
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesListCategoriesInBaseResponse'
    listOfKnowledgeBaseArticles:
      description: Array of knowledge base articles
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesListArticlesInCategoryResponse'
    account:
      description: An Account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsCreateNewAccountResponse'
    contact:
      description: A contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactsCreateNewContactResponse'
    message:
      description: A message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DraftsCreateNewDraftMessageResponse'
    conversation:
      description: A conversation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConversationsCreateDiscussionResponse'
    role:
      description: A role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleResponse'
    rule:
      description: A rule
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RulesGetRuleResponse'
    tag:
      description: A tag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagResponse'
    link:
      description: A link
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkResponse'
    attachment:
      description: An attachment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AttachmentsDownloadAttachmentFileResponse'
    identity:
      description: API Token details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenIdentityGetDetailsResponse'
    cannedAnswer:
      description: A message template
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageTemplatesCreateChildTemplateResponse'
    cannedAnswerFolder:
      description: A message template folder
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageTemplateFoldersCreateNewFolderResponse'
    signature:
      description: A signature
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignaturesGetSignatureResponse'
    contactNote:
      description: A contact note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactNoteResponses'
    channel:
      description: A channel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChannelsGetChannelResponse'
    comment:
      description: A comment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommentsUpdateCommentResponse'
    inbox:
      description: An inbox
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InboxesGetInboxResponse'
    shift:
      description: A shift
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShiftResponse'
    team:
      description: A team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamsGetWorkspaceResponse'
    teammate:
      description: A teammate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeammateResponse'
    teammateGroup:
      description: A teammate group
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeammateGroupResponse'
    event:
      description: An event
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventResponse'
    knowledgeBase:
      description: A knowledge base with content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesCreateNewKnowledgeBaseResponse'
    knowledgeBaseSlim:
      description: A knowledge base
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesGetKnowledgeBaseResponse'
    knowledgeBaseCategory:
      description: A knowledge base category with content
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/KnowledgeBasesGetCategoryContentDefaultLocaleResponse
    knowledgeBaseCategorySlim:
      description: A knowledge base category
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesGetCategoryResponse'
    knowledgeBaseArticle:
      description: A knowledge base article with content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesGetContentDefaultLocaleResponse'
    knowledgeBaseArticleSlim:
      description: A knowledge base article
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnowledgeBasesDeleteArticleResponse'
    acceptedMessage:
      description: An accepted message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessagesReceiveCustomMessageResponse'
    acceptedCannedAnswerFolderDeletion:
      description: A message template folder accepted for deletion
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageTemplateFoldersDeleteFolderResponse'
    accepted:
      description: Request accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChannelsValidateSmtpSettingsResponse'
  schemas:
    Account:
      type: object
      properties:
        description:
          description: Account description
          type: string
        name:
          description: Name of the Account
          type: string
        domains:
          description: List of domains associated with the Account
          type: array
          items:
            type: string
        external_id:
          description: ID of the Account in an external system
          type: string
        custom_fields:
          description: Custom fields for this account
          $ref: '#/components/schemas/CustomFieldParameter'
    AccountIds:
      type: object
      required:
        - account_ids
      properties:
        account_ids:
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    AccountPatch:
      type: object
      properties:
        description:
          description: Account description
          type: string
        name:
          description: Name of the Account
          type: string
        domains:
          description: List of domains associated with the Account
          type: array
          items:
            type: string
        custom_fields:
          description: >-
            Custom fields for this account. If you want to keep all custom
            fields the same when updating this resource, do not include any
            custom fields in the update. If you want to update custom fields,
            make sure to include all custom fields, not just the fields you want
            to add or update. If you send only the custom fields you want to
            update, the other custom fields will be erased. You can retrieve the
            existing custom fields before making the update to note the current
            fields.
          $ref: '#/components/schemas/CustomFieldParameter'
    AccountResponse:
      properties:
        description:
          description: Account Description
          type: string
          example: Limitless Paper in a Paperless World
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/accounts/acc_76
            related:
              type: object
              properties:
                contacts:
                  description: Link to contacts associated to the account
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/accounts/acc_76/contacts
        id:
          description: Unique identifier of the account
          type: string
          example: acc_76
        name:
          description: Account name
          type: string
          example: Dunder Mifflin, Inc.
        logo_url:
          description: URL of the Account's logo
          type: string
          example: >-
            https://yourCompany.api.frontapp.com/accounts/acc_aq/logo-1654309308278
        domains:
          description: List of domains associated to the Account
          type: array
          items:
            type: string
            example:
              - dundermifflininc.com
              - limitlesspaper.com
        external_id:
          description: >-
            ID of the Account in an External system, such as your backoffice
            system or CRM
          type: string
          example: 8739674733
        custom_fields:
          description: Custom fields for this account
          $ref: '#/components/schemas/CustomFieldParameter'
        created_at:
          description: Timestamp when the account was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the account was updated
          type: number
          example: 1654309308.278
    AddContactsToGroup:
      required:
        - contact_ids
      properties:
        contact_ids:
          description: >-
            List of IDs of the contacts to add in the requested group.
            Alternatively, you can supply the contact source and handle as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    AnalyticsActivitiesColumns:
      type: string
      enum:
        - Activity ID
        - Type
        - Source
        - Message ID
        - Conversation ID
        - Segment
        - Segment start
        - Segment end
        - Direction
        - Status
        - Status at activity time
        - Inbox
        - Inbox API ID
        - Inbox at activity time
        - Inbox API IDs at activity time
        - Previous inbox IDs
        - Message date
        - Autoreply
        - Reaction time
        - Total reply time
        - Handle time
        - Response time
        - Stage resolution time
        - Replies to resolution
        - Attributed to
        - Assignee
        - Author
        - Contact name
        - Contact handle
        - Account names
        - To
        - Cc
        - Bcc
        - Extract
        - Tags
        - Tag API IDs
        - Tags at activity time
        - Tag API IDs at activity time
        - Tag application duration
        - Activity API ID
        - Message API ID
        - Comment API ID
        - Conversation API ID
        - Message original ID
        - New Conversation
        - First response
        - Business hours
        - Subject
        - Account name
        - Survey rating
        - Survey comment
        - Segment closed
        - Segment contains messages
        - Last segment activity
        - Added tag
        - Added tag API ID
        - Removed tag
        - Removed tag API ID
    AnalyticsActivitiesExportsColumns:
      required:
        - columns
      type: object
      properties:
        columns:
          description: >
            List of the columns to include in the export.

            ❗️Columns "Resolution time" and "Final resolution" are deprecated
            and not supported anymore through the "columns" field.
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsActivitiesColumns'
          default:
            - Activity ID
            - Type
            - Source
            - Message ID
            - Conversation ID
            - Segment
            - Segment start
            - Segment end
            - Direction
            - Status
            - Status at activity time
            - Inbox
            - Inbox API ID
            - Inbox at activity time
            - Inbox API IDs at activity time
            - Previous inbox IDs
            - Message date
            - Autoreply
            - Reaction time
            - Total reply time
            - Handle time
            - Response time
            - Stage resolution time
            - Replies to resolution
            - Attributed to
            - Assignee
            - Author
            - Contact name
            - Contact handle
            - Account names
            - To
            - Cc
            - Bcc
            - Extract
            - Tags
            - Tag API IDs
            - Tags at activity time
            - Tag API IDs at activity time
            - Tag application duration
            - Activity API ID
            - Message API ID
            - Comment API ID
            - Conversation API ID
            - Message original ID
            - New Conversation
            - First response
            - Business hours
            - Subject
            - Account name
            - Survey rating
            - Survey comment
            - Segment closed
            - Segment contains messages
            - Last segment activity
    AnalyticsExportRequest:
      discriminator:
        propertyName: type
        mapping:
          messages: '#/components/schemas/AnalyticsMessagesExportColumns'
          events: '#/components/schemas/AnalyticsActivitiesExportsColumns'
      oneOf:
        - $ref: '#/components/schemas/AnalyticsMessagesExportColumns'
        - $ref: '#/components/schemas/AnalyticsActivitiesExportsColumns'
      properties:
        type:
          description: >-
            The type of export to create. The type you specify determines which
            columns are available for the export.
          type: string
          enum:
            - messages
            - events
        start:
          description: >-
            Start time of the data to include in the export (seconds since
            1970-01-01T00:00:00+00). Will be rounded down to the start of the
            day.
          type: number
        end:
          description: >-
            End time of the data to include in the export (seconds since
            1970-01-01T00:00:00+00). Will be rounded up to the end of the day.
          type: number
        timezone:
          description: >-
            [IANA
            name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
            of the timezone to format the dates with. If omitted, the export
            will use Etc/UTC.
          type: string
        filters:
          $ref: '#/components/schemas/AnalyticsFilters'
    AnalyticsExportResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to analytics export
              type: string
              example: https://yourCompany.api.frontapp.com/analytics/exports/exp_o9y1a
        status:
          description: Status of the analytics
          type: string
          enum:
            - running
            - done
            - too_big
            - failed
          example: running
        progress:
          description: >-
            Number ranging from 0 to 100 corresponding to the percentage of the
            analytics processed.
          type: integer
          minimum: 0
          maximum: 100
          example: 20
        url:
          description: >-
            The URL from which the export data can be downloaded. Only displays
            after you make a GET request to the link included in the POST
            response.
          type: string
          example: https://api.frontapp.com/analytics/exports/exp_o9y1a/download
        filename:
          description: >-
            The filename of the export with extension included. Only displays
            after you make a GET request to the link included in the POST
            response.
          type: string
          example: export-messages-yourCompany-2023-07-19-212d-e55df0.csv
        size:
          description: >-
            Size (in bytes) of the export data. Only displays after you make a
            GET request to the link included in the POST response.
          type: number
          example: 26639
        created_at:
          description: Timestamp (in seconds) at which the export was requested.
          type: number
          example: 1703103649.159
        filters:
          $ref: '#/components/schemas/AnalyticsFilters'
    AnalyticsFilters:
      description: Resources to compute the analytics for. Defaults to all.
      anyOf:
        - $ref: '#/components/schemas/TagIds'
        - $ref: '#/components/schemas/TeammateIds'
        - $ref: '#/components/schemas/ChannelIds'
        - $ref: '#/components/schemas/InboxIds'
        - $ref: '#/components/schemas/TeamIds'
        - $ref: '#/components/schemas/AccountIds'
    AnalyticsMessagesColumns:
      type: string
      enum:
        - Message ID
        - Conversation ID
        - Segment
        - Direction
        - Status
        - Inbox
        - Inbox API ID
        - Message date
        - Autoreply
        - Reaction time
        - Total reply time
        - Handle time
        - Response time
        - Attributed to
        - Assignee
        - Author
        - Contact name
        - Contact handle
        - Account names
        - To
        - Cc
        - Bcc
        - Extract
        - Tags
        - Tag API IDs
        - Message API ID
        - Conversation API ID
        - New Conversation
        - First response
        - Business hours
        - Subject
        - Segment start
        - Segment end
        - Segment closed
        - Last segment activity
    AnalyticsMessagesExportColumns:
      required:
        - columns
      type: object
      properties:
        columns:
          description: >
            List of the columns to include in the export.

            ❗️ Columns "Resolution time", "Final resolution" and "Replies to
            resolve" are deprecated and not supported anymore through the
            "columns" field.
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsMessagesColumns'
          default:
            - Message ID
            - Conversation ID
            - Segment
            - Direction
            - Status
            - Inbox
            - Inbox API ID
            - Message date
            - Autoreply
            - Reaction time
            - Total reply time
            - Handle time
            - Response time
            - Attributed to
            - Assignee
            - Author
            - Contact name
            - Contact handle
            - Account names
            - To
            - Cc
            - Bcc
            - Extract
            - Tags
            - Tag API IDs
            - Message API ID
            - Conversation API ID
            - New Conversation
            - First response
            - Business hours
            - Subject
            - Segment start
            - Segment end
            - Segment closed
            - Last segment activity
    AnalyticsMetricId:
      type: string
      enum:
        - avg_csat_survey_response
        - avg_first_response_time
        - avg_handle_time
        - avg_replies_to_resolution
        - avg_resolution_time
        - avg_response_time
        - avg_sla_breach_time
        - avg_total_reply_time
        - new_segments_count
        - num_active_segments_full
        - num_archived_segments
        - num_archived_segments_with_reply
        - num_csat_survey_response
        - num_messages_received
        - num_messages_sent
        - num_sla_breach
        - pct_csat_survey_satisfaction
        - pct_resolved_on_first_reply
        - pct_tagged_conversations
        - num_closed_segments
        - num_open_segments_start
        - num_open_segments_end
        - num_resolved_segments
        - num_unresolved_active_segments
        - num_workload_segments
    AnalyticsReportRequest:
      properties:
        start:
          description: >-
            Start time of the data to include in the export (seconds since
            1970-01-01T00:00:00+00). Will be rounded down to the start of the
            day.
          type: number
        end:
          description: >-
            End time of the data to include in the export (seconds since
            1970-01-01T00:00:00+00). Will be rounded up to the end of the day.
          type: number
        timezone:
          description: >-
            [IANA
            name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
            of the timezone to format the dates with. If omitted, the export
            will use Etc/UTC.
          type: string
        filters:
          $ref: '#/components/schemas/AnalyticsFilters'
        metrics:
          description: List of the metrics required.
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsMetricId'
      required:
        - start
        - end
        - metrics
    AnalyticsReportResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to analytics job.
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/analytics/reports/b45efa66237cc453252d9019449c7a64f5cfdb491b6c2c1d6df33c1050d60e33
        status:
          description: Status of the report.
          type: string
          enum:
            - running
            - done
            - failed
          example: done
        progress:
          description: >-
            Number ranging from 0 to 100 corresponding to the percentage of the
            analytics processed.
          type: integer
          minimum: 0
          maximum: 100
          example: 100
        metrics:
          description: The metrics computed for the report.
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsScalar'
    AnalyticsScalar:
      properties:
        id:
          $ref: '#/components/schemas/AnalyticsMetricId'
        type:
          $ref: '#/components/schemas/AnalyticsScalarType'
        value:
          $ref: '#/components/schemas/AnalyticsScalarValue'
    AnalyticsScalarType:
      type: string
      example: number
      enum:
        - number
        - percentage
        - string
        - duration
    AnalyticsScalarValue:
      properties:
        id:
          $ref: '#/components/schemas/AnalyticsMetricId'
        type:
          $ref: '#/components/schemas/AnalyticsScalarType'
        value:
          description: The value of a scalar metric.
          oneOf:
            - type: integer
            - type: string
            - type: object
              properties:
                label:
                  type: string
                resource:
                  type: object
                  properties:
                    id:
                      type: number
                    _links:
                      type: object
                      properties:
                        self:
                          description: Link to a resource.
                          type: string
    Attachment:
      properties:
        id:
          description: The unique identifier of the attachment.
          type: string
          example: fil_3q8a7mby
        filename:
          description: Name of the attached file
          type: string
          example: Andy_Anger_Management_Certificate.png
        url:
          description: URL to download the attached file
          type: string
          example: https://yourCompany.api.frontapp.com/download/fil_3q8a7mby
        content_type:
          description: >-
            Content type of the attached file in [MIME
            format](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types).
            Note that some attachments types may not be supported.
          type: string
          example: image/png
        size:
          description: Size (in byte) of the attached file
          type: integer
          example: 4405
        metadata:
          description: Attachment metadata
          type: object
          properties:
            is_inline:
              description: Whether or not the attachment is part of the message body
              type: boolean
              example: true
            cid:
              description: >-
                Unique identifier used to link an attachment to where it is used
                in the message body
              type: string
              example: 526b45586d0e6b1c484afab63d1ef0be
    ChannelIds:
      type: object
      required:
        - channel_ids
      properties:
        channel_ids:
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    ChannelResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/channels/cha_1gv4
            related:
              type: object
              properties:
                inbox:
                  description: Link to channel inbox
                  type: string
                  example: https://yourCompany.api.frontapp.com/inboxes/inb_1ix6
                owner:
                  description: Link to channel owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teams/jen_k30
        id:
          description: Unique identifier for the channel
          type: string
          example: cha_1gv4
        name:
          description: The name of the channel
          type: string
          example: Paper Sales Inbox
        address:
          description: Address receiving the messages
          type: string
          example: sales@dundermifflin.com
        types:
          description: Type of the channel
          type: string
          enum:
            - custom
            - facebook
            - gmail
            - google_play
            - imap
            - intercom
            - form
            - office365
            - layer_anon
            - smtp
            - talkdesk
            - truly
            - twilio
            - twilio_whatsapp
            - twitter
            - twitter_dm
            - yalo_wha
            - front_chat
            - front_mail
          example: gmail
        send_as:
          description: Address which appears as the sender for messages sent from Front
          type: string
          example: sales@dundermifflin.com
        settings:
          description: Channel settings
          type: object
          properties:
            undo_send_time:
              description: >-
                The time (measured in seconds) that users have to undo a send
                operation in the channel.
              type: integer
              enum:
                - 0
                - 5
                - 10
                - 15
                - 30
                - 60
              example: 15
            all_teammates_can_reply:
              description: >-
                Whether teammates without inbox access can reply on this
                channel. Only present for shared channels; omitted for private
                channels.
              type: boolean
              example: false
        is_private:
          description: Whether or not the channel is individual
          type: boolean
          default: false
          example: false
        is_valid:
          description: Whether or not the channel configuration is valid
          type: boolean
          default: false
          example: true
    CommentResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/comments/com_1ywg3f2
            related:
              type: object
              properties:
                conversations:
                  description: Link to comment's conversation
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_y4xb93i
                mentions:
                  description: Link to comment mentions
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/comments/com_1ywg3f2/mentions
        id:
          description: Unique identifier of the comment
          type: string
          example: com_1ywg3f2
        author:
          description: Teammate who wrote the comment
          $ref: '#/components/schemas/TeammateResponse'
        body:
          description: Content of the comment
          type: string
          example: >-
            Sometimes I'll start a sentence and I don't even know where it's
            going. I just hope I find it along the way.
        posted_at:
          description: Date at which the comment was posted
          type: number
          example: 1698943401.378
        attachments:
          description: List of files attached to the comment
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        is_pinned:
          description: Whether or not the comment is pinned in its conversation
          type: boolean
          example: true
    Contact:
      properties:
        description:
          description: Contact description
          type: string
        name:
          description: Contact name
          type: string
        avatar:
          description: >-
            Binary data of avatar. Must use `Content-Type: multipart/form-data`
            if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1).  Max 25
            MB.
          type: string
          format: binary
        is_spammer:
          description: Whether or not the contact is marked as a spammer
          type: boolean
        links:
          description: List of all the links of the contact
          type: array
          items:
            type: string
        group_names:
          description: >-
            List of all the group names the contact belongs to. It will
            automatically create missing groups
          type: array
          items:
            type: string
        custom_fields:
          description: >-
            Custom fields for this contact. If you want to keep all custom
            fields the same when updating this resource, do not include any
            custom fields in the update. If you want to update custom fields,
            make sure to include all custom fields, not just the fields you want
            to add or update. If you send only the custom fields you want to
            update, the other custom fields will be erased. You can retrieve the
            existing custom fields before making the update to note the current
            fields.
          $ref: '#/components/schemas/CustomFieldParameter'
    ContactGroupResponses:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/contact_groups/grp_3j342
            related:
              type: object
              properties:
                contacts:
                  description: Link to group contacts
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/contact_groups/grp_3j342/contacts
                owner:
                  description: Link to group owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teammates/tea_e35u
        id:
          description: Unique identifier of the group
          type: string
          example: grp_3j342
        name:
          description: Name of the group
          type: string
          example: Party Planning Committee
        is_private:
          description: Whether or not the contact is individual
          type: boolean
          example: false
    ContactHandle:
      type: object
      required:
        - handle
        - source
      properties:
        handle:
          description: Handle used to reach the contact.
          type: string
          example: dwight@limitlesspaper.com
        source:
          description: >-
            Source of the handle. Can be `email`, `phone`, `twitter`,
            `facebook`, `intercom`, `front_chat`, or `custom`.
          type: string
          enum:
            - twitter
            - email
            - phone
            - facebook
            - intercom
            - front_chat
            - custom
          example: email
    ContactIds:
      type: object
      required:
        - contact_ids
      properties:
        contact_ids:
          description: >-
            The contact IDs to include. Alternatively, you can supply the
            contact source and handle as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    ContactNoteResponses:
      type: object
      properties:
        author:
          description: Teammate who wrote the note
          $ref: '#/components/schemas/TeammateResponse'
          example: https://yourCompany.api.frontapp.com/teammates/tea_6r55a
        body:
          description: Content of the note
          type: string
          example: >-
            Mrs. Allen is our most important client … because every client is
            our most important client.
        created_at:
          description: Date at which the note have been created
          type: number
          example: 1701806790.536
    ContactResponse:
      properties:
        description:
          description: Contact description
          type: string
          example: Assistant to the regional manager
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/contacts/crd_3cgz4ge"
            related:
              type: object
              properties:
                notes:
                  description: Link to contact notes
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/contacts/crd_3cgz4ge/notes
                conversations:
                  description: Link to contact conversations
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/contacts/crd_3cgz4ge/conversations
                owner:
                  description: Link to contact owner
                  type: string
                  example: null
        id:
          description: Unique identifier of the contact
          type: string
          example: crd_3cgz4ge
        name:
          description: Contact name
          type: string
          example: Dwight Schrute
        avatar_url:
          description: URL of the contact's avatar
          type: string
          example: >-
            https://yourCompany.api.frontapp.com/contacts/crd_3cgz4ge/avatar-1673436467707
        is_spammer:
          description: Whether or not the contact is marked as a spammer
          type: boolean
          example: false
        links:
          description: List of all the links of the contact
          type: array
          items:
            type: string
            example:
              - https://shrutefarms.com
              - https://eatyourbeets.com
        groups:
          description: List of the groups the contact belongs to.
          type: array
          items:
            $ref: '#/components/schemas/ContactGroupResponses'
        handles:
          description: List of the handles and sources with which the contact is reachable.
          type: array
          items:
            $ref: '#/components/schemas/ContactHandle'
        custom_fields:
          description: Custom fields for this contact.
          $ref: '#/components/schemas/CustomFieldParameter'
        is_private:
          description: Whether or not the contact is individual
          type: boolean
          example: true
    ConversationResponse:
      properties:
        tags:
          description: List of the tags for this conversation
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q
            related:
              type: object
              properties:
                events:
                  description: Link to conversation events
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q/events
                followers:
                  description: Link to conversation followers
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q/followers
                messages:
                  description: Link to conversation messages
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q/messages
                comments:
                  description: Link to conversation comments
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q/comments
                inboxes:
                  description: Link to conversation inboxes
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q/inboxes
                last_message:
                  description: Link to last message of the conversation
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/messages/msg_1q15qmtq?referer=conversation
        id:
          description: Unique identifier of the conversation
          type: string
          example: cnv_yo1kg5q
        subject:
          description: Subject of the message for email message
          type: string
          example: How to prank Dwight Schrute
        status:
          description: Status of the conversation
          type: string
          enum:
            - archived
            - unassigned
            - deleted
            - assigned
          example: assigned
        assignee:
          description: Partial representation of the teammate assigned to the conversation
          $ref: '#/components/schemas/TeammateResponse'
        recipient:
          description: Main recipient of the conversation
          $ref: '#/components/schemas/RecipientResponse'
        links:
          description: List of the links for this conversation
          type: array
          items:
            $ref: '#/components/schemas/LinkResponse'
        custom_fields:
          description: Custom fields for this conversation
          $ref: '#/components/schemas/CustomFieldParameter'
        created_at:
          description: Timestamp at which the conversation have been created.
          type: number
          example: 1701292649.333
        waiting_since:
          description: Timestamp of the oldest unreplied message.
          type: number
          example: 1701292649.333
        is_private:
          description: Whether or not the conversation is private
          type: boolean
          example: true
        scheduled_reminders:
          description: >-
            List of scheduled (non-expired and non-canceled) reminders for this
            conversation
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
        metadata:
          description: Optional metadata about the conversation
          type: object
          properties:
            external_conversation_ids:
              description: >-
                List of external_ids for partner channel associated with the
                conversation. Only present for partner channel token
                authenticated requests.
              type: array
              example:
                - JS3949
                - JS9403
              items:
                type: string
    CreateChannel:
      required:
        - type
      properties:
        name:
          description: Name of the channel
          type: string
        settings:
          description: Settings of the channel
          type: object
          properties:
            undo_send_time:
              description: >-
                The time (measured in seconds) that users have to undo a send
                operation in the channel.
              type: integer
              enum:
                - 0
                - 5
                - 10
                - 15
                - 30
                - 60
            all_teammates_can_reply:
              description: >-
                Whether teammates without inbox access can reply on this
                channel. Only allowed for shared channels.
              type: boolean
            webhook_url:
              description: >-
                The webhook URL outbound messages should be sent to. Only
                allowed for "custom" type channels.
              type: string
            sid:
              description: >-
                The SID of the Twilio channel. Only allowed for "twilio" type
                channels.
              type: string
            auth_token:
              description: >-
                The auth token for the Twilio account. Only allowed for "twilio"
                type channels.
              type: string
        type:
          description: Type of the channel
          type: string
          enum:
            - custom
            - smtp
            - twilio
        send_as:
          description: Sending address of your channel. Required for SMTP channels.
          type: string
    CreateComment:
      required:
        - body
      properties:
        author_id:
          description: >-
            ID of the teammate creating the comment. Alternatively, you can
            supply the author as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1). If
            omitted, will post as the API Token or OAuth client of the
            requester.
          type: string
        body:
          description: Content of the comment. Can include markdown formatting.
          type: string
        is_pinned:
          description: Whether or not the comment is pinned in its conversation.
          type: boolean
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1).  Max 25
            MB.
          type: array
          items:
            type: string
            format: binary
    CreateContact:
      required:
        - handles
      allOf:
        - $ref: '#/components/schemas/Contact'
        - type: object
          properties:
            handles:
              description: >-
                List of the handles for this contact. Each handle object should
                include `handle` and `source` fields.
              type: array
              items:
                $ref: '#/components/schemas/ContactHandle'
    CreateContactGroup:
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the group
          type: string
    CreateContactNote:
      type: object
      required:
        - author_id
        - body
      properties:
        author_id:
          description: ID of teammate creating the note
          type: string
        body:
          description: Content of the note
          type: string
    CreateConversation:
      required:
        - type
        - subject
        - comment
      properties:
        type:
          description: Conversation type
          type: string
          enum:
            - discussion
        inbox_id:
          description: >-
            Inbox ID for the conversation. Either `inbox_id` OR `teammate_ids`
            must be provided (not both).
          type: string
        teammate_ids:
          description: >-
            Teammates to add to the conversation. Either `inbox_id` OR
            `teammate_ids` must be provided (not both).
          type: array
          items:
            type: string
        subject:
          description: Subject of the conversation
          type: string
        comment:
          description: Details for the starter comment
          type: object
          required:
            - body
          properties:
            author_id:
              description: >-
                ID of the teammate creating the comment. If omitted, will post
                as the API Token or OAuth client of the requester.
              type: string
            body:
              description: Content of the comment
              type: string
            attachments:
              description: >-
                Binary data of attached files. Must use `Content-Type:
                multipart/form-data` if specified. See
                [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
                or read more about
                [Attachments](https://dev.frontapp.com/docs/attachments-1).
              type: array
              items:
                type: string
                format: binary
        custom_fields:
          description: Custom fields for this conversation
          $ref: '#/components/schemas/CustomFieldParameter'
    CreateDraft:
      required:
        - author_id
        - body
      properties:
        author_id:
          description: >-
            ID of the teammate on behalf of whom the draft will be created.
            Alternatively, you can supply the author ID as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: string
        to:
          description: >-
            List of recipient handles who will receive the message once the
            draft is sent
          type: array
          items:
            type: string
        cc:
          description: >-
            List of recipient handles who will receive a copy of the message
            once the draft is sent
          type: array
          items:
            type: string
        bcc:
          description: >-
            List of the recipient handles who will receive a blind copy of the
            message once the draft is sent
          type: array
          items:
            type: string
        subject:
          description: Subject of the draft.
          type: string
        body:
          description: Body of the draft
          type: string
        quote_body:
          description: >-
            Body for the quote that the message is referencing. Only available
            on email channels.
          type: string
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1). Max 25
            MB.
          type: array
          items:
            type: string
            format: binary
        mode:
          description: >-
            Mode of the draft to create. Can be 'private' (draft is visible to
            the author only) or 'shared' (draft is visible to all teammates with
            access to the conversation).
          type: string
          enum:
            - private
            - shared
          default: private
        signature_id:
          description: >-
            ID of the signature to attach to this draft. If null, no signature
            is attached.
          type: string
        should_add_default_signature:
          description: >-
            Whether or not Front should try to resolve a signature for the
            message. Is ignored if signature_id is included. Default false;
          type: boolean
    CreateInbox:
      type: object
      required:
        - name
      properties:
        name:
          description: The name of the inbox
          type: string
        teammate_ids:
          description: >-
            An array of teammate IDs that should have access to the inbox.
            Alternatively, you can supply teammate emails as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    CreateLink:
      description: A link is used to connect a Front conversation to an external resource.
      type: object
      properties:
        name:
          description: >-
            Name of the link. If none is specified, the external_url is used as
            a default
          type: string
        external_url:
          description: Underlying identifying url of the link
          type: string
        pattern:
          description: >-
            The string that dynamic object configurations will match on to
            update a specific dynamic object. For example, if you've configured
            a dynamic object to match on ORDER-{Digits}, and you want to
            specifically update the dynamic objects for ORDER-777 to retrieve
            the latest information from external systems, send "ORDER-777".
            Repeat for other specific identifiers, such as "ORDER-435".
          type: string
          example: ORDER-123
    CreateMessageTemplateAsChild:
      description: A message template that is used for pre-written responses
      type: object
      required:
        - name
        - body
      properties:
        name:
          description: Name of the message template
          type: string
          example: Out of Office
        subject:
          description: >-
            Subject of the message template. If not set, the name will be used
            to populate the subject.
          type: string
          example: Out of Office
        body:
          description: Body of the message template
          type: string
          example: Sorry, I'm OOO until October 25th.
        inbox_ids:
          description: >-
            The specific inboxes this template is available in. If unspecified
            or null, then it will be available in all inboxes. Array should be
            non-empty.
          type: array
          items:
            type: string
          example: null
    CreateMessageTemplateFolder:
      description: >-
        A message template folder that is used to store message templates or
        other folders.
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the message template folder
          type: string
          example: PTO templates
        parent_folder_id:
          description: >-
            ID of the parent folder to be placed into. Goes into the root folder
            if unspecified or if null.
          type: string
          example: null
    CreateMessageTemplateFolderAsChild:
      description: >-
        A message template folder that is used to store message templates or
        other folders.
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the message template folder
          type: string
          example: PTO templates
    CreatePrivateMessageTemplate:
      description: A message template that is used for pre-written responses
      type: object
      required:
        - name
        - body
      properties:
        name:
          description: Name of the message template
          type: string
          example: Out of Office
        subject:
          description: >-
            Subject of the message template. If not set, the name will be used
            to populate the subject.
          type: string
          example: Out of Office
        body:
          description: Body of the message template
          type: string
          example: Sorry, I'm OOO until October 25th.
        folder_id:
          description: ID of the message template folder to place this message template in
          type: string
          example: null
    CreatePrivateSignature:
      description: A signature that can be used to sign messages.
      type: object
      required:
        - name
        - body
      properties:
        name:
          description: Name of the signature
          type: string
        sender_info:
          description: >-
            Sender info of the signature that will appear in the From line of
            emails sent.
          type: string
        body:
          description: Body of the signature
          type: string
        is_default:
          description: >-
            If true, the signature will be set as the default signature for the
            teammate.
          type: boolean
          default: false
        channel_ids:
          description: >-
            The specific channels this signature is available in. If omitted or
            null, the signature will be available in all channels the teammate
            has access to. Alternatively, you can specify channels using a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            type: string
    CreateSharedMessageTemplate:
      description: A message template that is used for pre-written responses
      type: object
      required:
        - name
        - body
      properties:
        name:
          description: Name of the message template
          type: string
          example: Out of Office
        subject:
          description: >-
            Subject of the message template. If not set, the name will be used
            to populate the subject.
          type: string
          example: Out of Office
        body:
          description: Body of the message template
          type: string
          example: Sorry, I'm OOO until October 25th.
        folder_id:
          description: ID of the message template folder to place this message template in
          type: string
          example: null
        inbox_ids:
          description: >-
            The specific inboxes this template is available in. If unspecified
            or null, then it will be available in all inboxes. Array should be
            non-empty.
          type: array
          items:
            type: string
          example: null
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://dev.frontapp.com/docs/attachments-1).  Max 25 MB.
          type: array
          items:
            type: string
            format: binary
    CreateSharedSignature:
      description: A signature that can be used to sign messages.
      type: object
      required:
        - name
        - body
      properties:
        name:
          description: Name of the signature
          type: string
        sender_info:
          description: >-
            Sender info of the signature that will appear in the From line of
            emails sent.
          type: string
        body:
          description: Body of the signature
          type: string
        is_visible_for_all_teammate_channels:
          description: >-
            Whether or not the signature is visible in all individual channels
            for teammates in the given team.
          type: boolean
        is_default:
          description: >-
            If true, the signature will be set as the default signature for the
            team.
          type: boolean
          default: false
        channel_ids:
          description: >-
            The specific channels this signature is available in. If omitted or
            null, the signature will be available in all channels the team has
            access to. Alternatively, you can specify channels using a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            type: string
    CreateShift:
      required:
        - name
        - color
        - timezone
        - times
        - teammate_ids
      properties:
        name:
          description: Name of the shift
          type: string
        color:
          description: Color of the shift
          type: string
          enum:
            - black
            - grey
            - pink
            - purple
            - blue
            - teal
            - green
            - yellow
            - orange
            - red
        timezone:
          description: A timezone name as defined in the IANA tz database
          type: string
        times:
          description: The shift intervals per day of the week
          $ref: '#/components/schemas/ShiftIntervals'
        teammate_ids:
          description: >-
            List of all the teammate ids who will be part of this shift.
            Alternatively, you can supply emails as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    CreateTag:
      description: A tag is a label that can be used to classify conversations.
      type: object
      required:
        - name
      properties:
        description:
          description: Description of the tag
          type: string
        name:
          description: Name of the tag
          type: string
        highlight:
          description: Highlight color of the tag.
          type: string
          enum:
            - grey
            - pink
            - red
            - orange
            - yellow
            - green
            - light-blue
            - blue
            - purple
        is_visible_in_conversation_lists:
          description: Whether the tag is visible in conversation lists.
          type: boolean
          default: false
    CreateTeammateGroup:
      type: object
      required:
        - name
      properties:
        description:
          description: Description of the teammate group
          type: string
        name:
          description: Name of the teammate group
          type: string
        permissions:
          description: Permissions for the teammate group
          type: object
          properties:
            contacts:
              description: >-
                Permissions for accessing contact lists. This only applies if
                shared contacts permissions are enabled.
              type: object
              required:
                - access
              properties:
                access:
                  description: One of 'all', 'contact_groups', or 'none'.
                  type: string
                contact_group_ids:
                  description: >-
                    List of contact group ids. Can only be specified if access
                    is set to 'contact_groups'.
                  type: array
                  items:
                    type: string
    CustomFieldParameter:
      description: >-
        An object whose key is the `name` property defined for the custom field
        in the Front UI. The value of the key must use the same `type` specified
        for the custom field, as described in
        https://dev.frontapp.com/reference/custom-fields
      type: object
      example:
        city: London, UK
        isVIP: true
        renewal_date: 1525417200
        sla_time: 90
        owner: leela@planet-express.com
        replyTo: inb_55c8c149
        Job Title: firefighter
    CustomFieldResponse:
      properties:
        description:
          description: Description of the custom field
          type: string
          example: The billing plan of the customer
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/custom_fields/fld_co0e
        id:
          description: Unique identifier of the custom field
          type: string
          example: fld_co0e
        name:
          description: Name of the custom field
          type: string
          example: Customer plan
        type:
          description: Type of the custom field
          type: string
          enum:
            - string
            - boolean
            - datetime
            - number
            - teammate
            - teammate_list
            - inbox
            - enum
          example: enum
        values:
          description: List of possible values for a custom field of type `enum`.
          type: array
          items:
            type: object
            properties:
              value:
                description: Value of the custom field
                type: string
                example: Enterprise
              label:
                description: Human readable label for the value
                type: string
                example: Customer plan
      required:
        - _links
        - id
        - name
        - type
        - description
    CustomMessage:
      required:
        - sender
        - body
      properties:
        sender:
          description: Data of the sender
          type: object
          required:
            - handle
          properties:
            contact_id:
              description: ID of the contact in Front corresponding to the sender
              type: string
            name:
              description: Name of the sender
              type: string
            handle:
              description: >-
                Handle of the sender. It can be any string used to uniquely
                identify the sender. **Important:** When sending a phone number,
                include a country code preceded by a plus (+) sign. For example,
                +33 for France. If you do not send a country code or include a
                plus sign, Front will normalize your phone number to the USA
                (+1).
              type: string
        subject:
          description: Subject of the message
          type: string
        body:
          description: Body of the message
          type: string
        body_format:
          description: Format of the message body. Can be `markdown` (default) or `html`.
          type: string
          enum:
            - html
            - markdown
          default: markdown
        metadata:
          type: object
          properties:
            thread_ref:
              description: >-
                Reference which will be used to thread messages. If  omitted,
                Front threads by sender instead
              type: string
            headers:
              description: Custom object where any internal information can be stored
              type: object
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1).  Max 25
            MB.
          type: array
          items:
            type: string
            format: binary
    DeleteContactHandle:
      allOf:
        - $ref: '#/components/schemas/ContactHandle'
        - type: object
          properties:
            force:
              description: >-
                Force the deletetion of the contact if the handle is the last
                one
              type: boolean
              default: false
    DeleteDraft:
      required:
        - version
      properties:
        version:
          description: Version of the draft
          type: string
    EditDraft:
      required:
        - author_id
        - body
        - channel_id
      allOf:
        - $ref: '#/components/schemas/ReplyDraft'
        - type: object
          properties:
            version:
              description: Version of the draft
              type: string
            mode:
              description: >-
                Mode of the draft to update. Can only be 'shared' (draft is
                visible to all teammates with access to the conversation).
              type: string
              enum:
                - shared
    EventResponse:
      description: >-
        An event is created everytime something interesting is happening in
        Front.
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/events/evt_4ckcra8e
        id:
          description: Unique identifier of the event
          type: string
          example: evt_4ckcra8e
        type:
          description: Type of event
          type: string
          enum:
            - assign
            - unassign
            - archive
            - reopen
            - trash
            - restore
            - reminder
            - comment
            - mention
            - inbound
            - outbound
            - outbound_reply
            - move
            - forward
            - tag
            - untag
            - sending_error
            - message_bounce_error
            - conversations_merged
            - link_added
            - link_removed
            - custom_field_updated
          example: inbound
        emitted_at:
          description: Date at which the event has been emitted
          type: number
          example: 1703102616
        source:
          description: Event source
          type: object
          properties:
            _meta:
              description: Metadata about the resource
              type: object
              properties:
                type:
                  description: Type of resource
                  enum:
                    - api
                    - oauth_client
                    - rule
                    - teammate
                    - imap
                    - gmail
                    - reminder
                    - inboxes
                    - recipient
                  example: inboxes
                  type: string
            data:
              description: The resource which triggered the event
              oneOf:
                - $ref: '#/components/schemas/RuleResponse'
                - $ref: '#/components/schemas/TeammateResponse'
                - type: array
                  items:
                    $ref: '#/components/schemas/InboxResponse'
        target:
          description: Partial representation (type & id) of the event's target
          type: object
          properties:
            _meta:
              description: Metadata about the resource
              type: object
              properties:
                type:
                  description: Type of resource
                  enum:
                    - teammate
                    - inboxes
                    - message
                    - comment
                    - tag
                    - deleted_conversation_ids
                    - link
                    - custom_field
                  example: inboxes
                  type: string
            data:
              description: The resource which received the event
              oneOf:
                - $ref: '#/components/schemas/TeammateResponse'
                - $ref: '#/components/schemas/InboxResponse'
                - $ref: '#/components/schemas/TagResponse'
                - $ref: '#/components/schemas/CommentResponse'
                - $ref: '#/components/schemas/MessageResponse'
                - $ref: '#/components/schemas/LinkResponse'
        conversation:
          description: The conversation on which the event happened
          $ref: '#/components/schemas/ConversationResponse'
    IdentityResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/me
        id:
          description: Unique ID of company
          type: integer
          example: .nan
        name:
          description: Name of company
          type: string
          example: Dunder Mifflin Paper Company, Inc.
    ImportMessage:
      required:
        - sender
        - to
        - body
        - external_id
        - created_at
        - metadata
      properties:
        tags:
          description: List of tag names to add to the conversation
          type: array
          items:
            type: string
        sender:
          description: Data of the sender
          type: object
          required:
            - handle
          properties:
            author_id:
              description: >-
                ID of the teammate who is the author of the message. Ignored if
                the message is inbound.
              type: string
            name:
              description: Name of the sender
              type: string
            handle:
              description: >-
                Handle of the sender. It can be any string used to uniquely
                identify the sender. **Important:** When sending a phone number,
                include a country code preceded by a plus (+) sign. For example,
                +33 for France. If you do not send a country code or include a
                plus sign, Front will normalize your phone number to the USA
                (+1).
              type: string
        to:
          description: List of the recipient handles who will receive this message
          type: array
          items:
            type: string
        cc:
          description: >-
            List of the recipient handles who will receive a copy of this
            message
          type: array
          items:
            type: string
        bcc:
          description: >-
            List of the recipient handles who will receive a blind copy of this
            message
          type: array
          items:
            type: string
        subject:
          description: Subject of the message
          type: string
        body:
          description: Body of the message
          type: string
        body_format:
          description: >-
            Format of the message body. Can be `markdown` (default) or `html`,
            and can only be specified for `email` type.
          type: string
          enum:
            - html
            - markdown
          default: markdown
        external_id:
          description: >-
            External identifier of the message. Front won't import two messages
            with the same external ID.
          type: string
        created_at:
          description: Date at which the message as been sent or received.
          type: integer
        type:
          description: Type of the message to import. Default is `email`.
          type: string
          enum:
            - email
            - sms
            - intercom
            - custom
          default: email
        assignee_id:
          description: ID of the teammate who will be assigned to the conversation.
          type: string
        conversation_id:
          description: >-
            If supplied, Front will thread this message into conversation with
            the given ID. Note that including this parameter nullifies the
            `thread_ref` parameter _completely_.
          type: string
        metadata:
          type: object
          required:
            - is_inbound
          properties:
            thread_ref:
              description: >-
                Reference which will be used to thread messages. If  omitted,
                Front threads by sender instead
              type: string
            is_inbound:
              description: >-
                Determines if message is received (inbound) or sent (outbound)
                by you.
              type: boolean
            is_archived:
              description: Determines if message is archived after import.
              type: boolean
            should_skip_rules:
              description: Determines if rules should be skipped. `true` by default.
              type: boolean
              default: true
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1).  Max 25
            MB.
          type: array
          items:
            type: string
            format: binary
    InboxIds:
      type: object
      required:
        - inbox_ids
      properties:
        inbox_ids:
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    InboxResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/inboxes/inb_1ix6
            related:
              type: object
              properties:
                teammates:
                  description: Link to inbox teammates
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/inboxes/inb_1ix6/teammates
                conversations:
                  description: Link to inbox conversations
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/inboxes/inb_1ix6/conversations
                channels:
                  description: Link to inbox channels
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/inboxes/inb_1ix6/channels
                owner:
                  description: Link to inbox owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teams/tim_k30
        id:
          description: Unique identifier for the inbox
          type: string
          example: inb_1ix6
        name:
          description: Name of the inbox
          type: string
          example: The Dundies
        is_private:
          description: Whether or not the inbox is individual
          type: boolean
          example: false
        is_public:
          description: >-
            Whether or not the inbox is available to all members of a team by
            default
          type: boolean
          example: true
        custom_fields:
          description: Custom fields for this inbox
          $ref: '#/components/schemas/CustomFieldParameter'
    KnowledgeBaseArticleCreate:
      type: object
      properties:
        category_id:
          description: ID of the category this article belongs to
          type: string
        author_id:
          description: Teammate ID of the article author
          type: string
        subject:
          description: Subject of the article
          type: string
        content:
          description: HTML content of the article
          type: string
        status:
          description: Article status
          type: string
          enum:
            - draft
            - published
          default: draft
    KnowledgeBaseArticlePatch:
      type: object
      properties:
        author_id:
          description: Teammate ID of the article author
          type: string
        subject:
          description: Subject of the article
          type: string
        content:
          description: HTML content of the article
          type: string
        status:
          description: Article status
          type: string
          enum:
            - draft
            - published
          default: draft
    KnowledgeBaseArticleResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_base_articles/kba_12
            related:
              type: object
              properties:
                knowledge_base:
                  description: Link to the article's knowledge base
                  type: string
                  example: https://yourCompany.api.frontapp.com/knowledge_bases/knb_12
                category:
                  description: Link to the article's category
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_category/kbc_12
                last_editor:
                  description: Link to the article's last editor
                  type: string
                  example: https://yourCompany.api.frontapp.com/teammates/tea_6r55a
        id:
          description: Unique identifier of the knowledge base article
          type: string
          example: kba_12
        name:
          description: Name of the article
          type: string
          example: Billing 101
        status:
          description: Status of the article
          type: string
          example: published
        keywords:
          description: Article keywords
          type: array
          items:
            type: string
            example:
              - billing
              - returns
        content:
          description: Article HTML content
          type: string
          example: <h1>How to process a return</h1><p>To process a return...</p>
        locale:
          description: Locale of the article
          type: string
          example: en
        attachments:
          description: List of files attached to the article
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        last_edited_at:
          description: Timestamp when the article was last edited
          type: number
          example: 1622672452.363
        created_at:
          description: Timestamp when the article was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the article was updated
          type: number
          example: 1654309308.278
    KnowledgeBaseArticleSlimResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_base_articles/kba_12
            related:
              type: object
              properties:
                knowledge_base:
                  description: Link to the article's knowledge base
                  type: string
                  example: https://yourCompany.api.frontapp.com/knowledge_bases/knb_12
                category:
                  description: Link to the article's category
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_category/kbc_12
                content:
                  description: Link to the article's content
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_articles/kba_12/content
        id:
          description: Unique identifier of the knowledge base article
          type: string
          example: kba_12
        locales:
          description: List of the locales the article supports
          type: array
          items:
            type: string
            example:
              - en
              - es
        created_at:
          description: Timestamp when the article was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the article was updated
          type: number
          example: 1654309308.278
    KnowledgeBaseCategoryCreate:
      type: object
      required:
        - name
      properties:
        description:
          description: Description of the knowledge base category
          type: string
        parent_category_id:
          description: ID of the parent category
          type: string
        name:
          description: Name of the knowledge base category
          type: string
    KnowledgeBaseCategoryPatch:
      type: object
      properties:
        description:
          description: Description of the knowledge base category
          type: string
        name:
          description: Name of the knowledge base category
          type: string
    KnowledgeBaseCategoryResponse:
      properties:
        description:
          description: Description of the category
          type: string
          example: How to get started in Front
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_base_categories/kbc_12
            related:
              type: object
              properties:
                knowledge_base:
                  description: Link to the category's knowledge base
                  type: string
                  example: https://yourCompany.api.frontapp.com/knowledge_bases/knb_12
                parent_category:
                  description: Link to the category's parent
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_catgories/kbc_10
                articles:
                  description: Link to articles in this category
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_categories/kbc_12/articles
        id:
          description: Unique identifier of the knowledge base category
          type: string
          example: kbc_12
        name:
          description: Category name
          type: string
          example: Getting started
        is_hidden:
          description: Is the category hidden
          type: boolean
          example: false
        locale:
          description: Locale of this category
          type: string
          enum:
            - fr
            - en
          example: en
        created_at:
          description: Timestamp when the category was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the category was updated
          type: number
          example: 1654309308.278
    KnowledgeBaseCategorySlimResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_base_categories/kbc_12
            related:
              type: object
              properties:
                knowledge_base:
                  description: Link to the category's knowledge base
                  type: string
                  example: https://yourCompany.api.frontapp.com/knowledge_bases/knb_12
                parent_category:
                  description: Link to the category's parent
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_catgories/kbc_10
                articles:
                  description: Link to articles in this category
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_base_categories/kbc_12/articles
        id:
          description: Unique identifier of the knowledge base category
          type: string
          example: kbc_12
        is_hidden:
          description: >-
            Is the category hidden from navigation and breadcrumbs (topics are
            accessed as direct links)
          type: boolean
          example: false
        locales:
          description: List of the locales the category supports
          type: array
          items:
            type: string
            example:
              - en
              - es
        created_at:
          description: Timestamp when the category was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the category was updated
          type: number
          example: 1654309308.278
    KnowledgeBaseCreate:
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the knowledge base
          type: string
        type:
          description: >-
            Determines if the knowledge base is publicly available or private
            only to your company
          type: string
          enum:
            - internal
            - external
          default: external
          example: internal
    KnowledgeBasePatch:
      type: object
      properties:
        name:
          description: Name of the knowledge base
          type: string
    KnowledgeBaseResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/knowledge_bases/knb_12
            related:
              type: object
              properties:
                articles:
                  description: Link to articles associated to the knowledge base
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_bases/knb_12/articles
                categories:
                  description: Link to categories associated to the knowledge base
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_bases/knb_12/categories
        id:
          description: Unique identifier of the knowledge base
          type: string
          example: knb_12
        name:
          description: Knowledge base name
          type: string
          example: Company Help Center
        status:
          description: Status of the KB
          type: string
          enum:
            - published
            - unpublished
          example: unpublished
        type:
          description: Type of the KB
          type: string
          enum:
            - internal
            - external
          example: internal
        locale:
          description: Locale of this requested KB
          type: string
          enum:
            - fr
            - en
          example: en
        created_at:
          description: Timestamp when the knowledge base was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the knowledge base was updated
          type: number
          example: 1654309308.278
    KnowledgeBaseSlimResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/knowledge_bases/knb_12
            related:
              type: object
              properties:
                articles:
                  description: Link to articles associated to the knowledge base
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_bases/knb_12/articles
                categories:
                  description: Link to categories associated to the knowledge base
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/knowledge_bases/knb_12/categories
        id:
          description: Unique identifier of the knowledge base
          type: string
          example: knb_12
        type:
          description: Type of the KB
          type: string
          enum:
            - internal
            - external
          example: internal
        locales:
          description: List of the KB's possible locales
          type: array
          items:
            type: string
            example:
              - en
              - es
        created_at:
          description: Timestamp when the knowledge base was created
          type: number
          example: 1622672452.363
        updated_at:
          description: Timestamp when the knowledge base was updated
          type: number
          example: 1654309308.278
    LinkResponse:
      description: A link used to connect a Front conversation to an external resource.
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/links/top_b2wpa
        id:
          description: Unique identifier of the link
          type: string
          example: top_b2wpa
        name:
          description: Display name of the link
          type: string
          example: JIRA-SCRAN-4567
        type:
          description: >-
            Type of the link. Typically associated with the underlying link
            provider (if known)
          type: string
          example: app_2f76b9ac738de158
        external_url:
          description: Underlying identifying external URL of the link
          type: string
          example: https://dundermifflin.atlassian.net/browse/PB-SCRAN-4567
        custom_fields:
          description: Custom fields for this link
          $ref: '#/components/schemas/CustomFieldParameter'
    MergeContacts:
      required:
        - contact_ids
      properties:
        target_contact_id:
          description: Optional contact ID to merge the other contacts into.
          type: string
        contact_ids:
          description: >-
            Array of all the contact IDs of the contacts to be merged.  If a
            target contact id is provided and that contact id is not in this
            array, the length of this array must be between 1 and 49.  If no
            target contact id is provided or it is contained in this array, the
            length must be between 2 and 50.
          type: array
          items:
            type: string
    MessageResponse:
      properties:
        version:
          description: The current version of the message in Front
          type: string
          example: 551ba368f3e7803cce51503ee3e58ef0-26028-1701804863304-945c
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/messages/msg_1q15qmtq
            related:
              type: object
              properties:
                conversation:
                  description: Link to message conversation
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/conversations/cnv_yo1kg5q
                message_replied_to:
                  description: Link to message this message replied to
                  type: string
                  example: https://yourCompany.api.frontapp.com/messages/msg_2y67qldq
                message_seen:
                  description: Link to message seen information
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/messages/msg_1q15qmtq/seen
        id:
          description: Unique identifier of the message
          type: string
          example: msg_1q15qmtq
        type:
          description: Type of the message
          type: string
          enum:
            - call
            - custom
            - email
            - facebook
            - front_chat
            - googleplay
            - intercom
            - internal
            - phone-call
            - sms
            - tweet
            - tweet_dm
            - whatsapp
            - yalo_wha
          example: email
        is_inbound:
          description: Whether or not the message has been received or sent
          type: boolean
          example: false
        draft_mode:
          description: >-
            If the message is a draft, describes the draft mode. Can be
            'private' (draft is visible to the author only) or 'shared' (draft
            is visible to all teammates with access to the conversation).
          type: string
          nullable: true
          enum:
            - shared
            - private
          example: shared
        error_type:
          description: Type of the error when the draft failed to be sent
          type: string
          example: null
        created_at:
          description: Date at which the message as been sent or received
          type: number
          example: 1701292639
        subject:
          description: Subject of the message
          type: string
          example: Jim's pranks are getting out of hand
        blurb:
          description: Preview of the message body
          type: string
          example: It's high time we discuss the pranking culture in the office
        author:
          description: Front teammate who sent this message
          $ref: '#/components/schemas/TeammateResponse'
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/RecipientResponse'
        body:
          description: Body of the message
          type: string
          example: >-
            <p>Hi there,</p><p>I wanted to let you know that I'm suggesting an
            update to <a href='https://dundermifflin.com/privacy/pranks'>Dunder
            Mifflin's Pranking Policy</a> to provide non-humorous employees
            greater control over their well-being in the office.</p>
        text:
          description: Text version of the body for email messages
          type: string
          example: >-
            Hi there,\n\nI wanted to let you know that I'm suggesting an update
            to Dunder Mifflin's Pranking Policy
            (https://dundermifflin.com/privacy/pranks) to provide non-humorous
            employees greater control over their well-being in the office.
        attachments:
          description: List of files attached to the message
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        signature:
          description: The signature attached to this message
          $ref: '#/components/schemas/SignatureResponse'
        metadata:
          description: Optional metadata about the message
          type: object
          properties:
            intercom_url:
              description: >-
                For `intercom` messages only. URL of the Intercom conversation
                the message is coming from.
              type: string
              example: http://intercom.com
            duration:
              description: For `truly-call` messages only. Length of the call in seconds.
              type: integer
              example: 189
            have_been_answered:
              description: >-
                For `truly-call` messages only. Whether or not the call have
                been answered.
              type: boolean
              example: false
            external_id:
              description: >-
                For `tweet` or 'custom' (partner channel token authenticated)
                messages only. Unique message identifier in the underlying
                provider (Twitter or Partner). For custom messages, only present
                for partner channel token authenticated requests.
              type: string
              example: dkd84992kduo903
            twitter_url:
              description: For `tweet` messages only. URL of the tweet.
              type: string
              example: https://twitter.com
            is_retweet:
              description: >-
                For `tweet` messages only. Whether or not the tweet is a
                retweet.
              type: boolean
              example: true
            have_been_retweeted:
              description: >-
                For `tweet` messages only. Whether or not the tweet have been
                retweeted.
              type: boolean
              example: true
            have_been_favorited:
              description: >-
                For `tweet` messages only. Whether or not the tweet have been
                favorited.
              type: boolean
              example: false
            thread_ref:
              description: >-
                For `custom` messages only. Custom reference which is used to
                thread messages.
              type: string
              example: t0930k9000-394
            headers:
              description: >-
                For `custom` messages only. Custom object holding internal
                information.
              type: object
            chat_visitor_url:
              description: >-
                For `front_chat` messages only. Source URL from the chat widget
                when sending a message.
              type: string
              example: https://yourCompany.com/products
    MessageTemplateFolderResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/message_template_folders/rsf_g2
            related:
              type: object
              properties:
                owner:
                  description: Link to resource's owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teams/tim_s47
                parent_folder:
                  description: >-
                    Link to parent folder. Null if the current folder does not
                    have a parent.
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/message_template_folders/rsf_g1
                child_folders:
                  description: >-
                    Link to child folders. Null if the current folder does not
                    have children.
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/message_template_folders/rsf_g2/message_template_folders
                child_answers:
                  description: >-
                    Link to message templates contained within this folder or
                    children folders. Null if the current folder does not have
                    any message templates.
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/message_template_folders/rsf_g2/message_templates
        id:
          description: Unique identifier of the message template folder
          type: string
          example: rsf_g2
        name:
          description: Name of the message template folder
          type: string
          example: Complaints to Toby (or about Toby)
        created_at:
          description: Timestamp at which the message template folder was created.
          type: number
          example: 1680300342.904
        updated_at:
          description: Timestamp at which the message template folder was updated.
          type: number
          example: 1688668654.501
    MessageTemplateResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/responses/rsp_16yc
            related:
              type: object
              properties:
                owner:
                  description: Link to resource's owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teams/tim_s47
                parent_folder:
                  description: Link to the parent folder that contains the message template
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/message_template_folders/rsf_g2
        id:
          description: Unique identifier of the message template
          type: string
          example: rsp_16yc
        name:
          description: Name of the message template
          type: string
          example: Pam wedding planning complaint
        subject:
          description: Subject of the message template
          type: string
          example: Work time being used for wedding planning
        body:
          description: Body of the message template
          type: string
          example: >-
            Pam is spending time planning her wedding at the office. This
            message WAS NOT sent by Angela.
        attachments:
          description: List of files attached to the response
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        is_available_for_all_inboxes:
          description: Whether or not the template is available in all inboxes.
          type: boolean
          example: true
        inbox_ids:
          description: >-
            List of inboxes the template is available in. Null if there are no
            restrictions.
          type: array
          items:
            type: string
            example: null
    OutboundMessage:
      required:
        - to
        - body
      properties:
        to:
          description: List of the recipient handles who will receive this message
          type: array
          items:
            type: string
        cc:
          description: >-
            List of the recipient handles who will receive a copy of this
            message
          type: array
          items:
            type: string
        bcc:
          description: >-
            List of the recipient handles who will receive a blind copy of this
            message
          type: array
          items:
            type: string
        sender_name:
          description: Name used for the sender info of the message
          type: string
        subject:
          description: Subject of the message for email message
          type: string
        author_id:
          description: ID of the teammate on behalf of whom the answer is sent
          type: string
        body:
          description: Body of the message
          type: string
        text:
          description: Text version of the body for email messages
          type: string
        options:
          type: object
          properties:
            tag_ids:
              description: List of tag IDs to add to the conversation
              type: array
              items:
                type: string
            archive:
              description: Archive the conversation right when sending the message
              type: boolean
              default: true
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1). Max 25
            MB.
          type: array
          items:
            type: string
            format: binary
        signature_id:
          description: >-
            ID of the signature to attach to this draft. If null, no signature
            is attached.
          type: string
        should_add_default_signature:
          description: >-
            Whether or not Front should try to resolve a signature for the
            message. Is ignored if signature_id is included. Default false;
          type: boolean
    OutboundReplyMessage:
      required:
        - body
      properties:
        to:
          description: List of the recipient handles who will receive this message
          type: array
          items:
            type: string
        cc:
          description: >-
            List of the recipient handles who will receive a copy of this
            message
          type: array
          items:
            type: string
        bcc:
          description: >-
            List of the recipient handles who will receive a copy of this
            message
          type: array
          items:
            type: string
        sender_name:
          description: Name used for the sender info of the message
          type: string
        subject:
          description: Subject of the message for email message
          type: string
        author_id:
          description: ID of the teammate on behalf of whom the answer is sent
          type: string
        channel_id:
          description: Channel ID the message is sent from
          type: string
        body:
          description: Body of the message
          type: string
        text:
          description: Text version of the body for email messages
          type: string
        quote_body:
          description: >-
            Body for the quote that the message is referencing. Only available
            on email channels.
          type: string
        options:
          type: object
          properties:
            tag_ids:
              description: List of tag IDs to add to the conversation
              type: array
              items:
                type: string
            archive:
              description: >-
                Archive the conversation right when sending the message. `true`
                by default
              type: boolean
              default: true
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://gist.github.com/hdornier/e04d04921032e98271f46ff8a539a4cb)
            or read more about
            [Attachments](https://dev.frontapp.com/docs/attachments-1).  Max 25
            MB.
          type: array
          items:
            type: string
            format: binary
        signature_id:
          description: >-
            ID of the signature to attach to this draft. If null, no signature
            is attached.
          type: string
        should_add_default_signature:
          description: >-
            Whether or not Front should try to resolve a signature for the
            message. Is ignored if signature_id is included. Default false;
          type: boolean
    RecipientResponse:
      properties:
        _links:
          type: object
          properties:
            related:
              type: object
              properties:
                contact:
                  description: Link to recipient contact
                  type: string
                  example: https://yourCompany.api.frontapp.com/contacts/crd_2njtoem
        name:
          description: Name of the recipient.
          type: string
          example: Phyllis Lapin-Vance
        handle:
          description: >-
            Handle of the contact. Can be any string used to uniquely identify
            the contact
          type: string
          example: purpleboss@limitlesspaper.com
        role:
          description: Role of the recipient
          type: string
          enum:
            - from
            - to
            - cc
            - bcc
          example: cc
    Reminder:
      properties:
        _links:
          type: object
          properties:
            related:
              type: object
              properties:
                owner:
                  description: Link to conversation owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teammates/tea_6r55a
        created_at:
          description: Timestamp at which the conversation reminder has been created
          type: number
          example: 1701806790.536
        scheduled_at:
          description: Timestamp that the conversation reminder has been scheduled for
          type: number
          example: 1701874800
        updated_at:
          description: Timestamp at which the conversation reminder has been updated
          type: number
          example: 1701806790.536
    RemoveContactsFromGroup:
      required:
        - contact_ids
      properties:
        contact_ids:
          description: >-
            List of IDs of the contacts to remove from the requested group.
            Alternatively, you can supply the contact source and handle as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/ResourceID'
    ReplyDraft:
      required:
        - author_id
        - body
        - channel_id
      allOf:
        - $ref: '#/components/schemas/CreateDraft'
        - type: object
          properties:
            channel_id:
              description: >-
                ID of the channel from which the draft will be sent.
                Alternatively, you can supply the channel address as a [resource
                alias](https://dev.frontapp.com/docs/resource-aliases-1).
              type: string
    ResourceID:
      type: string
    RoleResponse:
      properties:
        _links:
          type: object
          properties:
            related:
              type: object
              properties:
                owner:
                  description: Link to role owner
                  type: string
                  example: tea_5xs26
        id:
          description: Unique identifier of the role
          type: string
        name:
          description: Name of the role
          type: string
          example: from
    RuleResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/rules/rul_58xhq
            related:
              type: object
              properties:
                owner:
                  description: Link to rule owner
                  type: string
                  example: null
        id:
          description: Unique identifier of the rule
          type: string
          example: rul_58xhq
        name:
          description: Name of the rule
          type: string
          example: Scranton new account workflow
        actions:
          description: List of the rule's actions description
          type: array
          items:
            type: string
            example:
              - Assign to Pam
              - Unassign from Michael
              - Tag with Scranton is the Best Branch
              - Tag with Michael is the Best Boss
        is_private:
          description: Whether or not the rule is individual
          type: boolean
          example: false
    SeenReceiptResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to self
              type: string
              example: https://yourCompany.api.frontapp.com/messages/msg_1p4lvjym/seen
            related:
              type: object
              properties:
                message:
                  description: Link to message associated with the seen record
                  type: string
                  example: https://yourCompany.api.frontapp.com/messages/msg_1p4lvjym
        first_seen_at:
          description: Timestamp when message was seen
          type: string
          example: 1701298738269
        seen_by:
          $ref: '#/components/schemas/ContactHandle'
    ShiftInterval:
      type: object
      required:
        - start
        - end
      properties:
        start:
          description: Start of shift
          type: string
          example: '09:00'
        end:
          description: End of shift
          type: string
          example: '17:00'
    ShiftIntervals:
      type: object
      properties:
        mon:
          $ref: '#/components/schemas/ShiftInterval'
        tue:
          $ref: '#/components/schemas/ShiftInterval'
        wed:
          $ref: '#/components/schemas/ShiftInterval'
        thu:
          $ref: '#/components/schemas/ShiftInterval'
        fri:
          $ref: '#/components/schemas/ShiftInterval'
        sat:
          $ref: '#/components/schemas/ShiftInterval'
        sun:
          $ref: '#/components/schemas/ShiftInterval'
    ShiftResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/shifts/shf_1bri
            related:
              type: object
              properties:
                teammates:
                  description: Link to shift teammates
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/shifts/shf_1bri/teammates
                owner:
                  description: Link to shift owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teams/tim_4kxji
        id:
          description: Unique identifier of the shift
          type: string
          example: shf_1bri
        name:
          description: Name of the shift
          type: string
          example: Scranton Business Park shifts
        color:
          description: Color of the shift
          type: string
          enum:
            - black
            - grey
            - pink
            - purple
            - blue
            - teal
            - green
            - yellow
            - orange
            - red
          example: green
        timezone:
          description: A timezone name as defined in the IANA tz database
          type: string
          example: America/New_York
        times:
          description: The shift intervals per day of the week
          $ref: '#/components/schemas/ShiftIntervals'
        created_at:
          description: The timestamp when the shift was created.
          type: number
          example: 1606943265.298
        updated_at:
          description: The timestamp when the shift was updated.
          type: number
          example: 1701878404.43
    SignatureResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/signatures/sig_6rrv2
            related:
              type: object
              properties:
                owner:
                  description: Link to signature's owner (either a team or teammate)
                  type: string
                  example: https://yourCompany.api.frontapp.com/teams/tim_k30
        id:
          description: Unique identifier of the signature
          type: string
          example: sig_6rrv2
        name:
          description: Name of the signature
          type: string
          example: Finer Things Club signature
        body:
          description: Body of the signature
          type: string
          example: >-
            <div>—<br />{{user.name}}<br />No paper, no plastic, and no work
            talk allowed<br /></div>
        sender_info:
          description: Sender info of the signature
          type: string
          example:
            '[object Object]': null
        is_visible_for_all_teammate_channels:
          description: Whether or not the signature is available in teammate channels.
          type: boolean
          example: true
        is_default:
          description: >-
            Whether the signature is the default signature for the team or
            teammate.
          type: boolean
          example: false
        is_private:
          description: Whether the signature is private to the teammate.
          type: boolean
          example: true
        channel_ids:
          type: array
          items:
            description: >-
              List of channels the signature is available in. If belonging to a
              teammate, represents all channels this can be used in. If
              belonging to a team, represents all team channels this can be used
              in. If null, there are no restrictions.
            type: string
            example: null
    TagIds:
      type: object
      required:
        - tag_ids
      properties:
        tag_ids:
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    TagResponse:
      description: A tag is a label that can be used to classify conversations.
      type: object
      properties:
        description:
          description: Description of the tag
          type: string
          example: Sitting on your biscuit, never having to risk it
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/tags/tag_2oxhvy
            related:
              type: object
              properties:
                conversations:
                  description: Link to tag conversations
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/tags/tag_2oxhvy/conversations
                owner:
                  description: Link to tag owner
                  type: string
                  example: https://yourCompany.api.frontapp.com/teammates/tea_6jydq
                parent_tag:
                  description: Link to parent tag
                  type: string
                  example: https://yourCompany.api.frontapp.com/tags/tag_3h07ym
                children:
                  description: Link to tag children
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/tags/tag_2oxhvy/children
        id:
          description: Unique identifier of the tag
          type: string
          example: tag_2oxhvy
        name:
          description: Name of the tag
          type: string
          example: Warehouse task
        highlight:
          description: Highlight color of the tag.
          type: string
          enum:
            - grey
            - pink
            - red
            - orange
            - yellow
            - green
            - light-blue
            - blue
            - purple
          example: null
        is_private:
          description: Whether or not the tag is individual
          type: boolean
          example: false
        is_visible_in_conversation_lists:
          description: Whether the tag is visible in conversation lists.
          type: boolean
          example: true
        created_at:
          description: Timestamp of tag create creation
          type: number
          example: 1682538996.583
        updated_at:
          description: Timestamp of the last tag update
          type: number
          example: 1699575875.186
    TeamIds:
      type: object
      required:
        - team_ids
      properties:
        team_ids:
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    TeamPreviewResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teams/tim_aqsa
        id:
          description: Unique identifier of the team
          type: string
          example: tim_aqsa
        name:
          description: Name of the team
          type: string
          example: Stanley's crossword puzzle team
    TeamResponse:
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teams/tim_aqsa
        id:
          description: Unique identifier of the team
          type: string
          example: tim_aqsa
        name:
          description: Name of the team
          type: string
          example: Stanley's crossword puzzle team
        inboxes:
          description: List of the inboxes in the team
          type: array
          items:
            $ref: '#/components/schemas/InboxResponse'
        members:
          description: List of the teammates that have access to the team
          type: array
          items:
            $ref: '#/components/schemas/TeammateResponse'
    TeammateGroupResponse:
      description: A teammate group is a group of teammates in Front.
      properties:
        description:
          description: Description of the teammate group
          type: string
          example: Best sales team ever
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teammate_groups/cir_123
            related:
              type: object
              properties:
                teammates:
                  description: Link to list of teammate members
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/teammate_groups/cir_123/teammates
                teams:
                  description: Link to list of associated teams
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/teammate_groups/cir_123/teams
                inboxes:
                  description: Link to list of inboxes that teammate members can access
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/teammate_groups/cir_123/inboxes
        id:
          description: Unique identifier of the teammate group
          type: string
          example: cir_123
        name:
          description: The name of the teammate group
          type: string
          example: Sales team
        is_managed_by_scim:
          description: Is teammate group managed by SCIM or by Front
          type: boolean
          example: false
        permissions:
          description: Permissions for the teammate group
          type: object
          example:
            contacts:
              access: contact_groups
              contact_group_ids:
                - grp_1
                - grp_2
          properties:
            contacts:
              description: Permissions for teammate group access to contact groups
              type: object
              properties:
                access:
                  description: >-
                    Level of access for the teammate group to contact groups.
                    Must be one of 'all', 'contact_groups', or 'none'.
                  type: string
                contact_group_ids:
                  description: >-
                    List of contact groups the teammate group is allowed to
                    access. May only be specified if 'access' is set to
                    'contact_groups'.
                  type: array
                  example:
                    - grp_123
                    - grp_456
                  items:
                    type: string
    TeammateIds:
      type: object
      required:
        - teammate_ids
      properties:
        teammate_ids:
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    TeammateResponse:
      description: A teammate is a user in Front.
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teammates/tea_6r55a
            related:
              type: object
              properties:
                inboxes:
                  description: Link to teammate's inboxes
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/teammates/tea_6r55a/inboxes
                conversations:
                  description: Link to teammate's conversations
                  type: string
                  example: >-
                    https://yourCompany.api.frontapp.com/teammates/tea_6r55a/conversations
        id:
          description: Unique identifier of the teammate
          type: string
          example: tea_6r55a
        email:
          description: Email address of the teammate
          type: string
          example: michael.scott@dundermifflin.com
        username:
          description: Username of the teammate (used for "@" mentions)
          type: string
          example: PrisonMike
        first_name:
          description: First name of the teammate
          type: string
          example: Michael
        last_name:
          description: Last name of the teammate
          type: string
          example: Scott
        is_admin:
          description: Whether or not the teammate is an admin in your company
          type: boolean
          example: true
        is_available:
          description: Whether or not the teammate is available
          type: boolean
          example: false
        is_blocked:
          description: Whether or not the teammate account has been blocked
          type: boolean
          example: false
        custom_fields:
          description: Custom fields for this teammate
          $ref: '#/components/schemas/CustomFieldParameter'
    UpdateChannel:
      properties:
        name:
          description: Name of the channel
          type: string
          example: Your channel name
        inbox_id:
          description: >-
            ID of the inbox to move this channel to. Will also move
            corresponding conversations.
          type: string
        settings:
          description: >
            Settings to replace.

            For custom channels, all settings may be replaced.

            For all other channels, only `undo_send_time` and
            `all_teammates_can_reply` may be replaced.
          type: object
          properties:
            undo_send_time:
              description: >-
                The time (measured in seconds) that users have to undo a send
                operation in the channel.
              type: integer
              enum:
                - 0
                - 5
                - 10
                - 15
                - 30
                - 60
            all_teammates_can_reply:
              description: >-
                Whether teammates without inbox access can reply on this
                channel. Only allowed for shared channels.
              type: boolean
            webhook_url:
              description: >-
                The webhook URL outbound messages should be sent to. Only
                allowed for "custom" type channels.
              type: string
    UpdateComment:
      properties:
        body:
          description: >-
            Content of the comment. Can include markdown formatting. Can only be
            updated if the comment was created using the same token.
          type: string
        is_pinned:
          description: Whether or not the comment is pinned in its conversation.
          type: boolean
    UpdateConversation:
      properties:
        assignee_id:
          description: >-
            ID of the teammate to assign the conversation to. Set it to null to
            unassign.
          type: string
        inbox_id:
          description: ID of the inbox to move the conversation to.
          type: string
        status:
          description: New status of the conversation
          type: string
          enum:
            - archived
            - open
            - deleted
            - spam
        tag_ids:
          description: List of all the tag IDs replacing the old conversation tags
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
        custom_fields:
          description: >-
            Custom fields for this conversation. If you want to keep all custom
            fields the same when updating this resource, do not include any
            custom fields in the update. If you want to update custom fields,
            make sure to include all custom fields, not just the fields you want
            to add or update. If you send only the custom fields you want to
            update, the other custom fields will be erased. You can retrieve the
            existing custom fields before making the update to note the current
            fields.
          $ref: '#/components/schemas/CustomFieldParameter'
    UpdateConversationAssignee:
      required:
        - assignee_id
      properties:
        assignee_id:
          description: >-
            ID of the teammate to assign the conversation to. Set it to null to
            unassign.
          type: string
    UpdateConversationReminders:
      required:
        - teammate_id
        - scheduled_at
      properties:
        teammate_id:
          description: >-
            ID of the teammate to create a reminder for. For a private
            conversation, specify the id of the teammate that owns the
            conversation. For a shared conversation, use the id of any teammate
            that has access to the conversation's shared inbox. Alternatively,
            you can supply an email as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: string
        scheduled_at:
          description: Timestamp to schedule the reminder for. Set to null to cancel.
          type: number
    UpdateLink:
      properties:
        name:
          description: Name of the link
          type: string
    UpdateMessageTemplate:
      properties:
        name:
          description: Name of the message template
          type: string
        subject:
          description: Subject of the message template
          type: string
        body:
          description: Body of the message template
          type: string
        folder_id:
          description: >-
            ID of the parent folder to be placed into. Goes into the root folder
            if unspecified or if null.
          type: string
        inbox_ids:
          description: >-
            The specific inboxes this template is available in. If null, then it
            will be available in all inboxes. Array should be non-empty. If
            unspecified, will retain previous value.
          type: array
          items:
            type: string
        attachments:
          description: >-
            Binary data of attached files. Must use `Content-Type:
            multipart/form-data` if specified. See
            [example](https://dev.frontapp.com/docs/attachments-1). Max 25 MB.
            Specify an empty array to delete all attachments from a message
            template. If unspecified, it will retain previous value.
          type: array
          items:
            type: string
            format: binary
    UpdateMessageTemplateFolder:
      description: >-
        A message template folder that is used to store message templates or
        other folders.
      type: object
      properties:
        name:
          description: Name of the message template folder
          type: string
        parent_folder_id:
          description: >-
            ID of the parent folder to be placed into. Goes into the root folder
            if unspecified or if null.
          type: string
    UpdateShift:
      type: object
      properties:
        name:
          description: Name of the shift
          type: string
        color:
          description: Color of the shift
          type: string
          enum:
            - black
            - grey
            - pink
            - purple
            - blue
            - teal
            - green
            - yellow
            - orange
            - red
        timezone:
          description: A timezone name as defined in the IANA tz database
          type: string
        times:
          description: The shift intervals per day of the week
          $ref: '#/components/schemas/ShiftIntervals'
        teammate_ids:
          description: >-
            List of all the teammate ids who will be part of this shift.
            Alternatively, you can supply emails as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            $ref: '#/components/schemas/ResourceID'
    UpdateSignature:
      description: A signature that can be used to sign messages.
      type: object
      properties:
        name:
          description: Name of the signature
          type: string
        sender_info:
          description: >-
            Sender info of the signature that will appear in the From line of
            emails sent.
          type: string
        body:
          description: Body of the signature
          type: string
        is_visible_for_all_teammate_channels:
          description: >-
            Whether or not the signature is visible in all individual channels
            for teammates in the given team. Can only be set for shared
            signatures.
          type: boolean
        is_default:
          description: >-
            If true, the signature will be set as the default signature for the
            team or teammate.
          type: boolean
          default: false
        channel_ids:
          description: >-
            The specific shared channels this signature if available in. If
            null, then it will be available in all channels. If unspecified,
            will retain previous value. Alternatively, you can specify channels
            using a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          items:
            type: string
    UpdateTag:
      properties:
        description:
          description: Description of the tag
          type: string
        name:
          description: Name of the tag
          type: string
        highlight:
          description: Highlight color of the tag.
          type: string
          enum:
            - grey
            - pink
            - red
            - orange
            - yellow
            - green
            - light-blue
            - blue
            - purple
        parent_tag_id:
          description: >-
            ID of the parent of this tag. Set to `null` to remove  the parent
            tag.
          type: string
        is_visible_in_conversation_lists:
          description: Whether the tag is visible in conversation lists.
          type: boolean
    UpdateTeammate:
      properties:
        username:
          description: >-
            New username. It must be unique and can only contains lowercase
            letters, numbers and underscores.
          type: string
        first_name:
          description: New first name
          type: string
        last_name:
          description: New last name
          type: string
        is_available:
          description: New availability status
          type: boolean
        custom_fields:
          description: >-
            Custom fields for this teammate. If you want to keep all custom
            fields the same when updating this resource, do not include any
            custom fields in the update. If you want to update custom fields,
            make sure to include all custom fields, not just the fields you want
            to add or update. If you send only the custom fields you want to
            update, the other custom fields will be erased. You can retrieve the
            existing custom fields before making the update to note the current
            fields.
          $ref: '#/components/schemas/CustomFieldParameter'
    UpdateTeammateGroup:
      type: object
      properties:
        description:
          description: Description of the teammate group
          type: string
        name:
          description: Name of the teammate group
          type: string
        permissions:
          description: Permissions for the teammate group
          type: object
          properties:
            contacts:
              description: >-
                Permissions for accessing contact lists. This only applies if
                shared contacts permissions are enabled.
              type: object
              required:
                - access
              properties:
                access:
                  description: One of 'all', 'contact_groups', or 'none'.
                  type: string
                contact_group_ids:
                  description: >-
                    List of contact group ids. Can only be specified if access
                    is set to 'contact_groups'.
                  type: array
                  items:
                    type: string
    ConversationsRemoveFollowersRequest:
      type: object
      properties:
        teammate_ids:
          description: >-
            IDs of the teammate to remove from the followers list.
            Alternatively, you can supply the teammates as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          maxItems: 50
          items:
            type: string
      required:
        - teammate_ids
    ConversationsAddFollowersRequest:
      type: object
      properties:
        teammate_ids:
          description: >-
            IDs of the teammate to add to the followers list. Alternatively, you
            can supply the teammates as a [resource
            alias](https://dev.frontapp.com/docs/resource-aliases-1).
          type: array
          maxItems: 50
          items:
            type: string
      required:
        - teammate_ids
    ConversationsRemoveLinksRequest:
      type: object
      properties:
        link_ids:
          description: Link IDs to remove.
          type: array
          maxItems: 10
          items:
            type: string
      required:
        - link_ids
    ConversationsAddLinkRequest:
      type: object
      properties:
        link_ids:
          description: >-
            Link IDs to add. Either link_ids or link_external_urls must be
            specified but not both
          type: array
          maxItems: 10
          items:
            type: string
        link_external_urls:
          description: >-
            Link external URLs to add. Creates links if necessary. Either
            link_ids or link_external_urls must be specified but not both
          type: array
          maxItems: 10
          items:
            type: string
    MessagesMarkMessageSeenRequest:
      type: object
    AccountsListCompanyAccountsResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/accounts?page_token=abae846b73ddd80f67fff73c491c41b8b0e74972f3a1079c3c8800416e06cf46
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/accounts
        _results:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
    AccountsCreateNewAccountResponse:
      type: object
      properties: {}
      example: {}
    CustomFieldsListAccountCustomFieldsResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/custom_fields
        _results:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldResponse'
    AccountsListAccountContactsResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/contacts?page_token=e0b5767cb0f1100743d46f67fcd765caac2ed
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/contacts
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponse'
    AnalyticsCreateNewExportResponse:
      type: object
      properties: {}
      example: {}
    AnalyticsGetExportResponse:
      type: object
      properties: {}
      example: {}
    AnalyticsCreateNewReportResponse:
      type: object
      properties: {}
      example: {}
    AnalyticsGetReportResponse:
      type: object
      properties: {}
      example: {}
    ChannelsListResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/channels
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ChannelResponse'
    ChannelsGetChannelResponse:
      type: object
      properties: {}
      example: {}
    DraftsCreateNewDraftMessageResponse:
      type: object
      properties: {}
      example: {}
    MessagesReceiveCustomMessageResponse:
      type: object
      properties:
        status:
          description: >-
            The status of the incoming message. Should return 'accepted' if
            successful.
          type: string
          default: accepted
          example: accepted
        message_uid:
          description: >-
            Message unique identifier. You can use the message UID as a
            [resource alias](https://dev.frontapp.com/docs/resource-aliases-1)
            for the message ID.
          type: string
          example: 1eab543f84a0785f7b6b8967cck18f4d
    ChannelsValidateSmtpSettingsResponse:
      type: object
      properties:
        status:
          type: string
          default: accepted
          example: accepted
    CommentsUpdateCommentResponse:
      type: object
      properties: {}
      example: {}
    CommentsListMentionedTeammatesResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teammates
        _results:
          type: array
          items:
            $ref: '#/components/schemas/TeammateResponse'
    RulesListAllCompanyRulesResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/rules
        _results:
          type: array
          items:
            $ref: '#/components/schemas/RuleResponse'
    TagsListCompanyResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/tags
        _results:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    ContactGroupsListGroupsResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/contact_groups
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ContactGroupResponses'
    ContactsCreateNewContactResponse:
      type: object
      properties: {}
      example: {}
    ContactsListConversationsReverseChronologicalOrderResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/conversations?page_token=ce787da6f075740cf187d926f5e9f612bc7875763a8dd37d5
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/conversations
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ConversationResponse'
    ContactNotesListResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/contacts/crd_2okzojy/notes
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ContactNoteResponses'
    ConversationsCreateDiscussionResponse:
      type: object
      properties: {}
      example: {}
    ConversationsSearchByQueryResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/conversations/search/:query:?page_token=d4d5f065c89f1284ea262fa6b19456239b0
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/conversations/search/:query:
        _total:
          description: Total number of matching conversations
          type: integer
          example: 212
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ConversationResponse'
    CommentsListConversationCommentsResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/conversations/cnv_y4xb93i/comments
        _results:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
    DraftsListConversationDraftsResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/conversations/cnv_y4xb93i/messages?page_token=klsljs8023j09suidfjlsjiei00043lllwww998303dkef0g
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/conversations/cnv_y4xb93i/messages
        _results:
          type: array
          items:
            $ref: '#/components/schemas/MessageResponse'
    ConversationsListEventsResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/events?page_token=2d018a5809eb90d349bc08c52cb1f4987bef
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/events
        _results:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'
    ConversationsListInboxesResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/inboxes
        _results:
          type: array
          items:
            $ref: '#/components/schemas/InboxResponse'
    AttachmentsDownloadAttachmentFileResponse:
      type: object
      properties: {}
      example: {}
    InboxesGetInboxResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesDeleteArticleResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesGetContentDefaultLocaleResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesGetCategoryResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesListArticlesInCategoryResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_bases/knb_1/articles?page_token=134287aba8eaa55cf366400c63300a75bab0c
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_bases/knb_1/articles
        _results:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticleSlimResponse'
    KnowledgeBasesGetCategoryContentDefaultLocaleResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesListKnowledgeBasesResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/knowledge_bases
        _results:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseResponse'
    KnowledgeBasesCreateNewKnowledgeBaseResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesGetKnowledgeBaseResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeBasesListCategoriesInBaseResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_bases/knb_1/categories?page_token=134287aba8eaa55cf366400c63300a75bab0c
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/knowledge_bases/knb_1/categories
        _results:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategorySlimResponse'
    LinksListByIdAndTypeResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/links?page_token=4fcb1f8ca11971c5da59c21ea686fd50
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/links
        _results:
          type: array
          items:
            $ref: '#/components/schemas/LinkResponse'
    TokenIdentityGetDetailsResponse:
      type: object
      properties: {}
      example: {}
    MessageTemplateFoldersListFoldersResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/message_template_folders?page_token=9fa92a7f385fd7be43f7153055b30e6d
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/message_template_folders
        _results:
          type: array
          items:
            $ref: '#/components/schemas/MessageTemplateFolderResponse'
    MessageTemplateFoldersCreateNewFolderResponse:
      type: object
      properties: {}
      example: {}
    MessageTemplateFoldersDeleteFolderResponse:
      type: object
      properties:
        status:
          type: string
          default: accepted
          example: accepted
        message_template_folder_id:
          description: id of the message template to be deleted
          type: string
          example: rsf_g2
    MessageTemplatesCreateChildTemplateResponse:
      type: object
      properties: {}
      example: {}
    MessageTemplatesListResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/message_templates?page_token=9fa92a7f385fd7be43f7153055b30e6d
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/message_templates
        _results:
          type: array
          items:
            $ref: '#/components/schemas/MessageTemplateResponse'
    MessagesGetMessageSeenStatusResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/messages/msg_1p4lvjym/seen?page_token=jk7893fgeet644abnn39
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/messages/msg_1p4lvjym/seen
        _results:
          type: array
          items:
            $ref: '#/components/schemas/SeenReceiptResponse'
    RulesGetRuleResponse:
      type: object
      properties: {}
      example: {}
    ShiftsListShiftsResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/shifts
        _results:
          type: array
          items:
            $ref: '#/components/schemas/ShiftResponse'
    SignaturesGetSignatureResponse:
      type: object
      properties: {}
      example: {}
    TeammateGroupsListResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teammate_groups
        _results:
          type: array
          items:
            $ref: '#/components/schemas/TeammateGroupResponse'
    TeammateGroupsListTeammateGroupTeamsResponse:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/teams
        _results:
          type: array
          items:
            $ref: '#/components/schemas/TeamPreviewResponse'
    SignaturesListTeammateResponse:
      type: object
      properties:
        _pagination:
          type: object
          properties:
            next:
              description: >-
                Link to next [page of
                results](https://dev.frontapp.com/docs/pagination)
              type: string
              example: >-
                https://yourCompany.api.frontapp.com/signatures?page_token=9fa92a7f385fd7be43f7153055b30e6d
        _links:
          type: object
          properties:
            self:
              description: Link to resource
              type: string
              example: https://yourCompany.api.frontapp.com/signatures
        _results:
          type: array
          items:
            $ref: '#/components/schemas/SignatureResponse'
    TeamsGetWorkspaceResponse:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    http:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - http: []
x-api-id: front
x-explorer-enabled: false
x-proxy-enabled: true
x-samples-enabled: true
