openapi: 3.0.0
info:
  title: Slack Web API
  description: >-
    One way to interact with the Slack platform is its HTTP RPC-based Web API, a
    collection of methods requiring OAuth 2.0-based user, bot, or workspace
    tokens blessed with related OAuth scopes.
  version: 1.7.0
  contact:
    name: Slack developer relations
    url: https://api.slack.com/support
  x-apisguru-categories:
    - collaboration
    - messaging
  x-logo:
    url: http://static.tumblr.com/wvuzcz9/LlKncfhmp/slack_logo_240.png
  x-origin:
    - version: '3.0'
      format: openapi
      url: >-
        https://raw.githubusercontent.com/slackapi/slack-api-specs/master/web-api/slack_web_openapi_v2.json
  x-providerName: slack.com
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://slack.com/api
tags:
  - name: admin
  - name: conversations
  - name: admin.conversations
  - name: files
  - name: users
  - name: chat
  - name: admin.users
  - name: apps
  - name: usergroups
  - name: admin.teams.settings
  - name: calls
  - name: files.remote
  - name: admin.emoji
  - name: dnd
  - name: reminders
  - name: team
  - name: admin.usergroups
  - name: reactions
  - name: views
  - name: admin.conversations.restrictAccess
  - name: admin.inviteRequests
  - name: oauth
  - name: pins
  - name: stars
  - name: workflows
  - name: admin.apps
  - name: admin.teams
  - name: admin.users.session
  - name: apps.permissions
  - name: apps.permissions.users
  - name: auth
  - name: calls.participants
  - name: usergroups.users
  - name: users.profile
  - name: admin.apps.approved
  - name: admin.apps.requests
  - name: admin.apps.restricted
  - name: admin.conversations.ekm
  - name: admin.inviteRequests.approved
  - name: admin.inviteRequests.denied
  - name: admin.teams.admins
  - name: admin.teams.owners
  - name: api
  - name: apps.event.authorizations
  - name: apps.permissions.resources
  - name: apps.permissions.scopes
  - name: bots
  - name: chat.scheduledMessages
  - name: dialog
  - name: emoji
  - name: files.comments
  - name: migration
  - name: oauth.v2
  - name: rtm
  - name: search
  - name: team.profile
paths:
  /admin.apps.approve:
    post:
      tags:
        - admin.apps
        - admin
      operationId: Adminapps_approveAppInstallation
      security:
        - slackAuth:
            - admin.apps:write
      description: Approve an app for installation on a workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.apps:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminappsApproveAppInstallationRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminappsApproveAppInstallationResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminappsApproveAppInstallationdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.approve
  /admin.apps.approved.list:
    get:
      tags:
        - admin.apps.approved
        - admin
      operationId: Adminappsapproved_list
      security:
        - slackAuth:
            - admin.apps:read
      description: List approved apps for an org or workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.apps:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: team_id
          schema:
            type: string
        - in: query
          name: enterprise_id
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    approved_apps:
                      - app:
                          description: test app
                          additional_info: ''
                          app_directory_url: >-
                            https://myteam.enterprise.slack.com/apps/A0W7UKG8E-my-test-app
                          app_homepage_url: https://www.slack.com
                          help_url: https://www.slack.com
                          icons:
                            image_1024: >-
                              https://3026743124446w96_2bd4ea1ad1f89a23c242_1024.png
                            image_128: >-
                              https://30267341249446w6_2bd4ea1ad1f89a23c242_128.png
                            image_192: >-
                              https://30267431249446w6_2bd4ea1ad1f89a23c242_192.png
                            image_32: >-
                              https://302674312496446w_2bd4ea1ad1f89a23c242_32.png
                            image_36: >-
                              https://302674312496446w_2bd4ea1ad1f89a23c242_36.png
                            image_48: >-
                              https://302674312496446w_2bd4ea1ad1f89a23c242_48.png
                            image_512: >-
                              https://30267431249446w6_2bd4ea1ad1f89a23c242_512.png
                            image_64: >-
                              https://302674312496446w_2bd4ea1ad1f89a23c242_64.png
                            image_72: >-
                              https://302674312496446w_2bd4ea1ad1f89a23c242_72.png
                            image_96: >-
                              https://302674312496446w_2bd4ea1ad1f89a23c242_96.png
                            image_original: >-
                              https://302674446w12496_2bd4ea1ad1f89a23c242_original.png
                          id: A0W7UKG8E
                          is_app_directory_approved: false
                          is_internal: false
                          name: My Test App
                          privacy_policy_url: https://www.slack.com
                        date_updated: 1574296707
                        last_resolved_by:
                          actor_id: W0G82F4FD
                          actor_type: user
                        scopes:
                          - description: >-
                              Add the ability for people to direct message or
                              mention @my_test_app
                            is_sensitive: true
                            name: bot
                            token_type: bot
                    ok: true
                    response_metadata:
                      next_cursor: ''
              schema:
                $ref: '#/components/schemas/AdminappsapprovedListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminappsapprovedListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.approved.list
  /admin.apps.requests.list:
    get:
      tags:
        - admin.apps.requests
        - admin
      operationId: Adminappsrequests_list
      security:
        - slackAuth:
            - admin.apps:read
      description: List app requests for a team/workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.apps:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: team_id
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    app_requests:
                      - app:
                          description: ''
                          additional_info: ''
                          app_directory_url: https://acmecorp.slack.com/apps/A061BL8RQ0-test-app
                          app_homepage_url: ''
                          help_url: ''
                          icons:
                            image_1024: /cdn/15258203/img/testapp/service_1024.png
                            image_128: /cdn/157258203/img/testapp/service_128.png
                            image_192: /cdn/157258203/img/testapp/service_192.png
                            image_32: /cdn/157658203/img/testapp/service_32.png
                            image_36: /cdn/157658203/img/testapp/service_36.png
                            image_48: /cdn/157658203/img/testapp/service_48.png
                            image_512: /cdn/15758203/img/testapp/service_512.png
                            image_64: /cdn/157658203/img/testapp/service_64.png
                            image_72: /cdn/157658203/img/testapp/service_72.png
                            image_96: /cdn/157658203/img/testapp/service_96.png
                          id: A061BL8RQ0
                          is_app_directory_approved: true
                          is_internal: false
                          name: Test App
                          privacy_policy_url: https://testapp.com/privacy
                        date_created: 1578956327
                        id: Ar0XJGFLMLS
                        message: test test again
                        previous_resolution: null
                        scopes:
                          - description: Post messages to specific channels in Slack
                            is_sensitive: false
                            name: incoming-webhook
                            token_type: user
                        team:
                          domain: acmecorp
                          id: T0M94LNUCR
                          name: Acme Corp
                        user:
                          email: janedoe@example.com
                          id: W08RA9G5HR
                          name: Jane Doe
                    ok: true
                    response_metadata:
                      next_cursor: ''
              schema:
                $ref: '#/components/schemas/AdminappsrequestsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: missing_scope
                    needed: admin.apps:read
                    ok: false
                    provided: read,client,admin,identify,post,apps
              schema:
                $ref: '#/components/schemas/AdminappsrequestsListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.requests.list
  /admin.apps.restrict:
    post:
      tags:
        - admin.apps
        - admin
      operationId: Adminapps_restrictApp
      security:
        - slackAuth:
            - admin.apps:write
      description: Restrict an app for installation on a workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.apps:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminappsRestrictAppRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminappsRestrictAppResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminappsRestrictAppdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.restrict
  /admin.apps.restricted.list:
    get:
      tags:
        - admin.apps.restricted
        - admin
      operationId: Adminappsrestricted_getList
      security:
        - slackAuth:
            - admin.apps:read
      description: List restricted apps for an org or workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.apps:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: team_id
          schema:
            type: string
        - in: query
          name: enterprise_id
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    response_metadata:
                      next_cursor: ''
                    restricted_apps:
                      - app:
                          description: A fun test app for Slack
                          additional_info: ''
                          app_directory_url: >-
                            https://myteam.enterprise.slack.com/apps/A0FDLP8M2L-my-test-app
                          app_homepage_url: https://example.com
                          help_url: https://example.com
                          icons:
                            image_1024: >-
                              https://1433265338rl878408_eb57dbc818daa4ba15d6_1024.png
                            image_128: >-
                              https://4332653438rl87808_eb57dbc818daa4ba15d6_128.png
                            image_192: >-
                              https://4332653438rl87808_eb57dbc818daa4ba15d6_192.png
                            image_32: >-
                              https://143326534038rl8788_eb57dbc818daa4ba15d6_32.png
                            image_36: >-
                              https://143326534038rl8788_eb57dbc818daa4ba15d6_36.png
                            image_48: >-
                              https://143326534038rl8788_eb57dbc818daa4ba15d6_48.png
                            image_512: >-
                              https://4332653438rl87808_eb57dbc818daa4ba15d6_512.png
                            image_64: >-
                              https://143326534038rl8788_eb57dbc818daa4ba15d6_64.png
                            image_72: >-
                              https://143326534038rl8788_eb57dbc818daa4ba15d6_72.png
                            image_96: >-
                              https://143326534038rl8788_eb57dbc818daa4ba15d6_96.png
                            image_original: >-
                              https://143338rl8782653408_eb57dbc818daa4ba15d6_original.png
                          id: A0FDLP8M2L
                          is_app_directory_approved: true
                          is_internal: false
                          name: My Test App
                          privacy_policy_url: https://example.com
                        date_updated: 1574296721
                        last_resolved_by:
                          actor_id: W0G82LMFD
                          actor_type: user
                        scopes:
                          - description: >-
                              Upload, edit, and delete files on the user‟s
                              behalf
                            is_sensitive: true
                            name: files:write:user
                            token_type: user
              schema:
                $ref: '#/components/schemas/AdminappsrestrictedGetListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminappsrestrictedGetListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.restricted.list
  /admin.conversations.archive:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_archiveChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Archive a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminconversationsArchiveChannelRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminconversationsArchiveChannelResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsArchiveChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.archive
  /admin.conversations.convertToPrivate:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_convertToPrivateChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Convert a public channel to a private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsConvertToPrivateChannelRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsConvertToPrivateChannelResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsConvertToPrivateChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.convertToPrivate
  /admin.conversations.create:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_createChannelBasedConversation
      security:
        - slackAuth:
            - admin.conversations:write
      description: Create a public or private channel-based conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsCreateChannelBasedConversationRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel_id: C12345
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsCreateChannelBasedConversationResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsCreateChannelBasedConversationdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.create
  /admin.conversations.delete:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_deleteChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Delete a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminconversationsDeleteChannelRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminconversationsDeleteChannelResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsDeleteChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.delete
  /admin.conversations.disconnectShared:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_disconnectSharedChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Disconnect a connected channel from one or more workspaces.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsDisconnectSharedChannelRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsDisconnectSharedChannelResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsDisconnectSharedChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.disconnectShared
  /admin.conversations.ekm.listOriginalConnectedChannelInfo:
    get:
      tags:
        - admin.conversations.ekm
        - admin
      operationId: Adminconversationsekm_listOriginalConnectedChannelInfo
      security:
        - slackAuth:
            - admin.conversations:read
      description: >-
        List all disconnected channels—i.e., channels that were once connected
        to other workspaces and then disconnected—and the corresponding original
        channel IDs for key revocation with EKM.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: A comma-separated list of channels to filter to.
          in: query
          name: channel_ids
          schema:
            type: string
        - description: >-
            A comma-separated list of the workspaces to which the channels you
            would like returned belong.
          in: query
          name: team_ids
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channels:
                      - id: string
                        internal_team_ids: array
                        original_connected_channel_id: string
                        original_connected_host_id: string
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsekmListOriginalConnectedChannelInfoResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsekmListOriginalConnectedChannelInfodefaultResponse
      externalDocs:
        description: API method documentation
        url: >-
          https://api.slack.com/methods/admin.conversations.ekm.listOriginalConnectedChannelInfo
  /admin.conversations.getConversationPrefs:
    get:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_getConversationPrefs
      security:
        - slackAuth:
            - admin.conversations:read
      description: Get conversation preferences for a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: The channel to get preferences for.
          in: query
          name: channel_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsGetConversationPrefsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsGetConversationPrefsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.getConversationPrefs
  /admin.conversations.getTeams:
    get:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_getTeamsList
      security:
        - slackAuth:
            - admin.conversations:read
      description: >-
        Get all the workspaces a given public or private channel is connected to
        within this Enterprise org.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: >-
            The channel to determine connected workspaces within the
            organization for.
          in: query
          name: channel_id
          required: true
          schema:
            type: string
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    teams:
                      - T1234
                      - T5678
              schema:
                $ref: '#/components/schemas/AdminconversationsGetTeamsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsGetTeamsListdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.getTeams
  /admin.conversations.invite:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_inviteUserToChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Invite a user to a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsInviteUserToChannelRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsInviteUserToChannelResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsInviteUserToChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.invite
  /admin.conversations.rename:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_renameChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Rename a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminconversationsRenameChannelRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminconversationsRenameChannelResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsRenameChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.rename
  /admin.conversations.restrictAccess.addGroup:
    post:
      tags:
        - admin.conversations.restrictAccess
        - admin
      operationId: AdminconversationsrestrictAccess_addGroupIdpGroups
      security:
        - slackAuth:
            - admin.conversations:write
      description: Add an allowlist of IDP groups for accessing a channel
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsrestrictAccessAddGroupIdpGroupsRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsrestrictAccessAddGroupIdpGroupsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsrestrictAccessAddGroupIdpGroupsdefaultResponse
      externalDocs:
        description: API method documentation
        url: >-
          https://api.slack.com/methods/admin.conversations.restrictAccess.addGroup
  /admin.conversations.restrictAccess.listGroups:
    get:
      tags:
        - admin.conversations.restrictAccess
        - admin
      operationId: AdminconversationsrestrictAccess_listGroups
      security:
        - slackAuth:
            - admin.conversations:read
      description: List all IDP Groups linked to a channel
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: channel_id
          required: true
          schema:
            type: string
        - description: >-
            The workspace where the channel exists. This argument is required
            for channels only tied to one workspace, and optional for channels
            that are shared across an organization.
          in: query
          name: team_id
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    group_ids:
                      - YOUR_GROUP_ID
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsrestrictAccessListGroupsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsrestrictAccessListGroupsdefaultResponse
      externalDocs:
        description: API method documentation
        url: >-
          https://api.slack.com/methods/admin.conversations.restrictAccess.listGroups
  /admin.conversations.restrictAccess.removeGroup:
    post:
      tags:
        - admin.conversations.restrictAccess
        - admin
      operationId: AdminconversationsrestrictAccess_removeIdpGroup
      security:
        - slackAuth:
            - admin.conversations:write
      description: Remove a linked IDP group linked from a private channel
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsrestrictAccessRemoveIdpGroupRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsrestrictAccessRemoveIdpGroupResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsrestrictAccessRemoveIdpGroupdefaultResponse
      externalDocs:
        description: API method documentation
        url: >-
          https://api.slack.com/methods/admin.conversations.restrictAccess.removeGroup
  /admin.conversations.search:
    get:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_searchChannels
      security:
        - slackAuth:
            - admin.conversations:read
      description: Search for public or private channels in an Enterprise organization.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Comma separated string of team IDs, signifying the workspaces to
            search through.
          in: query
          name: team_ids
          schema:
            type: string
        - description: Name of the the channel to query by.
          in: query
          name: query
          schema:
            type: string
        - description: >-
            Maximum number of items to be returned. Must be between 1 - 20 both
            inclusive. Default is 10.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The type of channel to include or exclude in the search. For example
            `private` will search private channels, while `private_exclude` will
            exclude them. For a full list of types, check the [Types
            section](https://slack.dev).
          in: query
          name: search_channel_types
          schema:
            type: string
        - description: >-
            Possible values are `relevant` (search ranking based on what we
            think is closest), `name` (alphabetical), `member_count` (number of
            users in the channel), and `created` (date channel was created). You
            can optionally pair this with the `sort_dir` arg to change how it is
            sorted 
          in: query
          name: sort
          schema:
            type: string
        - description: >-
            Sort direction. Possible values are `asc` for ascending order like
            (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2,
            1) or (c, b, a)
          in: query
          name: sort_dir
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channels:
                      - created: 1449252889
                        creator: U012A3CDE
                        id: C012AB3CD
                        is_archived: false
                        is_channel: true
                        is_ext_shared: false
                        is_general: true
                        is_group: false
                        is_im: false
                        is_member: true
                        is_mpim: false
                        is_org_shared: false
                        is_pending_ext_shared: false
                        is_private: false
                        is_shared: false
                        name: general
                        name_normalized: general
                        num_members: 4
                        pending_shared: []
                        previous_names: []
                        purpose:
                          creator: ''
                          last_set: 0
                          value: >-
                            This channel is for team-wide communication and
                            announcements. All team members are in this channel.
                        topic:
                          creator: ''
                          last_set: 0
                          value: Company-wide announcements and work-based matters
                        unlinked: 0
                    ok: true
                    response_metadata:
                      next_cursor: dGVhbTpDMDYxRkE1UEI=
              schema:
                $ref: '#/components/schemas/AdminconversationsSearchChannelsResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_an_enterprise
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsSearchChannelsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.search
  /admin.conversations.setConversationPrefs:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_setConversationPrefs
      security:
        - slackAuth:
            - admin.conversations:write
      description: Set the posting permissions for a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsSetConversationPrefsRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsSetConversationPrefsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsSetConversationPrefsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.setConversationPrefs
  /admin.conversations.setTeams:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_setTeamsWorkspaceConnection
      security:
        - slackAuth:
            - admin.conversations:write
      description: >-
        Set the workspaces in an Enterprise grid org that connect to a public or
        private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminconversationsSetTeamsWorkspaceConnectionRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsSetTeamsWorkspaceConnectionResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsSetTeamsWorkspaceConnectiondefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.setTeams
  /admin.conversations.unarchive:
    post:
      tags:
        - admin.conversations
        - admin
      operationId: Adminconversations_unarchiveChannel
      security:
        - slackAuth:
            - admin.conversations:write
      description: Unarchive a public or private channel.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.conversations:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminconversationsUnarchiveChannelRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsUnarchiveChannelResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminconversationsUnarchiveChanneldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.unarchive
  /admin.emoji.add:
    post:
      tags:
        - admin.emoji
        - admin
      operationId: Adminemoji_addEmoji
      security:
        - slackAuth:
            - admin.teams:write
      description: Add an emoji.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminemojiAddEmojiRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminemojiAddEmojiResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminemojiAddEmojidefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.emoji.add
  /admin.emoji.addAlias:
    post:
      tags:
        - admin.emoji
        - admin
      operationId: Adminemoji_aliasAdd
      security:
        - slackAuth:
            - admin.teams:write
      description: Add an emoji alias.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminemojiAliasAddRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminemojiAliasAddResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminemojiAliasAdddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.emoji.addAlias
  /admin.emoji.list:
    get:
      tags:
        - admin.emoji
        - admin
      operationId: Adminemoji_listEnterpriseEmoji
      security:
        - slackAuth:
            - admin.teams:read
      description: List emoji for an Enterprise Grid organization.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    cache_ts: '1575283387.000000'
                    categories:
                      - emoji_names:
                          - grinning
                          - grin
                          - joy
                          - etc etc ...
                        name: Smileys & People
                    categories_version: '5'
                    emoji:
                      black_square: alias:black_large_square
                      bowtie: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/bowtie/f3ec6f2bb0.png
                      cubimal_chick: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/cubimal_chick/85961c43d7.png
                      dusty_stick: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/dusty_stick/6177a62312.png
                      glitch_crab: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/glitch_crab/db049f1f9c.png
                      piggy: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/piggy/b7762ee8cd.png
                      pride: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/pride/56b1bd3388.png
                      shipit: alias:squirrel
                      simple_smile:
                        apple: >-
                          https://a.slack-edge.com/80588/img/emoji_2017_12_06/apple/simple_smile.png
                        google: >-
                          https://a.slack-edge.com/80588/img/emoji_2017_12_06/google/simple_smile.png
                      slack: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/slack/7d462d2443.png
                      slack_call: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/slack_call/b81fffd6dd.png
                      squirrel: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/squirrel/465f40c0e0.png
                      thumbsup_all: >-
                        https://emoji.slack-edge.com/T9TK3CUKW/thumbsup_all/50096a1020.gif
                      white_square: alias:white_large_square
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminemojiListEnterpriseEmojiResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminemojiListEnterpriseEmojidefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.emoji.list
  /admin.emoji.remove:
    post:
      tags:
        - admin.emoji
        - admin
      operationId: Adminemoji_removeEnterpriseEmoji
      security:
        - slackAuth:
            - admin.teams:write
      description: Remove an emoji across an Enterprise Grid organization
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminemojiRemoveEnterpriseEmojiRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminemojiRemoveEnterpriseEmojiResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminemojiRemoveEnterpriseEmojidefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.emoji.remove
  /admin.emoji.rename:
    post:
      tags:
        - admin.emoji
        - admin
      operationId: Adminemoji_renameEmoji
      security:
        - slackAuth:
            - admin.teams:write
      description: Rename an emoji.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminemojiRenameEmojiRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminemojiRenameEmojiResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminemojiRenameEmojidefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.emoji.rename
  /admin.inviteRequests.approve:
    post:
      tags:
        - admin.inviteRequests
        - admin
      operationId: AdmininviteRequests_approveRequest
      security:
        - slackAuth:
            - admin.invites:write
      description: Approve a workspace invite request.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.invites:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/admin_inviteRequests_approve'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdmininviteRequestsApproveRequestResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdmininviteRequestsApproveRequestdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.approve
  /admin.inviteRequests.approved.list:
    get:
      tags:
        - admin.inviteRequests.approved
        - admin
      operationId: AdmininviteRequestsapproved_list
      security:
        - slackAuth:
            - admin.invites:read
      description: List all approved workspace invite requests.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.invites:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: ID for the workspace where the invite requests were made.
          in: query
          name: team_id
          schema:
            type: string
        - description: >-
            Value of the `next_cursor` field sent as part of the previous API
            response
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The number of results that will be returned by the API on each
            invocation. Must be between 1 - 1000, both inclusive
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdmininviteRequestsapprovedListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdmininviteRequestsapprovedListdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.approved.list
  /admin.inviteRequests.denied.list:
    get:
      tags:
        - admin.inviteRequests.denied
        - admin
      operationId: AdmininviteRequestsdenied_list
      security:
        - slackAuth:
            - admin.invites:read
      description: List all denied workspace invite requests.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.invites:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: ID for the workspace where the invite requests were made.
          in: query
          name: team_id
          schema:
            type: string
        - description: >-
            Value of the `next_cursor` field sent as part of the previous api
            response
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The number of results that will be returned by the API on each
            invocation. Must be between 1 - 1000 both inclusive
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdmininviteRequestsdeniedListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdmininviteRequestsdeniedListdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.denied.list
  /admin.inviteRequests.deny:
    post:
      tags:
        - admin.inviteRequests
        - admin
      operationId: AdmininviteRequests_denyRequest
      security:
        - slackAuth:
            - admin.invites:write
      description: Deny a workspace invite request.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.invites:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/admin_inviteRequests_approve'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdmininviteRequestsDenyRequestResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdmininviteRequestsDenyRequestdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.deny
  /admin.inviteRequests.list:
    get:
      tags:
        - admin.inviteRequests
        - admin
      operationId: AdmininviteRequests_listPendingWorkspaceInviteRequests
      security:
        - slackAuth:
            - admin.invites:read
      description: List all pending workspace invite requests.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.invites:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: ID for the workspace where the invite requests were made.
          in: query
          name: team_id
          schema:
            type: string
        - description: >-
            Value of the `next_cursor` field sent as part of the previous API
            response
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The number of results that will be returned by the API on each
            invocation. Must be between 1 - 1000, both inclusive
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdmininviteRequestsListPendingWorkspaceInviteRequestsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdmininviteRequestsListPendingWorkspaceInviteRequestsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.list
  /admin.teams.admins.list:
    get:
      tags:
        - admin.teams.admins
        - admin
      operationId: Adminteamsadmins_getAll
      security:
        - slackAuth:
            - admin.teams:read
      description: List all of the admins on a given workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The maximum number of items to return.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    admin_ids:
                      - U1234
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminteamsadminsGetAllResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminteamsadminsGetAlldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.admins.list
  /admin.teams.create:
    post:
      tags:
        - admin.teams
        - admin
      operationId: Adminteams_createEnterpriseTeam
      security:
        - slackAuth:
            - admin.teams:write
      description: Create an Enterprise team.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminteamsCreateEnterpriseTeamRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    team: T12345
              schema:
                $ref: '#/components/schemas/AdminteamsCreateEnterpriseTeamResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminteamsCreateEnterpriseTeamdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.create
  /admin.teams.list:
    get:
      tags:
        - admin.teams
        - admin
      operationId: Adminteams_listAll
      security:
        - slackAuth:
            - admin.teams:read
      description: List all teams on an Enterprise organization
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 100 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    teams:
                      - discoverability: hidden
                        id: T1234
                        name: My Team
                        primary_owner:
                          email: bront@slack.com
                          user_id: W1234
                        team_url: https://subarachnoid.slack.com/
              schema:
                $ref: '#/components/schemas/AdminteamsListAllResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminteamsListAlldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.list
  /admin.teams.owners.list:
    get:
      tags:
        - admin.teams.owners
        - admin
      operationId: Adminteamsowners_listOwners
      security:
        - slackAuth:
            - admin.teams:read
      description: List all of the owners on a given workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: team_id
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Must be between 1 - 1000 both
            inclusive.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    owner_ids:
                      - U1234
              schema:
                $ref: '#/components/schemas/AdminteamsownersListOwnersResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminteamsownersListOwnersdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.owners.list
  /admin.teams.settings.info:
    get:
      tags:
        - admin.teams.settings
        - admin
      operationId: Adminteamssettings_getInfo
      security:
        - slackAuth:
            - admin.teams:read
      description: Fetch information about settings in a workspace
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    team:
                      default_channels: array
                      domain: string
                      email_domain: string
                      enterprise_id: string
                      enterprise_name: string
                      icon: array
                      id: stringX
                      name: string
              schema:
                $ref: '#/components/schemas/AdminteamssettingsGetInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminteamssettingsGetInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.info
  /admin.teams.settings.setDefaultChannels:
    post:
      tags:
        - admin.teams.settings
        - admin
      operationId: Adminteamssettings_setDefaultChannels
      security:
        - slackAuth:
            - admin.teams:write
      description: Set the default channels of a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminteamssettingsSetDefaultChannelsRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminteamssettingsSetDefaultChannelsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminteamssettingsSetDefaultChannelsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setDefaultChannels
  /admin.teams.settings.setDescription:
    post:
      tags:
        - admin.teams.settings
        - admin
      operationId: Adminteamssettings_setDescription
      security:
        - slackAuth:
            - admin.teams:write
      description: Set the description of a given workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminteamssettingsSetDescriptionRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminteamssettingsSetDescriptionResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminteamssettingsSetDescriptiondefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setDescription
  /admin.teams.settings.setDiscoverability:
    post:
      tags:
        - admin.teams.settings
        - admin
      operationId: Adminteamssettings_setDiscoverabilityOfWorkspace
      security:
        - slackAuth:
            - admin.teams:write
      description: >-
        An API method that allows admins to set the discoverability of a given
        workspace
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminteamssettingsSetDiscoverabilityOfWorkspaceRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminteamssettingsSetDiscoverabilityOfWorkspaceResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminteamssettingsSetDiscoverabilityOfWorkspacedefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setDiscoverability
  /admin.teams.settings.setIcon:
    post:
      tags:
        - admin.teams.settings
        - admin
      operationId: Adminteamssettings_setIcon
      security:
        - slackAuth:
            - admin.teams:write
      description: Sets the icon of a workspace.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminteamssettingsSetIconRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminteamssettingsSetIconResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminteamssettingsSetIcondefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setIcon
  /admin.teams.settings.setName:
    post:
      tags:
        - admin.teams.settings
        - admin
      operationId: Adminteamssettings_setName
      security:
        - slackAuth:
            - admin.teams:write
      description: Set the name of a given workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminteamssettingsSetNameRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminteamssettingsSetNameResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminteamssettingsSetNamedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setName
  /admin.usergroups.addChannels:
    post:
      tags:
        - admin.usergroups
        - admin
      operationId: Adminusergroups_addDefaultChannels
      security:
        - slackAuth:
            - admin.usergroups:write
      description: Add one or more default channels to an IDP group.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusergroupsAddDefaultChannelsRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusergroupsAddDefaultChannelsResponse'
        default:
          description: >-
            Typical error response if the token provided is not associated with
            an Org Admin or Owner
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_an_admin
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusergroupsAddDefaultChannelsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.addChannels
  /admin.usergroups.addTeams:
    post:
      tags:
        - admin.usergroups
        - admin
      operationId: Adminusergroups_associateDefaultWorkspaces
      security:
        - slackAuth:
            - admin.teams:write
      description: >-
        Associate one or more default workspaces with an organization-wide IDP
        group.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.teams:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/AdminusergroupsAssociateDefaultWorkspacesRequest
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminusergroupsAssociateDefaultWorkspacesResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusergroupsAssociateDefaultWorkspacesdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.addTeams
  /admin.usergroups.listChannels:
    get:
      tags:
        - admin.usergroups
        - admin
      operationId: Adminusergroups_listChannelsGet
      security:
        - slackAuth:
            - admin.usergroups:read
      description: List the channels linked to an org-level IDP group (user group).
      parameters:
        - description: 'Authentication token. Requires scope: `admin.usergroups:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: ID of the IDP group to list default channels for.
          in: query
          name: usergroup_id
          required: true
          schema:
            type: string
        - description: ID of the the workspace.
          in: query
          name: team_id
          schema:
            type: string
        - description: Flag to include or exclude the count of members per channel.
          in: query
          name: include_num_members
          schema:
            type: boolean
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channels:
                      - id: C024BE91L
                        name: fun
                        num_members: 34
                        team_id: T024BE911
                      - id: C024BE91K
                        name: more fun
                        team_id: T024BE912
                      - id: C024BE91M
                        is_redacted: true
                        name: public-channel
                        num_members: 34
                        team_id: T024BE911
                      - id: C024BE91N
                        name: some more fun
                        team_id: T024BE921
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusergroupsListChannelsGetResponse'
        default:
          description: >-
            Typical error response if the token provided is not associated with
            an Org Admin or Owner
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_an_admin
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusergroupsListChannelsGetdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.listChannels
  /admin.usergroups.removeChannels:
    post:
      tags:
        - admin.usergroups
        - admin
      operationId: Adminusergroups_removeChannels
      security:
        - slackAuth:
            - admin.usergroups:write
      description: >-
        Remove one or more default channels from an org-level IDP group (user
        group).
      parameters:
        - description: 'Authentication token. Requires scope: `admin.usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusergroupsRemoveChannelsRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusergroupsRemoveChannelsResponse'
        default:
          description: >-
            Typical error response if the token provided is not associated with
            an Org Admin or Owner
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_an_admin
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusergroupsRemoveChannelsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.removeChannels
  /admin.users.assign:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_addWorkspaceUser
      security:
        - slackAuth:
            - admin.users:write
      description: Add an Enterprise user to a workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersAddWorkspaceUserRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersAddWorkspaceUserResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminusersAddWorkspaceUserdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.assign
  /admin.users.invite:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_inviteUserToWorkspace
      security:
        - slackAuth:
            - admin.users:write
      description: Invite a user to a workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersInviteUserToWorkspaceRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersInviteUserToWorkspaceResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusersInviteUserToWorkspacedefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.invite
  /admin.users.list:
    get:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_listWorkspaceUsers
      security:
        - slackAuth:
            - admin.users:read
      description: List users on a workspace
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: The ID (`T1234`) of the workspace.
          in: query
          name: team_id
          required: true
          schema:
            type: string
        - description: >-
            Set `cursor` to `next_cursor` returned by the previous call to list
            items in the next page.
          in: query
          name: cursor
          schema:
            type: string
        - description: Limit for how many users to be retrieved per page
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    users:
                      - email: bront@slack.com
                        id: T1234X
                        is_admin: false
                        is_bot: false
                        is_owner: false
                        is_primary_owner: false
                        is_restricted: false
                        is_ultra_restricted: false
              schema:
                $ref: '#/components/schemas/AdminusersListWorkspaceUsersResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusersListWorkspaceUsersdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.list
  /admin.users.remove:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_removeUserFromWorkspace
      security:
        - slackAuth:
            - admin.users:write
      description: Remove a user from a workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersRemoveUserFromWorkspaceRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersRemoveUserFromWorkspaceResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusersRemoveUserFromWorkspacedefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.remove
  /admin.users.session.invalidate:
    post:
      tags:
        - admin.users.session
        - admin
      operationId: Adminuserssession_invalidateSession
      security:
        - slackAuth:
            - admin.users:write
      description: Invalidate a single session for a user by session_id
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminuserssessionInvalidateSessionRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AdminuserssessionInvalidateSessionResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminuserssessionInvalidateSessiondefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.session.invalidate
  /admin.users.session.reset:
    post:
      tags:
        - admin.users.session
        - admin
      operationId: Adminuserssession_resetSessions
      security:
        - slackAuth:
            - admin.users:write
      description: Wipes all valid sessions on all devices for a given user
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminuserssessionResetSessionsRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminuserssessionResetSessionsResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminuserssessionResetSessionsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.session.reset
  /admin.users.setAdmin:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_setAdminUser
      security:
        - slackAuth:
            - admin.users:write
      description: Set an existing guest, regular user, or owner to be an admin user.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersSetAdminUserRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersSetAdminUserResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminusersSetAdminUserdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setAdmin
  /admin.users.setExpiration:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_setExpirationGuest
      security:
        - slackAuth:
            - admin.users:write
      description: Set an expiration for a guest user
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersSetExpirationGuestRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersSetExpirationGuestResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusersSetExpirationGuestdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setExpiration
  /admin.users.setOwner:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_setWorkspaceOwner
      security:
        - slackAuth:
            - admin.users:write
      description: >-
        Set an existing guest, regular user, or admin user to be a workspace
        owner.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersSetWorkspaceOwnerRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersSetWorkspaceOwnerResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AdminusersSetWorkspaceOwnerdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setOwner
  /admin.users.setRegular:
    post:
      tags:
        - admin.users
        - admin
      operationId: Adminusers_setRegularUser
      security:
        - slackAuth:
            - admin.users:write
      description: Set an existing guest user, admin user, or owner to be a regular user.
      parameters:
        - description: 'Authentication token. Requires scope: `admin.users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminusersSetRegularUserRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AdminusersSetRegularUserResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AdminusersSetRegularUserdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setRegular
  /api.test:
    get:
      tags:
        - api
      operationId: api_test
      security:
        - slackAuth:
            - none
      description: Checks API calling code.
      parameters:
        - description: Error response to return
          in: query
          name: error
          schema:
            type: string
        - description: example property to return
          in: query
          name: foo
          schema:
            type: string
      responses:
        '200':
          description: Standard success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ApiTestResponse'
        default:
          description: Artificial error response
          content:
            application/json:
              examples:
                response:
                  value:
                    args:
                      error: my_error
                    error: my_error
                    ok: false
              schema:
                $ref: '#/components/schemas/ApiTestdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/api.test
  /apps.event.authorizations.list:
    get:
      tags:
        - apps.event.authorizations
        - apps
      operationId: Appseventauthorizations_getList
      security:
        - slackAuth:
            - authorizations:read
      description: >-
        Get a list of authorizations for the given event context. Each
        authorization represents an app installation that the event is visible
        to.
      parameters:
        - description: 'Authentication token. Requires scope: `authorizations:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: event_context
          required: true
          schema:
            type: string
        - in: query
          name: cursor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    authorizations:
                      enterprise_id: string
                      is_bot: string
                      team_id: string
                      user_id: string
                    ok: true
              schema:
                $ref: '#/components/schemas/AppseventauthorizationsGetListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppseventauthorizationsGetListdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.event.authorizations.list
  /apps.permissions.info:
    get:
      tags:
        - apps.permissions
        - apps
      operationId: Appspermissions_listPermissions
      security:
        - slackAuth:
            - none
      description: Returns list of permissions this app has on a team.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          schema:
            type: string
      responses:
        '200':
          description: Standard success response when used with a user token
          content:
            application/json:
              examples:
                response:
                  value:
                    info:
                      app_home:
                        resources:
                          ids:
                            - D0C0NU1Q8
                            - D0BH95DLH
                        scopes:
                          - chat:write
                          - im:history
                          - im:read
                      channel:
                        resources:
                          excluded_ids: []
                          ids:
                            - C061FA5PB
                          wildcard: false
                        scopes:
                          - channels:read
                      group:
                        resources:
                          ids: []
                        scopes: []
                      im:
                        resources:
                          ids: []
                        scopes: []
                      mpim:
                        resources:
                          ids: []
                        scopes: []
                      team:
                        resources:
                          ids: []
                        scopes: []
                    ok: true
              schema:
                $ref: '#/components/schemas/AppspermissionsListPermissionsResponse'
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsListPermissionsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.info
  /apps.permissions.request:
    get:
      tags:
        - apps.permissions
        - apps
      operationId: Appspermissions_additionalScopesRequest
      security:
        - slackAuth:
            - none
      description: Allows an app to request additional scopes
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: A comma separated list of scopes to request for
          in: query
          name: scopes
          required: true
          schema:
            type: string
        - description: Token used to trigger the permissions API
          in: query
          name: trigger_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Standard success response when used with a user token
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsAdditionalScopesRequestResponse
        default:
          description: Standard failure response when trigger_id is invalid
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_trigger_id
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsAdditionalScopesRequestdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.request
  /apps.permissions.resources.list:
    get:
      tags:
        - apps.permissions.resources
        - apps
      operationId: Appspermissionsresources_getResourcesList
      security:
        - slackAuth:
            - none
      description: Returns list of resource grants this app has on a team.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
        - description: The maximum number of items to return.
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical successful paginated response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    resources:
                      - id: T0DES3UAN
                        type: team
                      - id: D024BFF1M
                        type: app_home
                      - id: C024BE91LX
                        type: channel
                    response_metadata:
                      next_cursor: dGVhbTpDMUg5UkVTR0w=
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsresourcesGetResourcesListResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_cursor
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsresourcesGetResourcesListdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.resources.list
  /apps.permissions.scopes.list:
    get:
      tags:
        - apps.permissions.scopes
        - apps
      operationId: Appspermissionsscopes_getList
      security:
        - slackAuth:
            - none
      description: Returns list of scopes this app has on a team.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical successful paginated response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    scopes:
                      app_home:
                        - chat:write
                        - im:history
                        - im:read
                      channel:
                        - channels:history
                        - chat:write
                      group:
                        - chat:write
                      im:
                        - chat:write
                      mpim:
                        - chat:write
                      team:
                        - users:read
                      user: []
              schema:
                $ref: '#/components/schemas/AppspermissionsscopesGetListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsscopesGetListdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.scopes.list
  /apps.permissions.users.list:
    get:
      tags:
        - apps.permissions.users
        - apps
      operationId: Appspermissionsusers_listUserGrants
      security:
        - slackAuth:
            - none
      description: >-
        Returns list of user grants and corresponding scopes this app has on a
        team.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
        - description: The maximum number of items to return.
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical successful paginated response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    resources:
                      - id: U0DES3UAN
                        scopes:
                          - dnd:write:user
                          - reminders:write:user
                      - id: U024BFF1M
                        scopes:
                          - reminders:write:user
                    response_metadata:
                      next_cursor: dGVhbTdPMUg5UkFTT0w=
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsusersListUserGrantsResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_cursor
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsusersListUserGrantsdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.users.list
  /apps.permissions.users.request:
    get:
      tags:
        - apps.permissions.users
        - apps
      operationId: Appspermissionsusers_requestModal
      security:
        - slackAuth:
            - none
      description: >-
        Enables an app to trigger a permissions modal to grant an app access to
        a user access scope.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: A comma separated list of user scopes to request for
          in: query
          name: scopes
          required: true
          schema:
            type: string
        - description: Token used to trigger the request
          in: query
          name: trigger_id
          required: true
          schema:
            type: string
        - description: The user this scope is being requested for
          in: query
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Standard success response when used with a user token
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AppspermissionsusersRequestModalResponse'
        default:
          description: Standard failure response when trigger_id is invalid
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_trigger_id
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/AppspermissionsusersRequestModaldefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.users.request
  /apps.uninstall:
    get:
      tags:
        - apps
      operationId: apps_uninstall
      security:
        - slackAuth:
            - none
      description: Uninstalls your app from a workspace.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          schema:
            type: string
        - description: Issued when you created your application.
          in: query
          name: client_id
          schema:
            type: string
        - description: Issued when you created your application.
          in: query
          name: client_secret
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/AppsUninstallResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AppsUninstalldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.uninstall
  /auth.revoke:
    get:
      tags:
        - auth
      operationId: auth_revoke
      security:
        - slackAuth:
            - none
      description: Revokes a token.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Setting this parameter to `1` triggers a _testing mode_ where the
            specified token will not actually be revoked.
          in: query
          name: test
          schema:
            type: boolean
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    revoked: true
              schema:
                $ref: '#/components/schemas/AuthRevokeResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AuthRevokedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/auth.revoke
  /auth.test:
    get:
      tags:
        - auth
      operationId: auth_test
      security:
        - slackAuth:
            - none
      description: Checks authentication & identity.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Standard success response when used with a user token
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    team: Subarachnoid Workspace
                    team_id: T12345678
                    url: https://subarachnoid.slack.com/
                    user: grace
                    user_id: W12345678
              schema:
                $ref: '#/components/schemas/AuthTestResponse'
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/AuthTestdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/auth.test
  /bots.info:
    get:
      tags:
        - bots
      operationId: bots_info
      security:
        - slackAuth:
            - users:read
      description: Gets information about a bot user.
      parameters:
        - description: 'Authentication token. Requires scope: `users:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Bot user to get info on
          in: query
          name: bot
          schema:
            type: string
      responses:
        '200':
          description: When successful, returns bot info by bot ID.
          content:
            application/json:
              examples:
                response:
                  value:
                    bot:
                      app_id: A161CLERW
                      deleted: false
                      icons:
                        image_36: https://...
                        image_48: https://...
                        image_72: https://...
                      id: B061F7JD2
                      name: beforebot
                      updated: 1449272004
                      user_id: U012ABCDEF
                    ok: true
              schema:
                $ref: '#/components/schemas/BotsInfoResponse'
        default:
          description: When no bot can be found, it returns an error.
          content:
            application/json:
              examples:
                response:
                  value:
                    error: bot_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/BotsInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/bots.info
  /calls.add:
    post:
      tags:
        - calls
      operationId: calls_add
      security:
        - slackAuth:
            - calls:write
      description: Registers a new Call.
      parameters:
        - description: 'Authentication token. Requires scope: `calls:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallsAddRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/CallsAddResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/CallsAdddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.add
  /calls.end:
    post:
      tags:
        - calls
      operationId: calls_end
      security:
        - slackAuth:
            - calls:write
      description: Ends a Call.
      parameters:
        - description: 'Authentication token. Requires scope: `calls:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallsEndRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/CallsEndResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/CallsEnddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.end
  /calls.info:
    get:
      tags:
        - calls
      operationId: calls_info
      security:
        - slackAuth:
            - calls:read
      description: Returns information about a Call.
      parameters:
        - description: 'Authentication token. Requires scope: `calls:read`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: >-
            `id` of the Call returned by the [`calls.add`](https://slack.dev)
            method.
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/CallsInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/CallsInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.info
  /calls.participants.add:
    post:
      tags:
        - calls.participants
        - calls
      operationId: Callsparticipants_addNewParticipant
      security:
        - slackAuth:
            - calls:write
      description: Registers new participants added to a Call.
      parameters:
        - description: 'Authentication token. Requires scope: `calls:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallsparticipantsAddNewParticipantRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: >-
                  #/components/schemas/CallsparticipantsAddNewParticipantResponse
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/CallsparticipantsAddNewParticipantdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.participants.add
  /calls.participants.remove:
    post:
      tags:
        - calls.participants
        - calls
      operationId: Callsparticipants_registerRemoved
      security:
        - slackAuth:
            - calls:write
      description: Registers participants removed from a Call.
      parameters:
        - description: 'Authentication token. Requires scope: `calls:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallsparticipantsRegisterRemovedRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/CallsparticipantsRegisterRemovedResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/CallsparticipantsRegisterRemoveddefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.participants.remove
  /calls.update:
    post:
      tags:
        - calls
      operationId: calls_update
      security:
        - slackAuth:
            - calls:write
      description: Updates information about a Call.
      parameters:
        - description: 'Authentication token. Requires scope: `calls:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallsUpdateRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/CallsUpdateResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/CallsUpdatedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.update
  /chat.delete:
    post:
      tags:
        - chat
      operationId: chat_delete
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Deletes a message.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatDeleteRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel: C024BE91L
                    ok: true
                    ts: '1401383885.000061'
              schema:
                $ref: '#/components/schemas/ChatDeleteResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: message_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatDeletedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.delete
  /chat.deleteScheduledMessage:
    post:
      tags:
        - chat
      operationId: chat_deleteScheduledMessage
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Deletes a pending scheduled message from the queue.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatDeleteScheduledMessageRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ChatDeleteScheduledMessageResponse'
        default:
          description: Typical error response if no message is found
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_scheduled_message_id
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatDeleteScheduledMessagedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.deleteScheduledMessage
  /chat.getPermalink:
    get:
      tags:
        - chat
      operationId: chat_getPermalink
      security:
        - slackAuth:
            - none
      description: Retrieve a permalink URL for a specific extant message
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: The ID of the conversation or channel containing the message
          in: query
          name: channel
          required: true
          schema:
            type: string
        - description: A message's `ts` value, uniquely identifying it within a channel
          in: query
          name: message_ts
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Standard success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel: C1H9RESGA
                    ok: true
                    permalink: >-
                      https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008
              schema:
                $ref: '#/components/schemas/ChatGetPermalinkResponse'
        default:
          description: Error response when channel cannot be found
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatGetPermalinkdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.getPermalink
  /chat.meMessage:
    post:
      tags:
        - chat
      operationId: chat_meMessage
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Share a me message into a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMeMessageRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel: C024BE7LR
                    ok: true
                    ts: '1417671948.000006'
              schema:
                $ref: '#/components/schemas/ChatMeMessageResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatMeMessagedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.meMessage
  /chat.postEphemeral:
    post:
      tags:
        - chat
      operationId: chat_postEphemeral
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Sends an ephemeral message to a user in a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatPostEphemeralRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    message_ts: '1502210682.580145'
                    ok: true
              schema:
                $ref: '#/components/schemas/ChatPostEphemeralResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: user_not_in_channel
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatPostEphemeraldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.postEphemeral
  /chat.postMessage:
    post:
      tags:
        - chat
      operationId: chat_postMessage
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Sends a message to a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatPostMessageRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel: C1H9RESGL
                    message:
                      attachments:
                        - fallback: This is an attachment's fallback
                          id: 1
                          text: This is an attachment
                      bot_id: B19LU7CSY
                      subtype: bot_message
                      text: Here's a message for you
                      ts: '1503435956.000247'
                      type: message
                      username: ecto1
                    ok: true
                    ts: '1503435956.000247'
              schema:
                $ref: '#/components/schemas/ChatPostMessageResponse'
        default:
          description: Typical error response if too many attachments are included
          content:
            application/json:
              examples:
                response:
                  value:
                    error: too_many_attachments
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatPostMessagedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.postMessage
  /chat.scheduleMessage:
    post:
      tags:
        - chat
      operationId: chat_scheduleMessage
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Schedules a message to be sent to a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatScheduleMessageRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel: C1H9RESGL
                    message:
                      attachments:
                        - fallback: This is an attachment's fallback
                          id: 1
                          text: This is an attachment
                      bot_id: B19LU7CSY
                      subtype: bot_message
                      text: Here's a message for you in the future
                      type: delayed_message
                      username: ecto1
                    ok: true
                    post_at: '1562180400'
                    scheduled_message_id: Q1298393284
              schema:
                $ref: '#/components/schemas/ChatScheduleMessageResponse'
        default:
          description: >-
            Typical error response if the `post_at` is invalid (ex. in the past
            or too far into the future)
          content:
            application/json:
              examples:
                response:
                  value:
                    error: time_in_past
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatScheduleMessagedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.scheduleMessage
  /chat.scheduledMessages.list:
    get:
      tags:
        - chat.scheduledMessages
        - chat
      operationId: ChatscheduledMessages_list
      security:
        - slackAuth:
            - none
      description: Returns a list of scheduled messages.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          schema:
            type: string
        - description: The channel of the scheduled messages
          in: query
          name: channel
          schema:
            type: string
        - description: A UNIX timestamp of the latest value in the time range
          in: query
          name: latest
          schema:
            type: number
        - description: A UNIX timestamp of the oldest value in the time range
          in: query
          name: oldest
          schema:
            type: number
        - description: Maximum number of original entries to return.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            For pagination purposes, this is the `cursor` value returned from a
            previous call to `chat.scheduledmessages.list` indicating where you
            want to start this call from.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    response_metadata:
                      next_cursor: ''
                    scheduled_messages:
                      - channel_id: C1H9RESGL
                        date_created: 1551891734
                        id: 1298393284
                        post_at: 1551991428
                        text: Here's a message for you in the future
              schema:
                $ref: '#/components/schemas/ChatscheduledMessagesListResponse'
        default:
          description: Typical error response if the channel passed is invalid
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_channel
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatscheduledMessagesListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.scheduledMessages.list
  /chat.unfurl:
    post:
      tags:
        - chat
      operationId: chat_unfurl
      security:
        - slackAuth:
            - links:write
      description: Provide custom unfurl behavior for user-posted URLs
      parameters:
        - description: 'Authentication token. Requires scope: `links:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatUnfurlRequest'
        required: true
      responses:
        '200':
          description: Typical, minimal success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ChatUnfurlResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: cannot_unfurl_url
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatUnfurldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.unfurl
  /chat.update:
    post:
      tags:
        - chat
      operationId: chat_update
      security:
        - slackAuth:
            - chat:write:user
            - chat:write:bot
      description: Updates a message.
      parameters:
        - description: 'Authentication token. Requires scope: `chat:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatUpdateRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel: C024BE91L
                    message:
                      text: Updated text you carefully authored
                      user: U34567890
                    ok: true
                    text: Updated text you carefully authored
                    ts: '1401383885.000061'
              schema:
                $ref: '#/components/schemas/ChatUpdateResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: cant_update_message
                    ok: false
              schema:
                $ref: '#/components/schemas/ChatUpdatedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.update
  /conversations.archive:
    post:
      tags:
        - conversations
      operationId: conversations_archive
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Archives a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsArchiveRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsArchiveResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsArchivedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.archive
  /conversations.close:
    post:
      tags:
        - conversations
      operationId: conversations_close
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Closes a direct message or multi-person direct message.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsCloseRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsCloseResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsClosedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.close
  /conversations.create:
    post:
      tags:
        - conversations
      operationId: conversations_create
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Initiates a public or private channel-based conversation
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsCreateRequest'
      responses:
        '200':
          description: >-
            If successful, the command returns a rather stark [conversation
            object](https://slack.dev)
          content:
            application/json:
              examples:
                response:
                  value:
                    channel:
                      created: 1504554479
                      creator: U0123456
                      id: C0EAQDV4Z
                      is_archived: false
                      is_channel: true
                      is_ext_shared: false
                      is_general: false
                      is_group: false
                      is_im: false
                      is_member: true
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_shared: false
                      last_read: '0000000000.000000'
                      latest: null
                      name: endeavor
                      name_normalized: endeavor
                      pending_shared: []
                      previous_names: []
                      priority: 0
                      purpose:
                        creator: ''
                        last_set: 0
                        value: ''
                      topic:
                        creator: ''
                        last_set: 0
                        value: ''
                      unlinked: 0
                      unread_count: 0
                      unread_count_display: 0
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsCreateResponse'
        default:
          description: Typical error response when name already in use
          content:
            application/json:
              examples:
                response:
                  value:
                    error: name_taken
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsCreatedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.create
  /conversations.history:
    get:
      tags:
        - conversations
      operationId: conversations_history
      security:
        - slackAuth:
            - channels:history
            - groups:history
            - im:history
            - mpim:history
      description: Fetches a conversation's history of messages and events.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:history`'
          in: query
          name: token
          schema:
            type: string
        - description: Conversation ID to fetch history for.
          in: query
          name: channel
          schema:
            type: string
        - description: End of time range of messages to include in results.
          in: query
          name: latest
          schema:
            type: number
        - description: Start of time range of messages to include in results.
          in: query
          name: oldest
          schema:
            type: number
        - description: >-
            Include messages with latest or oldest timestamp in results only
            when either timestamp is specified.
          in: query
          name: inclusive
          schema:
            type: boolean
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response containing a channel's messages
          content:
            application/json:
              examples:
                response:
                  value:
                    has_more: true
                    messages:
                      - text: >-
                          I find you punny and would like to smell your nose
                          letter
                        ts: '1512085950.000216'
                        type: message
                        user: U012AB3CDE
                      - text: What, you want to smell my shoes better?
                        ts: '1512104434.000490'
                        type: message
                        user: U061F7AUR
                    ok: true
                    pin_count: 0
                    response_metadata:
                      next_cursor: bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz
              schema:
                $ref: '#/components/schemas/ConversationsHistoryResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsHistorydefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.history
  /conversations.info:
    get:
      tags:
        - conversations
      operationId: conversations_info
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
      description: Retrieve information about a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Conversation ID to learn more about
          in: query
          name: channel
          schema:
            type: string
        - description: >-
            Set this to `true` to receive the locale for this conversation.
            Defaults to `false`
          in: query
          name: include_locale
          schema:
            type: boolean
        - description: >-
            Set to `true` to include the member count for the specified
            conversation. Defaults to `false`
          in: query
          name: include_num_members
          schema:
            type: boolean
      responses:
        '200':
          description: >-
            Typical success response for a public channel. (Also, a response
            from a private channel and a multi-party IM is very similar to this
            example.)
          content:
            application/json:
              examples:
                response:
                  value:
                    channel:
                      created: 1449252889
                      creator: W012A3BCD
                      id: C012AB3CDX
                      is_archived: false
                      is_channel: true
                      is_ext_shared: false
                      is_general: true
                      is_group: false
                      is_im: false
                      is_member: true
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_read_only: false
                      is_shared: false
                      last_read: '1502126650.228446'
                      locale: en-US
                      name: general
                      name_normalized: general
                      parent_conversation: null
                      pending_shared: []
                      previous_names:
                        - specifics
                        - abstractions
                        - etc
                      purpose:
                        creator: W012A3BCD
                        last_set: 1449709364
                        value: This part of the workspace is for fun. Make fun here.
                      topic:
                        creator: W012A3BCD
                        last_set: 1449709364
                        value: For public discussion of generalities
                      unlinked: 0
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsInfoResponse'
        default:
          description: Typical error response when a channel cannot be found
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.info
  /conversations.invite:
    post:
      tags:
        - conversations
      operationId: conversations_invite
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Invites users to a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsInviteRequest'
      responses:
        '200':
          description: Typical success response when an invitation is extended
          content:
            application/json:
              examples:
                response:
                  value:
                    channel:
                      created: 1449252889
                      creator: W012A3BCD
                      id: C012AB3CDX
                      is_archived: false
                      is_channel: true
                      is_ext_shared: false
                      is_general: true
                      is_group: false
                      is_im: false
                      is_member: true
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_read_only: false
                      is_shared: false
                      last_read: '1502126650.228446'
                      locale: en-US
                      name: general
                      name_normalized: general
                      num_members: 23
                      pending_shared: []
                      previous_names:
                        - specifics
                        - abstractions
                        - etc
                      purpose:
                        creator: W012A3BCD
                        last_set: 1449709364
                        value: This part of the workspace is for fun. Make fun here.
                      topic:
                        creator: W012A3BCD
                        last_set: 1449709364
                        value: For public discussion of generalities
                      unlinked: 0
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsInviteResponse'
        default:
          description: >-
            Typical error response when an invite is attempted on a conversation
            type that does not support it
          content:
            application/json:
              examples:
                response:
                  value:
                    error: method_not_supported_for_channel_type
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsInvitedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.invite
  /conversations.join:
    post:
      tags:
        - conversations
      operationId: conversations_join
      security:
        - slackAuth:
            - channels:write
      description: Joins an existing conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `channels:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsJoinRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel:
                      created: 1449252889
                      creator: U061F7AUR
                      id: C061EG9SL
                      is_archived: false
                      is_channel: true
                      is_ext_shared: false
                      is_general: true
                      is_group: false
                      is_im: false
                      is_member: true
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_shared: false
                      name: general
                      name_normalized: general
                      pending_shared: []
                      previous_names: []
                      purpose:
                        creator: ''
                        last_set: 0
                        value: For widget discussion
                      topic:
                        creator: ''
                        last_set: 0
                        value: Which widget do you worry about?
                      unlinked: 0
                    ok: true
                    response_metadata:
                      warnings:
                        - already_in_channel
                    warning: already_in_channel
              schema:
                $ref: '#/components/schemas/ConversationsJoinResponse'
        default:
          description: >-
            Typical error response if the conversation is archived and cannot be
            joined
          content:
            application/json:
              examples:
                response:
                  value:
                    error: is_archived
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsJoindefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.join
  /conversations.kick:
    post:
      tags:
        - conversations
      operationId: conversations_kick
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Removes a user from a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsKickRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsKickResponse'
        default:
          description: >-
            Typical error response when you attempt to kick yourself from a
            channel
          content:
            application/json:
              examples:
                response:
                  value:
                    error: cant_kick_self
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsKickdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.kick
  /conversations.leave:
    post:
      tags:
        - conversations
      operationId: conversations_leave
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Leaves a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsLeaveRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsLeaveResponse'
        default:
          description: >-
            Typical error response when attempting to leave a workspace's
            "general" channel
          content:
            application/json:
              examples:
                response:
                  value:
                    error: cant_leave_general
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsLeavedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.leave
  /conversations.list:
    get:
      tags:
        - conversations
      operationId: conversations_list
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
      description: Lists all channels in a Slack team.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Set to `true` to exclude archived channels from the list
          in: query
          name: exclude_archived
          schema:
            type: boolean
        - description: >-
            Mix and match channel types by providing a comma-separated list of
            any combination of `public_channel`, `private_channel`, `mpim`, `im`
          in: query
          name: types
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached. Must be an integer no larger than 1000.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response with only public channels
          content:
            application/json:
              examples:
                response:
                  value:
                    channels:
                      - created: 1449252889
                        creator: U012A3CDE
                        id: C012AB3CDX
                        is_archived: false
                        is_channel: true
                        is_ext_shared: false
                        is_general: true
                        is_group: false
                        is_im: false
                        is_member: true
                        is_mpim: false
                        is_org_shared: false
                        is_pending_ext_shared: false
                        is_private: false
                        is_shared: false
                        name: general
                        name_normalized: general
                        num_members: 4
                        pending_shared: []
                        previous_names: []
                        purpose:
                          creator: ''
                          last_set: 0
                          value: >-
                            This channel is for team-wide communication and
                            announcements. All team members are in this channel.
                        topic:
                          creator: ''
                          last_set: 0
                          value: Company-wide announcements and work-based matters
                        unlinked: 0
                      - created: 1449252889
                        creator: U061F7AUR
                        id: C061EG9T2
                        is_archived: false
                        is_channel: true
                        is_ext_shared: false
                        is_general: false
                        is_group: false
                        is_im: false
                        is_member: true
                        is_mpim: false
                        is_org_shared: false
                        is_pending_ext_shared: false
                        is_private: false
                        is_shared: false
                        name: random
                        name_normalized: random
                        num_members: 4
                        pending_shared: []
                        previous_names: []
                        purpose:
                          creator: ''
                          last_set: 0
                          value: >-
                            A place for non-work-related flimflam, faffing,
                            hodge-podge or jibber-jabber you'd prefer to keep
                            out of more focused work-related channels.
                        topic:
                          creator: ''
                          last_set: 0
                          value: Non-work banter and water cooler conversation
                        unlinked: 0
                    ok: true
                    response_metadata:
                      next_cursor: dGVhbTpDMDYxRkE1UEI=
              schema:
                $ref: '#/components/schemas/ConversationsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.list
  /conversations.mark:
    post:
      tags:
        - conversations
      operationId: conversations_mark
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Sets the read cursor in a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsMarkRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsMarkResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsMarkdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.mark
  /conversations.members:
    get:
      tags:
        - conversations
      operationId: conversations_members
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
      description: Retrieve members of a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:read`'
          in: query
          name: token
          schema:
            type: string
        - description: ID of the conversation to retrieve members for
          in: query
          name: channel
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical paginated success response
          content:
            application/json:
              examples:
                response:
                  value:
                    members:
                      - U023BECGF
                      - U061F7AUR
                      - W012A3CDE
                    ok: true
                    response_metadata:
                      next_cursor: e3VzZXJfaWQ6IFcxMjM0NTY3fQ==
              schema:
                $ref: '#/components/schemas/ConversationsMembersResponse'
        default:
          description: Typical error response when an invalid cursor is provided
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_cursor
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsMembersdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.members
  /conversations.open:
    post:
      tags:
        - conversations
      operationId: conversations_open
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Opens or resumes a direct message or multi-person direct message.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsOpenRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel:
                      id: D069C7QFK
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsOpenResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsOpendefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.open
  /conversations.rename:
    post:
      tags:
        - conversations
      operationId: conversations_rename
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Renames a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsRenameRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    channel:
                      created: 1449252889
                      creator: W012A3BCD
                      id: C012AB3CDX
                      is_archived: false
                      is_channel: true
                      is_ext_shared: false
                      is_general: true
                      is_group: false
                      is_im: false
                      is_member: true
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_read_only: false
                      is_shared: false
                      last_read: '1502126650.228446'
                      locale: en-US
                      name: general
                      name_normalized: general
                      num_members: 23
                      pending_shared: []
                      previous_names:
                        - specifics
                        - abstractions
                        - etc
                      purpose:
                        creator: W012A3BCD
                        last_set: 1449709364
                        value: This part of the workspace is for fun. Make fun here.
                      topic:
                        creator: W012A3BCD
                        last_set: 1449709364
                        value: For public discussion of generalities
                      unlinked: 0
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsRenameResponse'
        default:
          description: >-
            Typical error response when the calling user is not a member of the
            conversation
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_in_channel
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsRenamedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.rename
  /conversations.replies:
    get:
      tags:
        - conversations
      operationId: conversations_replies
      security:
        - slackAuth:
            - channels:history
            - groups:history
            - im:history
            - mpim:history
      description: Retrieve a thread of messages posted to a conversation
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:history`'
          in: query
          name: token
          schema:
            type: string
        - description: Conversation ID to fetch thread from.
          in: query
          name: channel
          schema:
            type: string
        - description: >-
            Unique identifier of a thread's parent message. `ts` must be the
            timestamp of an existing message with 0 or more replies. If there
            are no replies then just the single message referenced by `ts` will
            return - it is just an ordinary, unthreaded message.
          in: query
          name: ts
          schema:
            type: number
        - description: End of time range of messages to include in results.
          in: query
          name: latest
          schema:
            type: number
        - description: Start of time range of messages to include in results.
          in: query
          name: oldest
          schema:
            type: number
        - description: >-
            Include messages with latest or oldest timestamp in results only
            when either timestamp is specified.
          in: query
          name: inclusive
          schema:
            type: boolean
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    has_more: true
                    messages:
                      - last_read: '1484678597.521003'
                        reply_count: 3
                        subscribed: true
                        text: island
                        thread_ts: '1482960137.003543'
                        ts: '1482960137.003543'
                        type: message
                        unread_count: 0
                        user: U061F7AUR
                      - parent_user_id: U061F7AUR
                        text: one island
                        thread_ts: '1482960137.003543'
                        ts: '1483037603.017503'
                        type: message
                        user: U061F7AUR
                      - parent_user_id: U061F7AUR
                        text: two island
                        thread_ts: '1482960137.003543'
                        ts: '1483051909.018632'
                        type: message
                        user: U061F7AUR
                      - parent_user_id: U061F7AUR
                        text: three for the land
                        thread_ts: '1482960137.003543'
                        ts: '1483125339.020269'
                        type: message
                        user: U061F7AUR
                    ok: true
                    response_metadata:
                      next_cursor: bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx
              schema:
                $ref: '#/components/schemas/ConversationsRepliesResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: thread_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsRepliesdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.replies
  /conversations.setPurpose:
    post:
      tags:
        - conversations
      operationId: conversations_setPurpose
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Sets the purpose for a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsSetPurposeRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsSetPurposeResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsSetPurposedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setPurpose
  /conversations.setTopic:
    post:
      tags:
        - conversations
      operationId: conversations_setTopic
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Sets the topic for a conversation.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsSetTopicRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsSetTopicResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsSetTopicdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setTopic
  /conversations.unarchive:
    post:
      tags:
        - conversations
      operationId: conversations_unarchive
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
      description: Reverses conversation archival.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationsUnarchiveRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ConversationsUnarchiveResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ConversationsUnarchivedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.unarchive
  /dialog.open:
    get:
      tags:
        - dialog
      operationId: dialog_open
      security:
        - slackAuth:
            - none
      description: Open a dialog with a user
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: The dialog definition. This must be a JSON-encoded string.
          in: query
          name: dialog
          required: true
          schema:
            type: string
        - description: Exchange a trigger to post to the user.
          in: query
          name: trigger_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response is quite minimal.
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/DialogOpenResponse'
        default:
          description: >-
            Typical error response, before getting to any possible validation
            errors.
          content:
            application/json:
              examples:
                response:
                  value:
                    error: missing_trigger
                    ok: false
              schema:
                $ref: '#/components/schemas/DialogOpendefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dialog.open
  /dnd.endDnd:
    post:
      tags:
        - dnd
      operationId: dnd_endDnd
      security:
        - slackAuth:
            - dnd:write
      description: Ends the current user's Do Not Disturb session immediately.
      parameters:
        - description: 'Authentication token. Requires scope: `dnd:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/DndEndDndResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/DndEndDnddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.endDnd
  /dnd.endSnooze:
    post:
      tags:
        - dnd
      operationId: dnd_endSnooze
      security:
        - slackAuth:
            - dnd:write
      description: Ends the current user's snooze mode immediately.
      parameters:
        - description: 'Authentication token. Requires scope: `dnd:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/DndEndSnoozeResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/DndEndSnoozedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.endSnooze
  /dnd.info:
    get:
      tags:
        - dnd
      operationId: dnd_info
      security:
        - slackAuth:
            - dnd:read
      description: Retrieves a user's current Do Not Disturb status.
      parameters:
        - description: 'Authentication token. Requires scope: `dnd:read`'
          in: query
          name: token
          schema:
            type: string
        - description: User to fetch status for (defaults to current user)
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/DndInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/DndInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.info
  /dnd.setSnooze:
    post:
      tags:
        - dnd
      operationId: dnd_setSnooze
      security:
        - slackAuth:
            - dnd:write
      description: >-
        Turns on Do Not Disturb mode for the current user, or changes its
        duration.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DndSetSnoozeRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/DndSetSnoozeResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/DndSetSnoozedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.setSnooze
  /dnd.teamInfo:
    get:
      tags:
        - dnd
      operationId: dnd_teamInfo
      security:
        - slackAuth:
            - dnd:read
      description: Retrieves the Do Not Disturb status for up to 50 users on a team.
      parameters:
        - description: 'Authentication token. Requires scope: `dnd:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Comma-separated list of users to fetch Do Not Disturb status for
          in: query
          name: users
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    users:
                      U023BECGF:
                        dnd_enabled: true
                        next_dnd_end_ts: 1450423800
                        next_dnd_start_ts: 1450387800
                      W058CJVAA:
                        dnd_enabled: false
                        next_dnd_end_ts: 1
                        next_dnd_start_ts: 1
              schema:
                $ref: '#/components/schemas/DndTeamInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/DndTeamInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.teamInfo
  /emoji.list:
    get:
      tags:
        - emoji
      operationId: emoji_list
      security:
        - slackAuth:
            - emoji:read
      description: Lists custom emoji for a team.
      parameters:
        - description: 'Authentication token. Requires scope: `emoji:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/EmojiListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/EmojiListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/emoji.list
  /files.comments.delete:
    post:
      tags:
        - files.comments
        - files
      operationId: Filescomments_deleteComment
      security:
        - slackAuth:
            - files:write:user
      description: Deletes an existing comment on a file.
      parameters:
        - description: 'Authentication token. Requires scope: `files:write:user`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilescommentsDeleteCommentRequest'
      responses:
        '200':
          description: Standard success response is very simple
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilescommentsDeleteCommentResponse'
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              examples:
                response:
                  value:
                    error: file_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/FilescommentsDeleteCommentdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.comments.delete
  /files.delete:
    post:
      tags:
        - files
      operationId: files_delete
      security:
        - slackAuth:
            - files:write:user
      description: Deletes a file.
      parameters:
        - description: 'Authentication token. Requires scope: `files:write:user`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesDeleteRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesDeleteResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesDeletedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.delete
  /files.info:
    get:
      tags:
        - files
      operationId: files_info
      security:
        - slackAuth:
            - files:read
      description: Gets information about a file.
      parameters:
        - description: 'Authentication token. Requires scope: `files:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Specify a file by providing its ID.
          in: query
          name: file
          schema:
            type: string
        - in: query
          name: count
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Parameter for pagination. File comments are paginated for a single
            file. Set `cursor` equal to the `next_cursor` attribute returned by
            the previous request's `response_metadata`. This parameter is
            optional, but pagination is mandatory: the default value simply
            fetches the first "page" of the collection of comments. See
            [pagination](https://slack.dev) for more details.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    comments: []
                    file:
                      title: tedair.gif
                      channels:
                        - C0T8SE4AU
                      comments_count: 0
                      created: 1531763342
                      deanimate_gif: https://.../tedair_deanimate_gif.png
                      display_as_bot: false
                      editable: false
                      external_type: ''
                      filetype: gif
                      groups: []
                      has_rich_preview: false
                      id: F0S43PZDF
                      image_exif_rotation: 1
                      ims: []
                      is_external: false
                      is_public: true
                      is_starred: false
                      mimetype: image/gif
                      mode: hosted
                      name: tedair.gif
                      original_h: 226
                      original_w: 176
                      permalink: https://.../tedair.gif
                      permalink_public: https://.../...
                      pjpeg: https://.../tedair_pjpeg.jpg
                      pretty_type: GIF
                      public_url_shared: false
                      shares:
                        public:
                          C0T8SE4AU:
                            - channel_name: file-under
                              latest_reply: '1531763348.000001'
                              reply_count: 1
                              reply_users:
                                - U061F7AUR
                              reply_users_count: 1
                              team_id: T061EG9R6
                              thread_ts: '1531763273.000015'
                              ts: '1531763348.000001'
                      size: 137531
                      thumb_160: https://.../tedair_=_160.png
                      thumb_360: https://.../tedair_360.png
                      thumb_360_gif: https://.../tedair_360.gif
                      thumb_360_h: 226
                      thumb_360_w: 176
                      thumb_64: https://.../tedair_64.png
                      thumb_80: https://.../tedair_80.png
                      timestamp: 1531763342
                      url_private: https://.../tedair.gif
                      url_private_download: https://.../tedair.gif
                      user: U061F7AUR
                      username: ''
                    ok: true
                    response_metadata:
                      next_cursor: dGVhbTpDMUg5UkVTR0w=
              schema:
                $ref: '#/components/schemas/FilesInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.info
  /files.list:
    get:
      tags:
        - files
      operationId: files_list
      security:
        - slackAuth:
            - files:read
      description: List for a team, in a channel, or from a user with applied filters.
      parameters:
        - description: 'Authentication token. Requires scope: `files:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Filter files created by a single user.
          in: query
          name: user
          schema:
            type: string
        - description: Filter files appearing in a specific channel, indicated by its ID.
          in: query
          name: channel
          schema:
            type: string
        - description: Filter files created after this timestamp (inclusive).
          in: query
          name: ts_from
          schema:
            type: number
        - description: Filter files created before this timestamp (inclusive).
          in: query
          name: ts_to
          schema:
            type: number
        - description: >-
            Filter files by type ([see below](https://slack.dev)). You can pass
            multiple values in the types argument, like
            `types=spaces,snippets`.The default value is `all`, which does not
            filter the list.
          in: query
          name: types
          schema:
            type: string
        - in: query
          name: count
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: string
        - description: >-
            Show truncated file info for files hidden due to being too old, and
            the team who owns the file being over the file limit.
          in: query
          name: show_files_hidden_by_limit
          schema:
            type: boolean
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    files:
                      - title: billair.gif
                        channels:
                          - C0T8SE4AU
                        comments_count: 0
                        created: 1531763254
                        deanimate_gif: https://.../billair_deanimate_gif.png
                        display_as_bot: false
                        editable: false
                        external_type: ''
                        filetype: gif
                        groups: []
                        id: F0S43P1CZ
                        image_exif_rotation: 1
                        ims: []
                        is_external: false
                        is_public: true
                        mimetype: image/gif
                        mode: hosted
                        name: billair.gif
                        original_h: 226
                        original_w: 176
                        permalink: https://.../billair.gif
                        permalink_public: https://.../...
                        pjpeg: https://.../billair_pjpeg.jpg
                        pretty_type: GIF
                        public_url_shared: false
                        size: 144538
                        thumb_160: https://.../billair_=_160.png
                        thumb_360: https://.../billair_360.png
                        thumb_360_gif: https://.../billair_360.gif
                        thumb_360_h: 226
                        thumb_360_w: 176
                        thumb_64: https://.../billair_64.png
                        thumb_80: https://.../billair_80.png
                        timestamp: 1531763254
                        url_private: https://.../billair.gif
                        url_private_download: https://.../billair.gif
                        user: U061F7AUR
                        username: ''
                      - title: tedair.gif
                        channels:
                          - C0T8SE4AU
                        comments_count: 0
                        created: 1531763342
                        deanimate_gif: https://.../tedair_deanimate_gif.png
                        display_as_bot: false
                        editable: false
                        external_type: ''
                        filetype: gif
                        groups: []
                        id: F0S43PZDFX
                        image_exif_rotation: 1
                        ims: []
                        is_external: false
                        is_public: true
                        mimetype: image/gif
                        mode: hosted
                        name: tedair.gif
                        original_h: 226
                        original_w: 176
                        permalink: https://.../tedair.gif
                        permalink_public: https://.../...
                        pjpeg: https://.../tedair_pjpeg.jpg
                        pretty_type: GIF
                        public_url_shared: false
                        size: 137531
                        thumb_160: https://.../tedair_=_160.png
                        thumb_360: https://.../tedair_360.png
                        thumb_360_gif: https://.../tedair_360.gif
                        thumb_360_h: 226
                        thumb_360_w: 176
                        thumb_64: https://.../tedair_64.png
                        thumb_80: https://.../tedair_80.png
                        timestamp: 1531763342
                        url_private: https://.../tedair.gif
                        url_private_download: https://.../tedair.gif
                        user: U061F7AUR
                        username: ''
                    ok: true
                    paging:
                      count: 100
                      page: 1
                      pages: 1
                      total: 2
              schema:
                $ref: '#/components/schemas/FilesListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.list
  /files.remote.add:
    post:
      tags:
        - files.remote
        - files
      operationId: Filesremote_addFromRemote
      security:
        - slackAuth:
            - remote_files:write
      description: Adds a file from a remote service
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesremoteAddFromRemoteRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesremoteAddFromRemoteResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesremoteAddFromRemotedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.add
  /files.remote.info:
    get:
      tags:
        - files.remote
        - files
      operationId: Filesremote_getInfo
      security:
        - slackAuth:
            - remote_files:read
      description: Retrieve information about a remote file added to Slack
      parameters:
        - description: 'Authentication token. Requires scope: `remote_files:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Specify a file by providing its ID.
          in: query
          name: file
          schema:
            type: string
        - description: Creator defined GUID for the file.
          in: query
          name: external_id
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesremoteGetInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesremoteGetInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.info
  /files.remote.list:
    get:
      tags:
        - files.remote
        - files
      operationId: Filesremote_listRemoteFiles
      security:
        - slackAuth:
            - remote_files:read
      description: Retrieve information about a remote file added to Slack
      parameters:
        - description: 'Authentication token. Requires scope: `remote_files:read`'
          in: query
          name: token
          schema:
            type: string
        - description: Filter files appearing in a specific channel, indicated by its ID.
          in: query
          name: channel
          schema:
            type: string
        - description: Filter files created after this timestamp (inclusive).
          in: query
          name: ts_from
          schema:
            type: number
        - description: Filter files created before this timestamp (inclusive).
          in: query
          name: ts_to
          schema:
            type: number
        - description: The maximum number of items to return.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesremoteListRemoteFilesResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesremoteListRemoteFilesdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.list
  /files.remote.remove:
    post:
      tags:
        - files.remote
        - files
      operationId: Filesremote_deleteFile
      security:
        - slackAuth:
            - remote_files:write
      description: Remove a remote file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesremoteDeleteFileRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesremoteDeleteFileResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesremoteDeleteFiledefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.remove
  /files.remote.share:
    get:
      tags:
        - files.remote
        - files
      operationId: Filesremote_shareRemoteFile
      security:
        - slackAuth:
            - remote_files:share
      description: Share a remote file into a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `remote_files:share`'
          in: query
          name: token
          schema:
            type: string
        - description: >-
            Specify a file registered with Slack by providing its ID. Either
            this field or `external_id` or both are required.
          in: query
          name: file
          schema:
            type: string
        - description: >-
            The globally unique identifier (GUID) for the file, as set by the
            app registering the file with Slack.  Either this field or `file` or
            both are required.
          in: query
          name: external_id
          schema:
            type: string
        - description: Comma-separated list of channel IDs where the file will be shared.
          in: query
          name: channels
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesremoteShareRemoteFileResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesremoteShareRemoteFiledefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.share
  /files.remote.update:
    post:
      tags:
        - files.remote
        - files
      operationId: Filesremote_updateRemoteFile
      security:
        - slackAuth:
            - remote_files:write
      description: Updates an existing remote file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesremoteUpdateRemoteFileRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesremoteUpdateRemoteFileResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/FilesremoteUpdateRemoteFiledefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.update
  /files.revokePublicURL:
    post:
      tags:
        - files
      operationId: files_revokePublicURL
      security:
        - slackAuth:
            - files:write:user
      description: Revokes public/external sharing access for a file
      parameters:
        - description: 'Authentication token. Requires scope: `files:write:user`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesRevokePublicUrlRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesRevokePublicUrlResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesRevokePublicUrldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.revokePublicURL
  /files.sharedPublicURL:
    post:
      tags:
        - files
      operationId: files_sharedPublicURL
      security:
        - slackAuth:
            - files:write:user
      description: Enables a file for public/external sharing.
      parameters:
        - description: 'Authentication token. Requires scope: `files:write:user`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesSharedPublicUrlRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesSharedPublicUrlResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesSharedPublicUrldefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.sharedPublicURL
  /files.upload:
    post:
      tags:
        - files
      operationId: files_upload
      security:
        - slackAuth:
            - files:write:user
      description: Uploads or creates a file.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FilesUploadRequest'
      responses:
        '200':
          description: >-
            Success response after uploading a file to a channel with an initial
            message
          content:
            application/json:
              examples:
                response:
                  value:
                    file:
                      title: dramacat
                      channels: []
                      comments_count: 0
                      created: 1532293501
                      display_as_bot: false
                      editable: false
                      external_type: ''
                      filetype: gif
                      groups: []
                      has_rich_preview: false
                      id: F0TD00400
                      image_exif_rotation: 1
                      ims:
                        - D0L4B9P0Q
                      is_external: false
                      is_public: false
                      is_starred: false
                      mimetype: image/jpeg
                      mode: hosted
                      name: dramacat.gif
                      original_h: 366
                      original_w: 526
                      permalink: https://.../dramacat.gif
                      permalink_public: https://.../More-Path-Components
                      pretty_type: JPEG
                      public_url_shared: false
                      shares:
                        private:
                          D0L4B9P0Q:
                            - reply_count: 0
                              reply_users: []
                              reply_users_count: 0
                              ts: '1532293503.000001'
                      size: 43518
                      thumb_160: https://.../dramacat_160.gif
                      thumb_360: https://.../dramacat_360.gif
                      thumb_360_h: 250
                      thumb_360_w: 360
                      thumb_480: https://.../dramacat_480.gif
                      thumb_480_h: 334
                      thumb_480_w: 480
                      thumb_64: https://.../dramacat_64.gif
                      thumb_80: https://.../dramacat_80.gif
                      timestamp: 1532293501
                      url_private: https://.../dramacat.gif
                      url_private_download: https://.../dramacat.gif
                      user: U0L4B9NSU
                      username: ''
                    ok: true
              schema:
                $ref: '#/components/schemas/FilesUploadResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/FilesUploaddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.upload
  /migration.exchange:
    get:
      tags:
        - migration
      operationId: migration_exchange
      security:
        - slackAuth:
            - tokens.basic
      description: For Enterprise Grid workspaces, map local user IDs to global user IDs
      parameters:
        - description: 'Authentication token. Requires scope: `tokens.basic`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: A comma-separated list of user ids, up to 400 per request
          in: query
          name: users
          required: true
          schema:
            type: string
        - description: Specify team_id starts with `T` in case of Org Token
          in: query
          name: team_id
          schema:
            type: string
        - description: >-
            Specify `true` to convert `W` global user IDs to workspace-specific
            `U` IDs. Defaults to `false`.
          in: query
          name: to_old
          schema:
            type: boolean
      responses:
        '200':
          description: >-
            Typical success response when mappings exist for the specified user
            IDs
          content:
            application/json:
              examples:
                response:
                  value:
                    enterprise_id: E1KQTNXE1
                    invalid_user_ids:
                      - U21ABZZXX
                    ok: true
                    team_id: T1KR7PE1W
                    user_id_map:
                      U06UBSUN5: W06M56XJM
                      U06UBSVB3: W06PUUDLY
                      U06UBSVDX: W06PUUDMW
                      U06UEB62U: W06PTT6GH
                      W06UAZ65Q: W06UAZ65Q
              schema:
                $ref: '#/components/schemas/MigrationExchangeResponse'
        default:
          description: Typical error response when there are no mappings to provide
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_enterprise_team
                    ok: false
              schema:
                $ref: '#/components/schemas/MigrationExchangedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/migration.exchange
  /oauth.access:
    get:
      tags:
        - oauth
      operationId: oauth_access
      security:
        - slackAuth:
            - none
      description: Exchanges a temporary OAuth verifier code for an access token.
      parameters:
        - description: Issued when you created your application.
          in: query
          name: client_id
          schema:
            type: string
        - description: Issued when you created your application.
          in: query
          name: client_secret
          schema:
            type: string
        - description: The `code` param returned via the OAuth callback.
          in: query
          name: code
          schema:
            type: string
        - description: This must match the originally submitted URI (if one was sent).
          in: query
          name: redirect_uri
          schema:
            type: string
        - description: >-
            Request the user to add your app only to a single channel. Only
            valid with a [legacy workspace
            app](https://api.slack.com/legacy-workspace-apps).
          in: query
          name: single_channel
          schema:
            type: boolean
      responses:
        '200':
          description: Successful user token negotiation for a single scope
          content:
            application/json:
              examples:
                response:
                  value:
                    access_token: xoxp-XXXXXXXX-XXXXXXXX-XXXXX
                    enterprise_id: null
                    scope: groups:write
                    team_id: TXXXXXXXXX
                    team_name: Wyld Stallyns LLC
              schema:
                $ref: '#/components/schemas/OauthAccessResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_client_id
                    ok: false
              schema:
                $ref: '#/components/schemas/OauthAccessdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.access
  /oauth.token:
    get:
      tags:
        - oauth
      operationId: oauth_token
      security:
        - slackAuth:
            - none
      description: Exchanges a temporary OAuth verifier code for a workspace token.
      parameters:
        - description: Issued when you created your application.
          in: query
          name: client_id
          schema:
            type: string
        - description: Issued when you created your application.
          in: query
          name: client_secret
          schema:
            type: string
        - description: The `code` param returned via the OAuth callback.
          in: query
          name: code
          schema:
            type: string
        - description: This must match the originally submitted URI (if one was sent).
          in: query
          name: redirect_uri
          schema:
            type: string
        - description: Request the user to add your app only to a single channel.
          in: query
          name: single_channel
          schema:
            type: boolean
      responses:
        '200':
          description: >-
            Success example using a workspace app produces a very different kind
            of response
          content:
            application/json:
              examples:
                response:
                  value:
                    access_token: xoxa-access-token-string
                    app_id: A012345678
                    app_user_id: U0AB12ABC
                    authorizing_user_id: U0HTT3Q0G
                    installer_user_id: U061F7AUR
                    ok: true
                    permissions:
                      - resource_id: 0
                        resource_type: channel
                        scopes:
                          - channels:read
                          - chat:write:user
                    single_channel_id: C061EG9T2
                    team_id: T061EG9Z9
                    team_name: Subarachnoid Workspace
                    token_type: app
              schema:
                $ref: '#/components/schemas/OauthTokenResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_client_id
                    ok: false
              schema:
                $ref: '#/components/schemas/OauthTokendefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.token
  /oauth.v2.access:
    get:
      tags:
        - oauth.v2
        - oauth
      operationId: Oauthv2_exchangeToken
      security:
        - slackAuth:
            - none
      description: Exchanges a temporary OAuth verifier code for an access token.
      parameters:
        - description: Issued when you created your application.
          in: query
          name: client_id
          schema:
            type: string
        - description: Issued when you created your application.
          in: query
          name: client_secret
          schema:
            type: string
        - description: The `code` param returned via the OAuth callback.
          in: query
          name: code
          required: true
          schema:
            type: string
        - description: This must match the originally submitted URI (if one was sent).
          in: query
          name: redirect_uri
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful token request with scopes for both a bot user and a user
            token
          content:
            application/json:
              examples:
                response:
                  value:
                    access_token: xoxb-17653672481-19874698323-pdFZKVeTuE8sk7oOcBrzbqgy
                    app_id: A0KRD7HC3
                    authed_user:
                      access_token: xoxp-1234
                      id: U1234
                      scope: chat:write
                      token_type: user
                    bot_user_id: U0KRQLJ9H
                    enterprise:
                      id: E12345678
                      name: slack-sports
                    ok: true
                    scope: commands,incoming-webhook
                    team:
                      id: T9TK3CUKW
                      name: Slack Softball Team
                    token_type: bot
              schema:
                $ref: '#/components/schemas/Oauthv2ExchangeTokenResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_client_id
                    ok: false
              schema:
                $ref: '#/components/schemas/Oauthv2ExchangeTokendefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.v2.access
  /pins.add:
    post:
      tags:
        - pins
      operationId: pins_add
      security:
        - slackAuth:
            - pins:write
      description: Pins an item to a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `pins:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PinsAddRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/PinsAddResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: channel_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/PinsAdddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.add
  /pins.list:
    get:
      tags:
        - pins
      operationId: pins_list
      security:
        - slackAuth:
            - pins:read
      description: Lists items pinned to a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `pins:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Channel to get pinned items for.
          in: query
          name: channel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                      - channel: C2U86NC6H
                        created: 1508881078
                        created_by: U2U85N1RZ
                        message:
                          permalink: >-
                            https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151
                          pinned_to:
                            - C2U86NC6H
                          text: What is the meaning of life?
                          ts: '1508197641.000151'
                          type: message
                          user: U2U85N1RZ
                        type: message
                      - channel: C2U86NC6H
                        created: 1508880991
                        created_by: U2U85N1RZ
                        message:
                          permalink: >-
                            https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015
                          pinned_to:
                            - C2U86NC6H
                          text: >-
                            The meaning of life, the universe, and everything is
                            42.
                          ts: '1503289197.000015'
                          type: message
                          user: U2U85N1RZ
                        type: message
                    ok: true
              schema:
                $ref: '#/components/schemas/PinsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/PinsListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.list
  /pins.remove:
    post:
      tags:
        - pins
      operationId: pins_remove
      security:
        - slackAuth:
            - pins:write
      description: Un-pins an item from a channel.
      parameters:
        - description: 'Authentication token. Requires scope: `pins:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PinsRemoveRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/PinsRemoveResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: no_pin
                    ok: false
              schema:
                $ref: '#/components/schemas/PinsRemovedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.remove
  /reactions.add:
    post:
      tags:
        - reactions
      operationId: reactions_add
      security:
        - slackAuth:
            - reactions:write
      description: Adds a reaction to an item.
      parameters:
        - description: 'Authentication token. Requires scope: `reactions:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReactionsAddRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ReactionsAddResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: already_reacted
                    ok: false
              schema:
                $ref: '#/components/schemas/ReactionsAdddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.add
  /reactions.get:
    get:
      tags:
        - reactions
      operationId: reactions_get
      security:
        - slackAuth:
            - reactions:read
      description: Gets reactions for an item.
      parameters:
        - description: 'Authentication token. Requires scope: `reactions:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Channel where the message to get reactions for was posted.
          in: query
          name: channel
          schema:
            type: string
        - description: File to get reactions for.
          in: query
          name: file
          schema:
            type: string
        - description: File comment to get reactions for.
          in: query
          name: file_comment
          schema:
            type: string
        - description: If true always return the complete reaction list.
          in: query
          name: full
          schema:
            type: boolean
        - description: Timestamp of the message to get reactions for.
          in: query
          name: timestamp
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    file:
                      title: computer.gif
                      channels:
                        - C2U7V2YA2
                      comments_count: 1
                      created: 1507850315
                      groups: []
                      id: F7H0D7ZA4
                      ims: []
                      name: computer.gif
                      reactions:
                        - count: 1
                          name: stuck_out_tongue_winking_eye
                          users:
                            - U2U85N1RV
                      timestamp: 1507850315
                      user: U2U85N1RV
                    ok: true
                    type: file
              schema:
                $ref: '#/components/schemas/ReactionsGetResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ReactionsGetdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.get
  /reactions.list:
    get:
      tags:
        - reactions
      operationId: reactions_list
      security:
        - slackAuth:
            - reactions:read
      description: Lists reactions made by a user.
      parameters:
        - description: 'Authentication token. Requires scope: `reactions:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Show reactions made by this user. Defaults to the authed user.
          in: query
          name: user
          schema:
            type: string
        - description: If true always return the complete reaction list.
          in: query
          name: full
          schema:
            type: boolean
        - in: query
          name: count
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - description: >-
            Parameter for pagination. Set `cursor` equal to the `next_cursor`
            attribute returned by the previous request's `response_metadata`.
            This parameter is optional, but pagination is mandatory: the default
            value simply fetches the first "page" of the collection. See
            [pagination](https://slack.dev) for more details.
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached.
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    items:
                      - channel: C3UKJTQAC
                        message:
                          bot_id: B4VLRLMKJ
                          reactions:
                            - count: 1
                              name: robot_face
                              users:
                                - U2U85N1RV
                          subtype: bot_message
                          text: 'Hello from Python! :tada:'
                          ts: '1507849573.000090'
                          username: Shipit Notifications
                        type: message
                      - comment:
                          comment: This is a file comment
                          created: 1508286096
                          id: Fc7LP08P1U
                          reactions:
                            - count: 1
                              name: white_check_mark
                              users:
                                - U2U85N1RV
                          timestamp: 1508286096
                          type: file_comment
                          user: U2U85N1RV
                        file:
                          title: computer.gif
                          channels:
                            - C2U7V2YA2
                          comments_count: 1
                          created: 1507850315
                          reactions:
                            - count: 1
                              name: stuck_out_tongue_winking_eye
                              users:
                                - U2U85N1RV
                          user: U2U85N1RV
                          username: ''
                      - file:
                          title: computer.gif
                          channels:
                            - C2U7V2YA2
                          comments_count: 1
                          created: 1507850315
                          id: F7H0D7ZA4X
                          name: computer.gif
                          reactions:
                            - count: 1
                              name: stuck_out_tongue_winking_eye
                              users:
                                - U2U85N1RV
                          size: 1639034
                          user: U2U85N1RV
                          username: ''
                        type: file
                    ok: true
                    response_metadata:
                      next_cursor: dGVhbTpDMUg5UkVTR0w=
              schema:
                $ref: '#/components/schemas/ReactionsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/ReactionsListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.list
  /reactions.remove:
    post:
      tags:
        - reactions
      operationId: reactions_remove
      security:
        - slackAuth:
            - reactions:write
      description: Removes a reaction from an item.
      parameters:
        - description: 'Authentication token. Requires scope: `reactions:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReactionsRemoveRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/ReactionsRemoveResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: no_reaction
                    ok: false
              schema:
                $ref: '#/components/schemas/ReactionsRemovedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.remove
  /reminders.add:
    post:
      tags:
        - reminders
      operationId: reminders_add
      security:
        - slackAuth:
            - reminders:write
      description: Creates a reminder.
      parameters:
        - description: 'Authentication token. Requires scope: `reminders:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemindersAddRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/RemindersAddResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/RemindersAdddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.add
  /reminders.complete:
    post:
      tags:
        - reminders
      operationId: reminders_complete
      security:
        - slackAuth:
            - reminders:write
      description: Marks a reminder as complete.
      parameters:
        - description: 'Authentication token. Requires scope: `reminders:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemindersCompleteRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/RemindersCompleteResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/RemindersCompletedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.complete
  /reminders.delete:
    post:
      tags:
        - reminders
      operationId: reminders_delete
      security:
        - slackAuth:
            - reminders:write
      description: Deletes a reminder.
      parameters:
        - description: 'Authentication token. Requires scope: `reminders:write`'
          in: header
          name: token
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemindersDeleteRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/RemindersDeleteResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/RemindersDeletedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.delete
  /reminders.info:
    get:
      tags:
        - reminders
      operationId: reminders_info
      security:
        - slackAuth:
            - reminders:read
      description: Gets information about a reminder.
      parameters:
        - description: 'Authentication token. Requires scope: `reminders:read`'
          in: query
          name: token
          schema:
            type: string
        - description: The ID of the reminder
          in: query
          name: reminder
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/RemindersInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/RemindersInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.info
  /reminders.list:
    get:
      tags:
        - reminders
      operationId: reminders_list
      security:
        - slackAuth:
            - reminders:read
      description: Lists all reminders created by or for a given user.
      parameters:
        - description: 'Authentication token. Requires scope: `reminders:read`'
          in: query
          name: token
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/RemindersListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/RemindersListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.list
  /rtm.connect:
    get:
      tags:
        - rtm
      operationId: rtm_connect
      security:
        - slackAuth:
            - rtm:stream
      description: Starts a Real Time Messaging session.
      parameters:
        - description: 'Authentication token. Requires scope: `rtm:stream`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Batch presence deliveries via subscription. Enabling changes the
            shape of `presence_change` events. See [batch
            presence](https://slack.dev).
          in: query
          name: batch_presence_aware
          schema:
            type: boolean
        - description: >-
            Only deliver presence events when requested by subscription. See
            [presence subscriptions](https://slack.dev).
          in: query
          name: presence_sub
          schema:
            type: boolean
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    self:
                      id: U4X318ZMZ
                      name: robotoverlord
                    team:
                      domain: slackdemo
                      id: T2U81E2FP
                      name: SlackDemo
                    url: wss://...
              schema:
                $ref: '#/components/schemas/RtmConnectResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/RtmConnectdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/rtm.connect
  /search.messages:
    get:
      tags:
        - search
      operationId: search_messages
      security:
        - slackAuth:
            - search:read
      description: Searches for messages matching a query.
      parameters:
        - description: 'Authentication token. Requires scope: `search:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Pass the number of results you want per "page". Maximum of `100`.
          in: query
          name: count
          schema:
            type: integer
        - description: >-
            Pass a value of `true` to enable query highlight markers (see
            below).
          in: query
          name: highlight
          schema:
            type: boolean
        - in: query
          name: page
          schema:
            type: integer
        - description: Search query.
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: Return matches sorted by either `score` or `timestamp`.
          in: query
          name: sort
          schema:
            type: string
        - description: Change sort direction to ascending (`asc`) or descending (`desc`).
          in: query
          name: sort_dir
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    messages:
                      matches:
                        - channel:
                            id: C12345678
                            is_ext_shared: false
                            is_mpim: false
                            is_org_shared: false
                            is_pending_ext_shared: false
                            is_private: false
                            is_shared: false
                            name: general
                            pending_shared: []
                          iid: cb64bdaa-c1e8-4631-8a91-0f78080113e9
                          permalink: >-
                            https://hitchhikers.slack.com/archives/C12345678/p1508284197000015
                          team: T12345678
                          text: >-
                            The meaning of life the universe and everything is
                            42.
                          ts: '1508284197.000015'
                          type: message
                          user: U2U85N1RV
                          username: roach
                        - channel:
                            id: C12345678X
                            is_ext_shared: false
                            is_mpim: false
                            is_org_shared: false
                            is_pending_ext_shared: false
                            is_private: false
                            is_shared: false
                            name: random
                            pending_shared: []
                          iid: 9a00d3c9-bd2d-45b0-988b-6cff99ae2a90
                          permalink: >-
                            https://hitchhikers.slack.com/archives/C12345678/p1508795665000236
                          team: T12345678
                          text: >-
                            The meaning of life the universe and everything is
                            101010
                          ts: '1508795665.000236'
                          type: message
                          user: ''
                          username: robot overlord
                      pagination:
                        first: 1
                        last: 2
                        page: 1
                        page_count: 1
                        per_page: 20
                        total_count: 2
                      paging:
                        count: 20
                        page: 1
                        pages: 1
                        total: 2
                      total: 2
                    ok: true
                    query: The meaning of life the universe and everything
              schema:
                $ref: '#/components/schemas/SearchMessagesResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: No query passed
                    ok: false
              schema:
                $ref: '#/components/schemas/SearchMessagesdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/search.messages
  /stars.add:
    post:
      tags:
        - stars
      operationId: stars_add
      security:
        - slackAuth:
            - stars:write
      description: Adds a star to an item.
      parameters:
        - description: 'Authentication token. Requires scope: `stars:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StarsAddRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/StarsAddResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/StarsAdddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.add
  /stars.list:
    get:
      tags:
        - stars
      operationId: stars_list
      security:
        - slackAuth:
            - stars:read
      description: Lists stars for a user.
      parameters:
        - description: 'Authentication token. Requires scope: `stars:read`'
          in: query
          name: token
          schema:
            type: string
        - in: query
          name: count
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: string
        - description: >-
            Parameter for pagination. Set `cursor` equal to the `next_cursor`
            attribute returned by the previous request's `response_metadata`.
            This parameter is optional, but pagination is mandatory: the default
            value simply fetches the first "page" of the collection. See
            [pagination](https://slack.dev) for more details.
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached.
          in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/StarsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/StarsListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.list
  /stars.remove:
    post:
      tags:
        - stars
      operationId: stars_remove
      security:
        - slackAuth:
            - stars:write
      description: Removes a star from an item.
      parameters:
        - description: 'Authentication token. Requires scope: `stars:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StarsRemoveRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/StarsRemoveResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/StarsRemovedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.remove
  /team.accessLogs:
    get:
      tags:
        - team
      operationId: team_accessLogs
      security:
        - slackAuth:
            - admin
      description: Gets the access logs for the current team.
      parameters:
        - description: 'Authentication token. Requires scope: `admin`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: End of time range of logs to include in results (inclusive).
          in: query
          name: before
          schema:
            type: string
        - in: query
          name: count
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: string
      responses:
        '200':
          description: This response demonstrates pagination and two access log entries.
          content:
            application/json:
              examples:
                response:
                  value:
                    logins:
                      - count: 1
                        country: US
                        date_first: 1422922864
                        date_last: 1422922864
                        ip: 127.0.0.1
                        isp: BigCo ISP
                        region: CA
                        user_agent: >-
                          SlackWeb Mozilla/5.0 (Macintosh; Intel Mac OS X
                          10_10_2) AppleWebKit/537.36 (KHTML, like Gecko)
                          Chrome/41.0.2272.35 Safari/537.36
                        user_id: U45678
                        username: alice
                      - count: 1
                        country: US
                        date_first: 1422922493
                        date_last: 1422922493
                        ip: 127.0.0.1
                        isp: BigCo ISP
                        region: CA
                        user_agent: >-
                          SlackWeb Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_3 like
                          Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko)
                          Version/8.0 Mobile/12B466 Safari/600.1.4
                        user_id: U12345
                        username: white_rabbit
                    ok: true
                    paging:
                      count: 100
                      page: 1
                      pages: 1
                      total: 2
              schema:
                $ref: '#/components/schemas/TeamAccessLogsResponse'
        default:
          description: >-
            A workspace must be on a paid plan to use this method, otherwise the
            `paid_only` error is thrown:
          content:
            application/json:
              examples:
                response:
                  value:
                    error: paid_only
                    ok: false
              schema:
                $ref: '#/components/schemas/TeamAccessLogsdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.accessLogs
  /team.billableInfo:
    get:
      tags:
        - team
      operationId: team_billableInfo
      security:
        - slackAuth:
            - admin
      description: Gets billable users information for the current team.
      parameters:
        - description: 'Authentication token. Requires scope: `admin`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            A user to retrieve the billable information for. Defaults to all
            users.
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    billable_info:
                      U02UCPE1R:
                        billing_active: true
                      U02UEBSD2:
                        billing_active: true
                      U0632EWRW:
                        billing_active: false
                    ok: true
              schema:
                $ref: '#/components/schemas/TeamBillableInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/TeamBillableInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.billableInfo
  /team.info:
    get:
      tags:
        - team
      operationId: team_info
      security:
        - slackAuth:
            - team:read
      description: Gets information about the current team.
      parameters:
        - description: 'Authentication token. Requires scope: `team:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Team to get info on, if omitted, will return information about the
            current team. Will only return team that the authenticated token is
            allowed to see through external shared channels
          in: query
          name: team
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    team:
                      domain: example
                      email_domain: example.com
                      enterprise_id: E1234A12AB
                      enterprise_name: Umbrella Corporation
                      icon:
                        image_102: https://...
                        image_132: https://...
                        image_34: https://...
                        image_44: https://...
                        image_68: https://...
                        image_88: https://...
                        image_default: true
                      id: T12345
                      name: My Team
              schema:
                $ref: '#/components/schemas/TeamInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/TeamInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.info
  /team.integrationLogs:
    get:
      tags:
        - team
      operationId: team_integrationLogs
      security:
        - slackAuth:
            - admin
      description: Gets the integration logs for the current team.
      parameters:
        - description: 'Authentication token. Requires scope: `admin`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Filter logs to this Slack app. Defaults to all logs.
          in: query
          name: app_id
          schema:
            type: string
        - description: Filter logs with this change type. Defaults to all logs.
          in: query
          name: change_type
          schema:
            type: string
        - in: query
          name: count
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: string
        - description: Filter logs to this service. Defaults to all logs.
          in: query
          name: service_id
          schema:
            type: string
        - description: Filter logs generated by this user’s actions. Defaults to all logs.
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/TeamIntegrationLogsResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/TeamIntegrationLogsdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.integrationLogs
  /team.profile.get:
    get:
      tags:
        - team.profile
        - team
      operationId: Teamprofile_getProfile
      security:
        - slackAuth:
            - users.profile:read
      description: Retrieve a team's profile.
      parameters:
        - description: 'Authentication token. Requires scope: `users.profile:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Filter by visibility.
          in: query
          name: visibility
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    profile:
                      fields:
                        - hint: Enter the extension to reach your desk
                          id: Xf06054AAA
                          is_hidden: 1
                          label: Phone extension
                          options: null
                          ordering: 0
                          possible_values: null
                          type: text
                        - hint: When you were born
                          id: Xf06054BBB
                          label: Date of birth
                          options: null
                          ordering: 1
                          possible_values: null
                          type: date
                        - hint: Enter a link to your Facebook profile
                          id: Xf06054CCC
                          label: Facebook
                          options: null
                          ordering: 2
                          possible_values: null
                          type: link
                        - hint: Hogwarts, obviously
                          id: Xf06054DDD
                          label: House
                          options: null
                          ordering: 3
                          possible_values:
                            - Gryffindor
                            - Hufflepuff
                            - Ravenclaw
                            - Slytherin
                          type: options_list
                        - hint: Office location (LDAP)
                          id: Xf06054EEE
                          label: Location
                          options:
                            is_protected: 1
                          ordering: 4
                          possible_values: null
                          type: text
                        - hint: The boss
                          id: Xf06054FFF
                          label: Manager
                          options: null
                          ordering: 5
                          possible_values: null
                          type: user
              schema:
                $ref: '#/components/schemas/TeamprofileGetProfileResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/TeamprofileGetProfiledefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.profile.get
  /usergroups.create:
    post:
      tags:
        - usergroups
      operationId: usergroups_create
      security:
        - slackAuth:
            - usergroups:write
      description: Create a User Group
      parameters:
        - description: 'Authentication token. Requires scope: `usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsergroupsCreateRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsergroupsCreateResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsergroupsCreatedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.create
  /usergroups.disable:
    post:
      tags:
        - usergroups
      operationId: usergroups_disable
      security:
        - slackAuth:
            - usergroups:write
      description: Disable an existing User Group
      parameters:
        - description: 'Authentication token. Requires scope: `usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsergroupsDisableRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsergroupsDisableResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsergroupsDisabledefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.disable
  /usergroups.enable:
    post:
      tags:
        - usergroups
      operationId: usergroups_enable
      security:
        - slackAuth:
            - usergroups:write
      description: Enable a User Group
      parameters:
        - description: 'Authentication token. Requires scope: `usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsergroupsEnableRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsergroupsEnableResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsergroupsEnabledefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.enable
  /usergroups.list:
    get:
      tags:
        - usergroups
      operationId: usergroups_list
      security:
        - slackAuth:
            - usergroups:read
      description: List all User Groups for a team
      parameters:
        - description: Include the list of users for each User Group.
          in: query
          name: include_users
          schema:
            type: boolean
        - description: 'Authentication token. Requires scope: `usergroups:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Include the number of users in each User Group.
          in: query
          name: include_count
          schema:
            type: boolean
        - description: Include disabled User Groups.
          in: query
          name: include_disabled
          schema:
            type: boolean
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    usergroups:
                      - description: A group of all Administrators on your team.
                        auto_type: admin
                        created_by: USLACKBOT
                        date_create: 1446598059
                        date_delete: 0
                        date_update: 1446670362
                        deleted_by: null
                        handle: admins
                        id: S0614TZR7
                        is_external: false
                        is_usergroup: true
                        name: Team Admins
                        prefs:
                          channels: []
                          groups: []
                        team_id: T060RNRCH
                        updated_by: U060RNRCZ
                        user_count: '2'
                      - description: A group of all Owners on your team.
                        auto_type: owner
                        created_by: USLACKBOT
                        date_create: 1446678371
                        date_delete: 0
                        date_update: 1446678371
                        deleted_by: null
                        handle: owners
                        id: S06158AV7
                        is_external: false
                        is_usergroup: true
                        name: Team Owners
                        prefs:
                          channels: []
                          groups: []
                        team_id: T060RNRCH
                        updated_by: USLACKBOT
                        user_count: '1'
                      - description: Marketing gurus, PR experts and product advocates.
                        auto_type: null
                        created_by: U060RNRCZ
                        date_create: 1446746793
                        date_delete: 1446748865
                        date_update: 1446747767
                        deleted_by: null
                        handle: marketing-team
                        id: S0615G0KT
                        is_external: false
                        is_usergroup: true
                        name: Marketing Team
                        prefs:
                          channels: []
                          groups: []
                        team_id: T060RNRCH
                        updated_by: U060RNRCZ
                        user_count: '0'
              schema:
                $ref: '#/components/schemas/UsergroupsListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsergroupsListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.list
  /usergroups.update:
    post:
      tags:
        - usergroups
      operationId: usergroups_update
      security:
        - slackAuth:
            - usergroups:write
      description: Update an existing User Group
      parameters:
        - description: 'Authentication token. Requires scope: `usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsergroupsUpdateRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    usergroup:
                      description: Marketing gurus, PR experts and product advocates.
                      auto_type: null
                      created_by: U060R4BJ4
                      date_create: 1447096577
                      date_delete: 0
                      date_update: 1447102109
                      deleted_by: null
                      handle: marketing-team
                      id: S0616NG6M
                      is_external: false
                      is_usergroup: true
                      name: Marketing Team
                      prefs:
                        channels: []
                        groups: []
                      team_id: T060R4BHN
                      updated_by: U060R4BJ4
                      user_count: 1
                      users:
                        - U060R4BJ4
                        - U060RNRCZ
              schema:
                $ref: '#/components/schemas/UsergroupsUpdateResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsergroupsUpdatedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.update
  /usergroups.users.list:
    get:
      tags:
        - usergroups.users
        - usergroups
      operationId: Usergroupsusers_listAllUsers
      security:
        - slackAuth:
            - usergroups:read
      description: List all users in a User Group
      parameters:
        - description: 'Authentication token. Requires scope: `usergroups:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Allow results that involve disabled User Groups.
          in: query
          name: include_disabled
          schema:
            type: boolean
        - description: The encoded ID of the User Group to update.
          in: query
          name: usergroup
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Standard success response when used with a user token
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    users:
                      - U060R4BJ4
                      - W123A4BC5
              schema:
                $ref: '#/components/schemas/UsergroupsusersListAllUsersResponse'
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: >-
                  #/components/schemas/UsergroupsusersListAllUsersdefaultResponse
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.users.list
  /usergroups.users.update:
    post:
      tags:
        - usergroups.users
        - usergroups
      operationId: Usergroupsusers_updateList
      security:
        - slackAuth:
            - usergroups:write
      description: Update the list of users for a User Group
      parameters:
        - description: 'Authentication token. Requires scope: `usergroups:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsergroupsusersUpdateListRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    usergroup:
                      description: Marketing gurus, PR experts and product advocates.
                      auto_type: null
                      created_by: U060R4BJ4
                      date_create: 1447096577
                      date_delete: 0
                      date_update: 1447102109
                      deleted_by: null
                      handle: marketing-team
                      id: S0616NG6MX
                      is_external: false
                      is_usergroup: true
                      name: Marketing Team
                      prefs:
                        channels: []
                        groups: []
                      team_id: T060R4BHN
                      updated_by: U060R4BJ4
                      user_count: 1
                      users:
                        - U060R4BJ4
                        - U060RNRCZ
              schema:
                $ref: '#/components/schemas/UsergroupsusersUpdateListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsergroupsusersUpdateListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.users.update
  /users.conversations:
    get:
      tags:
        - users
      operationId: users_conversations
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
      description: List conversations the calling user may access.
      parameters:
        - description: 'Authentication token. Requires scope: `conversations:read`'
          in: query
          name: token
          schema:
            type: string
        - description: >-
            Browse conversations by a specific user ID's membership. Non-public
            channels are restricted to those where the calling user shares
            membership.
          in: query
          name: user
          schema:
            type: string
        - description: >-
            Mix and match channel types by providing a comma-separated list of
            any combination of `public_channel`, `private_channel`, `mpim`, `im`
          in: query
          name: types
          schema:
            type: string
        - description: Set to `true` to exclude archived channels from the list
          in: query
          name: exclude_archived
          schema:
            type: boolean
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't
            been reached. Must be an integer no larger than 1000.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: >-
            Typical success response with only public channels. Note how
            `num_members` and `is_member` are not returned like typical
            `conversations` objects.
          content:
            application/json:
              examples:
                response:
                  value:
                    channels:
                      - created: 1449252889
                        creator: U012A3CDE
                        id: C012AB3CDX
                        is_archived: false
                        is_channel: true
                        is_ext_shared: false
                        is_general: true
                        is_group: false
                        is_im: false
                        is_mpim: false
                        is_org_shared: false
                        is_pending_ext_shared: false
                        is_private: false
                        is_shared: false
                        name: general
                        name_normalized: general
                        pending_shared: []
                        previous_names: []
                        purpose:
                          creator: ''
                          last_set: 0
                          value: >-
                            This channel is for team-wide communication and
                            announcements. All team members are in this channel.
                        topic:
                          creator: ''
                          last_set: 0
                          value: Company-wide announcements and work-based matters
                        unlinked: 0
                      - created: 1449252889
                        creator: U061F7AUR
                        id: C061EG9T2X
                        is_archived: false
                        is_channel: true
                        is_ext_shared: false
                        is_general: false
                        is_group: false
                        is_im: false
                        is_mpim: false
                        is_org_shared: false
                        is_pending_ext_shared: false
                        is_private: false
                        is_shared: false
                        name: random
                        name_normalized: random
                        pending_shared: []
                        previous_names: []
                        purpose:
                          creator: ''
                          last_set: 0
                          value: >-
                            A place for non-work-related flimflam, faffing,
                            hodge-podge or jibber-jabber you'd prefer to keep
                            out of more focused work-related channels.
                        topic:
                          creator: ''
                          last_set: 0
                          value: Non-work banter and water cooler conversation
                        unlinked: 0
                    ok: true
                    response_metadata:
                      next_cursor: dGVhbTpDMDYxRkE1UEI=
              schema:
                $ref: '#/components/schemas/UsersConversationsResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersConversationsdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.conversations
  /users.deletePhoto:
    post:
      tags:
        - users
      operationId: users_deletePhoto
      security:
        - slackAuth:
            - users.profile:write
      description: Delete the user profile photo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersDeletePhotoRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsersDeletePhotoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersDeletePhotodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.deletePhoto
  /users.getPresence:
    get:
      tags:
        - users
      operationId: users_getPresence
      security:
        - slackAuth:
            - users:read
      description: Gets user presence information.
      parameters:
        - description: 'Authentication token. Requires scope: `users:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: User to get presence info on. Defaults to the authed user.
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: >-
            When requesting information for a different user, this method just
            returns the current presence (either `active` or `away`).
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    presence: active
              schema:
                $ref: '#/components/schemas/UsersGetPresenceResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersGetPresencedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.getPresence
  /users.identity:
    get:
      tags:
        - users
      operationId: users_identity
      security:
        - slackAuth:
            - identity.basic
      description: Get a user's identity.
      parameters:
        - description: 'Authentication token. Requires scope: `identity.basic`'
          in: query
          name: token
          schema:
            type: string
      responses:
        '200':
          description: 'You will receive at a minimum the following information:'
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    team:
                      id: T0G9PQBBK
                    user:
                      id: U0G9QF9C6
                      name: Sonny Whether
              schema:
                $ref: '#/components/schemas/UsersIdentityResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: account_inactive
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersIdentitydefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.identity
  /users.info:
    get:
      tags:
        - users
      operationId: users_info
      security:
        - slackAuth:
            - users:read
      description: Gets information about a user.
      parameters:
        - description: 'Authentication token. Requires scope: `users:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: >-
            Set this to `true` to receive the locale for this user. Defaults to
            `false`
          in: query
          name: include_locale
          schema:
            type: boolean
        - description: User to get info on
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    user:
                      color: 9f69e7
                      deleted: false
                      has_2fa: false
                      id: W012A3CDE
                      is_admin: true
                      is_app_user: false
                      is_bot: false
                      is_owner: false
                      is_primary_owner: false
                      is_restricted: false
                      is_ultra_restricted: false
                      name: spengler
                      profile:
                        avatar_hash: ge3b51ca72de
                        display_name: spengler
                        display_name_normalized: spengler
                        email: spengler@ghostbusters.example.com
                        image_192: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_24: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_32: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_48: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_512: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_72: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_original: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        real_name: Egon Spengler
                        real_name_normalized: Egon Spengler
                        status_emoji: ':books:'
                        status_text: Print is dead
                        team: T012AB3C4
                      real_name: Egon Spengler
                      team_id: T012AB3C4
                      tz: America/Los_Angeles
                      tz_label: Pacific Daylight Time
                      tz_offset: -25200
                      updated: 1502138686
              schema:
                $ref: '#/components/schemas/UsersInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: user_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.info
  /users.list:
    get:
      tags:
        - users
      operationId: users_list
      security:
        - slackAuth:
            - users:read
      description: Lists all users in a Slack team.
      parameters:
        - description: 'Authentication token. Requires scope: `users:read`'
          in: query
          name: token
          schema:
            type: string
        - description: >-
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list
            hasn't been reached. Providing no `limit` value will result in Slack
            attempting to deliver you the entire result set. If the collection
            is too large you may experience `limit_required` or HTTP 500 errors.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous
            request's `response_metadata`. Default value fetches the first
            "page" of the collection. See [pagination](https://slack.dev) for
            more detail.
          in: query
          name: cursor
          schema:
            type: string
        - description: >-
            Set this to `true` to receive the locale for users. Defaults to
            `false`
          in: query
          name: include_locale
          schema:
            type: boolean
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    cache_ts: 1498777272
                    members:
                      - color: 9f69e7
                        deleted: false
                        has_2fa: false
                        id: W012A3CDEX
                        is_admin: true
                        is_app_user: false
                        is_bot: false
                        is_owner: false
                        is_primary_owner: false
                        is_restricted: false
                        is_ultra_restricted: false
                        name: spengler
                        profile:
                          avatar_hash: ge3b51ca72de
                          display_name: spengler
                          display_name_normalized: spengler
                          email: spengler@ghostbusters.example.com
                          image_192: >-
                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                          image_24: >-
                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                          image_32: >-
                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                          image_48: >-
                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                          image_512: >-
                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                          image_72: >-
                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                          real_name: Egon Spengler
                          real_name_normalized: Egon Spengler
                          status_emoji: ':books:'
                          status_text: Print is dead
                          team: T012AB3C4
                        real_name: spengler
                        team_id: T012AB3C4
                        tz: America/Los_Angeles
                        tz_label: Pacific Daylight Time
                        tz_offset: -25200
                        updated: 1502138686
                      - color: 9f69e7
                        deleted: false
                        has_2fa: false
                        id: W07QCRPA4
                        is_admin: true
                        is_bot: false
                        is_owner: false
                        is_primary_owner: false
                        is_restricted: false
                        is_ultra_restricted: false
                        name: glinda
                        profile:
                          title: Glinda the Good
                          avatar_hash: 8fbdd10b41c6
                          display_name: Glinda the Fairly Good
                          display_name_normalized: Glinda the Fairly Good
                          email: glenda@south.oz.coven
                          first_name: Glinda
                          image_1024: https://a.slack-edge.com...png
                          image_192: https://a.slack-edge.com...png
                          image_24: https://a.slack-edge.com...png
                          image_32: https://a.slack-edge.com...png
                          image_48: https://a.slack-edge.com...png
                          image_512: https://a.slack-edge.com...png
                          image_72: https://a.slack-edge.com...png
                          image_original: https://a.slack-edge.com...png
                          last_name: Southgood
                          phone: ''
                          real_name: Glinda Southgood
                          real_name_normalized: Glinda Southgood
                          skype: ''
                        real_name: Glinda Southgood
                        team_id: T0G9PQBBK
                        tz: America/Los_Angeles
                        tz_label: Pacific Daylight Time
                        tz_offset: -25200
                        updated: 1480527098
                    ok: true
                    response_metadata:
                      next_cursor: dXNlcjpVMEc5V0ZYTlo=
              schema:
                $ref: '#/components/schemas/UsersListResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_cursor
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersListdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.list
  /users.lookupByEmail:
    get:
      tags:
        - users
      operationId: users_lookupByEmail
      security:
        - slackAuth:
            - users:read.email
      description: Find a user with an email address.
      parameters:
        - description: 'Authentication token. Requires scope: `users:read.email`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: An email address belonging to a user in the workspace
          in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    user:
                      color: 9f69e7
                      deleted: false
                      has_2fa: false
                      id: W012A3CDEX
                      is_admin: true
                      is_app_user: false
                      is_bot: false
                      is_owner: false
                      is_primary_owner: false
                      is_restricted: false
                      is_ultra_restricted: false
                      name: spengler
                      profile:
                        avatar_hash: ge3b51ca72de
                        display_name: spengler
                        display_name_normalized: spengler
                        email: spengler@ghostbusters.example.com
                        image_192: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_24: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_32: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_48: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_512: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        image_72: >-
                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                        real_name: Egon Spengler
                        real_name_normalized: Egon Spengler
                        status_emoji: ':books:'
                        status_text: Print is dead
                        team: T012AB3C4
                      real_name: Egon Spengler
                      team_id: T012AB3C4
                      tz: America/Los_Angeles
                      tz_label: Pacific Daylight Time
                      tz_offset: -25200
                      updated: 1502138686
              schema:
                $ref: '#/components/schemas/UsersLookupByEmailResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: users_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersLookupByEmaildefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.lookupByEmail
  /users.profile.get:
    get:
      tags:
        - users.profile
        - users
      operationId: Usersprofile_getProfileInfo
      security:
        - slackAuth:
            - users.profile:read
      description: Retrieves a user's profile information.
      parameters:
        - description: 'Authentication token. Requires scope: `users.profile:read`'
          in: query
          name: token
          required: true
          schema:
            type: string
        - description: Include labels for each ID in custom profile fields
          in: query
          name: include_labels
          schema:
            type: boolean
        - description: User to retrieve profile info for
          in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    profile:
                      avatar_hash: ge3b51ca72de
                      display_name: spengler
                      display_name_normalized: spengler
                      email: spengler@ghostbusters.example.com
                      image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_original: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      real_name: Egon Spengler
                      real_name_normalized: Egon Spengler
                      status_emoji: ':books:'
                      status_expiration: 0
                      status_text: Print is dead
                      team: T012AB3C4
              schema:
                $ref: '#/components/schemas/UsersprofileGetProfileInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: user_not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersprofileGetProfileInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.get
  /users.profile.set:
    post:
      tags:
        - users.profile
        - users
      operationId: Usersprofile_setProfileInfo
      security:
        - slackAuth:
            - users.profile:write
      description: Set the profile information for a user.
      parameters:
        - description: 'Authentication token. Requires scope: `users.profile:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersprofileSetProfileInfoRequest'
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    profile:
                      avatar_hash: ge3b51ca72de
                      display_name: spengler
                      display_name_normalized: spengler
                      email: spengler@ghostbusters.example.com
                      image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                      real_name: Egon Spengler
                      real_name_normalized: Egon Spengler
                      status_emoji: ':books:'
                      status_expiration: 0
                      status_text: Print is dead
                      team: T012AB3C4
              schema:
                $ref: '#/components/schemas/UsersprofileSetProfileInfoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_profile
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersprofileSetProfileInfodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.set
  /users.setActive:
    post:
      tags:
        - users
      operationId: users_setActive
      security:
        - slackAuth:
            - users:write
      description: Marked a user as active. Deprecated and non-functional.
      parameters:
        - description: 'Authentication token. Requires scope: `users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsersSetActiveResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersSetActivedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setActive
  /users.setPhoto:
    post:
      tags:
        - users
      operationId: users_setPhoto
      security:
        - slackAuth:
            - users.profile:write
      description: Set the user profile photo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersSetPhotoRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsersSetPhotoResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersSetPhotodefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPhoto
  /users.setPresence:
    post:
      tags:
        - users
      operationId: users_setPresence
      security:
        - slackAuth:
            - users:write
      description: Manually sets user presence.
      parameters:
        - description: 'Authentication token. Requires scope: `users:write`'
          in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersSetPresenceRequest'
        required: true
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/UsersSetPresenceResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/UsersSetPresencedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPresence
  /views.open:
    get:
      tags:
        - views
      operationId: views_open
      security:
        - slackAuth:
            - none
      description: Open a view for a user.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: Exchange a trigger to post to the user.
          in: query
          name: trigger_id
          required: true
          schema:
            type: string
        - description: >-
            A [view payload](https://slack.dev). This must be a JSON-encoded
            string.
          in: query
          name: view
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response includes the opened view payload.
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    view:
                      title:
                        text: Quite a plain modal
                        type: plain_text
                      app_id: AA4928AQ
                      blocks:
                        - block_id: a_block_id
                          element:
                            action_id: an_action_id
                            type: plain_text_input
                          label:
                            emoji: true
                            text: A simple label
                            type: plain_text
                          optional: false
                          type: input
                      bot_id: BA13894H
                      callback_id: identify_your_modals
                      clear_on_close: false
                      external_id: ''
                      hash: '156772938.1827394'
                      id: VMHU10V25
                      notify_on_close: false
                      private_metadata: Shh it is a secret
                      root_view_id: VMHU10V25
                      state:
                        values: {}
                      submit:
                        text: Create
                        type: plain_text
                      team_id: T8N4K1JN
                      type: modal
              schema:
                $ref: '#/components/schemas/ViewsOpenResponse'
        default:
          description: >-
            Typical error response, before getting to any possible validation
            errors.
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_arguments
                    ok: false
                    response_metadata:
                      messages:
                        - invalid `trigger_id`
              schema:
                $ref: '#/components/schemas/ViewsOpendefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.open
  /views.publish:
    get:
      tags:
        - views
      operationId: views_publish
      security:
        - slackAuth:
            - none
      description: Publish a static view for a User.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: '`id` of the user you want publish a view to.'
          in: query
          name: user_id
          required: true
          schema:
            type: string
        - description: >-
            A [view payload](https://slack.dev). This must be a JSON-encoded
            string.
          in: query
          name: view
          required: true
          schema:
            type: string
        - description: >-
            A string that represents view state to protect against possible race
            conditions.
          in: query
          name: hash
          schema:
            type: string
      responses:
        '200':
          description: Typical success response includes the published view payload.
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    view:
                      app_id: AA4928AQ
                      blocks:
                        - block_id: 2WGp9
                          text:
                            text: A simple section with some sample sentence.
                            type: mrkdwn
                            verbatim: false
                          type: section
                      bot_id: BA13894H
                      callback_id: identify_your_home_tab
                      clear_on_close: false
                      close: null
                      external_id: ''
                      hash: '156772938.1827394'
                      id: VMHU10V25X
                      notify_on_close: false
                      previous_view_id: null
                      private_metadata: Shh it is a secret
                      root_view_id: VMHU10V25
                      state:
                        values: {}
                      submit: null
                      team_id: T8N4K1JN
                      type: home
              schema:
                $ref: '#/components/schemas/ViewsPublishResponse'
        default:
          description: >-
            Typical error response, before getting to any possible validation
            errors.
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_arguments
                    ok: false
                    response_metadata:
                      messages:
                        - invalid `user_id`
              schema:
                $ref: '#/components/schemas/ViewsPublishdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.publish
  /views.push:
    get:
      tags:
        - views
      operationId: views_push
      security:
        - slackAuth:
            - none
      description: Push a view onto the stack of a root view.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: Exchange a trigger to post to the user.
          in: query
          name: trigger_id
          required: true
          schema:
            type: string
        - description: >-
            A [view payload](https://slack.dev). This must be a JSON-encoded
            string.
          in: query
          name: view
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response includes the pushed view payload.
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    view:
                      title:
                        emoji: true
                        text: Pushed Modal
                        type: plain_text
                      app_id: AAD3351BQ
                      blocks:
                        - block_id: edit_details
                          element:
                            action_id: detail_input
                            type: plain_text_input
                          label:
                            text: Edit details
                            type: plain_text
                          type: input
                      bot_id: BADF7A34H
                      callback_id: view_4
                      clear_on_close: true
                      close:
                        emoji: true
                        text: Back
                        type: plain_text
                      external_id: ''
                      hash: 1569362015.55b5e41b
                      id: VNM522E2U
                      notify_on_close: false
                      previous_view_id: null
                      private_metadata: ''
                      root_view_id: VNN729E3U
                      state:
                        values: {}
                      submit:
                        emoji: true
                        text: Save
                        type: plain_text
                      team_id: T9M4RL1JM
                      type: modal
              schema:
                $ref: '#/components/schemas/ViewsPushResponse'
        default:
          description: Typical error response.
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_arguments
                    ok: false
                    response_metadata:
                      messages:
                        - 'missing required field: title'
              schema:
                $ref: '#/components/schemas/ViewsPushdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.push
  /views.update:
    get:
      tags:
        - views
      operationId: views_update
      security:
        - slackAuth:
            - none
      description: Update an existing view.
      parameters:
        - description: 'Authentication token. Requires scope: `none`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: >-
            A unique identifier of the view to be updated. Either `view_id` or
            `external_id` is required.
          in: query
          name: view_id
          schema:
            type: string
        - description: >-
            A unique identifier of the view set by the developer. Must be unique
            for all views on a team. Max length of 255 characters. Either
            `view_id` or `external_id` is required.
          in: query
          name: external_id
          schema:
            type: string
        - description: >-
            A [view object](https://slack.dev). This must be a JSON-encoded
            string.
          in: query
          name: view
          schema:
            type: string
        - description: >-
            A string that represents view state to protect against possible race
            conditions.
          in: query
          name: hash
          schema:
            type: string
      responses:
        '200':
          description: Typical success response includes the updated view payload.
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
                    view:
                      title:
                        emoji: true
                        text: Updated Modal
                        type: plain_text
                      app_id: AAD3351BQ
                      blocks:
                        - accessory:
                            action_id: button_4
                            text:
                              text: Click me
                              type: plain_text
                            type: button
                          block_id: s_block
                          text:
                            emoji: true
                            text: I am but an updated modal
                            type: plain_text
                          type: section
                      bot_id: BADF7A34H
                      callback_id: view_2
                      clear_on_close: true
                      close:
                        emoji: true
                        text: Close
                        type: plain_text
                      external_id: ''
                      hash: 1569262015.55b5e41b
                      id: VNM522E2UX
                      notify_on_close: false
                      previous_view_id: null
                      private_metadata: ''
                      root_view_id: VNN729E3U
                      state:
                        values: {}
                      submit: null
                      team_id: T9M4RL1JM
                      type: modal
              schema:
                $ref: '#/components/schemas/ViewsUpdateResponse'
        default:
          description: Typical error response.
          content:
            application/json:
              examples:
                response:
                  value:
                    error: not_found
                    ok: false
              schema:
                $ref: '#/components/schemas/ViewsUpdatedefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.update
  /workflows.stepCompleted:
    get:
      tags:
        - workflows
      operationId: workflows_stepCompleted
      security:
        - slackAuth:
            - workflow.steps:execute
      description: Indicate that an app's step in a workflow completed execution.
      parameters:
        - description: 'Authentication token. Requires scope: `workflow.steps:execute`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: Context identifier that maps to the correct workflow step execution.
          in: query
          name: workflow_step_execute_id
          required: true
          schema:
            type: string
        - description: >-
            Key-value object of outputs from your step. Keys of this object
            reflect the configured `key` properties of your
            [`outputs`](https://slack.dev) array from your `workflow_step`
            object.
          in: query
          name: outputs
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/WorkflowsStepCompletedResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/WorkflowsStepCompleteddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/workflows.stepCompleted
  /workflows.stepFailed:
    get:
      tags:
        - workflows
      operationId: workflows_stepFailed
      security:
        - slackAuth:
            - workflow.steps:execute
      description: Indicate that an app's step in a workflow failed to execute.
      parameters:
        - description: 'Authentication token. Requires scope: `workflow.steps:execute`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: Context identifier that maps to the correct workflow step execution.
          in: query
          name: workflow_step_execute_id
          required: true
          schema:
            type: string
        - description: >-
            A JSON-based object with a `message` property that should contain a
            human readable error message.
          in: query
          name: error
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/WorkflowsStepFailedResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/WorkflowsStepFaileddefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/workflows.stepFailed
  /workflows.updateStep:
    get:
      tags:
        - workflows
      operationId: workflows_updateStep
      security:
        - slackAuth:
            - workflow.steps:execute
      description: Update the configuration for a workflow extension step.
      parameters:
        - description: 'Authentication token. Requires scope: `workflow.steps:execute`'
          in: header
          name: token
          required: true
          schema:
            type: string
        - description: >-
            A context identifier provided with `view_submission` payloads used
            to call back to `workflows.updateStep`.
          in: query
          name: workflow_step_edit_id
          required: true
          schema:
            type: string
        - description: >-
            A JSON key-value map of inputs required from a user during
            configuration. This is the data your app expects to receive when the
            workflow step starts. **Please note**: the embedded variable format
            is set and replaced by the workflow system. You cannot create custom
            variables that will be replaced at runtime. [Read more about
            variables in workflow steps here](https://slack.dev).
          in: query
          name: inputs
          schema:
            type: string
        - description: >-
            An JSON array of output objects used during step execution. This is
            the data your app agrees to provide when your workflow step was
            executed.
          in: query
          name: outputs
          schema:
            type: string
        - description: >-
            An optional field that can be used to override the step name that is
            shown in the Workflow Builder.
          in: query
          name: step_name
          schema:
            type: string
        - description: >-
            An optional field that can be used to override app image that is
            shown in the Workflow Builder.
          in: query
          name: step_image_url
          schema:
            type: string
      responses:
        '200':
          description: Typical success response
          content:
            application/json:
              examples:
                response:
                  value:
                    ok: true
              schema:
                $ref: '#/components/schemas/WorkflowsUpdateStepResponse'
        default:
          description: Typical error response
          content:
            application/json:
              examples:
                response:
                  value:
                    error: invalid_auth
                    ok: false
              schema:
                $ref: '#/components/schemas/WorkflowsUpdateStepdefaultResponse'
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/workflows.updateStep
components:
  requestBodies:
    admin_inviteRequests_approve:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AdmininviteRequestsApproveRequestRequest'
  schemas:
    blocks:
      title: Block Kit blocks
      description: >-
        This is a very loose definition, in the future, we'll populate this with
        deeper schema in this definition namespace.
      items:
        additionalProperties: true
        properties:
          type:
            type: string
        required:
          - type
        type: object
      type: array
    defs_app_id:
      title: App ID
      pattern: ^A[A-Z0-9]{1,}$
      type: string
    defs_bot_id:
      title: Bot User ID
      pattern: ^B[A-Z0-9]{8,}$
      type: string
    defs_channel:
      title: Channel-like conversation ID
      pattern: ^[CGD][A-Z0-9]{8,}$
      type: string
    defs_channel_id:
      title: Channel ID
      pattern: ^[C][A-Z0-9]{2,}$
      type: string
    defs_channel_name:
      title: Name of a channel
      type: string
    defs_comment_id:
      title: File Comment ID
      pattern: ^Fc[A-Z0-9]{8,}$
      type: string
    defs_dm_id:
      title: Direct Message Channel ID
      pattern: ^[D][A-Z0-9]{8,}$
      type: string
    defs_enterprise_id:
      title: Enterprise ID
      pattern: ^[E][A-Z0-9]{8,}$
      type: string
    defs_enterprise_name:
      title: Name of the enterprise org
      type: string
    defs_enterprise_user_id:
      title: Enterprise User ID
      pattern: ^[WU][A-Z0-9]{8,}$
      type: string
    defs_file_id:
      title: File ID
      pattern: ^[F][A-Z0-9]{8,}$
      type: string
    defs_group_id:
      title: Private Channel ID
      pattern: ^[G][A-Z0-9]{8,}$
      type: string
    defs_ok_false:
      title: default failure response
      enum:
        - false
      type: boolean
    defs_ok_true:
      title: default success response
      enum:
        - true
      type: boolean
    defs_optional_app_id:
      title: App ID or empty string
      pattern: ^(A[A-Z0-9]{1,})?$
      type: string
    defs_pinned_info:
      title: Info for a pinned item
      type: object
    defs_reminder_id:
      title: Reminder ID
      pattern: ^Rm[A-Z0-9]{8,}$
      type: string
    defs_subteam_id:
      title: Subteam ID
      pattern: ^S[A-Z0-9]{2,}$
      type: string
    defs_team:
      title: Team ID
      pattern: ^[T][A-Z0-9]{2,}$
      type: string
    defs_topic_purpose_creator:
      title: User ID or empty string, used for topic and purpose creation
      pattern: ^[UW][A-Z0-9]{8,}$|^$
      type: string
    defs_ts:
      title: Timestamp in format 0123456789.012345
      pattern: ^\d{10}\.\d{6}$
      type: string
    defs_user_id:
      title: User ID
      pattern: ^[UW][A-Z0-9]{2,}$
      type: string
    defs_workspace_id:
      title: Team or Enterprise ID
      pattern: ^[TE][A-Z0-9]{8,}$
      type: string
    objs_bot_profile:
      title: Bot Profile Object
      properties:
        app_id:
          $ref: '#/components/schemas/defs_app_id'
        deleted:
          type: boolean
        icons:
          properties:
            image_36:
              format: uri
              type: string
            image_48:
              format: uri
              type: string
            image_72:
              format: uri
              type: string
          required:
            - image_36
            - image_48
            - image_72
          type: object
        id:
          $ref: '#/components/schemas/defs_bot_id'
        name:
          type: string
        team_id:
          $ref: '#/components/schemas/defs_team'
        updated:
          type: integer
      required:
        - id
        - deleted
        - name
        - updated
        - app_id
        - icons
        - team_id
      type: object
    objs_channel:
      title: Channel Object
      properties:
        accepted_user:
          $ref: '#/components/schemas/defs_user_id'
        created:
          type: integer
        creator:
          $ref: '#/components/schemas/defs_user_id'
        id:
          $ref: '#/components/schemas/defs_channel_id'
        is_archived:
          type: boolean
        is_channel:
          type: boolean
        is_frozen:
          type: boolean
        is_general:
          type: boolean
        is_member:
          type: boolean
        is_moved:
          type: integer
        is_mpim:
          type: boolean
        is_non_threadable:
          type: boolean
        is_org_shared:
          type: boolean
        is_pending_ext_shared:
          type: boolean
        is_private:
          type: boolean
        is_read_only:
          type: boolean
        is_shared:
          type: boolean
        is_thread_only:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        latest:
          items:
            anyOf:
              - $ref: '#/components/schemas/objs_message'
              - nullable: true
        members:
          items:
            $ref: '#/components/schemas/defs_user_id'
          minItems: 0
          type: array
          uniqueItems: true
        name:
          type: string
        name_normalized:
          type: string
        num_members:
          type: integer
        pending_shared:
          items:
            $ref: '#/components/schemas/defs_team'
          minItems: 0
          type: array
          uniqueItems: true
        previous_names:
          items:
            $ref: '#/components/schemas/defs_channel_name'
          minItems: 0
          type: array
          uniqueItems: true
        priority:
          type: number
        purpose:
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
          required:
            - value
            - creator
            - last_set
          type: object
        topic:
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
          required:
            - value
            - creator
            - last_set
          type: object
        unlinked:
          title: >-
            Field to determine whether a channel has ever been
            shared/disconnected in the past
          type: integer
        unread_count:
          type: integer
        unread_count_display:
          type: integer
      required:
        - id
        - name
        - created
        - creator
        - is_channel
        - is_org_shared
        - is_private
        - is_mpim
        - is_shared
        - name_normalized
        - members
        - topic
        - purpose
      type: object
    objs_comment:
      title: File Comment Object
      properties:
        comment:
          type: string
        created:
          type: integer
        id:
          $ref: '#/components/schemas/defs_comment_id'
        is_intro:
          type: boolean
        is_starred:
          type: boolean
        num_stars:
          type: integer
        pinned_info:
          $ref: '#/components/schemas/defs_pinned_info'
        pinned_to:
          items:
            $ref: '#/components/schemas/defs_channel'
          type: array
        reactions:
          items:
            $ref: '#/components/schemas/objs_reaction'
          type: array
        timestamp:
          type: integer
        user:
          $ref: '#/components/schemas/defs_user_id'
      required:
        - id
        - created
        - timestamp
        - user
        - is_intro
        - comment
      type: object
    objs_comments:
      title: file comments object
      items: {}
      type: array
    objs_conversation:
      items:
        anyOf:
          - title: Conversation object
            properties:
              version:
                type: integer
              accepted_user:
                $ref: '#/components/schemas/defs_user_id'
              connected_team_ids:
                items:
                  $ref: '#/components/schemas/defs_workspace_id'
                minItems: 0
                type: array
                uniqueItems: true
              conversation_host_id:
                $ref: '#/components/schemas/defs_workspace_id'
              created:
                type: integer
              creator:
                $ref: '#/components/schemas/defs_user_id'
              display_counts:
                properties:
                  display_counts:
                    type: integer
                  guest_counts:
                    type: integer
                required:
                  - display_counts
                  - guest_counts
                type: object
              enterprise_id:
                $ref: '#/components/schemas/defs_enterprise_id'
              has_pins:
                type: boolean
              id:
                $ref: '#/components/schemas/defs_channel'
              internal_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              is_archived:
                type: boolean
              is_channel:
                type: boolean
              is_ext_shared:
                type: boolean
              is_frozen:
                type: boolean
              is_general:
                type: boolean
              is_global_shared:
                type: boolean
              is_group:
                type: boolean
              is_im:
                type: boolean
              is_member:
                type: boolean
              is_moved:
                type: integer
              is_mpim:
                enum:
                  - false
                type: boolean
              is_non_threadable:
                type: boolean
              is_open:
                type: boolean
              is_org_default:
                type: boolean
              is_org_mandatory:
                type: boolean
              is_org_shared:
                type: boolean
              is_pending_ext_shared:
                type: boolean
              is_private:
                type: boolean
              is_read_only:
                type: boolean
              is_shared:
                type: boolean
              is_starred:
                type: boolean
              is_thread_only:
                type: boolean
              last_read:
                $ref: '#/components/schemas/defs_ts'
              latest:
                items:
                  anyOf:
                    - $ref: '#/components/schemas/objs_message'
                    - nullable: true
              members:
                items:
                  $ref: '#/components/schemas/defs_user_id'
                minItems: 0
                type: array
                uniqueItems: true
              name:
                type: string
              name_normalized:
                type: string
              num_members:
                type: integer
              parent_conversation:
                items:
                  anyOf:
                    - $ref: '#/components/schemas/defs_channel'
                    - nullable: true
              pending_connected_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              pending_shared:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              pin_count:
                type: integer
              previous_names:
                items:
                  $ref: '#/components/schemas/defs_channel_name'
                minItems: 0
                type: array
                uniqueItems: true
              priority:
                type: number
              purpose:
                properties:
                  creator:
                    $ref: '#/components/schemas/defs_topic_purpose_creator'
                  last_set:
                    type: integer
                  value:
                    type: string
                required:
                  - value
                  - creator
                  - last_set
                type: object
              shared_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              shares:
                items:
                  properties:
                    accepted_user:
                      $ref: '#/components/schemas/defs_user_id'
                    is_active:
                      type: boolean
                    team:
                      $ref: '#/components/schemas/objs_team'
                    user:
                      $ref: '#/components/schemas/defs_user_id'
                  required:
                    - team
                    - user
                    - is_active
                  type: object
                minItems: 0
                type: array
                uniqueItems: true
              timezone_count:
                type: integer
              topic:
                properties:
                  creator:
                    $ref: '#/components/schemas/defs_topic_purpose_creator'
                  last_set:
                    type: integer
                  value:
                    type: string
                required:
                  - value
                  - creator
                  - last_set
                type: object
              unlinked:
                title: >-
                  Field to determine whether a channel has ever been
                  shared/disconnected in the past
                type: integer
              unread_count:
                type: integer
              unread_count_display:
                type: integer
              use_case:
                type: string
              user:
                $ref: '#/components/schemas/defs_user_id'
            required:
              - id
              - name
              - created
              - creator
              - is_archived
              - is_channel
              - is_general
              - is_mpim
              - is_group
              - is_org_shared
              - is_im
              - is_shared
              - is_private
              - name_normalized
              - topic
              - purpose
            type: object
          - title: Conversation MPIM Object
            properties:
              version:
                type: integer
              accepted_user:
                $ref: '#/components/schemas/defs_user_id'
              connected_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              conversation_host_id:
                $ref: '#/components/schemas/defs_workspace_id'
              created:
                type: integer
              creator:
                $ref: '#/components/schemas/defs_user_id'
              display_counts:
                properties:
                  display_counts:
                    type: integer
                  guest_counts:
                    type: integer
                required:
                  - display_counts
                  - guest_counts
                type: object
              id:
                $ref: '#/components/schemas/defs_channel'
              internal_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              is_archived:
                type: boolean
              is_channel:
                type: boolean
              is_ext_shared:
                type: boolean
              is_frozen:
                type: boolean
              is_general:
                type: boolean
              is_group:
                type: boolean
              is_im:
                type: boolean
              is_member:
                type: boolean
              is_moved:
                type: integer
              is_mpim:
                enum:
                  - true
                type: boolean
              is_non_threadable:
                type: boolean
              is_open:
                type: boolean
              is_org_shared:
                type: boolean
              is_pending_ext_shared:
                type: boolean
              is_private:
                type: boolean
              is_read_only:
                type: boolean
              is_shared:
                type: boolean
              is_starred:
                type: boolean
              is_thread_only:
                type: boolean
              last_read:
                $ref: '#/components/schemas/defs_ts'
              latest:
                items:
                  anyOf:
                    - $ref: '#/components/schemas/objs_message'
                    - nullable: true
              members:
                items:
                  $ref: '#/components/schemas/defs_user_id'
                minItems: 0
                type: array
                uniqueItems: true
              name:
                type: string
              name_normalized:
                type: string
              num_members:
                type: integer
              parent_conversation:
                items:
                  anyOf:
                    - $ref: '#/components/schemas/defs_channel'
                    - nullable: true
              pending_connected_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              pending_shared:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              pin_count:
                type: integer
              previous_names:
                items:
                  $ref: '#/components/schemas/defs_channel_name'
                minItems: 0
                type: array
                uniqueItems: true
              priority:
                type: number
              purpose:
                properties:
                  creator:
                    $ref: '#/components/schemas/defs_topic_purpose_creator'
                  last_set:
                    type: integer
                  value:
                    type: string
                required:
                  - value
                  - creator
                  - last_set
                type: object
              shared_team_ids:
                items:
                  $ref: '#/components/schemas/defs_team'
                minItems: 0
                type: array
                uniqueItems: true
              shares:
                items:
                  properties:
                    accepted_user:
                      $ref: '#/components/schemas/defs_user_id'
                    is_active:
                      type: boolean
                    team:
                      $ref: '#/components/schemas/objs_team'
                    user:
                      $ref: '#/components/schemas/defs_user_id'
                  required:
                    - team
                    - user
                    - is_active
                  type: object
                minItems: 0
                type: array
                uniqueItems: true
              timezone_count:
                type: integer
              topic:
                properties:
                  creator:
                    $ref: '#/components/schemas/defs_topic_purpose_creator'
                  last_set:
                    type: integer
                  value:
                    type: string
                required:
                  - value
                  - creator
                  - last_set
                type: object
              unlinked:
                title: >-
                  Field to determine whether a channel has ever been
                  shared/disconnected in the past
                type: integer
              unread_count:
                type: integer
              unread_count_display:
                type: integer
              user:
                $ref: '#/components/schemas/defs_user_id'
            required:
              - id
              - name
              - created
              - creator
              - is_archived
              - is_channel
              - is_general
              - is_mpim
              - is_group
              - is_org_shared
              - is_im
              - is_shared
              - is_private
              - name_normalized
              - topic
              - purpose
            type: object
          - title: Conversation IM Channel Object from conversations.* methods
            properties:
              version:
                type: integer
              created:
                type: integer
              has_pins:
                type: boolean
              id:
                $ref: '#/components/schemas/defs_dm_id'
              is_archived:
                type: boolean
              is_ext_shared:
                type: boolean
              is_frozen:
                type: boolean
              is_im:
                type: boolean
              is_open:
                type: boolean
              is_org_shared:
                type: boolean
              is_shared:
                type: boolean
              is_starred:
                type: boolean
              is_user_deleted:
                type: boolean
              last_read:
                $ref: '#/components/schemas/defs_ts'
              latest:
                items:
                  anyOf:
                    - $ref: '#/components/schemas/objs_message'
                    - nullable: true
              parent_conversation:
                items:
                  anyOf:
                    - $ref: '#/components/schemas/defs_channel'
                    - nullable: true
              pin_count:
                type: integer
              priority:
                type: number
              shares:
                items:
                  properties:
                    date_create:
                      type: integer
                    id:
                      $ref: '#/components/schemas/defs_team'
                    is_active:
                      type: boolean
                    name:
                      type: string
                    team:
                      $ref: '#/components/schemas/objs_team'
                  required:
                    - id
                    - name
                    - team
                    - date_create
                    - is_active
                  type: object
                minItems: 0
                type: array
                uniqueItems: true
              unread_count:
                type: integer
              unread_count_display:
                type: integer
              user:
                $ref: '#/components/schemas/defs_user_id'
            required:
              - id
              - created
              - is_im
              - is_org_shared
              - user
              - priority
            type: object
    objs_enterprise_user:
      properties:
        enterprise_id:
          $ref: '#/components/schemas/defs_enterprise_id'
        enterprise_name:
          $ref: '#/components/schemas/defs_enterprise_name'
        id:
          $ref: '#/components/schemas/defs_enterprise_user_id'
        is_admin:
          type: boolean
        is_owner:
          type: boolean
        teams:
          items:
            $ref: '#/components/schemas/defs_team'
          type: array
          uniqueItems: true
      required:
        - id
        - enterprise_id
        - enterprise_name
        - is_admin
        - is_owner
        - teams
      type: object
    objs_external_org_migrations:
      title: External Org Migrations
      properties:
        current:
          items:
            properties:
              date_started:
                type: integer
              team_id:
                type: string
            required:
              - team_id
              - date_started
            type: object
          type: array
        date_updated:
          type: integer
      required:
        - date_updated
        - current
      type: object
    objs_file:
      title: file object
      properties:
        title:
          type: string
        channels:
          items:
            $ref: '#/components/schemas/defs_channel_id'
          type: array
          uniqueItems: true
        comments_count:
          type: integer
        created:
          type: integer
        date_delete:
          type: integer
        display_as_bot:
          type: boolean
        editable:
          type: boolean
        editor:
          $ref: '#/components/schemas/defs_user_id'
        external_id:
          type: string
        external_type:
          type: string
        external_url:
          format: uri
          type: string
        filetype:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/defs_group_id'
          type: array
          uniqueItems: true
        has_rich_preview:
          type: boolean
        id:
          $ref: '#/components/schemas/defs_file_id'
        image_exif_rotation:
          type: integer
        ims:
          items:
            $ref: '#/components/schemas/defs_dm_id'
          type: array
          uniqueItems: true
        is_external:
          type: boolean
        is_public:
          type: boolean
        is_starred:
          type: boolean
        is_tombstoned:
          type: boolean
        last_editor:
          $ref: '#/components/schemas/defs_user_id'
        mimetype:
          type: string
        mode:
          type: string
        name:
          type: string
        non_owner_editable:
          type: boolean
        num_stars:
          type: integer
        original_h:
          type: integer
        original_w:
          type: integer
        permalink:
          format: uri
          type: string
        permalink_public:
          format: uri
          type: string
        pinned_info:
          $ref: '#/components/schemas/defs_pinned_info'
        pinned_to:
          items:
            $ref: '#/components/schemas/defs_channel'
          type: array
        pretty_type:
          type: string
        preview:
          type: string
        public_url_shared:
          type: boolean
        reactions:
          items:
            $ref: '#/components/schemas/objs_reaction'
          type: array
        shares:
          properties:
            private:
              additionalProperties: false
            public:
              additionalProperties: false
          type: object
        size:
          type: integer
        source_team:
          $ref: '#/components/schemas/defs_team'
        state:
          type: string
        thumb_1024:
          format: uri
          type: string
        thumb_1024_h:
          type: integer
        thumb_1024_w:
          type: integer
        thumb_160:
          format: uri
          type: string
        thumb_360:
          format: uri
          type: string
        thumb_360_h:
          type: integer
        thumb_360_w:
          type: integer
        thumb_480:
          format: uri
          type: string
        thumb_480_h:
          type: integer
        thumb_480_w:
          type: integer
        thumb_64:
          format: uri
          type: string
        thumb_720:
          format: uri
          type: string
        thumb_720_h:
          type: integer
        thumb_720_w:
          type: integer
        thumb_80:
          format: uri
          type: string
        thumb_800:
          format: uri
          type: string
        thumb_800_h:
          type: integer
        thumb_800_w:
          type: integer
        thumb_960:
          format: uri
          type: string
        thumb_960_h:
          type: integer
        thumb_960_w:
          type: integer
        thumb_tiny:
          type: string
        timestamp:
          type: integer
        updated:
          type: integer
        url_private:
          format: uri
          type: string
        url_private_download:
          format: uri
          type: string
        user:
          type: string
        user_team:
          $ref: '#/components/schemas/defs_team'
        username:
          type: string
      type: object
    objs_icon:
      properties:
        image_102:
          type: string
        image_132:
          type: string
        image_230:
          type: string
        image_34:
          type: string
        image_44:
          type: string
        image_68:
          type: string
        image_88:
          type: string
        image_default:
          type: boolean
      type: object
    objs_message:
      title: Message object
      properties:
        attachments:
          items:
            properties:
              fallback:
                type: string
              id:
                type: integer
              image_bytes:
                type: integer
              image_height:
                type: integer
              image_url:
                type: string
              image_width:
                type: integer
            required:
              - id
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        blocks:
          $ref: '#/components/schemas/blocks'
        bot_id:
          items:
            anyOf:
              - $ref: '#/components/schemas/defs_bot_id'
              - title: Nil bot_id set when display_as_bot is false
                nullable: true
        bot_profile:
          $ref: '#/components/schemas/objs_bot_profile'
        client_msg_id:
          type: string
        comment:
          $ref: '#/components/schemas/objs_comment'
        display_as_bot:
          type: boolean
        file:
          $ref: '#/components/schemas/objs_file'
        files:
          items:
            $ref: '#/components/schemas/objs_file'
          minItems: 1
          type: array
          uniqueItems: true
        icons:
          properties:
            emoji:
              type: string
            image_64:
              format: uri
              type: string
          type: object
        inviter:
          $ref: '#/components/schemas/defs_user_id'
        is_delayed_message:
          type: boolean
        is_intro:
          type: boolean
        is_starred:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        latest_reply:
          $ref: '#/components/schemas/defs_ts'
        name:
          type: string
        old_name:
          type: string
        parent_user_id:
          $ref: '#/components/schemas/defs_user_id'
        permalink:
          format: uri
          type: string
        pinned_to:
          items:
            $ref: '#/components/schemas/defs_channel'
          type: array
        purpose:
          type: string
        reactions:
          items:
            $ref: '#/components/schemas/objs_reaction'
          type: array
        reply_count:
          type: integer
        reply_users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          minItems: 1
          type: array
          uniqueItems: true
        reply_users_count:
          type: integer
        source_team:
          $ref: '#/components/schemas/defs_workspace_id'
        subscribed:
          type: boolean
        subtype:
          type: string
        team:
          $ref: '#/components/schemas/defs_workspace_id'
        text:
          type: string
        thread_ts:
          $ref: '#/components/schemas/defs_ts'
        topic:
          type: string
        ts:
          $ref: '#/components/schemas/defs_ts'
        type:
          type: string
        unread_count:
          type: integer
        upload:
          type: boolean
        user:
          $ref: '#/components/schemas/defs_user_id'
        user_profile:
          $ref: '#/components/schemas/objs_user_profile_short'
        user_team:
          $ref: '#/components/schemas/defs_workspace_id'
        username:
          type: string
      required:
        - text
        - type
        - ts
      type: object
    objs_paging:
      title: paging object
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        per_page:
          type: integer
        spill:
          type: integer
        total:
          type: integer
      required:
        - page
        - total
      type: object
    objs_primary_owner:
      properties:
        email:
          type: string
        id:
          type: string
      required:
        - id
        - email
      type: object
    objs_reaction:
      title: Reaction object
      additionalProperties: true
      properties:
        count:
          type: integer
        name:
          type: string
        users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          type: array
      required:
        - name
        - users
        - count
      type: object
    objs_reminder:
      properties:
        complete_ts:
          type: integer
        creator:
          $ref: '#/components/schemas/defs_user_id'
        id:
          $ref: '#/components/schemas/defs_reminder_id'
        recurring:
          type: boolean
        text:
          type: string
        time:
          type: integer
        user:
          $ref: '#/components/schemas/defs_user_id'
      required:
        - id
        - creator
        - user
        - text
        - recurring
      type: object
    objs_resources:
      title: resources in info from apps.permissions.info
      properties:
        excluded_ids:
          items:
            items:
              anyOf:
                - $ref: '#/components/schemas/defs_channel'
                - $ref: '#/components/schemas/defs_team'
          type: array
        ids:
          items:
            items:
              anyOf:
                - $ref: '#/components/schemas/defs_channel'
                - $ref: '#/components/schemas/defs_team'
          type: array
        wildcard:
          type: boolean
      required:
        - ids
      type: object
    objs_response_metadata:
      items:
        anyOf:
          - title: new paging style
            properties:
              next_cursor:
                type: string
            required:
              - next_cursor
            type: object
          - title: deprecation_warning
            properties:
              messages:
                items:
                  type: string
                type: array
              warnings:
                items:
                  enum:
                    - method_deprecated
                  type: string
                type: array
            required:
              - messages
              - warnings
            type: object
          - title: deprecation_warning and paging style together
            properties:
              messages:
                items:
                  type: string
                type: array
              next_cursor:
                type: string
              warnings:
                items:
                  enum:
                    - method_deprecated
                  type: string
                type: array
            required:
              - messages
              - warnings
              - next_cursor
            type: object
    objs_scopes:
      items:
        title: Named OAuth scopes
        type: string
        x-examples:
          - chat:write
          - im:history
          - im:read
      type: array
    objs_subteam:
      title: Subteam/Usergroup Object
      properties:
        description:
          type: string
        auto_provision:
          type: boolean
        auto_type:
          items:
            anyOf:
              - nullable: true
              - enum:
                  - owner
                  - admin
                type: string
        channel_count:
          type: integer
        created_by:
          $ref: '#/components/schemas/defs_user_id'
        date_create:
          type: integer
        date_delete:
          type: integer
        date_update:
          type: integer
        deleted_by:
          items:
            anyOf:
              - nullable: true
              - $ref: '#/components/schemas/defs_user_id'
        enterprise_subteam_id:
          type: string
        handle:
          type: string
        id:
          $ref: '#/components/schemas/defs_subteam_id'
        is_external:
          type: boolean
        is_subteam:
          type: boolean
        is_usergroup:
          type: boolean
        name:
          type: string
        prefs:
          properties:
            channels:
              items:
                $ref: '#/components/schemas/defs_channel_id'
              type: array
            groups:
              items:
                $ref: '#/components/schemas/defs_group_id'
              type: array
          required:
            - channels
            - groups
          type: object
        team_id:
          $ref: '#/components/schemas/defs_team'
        updated_by:
          $ref: '#/components/schemas/defs_user_id'
        user_count:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          type: array
      required:
        - id
        - team_id
        - is_usergroup
        - is_subteam
        - name
        - description
        - handle
        - is_external
        - date_create
        - date_update
        - date_delete
        - auto_type
        - auto_provision
        - enterprise_subteam_id
        - created_by
        - updated_by
        - deleted_by
        - prefs
      type: object
    objs_team:
      title: Team Object
      properties:
        description:
          nullable: true
          type: string
        archived:
          type: boolean
        avatar_base_url:
          format: uri
          type: string
        created:
          type: integer
        date_create:
          type: integer
        deleted:
          type: boolean
        discoverable:
          items:
            anyOf:
              - nullable: true
              - type: string
        domain:
          type: string
        email_domain:
          type: string
        enterprise_id:
          $ref: '#/components/schemas/defs_enterprise_id'
        enterprise_name:
          $ref: '#/components/schemas/defs_enterprise_name'
        external_org_migrations:
          $ref: '#/components/schemas/objs_external_org_migrations'
        has_compliance_export:
          type: boolean
        icon:
          $ref: '#/components/schemas/objs_icon'
        id:
          $ref: '#/components/schemas/defs_workspace_id'
        is_assigned:
          type: boolean
        is_enterprise:
          type: integer
        is_over_storage_limit:
          type: boolean
        limit_ts:
          type: integer
        locale:
          type: string
        messages_count:
          type: integer
        msg_edit_window_mins:
          type: integer
        name:
          type: string
        over_integrations_limit:
          type: boolean
        over_storage_limit:
          type: boolean
        pay_prod_cur:
          type: string
        plan:
          enum:
            - ''
            - std
            - plus
            - compliance
            - enterprise
          type: string
        primary_owner:
          $ref: '#/components/schemas/objs_primary_owner'
        sso_provider:
          properties:
            label:
              type: string
            name:
              type: string
            type:
              type: string
          type: object
      required:
        - id
        - name
        - domain
        - email_domain
        - icon
      type: object
    objs_team_profile_field:
      properties:
        field_name:
          nullable: true
          type: string
        hint:
          type: string
        id:
          pattern: ^X[a-zA-Z0-9]{9,}$
          type: string
        is_hidden:
          type: boolean
        label:
          type: string
        options:
          items:
            anyOf:
              - nullable: true
              - $ref: '#/components/schemas/objs_team_profile_field_option'
        ordering:
          type: number
        possible_values:
          items:
            type: string
          nullable: true
          type: array
        type:
          enum:
            - text
            - date
            - link
            - mailto
            - options_list
            - user
          type: string
      required:
        - id
        - ordering
        - label
        - hint
        - type
      type: object
    objs_team_profile_field_option:
      properties:
        is_custom:
          nullable: true
          type: boolean
        is_multiple_entry:
          nullable: true
          type: boolean
        is_protected:
          nullable: true
          type: boolean
        is_scim:
          nullable: true
          type: boolean
      type: object
    objs_user:
      items:
        anyOf:
          - description: user object for non enterprise type
            properties:
              color:
                pattern: ^[a-fA-F0-9]{6}$
                type: string
              deleted:
                type: boolean
              enterprise_user:
                $ref: '#/components/schemas/objs_enterprise_user'
              has_2fa:
                type: boolean
              id:
                $ref: '#/components/schemas/defs_user_id'
              is_admin:
                type: boolean
              is_app_user:
                type: boolean
              is_bot:
                type: boolean
              is_external:
                type: boolean
              is_forgotten:
                type: boolean
              is_invited_user:
                type: boolean
              is_owner:
                type: boolean
              is_primary_owner:
                type: boolean
              is_restricted:
                type: boolean
              is_stranger:
                type: boolean
              is_ultra_restricted:
                type: boolean
              locale:
                type: string
              name:
                type: string
              presence:
                type: string
              profile:
                $ref: '#/components/schemas/objs_user_profile'
              real_name:
                type: string
              team:
                $ref: '#/components/schemas/defs_workspace_id'
              team_id:
                $ref: '#/components/schemas/defs_workspace_id'
              team_profile:
                properties:
                  fields:
                    items:
                      $ref: '#/components/schemas/objs_team_profile_field'
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - fields
                type: object
              two_factor_type:
                type: string
              tz:
                items:
                  anyOf:
                    - nullable: true
                    - type: string
              tz_label:
                type: string
              tz_offset:
                type: number
              updated:
                type: number
            required:
              - id
              - name
              - profile
              - is_bot
              - updated
              - is_app_user
            type: object
          - description: enterprise user
            properties:
              color:
                description: >-
                  refercing to bug:
                  https://jira.tinyspeck.com/browse/EVALUE-1559
                pattern: ^([a-fA-F0-9]{6})?$
                type: string
              deleted:
                type: boolean
              enterprise_user:
                $ref: '#/components/schemas/objs_enterprise_user'
              has_2fa:
                type: boolean
              id:
                $ref: '#/components/schemas/defs_user_id'
              is_admin:
                type: boolean
              is_app_user:
                type: boolean
              is_bot:
                type: boolean
              is_external:
                type: boolean
              is_forgotten:
                type: boolean
              is_owner:
                type: boolean
              is_primary_owner:
                type: boolean
              is_restricted:
                type: boolean
              is_stranger:
                type: boolean
              is_ultra_restricted:
                type: boolean
              locale:
                type: string
              name:
                type: string
              presence:
                type: string
              profile:
                $ref: '#/components/schemas/objs_user_profile'
              real_name:
                type: string
              team_id:
                $ref: '#/components/schemas/defs_workspace_id'
              team_profile:
                properties:
                  fields:
                    items:
                      $ref: '#/components/schemas/objs_team_profile_field'
                    minItems: 1
                    type: array
                    uniqueItems: true
                required:
                  - fields
                type: object
              teams:
                items:
                  $ref: '#/components/schemas/defs_workspace_id'
                minItems: 1
                type: array
                uniqueItems: true
              two_factor_type:
                type: string
              tz:
                items:
                  anyOf:
                    - nullable: true
                    - type: string
              tz_label:
                type: string
              tz_offset:
                type: number
              updated:
                type: number
            required:
              - id
              - name
              - profile
              - is_bot
              - updated
              - is_app_user
            type: object
    objs_user_profile:
      title: User profile object
      properties:
        title:
          type: string
        always_active:
          type: boolean
        api_app_id:
          $ref: '#/components/schemas/defs_optional_app_id'
        avatar_hash:
          type: string
        bot_id:
          $ref: '#/components/schemas/defs_bot_id'
        display_name:
          type: string
        display_name_normalized:
          type: string
        email:
          format: email
          nullable: true
          type: string
        fields:
          items:
            type: object
          nullable: true
          oneOf:
            - type: object
            - items: {}
              type: array
        first_name:
          nullable: true
          type: string
        guest_expiration_ts:
          nullable: true
          type: integer
        guest_invited_by:
          nullable: true
          type: string
        image_1024:
          format: uri
          nullable: true
          type: string
        image_192:
          format: uri
          nullable: true
          type: string
        image_24:
          format: uri
          nullable: true
          type: string
        image_32:
          format: uri
          nullable: true
          type: string
        image_48:
          format: uri
          nullable: true
          type: string
        image_512:
          format: uri
          nullable: true
          type: string
        image_72:
          format: uri
          nullable: true
          type: string
        image_original:
          format: uri
          nullable: true
          type: string
        is_app_user:
          type: boolean
        is_custom_image:
          type: boolean
        is_restricted:
          nullable: true
          type: boolean
        is_ultra_restricted:
          nullable: true
          type: boolean
        last_avatar_image_hash:
          type: string
        last_name:
          nullable: true
          type: string
        memberships_count:
          type: integer
        name:
          nullable: true
          type: string
        phone:
          type: string
        pronouns:
          type: string
        real_name:
          type: string
        real_name_normalized:
          type: string
        skype:
          type: string
        status_default_emoji:
          type: string
        status_default_text:
          type: string
        status_default_text_canonical:
          nullable: true
          type: string
        status_emoji:
          type: string
        status_expiration:
          type: integer
        status_text:
          type: string
        status_text_canonical:
          nullable: true
          type: string
        team:
          $ref: '#/components/schemas/defs_workspace_id'
        updated:
          type: integer
        user_id:
          type: string
        username:
          nullable: true
          type: string
      required:
        - real_name
        - display_name
        - avatar_hash
        - real_name_normalized
        - display_name_normalized
        - title
        - phone
        - skype
        - status_text
        - status_emoji
        - fields
      type: object
    objs_user_profile_short:
      properties:
        avatar_hash:
          type: string
        display_name:
          type: string
        display_name_normalized:
          type: string
        first_name:
          nullable: true
          type: string
        image_72:
          format: uri
          type: string
        is_restricted:
          type: boolean
        is_ultra_restricted:
          type: boolean
        name:
          type: string
        real_name:
          type: string
        real_name_normalized:
          type: string
        team:
          $ref: '#/components/schemas/defs_workspace_id'
      required:
        - avatar_hash
        - image_72
        - first_name
        - real_name
        - display_name
        - team
        - name
        - is_restricted
        - is_ultra_restricted
      type: object
    AdminappsApproveAppInstallationRequest:
      properties:
        app_id:
          description: The id of the app to approve.
          type: string
        request_id:
          description: The id of the request to approve.
          type: string
        team_id:
          type: string
      type: object
    AdminappsRestrictAppRequest:
      properties:
        app_id:
          description: The id of the app to restrict.
          type: string
        request_id:
          description: The id of the request to restrict.
          type: string
        team_id:
          type: string
      type: object
    AdminconversationsArchiveChannelRequest:
      properties:
        channel_id:
          description: The channel to archive.
          type: string
      required:
        - channel_id
      type: object
    AdminconversationsConvertToPrivateChannelRequest:
      properties:
        channel_id:
          description: The channel to convert to private.
          type: string
      required:
        - channel_id
      type: object
    AdminconversationsCreateChannelBasedConversationRequest:
      properties:
        description:
          description: Description of the public or private channel to create.
          type: string
        is_private:
          description: When `true`, creates a private channel instead of a public channel
          type: boolean
        name:
          description: Name of the public or private channel to create.
          type: string
        org_wide:
          description: >-
            When `true`, the channel will be available org-wide. Note: if the
            channel is not `org_wide=true`, you must specify a `team_id` for
            this channel
          type: boolean
        team_id:
          description: >-
            The workspace to create the channel in. Note: this argument is
            required unless you set `org_wide=true`.
          type: string
      required:
        - name
        - is_private
      type: object
    AdminconversationsDeleteChannelRequest:
      properties:
        channel_id:
          description: The channel to delete.
          type: string
      required:
        - channel_id
      type: object
    AdminconversationsDisconnectSharedChannelRequest:
      properties:
        channel_id:
          description: The channel to be disconnected from some workspaces.
          type: string
        leaving_team_ids:
          description: >-
            The team to be removed from the channel. Currently only a single
            team id can be specified.
          type: string
      required:
        - channel_id
      type: object
    AdminconversationsInviteUserToChannelRequest:
      properties:
        channel_id:
          description: The channel that the users will be invited to.
          type: string
        user_ids:
          description: The users to invite.
          type: string
      required:
        - user_ids
        - channel_id
      type: object
    AdminconversationsRenameChannelRequest:
      properties:
        channel_id:
          description: The channel to rename.
          type: string
        name:
          type: string
      required:
        - channel_id
        - name
      type: object
    AdminconversationsrestrictAccessAddGroupIdpGroupsRequest:
      properties:
        channel_id:
          description: The channel to link this group to.
          type: string
        group_id:
          description: >-
            The [IDP
            Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
            ID to be an allowlist for the private channel.
          type: string
        team_id:
          description: >-
            The workspace where the channel exists. This argument is required
            for channels only tied to one workspace, and optional for channels
            that are shared across an organization.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.conversations:write`'
          type: string
      required:
        - token
        - group_id
        - channel_id
      type: object
    AdminconversationsrestrictAccessRemoveIdpGroupRequest:
      properties:
        channel_id:
          description: The channel to remove the linked group from.
          type: string
        group_id:
          description: >-
            The [IDP
            Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
            ID to remove from the private channel.
          type: string
        team_id:
          description: >-
            The workspace where the channel exists. This argument is required
            for channels only tied to one workspace, and optional for channels
            that are shared across an organization.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.conversations:write`'
          type: string
      required:
        - token
        - team_id
        - group_id
        - channel_id
      type: object
    AdminconversationsSetConversationPrefsRequest:
      properties:
        channel_id:
          description: The channel to set the prefs for
          type: string
        prefs:
          description: The prefs for this channel in a stringified JSON format.
          type: string
      required:
        - channel_id
        - prefs
      type: object
    AdminconversationsSetTeamsWorkspaceConnectionRequest:
      properties:
        channel_id:
          description: The encoded `channel_id` to add or remove to workspaces.
          type: string
        org_channel:
          description: True if channel has to be converted to an org channel
          type: boolean
        target_team_ids:
          description: >-
            A comma-separated list of workspaces to which the channel should be
            shared. Not required if the channel is being shared org-wide.
          type: string
        team_id:
          description: >-
            The workspace to which the channel belongs. Omit this argument if
            the channel is a cross-workspace shared channel.
          type: string
      required:
        - channel_id
      type: object
    AdminconversationsUnarchiveChannelRequest:
      properties:
        channel_id:
          description: The channel to unarchive.
          type: string
      required:
        - channel_id
      type: object
    AdminemojiAddEmojiRequest:
      properties:
        name:
          description: >-
            The name of the emoji to be removed. Colons (`:myemoji:`) around the
            value are not required, although they may be included.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.teams:write`'
          type: string
        url:
          description: >-
            The URL of a file to use as an image for the emoji. Square images
            under 128KB and with transparent backgrounds work best.
          type: string
      required:
        - token
        - name
        - url
      type: object
    AdminemojiAliasAddRequest:
      properties:
        alias_for:
          description: The alias of the emoji.
          type: string
        name:
          description: >-
            The name of the emoji to be aliased. Colons (`:myemoji:`) around the
            value are not required, although they may be included.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.teams:write`'
          type: string
      required:
        - token
        - name
        - alias_for
      type: object
    AdminemojiRemoveEnterpriseEmojiRequest:
      properties:
        name:
          description: >-
            The name of the emoji to be removed. Colons (`:myemoji:`) around the
            value are not required, although they may be included.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.teams:write`'
          type: string
      required:
        - token
        - name
      type: object
    AdminemojiRenameEmojiRequest:
      properties:
        name:
          description: >-
            The name of the emoji to be renamed. Colons (`:myemoji:`) around the
            value are not required, although they may be included.
          type: string
        new_name:
          description: The new name of the emoji.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.teams:write`'
          type: string
      required:
        - token
        - name
        - new_name
      type: object
    AdmininviteRequestsApproveRequestRequest:
      properties:
        invite_request_id:
          description: ID of the request to invite.
          type: string
        team_id:
          description: ID for the workspace where the invite request was made.
          type: string
      required:
        - invite_request_id
      type: object
    AdminteamsCreateEnterpriseTeamRequest:
      properties:
        team_description:
          description: Description for the team.
          type: string
        team_discoverability:
          description: >-
            Who can join the team. A team's discoverability can be `open`,
            `closed`, `invite_only`, or `unlisted`.
          type: string
        team_domain:
          description: Team domain (for example, slacksoftballteam).
          type: string
        team_name:
          description: Team name (for example, Slack Softball Team).
          type: string
      required:
        - team_domain
        - team_name
      type: object
    AdminteamssettingsSetDefaultChannelsRequest:
      properties:
        channel_ids:
          description: An array of channel IDs.
          type: string
        team_id:
          description: ID for the workspace to set the default channel for.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.teams:write`'
          type: string
      required:
        - token
        - team_id
        - channel_ids
      type: object
    AdminteamssettingsSetDescriptionRequest:
      properties:
        description:
          description: The new description for the workspace.
          type: string
        team_id:
          description: ID for the workspace to set the description for.
          type: string
      required:
        - team_id
        - description
      type: object
    AdminteamssettingsSetDiscoverabilityOfWorkspaceRequest:
      properties:
        discoverability:
          description: >-
            This workspace's discovery setting. It must be set to one of `open`,
            `invite_only`, `closed`, or `unlisted`.
          type: string
        team_id:
          description: The ID of the workspace to set discoverability on.
          type: string
      required:
        - team_id
        - discoverability
      type: object
    AdminteamssettingsSetIconRequest:
      properties:
        image_url:
          description: Image URL for the icon
          type: string
        team_id:
          description: ID for the workspace to set the icon for.
          type: string
        token:
          description: 'Authentication token. Requires scope: `admin.teams:write`'
          type: string
      required:
        - token
        - image_url
        - team_id
      type: object
    AdminteamssettingsSetNameRequest:
      properties:
        name:
          description: The new name of the workspace.
          type: string
        team_id:
          description: ID for the workspace to set the name for.
          type: string
      required:
        - team_id
        - name
      type: object
    AdminusergroupsAddDefaultChannelsRequest:
      properties:
        channel_ids:
          description: Comma separated string of channel IDs.
          type: string
        team_id:
          description: The workspace to add default channels in.
          type: string
        usergroup_id:
          description: ID of the IDP group to add default channels for.
          type: string
      required:
        - usergroup_id
        - channel_ids
      type: object
    AdminusergroupsAssociateDefaultWorkspacesRequest:
      properties:
        auto_provision:
          description: >-
            When `true`, this method automatically creates new workspace
            accounts for the IDP group members.
          type: boolean
        team_ids:
          description: >-
            A comma separated list of encoded team (workspace) IDs. Each
            workspace *MUST* belong to the organization associated with the
            token.
          type: string
        usergroup_id:
          description: An encoded usergroup (IDP Group) ID.
          type: string
      required:
        - usergroup_id
        - team_ids
      type: object
    AdminusergroupsRemoveChannelsRequest:
      properties:
        channel_ids:
          description: Comma-separated string of channel IDs
          type: string
        usergroup_id:
          description: ID of the IDP Group
          type: string
      required:
        - usergroup_id
        - channel_ids
      type: object
    AdminusersAddWorkspaceUserRequest:
      properties:
        channel_ids:
          description: >-
            Comma separated values of channel IDs to add user in the new
            workspace.
          type: string
        is_restricted:
          description: True if user should be added to the workspace as a guest.
          type: boolean
        is_ultra_restricted:
          description: >-
            True if user should be added to the workspace as a single-channel
            guest.
          type: boolean
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
        user_id:
          description: The ID of the user to add to the workspace.
          type: string
      required:
        - team_id
        - user_id
      type: object
    AdminusersInviteUserToWorkspaceRequest:
      properties:
        channel_ids:
          description: >-
            A comma-separated list of `channel_id`s for this user to join. At
            least one channel is required.
          type: string
        custom_message:
          description: An optional message to send to the user in the invite email.
          type: string
        email:
          description: The email address of the person to invite.
          type: string
        guest_expiration_ts:
          description: >-
            Timestamp when guest account should be disabled. Only include this
            timestamp if you are inviting a guest user and you want their
            account to expire on a certain date.
          type: string
        is_restricted:
          description: 'Is this user a multi-channel guest user? (default: false)'
          type: boolean
        is_ultra_restricted:
          description: 'Is this user a single channel guest user? (default: false)'
          type: boolean
        real_name:
          description: Full name of the user.
          type: string
        resend:
          description: >-
            Allow this invite to be resent in the future if a user has not
            signed up yet. (default: false)
          type: boolean
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
      required:
        - team_id
        - email
        - channel_ids
      type: object
    AdminusersRemoveUserFromWorkspaceRequest:
      properties:
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
        user_id:
          description: The ID of the user to remove.
          type: string
      required:
        - team_id
        - user_id
      type: object
    AdminuserssessionInvalidateSessionRequest:
      properties:
        session_id:
          type: integer
        team_id:
          description: ID of the team that the session belongs to
          type: string
      required:
        - team_id
        - session_id
      type: object
    AdminuserssessionResetSessionsRequest:
      properties:
        mobile_only:
          description: 'Only expire mobile sessions (default: false)'
          type: boolean
        user_id:
          description: The ID of the user to wipe sessions for
          type: string
        web_only:
          description: 'Only expire web sessions (default: false)'
          type: boolean
      required:
        - user_id
      type: object
    AdminusersSetAdminUserRequest:
      properties:
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
        user_id:
          description: The ID of the user to designate as an admin.
          type: string
      required:
        - team_id
        - user_id
      type: object
    AdminusersSetExpirationGuestRequest:
      properties:
        expiration_ts:
          description: Timestamp when guest account should be disabled.
          type: integer
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
        user_id:
          description: The ID of the user to set an expiration for.
          type: string
      required:
        - team_id
        - user_id
        - expiration_ts
      type: object
    AdminusersSetWorkspaceOwnerRequest:
      properties:
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
        user_id:
          description: Id of the user to promote to owner.
          type: string
      required:
        - team_id
        - user_id
      type: object
    AdminusersSetRegularUserRequest:
      properties:
        team_id:
          description: The ID (`T1234`) of the workspace.
          type: string
        user_id:
          description: The ID of the user to designate as a regular user.
          type: string
      required:
        - team_id
        - user_id
      type: object
    CallsAddRequest:
      properties:
        title:
          description: The name of the Call.
          type: string
        created_by:
          description: >-
            The valid Slack user ID of the user who created this Call. When this
            method is called with a user token, the `created_by` field is
            optional and defaults to the authed user of the token. Otherwise,
            the field is required.
          type: string
        date_start:
          description: Call start time in UTC UNIX timestamp format
          type: integer
        desktop_app_join_url:
          description: >-
            When supplied, available Slack clients will attempt to directly
            launch the 3rd-party Call with this URL.
          type: string
        external_display_id:
          description: >-
            An optional, human-readable ID supplied by the 3rd-party Call
            provider. If supplied, this ID will be displayed in the Call object.
          type: string
        external_unique_id:
          description: >-
            An ID supplied by the 3rd-party Call provider. It must be unique
            across all Calls from that service.
          type: string
        join_url:
          description: The URL required for a client to join the Call.
          type: string
        users:
          description: >-
            The list of users to register as participants in the Call. [Read
            more on how to specify users here](https://slack.dev).
          type: string
      required:
        - external_unique_id
        - join_url
      type: object
    CallsEndRequest:
      properties:
        duration:
          description: Call duration in seconds
          type: integer
        id:
          description: >-
            `id` returned when registering the call using the
            [`calls.add`](https://slack.dev) method.
          type: string
      required:
        - id
      type: object
    CallsparticipantsAddNewParticipantRequest:
      properties:
        id:
          description: '`id` returned by the [`calls.add`](https://slack.dev) method.'
          type: string
        users:
          description: >-
            The list of users to add as participants in the Call. [Read more on
            how to specify users here](https://slack.dev).
          type: string
      required:
        - id
        - users
      type: object
    CallsparticipantsRegisterRemovedRequest:
      properties:
        id:
          description: '`id` returned by the [`calls.add`](https://slack.dev) method.'
          type: string
        users:
          description: >-
            The list of users to remove as participants in the Call. [Read more
            on how to specify users here](https://slack.dev).
          type: string
      required:
        - id
        - users
      type: object
    CallsUpdateRequest:
      properties:
        title:
          description: The name of the Call.
          type: string
        desktop_app_join_url:
          description: >-
            When supplied, available Slack clients will attempt to directly
            launch the 3rd-party Call with this URL.
          type: string
        id:
          description: '`id` returned by the [`calls.add`](https://slack.dev) method.'
          type: string
        join_url:
          description: The URL required for a client to join the Call.
          type: string
      required:
        - id
      type: object
    ChatDeleteRequest:
      properties:
        as_user:
          description: >-
            Pass true to delete the message as the authed user with
            `chat:write:user` scope. [Bot users](https://slack.dev) in this
            context are considered authed users. If unused or false, the message
            will be deleted with `chat:write:bot` scope.
          type: boolean
        channel:
          description: Channel containing the message to be deleted.
          type: string
        ts:
          description: Timestamp of the message to be deleted.
          type: number
      type: object
    ChatDeleteScheduledMessageRequest:
      properties:
        as_user:
          description: >-
            Pass true to delete the message as the authed user with
            `chat:write:user` scope. [Bot users](https://slack.dev) in this
            context are considered authed users. If unused or false, the message
            will be deleted with `chat:write:bot` scope.
          type: boolean
        channel:
          description: The channel the scheduled_message is posting to
          type: string
        scheduled_message_id:
          description: '`scheduled_message_id` returned from call to chat.scheduleMessage'
          type: string
      required:
        - channel
        - scheduled_message_id
      type: object
    ChatMeMessageRequest:
      properties:
        channel:
          description: >-
            Channel to send message to. Can be a public channel, private group
            or IM channel. Can be an encoded ID, or a name.
          type: string
        text:
          description: Text of the message to send.
          type: string
      type: object
    ChatPostEphemeralRequest:
      properties:
        as_user:
          description: >-
            Pass true to post the message as the authed user. Defaults to true
            if the chat:write:bot scope is not included. Otherwise, defaults to
            false.
          type: boolean
        attachments:
          description: >-
            A JSON-based array of structured attachments, presented as a
            URL-encoded string.
          type: string
        blocks:
          description: >-
            A JSON-based array of structured blocks, presented as a URL-encoded
            string.
          type: string
        channel:
          description: >-
            Channel, private group, or IM channel to send message to. Can be an
            encoded ID, or a name.
          type: string
        icon_emoji:
          description: >-
            Emoji to use as the icon for this message. Overrides `icon_url`.
            Must be used in conjunction with `as_user` set to `false`, otherwise
            ignored. See [authorship](https://slack.dev) below.
          type: string
        icon_url:
          description: >-
            URL to an image to use as the icon for this message. Must be used in
            conjunction with `as_user` set to false, otherwise ignored. See
            [authorship](https://slack.dev) below.
          type: string
        link_names:
          description: Find and link channel names and usernames.
          type: boolean
        parse:
          description: >-
            Change how messages are treated. Defaults to `none`. See
            [below](https://slack.dev).
          type: string
        text:
          description: >-
            How this field works and whether it is required depends on other
            fields you use in your API call. [See below](https://slack.dev) for
            more detail.
          type: string
        thread_ts:
          description: >-
            Provide another message's `ts` value to post this message in a
            thread. Avoid using a reply's `ts` value; use its parent's value
            instead. Ephemeral messages in threads are only shown if there is
            already an active thread.
          type: string
        user:
          description: >-
            `id` of the user who will receive the ephemeral message. The user
            should be in the channel specified by the `channel` argument.
          type: string
        username:
          description: >-
            Set your bot's user name. Must be used in conjunction with `as_user`
            set to false, otherwise ignored. See [authorship](https://slack.dev)
            below.
          type: string
      required:
        - channel
        - user
      type: object
    ChatPostMessageRequest:
      properties:
        as_user:
          description: >-
            Pass true to post the message as the authed user, instead of as a
            bot. Defaults to false. See [authorship](https://slack.dev) below.
          type: string
        attachments:
          description: >-
            A JSON-based array of structured attachments, presented as a
            URL-encoded string.
          type: string
        blocks:
          description: >-
            A JSON-based array of structured blocks, presented as a URL-encoded
            string.
          type: string
        channel:
          description: >-
            Channel, private group, or IM channel to send message to. Can be an
            encoded ID, or a name. See [below](https://slack.dev) for more
            details.
          type: string
        icon_emoji:
          description: >-
            Emoji to use as the icon for this message. Overrides `icon_url`.
            Must be used in conjunction with `as_user` set to `false`, otherwise
            ignored. See [authorship](https://slack.dev) below.
          type: string
        icon_url:
          description: >-
            URL to an image to use as the icon for this message. Must be used in
            conjunction with `as_user` set to false, otherwise ignored. See
            [authorship](https://slack.dev) below.
          type: string
        link_names:
          description: Find and link channel names and usernames.
          type: boolean
        mrkdwn:
          description: >-
            Disable Slack markup parsing by setting to `false`. Enabled by
            default.
          type: boolean
        parse:
          description: >-
            Change how messages are treated. Defaults to `none`. See
            [below](https://slack.dev).
          type: string
        reply_broadcast:
          description: >-
            Used in conjunction with `thread_ts` and indicates whether reply
            should be made visible to everyone in the channel or conversation.
            Defaults to `false`.
          type: boolean
        text:
          description: >-
            How this field works and whether it is required depends on other
            fields you use in your API call. [See below](https://slack.dev) for
            more detail.
          type: string
        thread_ts:
          description: >-
            Provide another message's `ts` value to make this message a reply.
            Avoid using a reply's `ts` value; use its parent instead.
          type: string
        unfurl_links:
          description: Pass true to enable unfurling of primarily text-based content.
          type: boolean
        unfurl_media:
          description: Pass false to disable unfurling of media content.
          type: boolean
        username:
          description: >-
            Set your bot's user name. Must be used in conjunction with `as_user`
            set to false, otherwise ignored. See [authorship](https://slack.dev)
            below.
          type: string
      required:
        - channel
      type: object
    ChatScheduleMessageRequest:
      properties:
        as_user:
          description: >-
            Pass true to post the message as the authed user, instead of as a
            bot. Defaults to false. See
            [chat.postMessage](chat.postMessage#authorship).
          type: boolean
        attachments:
          description: >-
            A JSON-based array of structured attachments, presented as a
            URL-encoded string.
          type: string
        blocks:
          description: >-
            A JSON-based array of structured blocks, presented as a URL-encoded
            string.
          type: string
        channel:
          description: >-
            Channel, private group, or DM channel to send message to. Can be an
            encoded ID, or a name. See [below](https://slack.dev) for more
            details.
          type: string
        link_names:
          description: Find and link channel names and usernames.
          type: boolean
        parse:
          description: >-
            Change how messages are treated. Defaults to `none`. See
            [chat.postMessage](chat.postMessage#formatting).
          type: string
        post_at:
          description: Unix EPOCH timestamp of time in future to send the message.
          type: string
        reply_broadcast:
          description: >-
            Used in conjunction with `thread_ts` and indicates whether reply
            should be made visible to everyone in the channel or conversation.
            Defaults to `false`.
          type: boolean
        text:
          description: >-
            How this field works and whether it is required depends on other
            fields you use in your API call. [See below](https://slack.dev) for
            more detail.
          type: string
        thread_ts:
          description: >-
            Provide another message's `ts` value to make this message a reply.
            Avoid using a reply's `ts` value; use its parent instead.
          type: number
        unfurl_links:
          description: Pass true to enable unfurling of primarily text-based content.
          type: boolean
        unfurl_media:
          description: Pass false to disable unfurling of media content.
          type: boolean
      type: object
    ChatUnfurlRequest:
      properties:
        channel:
          description: Channel ID of the message
          type: string
        ts:
          description: Timestamp of the message to add unfurl behavior to.
          type: string
        unfurls:
          description: >-
            URL-encoded JSON map with keys set to URLs featured in the the
            message, pointing to their unfurl blocks or message attachments.
          type: string
        user_auth_message:
          description: >-
            Provide a simply-formatted string to send as an ephemeral message to
            the user as invitation to authenticate further and enable full
            unfurling behavior
          type: string
        user_auth_required:
          description: >-
            Set to `true` or `1` to indicate the user must install your Slack
            app to trigger unfurls for this domain
          type: boolean
        user_auth_url:
          description: >-
            Send users to this custom URL where they will complete
            authentication in your app to fully trigger unfurling. Value should
            be properly URL-encoded.
          type: string
      required:
        - channel
        - ts
      type: object
    ChatUpdateRequest:
      properties:
        as_user:
          description: >-
            Pass true to update the message as the authed user. [Bot
            users](https://slack.dev) in this context are considered authed
            users.
          type: string
        attachments:
          description: >-
            A JSON-based array of structured attachments, presented as a
            URL-encoded string. This field is required when not presenting
            `text`. If you don't include this field, the message's previous
            `attachments` will be retained. To remove previous `attachments`,
            include an empty array for this field.
          type: string
        blocks:
          description: >-
            A JSON-based array of [structured blocks](https://slack.dev),
            presented as a URL-encoded string. If you don't include this field,
            the message's previous `blocks` will be retained. To remove previous
            `blocks`, include an empty array for this field.
          type: string
        channel:
          description: Channel containing the message to be updated.
          type: string
        link_names:
          description: >-
            Find and link channel names and usernames. Defaults to `none`. If
            you do not specify a value for this field, the original value set
            for the message will be overwritten with the default, `none`.
          type: string
        parse:
          description: >-
            Change how messages are treated. Defaults to `client`, unlike
            `chat.postMessage`. Accepts either `none` or `full`. If you do not
            specify a value for this field, the original value set for the
            message will be overwritten with the default, `client`.
          type: string
        text:
          description: >-
            New text for the message, using the [default formatting
            rules](https://slack.dev). It's not required when presenting
            `blocks` or `attachments`.
          type: string
        ts:
          description: Timestamp of the message to be updated.
          type: string
      required:
        - channel
        - ts
      type: object
    ConversationsArchiveRequest:
      properties:
        channel:
          description: ID of conversation to archive
          type: string
      type: object
    ConversationsCloseRequest:
      properties:
        channel:
          description: Conversation to close.
          type: string
      type: object
    ConversationsCreateRequest:
      properties:
        is_private:
          description: Create a private channel instead of a public one
          type: boolean
        name:
          description: Name of the public or private channel to create
          type: string
      type: object
    ConversationsInviteRequest:
      properties:
        channel:
          description: The ID of the public or private channel to invite user(s) to.
          type: string
        users:
          description: A comma separated list of user IDs. Up to 1000 users may be listed.
          type: string
      type: object
    ConversationsJoinRequest:
      properties:
        channel:
          description: ID of conversation to join
          type: string
      type: object
    ConversationsKickRequest:
      properties:
        channel:
          description: ID of conversation to remove user from.
          type: string
        user:
          description: User ID to be removed.
          type: string
      type: object
    ConversationsLeaveRequest:
      properties:
        channel:
          description: Conversation to leave
          type: string
      type: object
    ConversationsMarkRequest:
      properties:
        channel:
          description: Channel or conversation to set the read cursor for.
          type: string
        ts:
          description: >-
            Unique identifier of message you want marked as most recently seen
            in this conversation.
          type: number
      type: object
    ConversationsOpenRequest:
      properties:
        channel:
          description: >-
            Resume a conversation by supplying an `im` or `mpim`'s ID. Or
            provide the `users` field instead.
          type: string
        return_im:
          description: >-
            Boolean, indicates you want the full IM channel definition in the
            response.
          type: boolean
        users:
          description: >-
            Comma separated lists of users. If only one user is included, this
            creates a 1:1 DM.  The ordering of the users is preserved whenever a
            multi-person direct message is returned. Supply a `channel` when not
            supplying `users`.
          type: string
      type: object
    ConversationsRenameRequest:
      properties:
        channel:
          description: ID of conversation to rename
          type: string
        name:
          description: New name for conversation.
          type: string
      type: object
    ConversationsSetPurposeRequest:
      properties:
        channel:
          description: Conversation to set the purpose of
          type: string
        purpose:
          description: A new, specialer purpose
          type: string
      type: object
    ConversationsSetTopicRequest:
      properties:
        channel:
          description: Conversation to set the topic of
          type: string
        topic:
          description: The new topic string. Does not support formatting or linkification.
          type: string
      type: object
    ConversationsUnarchiveRequest:
      properties:
        channel:
          description: ID of conversation to unarchive
          type: string
      type: object
    DndSetSnoozeRequest:
      properties:
        num_minutes:
          description: Number of minutes, from now, to snooze until.
          type: string
        token:
          description: 'Authentication token. Requires scope: `dnd:write`'
          type: string
      required:
        - token
        - num_minutes
      type: object
    FilescommentsDeleteCommentRequest:
      properties:
        file:
          description: File to delete a comment from.
          type: string
        id:
          description: The comment to delete.
          type: string
      type: object
    FilesDeleteRequest:
      properties:
        file:
          description: ID of file to delete.
          type: string
      type: object
    FilesremoteAddFromRemoteRequest:
      properties:
        title:
          description: Title of the file being shared.
          type: string
        external_id:
          description: Creator defined GUID for the file.
          type: string
        external_url:
          description: URL of the remote file.
          type: string
        filetype:
          description: type of file
          type: string
        indexable_file_contents:
          description: >-
            A text file (txt, pdf, doc, etc.) containing textual search terms
            that are used to improve discovery of the remote file.
          type: string
        preview_image:
          description: Preview of the document via `multipart/form-data`.
          type: string
        token:
          description: 'Authentication token. Requires scope: `remote_files:write`'
          type: string
      type: object
    FilesremoteDeleteFileRequest:
      properties:
        external_id:
          description: Creator defined GUID for the file.
          type: string
        file:
          description: Specify a file by providing its ID.
          type: string
        token:
          description: 'Authentication token. Requires scope: `remote_files:write`'
          type: string
      type: object
    FilesremoteUpdateRemoteFileRequest:
      properties:
        title:
          description: Title of the file being shared.
          type: string
        external_id:
          description: Creator defined GUID for the file.
          type: string
        external_url:
          description: URL of the remote file.
          type: string
        file:
          description: Specify a file by providing its ID.
          type: string
        filetype:
          description: type of file
          type: string
        indexable_file_contents:
          description: >-
            File containing contents that can be used to improve searchability
            for the remote file.
          type: string
        preview_image:
          description: Preview of the document via `multipart/form-data`.
          type: string
        token:
          description: 'Authentication token. Requires scope: `remote_files:write`'
          type: string
      type: object
    FilesRevokePublicUrlRequest:
      properties:
        file:
          description: File to revoke
          type: string
      type: object
    FilesSharedPublicUrlRequest:
      properties:
        file:
          description: File to share
          type: string
      type: object
    FilesUploadRequest:
      properties:
        title:
          description: Title of file.
          type: string
        channels:
          description: >-
            Comma-separated list of channel names or IDs where the file will be
            shared.
          type: string
        content:
          description: >-
            File contents via a POST variable. If omitting this parameter, you
            must provide a `file`.
          type: string
        file:
          description: >-
            File contents via `multipart/form-data`. If omitting this parameter,
            you must submit `content`.
          type: string
        filename:
          description: Filename of file.
          type: string
        filetype:
          description: A [file type](https://slack.dev) identifier.
          type: string
        initial_comment:
          description: The message text introducing the file in specified `channels`.
          type: string
        thread_ts:
          description: >-
            Provide another message's `ts` value to upload this file as a reply.
            Never use a reply's `ts` value; use its parent instead.
          type: number
        token:
          description: 'Authentication token. Requires scope: `files:write:user`'
          type: string
      type: object
    PinsAddRequest:
      properties:
        channel:
          description: Channel to pin the item in.
          type: string
        timestamp:
          description: Timestamp of the message to pin.
          type: string
      required:
        - channel
      type: object
    PinsRemoveRequest:
      properties:
        channel:
          description: Channel where the item is pinned to.
          type: string
        timestamp:
          description: Timestamp of the message to un-pin.
          type: string
      required:
        - channel
      type: object
    ReactionsAddRequest:
      properties:
        channel:
          description: Channel where the message to add reaction to was posted.
          type: string
        name:
          description: Reaction (emoji) name.
          type: string
        timestamp:
          description: Timestamp of the message to add reaction to.
          type: string
      required:
        - channel
        - name
        - timestamp
      type: object
    ReactionsRemoveRequest:
      properties:
        channel:
          description: Channel where the message to remove reaction from was posted.
          type: string
        file:
          description: File to remove reaction from.
          type: string
        file_comment:
          description: File comment to remove reaction from.
          type: string
        name:
          description: Reaction (emoji) name.
          type: string
        timestamp:
          description: Timestamp of the message to remove reaction from.
          type: string
      required:
        - name
      type: object
    RemindersAddRequest:
      properties:
        text:
          description: The content of the reminder
          type: string
        time:
          description: >-
            When this reminder should happen: the Unix timestamp (up to five
            years from now), the number of seconds until the reminder (if within
            24 hours), or a natural language description (Ex. "in 15 minutes,"
            or "every Thursday")
          type: string
        user:
          description: >-
            The user who will receive the reminder. If no user is specified, the
            reminder will go to user who created it.
          type: string
      required:
        - text
        - time
      type: object
    RemindersCompleteRequest:
      properties:
        reminder:
          description: The ID of the reminder to be marked as complete
          type: string
      type: object
    RemindersDeleteRequest:
      properties:
        reminder:
          description: The ID of the reminder
          type: string
      type: object
    StarsAddRequest:
      properties:
        channel:
          description: >-
            Channel to add star to, or channel where the message to add star to
            was posted (used with `timestamp`).
          type: string
        file:
          description: File to add star to.
          type: string
        file_comment:
          description: File comment to add star to.
          type: string
        timestamp:
          description: Timestamp of the message to add star to.
          type: string
      type: object
    StarsRemoveRequest:
      properties:
        channel:
          description: >-
            Channel to remove star from, or channel where the message to remove
            star from was posted (used with `timestamp`).
          type: string
        file:
          description: File to remove star from.
          type: string
        file_comment:
          description: File comment to remove star from.
          type: string
        timestamp:
          description: Timestamp of the message to remove star from.
          type: string
      type: object
    UsergroupsCreateRequest:
      properties:
        description:
          description: A short description of the User Group.
          type: string
        channels:
          description: >-
            A comma separated string of encoded channel IDs for which the User
            Group uses as a default.
          type: string
        handle:
          description: >-
            A mention handle. Must be unique among channels, users and User
            Groups.
          type: string
        include_count:
          description: Include the number of users in each User Group.
          type: boolean
        name:
          description: A name for the User Group. Must be unique among User Groups.
          type: string
      required:
        - name
      type: object
    UsergroupsDisableRequest:
      properties:
        include_count:
          description: Include the number of users in the User Group.
          type: boolean
        usergroup:
          description: The encoded ID of the User Group to disable.
          type: string
      required:
        - usergroup
      type: object
    UsergroupsEnableRequest:
      properties:
        include_count:
          description: Include the number of users in the User Group.
          type: boolean
        usergroup:
          description: The encoded ID of the User Group to enable.
          type: string
      required:
        - usergroup
      type: object
    UsergroupsUpdateRequest:
      properties:
        description:
          description: A short description of the User Group.
          type: string
        channels:
          description: >-
            A comma separated string of encoded channel IDs for which the User
            Group uses as a default.
          type: string
        handle:
          description: >-
            A mention handle. Must be unique among channels, users and User
            Groups.
          type: string
        include_count:
          description: Include the number of users in the User Group.
          type: boolean
        name:
          description: A name for the User Group. Must be unique among User Groups.
          type: string
        usergroup:
          description: The encoded ID of the User Group to update.
          type: string
      required:
        - usergroup
      type: object
    UsergroupsusersUpdateListRequest:
      properties:
        include_count:
          description: Include the number of users in the User Group.
          type: boolean
        usergroup:
          description: The encoded ID of the User Group to update.
          type: string
        users:
          description: >-
            A comma separated string of encoded user IDs that represent the
            entire list of users for the User Group.
          type: string
      required:
        - usergroup
        - users
      type: object
    UsersDeletePhotoRequest:
      properties:
        token:
          description: 'Authentication token. Requires scope: `users.profile:write`'
          type: string
      required:
        - token
      type: object
    UsersprofileSetProfileInfoRequest:
      properties:
        name:
          description: Name of a single key to set. Usable only if `profile` is not passed.
          type: string
        profile:
          description: >-
            Collection of key:value pairs presented as a URL-encoded JSON hash.
            At most 50 fields may be set. Each field name is limited to 255
            characters.
          type: string
        user:
          description: >-
            ID of user to change. This argument may only be specified by team
            admins on paid teams.
          type: string
        value:
          description: >-
            Value to set a single key to. Usable only if `profile` is not
            passed.
          type: string
      type: object
    UsersSetPhotoRequest:
      properties:
        crop_w:
          description: Width/height of crop box (always square)
          type: string
        crop_x:
          description: X coordinate of top-left corner of crop box
          type: string
        crop_y:
          description: Y coordinate of top-left corner of crop box
          type: string
        image:
          description: File contents via `multipart/form-data`.
          type: string
        token:
          description: 'Authentication token. Requires scope: `users.profile:write`'
          type: string
      required:
        - token
      type: object
    UsersSetPresenceRequest:
      properties:
        presence:
          description: Either `auto` or `away`
          type: string
      required:
        - presence
      type: object
    AdminappsApproveAppInstallationResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminappsApproveAppInstallationdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminappsapprovedListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminappsapprovedListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminappsrequestsListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminappsrequestsListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminappsRestrictAppResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminappsRestrictAppdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminappsrestrictedGetListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminappsrestrictedGetListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminconversationsArchiveChannelResponse:
      title: admin.conversations.archive schema
      description: Schema for successful response of admin.conversations.archive
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsArchiveChanneldefaultResponse:
      title: admin.conversations.archive error schema
      description: Schema for error response from admin.conversations.archive
      properties:
        error:
          enum:
            - feature_not_enabled
            - channel_not_found
            - channel_type_not_supported
            - default_org_wide_channel
            - already_archived
            - cant_archive_general
            - restricted_action
            - could_not_archive_channel
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsConvertToPrivateChannelResponse:
      title: admin.conversations.convertToPrivate schema
      description: Schema for successful response of admin.conversations.convertToPrivate
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsConvertToPrivateChanneldefaultResponse:
      title: admin.conversations.convertToPrivate error schema
      description: Schema for error response from admin.conversations.convertToPrivate
      properties:
        error:
          enum:
            - feature_not_enabled
            - restricted_action
            - name_taken
            - channel_not_found
            - channel_type_not_supported
            - default_org_wide_channel
            - method_not_supported_for_channel_type
            - could_not_convert_channel
            - external_channel_migrating
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsCreateChannelBasedConversationResponse:
      title: admin.conversations.create schema
      description: Schema for successful response of admin.conversations.create
      properties:
        channel_id:
          $ref: '#/components/schemas/defs_channel_id'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsCreateChannelBasedConversationdefaultResponse:
      title: admin.conversations.create error schema
      description: Schema for error response from admin.conversations.create
      properties:
        error:
          enum:
            - feature_not_enabled
            - name_taken
            - restricted_action
            - team_not_found
            - invalid_team
            - invalid_name
            - could_not_create_channel
            - team_id_or_org_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsDeleteChannelResponse:
      title: admin.conversations.delete schema
      description: Schema for successful response of admin.conversations.delete
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsDeleteChanneldefaultResponse:
      title: admin.conversations.delete error schema
      description: Schema for error response from admin.conversations.delete
      properties:
        error:
          enum:
            - feature_not_enabled
            - not_an_admin
            - channel_not_found
            - channel_type_not_supported
            - default_org_wide_channel
            - restricted_action
            - could_not_delete_channel
            - missing_scope
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsDisconnectSharedChannelResponse:
      title: admin.conversations.rename schema
      description: Schema for successful response of admin.conversations.disconnectShared
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsDisconnectSharedChanneldefaultResponse:
      title: admin.conversations.disconnectShared error schema
      description: Schema for error response from admin.conversations.disconnectShared
      properties:
        error:
          enum:
            - feature_not_enabled
            - not_an_admin
            - not_an_enterprise
            - channel_not_found
            - not_supported
            - team_not_found
            - restricted_action
            - missing_scope
            - leaving_team_not_in_channel
            - no_teams_to_disconnect
            - leaving_team_required
            - cannot_kick_team
            - cannot_kick_home_team
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsekmListOriginalConnectedChannelInfoResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsekmListOriginalConnectedChannelInfodefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminconversationsGetConversationPrefsResponse:
      title: admin.conversations.getConversationPrefs schema
      description: >-
        Schema for successful response of
        admin.conversations.getConversationPrefs
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        prefs:
          properties:
            can_thread:
              properties:
                type:
                  items:
                    type: string
                  type: array
                user:
                  items:
                    type: string
                  type: array
              type: object
            who_can_post:
              properties:
                type:
                  items:
                    type: string
                  type: array
                user:
                  items:
                    type: string
                  type: array
              type: object
          type: object
      required:
        - ok
      type: object
    AdminconversationsGetConversationPrefsdefaultResponse:
      title: admin.conversations.unarchive error schema
      description: Schema for error response from admin.conversations.getConversationPrefs
      properties:
        error:
          enum:
            - feature_not_enabled
            - not_an_admin
            - not_an_enterprise
            - restricted_action
            - missing_scope
            - channel_not_found
            - channel_type_not_supported
            - could_not_get_conversation_prefs
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsGetTeamsListResponse:
      title: admin.conversations.getTeams schema
      description: Schema for successful response of admin.conversations.getTeams
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          properties:
            next_cursor:
              type: string
          required:
            - next_cursor
          type: object
        team_ids:
          items:
            $ref: '#/components/schemas/defs_team'
          type: array
      required:
        - ok
        - team_ids
      type: object
    AdminconversationsGetTeamsListdefaultResponse:
      title: admin.conversations.getTeams error schema
      description: Schema for error response from admin.conversations.getTeams
      properties:
        error:
          enum:
            - feature_not_enabled
            - channel_not_found
            - channel_type_not_supported
            - unsupported_team_type
            - restricted_action
            - could_not_get_teams
            - invalid_cursor
            - invalid_limit
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsInviteUserToChannelResponse:
      title: admin.conversations.invite schema
      description: Schema for successful response of admin.conversations.invite
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsInviteUserToChanneldefaultResponse:
      title: admin.conversations.invite error schema
      description: Schema for error response from admin.conversations.invite
      additionalProperties: true
      properties:
        error:
          enum:
            - feature_not_enabled
            - channel_not_found
            - channel_type_not_supported
            - default_org_wide_channel
            - restricted_action
            - user_must_be_admin
            - failed_for_some_users
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsRenameChannelResponse:
      title: admin.conversations.rename schema
      description: Schema for successful response of admin.conversations.rename
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsRenameChanneldefaultResponse:
      title: admin.conversations.unarchive error schema
      description: Schema for error response from admin.conversations.rename
      properties:
        error:
          enum:
            - feature_not_enabled
            - channel_not_found
            - channel_type_not_supported
            - restricted_action
            - could_not_rename_channel
            - default_org_wide_channel
            - name_taken
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsrestrictAccessAddGroupIdpGroupsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsrestrictAccessAddGroupIdpGroupsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminconversationsrestrictAccessListGroupsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsrestrictAccessListGroupsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminconversationsrestrictAccessRemoveIdpGroupResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsrestrictAccessRemoveIdpGroupdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminconversationsSearchChannelsResponse:
      title: admin.conversations.search schema
      description: Schema for successful response of admin.conversations.search
      properties:
        channels:
          items:
            $ref: '#/components/schemas/objs_channel'
          type: array
        next_cursor:
          type: string
      required:
        - channels
        - next_cursor
      type: object
    AdminconversationsSearchChannelsdefaultResponse:
      title: admin.conversations.search error schema
      description: Schema for error response from admin.conversations.search
      properties:
        error:
          enum:
            - feature_not_enabled
            - not_an_admin
            - not_an_enterprise
            - team_not_found
            - not_allowed
            - invalid_auth
            - invalid_cursor
            - invalid_search_channel_type
            - invalid_sort
            - invalid_sort_dir
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsSetConversationPrefsResponse:
      title: admin.conversations.setConversationPrefs schema
      description: >-
        Schema for successful response of
        admin.conversations.setConversationPrefs
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsSetConversationPrefsdefaultResponse:
      title: admin.conversations.setConversationPrefs error schema
      description: Schema for error response from admin.conversations.setConversationPrefs
      properties:
        error:
          enum:
            - feature_not_enabled
            - not_an_admin
            - channel_not_found
            - channel_type_not_supported
            - restricted_action
            - missing_scope
            - could_not_set_channel_pref
            - default_org_wide_channel
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminconversationsSetTeamsWorkspaceConnectionResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsSetTeamsWorkspaceConnectiondefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminconversationsUnarchiveChannelResponse:
      title: admin.conversations.unarchive schema
      description: Schema for successful response of admin.conversations.unarchive
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminconversationsUnarchiveChanneldefaultResponse:
      title: admin.conversations.unarchive error schema
      description: Schema for error response from admin.conversations.unarchive
      properties:
        error:
          enum:
            - feature_not_enabled
            - channel_not_found
            - channel_not_archived
            - channel_type_not_supported
            - restricted_action
            - could_not_unarchive_channel
            - default_org_wide_channel
            - missing_scope
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AdminemojiAddEmojiResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminemojiAddEmojidefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminemojiAliasAddResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminemojiAliasAdddefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminemojiListEnterpriseEmojiResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminemojiListEnterpriseEmojidefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminemojiRemoveEnterpriseEmojiResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminemojiRemoveEnterpriseEmojidefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminemojiRenameEmojiResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminemojiRenameEmojidefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdmininviteRequestsApproveRequestResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdmininviteRequestsApproveRequestdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdmininviteRequestsapprovedListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdmininviteRequestsapprovedListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdmininviteRequestsdeniedListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdmininviteRequestsdeniedListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdmininviteRequestsDenyRequestResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdmininviteRequestsDenyRequestdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdmininviteRequestsListPendingWorkspaceInviteRequestsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdmininviteRequestsListPendingWorkspaceInviteRequestsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamsadminsGetAllResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamsadminsGetAlldefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamsCreateEnterpriseTeamResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamsCreateEnterpriseTeamdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamsListAllResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamsListAlldefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamsownersListOwnersResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamsownersListOwnersdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamssettingsGetInfoResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamssettingsGetInfodefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamssettingsSetDefaultChannelsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamssettingsSetDefaultChannelsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamssettingsSetDescriptionResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamssettingsSetDescriptiondefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamssettingsSetDiscoverabilityOfWorkspaceResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamssettingsSetDiscoverabilityOfWorkspacedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamssettingsSetIconResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamssettingsSetIcondefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminteamssettingsSetNameResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminteamssettingsSetNamedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusergroupsAddDefaultChannelsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusergroupsAddDefaultChannelsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusergroupsAssociateDefaultWorkspacesResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusergroupsAssociateDefaultWorkspacesdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusergroupsListChannelsGetResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusergroupsListChannelsGetdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusergroupsRemoveChannelsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusergroupsRemoveChannelsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersAddWorkspaceUserResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersAddWorkspaceUserdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersInviteUserToWorkspaceResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersInviteUserToWorkspacedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersListWorkspaceUsersResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersListWorkspaceUsersdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersRemoveUserFromWorkspaceResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersRemoveUserFromWorkspacedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminuserssessionInvalidateSessionResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminuserssessionInvalidateSessiondefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminuserssessionResetSessionsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminuserssessionResetSessionsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersSetAdminUserResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersSetAdminUserdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersSetExpirationGuestResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersSetExpirationGuestdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersSetWorkspaceOwnerResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersSetWorkspaceOwnerdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AdminusersSetRegularUserResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AdminusersSetRegularUserdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    ApiTestResponse:
      title: api.test success schema
      description: Schema for successful response api.test method
      additionalProperties:
        type: object
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ApiTestdefaultResponse:
      title: api.test error schema
      description: Schema for error response api.test method
      additionalProperties:
        type: object
      properties:
        error:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AppseventauthorizationsGetListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AppseventauthorizationsGetListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AppspermissionsListPermissionsResponse:
      title: apps.permissions.info schema
      description: Schema for successful response from apps.permissions.info method
      properties:
        info:
          properties:
            app_home:
              properties:
                resources:
                  $ref: '#/components/schemas/objs_resources'
                scopes:
                  $ref: '#/components/schemas/objs_scopes'
              type: object
            channel:
              properties:
                resources:
                  $ref: '#/components/schemas/objs_resources'
                scopes:
                  $ref: '#/components/schemas/objs_scopes'
              type: object
            group:
              properties:
                resources:
                  $ref: '#/components/schemas/objs_resources'
                scopes:
                  $ref: '#/components/schemas/objs_scopes'
              type: object
            im:
              properties:
                resources:
                  $ref: '#/components/schemas/objs_resources'
                scopes:
                  $ref: '#/components/schemas/objs_scopes'
              type: object
            mpim:
              properties:
                resources:
                  $ref: '#/components/schemas/objs_resources'
                scopes:
                  $ref: '#/components/schemas/objs_scopes'
              type: object
            team:
              properties:
                resources:
                  $ref: '#/components/schemas/objs_resources'
                scopes:
                  $ref: '#/components/schemas/objs_scopes'
              required:
                - scopes
                - resources
              type: object
          required:
            - team
            - channel
            - group
            - mpim
            - im
            - app_home
          type: object
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - info
      type: object
    AppspermissionsListPermissionsdefaultResponse:
      title: apps.permissions.info error schema
      description: Schema for error response from apps.permissions.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AppspermissionsAdditionalScopesRequestResponse:
      title: apps.permissions.request schema
      description: Schema for successful response from apps.permissions.request method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AppspermissionsAdditionalScopesRequestdefaultResponse:
      title: apps.permissions.request error schema
      description: Schema for error response from apps.permissions.request method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_trigger
            - trigger_exchanged
            - invalid_scope
            - invalid_user
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AppspermissionsresourcesGetResourcesListResponse:
      title: apps.permissions.resources.list success schema
      description: Schema for successful response apps.permissions.resources.list method
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        resources:
          items:
            properties:
              id:
                title: An ID for a resource
                type: string
                x-examples:
                  - T0DES3UAN
                  - C0ABC1ABC
              type:
                title: The type of resource the `id` corresponds to
                type: string
                x-examples:
                  - team
                  - channel
                  - mpim
            type: object
          type: array
        response_metadata:
          properties:
            next_cursor:
              type: string
              x-examples:
                - dGVhbTpDMUg5UkVTR0w=
          required:
            - next_cursor
          type: object
      required:
        - ok
        - resources
      type: object
    AppspermissionsresourcesGetResourcesListdefaultResponse:
      title: apps.permissions.resources.list error schema
      description: Schema for error response from apps.permissions.resources.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_cursor
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AppspermissionsscopesGetListResponse:
      title: api.permissions.scopes.list success schema
      description: Schema for successful response api.permissions.scopes.list method
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        scopes:
          additionalProperties: true
          properties:
            app_home:
              $ref: '#/components/schemas/objs_scopes'
            channel:
              $ref: '#/components/schemas/objs_scopes'
            group:
              $ref: '#/components/schemas/objs_scopes'
            im:
              $ref: '#/components/schemas/objs_scopes'
            mpim:
              $ref: '#/components/schemas/objs_scopes'
            team:
              $ref: '#/components/schemas/objs_scopes'
            user:
              $ref: '#/components/schemas/objs_scopes'
          type: object
      required:
        - ok
        - scopes
      type: object
    AppspermissionsscopesGetListdefaultResponse:
      title: apps.permissions.scopes.list error schema
      description: Schema for error response from apps.permissions.scopes.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AppspermissionsusersListUserGrantsResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AppspermissionsusersListUserGrantsdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AppspermissionsusersRequestModalResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AppspermissionsusersRequestModaldefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    AppsUninstallResponse:
      title: apps.uninstall schema
      description: Schema for successful response from apps.uninstall method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    AppsUninstalldefaultResponse:
      title: apps.uninstall error schema
      description: Schema for error response from apps.uninstall method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_client_id
            - bad_client_secret
            - client_id_token_mismatch
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AuthRevokeResponse:
      title: auth.revoke schema
      description: Schema for successful response from auth.revoke method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        revoked:
          type: boolean
      required:
        - ok
        - revoked
      type: object
    AuthRevokedefaultResponse:
      title: auth.revoke error schema
      description: Schema for error response from auth.revoke method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    AuthTestResponse:
      title: auth.test success schema
      description: Schema for successful response auth.test method
      properties:
        bot_id:
          $ref: '#/components/schemas/defs_bot_id'
        is_enterprise_install:
          type: boolean
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        team:
          type: string
        team_id:
          $ref: '#/components/schemas/defs_team'
        url:
          type: string
        user:
          type: string
        user_id:
          $ref: '#/components/schemas/defs_user_id'
      required:
        - ok
        - url
        - team
        - user
        - team_id
        - user_id
      type: object
    AuthTestdefaultResponse:
      title: auth.test error schema
      description: Schema for error response auth.test method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - token_revoked
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    BotsInfoResponse:
      title: bots.info schema
      description: Schema for successful response from bots.info method
      properties:
        bot:
          properties:
            app_id:
              $ref: '#/components/schemas/defs_app_id'
            deleted:
              type: boolean
            icons:
              properties:
                image_36:
                  format: uri
                  type: string
                image_48:
                  format: uri
                  type: string
                image_72:
                  format: uri
                  type: string
              required:
                - image_36
                - image_48
                - image_72
              type: object
            id:
              $ref: '#/components/schemas/defs_bot_id'
            name:
              type: string
            updated:
              type: integer
            user_id:
              $ref: '#/components/schemas/defs_user_id'
          required:
            - id
            - deleted
            - name
            - updated
            - app_id
            - icons
          type: object
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - bot
      type: object
    BotsInfodefaultResponse:
      title: bots.info error schema
      description: Schema for error response from bots.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bot_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    CallsAddResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    CallsAdddefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    CallsEndResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    CallsEnddefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    CallsInfoResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    CallsInfodefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    CallsparticipantsAddNewParticipantResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    CallsparticipantsAddNewParticipantdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    CallsparticipantsRegisterRemovedResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    CallsparticipantsRegisterRemoveddefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    CallsUpdateResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    CallsUpdatedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    ChatDeleteResponse:
      title: chat.delete success schema
      description: Schema for successful response of chat.delete method
      properties:
        channel:
          $ref: '#/components/schemas/defs_channel'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        ts:
          $ref: '#/components/schemas/defs_ts'
      required:
        - ok
        - channel
        - ts
      type: object
    ChatDeletedefaultResponse:
      title: chat.delete error schema
      description: Schema for error response from chat.delete method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - message_not_found
            - channel_not_found
            - cant_delete_message
            - compliance_exports_prevent_deletion
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatDeleteScheduledMessageResponse:
      title: chat.deleteScheduledMessage schema
      description: Schema for successful response from chat.deleteScheduledMessage method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ChatDeleteScheduledMessagedefaultResponse:
      title: chat.deleteScheduledMessage error schema
      description: Schema for error response from chat.deleteScheduledMessage method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_scheduled_message_id
            - channel_not_found
            - bad_token
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - ekm_access_denied
            - missing_scope
            - invalid_arguments
            - invalid_arg_name
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatGetPermalinkResponse:
      title: chat.getPermalink success schema
      description: Schema for successful response chat.getPermalink
      properties:
        channel:
          $ref: '#/components/schemas/defs_channel'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        permalink:
          format: uri
          type: string
      required:
        - ok
        - channel
        - permalink
      type: object
    ChatGetPermalinkdefaultResponse:
      title: chat.getPermalink error schema
      description: Schema for error response from chat.getPermalink method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - channel_not_found
            - message_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatMeMessageResponse:
      title: chat.meMessage schema
      description: Schema for successful response from chat.meMessage method
      properties:
        channel:
          $ref: '#/components/schemas/defs_channel'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        ts:
          $ref: '#/components/schemas/defs_ts'
      required:
        - ok
      type: object
    ChatMeMessagedefaultResponse:
      title: chat.meMessage error schema
      description: Schema for error response from chat.meMessage method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - channel_not_found
            - not_in_channel
            - is_archived
            - msg_too_long
            - no_text
            - rate_limited
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatPostEphemeralResponse:
      title: chat.postEphemeral success schema
      description: Schema for successful response from chat.postEphemeral method
      properties:
        message_ts:
          $ref: '#/components/schemas/defs_ts'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - message_ts
      type: object
    ChatPostEphemeraldefaultResponse:
      title: chat.postEphemeral error schema
      description: Schema for error response from chat.postEphemeral method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - channel_not_found
            - is_archived
            - msg_too_long
            - no_text
            - restricted_action
            - too_many_attachments
            - user_not_in_channel
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatPostMessageResponse:
      title: chat.postMessage success schema
      description: Schema for successful response of chat.postMessage method
      properties:
        channel:
          $ref: '#/components/schemas/defs_channel'
        message:
          $ref: '#/components/schemas/objs_message'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        ts:
          $ref: '#/components/schemas/defs_ts'
      required:
        - ok
        - channel
        - ts
        - message
      type: object
    ChatPostMessagedefaultResponse:
      title: chat.postMessage error schema
      description: Schema for error response chat.postMessage method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - channel_not_found
            - not_in_channel
            - is_archived
            - msg_too_long
            - no_text
            - too_many_attachments
            - rate_limited
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatScheduleMessageResponse:
      title: chat.scheduleMessage success schema
      description: Schema for successful response of chat.scheduleMessage method
      properties:
        channel:
          $ref: '#/components/schemas/defs_channel'
        message:
          properties:
            bot_id:
              $ref: '#/components/schemas/defs_bot_id'
            bot_profile:
              $ref: '#/components/schemas/objs_bot_profile'
            team:
              $ref: '#/components/schemas/defs_team'
            text:
              type: string
            type:
              type: string
            user:
              $ref: '#/components/schemas/defs_user_id'
            username:
              type: string
          required:
            - type
            - text
            - bot_id
            - user
            - team
          type: object
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        post_at:
          pattern: ^\d{10}$
          type: integer
        scheduled_message_id:
          title: Scheduled Message ID
          pattern: ^[Q][A-Z0-9]{8,}$
          type: string
      required:
        - ok
        - channel
        - post_at
        - scheduled_message_id
        - message
      type: object
    ChatScheduleMessagedefaultResponse:
      title: chat.scheduleMessage error schema
      description: Schema for error response chat.scheduleMessage method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_time
            - time_in_past
            - time_too_far
            - channel_not_found
            - not_in_channel
            - is_archived
            - msg_too_long
            - no_text
            - restricted_action
            - restricted_action_read_only_channel
            - restricted_action_thread_only_channel
            - restricted_action_non_threadable_channel
            - too_many_attachments
            - rate_limited
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - ekm_access_denied
            - missing_scope
            - invalid_arguments
            - invalid_arg_name
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatscheduledMessagesListResponse:
      title: chat.scheduledMessages.list schema
      description: Schema for successful response from chat.scheduledMessages.list method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          properties:
            next_cursor:
              type: string
          required:
            - next_cursor
          type: object
        scheduled_messages:
          items:
            properties:
              channel_id:
                $ref: '#/components/schemas/defs_channel_id'
              date_created:
                pattern: ^\d{10}$
                type: integer
              id:
                pattern: ^[Q][A-Z0-9]{8,}$
                type: string
              post_at:
                pattern: ^\d{10}$
                type: integer
              text:
                type: string
            required:
              - id
              - channel_id
              - post_at
              - date_created
            type: object
          type: array
      required:
        - ok
        - scheduled_messages
        - response_metadata
      type: object
    ChatscheduledMessagesListdefaultResponse:
      title: chat.scheduledMessages.list error schema
      description: Schema for error response from chat.scheduledMessages.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_channel
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - ekm_access_denied
            - missing_scope
            - invalid_arguments
            - invalid_arg_name
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatUnfurlResponse:
      title: chat.unfurl success schema
      description: Schema for successful response from chat.unfurl method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ChatUnfurldefaultResponse:
      title: chat.unfurl error schema
      description: Schema for error response from chat.unfurl method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - cannot_unfurl_url
            - cannot_find_service
            - missing_unfurls
            - cannot_prompt
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ChatUpdateResponse:
      title: chat.update success schema
      description: Schema for successful response of chat.update method
      properties:
        channel:
          type: string
        message:
          title: Message object
          properties:
            attachments:
              items:
                type: object
              type: array
            blocks:
              type: object
            text:
              type: string
          required:
            - text
          type: object
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        text:
          type: string
        ts:
          type: string
      required:
        - ok
        - channel
        - ts
        - text
        - message
      type: object
    ChatUpdatedefaultResponse:
      title: chat.update error schema
      description: Schema for error response chat.update method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - message_not_found
            - cant_update_message
            - channel_not_found
            - edit_window_closed
            - msg_too_long
            - too_many_attachments
            - rate_limited
            - no_text
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - request_timeout
            - invalid_json
            - json_not_object
            - upgrade_required
            - fatal_error
            - is_inactive
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ConversationsArchiveResponse:
      title: conversations.archive success schema
      description: Schema for successful response conversations.archive method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ConversationsArchivedefaultResponse:
      title: conversations.archive error schema
      description: Schema for error response from conversations.archive method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - not_supported
            - channel_not_found
            - already_archived
            - cant_archive_general
            - restricted_action
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - user_is_ultra_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - team_added_to_org
            - missing_charset
            - superfluous_charset
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsCloseResponse:
      title: conversations.close success schema
      description: Schema for successful response conversations.close method
      properties:
        already_closed:
          type: boolean
        no_op:
          type: boolean
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ConversationsClosedefaultResponse:
      title: conversations.close error schema
      description: Schema for error response from conversations.close method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - channel_not_found
            - user_does_not_own_channel
            - missing_scope
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsCreateResponse:
      title: conversations.create success schema
      description: Schema for successful response conversations.create method
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsCreatedefaultResponse:
      title: conversations.create error schema
      description: Schema for error response from conversations.create method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        detail:
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - name_taken
            - restricted_action
            - no_channel
            - invalid_name_required
            - invalid_name_punctuation
            - invalid_name_maxlength
            - invalid_name_specials
            - invalid_name
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsHistoryResponse:
      title: conversations.history success schema
      description: Schema for successful response from conversations.history method
      properties:
        channel_actions_count:
          type: integer
        channel_actions_ts:
          items:
            anyOf:
              - type: integer
              - nullable: true
        has_more:
          type: boolean
        messages:
          items:
            $ref: '#/components/schemas/objs_message'
          minItems: 1
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        pin_count:
          type: integer
      required:
        - ok
        - messages
        - has_more
        - pin_count
        - channel_actions_ts
        - channel_actions_count
      type: object
    ConversationsHistorydefaultResponse:
      title: conversations.history error schema
      description: Schema for error response from conversations.history method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - missing_scope
            - channel_not_found
            - invalid_ts_latest
            - invalid_ts_oldest
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsInfoResponse:
      title: conversations.info success schema
      description: Schema for successful response conversations.info
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsInfodefaultResponse:
      title: conversations.info error schema
      description: Schema for error response from conversations.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - missing_scope
            - channel_not_found
            - team_added_to_org
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsInviteResponse:
      title: conversations.invite error schema
      description: Schema for successful response from conversations.invite method
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsInvitedefaultResponse:
      title: conversations.invite error schema
      description: Schema for error response from conversations.invite method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - user_not_found
            - no_user
            - cant_invite_self
            - not_in_channel
            - already_in_channel
            - is_archived
            - cant_invite
            - too_many_users
            - ura_max_channels
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - user_is_ultra_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - team_added_to_org
            - missing_charset
            - superfluous_charset
          type: string
        errors:
          title: errors is returned when an error associates an user
          items:
            properties:
              error:
                enum:
                  - method_not_supported_for_channel_type
                  - missing_scope
                  - channel_not_found
                  - user_not_found
                  - no_user
                  - cant_invite_self
                  - not_in_channel
                  - already_in_channel
                  - is_archived
                  - cant_invite
                  - too_many_users
                  - ura_max_channels
                  - not_authed
                  - invalid_auth
                  - account_inactive
                  - user_is_bot
                  - user_is_restricted
                  - user_is_ultra_restricted
                  - invalid_arg_name
                  - invalid_array_arg
                  - invalid_charset
                  - invalid_form_data
                  - invalid_post_type
                  - missing_post_type
                  - invalid_json
                  - json_not_object
                  - request_timeout
                  - upgrade_required
                  - team_added_to_org
                  - missing_charset
                  - superfluous_charset
                type: string
              ok:
                $ref: '#/components/schemas/defs_ok_false'
              user:
                $ref: '#/components/schemas/defs_user_id'
            required:
              - ok
              - error
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
      type: object
    ConversationsJoinResponse:
      title: conversations.join success schema
      description: Schema for successful response from conversations.join method
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          title: Response metadata
          properties:
            warnings:
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: true
          type: object
        warning:
          type: string
      required:
        - ok
        - channel
      type: object
    ConversationsJoindefaultResponse:
      title: conversations.join error schema
      description: Schema for error response from conversations.join method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - is_archived
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - user_is_ultra_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - team_added_to_org
            - missing_charset
            - superfluous_charset
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsKickResponse:
      title: conversations.kick success schema
      description: Schema for successful response conversations.kick method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ConversationsKickdefaultResponse:
      title: conversations.kick error schema
      description: Schema for error response conversations.kick method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - user_not_found
            - cant_kick_self
            - not_in_channel
            - cant_kick_from_general
            - restricted_action
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsLeaveResponse:
      title: conversations.leave success schema
      description: Schema for successful response from conversations.leave method
      properties:
        not_in_channel:
          enum:
            - true
          type: boolean
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ConversationsLeavedefaultResponse:
      title: conversations.leave error schema
      description: Schema for error response from conversations.leave method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - last_member
            - missing_scope
            - channel_not_found
            - is_archived
            - cant_leave_general
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - user_is_ultra_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - team_added_to_org
            - missing_charset
            - superfluous_charset
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsListResponse:
      title: conversations.list success schema
      description: Schema for successful response from conversations.list method
      properties:
        channels:
          items:
            $ref: '#/components/schemas/objs_conversation'
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          properties:
            next_cursor:
              type: string
          required:
            - next_cursor
          type: object
      required:
        - ok
        - channels
      type: object
    ConversationsListdefaultResponse:
      title: conversations.list error schema
      description: Schema for error response from conversations.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - missing_scope
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsMarkResponse:
      title: conversations.mark success schema
      description: Schema for successful response conversations.mark method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ConversationsMarkdefaultResponse:
      title: conversations.mark error schema
      description: Schema for error response from conversations.mark method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - invalid_timestamp
            - not_in_channel
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - not_allowed_token_type
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsMembersResponse:
      title: conversations.members success schema
      description: Schema for successful response conversations.members method
      properties:
        members:
          items:
            $ref: '#/components/schemas/defs_user_id'
          minItems: 1
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          properties:
            next_cursor:
              type: string
          required:
            - next_cursor
          type: object
      required:
        - ok
        - members
        - response_metadata
      type: object
    ConversationsMembersdefaultResponse:
      title: conversations.members error schema
      description: Schema for error response conversations.members method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - channel_not_found
            - invalid_limit
            - invalid_cursor
            - fetch_members_failed
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ConversationsOpenResponse:
      title: conversations.open success schema
      description: >-
        Schema for successful response from conversations.open method when
        opening channels, ims, mpims
      properties:
        already_open:
          type: boolean
        channel:
          items:
            anyOf:
              - $ref: '#/components/schemas/objs_conversation'
              - properties:
                  created:
                    type: string
                  id:
                    $ref: '#/components/schemas/defs_dm_id'
                  is_im:
                    type: boolean
                  is_open:
                    type: boolean
                  last_read:
                    $ref: '#/components/schemas/defs_ts'
                  latest:
                    $ref: '#/components/schemas/objs_message'
                  unread_count:
                    type: number
                  unread_count_display:
                    type: number
                  user:
                    $ref: '#/components/schemas/defs_user_id'
                required:
                  - id
                type: object
        no_op:
          type: boolean
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsOpendefaultResponse:
      title: conversations.open error schema
      description: Schema for error response from conversations.open method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - user_not_found
            - user_not_visible
            - user_disabled
            - users_list_not_supplied
            - not_enough_users
            - too_many_users
            - invalid_user_combination
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - channel_not_found
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ConversationsRenameResponse:
      title: conversations.rename success schema
      description: Schema for successful response from conversations.rename method
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsRenamedefaultResponse:
      title: conversations.rename error schema
      description: Schema for error response from conversations.rename method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - user_is_restricted
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - not_in_channel
            - not_authorized
            - invalid_name
            - name_taken
            - invalid_name_required
            - invalid_name_punctuation
            - invalid_name_maxlength
            - invalid_name_specials
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsRepliesResponse:
      title: conversations.replies success schema
      description: Schema for successful response from conversations.replies method
      properties:
        has_more:
          type: boolean
        messages:
          items:
            items:
              anyOf:
                - properties:
                    last_read:
                      $ref: '#/components/schemas/defs_ts'
                    latest_reply:
                      $ref: '#/components/schemas/defs_ts'
                    reply_count:
                      type: integer
                    reply_users:
                      items:
                        $ref: '#/components/schemas/defs_user_id'
                      type: array
                      uniqueItems: true
                    reply_users_count:
                      type: integer
                    source_team:
                      $ref: '#/components/schemas/defs_team'
                    subscribed:
                      type: boolean
                    team:
                      $ref: '#/components/schemas/defs_team'
                    text:
                      type: string
                    thread_ts:
                      $ref: '#/components/schemas/defs_ts'
                    ts:
                      $ref: '#/components/schemas/defs_ts'
                    type:
                      type: string
                    unread_count:
                      type: integer
                    user:
                      $ref: '#/components/schemas/defs_user_id'
                    user_profile:
                      $ref: '#/components/schemas/objs_user_profile_short'
                    user_team:
                      $ref: '#/components/schemas/defs_team'
                  required:
                    - type
                    - user
                    - text
                    - thread_ts
                    - reply_count
                    - subscribed
                    - ts
                  type: object
                - properties:
                    is_starred:
                      type: boolean
                    parent_user_id:
                      $ref: '#/components/schemas/defs_user_id'
                    source_team:
                      $ref: '#/components/schemas/defs_team'
                    team:
                      $ref: '#/components/schemas/defs_team'
                    text:
                      type: string
                    thread_ts:
                      $ref: '#/components/schemas/defs_ts'
                    ts:
                      $ref: '#/components/schemas/defs_ts'
                    type:
                      type: string
                    user:
                      $ref: '#/components/schemas/defs_user_id'
                    user_profile:
                      $ref: '#/components/schemas/objs_user_profile_short'
                    user_team:
                      $ref: '#/components/schemas/defs_team'
                  required:
                    - type
                    - user
                    - text
                    - thread_ts
                    - parent_user_id
                    - ts
                  type: object
          type: array
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - messages
      type: object
    ConversationsRepliesdefaultResponse:
      title: conversations.replies error schema
      description: Schema for error response from conversations.replies method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - missing_scope
            - channel_not_found
            - thread_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsSetPurposeResponse:
      title: conversations.setPurpose success schema
      description: Schema for successful response from conversations.setPurpose method
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsSetPurposedefaultResponse:
      title: conversations.setPurpose error schema
      description: Schema for error response from conversations.setPurpose method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - not_in_channel
            - is_archived
            - too_long
            - user_is_restricted
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsSetTopicResponse:
      title: conversations.setTopic success schema
      description: Schema for successful response from conversations.setTopic method
      properties:
        channel:
          $ref: '#/components/schemas/objs_conversation'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - channel
      type: object
    ConversationsSetTopicdefaultResponse:
      title: conversations.setTopic error schema
      description: Schema for error response from conversations.setTopic method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - not_in_channel
            - is_archived
            - too_long
            - user_is_restricted
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    ConversationsUnarchiveResponse:
      title: conversations.unarchive success schema
      description: Schema for successful response from conversations.unarchive method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ConversationsUnarchivedefaultResponse:
      title: conversations.unarchive error schema
      description: Schema for error response from conversations.unarchive method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - channel_not_found
            - not_archived
            - not_authed
            - invalid_auth
            - account_inactive
            - user_is_bot
            - user_is_restricted
            - user_is_ultra_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - team_added_to_org
            - missing_charset
            - superfluous_charset
          type: string
        needed:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        provided:
          type: string
      required:
        - ok
        - error
      type: object
    DialogOpenResponse:
      title: dialog.open schema
      description: Schema for successful response from dialog.open method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    DialogOpendefaultResponse:
      title: dialog.open error schema
      description: Schema for error response from dialog.open method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - validation_errors
            - missing_trigger
            - missing_dialog
            - trigger_exchanged
            - trigger_expired
            - invalid_trigger
            - app_missing_action_url
            - cannot_create_dialog
            - failed_sending_dialog
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    DndEndDndResponse:
      title: dnd.endDnd schema
      description: Schema for successful response from dnd.endDnd method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    DndEndDnddefaultResponse:
      title: dnd.endDnd error schema
      description: Schema for error response from dnd.endDnd method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - unknown_error
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    DndEndSnoozeResponse:
      title: dnd.endSnooze schema
      description: Schema for successful response from dnd.endSnooze method
      properties:
        dnd_enabled:
          type: boolean
        next_dnd_end_ts:
          type: integer
        next_dnd_start_ts:
          type: integer
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        snooze_enabled:
          type: boolean
      required:
        - ok
        - dnd_enabled
        - next_dnd_start_ts
        - next_dnd_end_ts
        - snooze_enabled
      type: object
    DndEndSnoozedefaultResponse:
      title: dnd.endSnooze error schema
      description: Schema for error response from dnd.endSnooze method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - snooze_not_active
            - snooze_end_failed
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    DndInfoResponse:
      title: dnd.info schema
      description: Schema for successful response from dnd.info method
      properties:
        dnd_enabled:
          type: boolean
        next_dnd_end_ts:
          type: integer
        next_dnd_start_ts:
          type: integer
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        snooze_enabled:
          type: boolean
        snooze_endtime:
          type: integer
        snooze_remaining:
          type: integer
      required:
        - ok
        - dnd_enabled
        - next_dnd_start_ts
        - next_dnd_end_ts
      type: object
    DndInfodefaultResponse:
      title: dnd.info error schema
      description: Schema for error response from dnd.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - user_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    DndSetSnoozeResponse:
      title: dnd.setSnooze schema
      description: Schema for successful response from dnd.setSnooze method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        snooze_enabled:
          type: boolean
        snooze_endtime:
          type: integer
        snooze_remaining:
          type: integer
      required:
        - ok
        - snooze_enabled
        - snooze_endtime
        - snooze_remaining
      type: object
    DndSetSnoozedefaultResponse:
      title: dnd.setSnooze error schema
      description: Schema for error response from dnd.setSnooze method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - missing_duration
            - snooze_failed
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - too_long
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    DndTeamInfoResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    DndTeamInfodefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    EmojiListResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    EmojiListdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilescommentsDeleteCommentResponse:
      title: files.comments.delete schema
      description: Schema for successful response files.comments.delete method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilescommentsDeleteCommentdefaultResponse:
      title: files.comments.delete error schema
      description: Schema for error response files.comments.delete method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - cant_delete
            - comment_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    FilesDeleteResponse:
      title: files.delete schema
      description: Schema for successful response files.delete method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesDeletedefaultResponse:
      title: files.delete error schema
      description: Schema for error response files.delete method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - file_not_found
            - file_deleted
            - cant_delete_file
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    FilesInfoResponse:
      title: files.info schema
      description: Schema for successful response from files.info method
      properties:
        comments:
          $ref: '#/components/schemas/objs_comments'
        content_html:
          nullable: true
        editor:
          $ref: '#/components/schemas/defs_user_id'
        file:
          $ref: '#/components/schemas/objs_file'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        paging:
          $ref: '#/components/schemas/objs_paging'
        response_metadata:
          $ref: '#/components/schemas/objs_response_metadata'
      required:
        - ok
        - file
        - comments
      type: object
    FilesInfodefaultResponse:
      title: files.info error schema
      description: Schema for error response from files.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - file_not_found
            - file_deleted
            - timezone_count_failed
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    FilesListResponse:
      title: files.list schema
      description: Schema for successful response from files.list method
      properties:
        files:
          items:
            $ref: '#/components/schemas/objs_file'
          minItems: 0
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        paging:
          $ref: '#/components/schemas/objs_paging'
      required:
        - ok
        - files
        - paging
      type: object
    FilesListdefaultResponse:
      title: files.list error schema
      description: Schema for error response from files.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - user_not_found
            - unknown_type
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    FilesremoteAddFromRemoteResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesremoteAddFromRemotedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilesremoteGetInfoResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesremoteGetInfodefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilesremoteListRemoteFilesResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesremoteListRemoteFilesdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilesremoteDeleteFileResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesremoteDeleteFiledefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilesremoteShareRemoteFileResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesremoteShareRemoteFiledefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilesremoteUpdateRemoteFileResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    FilesremoteUpdateRemoteFiledefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    FilesRevokePublicUrlResponse:
      title: files.revokePublicURL schema
      description: Schema for successful response from files.revokePublicURL method
      properties:
        file:
          $ref: '#/components/schemas/objs_file'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - file
      type: object
    FilesRevokePublicUrldefaultResponse:
      title: files.revokePublicURL error schema
      description: Schema for error response from files.revokePublicURL method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - file_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    FilesSharedPublicUrlResponse:
      title: files.sharedPublicURL schema
      description: Schema for successful response from files.sharedPublicURL method
      properties:
        file:
          $ref: '#/components/schemas/objs_file'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - file
      type: object
    FilesSharedPublicUrldefaultResponse:
      title: files.sharedPublicURL error schema
      description: Schema for error response from files.sharedPublicURL method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - file_not_found
            - not_allowed
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    FilesUploadResponse:
      title: files.upload schema
      description: Schema for successful response files.upload method
      properties:
        file:
          $ref: '#/components/schemas/objs_file'
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
        - file
      type: object
    FilesUploaddefaultResponse:
      title: files.upload error schema
      description: Schema for error response files.upload method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - posting_to_general_channel_denied
            - invalid_channel
            - file_uploads_disabled
            - file_uploads_except_images_disabled
            - storage_limit_reached
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    MigrationExchangeResponse:
      title: migration.exchange success schema
      description: Schema for successful response from migration.exchange method
      additionalProperties: true
      properties:
        enterprise_id:
          title: The enterprise grid organization ID containing the workspace/team.
          type: string
        invalid_user_ids:
          title: A list of User IDs that cannot be mapped or found
          items:
            type: string
          type: array
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        team_id:
          $ref: '#/components/schemas/defs_team'
        user_id_map:
          title: A mapping of provided user IDs with mapped user IDs
          additionalProperties: true
          type: object
      required:
        - ok
        - team_id
        - enterprise_id
      type: object
    MigrationExchangedefaultResponse:
      title: migration.exchange error schema
      description: Schema for error response from migration.exchange method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_enterprise_team
            - too_many_users
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    OauthAccessResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    OauthAccessdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    OauthTokenResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    OauthTokendefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    Oauthv2ExchangeTokenResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    Oauthv2ExchangeTokendefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    PinsAddResponse:
      title: pins.add schema
      description: Schema for successful response from pins.add method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    PinsAdddefaultResponse:
      title: pins.add error schema
      description: Schema for error response from pins.add method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - message_not_found
            - channel_not_found
            - no_item_specified
            - already_pinned
            - permission_denied
            - file_not_shared
            - not_pinnable
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    PinsListResponse:
      title: pins.list success schema
      description: Schema for successful response from pins.list method
      items:
        anyOf:
          - properties:
              items:
                items:
                  anyOf:
                    - title: File Pin
                      properties:
                        created:
                          type: integer
                        created_by:
                          $ref: '#/components/schemas/defs_user_id'
                        file:
                          $ref: '#/components/schemas/objs_file'
                        type:
                          enum:
                            - file
                          type: string
                      type: object
                    - title: Message Pin
                      properties:
                        channel:
                          $ref: '#/components/schemas/defs_channel'
                        created:
                          type: integer
                        created_by:
                          $ref: '#/components/schemas/defs_user_id'
                        message:
                          $ref: '#/components/schemas/objs_message'
                        type:
                          enum:
                            - message
                          type: string
                      type: object
                type: array
                uniqueItems: true
              ok:
                $ref: '#/components/schemas/defs_ok_true'
            required:
              - ok
              - items
            type: object
          - properties:
              count:
                type: integer
              ok:
                $ref: '#/components/schemas/defs_ok_true'
            required:
              - ok
              - count
            type: object
    PinsListdefaultResponse:
      title: pins.list error schema
      description: Schema for error response from pins.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - channel_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    PinsRemoveResponse:
      title: pins.remove schema
      description: Schema for successful response from pins.remove method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    PinsRemovedefaultResponse:
      title: pins.remove error schema
      description: Schema for error response from pins.remove method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - file_not_found
            - file_comment_not_found
            - message_not_found
            - no_item_specified
            - not_pinned
            - permission_denied
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_typ
            - missing_post_typ
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeou
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ReactionsAddResponse:
      title: reactions.add schema
      description: Schema for successful response from reactions.add method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ReactionsAdddefaultResponse:
      title: reactions.add error schema
      description: Schema for error response from reactions.add method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - message_not_found
            - no_item_specified
            - invalid_name
            - already_reacted
            - too_many_emoji
            - too_many_reactions
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ReactionsGetResponse:
      title: reactions.get success schema
      description: Schema for successful response from reactions.get method
      items:
        anyOf:
          - additionalProperties: false
            properties:
              channel:
                $ref: '#/components/schemas/defs_channel'
              message:
                $ref: '#/components/schemas/objs_message'
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              type:
                enum:
                  - message
                type: string
            required:
              - ok
              - type
              - channel
              - message
          - additionalProperties: false
            properties:
              file:
                $ref: '#/components/schemas/objs_file'
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              type:
                enum:
                  - file
                type: string
            required:
              - ok
              - type
              - file
          - additionalProperties: false
            properties:
              comment:
                $ref: '#/components/schemas/objs_comment'
              file:
                $ref: '#/components/schemas/objs_file'
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              type:
                enum:
                  - file_comment
                type: string
            required:
              - ok
              - type
              - file
              - comment
      type: object
    ReactionsGetdefaultResponse:
      title: reactions.get error schema
      description: Schema for error response from reactions.get method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - file_not_found
            - file_comment_not_found
            - message_not_found
            - no_item_specified
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ReactionsListResponse:
      title: reactions.list schema
      description: Schema for successful response from reactions.list method
      properties:
        items:
          items:
            items:
              anyOf:
                - properties:
                    channel:
                      $ref: '#/components/schemas/defs_channel'
                    message:
                      $ref: '#/components/schemas/objs_message'
                    type:
                      enum:
                        - message
                      type: string
                  required:
                    - type
                    - channel
                    - message
                  type: object
                - properties:
                    file:
                      $ref: '#/components/schemas/objs_file'
                    type:
                      enum:
                        - file
                      type: string
                  required:
                    - type
                    - file
                  type: object
                - properties:
                    comment:
                      $ref: '#/components/schemas/objs_comment'
                    file:
                      $ref: '#/components/schemas/objs_file'
                    type:
                      enum:
                        - file_comment
                      type: string
                  required:
                    - type
                    - file
                    - comment
                  type: object
          type: array
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        paging:
          $ref: '#/components/schemas/objs_paging'
        response_metadata:
          $ref: '#/components/schemas/objs_response_metadata'
      required:
        - ok
        - items
      type: object
    ReactionsListdefaultResponse:
      title: reactions.list error schema
      description: Schema for error response from reactions.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - user_not_found
            - not_authed
            - invalid_auth
            - account_inactiv
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ReactionsRemoveResponse:
      title: reactions.remove schema
      description: Schema for successful response from reactions.remove method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ReactionsRemovedefaultResponse:
      title: reactions.remove error schema
      description: Schema for error response from reactions.remove method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - file_not_found
            - file_comment_not_found
            - message_not_found
            - no_item_specified
            - invalid_name
            - no_reaction
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    RemindersAddResponse:
      title: reminders.add schema
      description: Schema for successful response from reminders.add method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        reminder:
          $ref: '#/components/schemas/objs_reminder'
      required:
        - ok
        - reminder
      type: object
    RemindersAdddefaultResponse:
      title: reminders.add error schema
      description: Schema for error response from reminders.add method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - cannot_parse
            - user_not_found
            - cannot_add_bot
            - cannot_add_slackbot
            - cannot_add_others
            - cannot_add_others_recurring
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    RemindersCompleteResponse:
      title: reminders.complete schema
      description: Schema for successful response from reminders.complete method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    RemindersCompletedefaultResponse:
      title: reminders.complete error schema
      description: Schema for error response from reminders.complete method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_found
            - cannot_complete_recurring
            - cannot_complete_others
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    RemindersDeleteResponse:
      title: reminders.delete schema
      description: Schema for successful response from reminders.delete method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    RemindersDeletedefaultResponse:
      title: reminders.delete error schema
      description: Schema for error response from reminders.delete method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    RemindersInfoResponse:
      title: reminders.info schema
      description: Schema for successful response from reminders.info method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        reminder:
          $ref: '#/components/schemas/objs_reminder'
      required:
        - ok
        - reminder
      type: object
    RemindersInfodefaultResponse:
      title: reminders.info error schema
      description: Schema for error response from reminders.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    RemindersListResponse:
      title: reminders.list schema
      description: Schema for successful response from reminders.list method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        reminders:
          items:
            $ref: '#/components/schemas/objs_reminder'
          type: array
      required:
        - ok
        - reminders
      type: object
    RemindersListdefaultResponse:
      title: reminders.list error schema
      description: Schema for error response from reminders.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    RtmConnectResponse:
      title: rtm.connect schema
      description: Schema for successful response from rtm.connect method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        self:
          properties:
            id:
              $ref: '#/components/schemas/defs_user_id'
            name:
              type: string
          required:
            - id
            - name
          type: object
        team:
          properties:
            domain:
              type: string
            id:
              $ref: '#/components/schemas/defs_team'
            name:
              type: string
          required:
            - id
            - name
            - domain
          type: object
        url:
          format: uri
          type: string
      required:
        - ok
        - url
        - team
        - self
      type: object
    RtmConnectdefaultResponse:
      title: rtm.connect error schema
      description: Schema for error response from rtm.connect method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    SearchMessagesResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    SearchMessagesdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    StarsAddResponse:
      title: stars.add schema
      description: Schema for successful response from stars.add method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    StarsAdddefaultResponse:
      title: stars.add error schema
      description: Schema for error response from stars.add method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - message_not_found
            - file_not_found
            - file_comment_not_found
            - channel_not_found
            - no_item_specified
            - already_starred
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    StarsListResponse:
      title: stars.list schema
      description: Schema for successful response from stars.list method
      properties:
        items:
          items:
            items:
              anyOf:
                - properties:
                    channel:
                      $ref: '#/components/schemas/defs_channel'
                    date_create:
                      type: integer
                    message:
                      $ref: '#/components/schemas/objs_message'
                    type:
                      enum:
                        - message
                      type: string
                  required:
                    - type
                    - channel
                    - message
                    - date_create
                  type: object
                - properties:
                    date_create:
                      type: integer
                    file:
                      $ref: '#/components/schemas/objs_file'
                    type:
                      enum:
                        - file
                      type: string
                  required:
                    - type
                    - file
                    - date_create
                  type: object
                - properties:
                    comment:
                      $ref: '#/components/schemas/objs_comment'
                    date_create:
                      type: integer
                    file:
                      $ref: '#/components/schemas/objs_file'
                    type:
                      enum:
                        - file_comment
                      type: string
                  required:
                    - type
                    - file
                    - comment
                    - date_create
                  type: object
                - properties:
                    channel:
                      $ref: '#/components/schemas/defs_channel'
                    date_create:
                      type: integer
                    type:
                      enum:
                        - channel
                      type: string
                  required:
                    - type
                    - channel
                    - date_create
                  type: object
                - properties:
                    channel:
                      $ref: '#/components/schemas/defs_dm_id'
                    date_create:
                      type: integer
                    type:
                      enum:
                        - im
                      type: string
                  required:
                    - type
                    - channel
                    - date_create
                  type: object
                - properties:
                    channel:
                      $ref: '#/components/schemas/defs_group_id'
                    date_create:
                      type: integer
                    type:
                      enum:
                        - group
                      type: string
                  required:
                    - type
                    - channel
                    - date_create
                  type: object
          type: array
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        paging:
          $ref: '#/components/schemas/objs_paging'
      required:
        - ok
        - items
      type: object
    StarsListdefaultResponse:
      title: stars.list error schema
      description: Schema for error response from stars.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    StarsRemoveResponse:
      title: stars.remove schema
      description: Schema for successful response from stars.remove method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    StarsRemovedefaultResponse:
      title: stars.remove error schema
      description: Schema for error response from stars.remove method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - bad_timestamp
            - message_not_found
            - file_not_found
            - file_comment_not_found
            - channel_not_found
            - no_item_specified
            - not_starred
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    TeamAccessLogsResponse:
      title: team.accessLogs schema
      description: Schema for successful response from team.accessLogs method
      properties:
        logins:
          items:
            properties:
              count:
                type: integer
              country:
                nullable: true
                type: string
              date_first:
                type: integer
              date_last:
                type: integer
              ip:
                nullable: true
                type: string
              isp:
                nullable: true
                type: string
              region:
                nullable: true
                type: string
              user_agent:
                type: string
              user_id:
                $ref: '#/components/schemas/defs_user_id'
              username:
                type: string
            required:
              - user_id
              - username
              - date_first
              - date_last
              - count
              - ip
              - user_agent
              - isp
              - country
              - region
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        paging:
          $ref: '#/components/schemas/objs_paging'
      required:
        - ok
        - logins
        - paging
      type: object
    TeamAccessLogsdefaultResponse:
      title: team.accessLogs error schema
      description: Schema for error response from team.accessLogs method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - paid_only
            - over_pagination_limit
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    TeamBillableInfoResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    TeamBillableInfodefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    TeamInfoResponse:
      title: team.info schema
      description: Schema for successful response from team.info method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        team:
          $ref: '#/components/schemas/objs_team'
      required:
        - ok
        - team
      type: object
    TeamInfodefaultResponse:
      title: team.info error schema
      description: Schema for error response from team.info method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    TeamIntegrationLogsResponse:
      title: team.integrationLogs schema
      description: Schema for successful response from team.integrationLogs method
      properties:
        logs:
          items:
            properties:
              admin_app_id:
                $ref: '#/components/schemas/defs_app_id'
              app_id:
                $ref: '#/components/schemas/defs_app_id'
              app_type:
                type: string
              change_type:
                type: string
              channel:
                $ref: '#/components/schemas/defs_channel'
              date:
                type: string
              scope:
                type: string
              service_id:
                type: string
              service_type:
                type: string
              user_id:
                $ref: '#/components/schemas/defs_user_id'
              user_name:
                type: string
            required:
              - user_id
              - user_name
              - date
              - change_type
              - app_type
              - app_id
              - scope
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        paging:
          $ref: '#/components/schemas/objs_paging'
      required:
        - ok
        - logs
        - paging
      type: object
    TeamIntegrationLogsdefaultResponse:
      title: team.integrationLogs error schema
      description: Schema for error response from team.integrationLogs method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    TeamprofileGetProfileResponse:
      title: team.profile.get success schema
      description: Schema for successful response from team.profile.get method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        profile:
          properties:
            fields:
              items:
                $ref: '#/components/schemas/objs_team_profile_field'
              type: array
              uniqueItems: true
          required:
            - fields
          type: object
      required:
        - ok
        - profile
      type: object
    TeamprofileGetProfiledefaultResponse:
      title: team.profile.get error schema
      description: Schema for error response from team.profile.get method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_typ
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeou
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsCreateResponse:
      title: usergroups.create schema
      description: Schema for successful response from usergroups.create method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        usergroup:
          $ref: '#/components/schemas/objs_subteam'
      required:
        - ok
        - usergroup
      type: object
    UsergroupsCreatedefaultResponse:
      title: usergroups.create error schema
      description: Schema for error response from usergroups.create method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - permission_denied
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsDisableResponse:
      title: usergroups.disable schema
      description: Schema for successful response from usergroups.disable method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        usergroup:
          $ref: '#/components/schemas/objs_subteam'
      required:
        - ok
        - usergroup
      type: object
    UsergroupsDisabledefaultResponse:
      title: usergroups.disable error schema
      description: Schema for error response from usergroups.disable method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - permission_denied
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsEnableResponse:
      title: usergroups.enable schema
      description: Schema for successful response from usergroups.enable method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        usergroup:
          $ref: '#/components/schemas/objs_subteam'
      required:
        - ok
        - usergroup
      type: object
    UsergroupsEnabledefaultResponse:
      title: usergroups.enable error schema
      description: Schema for error response from usergroups.enable method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_require
            - fatal_error
            - missing_charset
            - superfluous_charset
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsListResponse:
      title: usergroups.list schema
      description: Schema for successful response from usergroups.list method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        usergroups:
          items:
            $ref: '#/components/schemas/objs_subteam'
          type: array
      required:
        - ok
        - usergroups
      type: object
    UsergroupsListdefaultResponse:
      title: usergroups.list error schema
      description: Schema for error response from usergroups.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_require
            - fatal_error
            - missing_charset
            - superfluous_charset
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsUpdateResponse:
      title: usergroups.update schema
      description: Schema for successful response from usergroups.update method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        usergroup:
          $ref: '#/components/schemas/objs_subteam'
      required:
        - ok
        - usergroup
      type: object
    UsergroupsUpdatedefaultResponse:
      title: usergroups.update error schema
      description: Schema for error response from usergroups.update method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - permission_denied
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_require
            - fatal_error
            - missing_charset
            - superfluous_charset
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsusersListAllUsersResponse:
      title: usergroups.users.list schema
      description: Schema for successful response from usergroups.users.list method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          type: array
      required:
        - ok
        - users
      type: object
    UsergroupsusersListAllUsersdefaultResponse:
      title: usergroups.users.list error schema
      description: Schema for error response from usergroups.users.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_require
            - fatal_error
            - missing_charset
            - superfluous_charset
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsergroupsusersUpdateListResponse:
      title: usergroups.users.update schema
      description: Schema for successful response from usergroups.users.update method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        usergroup:
          $ref: '#/components/schemas/objs_subteam'
      required:
        - ok
        - usergroup
      type: object
    UsergroupsusersUpdateListdefaultResponse:
      title: usergroups.users.update error schema
      description: Schema for error response from usergroups.users.update method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - permission_denied
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - user_is_restricted
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_require
            - fatal_error
            - missing_charset
            - superfluous_charset
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersConversationsResponse:
      title: users.conversations success schema
      description: >-
        Schema for successful response from users.conversations method. Returned
        conversation objects do not include `num_members` or `is_member`
      additionalProperties: true
      properties:
        channels:
          items:
            $ref: '#/components/schemas/objs_conversation'
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          properties:
            next_cursor:
              type: string
          required:
            - next_cursor
          type: object
      required:
        - ok
        - channels
      type: object
    UsersConversationsdefaultResponse:
      title: users.conversations error schema
      description: Schema for error response from users.conversations method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - method_not_supported_for_channel_type
            - missing_scope
            - invalid_types
            - invalid_cursor
            - invalid_limit
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersDeletePhotoResponse:
      title: users.deletePhoto schema
      description: Schema for successful response from users.deletePhoto method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    UsersDeletePhotodefaultResponse:
      title: users.deletePhoto error schema
      description: Schema for error response from users.deletePhoto method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersGetPresenceResponse:
      title: 'API method: users.getPresence'
      description: >-
        Generated from users.getPresence with shasum
        e7251aec575d8863f9e0eb38663ae9dc26655f65
      additionalProperties: true
      properties:
        auto_away:
          type: boolean
        connection_count:
          type: integer
        last_activity:
          type: integer
        manual_away:
          type: boolean
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        online:
          type: boolean
        presence:
          type: string
      required:
        - ok
        - presence
      type: object
    UsersGetPresencedefaultResponse:
      title: users.counts error schema
      description: Schema for error response users.getPresence method
      additionalProperties:
        type: object
      properties:
        error:
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersIdentityResponse:
      title: users.identity schema
      description: Schema for successful response from users.identity method
      items:
        anyOf:
          - description: Schema for 'identity.basic' scope
            properties:
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              team:
                properties:
                  id:
                    $ref: '#/components/schemas/defs_team'
                required:
                  - id
                type: object
              user:
                properties:
                  id:
                    $ref: '#/components/schemas/defs_user_id'
                  name:
                    type: string
                required:
                  - name
                  - id
                type: object
            required:
              - ok
              - user
              - team
            type: object
          - description: Schema for 'identity.basic,identity.email' scopes
            properties:
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              team:
                properties:
                  id:
                    $ref: '#/components/schemas/defs_team'
                required:
                  - id
                type: object
              user:
                properties:
                  email:
                    format: email
                    type: string
                  id:
                    $ref: '#/components/schemas/defs_user_id'
                  name:
                    type: string
                required:
                  - name
                  - id
                  - email
                type: object
            required:
              - ok
              - user
              - team
            type: object
          - description: Schema for 'identity.basic,identity.avatar' scopes
            properties:
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              team:
                properties:
                  id:
                    $ref: '#/components/schemas/defs_team'
                required:
                  - id
                type: object
              user:
                properties:
                  id:
                    $ref: '#/components/schemas/defs_user_id'
                  image_192:
                    format: url
                    type: string
                  image_24:
                    format: url
                    type: string
                  image_32:
                    format: url
                    type: string
                  image_48:
                    format: url
                    type: string
                  image_512:
                    format: url
                    type: string
                  image_72:
                    format: url
                    type: string
                  name:
                    type: string
                required:
                  - name
                  - id
                  - image_24
                  - image_32
                  - image_48
                  - image_72
                  - image_192
                  - image_512
                type: object
            required:
              - ok
              - user
              - team
            type: object
          - description: Schema for 'identity.basic,identity.team' scopes
            properties:
              ok:
                $ref: '#/components/schemas/defs_ok_true'
              team:
                properties:
                  domain:
                    type: string
                  id:
                    $ref: '#/components/schemas/defs_team'
                  image_102:
                    format: url
                    type: string
                  image_132:
                    format: url
                    type: string
                  image_230:
                    format: url
                    type: string
                  image_34:
                    format: url
                    type: string
                  image_44:
                    format: url
                    type: string
                  image_68:
                    format: url
                    type: string
                  image_88:
                    format: url
                    type: string
                  image_default:
                    type: boolean
                  name:
                    type: string
                required:
                  - id
                  - name
                  - domain
                  - image_34
                  - image_44
                  - image_68
                  - image_88
                  - image_102
                  - image_132
                  - image_230
                  - image_default
                type: object
              user:
                properties:
                  id:
                    $ref: '#/components/schemas/defs_user_id'
                  name:
                    type: string
                required:
                  - name
                  - id
                type: object
            required:
              - ok
              - user
              - team
            type: object
    UsersIdentitydefaultResponse:
      title: users.identity error schema
      description: Schema for error response from users.identity method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersInfoResponse:
      title: users.info success schema
      description: Schema for successful response from users.info method
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        user:
          $ref: '#/components/schemas/objs_user'
      required:
        - ok
        - user
      type: object
    UsersInfodefaultResponse:
      title: users.info error schema
      description: Schema for error response from users.info method
      properties:
        callstack:
          type: string
        error:
          enum:
            - user_not_found
            - user_not_visible
            - not_authed
            - invalid_auth
            - account_inactive
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersListResponse:
      title: users.list schema
      description: Schema for successful response from users.list method
      properties:
        cache_ts:
          type: integer
        members:
          items:
            $ref: '#/components/schemas/objs_user'
          minItems: 1
          type: array
          uniqueItems: true
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        response_metadata:
          $ref: '#/components/schemas/objs_response_metadata'
      required:
        - ok
        - members
        - cache_ts
      type: object
    UsersListdefaultResponse:
      title: users.list error schema
      description: Schema for error response from users.list method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - limit_required
            - invalid_cursor
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersLookupByEmailResponse:
      title: users.lookupByEmail success schema
      description: Schema for successful response from users.lookupByEmail method
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        user:
          $ref: '#/components/schemas/objs_user'
      required:
        - ok
        - user
      type: object
    UsersLookupByEmaildefaultResponse:
      title: users.lookupByEmail error schema
      description: Schema for error response from users.lookupByEmail method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - users_not_found
            - enterprise_is_restricted
            - not_authed
            - invalid_auth
            - account_inactive
            - no_permission
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersprofileGetProfileInfoResponse:
      title: users.profile.get schema
      description: Schema for successful response from users.profile.get method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        profile:
          $ref: '#/components/schemas/objs_user_profile'
      required:
        - ok
        - profile
      type: object
    UsersprofileGetProfileInfodefaultResponse:
      title: users.profile.get error schema
      description: Schema for error response from users.profile.get method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - user_not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersprofileSetProfileInfoResponse:
      title: users.profile.set schema
      description: Schema for successful response from users.profile.set method
      properties:
        email_pending:
          format: email
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        profile:
          $ref: '#/components/schemas/objs_user_profile'
        username:
          type: string
      required:
        - ok
        - username
        - profile
      type: object
    UsersprofileSetProfileInfodefaultResponse:
      title: users.profile.set error schema
      description: Schema for error response from users.profile.set method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - reserved_name
            - invalid_profile
            - profile_set_failed
            - not_admin
            - not_app_admin
            - cannot_update_admin_user
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersSetActiveResponse:
      title: users.setActive schema
      description: Schema for successful response from users.setActive method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    UsersSetActivedefaultResponse:
      title: users.setActive error schema
      description: Schema for error response from users.setActive method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - ekm_access_denied
            - missing_scope
            - invalid_arguments
            - invalid_arg_name
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - request_timeout
            - fatal_error
            - internal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    UsersSetPhotoResponse:
      title: users.setPhoto schema
      description: Schema for successful response from users.setPhoto method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
        profile:
          properties:
            avatar_hash:
              pattern: ^[0-9a-f]{12}$
              type: string
            image_1024:
              format: uri
              type: string
            image_192:
              format: uri
              type: string
            image_24:
              format: uri
              type: string
            image_32:
              format: uri
              type: string
            image_48:
              format: uri
              type: string
            image_512:
              format: uri
              type: string
            image_72:
              format: uri
              type: string
            image_original:
              format: uri
              type: string
          required:
            - image_24
            - image_32
            - image_48
            - image_72
            - image_192
            - image_512
            - image_1024
            - image_original
            - avatar_hash
          type: object
      required:
        - ok
        - profile
      type: object
    UsersSetPhotodefaultResponse:
      title: users.setPhoto error schema
      description: Schema for error response from users.setPhoto method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        debug_step:
          description: possibly DEV/QA only
          type: string
        dims:
          description: possibly DEV/QA only
          type: string
        error:
          enum:
            - bad_image
            - too_large
            - too_many_frames
            - not_found
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - user_is_bot
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
        time_ident:
          description: possibly DEV/QA only
          type: integer
      required:
        - ok
        - error
      type: object
    UsersSetPresenceResponse:
      title: users.setPresence schema
      description: Schema for successful response from users.setPresence method
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    UsersSetPresencedefaultResponse:
      title: users.setPresence error schema
      description: Schema for error response from users.setPresence method
      properties:
        callstack:
          description: 'Note: PHP callstack is only visible in dev/qa'
          type: string
        error:
          enum:
            - invalid_presence
            - not_authed
            - invalid_auth
            - account_inactive
            - token_revoked
            - no_permission
            - org_login_required
            - invalid_arg_name
            - invalid_array_arg
            - invalid_charset
            - invalid_form_data
            - invalid_post_type
            - missing_post_type
            - team_added_to_org
            - invalid_json
            - json_not_object
            - request_timeout
            - upgrade_required
            - fatal_error
          type: string
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
        - error
      type: object
    ViewsOpenResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ViewsOpendefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    ViewsPublishResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ViewsPublishdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    ViewsPushResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ViewsPushdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    ViewsUpdateResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    ViewsUpdatedefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    WorkflowsStepCompletedResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    WorkflowsStepCompleteddefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    WorkflowsStepFailedResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    WorkflowsStepFaileddefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
    WorkflowsUpdateStepResponse:
      title: Default success template
      description: >-
        This method either only returns a brief _OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_true'
      required:
        - ok
      type: object
    WorkflowsUpdateStepdefaultResponse:
      title: Default error template
      description: >-
        This method either only returns a brief _not OK_ response or a verbose
        schema is not available for this method.
      additionalProperties: true
      properties:
        ok:
          $ref: '#/components/schemas/defs_ok_false'
      required:
        - ok
      type: object
  securitySchemes:
    slackAuth:
      flows:
        authorizationCode:
          authorizationUrl: https://slack.com/oauth/authorize
          scopes:
            admin: admin
            admin.apps:read: admin.apps:read
            admin.apps:write: admin.apps:write
            admin.conversations:read: admin.conversations:read
            admin.conversations:write: admin.conversations:write
            admin.invites:read: admin.invites:read
            admin.invites:write: admin.invites:write
            admin.teams:read: admin.teams:read
            admin.teams:write: admin.teams:write
            admin.usergroups:read: admin.usergroups:read
            admin.usergroups:write: admin.usergroups:write
            admin.users:read: admin.users:read
            admin.users:write: admin.users:write
            authorizations:read: authorizations:read
            bot: Bot user scope
            calls:read: calls:read
            calls:write: calls:write
            channels:history: channels:history
            channels:manage: channels:manage
            channels:read: channels:read
            channels:write: channels:write
            chat:write: chat:write
            chat:write:bot: Author messages as a bot
            chat:write:user: Author messages as a user
            conversations:history: conversations:history
            conversations:read: conversations:read
            conversations:write: conversations:write
            dnd:read: dnd:read
            dnd:write: dnd:write
            emoji:read: emoji:read
            files:read: files:read
            files:write:user: files:write:user
            groups:history: groups:history
            groups:read: groups:read
            groups:write: groups:write
            identity.basic: identity.basic
            im:history: im:history
            im:read: im:read
            im:write: im:write
            links:write: links:write
            mpim:history: mpim:history
            mpim:read: mpim:read
            mpim:write: mpim:write
            none: No scope required
            pins:read: pins:read
            pins:write: pins:write
            reactions:read: reactions:read
            reactions:write: reactions:write
            reminders:read: reminders:read
            reminders:write: reminders:write
            remote_files:read: remote_files:read
            remote_files:share: remote_files:share
            remote_files:write: remote_files:write
            rtm:stream: rtm:stream
            search:read: search:read
            stars:read: stars:read
            stars:write: stars:write
            team:read: team:read
            tokens.basic: tokens.basic
            usergroups:read: usergroups:read
            usergroups:write: usergroups:write
            users.profile:read: users.profile:read
            users.profile:write: users.profile:write
            users:read: users:read
            users:read.email: users:read.email
            users:write: users:write
            workflow.steps:execute: workflow.steps:execute
          tokenUrl: https://slack.com/api/oauth.access
      type: oauth2
externalDocs:
  description: Learn more about the Slack Web API
  url: https://api.slack.com/web
