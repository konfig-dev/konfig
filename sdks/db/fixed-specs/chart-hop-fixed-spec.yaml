openapi: 3.0.0
info:
  title: ChartHop API
  description: REST API for ChartHop
  version: V1.0.0
  contact:
    name: ChartHop
    url: https://www.charthop.com
    email: support@charthop.com
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://api.charthop.com
tags:
  - name: comp-review
  - name: app
  - name: approval
  - name: form
  - name: change
  - name: org
  - name: process
  - name: template
  - name: user
  - name: field
  - name: scenario
  - name: table
  - name: assessment
  - name: report
  - name: export
  - name: position
  - name: task
  - name: group
  - name: job
  - name: content
  - name: form-response
  - name: profile-tab
  - name: timeoff
  - name: budget-pool
  - name: policy
  - name: reportChart
  - name: band
  - name: customer
  - name: exchange-rate
  - name: message
  - name: oauth
  - name: action
  - name: category-sort
  - name: comment
  - name: guideline
  - name: role
  - name: person
  - name: category
  - name: data-view
  - name: email-template
  - name: event
  - name: file
  - name: import
  - name: job-level
  - name: multiplier
  - name: question
  - name: stripe
  - name: webauthn
  - name: appConfig
  - name: media
  - name: product
  - name: query
  - name: saml
  - name: stock
  - name: approval-request
  - name: billing
  - name: org-config
  - name: task-config
  - name: expression
  - name: legalDoc
  - name: onboard
  - name: access
  - name: ai
  - name: calendar
  - name: metric
  - name: notification
  - name: preload
  - name: search
  - name: status
  - name: usage
paths:
  /v1/org/{orgId}/access/entity/{type}:
    get:
      tags:
        - access
      summary: >-
        Return the appropriate actions that can be performed on an entity or set
        of entities
      operationId: Access_entityActions
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entity type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Entity ids
          name: id
          in: query
          required: false
          schema:
            type: string
        - description: Actions, defaults to update,delete
          name: action
          in: query
          required: false
          schema:
            type: string
        - description: Fields to check, defaults to all fields
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Date, defaults to today
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id, defaults to primary
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessResponse'
        '401':
          description: unauthorized
        '404':
          description: not found
  /v1/org/{orgId}/action/{actionId}:
    get:
      tags:
        - action
      summary: Return a particular action by id
      operationId: Action_getActionById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Action id
          name: actionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - action
      summary: Delete an action
      operationId: Action_deleteActionById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Action id
          name: actionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - action
      summary: Update an existing action
      operationId: Action_updateExistingActionById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Action id
          name: actionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Action data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchActionBody'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/action:
    get:
      tags:
        - action
      summary: Return all actions in the organization paginated
      operationId: Action_getAllPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Action id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsAction'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - action
      summary: Create an action
      operationId: Action_createNewAction
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Action data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionBody'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/action/{actionId}/run:
    post:
      tags:
        - action
      summary: Run an action - for testing
      operationId: Action_executeActionForTesting
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Action id
          name: actionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRunRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/ai/form-response/summary:
    post:
      tags:
        - ai
      summary: Use AI to generate a summary of text form responses
      operationId: Ai_generateTextSummary
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummarizeFormResponsesRequest'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummarizeResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app-config/{appId}:
    get:
      tags:
        - appConfig
      summary: Return default app configuration by app
      operationId: AppConfig_getDefaultConfigByApp
      description: ''
      parameters:
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/app-config/{appId}/{userId}:
    get:
      tags:
        - appConfig
      summary: Return user app configuration by app and user
      operationId: AppConfig_getUserConfigByAppAndUser
      description: ''
      parameters:
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - appConfig
      summary: Update an existing app
      operationId: AppConfig_updateById
      description: ''
      parameters:
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: App data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppConfig'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app-config:
    post:
      tags:
        - appConfig
      summary: Create a new app config
      operationId: AppConfig_createNewConfig
      description: ''
      requestBody:
        description: App config data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppConfig'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/app/notify:
    post:
      tags:
        - app
      summary: >-
        Send an email notification to the configured notify users, on behalf of
        an app
      operationId: App_sendEmailNotification
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app/{appId}:
    get:
      tags:
        - app
      summary: Return a particular app by id
      operationId: App_getById
      description: ''
      parameters:
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - app
      summary: Delete an app
      operationId: App_removeById
      description: ''
      parameters:
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - app
      summary: Update an existing app
      operationId: App_updateExistingApp
      description: ''
      parameters:
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: App data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApp'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app/org/{orgId}/install/{appUserId}/code:
    post:
      tags:
        - app
      summary: >-
        Retrieve an Oauth2 authorization code for this app, which can be
        exchanged for an access token
      operationId: App_getOauth2AuthorizationCode
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
        - description: Scopes
          name: scope
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app/org/{orgId}/install/{appUserId}/token:
    get:
      tags:
        - app
      summary: Retrieve the current token for this app
      operationId: App_getTokenForApp
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    post:
      tags:
        - app
      summary: Generate or regenerate a long-lived access token for the app
      operationId: App_generateOrRegenerateAccessToken
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeRequest'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app:
    get:
      tags:
        - app
      summary: Return all publicly visible global apps
      operationId: App_listPublicGlobalApps
      description: ''
      parameters:
        - description: Tag to filter by
          name: tag
          in: query
          required: false
          schema:
            type: string
        - description: App id to start from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApp'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - app
      summary: Create a new app
      operationId: App_createNewApp
      description: ''
      requestBody:
        description: App data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApp'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/app/org/{orgId}:
    get:
      tags:
        - app
      summary: Return all active apps available for a particular org
      operationId: App_getActiveAppsByOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Search query
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Filter by type (app, bundle)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Filter by tags
          name: tags
          in: query
          required: false
          schema:
            type: string
        - description: App id to start from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApp'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/app/org/{orgId}/install/{appUserId}:
    get:
      tags:
        - app
      summary: Get an installed app
      operationId: App_findInstalledAppUsers
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    delete:
      tags:
        - app
      summary: Uninstall an app
      operationId: App_uninstallAppByUserId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Comma-separated list of bundle-installed entities to delete -- if
            this parameter is omitted, all bundle-installed entities will be
            deleted
          name: keepEntityIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - app
      summary: Update the settings of an installed app
      operationId: App_updateInstalledApp
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
        - description: If the installed appUser is inactive, load inactive instead
          name: includeInactive
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: App user data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app/org/{orgId}/install/name/{appName}:
    get:
      tags:
        - app
      summary: Get an installed app by name
      operationId: App_getInstalledAppByName
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App name
          name: appName
          in: path
          required: true
          schema:
            type: string
        - description: If the installed appUser is inactive, load inactive instead
          name: includeInactive
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app/org/{orgId}/install:
    get:
      tags:
        - app
      summary: Find installed app users
      operationId: App_findInstalledAppUsers
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Filter by type (app, bundle)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Filter by tag
          name: tags
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Filter by App User statuses, comma-separated. Accepted values:
            ['NORMAL', 'INACTIVE', 'UNINSTALLED']
          name: statuses
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Whether to include app users with NONE access to orgs they pertain
            to.  Default is false
          name: includeFormer
          in: query
          required: false
          schema:
            type: boolean
        - description: App id to start from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsUser'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - app
      summary: Install an app for a particular org
      operationId: App_installAppForOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateUser'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/app/org/{orgId}/install/validate:
    post:
      tags:
        - app
      summary: Validate the installation of an app for a particular org
      operationId: App_validateAppInstallation
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateUser'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleInstallValidate'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/app/name/{appName}:
    get:
      tags:
        - app
      summary: Return a particular app by name
      operationId: App_getByName
      description: ''
      parameters:
        - description: App name
          name: appName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/app/org/{orgId}/install/{appUserId}/run:
    post:
      tags:
        - app
      summary: Run an installed app
      operationId: App_runInstalledApp
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/app/org/{orgId}/install/{appUserId}/installdata/{installDataName}:
    get:
      tags:
        - app
      summary: Retrieve the current token for this app
      operationId: App_getTokenForApp
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
        - description: Name
          name: installDataName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/approval-request/{approvalRequestId}/scenario-response:
    get:
      tags:
        - approval-request
      summary: Return a particular approval request scenario response by id
      operationId: Approvalrequest_getScenarioResponseById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequestScenarioResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/approval-request/scenario-job/{jobId}:
    get:
      tags:
        - approval-request
      summary: Return a particular approval request scenario response by jobId
      operationId: Approvalrequest_getApprovalRequestScenarioResponseByJobId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequestScenarioResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/approval-request/entity/scenario:
    get:
      tags:
        - approval-request
      summary: Return all approval request scenario responses for an org
      operationId: Approvalrequest_getAllApprovalRequestScenarioResponses
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: entity ids to filter on
          name: entityIds
          in: query
          required: false
          schema:
            type: string
        - description: Include deleted approval requests
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApprovalRequestScenarioResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/request/{approvalRequestId}:
    get:
      tags:
        - approval
      summary: Return an approval request
      operationId: Approval_requestApprovalRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - approval
      summary: Delete an approval request
      operationId: Approval_deleteRequestApproval
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Body params for deletion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequestDeleteBody'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - approval
      summary: Update an existing approval request
      operationId: Approval_updateExistingRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
        - description: preview-as job id
          name: previewJobId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: approval request data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequestPatchBody'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}:
    get:
      tags:
        - approval
      summary: Return a particular approval chain by id
      operationId: Approval_getApprovalChainById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalChain'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - approval
      summary: Delete a approval chain
      operationId: Approval_deleteChainById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - approval
      summary: Update a approval chain
      operationId: Approval_updateChain
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalChain'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain:
    get:
      tags:
        - approval
      summary: Return approval chains
      operationId: Approval_getApprovalChains
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: The type of entity
          name: entityType
          in: query
          required: false
          schema:
            type: string
            enum:
              - COMP_REVIEW
              - SCENARIO
              - TIMEOFF
        - description: the id of the entity
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApprovalChain'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - approval
      summary: Create an approval chain
      operationId: Approval_createChain
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Create default stages
          name: createDefaultStages
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: ApprovalChain data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalChain'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalChain'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/stage:
    get:
      tags:
        - approval
      summary: Return all approval chain stages for an approval chain
      operationId: Approval_getApprovalChainStages
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApprovalChainStage'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - approval
      summary: Create an approval chain stage
      operationId: Approval_createChainStage
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Approval chain stage data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalChainStage'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalChainStage'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/request/entity/comp-review:
    get:
      tags:
        - approval
      summary: Return all approval request comp review responses for an approval chain
      operationId: Approval_getCompReviewResponsesForChain
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: entity ids to filter on
          name: entityIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              example: 588f7ee98f138b19220041a7
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApprovalRequestCompReviewResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/stage/{approvalChainStageId}:
    get:
      tags:
        - approval
      summary: Return all approval chain stages for an approval chain
      operationId: Approval_getAllStagesForChain
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain stage id
          name: approvalChainStageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalChainStage'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - approval
      summary: Delete an approval chain stage
      operationId: Approval_deleteApprovalChainStage
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain stage id
          name: approvalChainStageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - approval
      summary: Update an existing approval chain stage
      operationId: Approval_updateStageById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: approval chain stage id
          name: approvalChainStageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: approval chain stage data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalChainStage'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/create-default-chain:
    post:
      tags:
        - approval
      summary: Build a default approval chain based on entity type
      operationId: Approval_generateDefaultChainStages
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Approval request data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultChainCreateBody'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalChainStage'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/request:
    get:
      tags:
        - approval
      summary: Return all approval requests for an approval chain
      operationId: Approval_getAllApprovalRequestsForApprovalChain
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: entity type to filter on
          name: entityType
          in: query
          required: false
          schema:
            type: string
            enum:
              - COMP_REVIEW
              - SCENARIO
              - TIMEOFF
        - description: entity ids to filter on
          name: entityIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApprovalRequest'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - approval
      summary: Create an approval request
      operationId: Approval_createRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Dry run without creating real request
          name: dryRun
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: Approval request data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequestCreateBody'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/request/entity/scenario:
    get:
      tags:
        - approval
      summary: Return all approval request scenario responses for an approval chain
      operationId: Approval_getScenarioResponses
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: entity ids to filter on
          name: entityIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsApprovalRequestScenarioResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/request/{approvalRequestId}/reassign-approver:
    post:
      tags:
        - approval
      summary: Reassigning an approver at a stage
      operationId: Approval_reassignApproverAtStage
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: approval request data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReassignApproverPatchBody'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/approval-chain/{approvalChainId}/request/{approvalRequestId}/send-reminder:
    post:
      tags:
        - approval
      summary: Send a reminder for a stage reviewer in an existing approval request
      operationId: Approval_sendStageReviewerReminder
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Approval chain id
          name: approvalChainId
          in: path
          required: true
          schema:
            type: string
        - description: approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: reminder body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReminderBody'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/assessment/bulk/delete:
    post:
      tags:
        - assessment
      summary: Delete a set of assessments
      operationId: Assessment_bulkDelete
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of assessment ids to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentBulkDeleteRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/assessment/bulk/duplicate:
    post:
      tags:
        - assessment
      summary: Duplicate a set of assessments
      operationId: Assessment_bulkDuplicateAssessments
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of assessment ids to duplicate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentBulkDuplicateAssessmentsRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/assessment/bulk/move:
    post:
      tags:
        - assessment
      summary: Update the types of a set of assessments
      operationId: Assessment_updateAssessmentTypes
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of assessment ids to update and the new type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkChangeAssessmentTypesBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/assessment:
    get:
      tags:
        - assessment
      summary: Return all assessments in the organization paginated
      operationId: Assessment_getAllPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Type of assessment to filter by
          name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - REVIEW
              - COMP_REVIEW
              - SURVEY
        - description: Assessment id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: List of ids to filter by
          name: ids
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsAssessment'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - assessment
      summary: Create a assessment
      operationId: Assessment_createNewAssessment
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Assessment data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssessment'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/assessment/{assessmentId}:
    get:
      tags:
        - assessment
      summary: Return a particular assessment by id
      operationId: Assessment_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - assessment
      summary: Delete a assessment
      operationId: Assessment_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - assessment
      summary: Update an existing assessment
      operationId: Assessment_updateExistingAssessment
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
        - description: Suppress notification emails
          name: silent
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: Assessment data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssessment'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/assessment/{assessmentId}/forms-questions:
    get:
      tags:
        - assessment
      summary: >-
        Return an overview of the forms and questions used in the assessment. If
        the user has read access to the assessment, then the forms and questions
        are visible, even if they would not otherwise be visible on their own
      operationId: Assessment_getFormsQuestionsOverview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentFormsAndQuestions'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/assessment/{assessmentId}/complete:
    post:
      tags:
        - assessment
      summary: Complete a assessment
      operationId: Assessment_completeAssessment
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/assessment/{assessmentId}/reactivate:
    post:
      tags:
        - assessment
      summary: Reactivate a assessment
      operationId: Assessment_reactivateAssessment
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/assessment/{assessmentId}/form/{formId}/expire:
    post:
      tags:
        - assessment
      summary: Expire all pending tasks for a form of an assessment
      operationId: Assessment_expireFormTasks
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/customer/{customerId}/billing:
    get:
      tags:
        - billing
      summary: Return billing information for a customer
      operationId: Billing_customerBillingInfo
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billing'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/customer/{customerId}/billing/checkout:
    post:
      tags:
        - billing
      summary: Checks out customer to upgrade to pay for their subscription
      operationId: Billing_upgradeSubscription
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Subscription data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscription'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/customer/{customerId}/billing/cancel:
    post:
      tags:
        - billing
      summary: Cancel a subscription for a customer
      operationId: Billing_cancelSubscriptionForCustomer
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Survey response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSubscriptionSurveyAnswers'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/budget-pool:
    get:
      tags:
        - budget-pool
      summary: Get all budget pools for an org
      operationId: Budgetpool_getAllForOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp Review Id to filter on
          name: compReviewId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - budget-pool
      summary: Create a new budget pool
      operationId: Budgetpool_createNewPool
      description: ''
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBudgetPool'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/budget-pool/{id}:
    get:
      tags:
        - budget-pool
      summary: Get a specific budget pool
      operationId: Budgetpool_getSpecificPool
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired budget pool
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetPool'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - budget-pool
      summary: Delete a budget pool
      operationId: Budgetpool_deleteBudgetPoolById
      description: ''
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired budget pool
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - budget-pool
      summary: Update a budget pool
      operationId: Budgetpool_updateBudgetPool
      description: ''
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired budget pool
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBudgetPool'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/budget-pool/{id}/guidelines:
    get:
      tags:
        - budget-pool
      summary: Get the guidelines associated with a budget pool
      operationId: Budgetpool_getGuidelinesForBudgetPool
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired budget pool
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsGuideline'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/budget-pool/{id}/calculate:
    get:
      tags:
        - budget-pool
      operationId: Budgetpool_calculateGuideline
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired budget pool
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: ID of the scenario the budget will be calculated against
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/budget-pool/{id}/preview:
    get:
      tags:
        - budget-pool
      summary: >-
        Generate tiering & preview with the given budget calculated for the
        compensation review
      operationId: Budgetpool_calculateGuideline
      description: ''
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired budget pool
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetTiersResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/calendar:
    get:
      tags:
        - calendar
      summary: Return calendar entries in a given time period
      operationId: Calendar_getEntriesByTimePeriod
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Start date
          name: start
          in: query
          required: false
          schema:
            type: string
        - description: End date
          name: end
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Type of calendar entries to retrieve (timeoff, anniversary,
            birthday)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Query filter to filter for part of the organization
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Format to return data in
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/category/{categoryId}:
    get:
      tags:
        - category
      summary: Return a particular category by id
      operationId: Category_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Category id
          name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    delete:
      tags:
        - category
      summary: Delete a category
      operationId: Category_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Category id
          name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    patch:
      tags:
        - category
      summary: Update an existing category
      operationId: Category_updateExistingCategory
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Category id
          name: categoryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Category data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategory'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/category:
    get:
      tags:
        - category
      summary: Return categories that are available to the organization
      operationId: Category_getAvailable
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: (Optional) Return only built-in or custom categories
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: (Optional) Return categories array unsorted
          name: unsorted
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsCategory'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    post:
      tags:
        - category
      summary: Create a category
      operationId: Category_createNewCategory
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Category data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/category-sort:
    get:
      tags:
        - category-sort
      summary: Return category sort order
      operationId: Categorysort_getCategorySortOrder
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySort'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    post:
      tags:
        - category-sort
      summary: Create a category sort order if it doesn't exist
      operationId: Categorysort_createIfNotExists
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Sort data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategorySort'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySort'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    put:
      tags:
        - category-sort
      summary: >-
        Create or update category sort order for a given org and return the sort
        data
      operationId: Categorysort_createOrUpdateSort
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateCategorySort'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySort'
        '400':
          description: categoryIds cannot be empty
        '403':
          description: Permission denied
    delete:
      tags:
        - category-sort
      summary: Delete a category sort order
      operationId: Categorysort_deleteSortOrder
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Not Implemented
    patch:
      tags:
        - category-sort
      summary: Update an existing category sort order
      operationId: Categorysort_updateExistingCategorySort
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Sort data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategorySort'
      responses:
        default:
          description: Not Implemented
  /v1/org/{orgId}/category-sort/upsert:
    post:
      tags:
        - category-sort
      summary: >-
        Create or update category sort order for a given org and return the sort
        data
      operationId: Categorysort_createOrUpdateSortOrder
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateCategorySort'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySort'
        '400':
          description: categoryIds cannot be empty
        '403':
          description: Permission denied
  /v1/org/{orgId}/change/{changeId}:
    get:
      tags:
        - change
      summary: Return a particular change by id
      operationId: Change_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - change
      summary: Delete a previous change
      operationId: Change_deletePreviousChange
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: Process id of person creation
          name: processId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
    patch:
      tags:
        - change
      summary: Make a change to a change
      operationId: Change_updateChangeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: Process id of person creation
          name: processId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Change data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChange'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change/bulkupdate:
    post:
      tags:
        - change
      summary: Perform a bulk update on a number of jobs
      operationId: Change_bulkUpdateJobs
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Bulk update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change/{type}/validate:
    post:
      tags:
        - change
      summary: Validate a change
      operationId: Change_validateChangeOperation
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change type
          name: type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateChange'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change/{type}:
    post:
      tags:
        - change
      summary: Create a new change
      operationId: Change_createNewChange
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Source of change
          name: source
          in: query
          required: false
          schema:
            type: string
        - description: Process id of change creation
          name: processId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateChange'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change:
    get:
      tags:
        - change
      summary: Return recent changes across an org, or for a particular person or job
      operationId: Change_getRecentChanges
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date to start from
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Date to get changes through (inclusive)
          name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Types of change to filter by
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Return changes that modify these fields
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Person id to filter by
          name: personId
          in: query
          required: false
          schema:
            type: string
        - description: Job id to filter by
          name: jobId
          in: query
          required: false
          schema:
            type: string
        - description: Find and include first backfill if it exists
          name: includeBackfill
          in: query
          required: false
          schema:
            type: boolean
        - description: References to filter by
          name: refs
          in: query
          required: false
          schema:
            type: string
        - description: Query to filter against
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Change id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether the role is open or not
          name: open
          in: query
          required: false
          schema:
            type: string
            enum:
              - FILLED
              - OPEN
        - description: Descending (default false)
          name: desc
          in: query
          required: false
          schema:
            type: boolean
        - description: Scenario only (exclude primary changes)
          name: scenarioOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: Parent changes only (exclude child changes)
          name: parentOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether to include full grant schedule when returning equity updates
          name: includeGrantSchedule
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to exclude ats recruiting fields. Only applies when
            fieldEntityTypeString is passed
          name: excludeAtsRecruitingFields
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Deprecated parameter for backwards-compatibility (use statuses) -
            whether to include STRUCK and PROPOSED changes, or just ACTIVE
            changes
          name: includeStruck
          in: query
          required: false
          schema:
            type: boolean
        - description: Statuses to filter by
          name: status
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Whether to strip returned update changes of update types that were
            not explicitly requested
          name: stripUpdates
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: Only return changes which set fields with these entity types
          name: fieldEntityTypes
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsChange'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/change/{changeId}/approver:
    get:
      tags:
        - change
      summary: Given a of change id, see if the person can approve/reject
      operationId: Change_checkApproverEligibility
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change Id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: Date to check the approval on
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeCheckApproverEligibilityResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/change/scenario/{scenarioId}:
    get:
      tags:
        - change
      summary: Return all changes for a particular scenario, with before job
      operationId: Change_findScenarioChanges
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
        - description: Fields to retrieve
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: Search query
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioChangesWithBudgetRollup'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/change/sync/{type}:
    post:
      tags:
        - change
      summary: Sync a change (create the change only if it does not already exist)
      operationId: Change_createIfNotExists
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Process id of person creation
          name: processId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateChange'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change/depart-rehire:
    post:
      tags:
        - change
      summary: Create a depart-rehire pair of changes, for filling in historical data
      operationId: Change_createDepartRehirePair
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Rehire start date
          name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        description: Depart data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChange'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change/bulkchange:
    post:
      tags:
        - change
      summary: Perform a series of changes at once
      operationId: Change_performBulkChange
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Bulk change data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkChangeRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change/{changeId}/approve:
    post:
      tags:
        - change
      summary: Approve or reject a change
      operationId: Change_approveOrReject
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Change approval details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveChange'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/change/{changeId}/status/{processId}:
    get:
      tags:
        - change
      summary: Get the status of a running change within a scenario
      operationId: Change_getStatus
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: Process id
          name: processId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatusResponse'
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/change/{changeId}:
    patch:
      tags:
        - change
      summary: >-
        Amend a change within a scenario, and potentially return the updated
        data
      operationId: Change_amendScenarioChange
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: Fields to retrieve
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Include all updated fields in the response, including
            change.after.fieldName for each updated field
          name: includeUpdatedFields
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Data format to return; default is json, can also use json-extended
            or json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Column and data to update (must contain only one entry)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeAmendScenarioChangeRequest'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScenarioChangeResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/comment:
    post:
      tags:
        - comment
      summary: Post a comment
      operationId: Comment_createNewComment
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Comment data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComment'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/comment/{commentId}:
    get:
      tags:
        - comment
      summary: Return a particular comment by id
      operationId: Comment_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comment id
          name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - comment
      summary: Delete a comment
      operationId: Comment_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comment id
          name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/comment/entity/{entityId}:
    get:
      tags:
        - comment
      summary: Return comments on a particular entity paginated
      operationId: Comment_getByEntityId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entity id
          name: entityId
          in: path
          required: true
          schema:
            type: string
        - description: Comment id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Descending (default false)
          name: desc
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsComment'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comment/comp-review/{compReviewId}:
    get:
      tags:
        - comment
      summary: Return comments on changes within a comp review, paginated
      operationId: Comment_listCommentsOnCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: Approval request id
          name: approvalRequestId
          in: query
          required: false
          schema:
            type: string
        - description: Comment id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Descending (default false)
          name: desc
          in: query
          required: false
          schema:
            type: boolean
        - description: Whether comments are viewed in preview mode, defaults false
          name: isPreview
          in: query
          required: false
          schema:
            type: boolean
        - description: Optional preview user jobId
          name: jobId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsComment'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comment/scenario/{scenarioId}:
    get:
      tags:
        - comment
      summary: Return comments on a scenario and the changes within, paginated
      operationId: Comment_listCommentsOnScenarioAndChanges
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
        - description: Comment id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Descending (default false)
          name: desc
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to also include comments on changes within the scenario
            (default false)
          name: includeChangeComments
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsComment'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/band:
    get:
      tags:
        - band
      summary: Find comp bands in the organization
      operationId: Band_findCompBandsInOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Table id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Include deleted bands
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - band
      summary: Create a comp band
      operationId: Band_createCompBand
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of band creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompBand'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - band
      summary: Delete all comp bands on a date
      operationId: Band_deleteCompBandsOnDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of group update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
  /v1/org/{orgId}/band/{bandId}:
    get:
      tags:
        - band
      summary: Return a particular comp band by id on an effective date
      operationId: Band_findCompBandsInOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp band id
          name: bandId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - band
      summary: Delete a comp band
      operationId: Band_removeCompBand
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp band id
          name: bandId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of group update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - band
      summary: Update a comp band
      operationId: Band_updateCompBandById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Band id
          name: bandId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of band update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompBand'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/band/reset:
    delete:
      tags:
        - band
      summary: Delete all comp band data on a date
      operationId: Band_deleteCompBandsOnDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of group update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
  /v1/org/{orgId}/comp-review/bulk/delete:
    post:
      tags:
        - comp-review
      summary: Delete a set of comp reviews
      operationId: Compreview_deleteBulkCompReviews
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of comp review ids to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompreviewDeleteBulkCompReviewsRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/bulk/duplicate:
    post:
      tags:
        - comp-review
      summary: Duplicate a set of comp reviews
      operationId: Compreview_createBulkDuplicate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of comp review ids to duplicate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompreviewCreateBulkDuplicateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/comp-review:
    get:
      tags:
        - comp-review
      summary: Find comp reviews in the organization
      operationId: Compreview_findCompReviews
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review ID to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsCompReview'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - comp-review
      summary: Create a comp review
      operationId: Compreview_createCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Comp review data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompReview'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}:
    get:
      tags:
        - comp-review
      summary: Return a particular comp review by ID
      operationId: Compreview_findCompReviewById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompReview'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - comp-review
      summary: Delete a comp review
      operationId: Compreview_deleteCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - comp-review
      summary: Update a comp review
      operationId: Compreview_updateCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompReview'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompReview'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/metadata:
    get:
      tags:
        - comp-review
      summary: Return metadata for a particular comp review by ID
      operationId: Compreview_getMetadataById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompReviewMetadata'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/generate:
    post:
      tags:
        - comp-review
      summary: Generate a compensation review
      operationId: Compreview_generateCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Whether this should be generated as a preview
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCompReviewOptions'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/pause:
    post:
      tags:
        - comp-review
      summary: Pauses the compensation review to allow for editing by an admin
      operationId: Compreview_pauseReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/conclude:
    post:
      tags:
        - comp-review
      summary: Concludes (or closes) the compensation review
      operationId: Compreview_closeCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: Whether is review fully approved on conclude (default false)
          name: isFullyApproved
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/preview:
    post:
      tags:
        - comp-review
      summary: Generate tiering & preview for a compensation review
      operationId: Compreview_generateTieringPreview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/in-cycle:
    get:
      tags:
        - comp-review
      summary: Get an overview for a given user in an in-cycle comp-review
      operationId: Compreview_overviewInCycleCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - name: scenariosOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: proposalOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: reviewsOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: columnsOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: isPreview
          in: query
          required: false
          schema:
            type: boolean
        - name: jobId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Allows users with multiple roles to request full access for owner or
            final approver roles
          name: includeAllRequests
          in: query
          required: false
          schema:
            type: boolean
        - name: includeFeatures
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InCycleViewResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/in-cycle/changes:
    get:
      tags:
        - comp-review
      summary: Get the changes for a set of scenarios in an in-cycle comp-review
      operationId: Compreview_getChangesInCycle
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: Approval request id
          name: approvalRequestId
          in: query
          required: false
          schema:
            type: string
        - name: isPreview
          in: query
          required: false
          schema:
            type: boolean
        - name: jobId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InCycleViewChanges'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/in-cycle/changes/{changeId}:
    get:
      tags:
        - comp-review
      summary: >-
        Get the change data and guideline flags associated with an in-cycle
        change
      operationId: Compreview_getChangeAndGuidelineFlags
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InCycleChange'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/in-cycle/collabicient:
    get:
      tags:
        - comp-review
      summary: Get a collaborator participant reviewer in-cycle comp-review
      operationId: Compreview_getCollabicientInCycle
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - name: scenariosOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: proposalOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: reviewsOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: columnsOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: isPreview
          in: query
          required: false
          schema:
            type: boolean
        - name: collabicientJobId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InCycleViewResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/eligible-employees:
    get:
      tags:
        - comp-review
      summary: Get a list of employees eligible for a given comp review
      operationId: Compreview_getEligibleEmployees
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: Find ineligible employees under specific comp scenario managers
          name: filterScenarioIds
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Whether to get eligible or ineligible employees (defaults to
            eligible)
          name: ineligible
          in: query
          required: false
          schema:
            type: boolean
        - description: Job id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Table fields
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: Optional CQL filter to apply to employees
          name: filter
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/associated-entities:
    get:
      tags:
        - comp-review
      summary: Get the necessary caches on a specific date for a compensation review
      operationId: Compreview_getDateCaches
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialAppEntities'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/send-reminder-email:
    post:
      tags:
        - comp-review
      summary: 'Send a reminder email to someone participating in a comp review '
      operationId: Compreview_sendReminderEmail
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Approval request ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReminderEmailOptions'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/approval-requests:
    get:
      tags:
        - comp-review
      summary: Get a list of approval request responses for a given comp review
      operationId: Compreview_listRequestResponses
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - name: isPreview
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompreviewListRequestResponsesResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/approval-requests/{approvalRequestId}:
    patch:
      tags:
        - comp-review
      summary: Update approval request status, including any rollups
      operationId: Compreview_updateApprovalRequestStatus
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: Approval request id
          name: approvalRequestId
          in: path
          required: true
          schema:
            type: string
        - description: Preview-as job id
          name: previewJobId
          in: query
          required: false
          schema:
            type: string
        - description: Updating the final stage status
          name: isFinalApproval
          in: query
          required: false
          schema:
            type: boolean
        - description: Reviewer job id a collaborator is working on
          name: collaboratorSelectedReviewerJobId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Approval request data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequestPatchBody'
      responses:
        default:
          description: successful operation
  /v1/org/{orgId}/comp-review/{compReviewId}/export:
    post:
      tags:
        - comp-review
      summary: Export a comp review's changes
      operationId: Compreview_exportChanges
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportChangesBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/export/audit:
    post:
      tags:
        - comp-review
      summary: Export a comp review's audit log
      operationId: Compreview_exportAuditLog
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportChangesBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/export/comments:
    post:
      tags:
        - comp-review
      summary: Export a comp review's comments
      operationId: Compreview_exportComments
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/visualizations:
    post:
      tags:
        - comp-review
      summary: Get data for visualizations for a comp review
      operationId: Compreview_createVisualizationData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
        - description: The job you would like to view as
          name: viewJobId
          in: query
          required: false
          schema:
            type: string
        - description: Are the visualizations for a preview
          name: preview
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Allows users with multiple roles to request full access for owner or
            final approver roles
          name: includeAllRequests
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: Options for visualizations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVisualizationsOptions'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompReviewVisualizations'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/comp-review/{compReviewId}/duplicate:
    post:
      tags:
        - comp-review
      summary: Duplicate a comp review
      operationId: Compreview_duplicateCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp review id
          name: compReviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompReview'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/content/homepage/render:
    get:
      tags:
        - content
      summary: Render the contents of the homepage
      operationId: Content_renderHomepageContents
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageContentRender'
  /v1/org/{orgId}/content/homepage:
    patch:
      tags:
        - content
      summary: Update the homepage content
      operationId: Content_updateHomepageContent
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContent'
      responses:
        default:
          description: successful operation
  /v1/org/{orgId}/content:
    get:
      tags:
        - content
      summary: Return all content in the organization paginated
      operationId: Content_getPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Content id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
        - description: Include content blocks in results
          name: includeBlocks
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsContent'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - content
      summary: Create a new piece of content
      operationId: Content_createNewPiece
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Content data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContent'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/content/path/{path}:
    get:
      tags:
        - content
      summary: Return a particular content by path
      operationId: Content_getByPath
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Path
          name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .*
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/content/path/{path}/render:
    get:
      tags:
        - content
      summary: Return a particular content by path, and render its contents
      operationId: Content_renderByPath
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Path
          name: path
          in: path
          required: true
          schema:
            type: string
            pattern: .*
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentRender'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/content/{contentId}:
    get:
      tags:
        - content
      summary: Return a particular content by id
      operationId: Content_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Content id
          name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - content
      summary: Delete a content
      operationId: Content_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Content id
          name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - content
      summary: Update an existing piece of content
      operationId: Content_updatePieceById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Content id
          name: contentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Content data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContent'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/customer/{customerId}/subscription:
    get:
      tags:
        - customer
      summary: >-
        Returns information about the Charthop subscription for the given
        customer
      operationId: Customer_getCharthopSubscription
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: bad request
        '404':
          description: not found
    patch:
      tags:
        - customer
      operationId: Customer_updateSubscription
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Subscription data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscription'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/customer/{customerId}:
    get:
      tags:
        - customer
      summary: Return a particular customer by id
      operationId: Customer_getById
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: bad request
        '404':
          description: not found
    patch:
      tags:
        - customer
      summary: Update an existing customer
      operationId: Customer_updateExistingCustomer
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Customer data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomer'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/customer:
    get:
      tags:
        - customer
      summary: Return all visible customers, paginated by name
      operationId: Customer_listVisibleCustomers
      description: ''
      parameters:
        - description: Customer id to start from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Customer.Status. (ACTIVE/INACTIVE/TRAIL)
          name: status
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsCustomer'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - customer
      summary: Create a new customer
      operationId: Customer_createNewCustomer
      description: ''
      requestBody:
        description: Customer data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/customer/{customerId}/invoices:
    get:
      tags:
        - customer
      summary: Returns a list of all the invoices for the given customer
      operationId: Customer_getAllInvoicesForCustomer
      description: ''
      parameters:
        - description: Customer id
          name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/data-view:
    get:
      tags:
        - data-view
      summary: Return all data views in the organization paginated
      operationId: Dataview_getAllPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Data view id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Data view type to filter by
          name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - ANY
              - DATA_SHEET
              - ORG_CHART
              - MAP
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Comma delimited of ids to return
          name: ids
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsDataView'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - data-view
      summary: Create a data view
      operationId: Dataview_createNewDataView
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Data view data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataView'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataView'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/data-view/{dataViewId}:
    get:
      tags:
        - data-view
      summary: Return a particular data view by id
      operationId: Dataview_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Data view id
          name: dataViewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataView'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - data-view
      summary: Delete a data  view
      operationId: Dataview_deleteDataView
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Data view id
          name: dataViewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - data-view
      summary: Update an existing data view
      operationId: Dataview_updateExistingView
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Data view id
          name: dataViewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Data view data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataView'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataView'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/email-template:
    post:
      tags:
        - email-template
      summary: Create a new email template
      operationId: Emailtemplate_createNewTemplate
      description: ''
      requestBody:
        description: Email template to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailTemplate'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/email-template/{emailTemplateId}:
    patch:
      tags:
        - email-template
      summary: Update an existing email template
      operationId: Emailtemplate_updateExistingTemplate
      description: ''
      parameters:
        - description: Email template id
          name: emailTemplateId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Email template data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailTemplate'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/email-template/name/{name}:
    get:
      tags:
        - email-template
      summary: Return the email template by name
      operationId: Emailtemplate_getByName
      description: ''
      parameters:
        - description: Email template name
          name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/email-template/essential:
    get:
      tags:
        - email-template
      summary: Return all essential email templates
      operationId: Emailtemplate_listEssentialEmailTemplates
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsEmailTemplate'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/email-template/non-essential:
    get:
      tags:
        - email-template
      summary: Return all non-essential email templates
      operationId: Emailtemplate_getAllNonEssential
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsEmailTemplate'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/event/{eventId}:
    get:
      tags:
        - event
      summary: Return individual event, including payload
      operationId: Event_getEventPayload
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  /v1/org/{orgId}/event:
    get:
      tags:
        - event
      summary: Return past events, paginated, without payloads present
      operationId: Event_getPastEvents
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: User id
          name: userId
          in: query
          required: false
          schema:
            type: string
        - description: Entity id
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Entity type
          name: entityType
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTION
              - AGREEMENT
              - APP
              - APP_CONFIG
              - APPROVAL_CHAIN
              - APPROVAL_CHAIN_STAGE
              - APPROVAL_REQUEST
              - ASSESSMENT
              - BUDGET_POOL
              - BUNDLE
              - CATEGORY
              - CATEGORY_SORT
              - CHANGE
              - COMMENT
              - COMP_BAND
              - COMP_REVIEW
              - CONTENT
              - CUSTOMER
              - DATA_VIEW
              - EXCHANGE_RATE
              - EMAIL_TEMPLATE
              - FIELD
              - FILE
              - FORM
              - FORM_DRAFT
              - FORM_RESPONSE
              - GEOCODE
              - GROUP
              - GUIDELINE
              - JOB
              - JOB_LEVEL
              - MEDIA
              - MESSAGE
              - MULTIPLIER
              - ORG
              - ORG_CONFIG
              - PERSON
              - PROFILE_TAB
              - POLICY
              - POSITION
              - PROCESS
              - PRODUCT
              - QUERY_TOKEN
              - QUESTION
              - REPORT
              - REPORT_CHART
              - ROLE
              - SCENARIO
              - STOCK_PRICE
              - TABLE
              - TABLE_ROW
              - TASK_CONFIG
              - TEMPLATE
              - TASK
              - TOKEN
              - TIMEOFF
              - TRACKED_GROUP
              - USER
        - description: Parent entity id
          name: parentEntityId
          in: query
          required: false
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Process id
          name: processId
          in: query
          required: false
          schema:
            type: string
        - description: Fields that were modified
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Event code to search for
          name: code
          in: query
          required: false
          schema:
            type: string
        - description: Timestamp to start search at
          name: from
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsEvent'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/event/{eventId}/notify:
    post:
      tags:
        - event
      summary: >-
        Resend all associated notifications for a previous event (superusers
        only)
      operationId: Event_resendAssociatedNotifications
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Event id
          name: eventId
          in: path
          required: true
          schema:
            type: string
        - description: App name to restrict notifications to
          name: app
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/event/notify/inbound/{appId}/{inboundId}:
    post:
      tags:
        - event
      summary: Create an inbound event
      operationId: Event_createInboundNotification
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
        - description: Inbound id
          name: inboundId
          in: path
          required: true
          schema:
            type: string
        - description: Process id
          name: processId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Inbound body to create event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateInboundNotificationRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateInboundNotificationResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/event/notify/outbound/app/{appId}:
    post:
      tags:
        - event
      summary: Create an outbound event
      operationId: Event_createOutboundEvent
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: App id
          name: appId
          in: path
          required: true
          schema:
            type: string
        - description: Process id
          name: processId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Outbound body to create event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateOutboundEventRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateOutboundEventResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/exchange-rate/{date}/history:
    get:
      tags:
        - exchange-rate
      summary: Return org custom exchange rates
      operationId: Exchangerate_orgCustomExchangeRatesHistory
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - description: Currency to search for
          name: currency
          in: query
          required: false
          schema:
            type: string
        - description: Start date for search
          name: fromDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: End date for search
          name: toDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExchangerateOrgCustomExchangeRatesHistoryResponse
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/exchange-rate/{date}/custom/bulkupdate:
    post:
      tags:
        - exchange-rate
      summary: Bulk update custom currency rates in org custom exchange rates
      operationId: Exchangerate_bulkUpdateCustomRates
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - description: Boolean to determine whether to add or remove rates from update
          name: addRates
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: Update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangerateBulkUpdateCustomRatesRequest'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/exchange-rate/{date}:
    get:
      tags:
        - exchange-rate
      summary: Return the exchange rates on a particular date
      operationId: Exchangerate_getRatesOnDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRate'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - exchange-rate
      summary: Delete a custom exchange rate on a particular date
      operationId: Exchangerate_deleteCustomRateOnDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - description: Currency code
          name: currencyCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - exchange-rate
      summary: >-
        Update the USD-based exchange rates for a particular date. Must be the
        first of a month.
      operationId: Exchangerate_updateUsdExchangeRatesForDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExchangeRate'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/exchange-rate/{date}/global:
    get:
      tags:
        - exchange-rate
      summary: Return the global exchange rates based on USD for a particular date
      operationId: Exchangerate_getGlobalByDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRate'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/exchange-rate/{date}/custom:
    get:
      tags:
        - exchange-rate
      summary: Return org custom exchange rates
      operationId: Exchangerate_getCustomExchangeRates
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to use
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRate'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/export/powerpoint/org:
    post:
      tags:
        - export
      summary: Export org chart to Powerpoint
      operationId: Export_orgChartToPowerpoint
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: date to export the data from
          name: date
          in: query
          required: false
          example: '2016-12-25'
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/exportOrgToPowerpointBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/powerpoint/report/{reportId}:
    post:
      tags:
        - export
      summary: Export report to Powerpoint
      operationId: Export_reportToPowerpoint
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportOrgToPowerpointBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/pdf/review/{assessmentId}:
    post:
      tags:
        - export
      summary: Export reviews in PDF format
      operationId: Export_pdfReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/zip/file:
    post:
      tags:
        - export
      summary: Export a zipfile of files downloaded from some field
      operationId: Export_fileZipDownload
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Field
          name: field
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Query for jobs or people to match against
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Size of images to export, if image file (250x250, 50x50, defaults to
            original)
          name: size
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/export/csv/fields:
    post:
      tags:
        - export
      summary: Export a CSV of custom fields
      operationId: Export_csvCustomFields
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Ids of fields to export (if null, all fields are returned)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportCsvCustomFieldsRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/csv/snapshot:
    post:
      tags:
        - export
      summary: Export a snapshot of a current roster to CSV format
      operationId: Export_rosterToCsvSnapshot
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/csv/change:
    post:
      tags:
        - export
      summary: Export a changelog to CSV format
      operationId: Export_changelogToCsv
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/csv/users:
    post:
      tags:
        - export
      summary: Export users for a review to CSV format
      operationId: Export_userReviewCsv
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/csv/task/{reviewId}:
    post:
      tags:
        - export
      summary: Export tasks for a review to CSV format
      operationId: Export_taskToCsv
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: review id
          name: reviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/csv/scenario/{scenarioId}:
    post:
      tags:
        - export
      summary: Export a CSV changelog of a scenario
      operationId: Export_scenarioCsv
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/export/csv/scenario/{scenarioId}/comments:
    post:
      tags:
        - export
      summary: Export a csv log of a scenario comments
      operationId: Export_csvScenarioComments
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid parameters
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/cql/validate:
    post:
      tags:
        - expression
      summary: Validate carrot expression(s)
      operationId: Expression_validateCarrotExpression
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Expression to be validated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateExpressionRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateExpressionResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
  /v1/org/{orgId}/cql/evaluate:
    post:
      tags:
        - expression
      summary: Evaluate carrot expression
      operationId: Expression_evaluateCarrotExpression
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Expression to be evaluated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateExpressionRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateExpressionResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
  /v1/org/{orgId}/field:
    get:
      tags:
        - field
      summary: Return all fields in the organization paginated
      operationId: Field_getAllPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Field id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Comma separated Field Ids to find
          name: ids
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Retrieve fields from a particular table (id or name); if not passed,
            returns non-table fields
          name: table
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Retrieve fields from a particular table type; ignored if table not
            passed
          name: tableType
          in: query
          required: false
          schema:
            type: string
        - description: Retrieve fields relating to a particular form
          name: form
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Include built-in (builtin), custom (custom) or all fields - defaults
            to custom
          name: builtin
          in: query
          required: false
          schema:
            type: string
        - description: Include custom ttst fields - defaults to false
          name: includeTtst
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsField'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - field
      summary: Create a field
      operationId: Field_createNewField
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: table type to add the field to
          name: tableType
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Field data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateField'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/field/category/{categoryId}:
    get:
      tags:
        - field
      summary: Return fields in a particular category
      operationId: Field_getFieldsInCategory
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Category id
          name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsField'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/field/category:
    get:
      tags:
        - field
      summary: Return uncategorized fields
      operationId: Field_getUncategorizedFields
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsField'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/field/{fieldId}:
    get:
      tags:
        - field
      summary: Return a particular field by id
      operationId: Field_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Field id
          name: fieldId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - field
      summary: Delete a field
      operationId: Field_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Field id
          name: fieldId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - field
      summary: Update an existing field
      operationId: Field_updateExistingField
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Field id
          name: fieldId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateField'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/field/status:
    post:
      tags:
        - field
      summary: Update status for existing fields
      operationId: Field_updateStatusForExistingFields
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Field data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldStatusUpdateRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/field/remove-overrides:
    post:
      tags:
        - field
      summary: Remove overrides from fields
      operationId: Field_removeFieldOverrides
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Fields for which to remove overrides
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldRemoveOverrideRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/field/remove-category:
    post:
      tags:
        - field
      summary: Remove field from all associated categories
      operationId: Field_removeFromCategories
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Fields to set as uncategorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldRemoveCategoryRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/field/{fieldId}/dryrun:
    patch:
      tags:
        - field
      summary: >-
        Perform a dry-run of an update to an existing field that will require
        migrations
      operationId: Field_updateFieldDryRun
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Field id
          name: fieldId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateField'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/field/delete:
    delete:
      tags:
        - field
      summary: Delete fields
      operationId: Field_remove
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Field ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldRemoveRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/field/built-in:
    get:
      tags:
        - field
      summary: Get built-in fields
      operationId: Field_getBuiltInFields
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsPartialField'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/file:
    get:
      tags:
        - file
      summary: Returns metadata about a file
      operationId: File_getMetadata
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entity id
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Entity type
          name: entityType
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: From result id
          name: from
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsFileEntity'
        '401':
          description: Not authorized
        '403':
          description: Permission denied
        '404':
          description: File not found
    post:
      tags:
        - file
      summary: Upload a new file
      operationId: File_uploadNewFile
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: entity id (if not passed, defaults to user id)
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: entity type (if not passed, defaults to user)
          name: entityType
          in: query
          required: false
          schema:
            type: string
        - description: field name - can leave blank for a general upload
          name: field
          in: query
          required: false
          schema:
            type: string
        - description: file sensitivity level - defaults to PERSONAL
          name: sensitive
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileEntity'
        '400':
          description: Invalid type or bad request
        '401':
          description: Not authorized
  /v1/org/{orgId}/file/{fileId}:
    get:
      tags:
        - file
      summary: Returns metadata about a file
      operationId: File_getMetadata
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: File id
          name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileEntity'
        '401':
          description: Not authorized
        '403':
          description: Permission denied
        '404':
          description: File not found
    delete:
      tags:
        - file
      summary: Delete a file
      operationId: File_removeFileById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: File id
          name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/file/{fileId}/download:
    get:
      tags:
        - file
      summary: Download a file
      operationId: File_getMetadataById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: File id
          name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Not authorized
        '403':
          description: Permission denied
        '404':
          description: File not found
  /v1/org/{orgId}/form/{formId}/remind:
    post:
      tags:
        - form
      summary: >-
        Sends reminder for a form with existing tasks, sending emails/chat
        notifications to people being requested
      operationId: Form_sendReminderNotification
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FormCollectRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form/status:
    post:
      tags:
        - form
      summary: Update status for existing forms
      operationId: Form_updateFormStatus
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Form data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormStatusUpdateRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/form/{formId}:
    get:
      tags:
        - form
      summary: Return a particular form by id
      operationId: Form_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Evaluate any expressions inside the form relative to a particular
            job
          name: evalJobId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - form
      summary: Submit data from a form
      operationId: Form_submitFormResponse
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Org id
          name: formId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FormSubmitRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
    delete:
      tags:
        - form
      summary: Delete a form
      operationId: Form_deleteFormById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - form
      summary: Update an existing form
      operationId: Form_updateExistingForm
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Form data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateForm'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/form/delete:
    delete:
      tags:
        - form
      summary: Delete forms
      operationId: Form_deleteFormById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Form ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDeleteFormByIdRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/form/{formId}/draft:
    get:
      tags:
        - form
      summary: Get the current state of form draft data
      operationId: Form_getCurrentStateOfDraftData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDraft'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
    post:
      tags:
        - form
      summary: Submit draft data from a form
      operationId: Form_submitDraftData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Org id
          name: formId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FormSubmitRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDraft'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form/{formId}/submit/draft:
    post:
      tags:
        - form
      summary: Submit data from a form draft
      operationId: Form_submitFormDraft
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
        - description: Target id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Target type
          name: targetType
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - PERSON
      requestBody:
        $ref: '#/components/requestBodies/submitFormDraftBody'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDraft'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form/{formId}/submit:
    post:
      tags:
        - form
      summary: Submit data from a form
      operationId: Form_submitFormData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
        - description: Target id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Target type
          name: targetType
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - PERSON
      requestBody:
        $ref: '#/components/requestBodies/submitFormDraftBody'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form/available:
    get:
      tags:
        - form
      summary: Return all active forms applicable to a particular entity
      operationId: Form_listAvailableForms
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Target id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Target type
          name: targetType
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - PERSON
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsFormSummary'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/form/{formId}/render:
    get:
      tags:
        - form
      summary: Render a form for display
      operationId: Form_renderForDisplay
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
        - description: Target id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Target type
          name: targetType
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - PERSON
        - description: Form response id, if editing a prior form response
          name: formResponseId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Form response change id, if editing a prior form response
            (deprecated)
          name: formResponseChangeId
          in: query
          required: false
          schema:
            type: string
        - description: Form version id, if rendering a previous version of the form
          name: formVersionId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRender'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/form/{formId}/rerender/question/{updateQuestionId}:
    post:
      tags:
        - form
      summary: Re-render form blocks based on changes to the form values
      operationId: Form_rerenderQuestionUpdate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
        - description: The question id that is being updated to trigger the re-render
          name: updateQuestionId
          in: path
          required: true
          schema:
            type: string
        - description: Target id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Target type
          name: targetType
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - PERSON
        - description: Form version id, if rendering a previous version of the form
          name: formVersionId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/submitFormDraftBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRerender'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/form/draft/{draftId}:
    delete:
      tags:
        - form
      summary: Delete the given form draft
      operationId: Form_deleteFormDraft
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form Draft id
          name: draftId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDraft'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form:
    get:
      tags:
        - form
      summary: Return all forms in the organization paginated
      operationId: Form_listOrgForms
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Status to filter by
          name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - ARCHIVED
        - description: Form id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsForm'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - form
      summary: Create a form
      operationId: Form_createNewForm
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Form data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForm'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form/person/{personId}:
    get:
      tags:
        - form
      summary: Return all active forms applicable to a particular person
      operationId: Form_getApplicableFormsForPerson
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsForm'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/form/{formId}/collect:
    post:
      tags:
        - form
      summary: >-
        Collect data for an existing form, sending emails and chat notifications
        to people being requested
      operationId: Form_sendEmailsAndChatNotifications
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FormCollectRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/form-response/{formResponseId}:
    get:
      tags:
        - form-response
      summary: Return a particular form response by id
      operationId: Formresponse_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: FormResponse id
          name: formResponseId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Data format to use for answers; default is json, can also use
            json-extended or json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponse'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - form-response
      summary: Re-submit (update) an existing form response's answers
      operationId: Formresponse_updateAnswersMetadata
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: FormResponse id
          name: formResponseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: FormResponse data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormresponseUpdateAnswersMetadataRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    delete:
      tags:
        - form-response
      summary: Delete a form response
      operationId: Formresponse_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: FormResponse id
          name: formResponseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - form-response
      summary: >-
        Update an existing form response's metadata, such as shareAccess
        information
      operationId: Formresponse_updateMetadata
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: FormResponse id
          name: formResponseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: FormResponse data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFormResponse'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/form-response:
    get:
      tags:
        - form-response
      summary: Return form responses by form
      operationId: Formresponse_getByForm
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id to filter by
          name: formId
          in: query
          required: false
          schema:
            type: string
        - description: Assessment id to filter by
          name: assessmentId
          in: query
          required: false
          schema:
            type: string
        - description: Person id to filter by (person who submitted the form)
          name: submitPersonId
          in: query
          required: false
          schema:
            type: string
        - description: Target id to filter by
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Filter to apply on the submitter
          name: submitPersonFilter
          in: query
          required: false
          schema:
            type: string
        - description: Filter to apply on the target
          name: targetFilter
          in: query
          required: false
          schema:
            type: string
        - description: FormResponse id to start paginating from
          name: fromId
          in: query
          required: false
          schema:
            type: string
        - description: Submit timestamp to start from (inclusive)
          name: fromSubmitAt
          in: query
          required: false
          schema:
            type: string
        - description: Submit timestamp to go until (exclusive)
          name: untilSubmitAt
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - form-response
      summary: Export form responses
      operationId: Formresponse_exportFormResponses
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormResponsesExportOptions'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/form-response/count:
    get:
      tags:
        - form-response
      summary: Return the total count of form responses
      operationId: Formresponse_getFormResponseCount
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form id to filter by
          name: formId
          in: query
          required: false
          schema:
            type: string
        - description: Assessment id to filter by
          name: assessmentId
          in: query
          required: false
          schema:
            type: string
        - description: Filter to apply on the submitter
          name: submitPersonFilter
          in: query
          required: false
          schema:
            type: string
        - description: Filter to apply on the target
          name: targetFilter
          in: query
          required: false
          schema:
            type: string
        - description: Submit timestamp to start from (inclusive)
          name: fromSubmitAt
          in: query
          required: false
          schema:
            type: string
        - description: Submit timestamp to go until (exclusive)
          name: untilSubmitAt
          in: query
          required: false
          schema:
            type: string
        - description: Question id to filter by
          name: questionId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseCount'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/form-response/{formResponseId}/approve:
    post:
      tags:
        - form-response
      summary: Approve a form response
      operationId: Formresponse_approveAction
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form response id
          name: formResponseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FormResponseApproval'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/form-response/{formResponseId}/reject:
    post:
      tags:
        - form-response
      summary: Reject a form response
      operationId: Formresponse_rejectFormResponse
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Form response id
          name: formResponseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FormResponseApproval'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/media/{mediaId}:
    get:
      tags:
        - media
      summary: Returns metadata about a piece of media
      operationId: Media_getMetadata
      description: ''
      parameters:
        - description: Media id
          name: mediaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '401':
          description: Not authorized
        '403':
          description: Permission denied
        '404':
          description: Media not found
  /v1/media:
    post:
      tags:
        - media
      summary: Upload a new piece of media
      operationId: Media_uploadNewMedia
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: Invalid type or bad request
        '401':
          description: Not authorized
  /v1/org/{orgId}/guideline:
    get:
      tags:
        - guideline
      summary: Get all guidelines for a given comp review
      operationId: Guideline_allForCompReview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: comp review id
          name: compReviewId
          in: query
          required: false
          schema:
            type: string
        - description: include deleted guidelines
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsGuideline'
    post:
      tags:
        - guideline
      summary: Create a new guideline
      operationId: Guideline_createNewGuideline
      description: ''
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGuideline'
      responses:
        default:
          description: successful operation
  /v1/org/{orgId}/guideline/{id}:
    get:
      tags:
        - guideline
      summary: Get a specific guideline
      operationId: Guideline_getSpecificGuideline
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired guideline
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guideline'
    delete:
      tags:
        - guideline
      summary: Delete a guideline
      operationId: Guideline_removeById
      description: ''
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
    patch:
      tags:
        - guideline
      summary: Update a guideline
      operationId: Guideline_updateGuideline
      description: ''
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGuideline'
      responses:
        default:
          description: successful operation
  /v1/org/{orgId}/guideline/{id}/calculate:
    get:
      tags:
        - guideline
      summary: >-
        Calculate the matrix values for a specific guideline (which may apply to
        multiple scenarios in the comp review)
      operationId: Guideline_calculateMatrixValuesForSpecificGuideline
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired guideline
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsGuidelineCalculation'
  /v1/org/{orgId}/import/csv/data:
    post:
      tags:
        - import
      summary: Import data from CSV file
      operationId: Import_csvData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: scenario id to import into
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            whether to skip erroneous rows, or reject the entire upload if any
            are invalid (default)
          name: skipErrors
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to create persons/jobs that are not matched
          name: upsert
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to create groups that are not matched
          name: createGroups
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            whether to disable adjusting dates of hires in cases where the start
            dates differ
          name: disableSyncHireDate
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            types of updates to apply (default all:
            title,comp,group,relationship,data,other)
          name: updateTypes
          in: query
          required: false
          schema:
            type: string
        - description: >-
            comma-separated list of user ids who should be notified when the
            import is complete
          name: notifyUserIds
          in: query
          required: false
          schema:
            type: string
        - description: name of the app that should be listed in the notify
          name: notifyAppName
          in: query
          required: false
          schema:
            type: string
        - description: date of the changes - if not presented on the csv file
          name: defaultChangeDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            disable overwriting changes to persons' data -- only update data if
            the person field is null
          name: disableOverwritePerson
          in: query
          required: false
          schema:
            type: boolean
        - description: import dry run
          name: importDryRun
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to automatically import if dry run succeeds
          name: importAfterDryRun
          in: query
          required: false
          schema:
            type: boolean
        - description: process id of parent process
          name: parentProcessId
          in: query
          required: false
          schema:
            type: string
        - description: self identified source caller into this method
          name: importSource
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/import/csv/columnMatch:
    post:
      tags:
        - import
      summary: Import data from CSV file
      operationId: Import_csvDataWithColumnMatch
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: scenario id to import into
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            whether to skip erroneous rows, or reject the entire upload if any
            are invalid (default)
          name: skipErrors
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to create persons/jobs that are not matched
          name: upsert
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to create groups that are not matched
          name: createGroups
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            whether to disable adjusting dates of hires in cases where the start
            dates differ
          name: disableSyncHireDate
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            types of updates to apply (default all:
            title,comp,group,relationship,data,other)
          name: updateTypes
          in: query
          required: false
          schema:
            type: string
        - description: >-
            comma-separated list of user ids who should be notified when the
            import is complete
          name: notifyUserIds
          in: query
          required: false
          schema:
            type: string
        - description: name of the app that should be listed in the notify
          name: notifyAppName
          in: query
          required: false
          schema:
            type: string
        - description: date of the changes - if not presented on the csv file
          name: defaultChangeDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            disable overwriting changes to persons' data -- only update data if
            the person field is null
          name: disableOverwritePerson
          in: query
          required: false
          schema:
            type: boolean
        - description: import dry run
          name: importDryRun
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to automatically import if dry run succeeds
          name: importAfterDryRun
          in: query
          required: false
          schema:
            type: boolean
        - description: process id of parent process
          name: parentProcessId
          in: query
          required: false
          schema:
            type: string
        - description: self identified source caller into this method
          name: importSource
          in: query
          required: false
          schema:
            type: string
        - description: import images from csv
          name: syncImages
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportCsvDataWithColumnMatchRequest'
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/import/csv/filepath:
    post:
      tags:
        - import
      summary: Import data from CSV file
      operationId: Import_csvDataWithFilePath
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: filePath
          name: filePath
          in: query
          required: false
          schema:
            type: string
        - description: scenario id to import into
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            whether to skip erroneous rows, or reject the entire upload if any
            are invalid (default)
          name: skipErrors
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to create persons/jobs that are not matched
          name: upsert
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to create groups that are not matched
          name: createGroups
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            whether to disable adjusting dates of hires in cases where the start
            dates differ
          name: disableSyncHireDate
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            types of updates to apply (default all:
            title,comp,group,relationship,data,other)
          name: updateTypes
          in: query
          required: false
          schema:
            type: string
        - description: >-
            comma-separated list of user ids who should be notified when the
            import is complete
          name: notifyUserIds
          in: query
          required: false
          schema:
            type: string
        - description: name of the app that should be listed in the notify
          name: notifyAppName
          in: query
          required: false
          schema:
            type: string
        - description: date of the changes - if not presented on the csv file
          name: defaultChangeDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            disable overwriting changes to persons' data -- only update data if
            the person field is null
          name: disableOverwritePerson
          in: query
          required: false
          schema:
            type: boolean
        - description: import dry run
          name: importDryRun
          in: query
          required: false
          schema:
            type: boolean
        - description: whether to automatically import if dry run succeeds
          name: importAfterDryRun
          in: query
          required: false
          schema:
            type: boolean
        - description: process id of parent process
          name: parentProcessId
          in: query
          required: false
          schema:
            type: string
        - description: self identified source caller into this method
          name: importSource
          in: query
          required: false
          schema:
            type: string
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/import/spreadsheet/validateFormat:
    post:
      tags:
        - import
      summary: Check if a spreadsheet file is valid to be imported
      operationId: Import_spreadsheetValidation
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Max rows allowed in an imported spreadsheet file
          name: maxRows
          in: query
          required: false
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/import/csv/initialColumnMatch:
    post:
      tags:
        - import
      summary: >-
        Parse a CSV file in preparation for column matching as part of
        spreadsheet import process
      operationId: Import_csvDataColumnMatch
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/job-level:
    get:
      tags:
        - job-level
      summary: Find job levels in the organization
      operationId: Joblevel_findInOrganization
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Job level id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Include deleted job levels
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - job-level
      summary: Create a job level
      operationId: Joblevel_createNewJobLevel
      description: ''
      parameters:
        - description: org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of job level creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobLevel'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/job-level/{jobLevelId}:
    get:
      tags:
        - job-level
      summary: Return a particular job level by id on an effective date
      operationId: Joblevel_getByEffectiveDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job level id
          name: jobLevelId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - job-level
      summary: Delete a job level
      operationId: Joblevel_deleteJobLevel
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job level id
          name: jobLevelId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of group update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - job-level
      summary: Update a job level
      operationId: Joblevel_updateJobLevel
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job level id
          name: jobLevelId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of jobLevel update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobLevel'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/legaldoc/{name}:
    get:
      tags:
        - legalDoc
      summary: Retrieve the legal doc by name
      operationId: LegalDoc_getByName
      description: ''
      parameters:
        - description: name
          name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalDoc'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/legaldoc:
    post:
      tags:
        - legalDoc
      summary: Create a legal doc
      operationId: LegalDoc_createDocument
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLegalDoc'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/media/{mediaId}:
    get:
      tags:
        - media
      summary: Returns metadata about a piece of media
      operationId: Media_getMetadata
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Media id
          name: mediaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '401':
          description: Not authorized
        '403':
          description: Permission denied
        '404':
          description: Media not found
  /v1/org/{orgId}/media:
    post:
      tags:
        - media
      summary: Upload a new piece of media
      operationId: Media_uploadNewPiece
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: Invalid type or bad request
        '401':
          description: Not authorized
  /v1/org/{orgId}/message:
    post:
      tags:
        - message
      summary: Create a new message
      operationId: Message_createNewMessage
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Message data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialMessage'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/message/me/{messageKey}:
    get:
      tags:
        - message
      summary: Return a particular message by key
      operationId: Message_getMessageByKey
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Message key
          name: messageKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: unauthorized
  /v1/org/{orgId}/message/{messageId}/read:
    post:
      tags:
        - message
      summary: Sets the designated message's `readAt` property
      operationId: Message_setReadStatus
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Message id
          name: messageId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/message/bulk/read:
    post:
      tags:
        - message
      summary: Sets each of the designated message's `readAt` property
      operationId: Message_markMessagesAsRead
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/PartialMessageArray'
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/message/bulk/seen:
    post:
      tags:
        - message
      summary: Marks each message as `seen`
      operationId: Message_markBulkAsSeen
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/PartialMessageArray'
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/message/{messageId}:
    get:
      tags:
        - message
      summary: Return a particular message by id
      operationId: Message_getMessageById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Message id
          name: messageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: unauthorized
  /v1/org/{orgId}/message/me:
    get:
      tags:
        - message
      summary: Return all messages for a particular user
      operationId: Message_getAllForUser
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Message "type" (WEB, CHAT, or EMAIL)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Message "status" (read or unread)
          name: unreadOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: MessageId to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Limit
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsMessage'
        '401':
          description: unauthorized
  /v1/org/{orgId}/metric:
    post:
      tags:
        - metric
      summary: Record a daily metric
      operationId: Metric_recordDailyMetric
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordMetricRequest'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/multiplier:
    get:
      tags:
        - multiplier
      summary: Find comp band multipliers in the organization
      operationId: Multiplier_findCompBandMultipliersInOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Multiplier id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Include deleted multipliers
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - multiplier
      summary: Create a multiplier
      operationId: Multiplier_createNewMultiplier
      description: ''
      parameters:
        - description: org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of multiplier creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultiplier'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/multiplier/{multiplierId}:
    get:
      tags:
        - multiplier
      summary: Return a particular comp band multiplier by id on an effective date
      operationId: Multiplier_findCompBandMultipliersInOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Comp band multiplier id
          name: multiplierId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - multiplier
      summary: Delete a multiplier
      operationId: Multiplier_deleteMultiplierById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Multiplier id
          name: multiplierId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of group update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - multiplier
      summary: Update a multiplier
      operationId: Multiplier_updateMultiplerById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Multiplier id
          name: multiplierId
          in: path
          required: true
          schema:
            type: string
        - description: Effective date of multiplier update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMultiplier'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/notification:
    post:
      tags:
        - notification
      summary: Send a email or in-app notification
      operationId: Notification_sendEmailOrInAppNotification
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Notification request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /oauth/token:
    post:
      tags:
        - oauth
      summary: >-
        Return an Oauth2 Authorization bearer token, given a username and
        password
      operationId: Oauth_authorizeUserToken
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OauthAuthorizeUserTokenRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid credentials
    delete:
      tags:
        - oauth
      summary: Delete the current Oauth2 bearer token (for signout)
      operationId: Oauth_revokeBearerToken
      description: ''
      responses:
        default:
          description: not authorized
  /oauth/token/sso/{type}:
    post:
      tags:
        - oauth
      summary: Return an Oauth2 Authorization bearer token, given a SSO id token
      operationId: Oauth_generateBearerTokenFromSSO
      description: ''
      parameters:
        - description: type of SSO request (google or microsoft)
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: automatically create org if possible to do so
          name: createOrg
          in: query
          required: false
          schema:
            type: boolean
        - description: sign up source (self-serve, connect, or sequoia)
          name: signupSource
          in: query
          required: false
          schema:
            type: string
            enum:
              - ADP_MARKETPLACE
              - SELF_SERVE
              - SELF_SERVE_TEST
              - SEQUOIA_ONE
              - CONNECT
        - description: utm params (used in salesforce for lead tracking)
          name: utmParams
          in: query
          required: false
          schema:
            type: string
        - description: sign up email address
          name: email
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: access token request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid credentials
  /oauth/token/view:
    post:
      tags:
        - oauth
      summary: Return a view-as token
      operationId: Oauth_returnViewToken
      description: ''
      requestBody:
        description: request on whom to view as
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewAsRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid credentials
  /oauth/app/{appName}:
    get:
      tags:
        - oauth
      summary: >-
        Process an Oauth2 redirect request from an access request for an app
        installation, storing the accessToken and refreshToken as secrets for
        the app
      operationId: Oauth_processOauthRedirectRequest
      description: ''
      parameters:
        - name: token
          in: cookie
          required: false
          schema:
            type: string
        - description: App name
          name: appName
          in: path
          required: true
          schema:
            type: string
        - description: State, containing orgId and appUserId
          name: state
          in: query
          required: false
          schema:
            type: string
        - description: Temporary authorization code
          name: code
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /oauth/sso/{idp}/login:
    get:
      tags:
        - oauth
      summary: Login via the auth endpoint
      operationId: Oauth_loginViaIdp
      description: ''
      parameters:
        - description: Identity provider of SSO login (e.g. adp)
          name: idp
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /oauth/sso/{idp}/access-token:
    get:
      tags:
        - oauth
      summary: Exchange a one-time use Auth Code for the IDP access token response
      operationId: Oauth_exchangeIdpAccessTokenResponse
      description: ''
      parameters:
        - description: Identity provider of SSO login (e.g. adp)
          name: idp
          in: path
          required: true
          schema:
            type: string
        - description: A one-time use Auth Code
          name: authCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpAccessTokenResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/onboard:
    get:
      tags:
        - onboard
      summary: Returns all the onboarding steps the organization has not completed
      operationId: Onboard_incompleteSteps
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Return only uncompleted steps, or all steps?
          name: getUncomplete
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsOnboardStep'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/onboard/{stepName}/skip:
    post:
      tags:
        - onboard
      summary: Marks the given onboard step as 'skipped' for the given customer
      operationId: Onboard_markStepSkipped
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Step name
          name: stepName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/config:
    get:
      tags:
        - org-config
      summary: Return config for a given org
      operationId: Orgconfig_getByOrgId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfig'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: internal server error
    post:
      tags:
        - org-config
      summary: Create an org config if it doesn't exist
      operationId: Orgconfig_createIfNotExists
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Org config to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrgConfig'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfig'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: internal server error
    patch:
      tags:
        - org-config
      summary: Update an existing org config
      operationId: Orgconfig_patchExistingConfig
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Sort data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrgConfig'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: internal server error
  /v1/org/{orgId}:
    get:
      tags:
        - org
      summary: Return a particular org by id
      operationId: Org_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          description: bad request
        '404':
          description: not found
    patch:
      tags:
        - org
      summary: Update an existing org
      operationId: Org_updateExistingOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Org data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrg'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /org/{slug}:
    get:
      tags:
        - org
      summary: Return validation for a org by slug
      operationId: Org_getValidationBySlug
      description: ''
      parameters:
        - description: Org slug
          name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/slug/{slug}:
    get:
      tags:
        - org
      summary: Return a particular org by slug
      operationId: Org_getBySlug
      description: ''
      parameters:
        - description: Org slug
          name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org:
    get:
      tags:
        - org
      summary: Return all visible orgs, paginated by name
      operationId: Org_listVisibleOrgs
      description: ''
      parameters:
        - description: Org id to start from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Search query
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Find orgs belonging to a particular customer id
          name: customerId
          in: query
          required: false
          schema:
            type: string
        - description: Include only orgs where type is REAL?
          name: realOnly
          in: query
          required: false
          schema:
            type: boolean
        - description: Only include orgs whose last createAt occurred after the date
          name: lastCreateAt
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Only include orgs whose last activeAt occurred after the date
          name: lastActiveAt
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Filter orgs by internal option key-value pair
          name: internalOptions
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsOrg'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - org
      summary: Create a new org
      operationId: Org_createNewOrg
      description: ''
      requestBody:
        description: Org data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrg'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{org}/app-install-code:
    post:
      tags:
        - org
      summary: Retrieve an Oauth2 authorization code to install an app at this org
      operationId: Org_getOauth2AuthorizationCode
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: org
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/app-install-code/validate:
    post:
      tags:
        - org
      summary: Validate authorization code
      operationId: Org_validateAppInstallAuthorizationCode
      description: ''
      requestBody:
        description: Authorization code to validate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppInstallCodeValidateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstallCodeValidateResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/data-user-person-count:
    get:
      tags:
        - org
      summary: >-
        Gets the count of joined users, invited users, and org members who are
        not yet invited
      operationId: Org_getDataUserPersonCount
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUsersPersonsCountResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/data-user-person:
    get:
      tags:
        - org
      summary: >-
        Gets a user or person by id. If both are provided, userId takes
        precedence
      operationId: Org_getDataUserPersonById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: userId
          name: userId
          in: query
          required: false
          schema:
            type: string
        - description: personId
          name: personId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUsersPersonsResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/data-users-persons:
    get:
      tags:
        - org
      summary: >-
        Gets a list of org users (joined or invited) and org members (not yet
        invited)
      operationId: Org_getDataUsersPersons
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: limit
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: offset
          name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Sort by
          name: sort
          in: query
          required: false
          example: name, email, role, expr, invite, active
          schema:
            type: string
        - description: Filter by user role label
          name: role
          in: query
          required: false
          example: Owner, Technical Owner, Employee, etc...
          schema:
            type: string
        - description: Filter by status
          name: status
          in: query
          required: false
          example: joined, invited, not-invited
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUsersPersonsResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/change-head:
    post:
      tags:
        - org
      summary: >-
        Create a new org head in the history, by creating an empty job
        placeholder above the current head
      operationId: Org_createNewJobPlaceholder
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/welcome-email:
    get:
      tags:
        - org
      summary: >-
        Gets the custom setting or default for the welcome email's subject,
        body, cta button label
      operationId: Org_getWelcomeEmailSettings
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeEmailSettings'
        '403':
          description: Permission denied
        '500':
          description: Service error
  /v1/org/{orgId}/test-email:
    post:
      tags:
        - org
      summary: Send a test welcome email to oneself
      operationId: Org_sendTestEmailToOneself
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmailRequest'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/agreement:
    post:
      tags:
        - org
      summary: Consent on Terms of Service agreement
      operationId: Org_consentTermsOfService
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementRequest'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/access:
    get:
      tags:
        - org
      summary: Return information on current user's access
      operationId: Org_getUserAccess
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
  /v1/org/{orgId}/policy/{policyId}:
    get:
      tags:
        - policy
      summary: Return a particular policy by id
      operationId: Policy_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Policy id
          name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - policy
      summary: Delete a policy
      operationId: Policy_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Policy id
          name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    patch:
      tags:
        - policy
      summary: Update an existing policy
      operationId: Policy_updateExistingPolicy
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Policy id
          name: policyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Policy data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicy'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/policy:
    get:
      tags:
        - policy
      summary: Return all or a set of policies in the organization
      operationId: Policy_getAllPolicies
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: (Optional) Comma separated Policy Ids to find
          name: ids
          in: query
          required: false
          schema:
            type: string
        - description: (Optional) Return only default or custom policies
          name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsPolicy'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - policy
      summary: Create a policy
      operationId: Policy_createNewPolicy
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Policy data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicy'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/policy/{policyId}/copy:
    post:
      tags:
        - policy
      summary: Copy an existing policy
      operationId: Policy_copyExistingPolicy
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Policy id
          name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/policy/validate:
    post:
      tags:
        - policy
      summary: Return if a policy is valid
      operationId: Policy_checkValidityOf
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Policy data to verify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialPolicy'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/policy/action:
    get:
      tags:
        - policy
      summary: Return all entity:action maps allowed on a policy rule
      operationId: Policy_getAllEntityActionMaps
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAction'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/preload:
    get:
      tags:
        - preload
      summary: Return a set of pre-loaded data required by the web app
      operationId: Preload_preloadedDataRetrieval
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreloadResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/process/{processId}/decrement:
    put:
      tags:
        - process
      summary: Decrement the step of an asynchronous process
      operationId: Process_decrementStep
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process:
    get:
      tags:
        - process
      summary: Retrieve a number of previously run processes
      operationId: Process_getPreviouslyRunProcesses
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Boolean if an app process
          name: isAppProcess
          in: query
          required: false
          schema:
            type: boolean
        - description: App ID to filter by
          name: appId
          in: query
          required: false
          schema:
            type: string
        - description: Parent process ID to search for children
          name: parentProcessId
          in: query
          required: false
          schema:
            type: string
        - description: 'Type to filter by. Accepted values: [''auto'', ''manual'']'
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: completed at start
          name: completedAtStart
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: completed at end
          name: completedAtEnd
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: >-
            Statuses to filter by, comma-separated. Accepted values: ['DONE',
            'ERROR', 'PENDING', 'RUNNING', 'DONE_WITH_ERRORS']
          name: statuses
          in: query
          required: false
          schema:
            type: string
        - description: Boolean if a parent process
          name: isParentProcess
          in: query
          required: false
          schema:
            type: boolean
        - description: Process types to filter by, comma-separated.
          name: processTypes
          in: query
          required: false
          schema:
            type: string
        - description: Search term for general filtering
          name: searchValue
          in: query
          required: false
          schema:
            type: string
        - description: from id
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: limit
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: direction
          name: syncDirections
          in: query
          required: false
          schema:
            type: string
        - description: >-
            V2 Causes to filter by, comma-separated. Accepted values: ['MANUAL',
            'AUTO', 'EVENT_BASED]
          name: syncCauses
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsProcess'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
    post:
      tags:
        - process
      summary: Creates a new process in the pending state
      operationId: Process_createNewPendingProcess
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateProcess'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/file:
    get:
      tags:
        - process
      summary: Download the file associated with a particular process
      operationId: Process_downloadFileById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
    post:
      tags:
        - process
      summary: >-
        Upload a file to be attached to a process, and mark the process as
        complete
      operationId: Process_uploadFileAndMarkComplete
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '200':
          description: OK
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/log:
    get:
      tags:
        - process
      summary: >-
        Download the newline-delimited JSON log associated with a particular
        process
      operationId: Process_downloadLog
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}:
    get:
      tags:
        - process
      summary: Check the status of a particular process
      operationId: Process_checkProcessStatus
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
        - description: showState
          name: showState
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
    patch:
      tags:
        - process
      summary: >-
        Update the status of a process, marking its progress or setting status
        to DONE or ERROR
      operationId: Process_updateStatusOfProcess
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProcess'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/last-sync/{appUserId}:
    get:
      tags:
        - process
      summary: Get last success sync and last sync for given appUserId
      operationId: Process_getLastSyncForAppUser
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: app user id
          name: appUserId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProcessStatus'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{createIdOverride}:
    post:
      tags:
        - process
      summary: Creates a new process with a specified createId in the pending state
      operationId: Process_createPendingProcessWithUserId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: created user id override
          name: createIdOverride
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateProcess'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/self-serve:
    post:
      tags:
        - process
      summary: Creates a new process in the pending state
      operationId: Process_createPendingProcess
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Process type
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Max rows allowed in an imported spreadsheet file
          name: maxRows
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Min columns required in an imported spreadsheet file
          name: minColumns
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether the created process is sync flow or manual flow
          name: isSync
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessCreatePendingProcessRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/state:
    put:
      tags:
        - process
      summary: Update process state
      operationId: Process_updateProcessState
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: state
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessUpdateProcessStateRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/resumeWithFile:
    put:
      tags:
        - process
      summary: Resume an asynchronous process
      operationId: Process_resumeWithFile
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/events:
    get:
      tags:
        - process
      summary: Get events associated to a particular process
      operationId: Process_getEventsByProcessId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessEventResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/increment:
    put:
      tags:
        - process
      summary: Increment the step of an asynchronous process
      operationId: Process_incrementProcessStep
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/process/{processId}/resume:
    put:
      tags:
        - process
      summary: Resume an asynchronous process
      operationId: Process_resumeProcessWithUserId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: process id
          name: processId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: data to process
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessResumeProcessWithUserIdRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/product:
    get:
      tags:
        - product
      summary: Return all products
      operationId: Product_listAllProducts
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsProduct'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - product
      summary: Create a new product
      operationId: Product_createNewProduct
      description: ''
      requestBody:
        description: Product data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/product/{productId}:
    get:
      tags:
        - product
      summary: Return a particular product by id
      operationId: Product_getById
      description: ''
      parameters:
        - description: Product id
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: bad request
        '404':
          description: not found
    patch:
      tags:
        - product
      summary: Update an existing product
      operationId: Product_updateExistingProduct
      description: ''
      parameters:
        - description: Product id
          name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Product data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/profile-tab/person/{personId}:
    get:
      tags:
        - profile-tab
      summary: Return all profile tabs applicable to a particular person
      operationId: Profiletab_getProfileTabs
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: path
          required: true
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Return profile tabs that contain particular fields (comma-separated)
          name: fields
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsProfileTabSummary'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/profile-tab/job/{jobId}:
    get:
      tags:
        - profile-tab
      summary: Return all profile tabs applicable to a particular job
      operationId: Profiletab_findTabsForJob
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Return profile tabs that contain particular fields (comma-separated)
          name: fields
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsProfileTabSummary'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/profile-tab/job/{jobId}/profile-tab/{tabId}:
    get:
      tags:
        - profile-tab
      summary: >-
        Fetch and evaluate the content of a particular profile tab id, relative
        to a particular job
      operationId: Profiletab_getEvaluateProfileTabContent
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Profile tab id
          name: tabId
          in: path
          required: true
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTabSummary'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/profile-tab/person/{personId}/profile-tab/{tabId}/history:
    get:
      tags:
        - profile-tab
      summary: >-
        Evaluate the history (in the form of various cards) on a particular
        profile tab id, relative to a particular person
      operationId: Profiletab_evaluateHistoryOnTab
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: path
          required: true
          schema:
            type: string
        - description: Profile tab id
          name: tabId
          in: path
          required: true
          schema:
            type: string
        - description: Search backwards in time from timestamp
          name: from
          in: query
          required: false
          schema:
            type: string
            format: int64
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsProfileTabResponseCard'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/profile-tab/{profileTabId}:
    get:
      tags:
        - profile-tab
      summary: Return a particular profile tab by id
      operationId: Profiletab_getByOrgIdAndTabId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Content id
          name: profileTabId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTab'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - profile-tab
      summary: Delete a profile tab
      operationId: Profiletab_deleteProfileTab
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Profile tab id
          name: profileTabId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - profile-tab
      summary: Update an existing profile tab
      operationId: Profiletab_updateExistingTab
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Profile tab id
          name: profileTabId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Profile tab data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileTab'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/profile-tab:
    get:
      tags:
        - profile-tab
      summary: Return all profile tabs in the organization paginated
      operationId: Profiletab_listProfileTabs
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Status to filter by
          name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - description: Content id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsProfileTab'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - profile-tab
      summary: Create a profile tab
      operationId: Profiletab_createNewTab
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Profile tab data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileTab'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTab'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/query:
    get:
      tags:
        - query
      summary: Get a list of query tokens
      operationId: Query_queryTokens
      description: ''
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryQueryTokensResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - query
      summary: Create a live query token
      operationId: Query_liveQueryToken
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQueryToken'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryToken'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/query/{queryToken}:
    get:
      tags:
        - query
      summary: Return the results of a previously created live query
      operationId: Query_liveQueryResult
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Query token
          name: queryToken
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: Deprecated parameter for backwards-compatibility
          name: mapper
          in: query
          required: false
          schema:
            type: string
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - query
      summary: Expire a previously created live query immediately
      operationId: Query_expireLiveQuery
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Query token (either id or token string)
          name: queryToken
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/question/{questionId}:
    get:
      tags:
        - question
      summary: Return a particular question by id
      operationId: Question_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Question id
          name: questionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - question
      summary: Delete a question
      operationId: Question_remove
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Question id
          name: questionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - question
      summary: Update an existing question
      operationId: Question_updateByOrgAndId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Question id
          name: questionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Question data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuestion'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/question:
    get:
      tags:
        - question
      summary: Return all questions in the organization paginated
      operationId: Question_getAllInOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Question id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Comma separated Question Ids to find
          name: ids
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsQuestion'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - question
      summary: Create a question
      operationId: Question_create
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Question data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestion'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/report/{reportId}/chart:
    get:
      tags:
        - reportChart
      summary: Return all of the charts for a particular report
      operationId: ReportChart_getAll
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsReportChart'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - reportChart
      summary: Create a new chart in a report
      operationId: ReportChart_createNewChart
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Report chart data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportChart'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportChart'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/report/chart/{chartId}:
    get:
      tags:
        - reportChart
      summary: Return a particular report chart by id
      operationId: ReportChart_getByChartId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportChart'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - reportChart
      summary: Delete a chart from a report
      operationId: ReportChart_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - reportChart
      summary: Update an existing report chart
      operationId: ReportChart_updateExistingChartData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Chart data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReportChart'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}/chart/{chartId}/data:
    get:
      tags:
        - reportChart
      summary: Export a particular chart's data
      operationId: ReportChart_exportData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
        - description: Start date, inclusive
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: End date, exclusive
          name: endDate
          in: query
          required: false
          schema:
            type: string
        - description: Interval
          name: interval
          in: query
          required: false
          schema:
            type: string
            enum:
              - DAY
              - WEEK
              - MONTH
              - QUARTER
              - FISCAL_QUARTER
              - YEAR
              - FISCAL_YEAR
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Project future hires
          name: projectHires
          in: query
          required: false
          schema:
            type: boolean
        - description: Data format to use; default is json, can also use html
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}/chart/{chartId}/query:
    get:
      tags:
        - reportChart
      summary: Query for the underlying data in a chart
      operationId: ReportChart_queryUnderlyingDataInChart
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
        - description: Query to run
          name: providedQuery
          in: query
          required: false
          schema:
            type: string
        - description: Start date, inclusive
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: End date, exclusive
          name: endDate
          in: query
          required: false
          schema:
            type: string
        - description: Interval
          name: interval
          in: query
          required: false
          schema:
            type: string
            enum:
              - DAY
              - WEEK
              - MONTH
              - QUARTER
              - FISCAL_QUARTER
              - YEAR
              - FISCAL_YEAR
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Project future hires
          name: projectHires
          in: query
          required: false
          schema:
            type: boolean
        - description: Type of change grouping
          name: changeGroupingType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PRIMARY
              - SCENARIO
              - COMP_REVIEW
        - description: Change grouping id to query (null for primary)
          name: changeGroupingId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportMetricsReturnType'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}/chart/{chartId}/clone:
    post:
      tags:
        - reportChart
      summary: Clone a chart in a report
      operationId: ReportChart_cloneChart
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
        - description: New label
          name: chartLabel
          in: query
          required: false
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportChart'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/report:
    get:
      tags:
        - report
      summary: Return all reports in the organization paginated
      operationId: Report_getAllPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Offset
          name: fromId
          in: query
          required: false
          schema:
            type: string
        - description: Limit
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Sort
          name: sort
          in: query
          required: false
          schema:
            type: string
        - description: Filter
          name: filter
          in: query
          required: false
          schema:
            type: string
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDataStreamResults'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - report
      summary: Create a report
      operationId: Report_createNewReport
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Report data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReport'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/report/count:
    get:
      tags:
        - report
      summary: Return count of reports in an organization
      operationId: Report_getCountOfReportsInOrganization
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCount'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}:
    get:
      tags:
        - report
      summary: Return a particular report by id
      operationId: Report_findReportById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - report
      summary: Delete a report
      operationId: Report_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - report
      summary: Update an existing report
      operationId: Report_updateExistingReport
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
        - description: Displayed report url
          name: referencedReportUrl
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Report data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReport'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/report/query:
    post:
      tags:
        - report
      summary: Return timeseries data from arbitrary queries
      operationId: Report_timeseriesDataArbitraryQueries
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportQuery'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportTimeseriesDataArbitraryQueriesResponse
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}/query:
    get:
      tags:
        - report
      summary: Query all the charts in a report
      operationId: Report_getAllReportCharts
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
        - description: Start date, inclusive
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: End date, exclusive
          name: endDate
          in: query
          required: false
          schema:
            type: string
        - description: Interval
          name: interval
          in: query
          required: false
          schema:
            type: string
            enum:
              - DAY
              - WEEK
              - MONTH
              - QUARTER
              - FISCAL_QUARTER
              - YEAR
              - FISCAL_YEAR
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Project future hires
          name: projectHires
          in: query
          required: false
          schema:
            type: boolean
        - description: Filter to apply to all results
          name: filter
          in: query
          required: false
          schema:
            type: string
        - description: Type of change grouping
          name: changeGroupingType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PRIMARY
              - SCENARIO
              - COMP_REVIEW
        - description: Change grouping id to query (null for primary)
          name: changeGroupingId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportGetAllReportChartsResponse'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}/chart/{chartId}/export/csv:
    post:
      tags:
        - report
      summary: Export a particular chart in a report
      operationId: Report_exportChartCsv
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
        - description: Chart id
          name: chartId
          in: path
          required: true
          schema:
            type: string
        - description: Start date, inclusive
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: End date, exclusive
          name: endDate
          in: query
          required: false
          schema:
            type: string
        - description: Interval
          name: interval
          in: query
          required: false
          schema:
            type: string
            enum:
              - DAY
              - WEEK
              - MONTH
              - QUARTER
              - FISCAL_QUARTER
              - YEAR
              - FISCAL_YEAR
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Project future hires
          name: projectHires
          in: query
          required: false
          schema:
            type: boolean
        - description: Additional filter to apply
          name: filter
          in: query
          required: false
          schema:
            type: string
        - description: Type of change grouping
          name: changeGroupingType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PRIMARY
              - SCENARIO
              - COMP_REVIEW
        - description: Change grouping id to query (null for primary)
          name: changeGroupingId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/report/{reportId}/clone:
    post:
      tags:
        - report
      summary: Create an exact copy of an existing report
      operationId: Report_createExactCopy
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/report/bulk-delete:
    post:
      tags:
        - report
      summary: Delete a set of reports
      operationId: Report_bulkDelete
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of report ids to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportBulkDeleteRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/report/bulk-duplicate:
    post:
      tags:
        - report
      summary: Duplicate a set of reports
      operationId: Report_duplicateReports
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of report ids to duplicate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportDuplicateReportsRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/role:
    get:
      tags:
        - role
      summary: Return all or a set of roles in the organization
      operationId: Role_getAllInOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: (Optional) Comma separated Role Ids to find
          name: ids
          in: query
          required: false
          schema:
            type: string
        - description: (Optional) Return only default or custom roles
          name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsRole'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - role
      summary: Create a role
      operationId: Role_createNewRole
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Role data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/role/{roleId}:
    get:
      tags:
        - role
      summary: Return a particular role by id
      operationId: Role_getRoleById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Role id
          name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - role
      summary: Delete a role
      operationId: Role_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Role id
          name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    patch:
      tags:
        - role
      summary: Update an existing role
      operationId: Role_updateExisting
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Role id
          name: roleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Role data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRole'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/role/{roleId}/copy:
    post:
      tags:
        - role
      summary: Copy an existing role
      operationId: Role_copyExistingRole
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Role id
          name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /saml/{org}/login:
    post:
      tags:
        - saml
      summary: Return an redirect to the designated Idp, given an identity provider
      operationId: Saml_performSsoAssertion
      description: ''
      parameters:
        - description: Org slug
          name: org
          in: path
          required: true
          schema:
            type: string
        - description: Identifier Provider
          name: idp
          in: query
          required: false
          schema:
            type: string
      responses:
        default:
          description: invalid data
  /saml/sso/{org}:
    post:
      tags:
        - saml
      summary: Single sign on URL, where SAML assertion is perform
      operationId: Saml_performSsoAssertion
      description: ''
      parameters:
        - name: token
          in: cookie
          required: false
          schema:
            type: string
        - description: Org slug
          name: org
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SamlPerformSsoAssertionRequest'
      responses:
        default:
          description: invalid data
  /saml/org/{orgId}/xml-cert:
    get:
      tags:
        - saml
      summary: Save per org Xml Cert from IDP
      operationId: Saml_savePerOrgXmlCertFromIdp
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Identifier Provider
          name: idp
          in: query
          required: false
          schema:
            type: string
      responses:
        default:
          description: invalid data
    post:
      tags:
        - saml
      summary: Save per org Xml Cert from IDP
      operationId: Saml_savePerOrgXmlCertFromIdp
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Identifier Provider
          name: idp
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        default:
          description: invalid data
  /v1/org/{orgId}/scenario/bulk/archive:
    post:
      tags:
        - scenario
      summary: Archive a set of scenarios
      operationId: Scenario_bulkArchiveScenarios
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of scenario ids to archive
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioBulkArchiveScenariosRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario/bulk/delete:
    post:
      tags:
        - scenario
      summary: Delete a set of scenarios
      operationId: Scenario_deleteBulkScenarios
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of scenario ids to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioDeleteBulkScenariosRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario/bulk/unarchive:
    post:
      tags:
        - scenario
      summary: Unarchive a set of scenarios
      operationId: Scenario_unarchiveSetOfScenarios
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of scenario ids to unarchive
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioUnarchiveSetOfScenariosRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario:
    get:
      tags:
        - scenario
      summary: Return all scenarios in the organization paginated
      operationId: Scenario_listPaginatedScenarios
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Scenario status to filter by
          name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - OPEN
              - INACTIVE
              - MERGED
              - DRAFT
              - ARCHIVED
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsScenario'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - scenario
      summary: Create a scenario
      operationId: Scenario_createNew
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Suppress notification emails
          name: silent
          in: query
          required: false
          schema:
            type: boolean
        - description: Skip over change creation for PROMOTION scenarios
          name: skipChangeCreation
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: Scenario data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScenario'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/scenario/{scenarioId}:
    get:
      tags:
        - scenario
      summary: Return a particular scenario by id
      operationId: Scenario_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - scenario
      summary: Delete a scenario
      operationId: Scenario_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - scenario
      summary: Update an existing scenario
      operationId: Scenario_updateScenarioChange
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
        - description: Suppress notification emails
          name: silent
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        description: Scenario data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScenario'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/dates:
    post:
      tags:
        - scenario
      summary: Adjust the dates of the changes in a scenario
      operationId: Scenario_adjustDates
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustScenarioDateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/merge:
    post:
      tags:
        - scenario
      summary: Merge a scenario into the primary timeline
      operationId: Scenario_mergeIntoPrimaryTimeline
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to merge
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
        - description: If passed, will skip any changes that fail validation
          name: skipErrors
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/combine:
    post:
      tags:
        - scenario
      summary: Combine multiple scenarios into another scenario
      operationId: Scenario_combineScenarios
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to combine the other scenarios into
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CombineScenarioRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/recalculate-metadata:
    post:
      tags:
        - scenario
      summary: Manually recalculate a scenario's metadata
      operationId: Scenario_manuallyRecalculateMetadata
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioMetadata'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/scenario/{scenarioId}/update-shared-view:
    post:
      tags:
        - scenario
      summary: Update a scenario view config
      operationId: Scenario_updateSharedViewConfig
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioSharedViewConfig'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/search:
    get:
      tags:
        - search
      summary: >-
        Return people, job, group, and field data for a particular org that
        match a provided search string
      operationId: Search_orgDataByOrgIdAndSearchString
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Query search term
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Entity types
          name: entityTypes
          in: query
          required: false
          schema:
            type: string
        - description: Limit
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Include former users or persons
          name: includeFormer
          in: query
          required: false
          schema:
            type: boolean
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario Id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: entity action pairs that can be accessed
          name: canAccess
          in: query
          required: false
          schema:
            type: string
        - description: Include External Recruiter
          name: includeExternalRecruiter
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/status:
    get:
      tags:
        - status
      summary: Returns true if the API is up and available
      operationId: Status_apiIsUpAndAvailable
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
  /v1/stock:
    get:
      tags:
        - stock
      summary: Return the history of stock prices
      operationId: Stock_getHistory
      description: ''
      parameters:
        - description: Symbol to query
          name: symbol
          in: query
          required: false
          schema:
            type: string
        - description: Types of valuations to retrieve
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Date to start from
          name: from
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsStockPrice'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/stock/{symbol}/{date}/{type}:
    get:
      tags:
        - stock
      summary: Get a stock price as of a particular date
      operationId: Stock_getPriceByDateType
      description: ''
      parameters:
        - description: Stock symbol
          name: symbol
          in: path
          required: true
          schema:
            type: string
        - description: Date to update information for
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - description: Type of stock price to retrieve (for example 'public')
          name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockPrice'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
    put:
      tags:
        - stock
      summary: Upsert a stock price
      operationId: Stock_upsertPriceByDateType
      description: ''
      parameters:
        - description: Stock symbol
          name: symbol
          in: path
          required: true
          schema:
            type: string
        - description: Date to update information for
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - description: Type of stock price to upsert
          name: type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Stock price data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStockPrice'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockPrice'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/stock/{id}:
    delete:
      tags:
        - stock
      summary: Delete a stock price
      operationId: Stock_removePrice
      description: ''
      parameters:
        - description: Stock entry id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/stripe/product:
    get:
      tags:
        - stripe
      summary: Return all products directly from Stripe (staff only)
      operationId: Stripe_getAllProducts
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsStripeProduct'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/stripe/plan:
    get:
      tags:
        - stripe
      summary: Return all billing plans directly from Stripe (staff only)
      operationId: Stripe_getAllPlans
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsPlan'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/stripe/webhook:
    post:
      tags:
        - stripe
      summary: Process webhook events from Stripe
      operationId: Stripe_processWebhookEvents
      description: ''
      parameters:
        - name: Stripe-Signature
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StripeProcessWebhookEventsRequest'
      responses:
        default:
          description: bad request
  /v1/stripe/setup-intent:
    post:
      tags:
        - stripe
      summary: >-
        Creates a Stripe setupIntent object and returns the secret for that
        object
      operationId: Stripe_createSetupIntentSecret
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntent'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/stripe/product/{productId}:
    get:
      tags:
        - stripe
      summary: Return a particular product by its Stripe id
      operationId: Stripe_getProductById
      description: ''
      parameters:
        - description: Stripe product id
          name: productId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeProduct'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/org/{orgId}/table/{tableId}:
    get:
      tags:
        - table
      summary: Return a particular table by id or name
      operationId: Table_getTableByIdOrName
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or name
          name: tableId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - table
      summary: Delete a table
      operationId: Table_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or name
          name: tableId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - table
      summary: Update an existing table
      operationId: Table_updateExistingTable
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or name
          name: tableId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Table data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTable'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/table/{tableId}/import:
    post:
      tags:
        - table
      summary: Import data from CSV file
      operationId: Table_importDataFromCsvFile
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to update
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: Date to update as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Import a file from another process, instead of directly uploading it
          name: importFromProcessId
          in: query
          required: false
          schema:
            type: string
        - description: Parent process id to attach to
          name: parentProcessId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/table:
    get:
      tags:
        - table
      summary: Return all tables in the organization paginated
      operationId: Table_listInOrgPaginated
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to include built-in tables
          name: includeBuiltIns
          in: query
          required: false
          schema:
            type: boolean
        - description: Table names to filter to
          name: names
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTable'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - table
      summary: Create a table
      operationId: Table_createNewTable
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Table data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTable'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/table/{tableId}/data:
    get:
      tags:
        - table
      summary: Retrieve all rows from the table
      operationId: Table_getAllRows
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to retrieve
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id to retrieve from
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Filter to query by
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Columns to retrieve, comma-separated (defaults to all columns)
          name: columns
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended,
            json-readable, or csv
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - table
      summary: Upsert row data
      operationId: Table_upsertRowData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to update
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: Date to update as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id to update
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/table/{tableId}/data/{keyColumn}/{keyValue}:
    get:
      tags:
        - table
      summary: Retrieve a particular row
      operationId: Table_getRowByColumn
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to retrieve
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: 'Column name to look up the row by (for example: id)'
          name: keyColumn
          in: path
          required: true
          schema:
            type: string
        - description: Value of the column
          name: keyValue
          in: path
          required: true
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id to retrieve from
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Columns to retrieve, comma-separated (defaults to all columns)
          name: columns
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended,
            json-readable, or csv
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - table
      summary: Delete an existing row
      operationId: Table_deleteRow
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to update
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: 'Column name to look up the row by (for example: id)'
          name: keyColumn
          in: path
          required: true
          schema:
            type: string
        - description: Value of the key column
          name: keyValue
          in: path
          required: true
          schema:
            type: string
        - description: Date to delete as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id to delete from
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - table
      summary: Update an existing row
      operationId: Table_updateExistingRowData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to update
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: 'Column name to look up the row by (for example: id)'
          name: keyColumn
          in: path
          required: true
          schema:
            type: string
        - description: Value of the key column
          name: keyValue
          in: path
          required: true
          schema:
            type: string
        - description: Date to update as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Scenario id to update
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/table/{tableId}/data/{keyColumn}/{keyValue}/purge:
    delete:
      tags:
        - table
      summary: Delete an existing row, purging from history entirely
      operationId: Table_deleteRowFromHistory
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to update
          name: tableId
          in: path
          required: true
          schema:
            type: string
        - description: 'Column name to look up the row by (for example: id)'
          name: keyColumn
          in: path
          required: true
          schema:
            type: string
        - description: Value of the key column
          name: keyValue
          in: path
          required: true
          schema:
            type: string
        - description: Date to look up as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/table/{tableId}/export:
    post:
      tags:
        - table
      summary: Export table data to CSV file
      operationId: Table_exportDataToCsv
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Table id or unique name to update
          name: tableId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/exportPdfReviewsBody'
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/org/{orgId}/task-config:
    get:
      tags:
        - task-config
      summary: Get all task configs for an org
      operationId: Taskconfig_getAllConfigs
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: TaskConfig id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: ParentEntityId to query for
          name: parentEntityId
          in: query
          required: false
          schema:
            type: string
        - description: AssessmentId to query for
          name: assessmentId
          in: query
          required: false
          schema:
            type: string
        - description: EntityId to query for
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - task-config
      summary: Create a new task config
      operationId: Taskconfig_createNewConfig
      description: ''
      parameters:
        - description: Org identifier (either id or slug
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Task config to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskConfig'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskConfig'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/task-config/{id}:
    get:
      tags:
        - task-config
      summary: Get a specific task config
      operationId: Taskconfig_getSpecificConfig
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the desired task config
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskConfig'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/task/{taskId}/mark-done:
    patch:
      tags:
        - task
      summary: Mark task done
      operationId: Task_updateStatus
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Task id
          name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/task/{taskId}/skip:
    patch:
      tags:
        - task
      summary: Skip task
      operationId: Task_markAsSkipped
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Task id
          name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/task:
    get:
      tags:
        - task
      summary: Return all existing tasks
      operationId: Task_getAllTasks
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Task User id
          name: userId
          in: query
          required: false
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: query
          required: false
          schema:
            type: string
        - description: Task.Status. (PENDING/DONE)
          name: status
          in: query
          required: false
          schema:
            type: string
        - description: Task.Type of task (form)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Entity Id
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Target Id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTask'
        '401':
          description: unauthorized
  /v1/org/{orgId}/task/task:
    get:
      tags:
        - task
      summary: Query tasks for assessments in the organization
      operationId: Task_queryAssessmentTasks
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Task User id
          name: userId
          in: query
          required: false
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: query
          required: false
          schema:
            type: string
        - description: Task.Status. (PENDING/DONE)
          name: status
          in: query
          required: false
          schema:
            type: string
        - description: Task.Type. (FORM_SUBMIT/CHANGE_APPROVE)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Entity Id
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Target Id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: Job id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return links that employees would use to complete a task if true
            else return links that direct to the form settings
          name: returnFormCompletionLinks
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v1/org/{orgId}/task/me:
    get:
      tags:
        - task
      summary: Return the tasks for the current user
      operationId: Task_getCurrentUserTasks
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: query
          required: false
          schema:
            type: string
        - description: Task.Status. (PENDING/ACTIVE)
          name: status
          in: query
          required: false
          schema:
            type: string
        - description: Task.Type of task (form)
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Entity Id
          name: entityId
          in: query
          required: false
          schema:
            type: string
        - description: Target Id
          name: targetId
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTask'
        '401':
          description: unauthorized
  /v1/org/{orgId}/task/remind:
    post:
      tags:
        - task
      summary: Send a reminder notification for a particular task
      operationId: Task_sendReminderNotification
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRemindRequest'
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/task/{taskId}:
    delete:
      tags:
        - task
      summary: Delete task
      operationId: Task_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Task id
          name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/task/bulk-delete:
    delete:
      tags:
        - task
      summary: Bulk delete tasks
      operationId: Task_deleteBulkTasks
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of task ids to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDeleteBulkTasksRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '401':
          description: unauthorized
  /v1/org/{orgId}/task/{assessmentId}/{formId}:
    delete:
      tags:
        - task
      summary: Delete task
      operationId: Task_removeFormFromAssessment
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
        - description: Form id
          name: formId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/task/summary/{assessmentId}:
    get:
      tags:
        - task
      summary: Return the tasks for a given assessment
      operationId: Task_getAssessmentTasksSummary
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Assessment id
          name: assessmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/org/{orgId}/template/bulk/delete:
    post:
      tags:
        - template
      summary: Delete a set of templates
      operationId: Template_bulkDelete
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of template ids to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateBulkDeleteRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template/bulk/duplicate:
    post:
      tags:
        - template
      summary: Duplicate a set of templates
      operationId: Template_createBulkDuplicate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of template ids to duplicate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateBulkDuplicateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template/{templateId}:
    get:
      tags:
        - template
      summary: Return a particular template by id
      operationId: Template_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Template id
          name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - template
      summary: Delete a template
      operationId: Template_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Template id
          name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - template
      summary: Update an existing template
      operationId: Template_updateExisting
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Template id
          name: templateId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateTemplate'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template:
    get:
      tags:
        - template
      summary: Return all templates in the organization paginated
      operationId: Template_getAllInOrgs
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Type of template to filter by
          name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - DOCUMENT
              - EMAIL
        - description: Template id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTemplate'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - template
      summary: Create a template
      operationId: Template_createNewTemplate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateTemplate'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/template/{templateId}/render:
    post:
      tags:
        - template
      summary: Render a template by evaluating it against an existing job
      operationId: Template_evaluateAgainstJob
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Template id
          name: templateId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: query
          required: false
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Format
          name: format
          in: query
          required: false
          schema:
            type: string
            enum:
              - TEXT
              - PDF
            default: TEXT
        - description: Type of change grouping
          name: changeGroupingType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PRIMARY
              - SCENARIO
              - COMP_REVIEW
        - description: Change grouping id to query (null for primary)
          name: changeGroupingId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Generate documents for only the changes that are in the scenario.
            This option also allows you to reference the change within the
            template, which is otherwise not allowed
          name: useScenarioChanges
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateRenderResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template/{templateId}/preview:
    post:
      tags:
        - template
      summary: Preview template content without saving it
      operationId: Template_generateTemplatePreview
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: query
          required: false
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Format
          name: format
          in: query
          required: false
          schema:
            type: string
            enum:
              - TEXT
              - PDF
            default: TEXT
        - description: Type of change grouping
          name: changeGroupingType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PRIMARY
              - SCENARIO
              - COMP_REVIEW
        - description: Change grouping id to query (null for primary)
          name: changeGroupingId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Generate documents for only the changes that are in the scenario.
            This option also allows you to reference the change within the
            template, which is otherwise not allowed
          name: useScenarioChanges
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatePreviewRequest'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateRenderResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template/{templateId}/generate:
    post:
      tags:
        - template
      summary: >-
        Automatically generate PDFs of the templates, and distribute emails to
        managers and people to download
      operationId: Template_generatePdfsAndEmails
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Template id
          name: templateId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTemplateRequest'
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template/email/{templateName}:
    get:
      tags:
        - template
      summary: Return a particular email template by name
      operationId: Template_getByName
      description: ''
      parameters:
        - description: Template name
          name: templateName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - template
      summary: Delete a template
      operationId: Template_removeEmail
      description: ''
      parameters:
        - description: Template name
          name: templateName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
    patch:
      tags:
        - template
      summary: Update an existing template
      operationId: Template_updateEmailTemplate
      description: ''
      parameters:
        - description: Template name
          name: templateName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateTemplate'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/org/{orgId}/template/email:
    post:
      tags:
        - template
      summary: Create a template
      operationId: Template_createEmail
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/CreateTemplate'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: org not found
  /v1/org/{orgId}/timeoff/request/validate:
    post:
      tags:
        - timeoff
      summary: Validate a time off request
      operationId: Timeoff_validateTimeoffRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/TimeOffRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOff'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/timeoff:
    get:
      tags:
        - timeoff
      summary: Retrieve time off
      operationId: Timeoff_getTimeOff
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id to filter by
          name: personId
          in: query
          required: false
          schema:
            type: string
        - description: From date, inclusive
          name: fromDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Until date, exclusive
          name: untilDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Time off id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTimeOffEntity'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    post:
      tags:
        - timeoff
      summary: Create a timeOff
      operationId: Timeoff_createEntry
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: TimeOff data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeOffEntity'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOff'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/timeoff/{timeOffId}:
    get:
      tags:
        - timeoff
      summary: Return a particular timeOff by id
      operationId: Timeoff_findTimeOffById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: TimeOff id
          name: timeOffId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffEntity'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    delete:
      tags:
        - timeoff
      summary: Delete a timeOff
      operationId: Timeoff_removeEntry
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: TimeOff id
          name: timeOffId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
    patch:
      tags:
        - timeoff
      summary: Update an existing timeOff
      operationId: Timeoff_updateTimeOffEntry
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: TimeOff id
          name: timeOffId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: TimeOff data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeOffEntity'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/timeoff/request:
    post:
      tags:
        - timeoff
      summary: Request time off
      operationId: Timeoff_submitTimeOffRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/TimeOffRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOff'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/timeoff/{timeOffId}/approve:
    post:
      tags:
        - timeoff
      summary: Approve a pending time off request
      operationId: Timeoff_approvePendingRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: TimeOff id
          name: timeOffId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Approval information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffApproval'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/timeoff/{timeOffId}/reject:
    post:
      tags:
        - timeoff
      summary: Reject a pending time off request
      operationId: Timeoff_rejectTimeOffRequest
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: TimeOff id
          name: timeOffId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Rejection information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffApproval'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '500':
          description: Not Implemented
  /v1/org/{orgId}/usage/{type}:
    post:
      tags:
        - usage
      summary: Record usage of a product feature
      operationId: Usage_recordProductFeatureUsage
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Type of usage
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Entity id, if applicable
          name: entityId
          in: query
          required: false
          schema:
            type: string
      responses:
        default:
          description: unauthorized
  /v1/user/{userId}:
    get:
      tags:
        - user
      summary: Return a particular user by id
      operationId: User_getUserById
      description: ''
      parameters:
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: bad request
        '404':
          description: not found
    patch:
      tags:
        - user
      summary: Update an existing user
      operationId: User_updateExistingUser
      description: ''
      parameters:
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: User data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/user/{userId}/token:
    delete:
      tags:
        - user
      summary: Revoke a user's access token
      operationId: User_revokeAccessToken
      description: ''
      parameters:
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: unauthorized
        '404':
          description: not found
  /v1/user/token:
    delete:
      tags:
        - user
      summary: Revoke multiple user's access tokens
      operationId: User_revokeAccessTokens
      description: ''
      requestBody:
        description: User ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRevokeAccessTokensRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/user/assign:
    patch:
      tags:
        - user
      summary: Assign or remove multiple users a role within an org
      operationId: User_assignRoleToMultiple
      description: ''
      requestBody:
        description: User data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignRoleToMultipleRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/user/me:
    get:
      tags:
        - user
      summary: Return the currently logged in user
      operationId: User_getCurrentUser
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: unauthorized
  /v1/user/me/view:
    get:
      tags:
        - user
      summary: Return the user the user is currently viewing as
      operationId: User_viewedUserDetails
      description: ''
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: unauthorized
  /v1/user/email/{email}:
    get:
      tags:
        - user
      summary: Return a particular user by email
      operationId: User_getUserByEmail
      description: ''
      parameters:
        - description: Email
          name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/user/person/{personId}:
    get:
      tags:
        - user
      summary: Return a particular user by its corresponding person id
      operationId: User_returnUserByPersonId
      description: ''
      parameters:
        - description: Person id to fetch user for
          name: personId
          in: path
          required: true
          schema:
            type: string
        - description: Org id to search within
          name: orgId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: bad request
        '404':
          description: not found
  /v1/user:
    get:
      tags:
        - user
      summary: Return all users within an org or across orgs
      operationId: User_getAllUsersWithinOrgs
      description: ''
      parameters:
        - description: Org id to search within
          name: orgId
          in: query
          required: false
          schema:
            type: string
        - description: User id to start from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Sort by
          name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsUser'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - user
      summary: Create a new user
      operationId: User_createNewUser
      description: ''
      requestBody:
        description: User data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/user/invite:
    post:
      tags:
        - user
      summary: Create/invite multiple new users
      operationId: User_inviteMultipleNewUsers
      description: ''
      requestBody:
        description: User data to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInviteMultipleNewUsersRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInviteMultipleNewUsersResponse'
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/user/{userId}/password:
    post:
      tags:
        - user
      summary: Change a user's password, or switch a user to SSO
      operationId: User_changePassword
      description: ''
      parameters:
        - description: User id
          name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/user/sendreset:
    post:
      tags:
        - user
      summary: Send a password reset email
      operationId: User_sendPasswordResetEmail
      description: ''
      requestBody:
        description: User email address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        default:
          description: email not found
  /v1/webauthn/register:
    get:
      tags:
        - webauthn
      summary: Check for an existing physical key for this user
      operationId: Webauthn_verifyPhysicalKeyForUser
      description: ''
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '403':
          description: permission denied
    post:
      tags:
        - webauthn
      summary: Check for an existing WebAuthn key for this user
      operationId: Webauthn_verifyPhysicalKeyForUser
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/WebAuthnRequest'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v1/webauthn/register/{emailBase64}:
    delete:
      tags:
        - webauthn
      summary: Delete registered credentials by the given email
      operationId: Webauthn_removeRegisteredCredentialsByEmail
      description: ''
      parameters:
        - description: Email
          name: emailBase64
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid data
        '401':
          description: not authorized
        '403':
          description: permission denied
        '404':
          description: not found
  /v1/webauthn/verify:
    get:
      tags:
        - webauthn
      summary: Check for an existing physical key for this user
      operationId: Webauthn_checkExistingKey
      description: ''
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '403':
          description: permission denied
    post:
      tags:
        - webauthn
      summary: Check for an existing physical key for this user
      operationId: Webauthn_verifyPhysicalKeyForUser
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/WebAuthnRequest'
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v2/org/{orgId}/change/{changeId}:
    get:
      tags:
        - change
      summary: Return a particular change by id
      operationId: Change_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Change id
          name: changeId
          in: path
          required: true
          schema:
            type: string
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: bad request
        '404':
          description: not found
  /v2/org/{orgId}/change:
    get:
      tags:
        - change
      summary: Return recent changes across an org, or for a particular person or job
      operationId: Change_getRecentChangesForOrgOrPerson
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id to filter by
          name: jobId
          in: query
          required: false
          schema:
            type: string
        - description: Person id to filter by
          name: personId
          in: query
          required: false
          schema:
            type: string
        - description: Scenario id
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Types of change to filter by, comma-separated
          name: type
          in: query
          required: false
          schema:
            type: string
        - description: Statuses to filter by, comma-separated
          name: status
          in: query
          required: false
          schema:
            type: string
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Changed fields to filter by, comma-separated
          name: fieldsChanged
          in: query
          required: false
          schema:
            type: string
        - description: Query to filter against
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Whether the role is open or not
          name: open
          in: query
          required: false
          schema:
            type: string
            enum:
              - FILLED
              - OPEN
        - description: Whether to include full grant schedule when returning equity updates
          name: includeGrantSchedule
          in: query
          required: false
          schema:
            type: boolean
        - description: Date to start from
          name: fromDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Change id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Descending (default false)
          name: desc
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/group/{type}:
    get:
      tags:
        - group
      summary: Find groups in the organization of a certain type
      operationId: Group_findOfType
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Group id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: job fields to return, comma-separated
          name: jobFields
          in: query
          required: false
          schema:
            type: string
        - description: position fields to return, comma-separated
          name: positionFields
          in: query
          required: false
          schema:
            type: string
        - description: Include all groups, including deleted groups
          name: includeAll
          in: query
          required: false
          schema:
            type: boolean
        - description: Search string to filter on code & name
          name: search
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - group
      summary: Create a group
      operationId: Group_createNewGroup
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to create the group in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of group creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '501':
          description: not implemented
  /v2/org/{orgId}/group/{type}/{groupId}:
    get:
      tags:
        - group
      summary: Return a particular group by id
      operationId: Group_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Group identifier (either id or slug)
          name: groupId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: job fields to return, comma-separated
          name: jobFields
          in: query
          required: false
          schema:
            type: string
        - description: position fields to return, comma-separated
          name: positionFields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetByIdResponse'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - group
      summary: Delete a group
      operationId: Group_removeByGroupId
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Group id
          name: groupId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the group in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date to update as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '501':
          description: not implemented
    patch:
      tags:
        - group
      summary: Update a group
      operationId: Group_updateGroupDetails
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Group id
          name: groupId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the group in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of group update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '501':
          description: not implemented
  /v2/org/{orgId}/group/graph:
    get:
      tags:
        - group
      summary: Find groups in the organization of a certain type
      operationId: Group_findInOrgOfType
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: group id to use as the starting point
          name: start
          in: query
          required: false
          schema:
            type: string
        - description: number of levels down
          name: depth
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: limit number of groups
          name: groupApproxLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: limit number of jobs
          name: jobLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: query string to filter jobs by
          name: jobFilter
          in: query
          required: false
          schema:
            type: string
        - description: query string to filter group by
          name: groupFilter
          in: query
          required: false
          schema:
            type: string
        - description: date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: group fields to return
          name: groupFields
          in: query
          required: false
          schema:
            type: string
        - description: job/person fields to return
          name: jobFields
          in: query
          required: false
          schema:
            type: string
        - description: position fields to return
          name: positionFields
          in: query
          required: false
          schema:
            type: string
        - description: kind of group to query (legacy/tracked)
          name: kind
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGraphResults'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '501':
          description: not implemented
  /v2/org/{orgId}/group/orphaned:
    get:
      tags:
        - group
      summary: Find groups in the organization that have no child groups
      operationId: Group_findOrphanedGroups
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: group id to use as the starting point
          name: start
          in: query
          required: false
          schema:
            type: string
        - description: limit number of groups
          name: groupLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: limit number of jobs
          name: jobLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: query string to filter jobs by
          name: jobFilter
          in: query
          required: false
          schema:
            type: string
        - description: query string to filter group by
          name: groupFilter
          in: query
          required: false
          schema:
            type: string
        - description: date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: group fields to return
          name: groupFields
          in: query
          required: false
          schema:
            type: string
        - description: job/person fields to return
          name: jobFields
          in: query
          required: false
          schema:
            type: string
        - description: position fields to return
          name: positionFields
          in: query
          required: false
          schema:
            type: string
        - description: kind of group to query (legacy/tracked)
          name: kind
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGraphResults'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '501':
          description: not implemented
  /v2/org/{orgId}/group/count:
    get:
      tags:
        - group
      summary: Get organized group counts
      operationId: Group_getOrganizedGroupCounts
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: query string to filter group by
          name: groupFilter
          in: query
          required: false
          schema:
            type: string
        - description: date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: kind of group to query (legacy/tracked)
          name: kind
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCount'
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
        '501':
          description: not implemented
  /v2/org/{orgId}/group/{type}/bulk-delete:
    post:
      tags:
        - group
      summary: Mark multiple groups as deleted
      operationId: Group_markMultipleAsDeleted
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the group in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: Group ids of groups to bulk delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMarkMultipleAsDeletedRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/group/{type}/import:
    post:
      tags:
        - group
      summary: Import data from CSV file
      operationId: Group_importCsvData
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Group type
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: Date to update as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/uploadFile'
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: invalid manifest data
        '401':
          description: not authorized
        '403':
          description: permission denied
  /v2/org/{orgId}/job/count:
    get:
      tags:
        - job
      summary: Count jobs or people in the organization
      operationId: Job_getOrganizationJobCount
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Search query
          name: q
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCount'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/job/{jobId}:
    get:
      tags:
        - job
      summary: Return a particular job by id
      operationId: Job_findInOrganization
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFindInOrganizationResponse'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - job
      summary: Delete a job
      operationId: Job_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of job update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - job
      summary: Update a job
      operationId: Job_updateJobDetails
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of job update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/job/bulkupdate:
    post:
      tags:
        - job
      summary: Perform a bulk update on a number of jobs
      operationId: Job_performBulkUpdate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Bulk update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkJobUpdateRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          description: bad request
        '404':
          description: not found
  /v2/org/{orgId}/job:
    get:
      tags:
        - job
      summary: Find jobs in the organization
      operationId: Job_findInOrganization
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Comp review id to query
          name: compReviewId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Approval chain id to query; only relevant when there is a comp
            review id
          name: approvalChainId
          in: query
          required: false
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Search query
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Job id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Fields to retrieve, list syntax
          name: fieldsList
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Find jobs only based on the changes that are in the scenario. This
            option also allows you to reference the change within the filter,
            which is otherwise not allowed
          name: useScenarioChanges
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - job
      summary: Create a job
      operationId: Job_createNewJob
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to create the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of job creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreateNewJobResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/job/graph:
    get:
      tags:
        - job
      summary: Retrieve jobs from a region of the job graph
      operationId: Job_getRegionJobsGraph
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id to use as the starting point for the search
          name: start
          in: query
          required: false
          schema:
            type: string
        - description: Number of levels down to search
          name: depth
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Number of results to return, approximately
          name: approxLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Query string to filter by
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/job/graph-counts:
    get:
      tags:
        - job
      summary: >-
        Returns a map of jobId to their sibling and direct counts and the
        corresponding ids
      operationId: Job_getSiblingsAndDirectsMap
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Query string to filter by
          name: q
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphCountsResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/job/{jobId}/position:
    get:
      tags:
        - job
      summary: Get a list of positions occupied by a job on specific date
      operationId: Job_listOccupiedPositionsByJobAndDate
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of un-assignment
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Position id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Position fields to retrieve, comma-separated
          name: positionFields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/person/{personId}:
    get:
      tags:
        - person
      summary: Return a particular person by id
      operationId: Person_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonGetByIdResponse'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - person
      summary: Delete a person
      operationId: Person_removeById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - person
      summary: Update a person
      operationId: Person_updateById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Person id
          name: personId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the person in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of person update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/person:
    get:
      tags:
        - person
      summary: Find persons in the organization
      operationId: Person_findInOrganization
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date to search as of
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            Start date, if retrieving persons employed between two dates
            (inclusive)
          name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            End date, if retrieving persons employed between two dates
            (inclusive)
          name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Search query
          name: q
          in: query
          required: false
          schema:
            type: string
        - description: Person id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Fields to retrieve, list syntax
          name: fieldsList
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            Include all persons in the system, including ex-employees or persons
            who were never in jobs
          name: includeAll
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Return access information -- pass a list of actions to check, for
            example: create,update,delete
          name: returnAccess
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsData'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    post:
      tags:
        - person
      summary: Create a person
      operationId: Person_createNewPerson
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to create the person in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of person creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonCreateNewPersonResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/person/geocodes:
    get:
      tags:
        - person
      summary: Return all geocodes for persons in the organization
      operationId: Person_getGeocodesForOrg
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonGetGeocodesForOrgResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/position/{positionId}:
    get:
      tags:
        - position
      summary: Return a particular position by id
      operationId: Position_getById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position identifier
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Include deleted positions in the result
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionGetByIdResponse'
        '400':
          description: bad request
        '404':
          description: not found
    delete:
      tags:
        - position
      summary: Delete a position
      operationId: Position_deletePosition
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position id
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to delete the position in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of position deletion
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDeletePositionResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - position
      summary: Update a position
      operationId: Position_updatePositionDetails
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position id
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to update the position in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of position update
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionUpdatePositionDetailsResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/position:
    get:
      tags:
        - position
      summary: Return a list of positions
      operationId: Position_list
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Group id to query
          name: groupId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Position id to start paginating from
          name: from
          in: query
          required: false
          schema:
            type: string
        - description: Number of results to return
          name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: Include deleted positions in the result
          name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionListResponse'
        '400':
          description: bad request
        '404':
          description: not found
    post:
      tags:
        - position
      summary: Create a position
      operationId: Position_createNewPosition
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to create the position in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of position creation
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        $ref: '#/components/requestBodies/runInstalledAppBody'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionCreateNewPositionResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/position/{positionId}/history:
    get:
      tags:
        - position
      summary: Return the history of a particular position by id
      operationId: Position_getHistoryById
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position identifier
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to query
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Date
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Fields to retrieve, comma-separated
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Data format to use; default is json, can also use json-extended or
            json-readable
          name: format
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionGetHistoryByIdResponse'
        '400':
          description: bad request
        '404':
          description: not found
  /v2/org/{orgId}/position/{positionId}/purge:
    delete:
      tags:
        - position
      summary: Delete a position and purge it from all history
      operationId: Position_deleteAndPurge
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position id
          name: positionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDeleteAndPurgeResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/position/{positionId}/job/{jobId}:
    post:
      tags:
        - position
      summary: Assign a job to a position
      operationId: Position_assignJobToPosition
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position id
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to assign the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of assignment
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionAssignJobToPositionResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    delete:
      tags:
        - position
      summary: Remove a job from a position
      operationId: Position_removeJobFromPosition
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position id
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to remove the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of removal
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionRemoveJobFromPositionResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
    patch:
      tags:
        - position
      summary: Update assign or remove date of a job for a position
      operationId: Position_updateJobDatesOnPosition
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Position id
          name: positionId
          in: path
          required: true
          schema:
            type: string
        - description: Job id
          name: jobId
          in: path
          required: true
          schema:
            type: string
        - description: Scenario id to remove the job in
          name: scenarioId
          in: query
          required: false
          schema:
            type: string
        - description: Effective date of removal
          name: removeDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Effective date of assignment
          name: assigndate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionUpdateJobDatesOnPositionResponse'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
  /v2/org/{orgId}/position/import:
    post:
      tags:
        - position
      summary: Import positions as a CSV
      operationId: Position_importCsvDataWithFilePath
      description: ''
      parameters:
        - description: Org identifier (either id or slug)
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Import a file from another process, instead of directly uploading it
          name: importFromProcessId
          in: query
          required: false
          schema:
            type: string
        - description: Parent process id to attach to
          name: parentProcessId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Effective date to import positions as of, if date column not
            provided
          name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PositionImportCsvDataWithFilePathRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '202':
          description: snapshot currently building
        '400':
          description: bad request
        '401':
          description: not authorized
        '404':
          description: not found
components:
  requestBodies:
    submitFormDraftBody:
      description: Form data to submit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormSubmitFormDraftRequest'
    CreateTemplate:
      description: Template data to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTemplate'
    FormResponseApproval:
      description: Approval details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormResponseApproval'
    CreateProcess:
      description: Process data to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProcess'
    FormSubmitRequest:
      description: Form data to submit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormSubmitRequest'
    exportChangesBody:
      description: Export options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompreviewExportChangesRequest'
    CreateChange:
      description: Change data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateChange'
    FormCollectRequest:
      description: Details on the data collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormCollectRequest'
    CreateUser:
      description: App user data to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUser'
    runInstalledAppBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppRunInstalledAppRequest'
    UpdateCategorySort:
      description: Category Ids in sort order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCategorySort'
    exportOrgToPowerpointBody:
      description: export options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportOrgChartToPowerpointRequest'
    exportPdfReviewsBody:
      description: export options
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportPdfReviewRequest'
    UpdateField:
      description: Field data to update
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateField'
    uploadFile:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/FileUploadNewFileRequest'
    PartialMessageArray:
      description: Messages to update
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageMarkMessagesAsReadRequest'
    UpdateTemplate:
      description: Template data to update
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTemplate'
    TimeOffRequest:
      description: Time off request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeOffRequest'
    WebAuthnRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebAuthnRequest'
  schemas:
    ChangeData:
      type: object
      required:
        - change
        - cost
        - data
      properties:
        change:
          $ref: '#/components/schemas/Change'
        data:
          description: the returned data fields requested
          type: object
          additionalProperties:
            type: object
        cost:
          description: >-
            the annualized impact of this change, denoted in organization's
            currency
          type: number
        lockedFields:
          description: set of locked fields for this change
          type: array
          uniqueItems: true
          items:
            type: string
    OnboardStep:
      type: object
      required:
        - actionText
        - actionUrl
        - description
        - docsUrl
        - eventType
        - id
        - label
        - name
        - pictureFileName
        - sort
      properties:
        description:
          description: customer facing description
          type: string
          example: Sync employee stock grants from your cap table
        id:
          description: unique id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: unique string that briefly describes the onboard step
          type: string
          example: sync-grant
        label:
          description: customer facing identifier
          type: string
          example: Sync Stock Grants
        docsUrl:
          description: url for charthop docs that describe how to accomplish this step
          type: string
          example: https://docs.charthop.com/import-stock-grants
        actionUrl:
          description: url for charthop page that where this step can be completed
          type: string
          example: /settings/apps/slack-import
        actionText:
          description: text that shows up on the 'action button' of the card for this step
          type: string
          example: Sync Grants
        pictureFileName:
          description: file name of the picture for the step (does not include path)
          type: string
          example: hiring-plan.svg
        sort:
          description: >-
            numerical position for which the step appears in relationship to
            other onboard steps
          type: integer
          format: int32
          example: 3
        eventType:
          description: >-
            event type (in the format of <COLLECTION NAME>.<CHANGE TYPE>) that
            triggers the completion of this onboard step
          type: string
          example: group.create
    TaskFormSummary:
      type: object
      required:
        - approveCount
        - expiredCount
        - pendingCount
        - peopleIncludedCount
        - skippedCount
        - submitCount
        - taskList
      properties:
        submitCount:
          description: Number of FORM_SUBMIT tasks that are marked as DONE
          type: integer
          format: int32
        approveCount:
          description: Number CHANGE_APPROVE tasks that are done.
          type: integer
          format: int32
        pendingCount:
          description: Number FORM_SUBMIT tasks that are PENDING
          type: integer
          format: int32
        skippedCount:
          description: Number FORM_SUBMIT tasks that are SKIPPED
          type: integer
          format: int32
        expiredCount:
          description: Number FORM_SUBMIT tasks that are EXPIRED
          type: integer
          format: int32
        peopleIncludedCount:
          description: Number of unique people included in the form
          type: integer
          format: int32
        taskList:
          description: List of Dto Tasks
          type: array
          items:
            $ref: '#/components/schemas/Task'
    FormSummary:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
        label:
          type: string
    ProfileTabResponseCard:
      type: object
      required:
        - date
        - id
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        change:
          $ref: '#/components/schemas/Change'
        formResponse:
          $ref: '#/components/schemas/FormResponse'
        formVersion:
          $ref: '#/components/schemas/ProfileTabResponseCardFormVersion'
    ProfileTabResponseCardFormVersion:
      type: object
      required:
        - id
        - label
        - questions
      properties:
        id:
          type: string
        label:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTabResponseCardQuestion'
    ProfileTabResponseCardQuestion:
      type: object
      required:
        - id
        - question
      properties:
        id:
          type: string
        question:
          type: string
    ApprovalChainStageOverride:
      type: object
      required:
        - approvalChainStageId
        - order
        - stageOverrideId
        - status
      properties:
        stageOverrideId:
          description: unique id for stage
          type: string
          example: 588f7ee98f138b19220041a7
        approvalChainStageId:
          description: parent approval chain stage id
          type: string
          example: 588f7ee98f138b19220041a7
        groups:
          description: approval group override
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroup'
        status:
          description: status of the stage
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        order:
          description: order of the stage
          type: integer
          format: int32
    ApprovalGroup:
      type: object
      required:
        - approvers
        - type
      properties:
        groupId:
          description: globally unique id
          type: string
        type:
          description: What type of group this is
          type: string
          enum:
            - REVIEWER
            - COLLABORATOR
            - FINAL_APPROVER
        approvers:
          description: approvers that make up the group
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroupApprover'
        expandExpression:
          description: optional custom expression to determine approval request tree
          type: string
    ApprovalGroupApprover:
      type: object
      required:
        - jobId
        - status
      properties:
        jobId:
          description: A job ID that is part of the group
          type: string
        status:
          description: The status of the approver
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
        commentId:
          description: Last comment of the approver
          type: string
        reassignCommentId:
          description: Last comment associated with a reassignment
          type: string
        isFallback:
          description: Whether approver is a fallback
          type: boolean
        fallbackFor:
          description: What jobId approver is a fallback for
          type: string
        updateAt:
          description: The date the status was updated last
          type: integer
          format: int64
    ApprovalRequestCompReviewResponse:
      type: object
      required:
        - approvalChainId
        - entityId
        - entityType
        - id
        - stageOverrides
        - status
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        parentStatus:
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        isFullySubmitted:
          type: boolean
        entityType:
          type: string
          enum:
            - COMP_REVIEW
            - SCENARIO
            - TIMEOFF
        entityId:
          type: string
        approvalChainId:
          type: string
        stageOverrides:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalChainStageOverride'
        createId:
          type: string
        createAt:
          type: integer
          format: int64
        updateId:
          type: string
        updateAt:
          type: integer
          format: int64
    ApprovalRequestResponse:
      type: object
    ApprovalRequestScenarioResponse:
      type: object
      required:
        - approvalChainId
        - createAt
        - createId
        - id
        - isApprovalCommentRequiredForActiveStage
        - isComplete
        - isRejectionCommentRequiredForActiveStage
        - scenarioId
        - stageOverrides
        - updateAt
        - updateId
      properties:
        id:
          type: string
        activeStage:
          $ref: '#/components/schemas/ApprovalChainStageOverride'
        proposerStage:
          $ref: '#/components/schemas/ApprovalChainStageOverride'
        nextReviewerStage:
          $ref: '#/components/schemas/ApprovalChainStageOverride'
        isComplete:
          type: boolean
        rejectedStage:
          $ref: '#/components/schemas/ApprovalChainStageOverride'
        stageOverrides:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalChainStageOverride'
        isApprovalCommentRequiredForActiveStage:
          type: boolean
        isRejectionCommentRequiredForActiveStage:
          type: boolean
        approvalChainId:
          type: string
        scenarioId:
          type: string
        createId:
          type: string
        createAt:
          type: integer
          format: int64
        updateId:
          type: string
        updateAt:
          type: integer
          format: int64
        deleteId:
          type: string
        deleteAt:
          type: integer
          format: int64
    BudgetAllocation:
      type: object
      properties:
        allocated:
          type: object
        used:
          type: object
    BudgetCalculation:
      type: object
      required:
        - allocated
        - pools
      properties:
        allocated:
          description: the total budget amount
          type: object
          example: '500'
        used:
          description: the amount of the budget that has been used
          type: object
          example: '500'
        pools:
          description: a list of budget pools that make up the total amount
          type: array
          items:
            $ref: '#/components/schemas/PoolCalculation'
        jobBudgetMap:
          description: >-
            the amount allotted and allocated for the comp review broken down by
            job
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/BudgetAllocation'
    PoolCalculation:
      type: object
      required:
        - allocated
        - budgetPoolId
        - label
        - scenarios
      properties:
        budgetPoolId:
          description: budget pool id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: budget pool label
          type: string
          example: Merit
        allocated:
          description: budget pool total amount
          type: object
          example: '500'
        used:
          description: the amount of the budget pool that has been used
          type: object
          example: '500'
        scenarios:
          description: >-
            a list of reviewer/scenario specific calculations that create the
            total
          type: array
          items:
            $ref: '#/components/schemas/ScenarioCalculation'
    ScenarioCalculation:
      type: object
      required:
        - allocated
        - scenarioId
      properties:
        scenarioId:
          description: scenario id
          type: string
          example: 588f7ee98f138b19220041a7
        allocated:
          description: budget pool total allocation for scenario
          type: object
          example: '500'
        used:
          description: budget pool total use for scenario
          type: object
          example: '500'
    BasisCondition:
      type: object
      required:
        - conditionExpr
      properties:
        conditionExpr:
          type: string
        amountRange:
          $ref: '#/components/schemas/MoneyRange'
        valueRange:
          $ref: '#/components/schemas/ValueRange'
    BasisFieldMatrix:
      type: object
      required:
        - conditions
        - includedFields
      properties:
        includedFields:
          type: array
          items:
            type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/BasisCondition'
    BudgetPool:
      type: object
      required:
        - appliedField
        - basisType
        - compReviewId
        - createAt
        - createId
        - id
        - label
        - orgId
        - sourceField
        - updateAt
        - updateId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if built-in)
          type: string
          example: 588f7ee98f138b19220041a7
        compReviewId:
          description: the ID of the comp review this budget is for
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: unique label
          type: string
          example: Merit
        participantsExpr:
          description: >-
            expression that determines if a particular job is included in this
            budget pool
          type: string
        appliedField:
          description: the field this budget pool applies to
          type: string
          example: base
        sourceField:
          description: the field this budget pool is calculated from
          type: string
          example: base
        basisType:
          description: the method for calculating the amount in the budget
          type: string
          enum:
            - CUSTOM
            - FIXED
            - CUSTOM_FIXED
            - PERCENTAGE
            - CUSTOM_PERCENTAGE
        fixedAmount:
          $ref: '#/components/schemas/Money'
        fixedValue:
          description: >-
            a fixed amount for the budget (used with basisType=FIXED ||
            basisType=PERCENTAGE)
          type: number
        basisFieldMatrix:
          $ref: '#/components/schemas/BasisFieldMatrix'
        fixedBudgetMap:
          description: a map of reviewer job IDs to fixed budget money amounts
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Money'
        basisExpr:
          description: >-
            expression that calculates how much each job contributes to the
            budget (used with basisType=CUSTOM)
          type: string
        defaultCurrency:
          description: >-
            Default currency used when calculating budget pool, falls back to
            org primary currency if not set
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Money:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
        currency:
          type: string
        places:
          type: number
    MoneyRange:
      type: object
      properties:
        max:
          $ref: '#/components/schemas/Money'
        min:
          $ref: '#/components/schemas/Money'
        target:
          $ref: '#/components/schemas/Money'
    ValueRange:
      type: object
      properties:
        max:
          description: the maximum value in the range (type = BigDecimal)
          type: number
        min:
          description: the minimum value in the range (type = BigDecimal)
          type: number
        target:
          description: the target value for the range (type = BigDecimal)
          type: number
    UpdateBudgetPool:
      type: object
      properties:
        label:
          description: unique label
          type: string
          example: Merit
        participantsExpr:
          description: >-
            expression that determines if a particular job is included in this
            budget pool
          type: string
        appliedField:
          description: the field this budget pool applies to
          type: string
          example: base
        sourceField:
          description: the field this budget pool is calculated from
          type: string
          example: base
        basisType:
          description: the method for calculating the amount in the budget
          type: string
          enum:
            - CUSTOM
            - FIXED
            - CUSTOM_FIXED
            - PERCENTAGE
            - CUSTOM_PERCENTAGE
        fixedAmount:
          $ref: '#/components/schemas/Money'
        fixedValue:
          description: >-
            a fixed amount for the budget (used with basisType=FIXED ||
            basisType=PERCENTAGE)
          type: number
        basisFieldMatrix:
          $ref: '#/components/schemas/BasisFieldMatrix'
        fixedBudgetMap:
          description: a map of reviewer job IDs to fixed budget money amounts
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Money'
        basisExpr:
          description: >-
            expression that calculates how much each job contributes to the
            budget (used with basisType=CUSTOM)
          type: string
        defaultCurrency:
          description: >-
            Default currency used when calculating budget pool, falls back to
            org primary currency if not set
          type: string
    Comp:
      type: object
      properties:
        baseComp:
          $ref: '#/components/schemas/PayInterval'
        variableTargets:
          description: variable compensation (money or percent)
          type: array
          items:
            $ref: '#/components/schemas/VariableComp'
        grantShares:
          description: planned stock grant, in shares
          type: integer
          format: int32
          example: 5000
        grantValue:
          description: >-
            planned stock grant, in value (based on the stock's currency, not
            the comp)
          type: integer
          format: int32
          example: 5000
        grantType:
          description: planned stock grant type
          type: string
          enum:
            - ISO
            - NSO
            - RSU
            - SAR
            - PERFORMANCE_SHARES
            - PHANTOM_STOCK
            - RSA
    Change:
      type: object
      required:
        - date
        - id
        - jobId
        - orgId
        - status
        - type
      properties:
        id:
          description: unique id
          type: string
          example: 588f7ee98f138b19220041a7
        jobId:
          description: job id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        scenarioId:
          description: scenario that this change belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        mergeScenarioId:
          description: >-
            scenario that this change was merged in from, if the change
            originally came from a scenario
          type: string
          example: 588f7ee98f138b19220041a7
        parentChangeId:
          description: change that this change emanates from
          type: string
        priorStateChangeId:
          description: >-
            connects this change to a previous version if itself that you might
            want to roll back to because of bad edits
          type: string
        type:
          description: type of change
          type: string
          enum:
            - HIRE
            - DEPART
            - MOVE
            - UPCOMING
            - CREATE
            - UPDATE
            - DATA
            - DELETE
            - RELATE
            - BACKFILL
        date:
          description: date of change
          type: string
          format: date
        sort:
          description: sort order of change
          type: integer
          format: int64
        announceDate:
          description: >-
            for HIRE and DEPART changes, the announce date, if the announce date
            is different from the date of change
          type: string
          format: date
        status:
          description: whether the change is active or not
          type: string
          enum:
            - ACTIVE
            - STRUCK
            - CONFLICT
            - INACTIVE
            - PROPOSED
        personId:
          description: the id of the person involved, or empty if no person attached to job
          type: string
        otherJobId:
          description: >-
            for MOVE changes, the id of the job moving from; for RELATE changes,
            the id of the other job
          type: string
          example: 588f7ee98f138b19220041a7
        otherPersonId:
          description: for MOVE changes, the id of the other person involved in the move
          type: string
          example: 588f7ee98f138b19220041a7
        departType:
          description: for DEPART changes, the type of departure
          type: string
          enum:
            - VOLUNTARY
            - INVOLUNTARY
        departRegret:
          description: for DEPART changes, whether the departure was regrettable
          type: string
          enum:
            - REGRET
            - NONREGRET
        promotionType:
          description: if it's a promotion or a demotion
          type: string
          enum:
            - PROMOTION
            - DEMOTION
            - NONE
        reason:
          description: the reason for the change
          type: string
        relateType:
          description: for RELATE changes, the type of the relationship
          type: string
          enum:
            - MANAGER
            - DIRECT
            - INDIRECT_MANAGER
            - INDIRECT
            - NONE
        refs:
          description: >-
            list of ids referenced in text field body, for indexing purposes
            only
          type: array
          items:
            type: object
        job:
          $ref: '#/components/schemas/PartialJob'
        otherJob:
          $ref: '#/components/schemas/PartialJob'
        formId:
          description: if this change was data submitted by a form, the id of that form
          type: string
        assessmentId:
          description: >-
            if this change is associated with a assessment, the id of that
            assessment
          type: string
        update:
          $ref: '#/components/schemas/JobUpdate'
        upcoming:
          $ref: '#/components/schemas/UpcomingChange'
        conflict:
          description: >-
            for changes that have been struck due to a merge conflict, the
            description of the conflict
          type: string
        note:
          description: note on the change
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        mergeId:
          description: merged by user id, if this change was merged
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateAt:
          description: updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        statusAt:
          description: timestamp of status change
          type: string
          example: 588f7ee98f138b19220041a7
        approvalAt:
          description: timestamp of approval
          type: string
          example: 588f7ee98f138b19220041a7
        approvalId:
          description: approved by user id
          type: string
          example: 588f7ee98f138b19220041a7
        approvalNote:
          description: approval/rejection note
          type: string
          example: Not acceptable
        approval:
          description: if approval is required, who is allowed to approve
          type: string
          enum:
            - MANAGER
            - GRAND_MANAGER
        authorSensitive:
          description: >-
            view sensitivity for the author author of this form - the level of
            view access required to view the createId and updateId fields
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        canEdit:
          description: >-
            flag indicating whether authorized user can modify this change (will
            vary depending on user)
          type: boolean
    GroupAssignment:
      type: object
      required:
        - assignmentType
        - group
      properties:
        group:
          $ref: '#/components/schemas/TrackedGroupRef'
        assignmentType:
          description: the type of the assignment of the job to the group
          type: string
          enum:
            - LEAD
            - MEMBER
    JobRelationship:
      type: object
      required:
        - jobId
        - type
      properties:
        jobId:
          description: destination job id
          type: string
          example: 5887a7718f138b6a2a0041a7
        type:
          description: type of relationship
          type: string
          enum:
            - MANAGER
            - DIRECT
            - INDIRECT_MANAGER
            - INDIRECT
            - NONE
    JobUpdate:
      type: object
      properties:
        title:
          description: new title
          type: string
        addRelationships:
          description: relationships to add
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/JobRelationship'
        removeRelationships:
          description: relationships to remove
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/JobRelationship'
        addGroupIds:
          description: groups to add
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        removeGroupIds:
          description: groups to remove
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        setGroupIds:
          description: groups to set
          type: object
          additionalProperties:
            type: string
            example: 588f7ee98f138b19220041a7
        addGroupAssignments:
          description: group assignments to add
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupAssignment'
        removeGroupAssignments:
          description: group assignments to remove
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupAssignment'
        grant:
          $ref: '#/components/schemas/StockGrant'
        timeOff:
          $ref: '#/components/schemas/TimeOff'
        comp:
          $ref: '#/components/schemas/Comp'
        placement:
          description: new placement
          type: string
          enum:
            - NORMAL
            - ASSISTANT
        employment:
          description: new employment status
          type: string
          enum:
            - FULL
            - PART
            - TEMP
            - CONTRACT
            - INTERN
            - EXPAT
        sensitive:
          description: new view sensitivity
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        startDatePlanned:
          description: planned start date
          type: string
          format: date
        startDatePlannedRemove:
          description: >-
            remove planned start date. if both startDatePlanned and
            startDatePlannedRemove are set, startDatePlanned takes precedence
          type: boolean
        startDate:
          description: new expected start date - will update to person start date in future
          type: string
          format: date
        backfillPersonId:
          description: set who this job is backfilling
        hasUnsetFields:
          description: set who this job is backfilling
          type: boolean
        fields:
          description: custom fields values to set
          type: object
          additionalProperties:
            type: object
        orderedFields:
          description: custom ordered fields values to set
          type: array
          items:
            $ref: '#/components/schemas/PairStringObject'
    Pair:
      type: object
      required:
        - first
        - second
      properties:
        first:
          type: object
        second:
          type: object
    PairStringObject:
      type: object
      required:
        - first
        - second
      properties:
        first:
          type: string
        second:
          type: object
    PartialJob:
      type: object
      properties:
        title:
          description: job title
          type: string
          example: Senior Engineer
        jobId:
          description: globally unique job id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        snapshotId:
          description: snapshot that this job belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        comp:
          $ref: '#/components/schemas/Comp'
        sensitive:
          description: view sensitive of the job while open
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        relationships:
          description: relationship to other jobs
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/JobRelationship'
        groupIds:
          description: groups that this job is a member of
          type: array
          items:
            type: string
        groupAssignments:
          description: tracked group assignments that this job is a member or lead of
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupAssignment'
        placement:
          description: guidance on placement
          type: string
          enum:
            - NORMAL
            - ASSISTANT
        employment:
          description: employment status
          type: string
          enum:
            - FULL
            - PART
            - TEMP
            - CONTRACT
            - INTERN
            - EXPAT
        state:
          description: >-
            current state - whether the job is open, filled, or has someone
            departed or hired
          type: string
          enum:
            - OPEN
            - FILLED
            - DEPART
            - START
        fields:
          description: fields containing custom data
          type: object
          additionalProperties:
            type: object
        fieldDates:
          description: dates of the field data
          type: object
          additionalProperties:
            type: string
            format: date
        fieldsProposed:
          description: proposed values for fields
          type: object
          additionalProperties:
            type: object
        createDate:
          description: job creation date
          type: string
          format: date
        startDate:
          description: >-
            for empty jobs, expected start date - for filled jobs, confirmed
            start date
          type: string
          format: date
        startDatePlanned:
          description: >-
            expected start date whether job is open or has been filled - doesn't
            change when job is filled
          type: string
          format: date
        personStartDate:
          description: >-
            if personId is present, the first day of that person in the org
            after the latest departure (if any)
          type: string
          format: date
        personEndDate:
          description: >-
            if personId is present and the person is departing, the last day of
            that person in the org
          type: string
          format: date
        personJobStartDate:
          description: if personId is present, the first day of that person in the job
          type: string
          format: date
        personIdDate:
          description: >-
            if personId is present, the first day that the personId actually
            filled the job
          type: string
          format: date
        personJobEndDate:
          description: >-
            if personId is present and the person is departing or moving out,
            the last day of that person in the job
          type: string
          format: date
        personId:
          description: >-
            the person holding this job -- either currently in the job, or
            upcoming announced hire
          type: string
          example: 588f7ee98f138b19220041a7
        backfillPersonId:
          description: >-
            the person who most recently held the job, who this represents a
            backfill for
          type: string
          example: 588f7ee98f138b19220041a7
        backfillByJobId:
          description: another job which is planned to be a backfill for this job
          type: string
          example: 588f7ee98f138b19220041a7
        upcoming:
          description: >-
            if a HIRE, MOVE, or DEPART are upcoming, the details on those
            changes - should only include id, type, date, announceDate, personId
          type: array
          items:
            $ref: '#/components/schemas/UpcomingChange'
        scenarioId:
          description: >-
            scenario that the job was created in (null if job is on primary
            timeline)
          type: string
        scenarioChangedId:
          description: >-
            scenario that the job was changed in (null if job is on primary
            timeline)
          type: string
        fetchState:
          description: >-
            scenario that the job was changed in (null if job is on primary
            timeline)
          type: string
          enum:
            - PERSON
            - STRUCTURE
            - ALL
    PayInterval:
      type: object
      required:
        - interval
        - pay
      properties:
        interval:
          description: Interval (annual or hourly)
          type: string
          enum:
            - YEARLY
            - HOURLY
        pay:
          $ref: '#/components/schemas/Money'
        hoursPerWeek:
          description: working hours per week if interval=hourly
          type: integer
          format: int32
          example: 40
        weeksPerYear:
          description: working weeks per year if interval=hourly
          type: integer
          format: int32
          example: 52
    StockGrant:
      type: object
      required:
        - date
        - id
        - price
        - shares
        - stock
        - type
        - vestSchedule
      properties:
        description:
          description: human-readable description of vesting schedule
          type: string
        id:
          description: unique identifier of grant
          type: string
        stock:
          description: ticker symbol of this stock
          type: string
          example: GOOG
        date:
          description: date of grant
          type: string
          format: date
        vestStartDate:
          description: vesting start date of grant
          type: string
          format: date
        expireDate:
          description: expiration date of grant
          type: string
          format: date
        shares:
          description: number of shares granted
          type: number
        price:
          description: per share strike price
          type: number
        type:
          description: type of grant
          type: string
          enum:
            - ISO
            - NSO
            - RSU
            - SAR
            - PERFORMANCE_SHARES
            - PHANTOM_STOCK
            - RSA
        vestSchedule:
          description: vesting schedule
          type: string
        originalPrice:
          description: original per share value of stock (grant price at time of issue)
          type: number
        currentPrice:
          description: current per share value of stock
          type: number
        vestedShares:
          description: current number of shares vested
          type: number
        vestedSharesNextYear:
          description: number of shares vested one year from today
          type: number
        vestedSharesByDate:
          description: number of shares vested, by future date
          type: object
          additionalProperties:
            type: number
        vestEndDate:
          description: vesting end date
          type: string
          format: date
        cancelDate:
          description: cancellation date
          type: string
          format: date
        details:
          description: details of the grant (arbitrary text)
          type: string
    TimeOff:
      type: object
      required:
        - endDate
        - id
        - startDate
      properties:
        id:
          description: unique id of a time off request
          type: string
        startDate:
          description: start date of time off, inclusive
          type: string
          format: date
        endDate:
          description: end date of time off, inclusive
          type: string
          format: date
        days:
          description: number of days used
          type: number
        hours:
          description: number of hours used
          type: number
        type:
          description: type of time off
          type: string
        note:
          description: notes on the time off
          type: string
        approval:
          description: approval status of the time off
          type: string
          enum:
            - APPROVED
            - PENDING
            - CANCELLED
            - REJECTED
            - SUPERSEDED
    TrackedGroupRef:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
    UpcomingChange:
      type: object
      required:
        - date
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - HIRE
            - DEPART
            - MOVE
            - UPCOMING
            - CREATE
            - UPDATE
            - DATA
            - DELETE
            - RELATE
            - BACKFILL
        date:
          type: string
          format: date
        announceDate:
          type: string
          format: date
        personId:
          type: string
        otherPersonId:
          type: string
    VariableComp:
      description: |-
        variable compensation
        Implementations: VariableCompPercent, VariableCompPercent
      type: object
      required:
        - interval
        - type
      discriminator:
        propertyName: compType
      properties:
        type:
          description: compensation type
          type: string
          enum:
            - BONUS
            - COMMISSION
        interval:
          description: compensation interval
          type: string
          enum:
            - YEARLY
    VariableCompAmount:
      allOf:
        - $ref: '#/components/schemas/VariableComp'
        - description: variable compensation defined by an pay (amount and currency)
          type: object
          required:
            - pay
          properties:
            pay:
              $ref: '#/components/schemas/Money'
    VariableCompPercent:
      allOf:
        - $ref: '#/components/schemas/VariableComp'
        - description: variable compensation defined by a percent of the base compensation
          type: object
          required:
            - percent
          properties:
            percent:
              description: >-
                variable compensation as a percentage of base annual; specified
                as a multiplier, not a percent (a value of 0.25 means 25%)
              type: number
              example: 0.25
    UpdateChange:
      type: object
      properties:
        date:
          description: date of change
          type: string
          format: date
        announceDate:
          description: >-
            for HIRE and DEPART changes, the announce date, if the announce date
            is different from the date of change
          type: string
          format: date
        status:
          description: whether the change is active or not
          type: string
          enum:
            - ACTIVE
            - STRUCK
            - CONFLICT
            - INACTIVE
            - PROPOSED
        departType:
          description: for DEPART changes, the type of departure
          type: string
          enum:
            - VOLUNTARY
            - INVOLUNTARY
        departRegret:
          description: for DEPART changes, whether the departure is regrettable
          type: string
          enum:
            - REGRET
            - NONREGRET
        reason:
          description: the reason of the change
          type: string
        promotionType:
          description: if it's a promotion or a demotion
          type: string
          enum:
            - PROMOTION
            - DEMOTION
            - NONE
        job:
          $ref: '#/components/schemas/PartialJob'
        update:
          $ref: '#/components/schemas/JobUpdate'
        note:
          description: note on the change
          type: string
        approvalNote:
          description: approval/rejection note
          type: string
          example: Not acceptable
    EnumValue:
      type: object
      required:
        - label
        - name
      properties:
        name:
          description: enum value name
          type: string
        label:
          description: enum value label
          type: string
        color:
          description: color of property
          type: string
          pattern: ^#[a-f0-9]{6}$
        expr:
          description: computed expression, for ENUM_EXPR type
          type: string
        num:
          description: numeric value, for ENUM_SCALE type
          type: number
        id:
          description: unique identifier for enum
          type: string
    JobTierField:
      type: object
      required:
        - value
      properties:
        code:
          type: string
        value:
          type: string
    UpdateCompBand:
      type: object
      properties:
        label:
          description: human-readable name of content
          type: string
          example: L15
        color:
          description: hex color associated with the band level
          type: string
          example: '#ffee4a'
        baseCompMax:
          $ref: '#/components/schemas/Money'
        baseCompMid:
          $ref: '#/components/schemas/Money'
        baseCompMin:
          $ref: '#/components/schemas/Money'
        baseSpread:
          description: spread percent used to calculate base comp from the midpoint
          type: number
        baseInterval:
          $ref: '#/components/schemas/EnumValue'
        baseTargetPay:
          $ref: '#/components/schemas/Money'
        baseTargetPayPercentile:
          description: >-
            base target pay associated with open jobs at this band level, as a
            percentile
          type: number
        equityTargetShares:
          description: target equity for the band, in shares
          type: number
        equityTargetPercentOfBase:
          description: target equity for the band, as a percentage of base
          type: number
        equityTargetValue:
          description: >-
            target equity for the band, as a monetary value, in the same
            currency as the base
          type: number
        variableValue:
          $ref: '#/components/schemas/Money'
        variablePercentOfBase:
          description: >-
            variable compensation for the band, specified as a percentage of
            base
          type: number
        jobTierOneField:
          $ref: '#/components/schemas/JobTierField'
        jobTierTwoField:
          $ref: '#/components/schemas/JobTierField'
        jobTierThreeField:
          $ref: '#/components/schemas/JobTierField'
        jobLevel:
          description: job level associated with the comp band
          type: string
    CollaboratorMatrix:
      type: object
      required:
        - conditions
        - includedFields
      properties:
        includedFields:
          type: array
          items:
            type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/CollaboratorMatrixCondition'
    CollaboratorMatrixCondition:
      type: object
      required:
        - collaboratorJobIds
        - expression
      properties:
        expression:
          type: string
        collaboratorJobIds:
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    CompReviewBudgets:
      type: object
      required:
        - allocationType
        - visualizationType
      properties:
        allocationType:
          description: How budgets are allocated
          type: string
          enum:
            - PROPORTIONAL
            - SEQUENTIAL
        visualizationType:
          description: >-
            Whether all budget visualizations are visible or only those that
            apply to eligible employees in the reviewer's pod
          type: string
          enum:
            - ALL
            - ONLY_APPLICABLE
    CompReviewCollaborators:
      type: object
      required:
        - collaborationType
        - collaboratorAccess
        - jobToCollaboratorsMap
      properties:
        collaborationType:
          description: What type of HRBP collaboration the comp review uses
          type: string
          enum:
            - NONE
            - STATIC
            - DYNAMIC
        collaboratorAccess:
          description: What level of access collaborators should have
          type: string
          enum:
            - READ
            - EDIT
            - SUBMIT
        collaboratorJobIds:
          description: >-
            A list of collaborators for all reviewers, used when
            collaborationType is STATIC
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        collaboratorMatrix:
          $ref: '#/components/schemas/CollaboratorMatrix'
        jobToCollaboratorsMap:
          description: >-
            A map of reviewer job ID to a set of collaborator job IDs indicating
            which collaborators are collaborating with a given reviewer
          type: object
          additionalProperties:
            type: array
            uniqueItems: true
            items:
              type: string
              example: 588f7ee98f138b19220041a7
    CompReviewConfig:
      type: object
      required:
        - collaborators
        - eligibleEmployees
        - keyDates
        - reviewerWorkbook
        - reviewersAndApprovers
      properties:
        keyDates:
          $ref: '#/components/schemas/CompReviewKeyDates'
        eligibleEmployees:
          $ref: '#/components/schemas/CompReviewEligibleEmployees'
        reviewersAndApprovers:
          $ref: '#/components/schemas/CompReviewReviewersApprovers'
        collaborators:
          $ref: '#/components/schemas/CompReviewCollaborators'
        reviewerWorkbook:
          $ref: '#/components/schemas/CompReviewReviewerWorkbook'
        budgets:
          $ref: '#/components/schemas/CompReviewBudgets'
        notifications:
          $ref: '#/components/schemas/CompReviewNotifications'
        reassignments:
          description: >-
            Employees that have been reassigned for this cycle (manager to
            employee set)
          type: object
          additionalProperties:
            type: array
            uniqueItems: true
            items:
              type: string
              example: 588f7ee98f138b19220041a7
    CompReviewEligibleEmployees:
      type: object
      required:
        - ineligibilityType
      properties:
        ineligibilityType:
          description: Defines who is ineligible for this cycle
          type: string
          enum:
            - NONE
            - DEPARTMENT
            - DIVISION
            - LOCATION
            - CUSTOM
        excludedEmploymentStatuses:
          description: Exclude these employment types if specified
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - FULL
              - PART
              - TEMP
              - CONTRACT
              - INTERN
              - EXPAT
        excludeGroupIds:
          description: Exclude these groups from the cycle
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        filter:
          description: The filter to apply when custom ineligibility rules is selected
          type: string
        lastRaiseDate:
          description: The cutoff date of last raise if specified
          type: string
          format: date
        startDate:
          description: The cutoff start date if specified
          type: string
          format: date
        individualExclusions:
          description: List of individuals by personId to exclude from the review
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        individualInclusions:
          description: List of individuals by personId to include in the review
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    CompReviewKeyDates:
      type: object
      required:
        - cycleBeginDate
        - finalApprovalDate
        - levelsSubmitByDate
      properties:
        cycleBeginDate:
          description: Date on which the comp review cycle begins
          type: string
          format: date
        levelsSubmitByDate:
          description: Date by which all levels should be submitted for approval
          type: string
          format: date
        finalApprovalDate:
          description: >-
            Date by which final approval/sign-off will be completed, this is the
            baseline primary effective date for the comp review
          type: string
          format: date
        payrollEffectiveDate:
          description: Date on which payroll updates become effective
          type: string
          format: date
        customEffectiveDate:
          description: A custom date to use for the primary data structure
          type: string
          format: date
        isSkipAfterSubmitOverdue:
          description: Whether to skip approval stages forward after the submit date
          type: boolean
        skippedAt:
          description: Whether to skip approval stages forward after the submit date
          type: integer
          format: int64
        isEdited:
          description: whether the default config has been modified
          type: boolean
    CompReviewNotifications:
      type: object
      required:
        - announcementDate
      properties:
        announcementDate:
          description: Announcement date
          type: string
          format: date
    CompReviewReviewerWorkbook:
      type: object
      required:
        - columns
      properties:
        columns:
          description: ordering and settings of columns in workbook
          type: array
          items:
            $ref: '#/components/schemas/CompReviewWorkbookColumn'
        numFrozenColumns:
          description: number of frozen columns at start of workbook
          type: integer
          format: int32
        moreInfoUrl:
          description: optional link to see additional customer documentation
          type: string
        moreInfoLabel:
          description: optional label for additional customer documentation
          type: string
        isEdited:
          description: whether the default config has been modified
          type: boolean
    CompReviewReviewersApprovers:
      type: object
      required:
        - reviewers
      properties:
        reviewers:
          description: Which individuals are included as reviewers
          type: string
          enum:
            - ALL_MANAGERS
            - ONLY_SPECIFIC_LEVEL
            - ONLY_SPECIFIC_TITLES
            - CUSTOM
        reviewerLevels:
          description: Levels to be included if reviewers is only specific levels
          type: array
          items:
            type: integer
            format: int32
        reviewerTitles:
          description: Titles to be included if reviewers is only specific titles
          type: array
          items:
            type: string
        reviewerFilter:
          description: Filter to be applied if reviewers is custom
          type: string
        excludedReviewerIds:
          description: Job ids of individuals to exclude from the review
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        approverIds:
          description: Person ids of employees who will final approve
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    CompReviewWorkbookColumn:
      type: object
      required:
        - editableFor
        - label
        - name
        - visibleTo
        - visibleToGroups
        - visibleToType
      properties:
        name:
          description: field name
          type: string
        label:
          description: display name in workbook
          type: string
        color:
          description: color used in the column header
          type: string
        editableFor:
          description: >-
            cql evaluated on the reviewee job specifying whether field is
            editable
          type: string
        visibleTo:
          description: cql specifying who can view
          type: string
        visibleToGroups:
          description: list of groupIds with viewing permissions
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        visibleToType:
          description: type of cql filter used in the visible to
          type: string
          enum:
            - EVERYONE
            - DEPARTMENT
            - TEAM
            - LOCATION
            - CUSTOM
        visibleToRoles:
          $ref: '#/components/schemas/InCycleViewFeatures'
    CompReview:
      type: object
      required:
        - config
        - id
        - label
        - orgId
        - shareAccess
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable label of goal
          type: string
          example: Comp review H2 2022
        config:
          $ref: '#/components/schemas/CompReviewConfig'
        status:
          description: >-
            Whether the compensation review has been approved by the final
            approvers
          type: string
          enum:
            - PENDING
            - PAUSED
            - ACTIVE
            - REJECTED
            - COMPLETE
            - COMPLETE_APPROVED
        shareAccess:
          description: users who have been granted access to this comp review
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        reviewerCount:
          description: count of reviewers in the comp review
          type: integer
          format: int32
        submittedCount:
          description: count of reviews that have been submitted and approved
          type: integer
          format: int32
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    InCycleViewFeatures:
      type: object
      required:
        - isApprover
        - isCollaborator
        - isFinalApprover
        - isOwner
        - isProposer
      properties:
        isFinalApprover:
          type: boolean
        isProposer:
          type: boolean
        isApprover:
          type: boolean
        isOwner:
          type: boolean
        isCollaborator:
          type: boolean
        isRoot:
          type: boolean
    ShareAccess:
      type: object
      required:
        - access
      properties:
        access:
          description: access permission level
          type: string
          enum:
            - NONE
            - LIMITED_READ
            - LIMITED_WRITE
            - STANDARD_READ
            - STANDARD_WRITE
            - COMPENSATION_READ
            - FULL_READ
            - COMP_PLANNING_PARTICIPANT
            - COMPENSATION_WRITE
            - WRITE
            - COMPENSATION_OWNER
            - OWNER
        userId:
          description: user id
          type: string
          example: 5887a7718f138b6a2a0041a7
        groupId:
          description: group id
          type: string
          example: 5887a7718f138b6a2a0041a7
        fields:
          description: fields
          type: string
          example: name,image,title
    UpdateCompReview:
      type: object
      properties:
        label:
          description: human-readable label of goal
          type: string
          example: Comp review H2 2022
        config:
          $ref: '#/components/schemas/CompReviewConfig'
        status:
          description: >-
            Whether the compensation review has been approved by the final
            approvers
          type: string
          enum:
            - PENDING
            - PAUSED
            - ACTIVE
            - REJECTED
            - COMPLETE
            - COMPLETE_APPROVED
        shareAccess:
          description: users who have been granted access to this comp review
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        reviewerCount:
          description: count of reviewers in the comp review
          type: integer
          format: int32
        submittedCount:
          description: count of reviews that have been submitted and approved
          type: integer
          format: int32
    ActionStep:
      type: object
      required:
        - type
      properties:
        stepId:
          description: unique id for action step
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: The type of action to run
          type: string
          enum:
            - FORM
            - MESSAGE
            - HTTP
            - TASK
        formId:
          description: If the action is FORM, the id of the form to fill out
          type: string
        target:
          description: >-
            If the action is MESSAGE, the target to send the message to. If the
            action is FORM/TASK, the person who should have the form filled out
            on/complete the task
          type: string
        assignee:
          description: >-
            If the action is FORM/TASK, the user who should fill out the
            form/complete the task (default is, same as target)
          type: string
        message:
          description: The message that will be sent -- supports CQLT templates
          type: string
        messageChannel:
          $ref: '#/components/schemas/MessageChannelConfig'
        emailSubject:
          description: >-
            The email subject line that will be used -- supports CQLT templates.
            If not provided, will use 'Notification'
          type: string
        sensitive:
          description: >-
            whether to run with access to sensitive events or not - if this is
            left blank, will default to the sensitive setting of the Action
          type: boolean
        httpUrl:
          description: If the action is HTTP, the url that will receive the HTTP request
          type: string
          format: uri
        httpMethod:
          description: >-
            If the action is HTTP, the method used by the HTTP request (defaults
            to POST)
          type: string
        httpHeaders:
          description: If the action is HTTP, the headers to add to the HTTP request
          type: object
          additionalProperties:
            type: string
        httpContent:
          description: If the action is HTTP, the payload contained in the HTTP request
          type: object
    Action:
      type: object
      required:
        - id
        - orgId
        - runUserId
        - sensitive
        - status
        - steps
      properties:
        tags:
          description: tags to organize the purpose of the action
          type: array
          items:
            type: string
        description:
          description: description of the action
          type: string
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        event:
          description: event pattern to match on, such as change.create.*
          type: string
        cronSchedule:
          description: cron schedule to run on, in crontab format
          type: string
          example: 5 4 * * *
        filter:
          description: only run when matching a particular filter
          type: string
        steps:
          description: list of steps to run when matching the event, schedule, and filter
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        status:
          description: status of the action
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        runUserId:
          description: >-
            the user to run the action as - normally the same as the user who
            created the action
          type: string
          example: 588f7ee98f138b19220041a7
        sensitive:
          description: whether to run with access to sensitive events or not
          type: boolean
        category:
          description: organizational category for HRIS-themed actions
          type: string
          enum:
            - ONBOARDING
            - OFFBOARDING
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    MessageChannelConfig:
      type: object
      required:
        - channels
      properties:
        channels:
          type: array
          items:
            type: string
            enum:
              - EMAIL
              - CHAT
    Agreement:
      type: object
      required:
        - action
        - createAt
        - createId
        - id
        - orgId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        action:
          description: action taken
          type: string
        createAt:
          description: timestamp that the agreement was accepted/cancelled
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: user id who accepted/cancelled the agreement
          type: string
          example: 588f7ee98f138b19220041a7
        legalDocId:
          description: legal document entity id
          type: string
    Address:
      type: object
      required:
        - country
      properties:
        street1:
          description: street address, line 1
          type: string
          example: 123 Anywhere Street
        street2:
          description: street address, line 2
          type: string
          example: Apt 6L
        street3:
          description: street address, line 3
          type: string
          example: Sixth Floor
        city:
          description: city
          type: string
          example: New York
        state:
          description: state
          type: string
          example: NY
        country:
          description: country (two-digit ISO code)
          type: string
          example: NY
          pattern: ^[A-Z]{2}$
        postal:
          description: postal code
          type: string
          example: '10001'
        geo:
          $ref: '#/components/schemas/Geopoint'
        approxGeo:
          $ref: '#/components/schemas/Geopoint'
    AppConfigField:
      type: object
      required:
        - label
        - name
        - type
      properties:
        name:
          type: string
        label:
          type: string
        type:
          type: string
          enum:
            - STRING
            - SUBDOMAIN
            - URL
            - SECRET
            - XML
            - OAUTH
            - INSTRUCTION
        details:
          type: string
        subdomain:
          type: string
        optional:
          type: boolean
        configSection:
          type: string
        oauthUrl:
          type: string
          format: uri
        requiredFields:
          type: array
          items:
            type: string
    Block:
      type: object
      properties:
        label:
          description: human readable label for this block
          type: string
        targetFilter:
          description: >-
            filter condition expression applied to this block, used to determine
            whether the content appears on the target or not
          type: string
        readFilter:
          description: >-
            filter condition expression applied to this block, relative to the
            viewer
          type: string
        formIds:
          description: form ids to surface responses in this block
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        fields:
          description: fields retrieved in this block
          type: array
          items:
            type: string
        content:
          description: template content returned in this block
          type: string
    Bundle:
      type: object
      properties:
        categories:
          description: list of categories included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/Category'
        fields:
          description: list of fields included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/PartialField'
        forms:
          description: list of forms included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/PartialForm'
        questions:
          description: list of questions included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/Question'
        profileTabs:
          description: list of profile tabs included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/PartialProfileTab'
        groups:
          description: list of content groups included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/PartialGroup'
        reports:
          description: list of reports included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/BundleReport'
        actions:
          description: list of actions included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/PartialAction'
        templates:
          description: list of templates included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/Template'
        contents:
          description: list of resource content included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/Content'
        taskConfigs:
          description: list of task configs included in this bundle
          type: array
          items:
            $ref: '#/components/schemas/PartialTaskConfig'
    BundleReport:
      type: object
      required:
        - report
      properties:
        report:
          $ref: '#/components/schemas/PartialReport'
        charts:
          description: list of charts used in the report
          type: array
          items:
            $ref: '#/components/schemas/PartialReportChart'
    Category:
      type: object
      required:
        - id
        - label
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if built-in)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable label of category
          type: string
          example: Performance
        fieldIds:
          description: set of field ids included in this category
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        nativeFields:
          description: set of native field names included in this category
          type: array
          uniqueItems: true
          items:
            type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Content:
      type: object
      required:
        - createAt
        - createId
        - id
        - orgId
        - sensitive
        - title
        - updateAt
        - updateId
      properties:
        title:
          description: title of the content page
          type: string
          example: Benefits Policies
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        parentContentId:
          description: parent content id in the hierarchy
          type: string
          example: 588f7ee98f138b19220041a7
        path:
          description: >-
            full path to the content, if not set, defaults to an id/slug
            generated URL
          type: string
          example: employee-info/benefits-policies
        blocks:
          description: content blocks
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
        imagePath:
          description: path to the image for the page
          type: string
          example: path/to/image.jpg
          pattern: ^[a-zA-Z0-9._/-]+$
        emoji:
          description: emoji, if an emoji is used to represent the page
          type: string
          example: 💥
        coverImagePath:
          description: path to the cover image for the content page
          type: string
          example: path/to/image.jpg
          pattern: ^[a-zA-Z0-9._/-]+$
        sensitive:
          description: sensitivity level (ORG public, HIGHly sensitive, or PRIVATE)
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: list of users and groups who have the content shared with them
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        status:
          description: current status of the content page
          type: string
          enum:
            - DRAFT
            - ACTIVE
            - ARCHIVED
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ContentBlock:
      type: object
      required:
        - content
      properties:
        content:
          type: string
    App:
      type: object
      required:
        - id
        - minAccess
        - name
        - orgId
        - status
        - summary
        - title
      properties:
        tags:
          description: tags/categories the app belongs to
          type: array
          items:
            type: string
        summary:
          description: short summary of app
          type: string
          example: The Slack app does X Y and Z
        title:
          description: human-readable name of app
          type: string
          example: Slack
        description:
          description: full description of app, in Markdown
          type: string
          example: The Slack app does X Y and Z
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: short unique name
          type: string
          example: slack-import
          pattern: ^[a-z0-9-]+$
        redirectUris:
          description: >-
            list of acceptable Oauth2 redirect URIs, if Oauth2 is supported for
            this app
          type: array
          items:
            type: string
            format: uri
        allowedIps:
          description: >-
            allowlist of IPs or IP ranges that are allowed to make API calls on
            behalf of this app
          type: array
          items:
            type: string
        configFields:
          description: list of configuration fields
          type: array
          items:
            $ref: '#/components/schemas/AppConfigField'
        setupInstructions:
          description: setup instructions, in Markdown
          type: string
          example: To install the Slack, use your API key from X and Y
        cronOrder:
          description: execution order of the cron (lower numbers execute earlier)
          type: integer
          format: int32
        cronSchedule:
          description: cron schedule
          type: string
          enum:
            - DAILY
            - WEEKLY
        cronDayOfWeek:
          description: Day of week if cronSchedule is WEEKLY
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        imagePath:
          description: >-
            path to avatar profile image, should be approximately square
            dimensions and show logo
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        wordmarkImagePath:
          description: >-
            path to larger profile logo image containing brand wordmark, does
            not need to be square dimensions
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        poweredByImagePath:
          description: >-
            path to powered by image, should be approximately square dimensions
            and show logo
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        status:
          description: current status of app
          type: string
          enum:
            - GLOBAL
            - ACTIVE
            - INACTIVE
            - DEVELOPMENT
        minAccess:
          description: minimum access level requested by app
          type: string
          enum:
            - NONE
            - VIEW
            - LIMITED
            - MEMBER_LIMITED_COMP
            - MEMBER
            - CUSTOM
            - TECH_OWNER
            - TIMEOFF
            - CONTACT
            - COMP_CASH
            - COMP_EQUITY
            - COMP_ALL
            - RECRUIT_SENSITIVE
            - RECRUIT_PRIMARY
            - SENSITIVE_LIMITED_COMP
            - SENSITIVE
            - PRIMARY
            - PEOPLE_OPS_ADMIN
            - PEOPLE_OPS_ADMIN_NO_COMP_DATA
            - PEOPLE_OPS_ADMIN_NO_SENSITIVE_DATA
            - OWNER
        roleId:
          description: roleId requested by app
          type: string
        eventNotifyUrl:
          description: URL that should be notified on events
          type: string
          format: uri
        payload:
          description: custom payload to send in lieu of regular payload
          type: object
          additionalProperties:
            type: string
        events:
          description: set of events to notify on
          type: array
          uniqueItems: true
          items:
            type: string
        type:
          description: APP, BUNDLE, or INTERNAL
          type: string
          enum:
            - APP
            - BUNDLE
            - INTERNAL
        bundle:
          $ref: '#/components/schemas/Bundle'
        scopes:
          description: access scopes that the app is requesting
          type: array
          items:
            type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    DueDate:
      type: object
      required:
        - dueDay
        - dueTime
        - type
      properties:
        type:
          type: string
          enum:
            - EXACT
            - RELATIVE
        dueDay:
          description: due day, in either relative (-7d) or exact (YYYY-MM-DD) format
          type: string
        dueTime:
          description: due time, which is a LocalTime
          type: string
    FormBlock:
      type: object
      required:
        - type
      properties:
        id:
          description: unique id for the block
          type: string
        fieldName:
          description: field code name
          type: string
        type:
          description: Type of Form Block
          type: string
          enum:
            - QUESTION
            - CONTENT
        content:
          description: Content of Content Block
          type: string
        required:
          description: whether field is required or not
          type: boolean
        questionId:
          description: question id, for questions
          type: string
    FormField:
      type: object
      required:
        - fieldId
        - label
        - longLabel
        - required
      properties:
        fieldId:
          description: field id
          type: string
        label:
          description: human readable label for this field in this form
          type: string
        required:
          description: whether field is required or not
          type: boolean
        longLabel:
          description: whether label is long-format
          type: boolean
    Geopoint:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        coordinates:
          type: array
          readOnly: true
          items:
            type: number
            format: double
    GroupByConfig:
      type: object
      properties:
        overrides:
          description: Overrides by label of label, color, or sort order
          type: array
          items:
            $ref: '#/components/schemas/LabelOverride'
        limit:
          description: Maximum number of results to display
          type: integer
          format: int32
        includeOther:
          description: When combined with limit, whether to include an 'Other' group
          type: boolean
        includeNone:
          description: Whether to include a 'None' group (null values aggregated)
          type: boolean
        includeAllValues:
          description: >-
            When combined with fieldId or questionId, will include all values
            from that fieldId or questionId, even if none of them were used
          type: boolean
        fieldId:
          description: The field to use to retrieve values, when includeAllValues is in use
          type: string
        questionId:
          description: >-
            The question to use to retrieve values, when includeAllValues is in
            use
          type: string
        sortBy:
          description: >-
            Whether to sort the results -- by default, will sort by label if
            there is no limit, will sort by value descending if there is a limit
          type: string
          enum:
            - LABEL
            - KEY
            - VALUE
            - COUNT
        sortDirection:
          description: The direction to sort the results
          type: string
          enum:
            - ASC
            - DESC
    LabelOverride:
      type: object
      required:
        - id
      properties:
        id:
          description: >-
            The unique identifier to use to locate the key to override. For
            entities and enum values, this will be an id. For numbers, this will
            be the normalized numeric representation. For others, this will be
            the string
          type: string
        label:
          description: If set, overrides this label
          type: string
        color:
          description: If set, overrides the default color
          type: string
        sort:
          description: If set, overrides the sorting order
          type: integer
          format: int32
    PartialAction:
      type: object
      properties:
        tags:
          description: tags to organize the purpose of the action
          type: array
          items:
            type: string
        description:
          description: description of the action
          type: string
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        event:
          description: event pattern to match on, such as change.create.*
          type: string
        cronSchedule:
          description: cron schedule to run on, in crontab format
          type: string
          example: 5 4 * * *
        filter:
          description: only run when matching a particular filter
          type: string
        steps:
          description: list of steps to run when matching the event, schedule, and filter
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        status:
          description: status of the action
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        runUserId:
          description: >-
            the user to run the action as - normally the same as the user who
            created the action
          type: string
          example: 588f7ee98f138b19220041a7
        sensitive:
          description: whether to run with access to sensitive events or not
          type: boolean
        category:
          description: organizational category for HRIS-themed actions
          type: string
          enum:
            - ONBOARDING
            - OFFBOARDING
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialField:
      type: object
      properties:
        description:
          description: description of field
          type: string
          example: >-
            This field tracks the most recent performance rating for an
            individual.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: short field name
          type: string
          example: summary
          pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
        label:
          description: human-readable full name of field
          type: string
          example: Job Summary
        question:
          description: human-readable question associated with field
          type: string
          example: What do you think of this placeholder question?
        inUse:
          description: >-
            disallow any updates to this Field (except for field.question
            string)
          type: boolean
        expr:
          description: calculated expression
          type: string
          example: (base + variable) / 12
        exprType:
          description: the expected type of the evaluated expression
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        type:
          description: type of field
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the field (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        defaultValue:
          description: default value if field is not set
          type: object
        options:
          description: validation options
          type: object
        entityType:
          description: entity type of field
          type: string
          enum:
            - JOB
            - JOB_OPEN
            - JOB_FILLED
            - PERSON
            - CHANGE
            - TABLE
            - ORG
            - USER
            - NONE
        sensitive:
          description: sensitivity level of data
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        hideExpr:
          description: hide expression-derived values from non-sensitive users
          type: boolean
        expireDays:
          description: number of days after which the data becomes invalid
          type: integer
          format: int32
          minimum: 1
        status:
          description: the status of the field
          type: string
          enum:
            - ACTIVE
            - HIDDEN
        tableId:
          description: >-
            the table id this field applies to, only applicable when EntityType
            equals TABLE
          type: string
        tableRef:
          $ref: '#/components/schemas/TableRef'
        isUnique:
          description: >-
            indicates that this field value is unique in conjunction with
            entityType PERSON or JOB
          type: boolean
        isRequired:
          description: indicates that this field value is required
          type: boolean
        isEffectiveDated:
          description: indicates that this field value is effective-dated
          type: boolean
        dataFetchTypes:
          description: set of data fetch types
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - BASIC
              - UPDATE
              - CHANGE
              - RELATIONSHIP_MANAGER
              - RELATIONSHIP_ALL
              - TITLE
              - PROMOTION
              - GROUP
              - COMP
              - COMP_HISTORY
              - GRANT
              - TIMEOFF
              - PERSON_JOIN
              - ALL_DATA
        aliases:
          description: set of aliases for this field
          type: array
          uniqueItems: true
          items:
            type: string
        calc:
          description: >-
            unique ID for the function that runs to calculate the value of this
            field. For native fields only
          type: string
          enum:
            - ADDRESS
            - AGE
            - ANNIVERSARY
            - ANNUAL_BASE_MONEY
            - BACKFILL
            - BAND
            - BAND_RANGE
            - BASE
            - BASE_CAL_YEAR_PRORATED
            - BASE_CAL_YTD
            - BASE_COMP
            - BASE_COMP_AMOUNT
            - BASE_COMP_ANNUALIZED
            - BASE_COMP_ANNUALIZED_AS_ORG_CURRENCY
            - BASE_COMP_AS_ORG_CURRENCY
            - BASE_COMP_CHANGES
            - BASE_COMP_CURRENCY
            - BASE_COMP_HOURS_PER_WEEK
            - BASE_COMP_INTERVAL
            - BASE_COMP_LAST_RAISE_DATE
            - BASE_COMP_LAST_RAISE_MONTHS_SINCE
            - BASE_COMP_LAST_RAISE_PAY
            - BASE_COMP_LAST_RAISE_PAY_AS_ORG_CURRENCY
            - BASE_COMP_LAST_RAISE_PERCENT
            - BASE_COMP_LAST_RAISE_TYPE
            - BASE_COMP_PAY
            - BASE_COMP_PAY_AS_ORG_CURRENCY
            - BASE_COMP_WEEKS_PER_YEAR
            - BASE_FISCAL_YEAR_PRORATED
            - BASE_FISCAL_YTD
            - BASE_PRIMARY
            - BASE_RAISE_AMOUNT
            - BASE_RAISE_DATE
            - BASE_RAISE_PERCENT
            - BIRTH_DATE
            - BIRTHDAY
            - BONUS_TARGET
            - BUDGET_COST
            - BUSINESS_UNITS
            - CAL_YEAR_VEST_SHARES
            - CAL_YEAR_VEST_VALUE
            - CAN_APPROVE_CHANGE
            - CAN_EDIT_JOB
            - CASH_COMP
            - CASH_COMP_LOCAL
            - CHANGE
            - CHANGE_ID
            - COMMISSION_TARGET
            - COMP
            - COMP_CHANGE_PERCENT
            - COMPA_RATIO_MID
            - COMPA_RATIO_TARGET
            - CONTACT
            - COST
            - CREATE_DATE
            - CURRENCY
            - DATA
            - DATE
            - DATE_OF
            - DAYS_ACTIVE
            - DAYS_OFF
            - DAYS_OFF_TAKEN
            - DAYS_OFF_UPCOMING
            - DAYS_OPEN
            - DB
            - DEPART
            - DEPARTMENT
            - DEPARTMENT_FUNC
            - DIRECT_JOBS
            - DIRECT_JOB_COUNT
            - DIRECT_PERSON_COUNT
            - EMPLOYMENT
            - END_DATE_JOB
            - END_DATE_ORG
            - ETHNICITY
            - FISCAL_YEAR_COST
            - GENDER
            - GEOIP
            - GEOIP_ADDRESS
            - GRAND_MANAGER
            - GRANT_SHARES
            - GRANT_TYPE
            - GRANT_VALUE
            - GRANTS
            - GROUP_IDS
            - HEADCOUNT
            - HISTORIC_BACKFILL
            - HOUR
            - HOURLY
            - HOURLY_PRIMARY
            - HOURS_PER_WEEK
            - IMAGE
            - INDIRECT
            - INDIRECT_JOBS
            - JOB
            - JOB_ID
            - JOB_CODE
            - JOBCOUNT
            - LAST_GRANT
            - LAST_GRANT_DATE
            - LAST_GRANT_ORIGINAL_VALUE
            - LOCATION
            - MANAGE_JOBS
            - MANAGE_PERSONS
            - MANAGER
            - MANAGER_COUNT
            - MANAGER_FILLED
            - MANAGER_ID
            - MANAGERS
            - MANAGER_PERSON
            - MANAGER_PERSONS
            - ME
            - MERGE_SCENARIO_ID
            - NAME
            - NAME_AUDIO
            - NAME_TITLE
            - NEXT_DAY_OFF
            - NEXT_TIME_OFF
            - NEXT_YEAR_VEST_SHARES
            - NEXT_YEAR_VEST_VALUE
            - NOTE
            - NOOP
            - OPEN
            - ORG
            - PERSON
            - PERSON_ID
            - PLACEMENT
            - PREV_DAY_OFF
            - PREV_TIME_OFF
            - PROMOTION
            - PROMOTION_DATE
            - PROPOSED
            - Q
            - RAISE_AMOUNT
            - RAISE_DATE
            - RAISE_PERCENT
            - RAISE_PROMOTION_DATE
            - REASON
            - REGRET
            - RELATIONSHIPS
            - REMOTE_WORK_ADDRESS
            - SCENARIO
            - SCENARIO_CHANGED
            - SENSITIVE
            - SENSITIVE_FIELDS
            - START_DATE
            - START_DATE_JOB
            - START_DATE_ORG
            - START_DATE_PLANNED
            - STATE
            - STRIKE_PRICE
            - TARGET_HOURS_PER_WEEK
            - TARGET_WEEKS_PER_YEAR
            - TEAM
            - TENURE_JOB
            - TENURE_ORG
            - TIMEZONE_OFFSET
            - TITLE
            - TITLE_DATE
            - TODAY
            - TOTAL_COMP
            - TOTAL_COMP_LOCAL
            - TOTAL_ORG_SHARES
            - TOTAL_SHARES
            - TOTAL_SHARES_VALUE
            - UNDER
            - UNDER_INCLUDING
            - UNDER_JOBS
            - UNVESTED_SHARES
            - UNVESTED_VALUE
            - UPDATE
            - USER_ACTIVE_DAYS
            - USER_CAN_EDIT_COMP_FOR_JOB
            - USER
            - VARIABLE
            - VARIABLE_AMOUNT
            - VARIABLE_INTERVAL
            - VARIABLE_PERCENT
            - VARIABLE_PRIMARY
            - VARIABLE_TARGET
            - VARIABLE_TARGET_AMOUNT
            - VARIABLE_TARGET_ANNUALIZED
            - VARIABLE_TARGET_CURRENCY
            - VARIABLE_TARGET_PERCENT
            - VARIABLE_TARGET_TYPE
            - VARIABLE_TARGETS
            - VARIABLE_TARGETS_LAST_RAISE_DATE
            - VARIABLE_TARGETS_LAST_RAISE_MONTHS_SINCE
            - VARIABLE_TARGETS_LAST_RAISE_PAY
            - VARIABLE_TARGETS_LAST_RAISE_PERCENT
            - VARIABLE_TYPE
            - VESTED_DATE
            - VESTED_SHARES
            - VESTED_VALUE
            - WEEKS_PER_YEAR
            - WORK_ADDRESS
        categoryId:
          description: ID of the category to which this field belongs, if any
          type: string
        classification:
          description: >-
            indicates how this field is calculated (whether it's stored in the
            DB, evaluated through the expression service, or compound)
          type: string
          enum:
            - COMPOUND
        places:
          description: number of decimal places for money values
          type: integer
          format: int32
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialForm:
      type: object
      properties:
        description:
          description: description of form
          type: string
          example: >-
            The Engineering department, where engineers develop new technology
            and products.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of form
          type: string
          example: 'Health Index: Q2'
        fields:
          description: ordered list of fields being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormField'
        blocks:
          description: ordered list of blocks being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormBlock'
        status:
          description: status of the form
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - ARCHIVED
        type:
          description: type of the form
          type: string
          enum:
            - BUILT_IN
            - CUSTOM
        sensitive:
          description: >-
            view sensitivity of the form - only people with view access to the
            form can collect the data
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        targetType:
          description: >-
            target type that the form can be filled out about (null defaults to
            PERSON for backwards compatibility)
          type: string
          enum:
            - NONE
            - PERSON
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        submitFilter:
          description: >-
            filter that controls which respondents can submit this form. The
            form:submit permission, if present, overrides this filter
          type: string
        responseReadFilter:
          description: >-
            filter that controls who can read the form responses. The
            formResponse:read permission, if present, overrides this filter
          type: string
        useFieldAccess:
          description: >-
            if this option is on, then form response answers will use field
            permissions to determine access to those responses
          type: boolean
        approval:
          description: approval needed, if any approval is required
          type: string
          enum:
            - MANAGER
            - GRAND_MANAGER
        authorSensitive:
          description: >-
            view sensitivity for the author of this form - the level of view
            access required to view the createId and updateId fields. If null,
            the author's identity is always visible as long as the viewer can
            read the form response. If set to PRIVATE, the author's identity is
            stored in ChartHop, but protected such that even users with
            sensitive access cannot access the data. If set to ANONYMOUS, the
            author's identity is not stored in ChartHop at all.
          type: string
          enum:
            - ANONYMOUS
            - PRIVATE
            - HIGH
            - MANAGER
        options:
          description: options, such as notification settings
          type: object
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: 2017-01-24T13:52Z
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialGroup:
      type: object
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: unique name of group
          type: string
          example: Engineering
        slug:
          description: unique slug of group
          type: string
          example: engineering
        code:
          description: external code identifier of the group
          type: string
          example: D123
        aliases:
          description: aliases for group
          type: array
          uniqueItems: true
          items:
            type: string
        type:
          description: type of group
          type: string
          enum:
            - LOCATION
            - DEPARTMENT
            - TEAM
            - BAND
            - JOBCODE
        leadJobIds:
          description: >-
            a list of group leaders, or null if the leader of the group should
            be automatically derived from the org chart
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        fields:
          description: group fields (currently only description)
          type: object
        address:
          $ref: '#/components/schemas/Address'
        level:
          description: level of the group, for BAND type only
          type: integer
          format: int32
        func:
          description: Job function category of the group, for DEPARTMENT type only
          type: string
          enum:
            - BD
            - CS
            - DESIGN
            - ENGINEERING
            - EXECUTIVE
            - FINANCE
            - GENERAL
            - IT
            - LEGAL
            - MARKETING
            - OPERATIONS
            - PEOPLE
            - PRODUCT
            - RECRUITING
            - SALES
            - SECURITY
            - SUPPORT
        locationType:
          description: Type of the location, for LOCATION type only
          type: string
          enum:
            - OFFICE
            - REMOTE
        parentGroupId:
          description: parent group id
          type: string
        timezone:
          description: timezone of the group, for LOCATION type only
          type: string
          example: America/New_York
        compMin:
          $ref: '#/components/schemas/Money'
        compMax:
          $ref: '#/components/schemas/Money'
        imagePath:
          description: path to profile image
          type: string
          pattern: ^[a-zA-Z0-9._/-]*$
        color:
          description: color of group
          type: string
          pattern: ^#[a-f0-9]{6}$
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialProfileTab:
      type: object
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable name of profile tab
          type: string
          example: Performance
        blocks:
          description: ordered list of blocks contained by profile tab
          type: array
          items:
            $ref: '#/components/schemas/Block'
        status:
          description: status of the profile tab
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        readFilter:
          description: >-
            filter that controls which viewers can read this profile tab. The
            profileTab:read permission, if present, overrides this filter
          type: string
        sort:
          description: sort order
          type: integer
          format: int32
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialReport:
      type: object
      properties:
        description:
          description: report description
          type: string
          example: This is a report on headcount etd
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: report label
          type: string
          example: Headcount Report
        filter:
          description: filter automatically applied to every chart in this report
          type: string
          example: department:engineering
        share:
          description: sharing settings of report
          type: string
          enum:
            - NORMAL
            - FULL
        sensitive:
          description: sensitivity level of report
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            report
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        chartIds:
          description: list of charts in this report
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialReportChart:
      type: object
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        reportId:
          description: parent report id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: chart label
          type: string
          example: Headcount Report
        type:
          description: chart type
          type: string
          enum:
            - LINE
            - AREA
            - STACKED
            - BAR
            - VERTICAL_BAR
            - HORIZONTAL_BAR
            - PIE
            - TABLE
            - TABLE_CROSSTAB
            - SINGLE_METRIC
            - HEADER
            - TEXT
        filter:
          description: filter that applies to this chart
          type: string
          example: department='Engineering'
        filterOverride:
          description: whether the chart filter overrides the global filter
          type: boolean
        query:
          $ref: '#/components/schemas/ReportQuery'
        sort:
          description: sort order
          type: integer
          format: int32
        isAdvancedQueryMode:
          description: whether the chart configuration is using advanced mode
          type: boolean
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    PartialTaskConfig:
      type: object
      properties:
        description:
          description: >-
            description for all tasks associated with the config that should be
            used in notifications
          type: string
        id:
          description: unique id of task config
          type: string
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        assessmentId:
          description: parent assessment id that this task config belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        parentEntityId:
          description: >-
            parent entity id that this task config belongs to, should be used
            with entityId
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: the primary entity being referenced by the task config
          type: string
          example: 588f7ee98f138b19220041a7
        slug:
          description: >-
            System generated identifying name so that actions can be triggered
            as a result of task completion
          type: string
        type:
          description: type of task generated by the task config
          type: string
          enum:
            - FORM_SUBMIT
            - CHANGE_APPROVE
            - TIMEOFF_APPROVE
            - SCENARIO_CHANGES_APPROVE
            - SCENARIO_CHANGES_CREATE
            - ORG_IMPORT
            - COMP_REVIEW_APPROVAL_SUBMIT
            - SCENARIO_APPROVAL_SUBMIT
            - APPROVAL_CHAIN_UPDATE_FALLBACK_APPROVER
            - ACTION
        dueDate:
          $ref: '#/components/schemas/DueDate'
        pastDueAction:
          description: sets pastDueAction on the task when it's generated
          type: string
          enum:
            - NONE
            - SET_EXPIRED
        isSkippable:
          description: sets isSkippable on the task
          type: boolean
        label:
          description: >-
            human-readable label that should be used for all tasks associated
            with the config as the task name
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Question:
      type: object
      required:
        - id
        - question
        - type
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        question:
          description: text of the question
          type: string
          example: What is your favorite color?
        fieldId:
          description: >-
            if the question is linked to a field, the id of that field. Any
            question responses will be automatically saved to the field
          type: string
        type:
          description: datatype of the question
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the question datatype (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        options:
          description: validation options
          type: object
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ReportFilter:
      type: object
      required:
        - filter
        - label
      properties:
        label:
          description: human-readable label for the filter
          type: string
        filter:
          description: filter expression
          type: string
    ReportQuery:
      type: object
      required:
        - options
      properties:
        series:
          description: series to evaluate
          type: array
          items:
            $ref: '#/components/schemas/ReportSeriesQuery'
        filters:
          description: >-
            filters to crosstab all results by (deprecated in reports V2, should
            use groupBy instead)
          type: array
          items:
            $ref: '#/components/schemas/ReportFilter'
        content:
          description: >-
            content block to evaluate as a Carrot Template, as an alternative to
            using series
          type: string
        startDate:
          description: start date, in either relative (-7d) or exact (YYYY-MM-DD) format
          type: string
        endDate:
          description: >-
            end date, in either relative (-7d) or exact (YYYY-MM-DD) format; if
            not present, defaults to today
          type: string
        interval:
          description: >-
            interval, if the query is a timeseries; if no interval, query is
            crosstabbed
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - FISCAL_QUARTER
            - YEAR
            - FISCAL_YEAR
        intervalDates:
          description: >-
            interval dates, if a specific set of irregular dates are being
            queried in a timeseries
          type: array
          items:
            type: string
            format: date
        options:
          description: options, including format, scenarioId, projectHires
          type: object
    ReportSeriesQuery:
      type: object
      required:
        - color
        - label
        - options
        - 'y'
      properties:
        label:
          description: label to use
          type: string
        color:
          description: color to use
          type: string
        'y':
          description: y-value to calculate
          type: string
          example: sum{headcount, gender:f} / sum{headcount}
        x:
          description: x-value to calculate (only needed for future scatterplot feature)
          type: string
          example: sum{headcount, gender:f} / sum{headcount}
        options:
          description: special options, such as scenarioId, format, projectHires
          type: object
        groupByConfigs:
          description: Configuration for aggregations performed by the groupBy operator
          type: array
          items:
            $ref: '#/components/schemas/GroupByConfig'
    TableRef:
      type: object
      required:
        - tableId
        - tableName
      properties:
        tableId:
          description: the table id this field references
          type: string
        tableName:
          description: the table name this field references
          type: string
    Template:
      type: object
      required:
        - content
        - createAt
        - createId
        - format
        - id
        - name
        - orgId
        - tags
        - type
        - updateAt
        - updateId
      properties:
        tags:
          description: tags to organize the purpose of the template
          type: array
          items:
            type: string
        description:
          description: description of template
          type: string
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: template name, must be unique to organization
          type: string
        content:
          description: template content
          type: string
        stylesheet:
          description: template inline stylesheet
          type: string
        format:
          description: template content format - must be MARKDOWN
          type: string
          enum:
            - HTML
            - MARKDOWN
            - TEXT
        type:
          description: type of template
          type: string
          enum:
            - DOCUMENT
            - EMAIL
        filename:
          description: document filename CQL
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    AppConfig:
      type: object
      required:
        - appId
        - createAt
        - createId
        - updateAt
        - updateId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        appId:
          description: app id
          type: string
          example: 588f7ee98f138b19220041a7
        userId:
          description: user id, if this person corresponds with a user
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: org id, if this app config corresponds with an org
          type: string
          example: 588f7ee98f138b19220041a7
        fieldMappers:
          description: list of default field mappers
          type: array
          items:
            $ref: '#/components/schemas/FieldMapper'
        customFieldMappers:
          description: list of custom field mappers by a user
          type: array
          items:
            $ref: '#/components/schemas/FieldMapper'
        defaultOutboundFieldMappers:
          description: list of default outbound field mappers
          type: array
          items:
            $ref: '#/components/schemas/OutboundFieldMapper'
        customOutboundFieldMappers:
          description: list of custom outbound field mappers
          type: array
          items:
            $ref: '#/components/schemas/OutboundFieldMapper'
        disabledFieldMappers:
          description: list of disabled inbound field mappers by id
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        enabledOutboundFieldMappers:
          description: list of enabled outbound field mappers by id
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        templateMatchers:
          description: template field matchers defined by a user
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        options:
          description: app specific options
          type: object
    FieldMapper:
      type: object
      required:
        - charthopFields
        - remoteFields
        - type
      properties:
        id:
          description: unique id
          type: string
        charthopFields:
          description: list of ChartHop fields
          type: array
          items:
            type: string
        remoteFields:
          description: list of remote fields
          type: array
          items:
            type: string
        type:
          description: >-
            type of field mapper to apply for mapping remote fields to ChartHop
            fields
          type: string
        defaultCharthopValue:
          description: default charthop value
          type: string
        defaultRemoteValue:
          description: default remote value
          type: string
        defaultAmount:
          description: default amount
          type: number
        defaultCurrency:
          description: default currency
          type: string
        transformFunction:
          description: transform function
          type: string
        charthopToRemoteTransformFunction:
          description: charthop to remote transform function
          type: string
        map:
          description: map
          type: object
          additionalProperties:
            type: string
        charthopToRemoteMap:
          description: charthop to remote map
          type: object
          additionalProperties:
            type: string
        idField:
          description: id field
          type: string
        nameField:
          description: name field
          type: string
        remoteToCharthopMultiplier:
          description: remote to Charthop Multiplier
          type: number
    OutboundFieldMapper:
      type: object
      required:
        - description
        - namespace
        - valueMappers
      properties:
        description:
          type: string
        id:
          type: string
        namespace:
          type: string
        options:
          type: object
        valueMappers:
          type: array
          items:
            $ref: '#/components/schemas/OutboundValueMapper'
    OutboundValueMapper:
      type: object
      required:
        - charthopSide
        - externalSide
      properties:
        charthopSide:
          type: object
        externalSide:
          type: string
        id:
          type: string
        options:
          type: object
    ApprovalChain:
      type: object
      required:
        - approvalNotifierUserIds
        - id
        - name
        - orgId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: entity id
          type: string
          example: 588f7ee98f138b19220041a7
        entityType:
          description: entity type
          type: string
          example: SCENARIO
          enum:
            - COMP_REVIEW
            - SCENARIO
            - TIMEOFF
        name:
          description: human-readable name of approval chain
          type: string
          example: Comp Review 06/15/2022
        isPreview:
          description: >-
            isPreview specifies that this is a preview for implementations that
            use it (e.g. Compensation Reviews)
          type: boolean
          example: true
        fallbackApproverJobId:
          description: the jobId of the fallback approver
          type: string
          example: 588f7ee98f138b19220041a7
        fallbackApproverJobError:
          description: most recent error for fallback approver
          type: string
        approvalNotifierUserIds:
          description: ids of any users who should be notified when approval is complete
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ApprovalChainStage:
      type: object
      required:
        - approvalChainId
        - approvalCommentRequired
        - groups
        - id
        - order
        - orgId
        - rejectBehavior
        - rejectionCommentRequired
        - status
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        approvalChainId:
          description: parent approval chain id
          type: string
          example: 588f7ee98f138b19220041a7
        inclusionExpression:
          description: optional custom expression to determine stage inclusion behavior
          type: string
        inclusionBehavior:
          description: determines whether stage is conditional based on an expression
          type: string
          enum:
            - ONLY_INCLUDE_IF
            - EXCLUDE_IF
        expandExpression:
          description: optional custom expression to determine approval request tree
          type: string
        rejectBehavior:
          description: determines which stage becomes active when a rejection event happens
          type: string
          enum:
            - BACK_TO_BEGINNING
            - PREVIOUS_PHASE
        status:
          description: status of the stage
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        approvalCommentRequired:
          description: requires a comment on an approval event
          type: boolean
        rejectionCommentRequired:
          description: requires a comment on an rejection event
          type: boolean
        order:
          description: order of stage in approval chain
          type: integer
          format: int32
        groups:
          description: list of groups that are involved in this approval stage
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroup'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ApprovalRequest:
      type: object
      required:
        - approvalChainId
        - entityId
        - entityType
        - id
        - orgId
        - stageOverrides
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: entity id
          type: string
          example: 588f7ee98f138b19220041a7
        entityType:
          description: entity type
          type: string
          example: 588f7ee98f138b19220041a7
        compReviewId:
          description: comp review id
          type: string
          example: 588f7ee98f138b19220041a7
        approvalChainId:
          description: parent approval chain id
          type: string
          example: 588f7ee98f138b19220041a7
        createId:
          description: the user who requested the approval
          type: string
          example: 588f7ee98f138b19220041a7
        stageOverrides:
          description: list of configuration fields
          type: array
          items:
            $ref: '#/components/schemas/ApprovalChainStageOverride'
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Assessment:
      type: object
      required:
        - id
        - label
        - orgId
        - slug
        - type
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable label of assessment
          type: string
          example: Engineering Budget Q2 2019
        slug:
          description: unique slug of assessment
          type: string
          example: engineering-budget-q2-2019
        type:
          description: type of assessment
          type: string
          enum:
            - REVIEW
            - COMP_REVIEW
            - SURVEY
        fields:
          description: assessment fields (description)
          type: object
        shareAccess:
          description: users who have been granted access to this assessment
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        sensitive:
          description: view sensitivity of this assessment
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        color:
          description: color of assessment
          type: string
          pattern: ^#[a-f0-9]{6}$
        startDate:
          description: >-
            Date this assessment begins. In the context of REVIEW goals, the
            date the review cycle begins.
          type: string
          format: date
        endDate:
          description: >-
            Date this assessment ends, or is completed. In the context of REVIEW
            assessment, the date the review cycle ends.
          type: string
          format: date
        status:
          description: status of this assessment - DRAFT, ACTIVE, DONE
          type: string
          enum:
            - DRAFT
            - ACTIVE
            - DONE
        doneAt:
          description: timestamp when the status of this assessment was set to done
          type: string
          example: '2017-01-24T13:57:52Z'
        taskCount:
          description: number of tasks associated with this assessment
          type: integer
          format: int32
          example: 12
        taskDoneCount:
          description: number of tasks associated with this assessment that are done
          type: integer
          format: int32
          example: 3
        peopleIncludedCount:
          description: number of people included in this assessment
          type: integer
          format: int32
          example: 12
        query:
          description: Query for which people/jobs can be included in the review.
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    CategorySort:
      type: object
      required:
        - id
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if built-in)
          type: string
          example: 588f7ee98f138b19220041a7
        categoryIds:
          description: ordered list of category ids of an org
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Comment:
      type: object
      required:
        - content
        - createAt
        - createId
        - entityId
        - entityType
        - id
        - orgId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: org id the comment belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        parentEntityId:
          description: >-
            parent entity id that this comment belongs to, should be used with
            entityId
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: entity the comment was posted on
          type: string
          example: 588f7ee98f138b19220041a7
        entityType:
          description: type of entity the comment was posted on
          type: string
          enum:
            - CHANGE
            - ASSESSMENT
            - SCENARIO
            - APPROVAL_APPROVE
            - APPROVAL_REJECT
            - APPROVAL_REASSIGN
            - APPROVAL_WITHDRAW
        content:
          $ref: '#/components/schemas/Markup'
        createAt:
          description: timestamp that the comment was posted
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: user id who posted the comment
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: user who deleted the comment
          type: string
    Markup:
      type: object
      required:
        - type
        - value
      properties:
        type:
          description: Type of markup
          type: string
          enum:
            - HTML
            - MARKDOWN
            - TEXT
        value:
          description: Markup content in its source format
          type: string
    CompBand:
      type: object
      required:
        - baseInterval
        - color
        - id
        - label
        - orgId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable name of content
          type: string
          example: L15
        color:
          description: hex color associated with the band level
          type: string
          example: '#ffee4a'
        baseCompMax:
          $ref: '#/components/schemas/Money'
        baseCompMid:
          $ref: '#/components/schemas/Money'
        baseCompMin:
          $ref: '#/components/schemas/Money'
        baseSpread:
          description: spread percent used to calculate base comp from the midpoint
          type: number
        baseInterval:
          $ref: '#/components/schemas/EnumValue'
        baseTargetPay:
          $ref: '#/components/schemas/Money'
        baseTargetPayPercentile:
          description: >-
            target pay associated with open jobs at this band level, specified
            as a percentile of [min,max]
          type: number
        jobTierOneField:
          $ref: '#/components/schemas/JobTierField'
        jobTierTwoField:
          $ref: '#/components/schemas/JobTierField'
        jobTierThreeField:
          $ref: '#/components/schemas/JobTierField'
        jobLevel:
          $ref: '#/components/schemas/TableRowRef'
        equityTargetShares:
          description: target equity for the band, in shares
          type: number
        equityTargetPercentOfBase:
          description: target equity for the band, as a percentage of base
          type: number
        equityTargetValue:
          description: >-
            target equity for the band, as a monetary value, in the same
            currency as the base
          type: number
        variableValue:
          $ref: '#/components/schemas/Money'
        variablePercentOfBase:
          description: >-
            variable compensation for the band, specified as a percentage of
            base
          type: number
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    TableRowRef:
      type: object
      required:
        - id
        - tableId
        - tableName
      properties:
        tableId:
          type: string
        tableName:
          type: string
        id:
          type: string
        label:
          type: object
    Customer:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          description: unique id of customer
          type: string
        name:
          description: name of customer
          type: string
        email:
          description: email address for billing purposes
          type: string
        billAddress:
          $ref: '#/components/schemas/Address'
        industry:
          description: industry that customer is in
          type: string
        source:
          description: source of customer signup
          type: string
          enum:
            - ADP_MARKETPLACE
            - SELF_SERVE
            - SELF_SERVE_TEST
            - SEQUOIA_ONE
            - CONNECT
        status:
          description: current status
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - TRIAL
            - CHURN
            - PAYMENT_ERROR
        stripeCustomerId:
          description: stripe customer id
          type: string
        salesforceAccountId:
          description: salesforce account id
          type: string
          pattern: ^[a-zA-Z0-9]{15}|[a-zA-Z0-9]{18}$
        products:
          description: products that this customer has purchased
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        startDate:
          description: initial date of billing
          type: string
          format: date
        endDate:
          description: >-
            end of service date for churning customers -- on or after this date,
            service should be disabled
          type: string
          format: date
        nextInvoiceDate:
          description: date of next invoice
          type: string
          format: date
        orgCount:
          description: number of orgs covered by this customer
          type: integer
          format: int32
        primaryHeadCount:
          description: number of total headcount across all orgs
          type: integer
          format: int32
        secondaryHeadCount:
          description: number of total headcount across all orgs
          type: integer
          format: int32
        primaryHeadCountFilter:
          description: primary headcount filter - used for billing purposes
          type: string
        secondaryHeadCountFilter:
          description: secondary headcount filter - used for billing purposes
          type: string
        arr:
          description: current ARR of the customer based on most recent invoice
          type: number
        projectedArr:
          description: >-
            projected ARR of the customer for upcoming invoice, based on plan
            and headcount
          type: number
        trialStartDate:
          description: date this customer begins their trial period
          type: string
          format: date
        trialEndDate:
          description: date this customer ends their trial period
          type: string
          format: date
        stripeSubscriptionSync:
          description: Stripe subscription settings
          type: string
          enum:
            - SYNC
            - DELETE
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: created by
          type: string
        updateAt:
          description: updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: updated by
          type: string
    ProductItem:
      type: object
      required:
        - productId
        - stripePriceId
      properties:
        productId:
          type: string
        stripePriceId:
          type: string
    DataView:
      type: object
      required:
        - id
        - name
        - orgId
        - slug
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: data view name
          type: string
        slug:
          description: slug for URL
          type: string
          readOnly: true
        columns:
          description: comma delimited list of columns
          type: string
          example: image,name,title
        type:
          description: type of data view
          type: string
          enum:
            - ANY
            - DATA_SHEET
            - ORG_CHART
            - MAP
        entityType:
          description: entity type being viewed
          type: string
        columnWidths:
          description: map of column names to widths in pixels
          type: object
          additionalProperties:
            type: number
            format: double
        date:
          description: >-
            date of view, in either relative (-7d) or exact (YYYY-MM-DD) format;
            if not present, defaults to today
          type: string
        startDate:
          description: >-
            start date of view, if displaying a date range, in either relative
            (-7d) or exact (YYYY-MM-DD) format; if not present, defaults to
            today
          type: string
        endDate:
          description: >-
            end date of view, if displaying a date range, in either relative
            (-7d) or exact (YYYY-MM-DD) format; if not present, defaults to
            today
          type: string
        filter:
          description: filter query
          type: string
          example: managerCount:1
        sort:
          description: comma delimited list of columns by which to sort
          type: string
          example: name,title
        groupBy:
          description: column to group duplicates by
          type: string
          example: title
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            data view
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        sensitive:
          description: sensitivity level of data view
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    EmailTemplate:
      type: object
      required:
        - category
        - id
        - name
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: name of the email template
          type: string
          example: self_serve_welcome
        category:
          description: email category
          type: string
          enum:
            - ADMINISTRATIVE
            - BILLING
            - DATA_IMPORT_AND_SYNC_STATUS
            - TRIAL_REMINDERS
    ExchangeRate:
      type: object
      required:
        - currency
        - date
        - id
        - rates
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: org id, if an org-specific exchange rate is in use
          type: string
        date:
          description: date
          type: string
          format: date
        currency:
          description: base currency
          type: string
        rates:
          description: >-
            exchange rates, per currency - the multiplier to convert the base
            currency into the foreign currency
          type: object
          additionalProperties:
            type: number
        updateAt:
          description: updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    FileEntity:
      type: object
      required:
        - bytes
        - ext
        - filename
        - id
        - originalFilename
        - type
      properties:
        id:
          description: globally unique id of file
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent org id
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: entity id that the file is attached to
          type: string
          example: 588f7ee98f138b19220041a7
        entityType:
          description: entity type (should only be PERSON or USER)
          type: string
          example: 588f7ee98f138b19220041a7
          enum:
            - ACTION
            - AGREEMENT
            - APP
            - APP_CONFIG
            - APPROVAL_CHAIN
            - APPROVAL_CHAIN_STAGE
            - APPROVAL_REQUEST
            - ASSESSMENT
            - BUDGET_POOL
            - BUNDLE
            - CATEGORY
            - CATEGORY_SORT
            - CHANGE
            - COMMENT
            - COMP_BAND
            - COMP_REVIEW
            - CONTENT
            - CUSTOMER
            - DATA_VIEW
            - EXCHANGE_RATE
            - EMAIL_TEMPLATE
            - FIELD
            - FILE
            - FORM
            - FORM_DRAFT
            - FORM_RESPONSE
            - GEOCODE
            - GROUP
            - GUIDELINE
            - JOB
            - JOB_LEVEL
            - MEDIA
            - MESSAGE
            - MULTIPLIER
            - ORG
            - ORG_CONFIG
            - PERSON
            - PROFILE_TAB
            - POLICY
            - POSITION
            - PROCESS
            - PRODUCT
            - QUERY_TOKEN
            - QUESTION
            - REPORT
            - REPORT_CHART
            - ROLE
            - SCENARIO
            - STOCK_PRICE
            - TABLE
            - TABLE_ROW
            - TASK_CONFIG
            - TEMPLATE
            - TASK
            - TOKEN
            - TIMEOFF
            - TRACKED_GROUP
            - USER
        field:
          description: field name that the file uses, if the file is tied to a field
          type: string
          example: offerLetter
        sensitive:
          description: level of sensitivity of the file, if the file is not tied to a field
          type: string
          example: PERSONAL
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        filename:
          description: customer facing filename of file
          type: string
          example: Offer Letter - Bob Smith.pdf
        originalFilename:
          description: original filename of file
          type: string
          example: BOB-SMITH.pdf
        type:
          description: mime type of file
          type: string
          example: application/pdf
        ext:
          description: extension of file
          type: string
          example: pdf
        bytes:
          description: size of file in bytes
          type: integer
          format: int64
          example: 102342
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Form:
      type: object
      required:
        - fields
        - id
        - label
        - options
        - orgId
        - status
      properties:
        description:
          description: description of form
          type: string
          example: >-
            The Engineering department, where engineers develop new technology
            and products.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of form
          type: string
          example: 'Health Index: Q2'
        fields:
          description: ordered list of fields being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormField'
        blocks:
          description: ordered list of blocks being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormBlock'
        status:
          description: status of the form
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - ARCHIVED
        type:
          description: type of the form
          type: string
          enum:
            - BUILT_IN
            - CUSTOM
        targetType:
          description: >-
            target type that the form can be filled out about (null defaults to
            PERSON for backwards compatibility)
          type: string
          enum:
            - NONE
            - PERSON
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        submitFilter:
          description: >-
            filter that controls which respondents can submit this form. The
            form:submit permission, if present, overrides this filter
          type: string
        responseReadFilter:
          description: >-
            filter that controls who can read the form responses. The
            formResponse:read permission, if present, overrides this filter
          type: string
        useFieldAccess:
          description: >-
            if this option is on, then form response answers will use field
            permissions to determine access to those responses
          type: boolean
        approval:
          description: approval needed, if any approval is required
          type: string
          enum:
            - MANAGER
            - GRAND_MANAGER
        authorSensitive:
          description: >-
            view sensitivity for the author of this form - the level of view
            access required to view the createId and updateId fields. If null,
            the author's identity is always visible as long as the viewer can
            read the form response. If set to PRIVATE, the author's identity is
            stored in ChartHop, but protected such that even users with
            sensitive access cannot access the data. If set to ANONYMOUS, the
            author's identity is not stored in ChartHop at all.
          type: string
          enum:
            - ANONYMOUS
            - PRIVATE
            - HIGH
            - MANAGER
        options:
          description: options, such as notification settings
          type: object
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: 2017-01-24T13:52Z
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    FormResponse:
      type: object
      required:
        - id
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        externalId:
          description: >-
            if the response was imported from an external system, the unique
            identifier of the response from that system
          type: string
          example: google:1234567890
        formId:
          description: form id that the response is a response for
          type: string
          example: 588f7ee98f138b19220041a7
        formVersionId:
          description: form version id that the response is a response for
          type: string
          example: 588f7ee98f138b19220041a7
        submitPersonId:
          description: person id who filled out the form response (null if anonymous)
          type: string
          example: 588f7ee98f138b19220041a7
        submitUserId:
          description: >-
            user id who filled out the form response (can be null if anonymous
            or imported data)
          type: string
          example: 588f7ee98f138b19220041a7
        changeId:
          description: change id, if the form response is linked to a DATA change
          type: string
          example: 588f7ee98f138b19220041a7
        assessmentId:
          description: assessment id, if the form response is related to an assesment
          type: string
          example: 588f7ee98f138b19220041a7
        shareAccess:
          description: >-
            list of share access, if the form response has been shared with
            anyone
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        authorSensitive:
          description: >-
            sensitivity level of the author of the form response, if it differs
            from the form response
          type: string
          enum:
            - ANONYMOUS
            - PRIVATE
            - HIGH
            - MANAGER
        targetEntityId:
          description: target entity id -- the entity that the form response is about
          type: string
        targetEntityType:
          description: target entity type -- the entity that the form response is about
          type: string
          enum:
            - NONE
            - PERSON
        answers:
          description: list of answers in the form response
          type: array
          items:
            $ref: '#/components/schemas/FormResponseAnswer'
        submitAt:
          description: timestamp that the form response was submitted
          type: integer
          format: int64
        approvalAt:
          description: timestamp that the form response was approved
          type: integer
          format: int64
        approvalId:
          description: user id who approved the form response
          type: string
        approvalNote:
          description: >-
            note left by the user who approved -- this is for backwards
            compatibility with the old approval system
          type: string
        status:
          description: status of form response
          type: string
          enum:
            - ACTIVE
            - PROPOSED
            - REJECTED
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    FormResponseAnswer:
      type: object
      required:
        - id
        - questionId
      properties:
        id:
          type: string
        questionId:
          type: string
        value:
          type: object
        type:
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
    FormVersion:
      type: object
      required:
        - formId
        - id
        - orgId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        formId:
          description: form id
          type: string
          example: 588f7ee98f138b19220041a7
        form:
          $ref: '#/components/schemas/Form'
        questions:
          description: questions contained in form, at the time of version creation
          type: array
          items:
            $ref: '#/components/schemas/Question'
        createAt:
          description: created timestamp
          type: string
          example: 2017-01-24T13:52Z
    Group:
      type: object
      required:
        - aliases
        - fields
        - id
        - name
        - orgId
        - slug
        - type
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: unique name of group
          type: string
          example: Engineering
        slug:
          description: unique slug of group
          type: string
          example: engineering
        code:
          description: external code identifier of the group
          type: string
          example: D123
        aliases:
          description: aliases for group
          type: array
          uniqueItems: true
          items:
            type: string
        type:
          description: type of group
          type: string
          enum:
            - LOCATION
            - DEPARTMENT
            - TEAM
            - BAND
            - JOBCODE
        leadJobIds:
          description: >-
            a list of group leaders, or null if the leader of the group should
            be automatically derived from the org chart
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        fields:
          description: group fields (currently only description)
          type: object
        address:
          $ref: '#/components/schemas/Address'
        level:
          description: level of the group, for BAND type only
          type: integer
          format: int32
        func:
          description: Job function category of the group, for DEPARTMENT type only
          type: string
          enum:
            - BD
            - CS
            - DESIGN
            - ENGINEERING
            - EXECUTIVE
            - FINANCE
            - GENERAL
            - IT
            - LEGAL
            - MARKETING
            - OPERATIONS
            - PEOPLE
            - PRODUCT
            - RECRUITING
            - SALES
            - SECURITY
            - SUPPORT
        locationType:
          description: Type of the location, for LOCATION type only
          type: string
          enum:
            - OFFICE
            - REMOTE
        parentGroupId:
          description: parent group id
          type: string
        timezone:
          description: timezone of the group, for LOCATION type only
          type: string
          example: America/New_York
        compMin:
          $ref: '#/components/schemas/Money'
        compMax:
          $ref: '#/components/schemas/Money'
        imagePath:
          description: path to profile image
          type: string
          pattern: ^[a-zA-Z0-9._/-]*$
        color:
          description: color of group
          type: string
          pattern: ^#[a-f0-9]{6}$
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    GroupType:
      type: object
      required:
        - id
        - name
        - slug
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: unique name of group
          type: string
          example: Engineering
        slug:
          description: unique slug of group
          type: string
          example: engineering
        requirePositions:
          description: whether the group requires members to be positions
          type: boolean
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Guideline:
      type: object
      required:
        - appliedField
        - basisType
        - calculationType
        - compReviewId
        - createAt
        - createId
        - enablePopulateValue
        - flagMode
        - id
        - label
        - orgId
        - sourceField
        - updateAt
        - updateId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        compReviewId:
          description: comp review id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: guideline name
          type: string
          example: Merit Guideline
        budgetPoolId:
          description: the budget pool the guideline is allocated from
          type: string
          example: 588f7ee98f138b19220041a7
        participantsExpr:
          description: CQL filter to determine which employees the guideline applies to
          type: string
          example: is:person and tenure>=12
        appliedField:
          description: the field the guideline applies to
          type: string
          example: '''base'' or ''grantShares'''
        sourceField:
          description: the field the guideline is calculated from
          type: string
          example: '''base'' or ''grantShares'''
        calculationType:
          description: >-
            how does the guideline calculate the target value? e.g. is there a
            range (min/max) or only a target
          type: string
          example: TARGET
          enum:
            - RANGE
            - TARGET
        flagMode:
          description: how does the guideline indicate deviations from the target amount
          type: string
          example: NONE
          enum:
            - DEVIATION_THRESHOLD
            - NONE
        flagDeviationThreshold:
          description: >-
            the threshold (percent) against which deviations from the guideline
            are flagged
          type: number
          example: 0.75
        enablePopulateValue:
          description: >-
            whether or not the target values from the guidelines are
            pre-populated in the given columns
          type: boolean
          example: false
        basisType:
          description: >-
            how an individual guideline value itself is calculated, e.g.
            percentage of the appliedField, fixed amount, or custom CQL
          type: string
          example: CUSTOM
          enum:
            - CUSTOM
            - FIXED
            - CUSTOM_FIXED
            - PERCENTAGE
            - CUSTOM_PERCENTAGE
        basisExpr:
          description: >-
            if basisType.CUSTOM, the custom CQL expression used to generate the
            guideline value
          type: string
          example: 'tenure>12 ? (base * 0.04) : (base * 0.02)'
        basisFieldMatrix:
          $ref: '#/components/schemas/BasisFieldMatrix'
        fixedAmountRange:
          $ref: '#/components/schemas/MoneyRange'
        fixedValueRange:
          $ref: '#/components/schemas/ValueRange'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    JobLevel:
      type: object
      required:
        - id
        - label
        - orgId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable name of job level
          type: string
          example: Associate
        code:
          description: job level code
          type: string
          example: BF01
        benchmarkType:
          $ref: '#/components/schemas/EnumValue'
        benchmarkLevel:
          $ref: '#/components/schemas/EnumValue'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    LegalDoc:
      type: object
      required:
        - date
        - id
        - name
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: human-readable full name of form
          type: string
          example: ChartHop Service Agreement
        content:
          description: legal doc content
          type: string
        date:
          description: content by date
          type: string
          format: date
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: 2017-01-24T13:52Z
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Message:
      type: object
      required:
        - createAt
        - id
        - notificationType
        - orgId
        - type
        - userId
      properties:
        title:
          description: message title
          type: string
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: type of message
          type: string
          enum:
            - CHAT
            - EMAIL
            - WEB
        notificationType:
          description: type of notification (SUCCESS, ERR, ANNOUNCEMENT etc.)
          type: string
          enum:
            - SUCCESS
            - WARN
            - ERROR
            - COMMENT
            - TASK_COMPLETED
            - TASK_ASSIGNED
            - REMINDER
            - ANNOUNCEMENT
            - PROCESS_ERROR
            - PROCESS_DONE
        userId:
          description: user who receives the message
          type: string
          example: 588f7ee98f138b19220041a7
        content:
          description: message content
          type: string
        messageUrl:
          description: link to message content (if applicable)
          type: string
        key:
          description: >-
            key of message if applicable (e.g. product-tour,
            import-complete-{id})
          type: string
        readAt:
          description: read timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        seenAt:
          description: seen timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Multiplier:
      type: object
      required:
        - expr
        - id
        - label
        - orgId
        - value
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable name of multiplier
          type: string
          example: Non-technical
        code:
          type: string
        value:
          description: amount to multiply the initial value by
          type: number
          example: 0.75
        expr:
          description: calculated expression to match against the job
          type: string
          example: department!="Engineering"
        category:
          description: tag to group multipliers together by
          type: string
          example: Location
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Org:
      type: object
      required:
        - id
        - name
        - options
        - slug
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        customerId:
          description: customer for billing processing
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: name of organization
          type: string
          example: Acme Corp
        slug:
          description: unique slug of organization
          type: string
          example: acme-corp
        type:
          description: type of organization
          type: string
          example: PRIVATE
          enum:
            - PRIVATE
            - PUBLIC
            - EDU
            - GOV
            - NONPROFIT
            - DEMO
            - TEST
        industry:
          description: industry
          type: string
          example: Software and Internet
        estEmployees:
          description: approximate number of employees
          type: integer
          format: int32
        estRevenue:
          description: approximate amount of revenue
          type: integer
          format: int32
        foundedYear:
          description: year of founding
          type: integer
          format: int32
          example: 1998
        address:
          $ref: '#/components/schemas/Address'
        phone:
          description: company phone number in E.164 format
          type: string
          pattern: ^\+?[1-9]\d{1,14}$
        email:
          description: primary contact email
          type: string
          example: bob@example.com
        url:
          description: website URL
          type: string
          format: uri
        domains:
          description: domains used by this org
          type: array
          items:
            $ref: '#/components/schemas/OrgDomain'
        status:
          description: current status of organization
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DISABLED
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        currencies:
          description: >-
            types of currencies in use, with the first currency the primary
            currency
          type: array
          items:
            type: string
          maxItems: 20
          minItems: 1
        stock:
          description: stock symbol
          type: string
          example: GOOG
        timezone:
          description: timezone in use
          type: string
          example: America/New_York
        appTime:
          description: >-
            approximate time of day for daily app syncs to run (defaults to 9am
            Eastern time)
          type: string
          example: '09:00'
        zone:
          description: infrastructure zone
          type: integer
          format: int32
          example: 2
        fiscalStart:
          description: >-
            number of months into the calendar year that the fiscal year starts
            (1 = February, 2 = March)
          type: integer
          format: int32
        headJobId:
          description: head of the organization
          type: string
        startDate:
          description: start date of history
          type: string
        sensitiveFields:
          description: map of sensitive field defaults
          type: object
        options:
          $ref: '#/components/schemas/OrgOptions'
        internalOptions:
          description: internal (ChartHop controlled) options
          type: object
        onboardSteps:
          description: list of onboard steps that this Org has completed (or skipped)
          type: array
          items:
            $ref: '#/components/schemas/OnboardStepResult'
        onboarding:
          description: >-
            current onboarding status of an organization, allowing clearing of
            org
          type: boolean
        selfServeImporting:
          description: >-
            completion status of initial import for orgs signed up via self
            serve
          type: boolean
        headCount:
          description: number of total headcount currently in the org
          type: integer
          format: int32
        userCount:
          description: number of non-ChartHop, non-app users in the org
          type: integer
          format: int32
        activeUserCount:
          description: >-
            number of non-ChartHop, non-app users in the org active in the past
            month
          type: integer
          format: int32
        activeAt:
          description: last timestamp that any user was active in the org
          type: string
          example: '2017-01-24T13:57:52Z'
        changeAt:
          description: timestamp of most recent changes made to org
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        destroyAt:
          description: timestamp that the org is marked for data destruction
          type: string
          example: '2017-01-24T13:57:52Z'
        destroyId:
          description: user who marked the org for data destruction
          type: string
          example: 588f7ee98f138b19220041a7
    OnboardStepResult:
      type: object
      required:
        - name
        - status
      properties:
        name:
          description: name of the step completed or skipped
          type: string
        status:
          description: status of the step - either completed or skipped
          type: string
          enum:
            - COMPLETE
            - SKIP
    OrgDomain:
      type: object
      required:
        - aliases
        - domain
      properties:
        domain:
          type: string
        aliases:
          type: array
          uniqueItems: true
          items:
            type: string
    OrgOptions:
      type: object
      properties:
        aboutEquityMessage:
          description: >-
            Message to show in place of the default About equity compensation...
            message on profile tab
          type: string
        allowedIpsPasswordLogin:
          description: IP Allow-list for Password based logins
          type: array
          items:
            type: string
        atsReqField:
          description: >-
            If an org has an ats integration, use their atsReqField instead of
            greenhouseId
          type: string
        atsReqId:
          description: >-
            [sc-78701] the Recruiting builtin category includes (by default) the
            greenhouseId fieldId - this is then overridden in places like the
            column chooser by this option, i.e. leverReqId or jobviteReqId
          type: string
        bannerHeader:
          type: string
        bannerMessage:
          type: string
        bannerMessageExpireDays:
          type: integer
          format: int32
        brandColor:
          description: Changes nav color to use brand coloring
          type: string
        brandLogo:
          description: Show brand logo in header of home page
          type: string
        costMultiplier:
          description: >-
            Blanket multiplier to apply to all headcount costs, to account for
            blanket costs such as taxes and benefits
          type: number
        country:
          type: string
        customSsoImage:
          description: Customizes the SSO button image on the login screen
          type: string
        customSsoLabel:
          description: Customizes the SSO button label on the login screen
          type: string
        customWelcomeMessage:
          type: string
        dashboardAnniversariesDaysAhead:
          type: integer
          format: int32
        dashboardAnniversariesDaysBack:
          type: integer
          format: int32
        dashboardAnnouncementMessage:
          type: string
        dashboardCalendarTypes:
          description: What types of calendars to show in panel
          type: object
        dashboardChangeDaysAhead:
          description: How many days ahead to look for changes on home screen
          type: integer
          format: int32
        dashboardChangeDaysAheadMembers:
          description: >-
            How many days ahead to look for changes, for members only — i.e. set
            this to 0 to disallow regular people seeing in the future
          type: integer
          format: int32
        dashboardChangeDaysBack:
          description: How many days back to look for changes on home screen
          type: integer
          format: int32
        dashboardChangeTypes:
          description: >-
            Which change types to show on home screen and calendar, uses
            ChangeDao.ChangeType as enum
          type: object
        dashboardGlobal:
          description: >-
            If you want employees to see all jobs regardless of location set
            this to true
          type: boolean
        dashboardHideAnniversaries:
          type: boolean
        dashboardHideOpenJobs:
          type: boolean
        dashboardHidePeopleMoves:
          type: boolean
        dashboardRestrictOpenJobs:
          type: boolean
        dateFormat:
          type: string
        defaultMessageChannel:
          $ref: '#/components/schemas/MessageChannelConfig'
        disableCompReviewV2Emails:
          type: boolean
        disableDataAggregation:
          type: boolean
        disableDataImportTypes:
          type: boolean
        disableDefaultDropdownFields:
          description: >-
            Does not show any fields in the org chart visualize dropdown that
            they don't have control over visibility for (e.g. age,
            directJobCount, grandManager)
          type: boolean
        disableLiveQuery:
          type: boolean
        disableOrgExportLimit:
          description: Allows powerpoint exports of over 1000 jobs
          type: boolean
        disableSiblingIndicators:
          description: Disables the sibling indicators on the org chart
          type: boolean
        disableWelcomeEmail:
          type: boolean
        easyAppInstallConfigManageEnabled:
          description: >-
            Enables easy app install (on by default for self-serve & standard
            orgs)
          type: boolean
        editJobFieldOrder:
          description: Allows ordering of fields within tabs of the edit job dialog
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        enableAISummary:
          description: Enables AI summaries in dashboards
          type: boolean
        enableActions:
          type: boolean
        enableAdp:
          type: boolean
        enableAdvancedApprovals:
          description: Enables department-based conditional approvals
          type: boolean
        enableAdvancedDatePicker:
          description: Enables the new date picker in the datasheet
          type: boolean
        enableAiFormResponseSummary:
          type: boolean
        enableAnonymousForms:
          type: boolean
        enableAzure:
          type: boolean
        enableBackwardsCompatibleCompBandRead:
          description: Backwards compatibility flags for bands UAC
          type: boolean
        enableBasicAccountSettings:
          type: boolean
        enableCalendarExport:
          type: boolean
        enableCalendarScreen:
          type: boolean
        enableChangeExport:
          type: boolean
        enableColumnCache:
          type: boolean
        enableCompReviewV2LaunchFlag:
          type: boolean
        enableCompensationBands:
          description: Enables Comp bands V2 (on by default for Premium customers)
          type: boolean
        enableConditionalApprovalStages:
          type: boolean
        enableCsvImporterMatchFields:
          type: boolean
        enableDataSheetPersons:
          description: Allows viewing persons on the data sheet
          type: boolean
        enableDatasheetDepartedPeople:
          type: boolean
        enableDelightedSurvey:
          description: Enables the delighted survey popup
          type: boolean
        enableExperimentalScreenshotLayoutChanges:
          type: boolean
        enableFormBuilderV2:
          type: boolean
        enableFormResponsesSheet:
          type: boolean
        enableFullNamesTitlesLegacy:
          description: Shows full names in powerpoint exports
          type: boolean
        enableFullScreenForms:
          type: boolean
        enableGeoip:
          type: boolean
        enableGoogle:
          type: boolean
        enableGrantCustomization:
          description: Enables grant aliases in the financial settings
          type: boolean
        enableGroupsWithoutPositions:
          type: boolean
        enableHideEquityCalculator:
          description: Hides the value calculator on the equity section of the profile
          type: boolean
        enableHrisOnboarding:
          type: boolean
        enableLabsScreen:
          description: Allows access to a UI to turn on certain alpha/beta features
          type: boolean
        enableLongLivedCache:
          description: >-
            Enables a managed service that, on API startup, primes those orgs'
            caches, for both column cache, as well as the primary org cache.
            These keys should also last for 24+ hours and therefore be always
            kept warm.
          type: boolean
        enableMicrosoft:
          type: boolean
        enableMultipleVisualizeOrgChart:
          description: Allows users to select multiple fields to visualize on the org chart
          type: boolean
        enableNavRefresh:
          type: boolean
        enableNewHireManagement:
          type: boolean
        enableOkta:
          type: boolean
        enableOneLogin:
          type: boolean
        enableOrgChartIndicators:
          description: Shows the +XX job sibling indicators on the org chart
          type: boolean
        enableOutboundPayroll:
          type: boolean
        enablePassword:
          type: boolean
        enablePowerpointScreenshot:
          description: Enables the powerpoint screenshot export feature, on by default
          type: boolean
        enableRefreshedReportsV2:
          type: boolean
        enableReportBuildV2:
          type: boolean
        enableResources:
          description: Enables resources feature
          type: boolean
        enableRickrollLogin:
          type: boolean
        enableSaml:
          type: boolean
        enableStandardAccess:
          description: Enables standard sharing access in scenarios
          type: boolean
        enableTeamOrgChart:
          description: Enables groups with positions feature
          type: boolean
        enableTemplatesRichTextEditorV2:
          type: boolean
        enableTimeOffRequests:
          type: boolean
        enableTransformFieldMapper:
          description: >-
            Enables the ability to configure the One to One field mapper with a
            Charthop Default Value
          type: boolean
        freeTrialExperienceDec2023:
          description: Lets users know that their basic trial will be ending
          type: boolean
        grantValueDefault:
          description: If enabled, then by default grants are in value, not shares
          type: boolean
        greenhouseDomain:
          description: Allows customization of greenhouse subdomain for XHOP app
          type: string
        hiddenHead:
          description: >-
            the top-level job in the org will be hidden on the org chart. Use
            this option to create multiple org heads
          type: boolean
        hideCompensationTab:
          type: boolean
        hideEquityTab:
          type: boolean
        hideEquityValuation:
          description: >-
            Hides the company valuation component of the calculation in the
            Equity profile tab (stock price will still be shown)
          type: boolean
        hideProfileCompensationVesting:
          description: Hides the vesting section of the compensation profile tab
          type: boolean
        hideProfileCurrencyConversion:
          description: Hides profile currency conversion on compensation tab
          type: boolean
        hideScenarioTotalRows:
          description: Hide total rows in scenario change summary tables
          type: boolean
        hideTasksTab:
          type: boolean
        hideTimeOffTab:
          type: boolean
        highlightMenuPreferredFields:
          type: array
          items:
            type: string
        isLargeOrg:
          description: Disables certain UI features for large orgs
          type: boolean
        jobDetailPanelFields:
          description: >-
            Customize which fields are displayed in the job details panel in the
            Org Chart and their order.
          type: array
          items:
            type: string
        language:
          type: string
        loginRedirectUrl:
          type: string
        newHireOpenJobMatchingFieldName:
          description: Custom field for fallback open job matching in org engine
          type: string
        notifyUserIds:
          description: Sends notification to org users when new Users are assigned
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        offboardingColNames:
          type: string
        offboardingFilter:
          type: string
        onboardingColNames:
          type: string
        onboardingFilter:
          type: string
        orgDefaultData:
          description: >-
            Controls what data field will be shown in the Visualize option on
            the Org Chart by default (default is department)
          type: string
        orgDefaultFilter:
          type: string
        orgEngineCustomIdCustomFieldNameList:
          description: >-
            This is an array of fields that an org can use to indicate that one
            or more fields should be used as alternate id
          type: array
          items:
            type: string
        orgEngineIncrementalBackDays:
          description: Org engine incremental back day option
          type: integer
          format: int32
        orgEngineOnlyLiveJobs:
          description: Enable live jobs only mode for the org engine
          type: boolean
        orgEnginePromoteCustomIdsAsTrueIds:
          description: >-
            This field promotes the alternate id to the true id and allows HRIS
            to be updated
          type: boolean
        pptThemes:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        preboardingColNames:
          type: string
        preboardingFilter:
          type: string
        preventAtsEmailNotifications:
          description: Sync History V2 Option to prevent ATS notifications
          type: boolean
        profileCompensationChartFields:
          description: Controls comp fields show in profile tab
          type: array
          items:
            type: string
        restrictApproxGeo:
          type: boolean
        restrictExportCsv:
          description: Prevent non-sensitive users to export company data in CSV files
          type: string
          enum:
            - '0'
            - '1'
        restrictExportOrgChart:
          description: Prevent non-sensitive users to export company org chart
          type: string
          enum:
            - '0'
            - '1'
        restrictPersonHistory:
          type: boolean
        restrictReports:
          type: boolean
        restrictScenarios:
          type: boolean
        restrictSelfEdit:
          type: boolean
        restrictSensitiveFilters:
          type: boolean
        restrictVariableView:
          type: boolean
        restrictVestingView:
          type: boolean
        scenarioCols:
          description: >-
            The default set of comma separated columns to show in the scenario
            changes screen
          type: string
        scenarioColsPromotion:
          type: string
        sheetDefaultFilter:
          type: string
        showErrorRows:
          type: boolean
        skipSyncNotify:
          type: boolean
        stockPriceRollingAverage:
          type: integer
          format: int32
        timeOffDaysAhead:
          type: integer
          format: int32
        userSessionDuration:
          type: string
        userSessionInactiveDuration:
          type: string
        welcomeEmailButtonLabel:
          type: string
        welcomeEmailSubject:
          type: string
    BuiltInCategoryMap:
      type: object
      required:
        - categoryId
        - fieldIds
      properties:
        categoryId:
          description: id of the built-in category
          type: string
        fieldIds:
          description: set of custom field ids that belongs to the built-in category
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    BuiltInFieldConfig:
      type: object
      required:
        - hidden
        - name
      properties:
        name:
          description: reserved codename for the native field
          type: string
        hidden:
          description: hidden state of the native field (specific to org)
          type: boolean
        places:
          description: decimal places to round native Money fields
          type: integer
          format: int32
    CompensationBandsConfig:
      type: object
      required:
        - annualizedSalaries
        - currencyRounding
        - hasLocationMultiplier
        - hasTargetSalary
        - hourlySalaries
        - hoursPerWeek
        - weeksPerYear
      properties:
        annualizedSalaries:
          description: whether annualized salaries are used
          type: boolean
        annualizedSalariesType:
          description: how annualized salaries are represented
          type: string
        hourlySalaries:
          description: whether hourly salaries are used
          type: boolean
        hourlySalariesType:
          description: how hourly salaries are represented
          type: string
        hoursPerWeek:
          description: how many hours per week to use when calculating comp bands
          type: number
        weeksPerYear:
          description: how many weeks per year to use when calculating comp bands
          type: number
        hasTargetSalary:
          description: target salary within a comp band
          type: boolean
        targetSalaryType:
          description: how target salaries are represented
          type: string
        equityFormat:
          description: equity format
          type: string
        variableBonusFormat:
          description: variable bonus format
          type: string
        tiersNotMappedToCodes:
          description: >-
            whether or not the tiers are mapped to fields. after we migrate all
            the tiers to be mapped, this flag can be removed
          type: boolean
        firstTier:
          description: the org's first tier for their comp bands
          type: string
        secondTier:
          description: the org's second tier for their comp bands
          type: string
        thirdTier:
          description: the org's third tier for their comp bands
          type: string
        hasLocationMultiplier:
          description: whether the org's location data is used as multipliers
          type: boolean
        jobLevelSource:
          description: the source for the band job levels
          type: string
        marketJobLevelSystem:
          description: comparable market job level system
          type: string
        currencyRounding:
          description: currency rounding settings in the UI
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Money'
        hasMigratedBands:
          description: has migrated V1 bands
          type: boolean
    OrgConfig:
      type: object
      required:
        - id
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        hiddenFieldIds:
          description: set of hidden field ids of an org
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        builtinCategoryMap:
          description: set of maps of the custom fields that belongs to a built-in category
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BuiltInCategoryMap'
        builtinFieldConfig:
          description: Org configuration for built-in fields
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BuiltInFieldConfig'
        compensationBandsConfig:
          $ref: '#/components/schemas/CompensationBandsConfig'
        smartCurrencyOptions:
          description: >-
            Options for where to source a currency to use when currency is
            unknown. order specific
          type: array
          example: PERSON_HOME_ADDRESS_COUNTRY
          items:
            $ref: '#/components/schemas/SmartCurrencyOption'
        smartCurrencyDefault:
          description: >-
            The default currency to use when currency is unknown and there are
            no options set in smartCurrencyOptions
          type: string
          example: USD
        requiredJobFields:
          description: Org configuration for required job fields
          type: array
          uniqueItems: true
          items:
            type: string
        scenarioApprovalChains:
          description: Configures which approval chains to use with specific scenario types
          type: object
          additionalProperties:
            type: string
            example: 588f7ee98f138b19220041a7
        isOpenJobRoleApprovalEnabled:
          description: Whether to show open job approval on Open Job Profile page
          type: boolean
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        grantConfiguration:
          description: Org Grant Configuration
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GrantAlias'
    GrantAlias:
      type: object
      required:
        - enabled
        - grantType
      properties:
        alias:
          type: string
        grantType:
          type: string
          enum:
            - ISO
            - NSO
            - RSU
            - SAR
            - PERFORMANCE_SHARES
            - PHANTOM_STOCK
            - RSA
        enabled:
          type: boolean
    SmartCurrencyOption:
      type: object
      required:
        - enabled
        - name
      properties:
        name:
          description: codename for the option
          type: string
          enum:
            - PERSON_HOME_ADDRESS_COUNTRY
            - JOB_LOCATION_COUNTRY
            - JOB_CURRENCY
        enabled:
          description: determines if this option should be used
          type: boolean
    Contact:
      type: object
      required:
        - format
        - type
      properties:
        type:
          description: type identifier for the contact
          type: string
          example: HOME_PHONE
          enum:
            - ADP
            - BAMBOO
            - EMPLOYEE
            - GREENHOUSE
            - GOOGLE
            - GUSTO
            - HUMAANS
            - JOBVITE
            - JUSTWORKS
            - LEVER
            - NAMELY
            - OKTA
            - PAYLOCITY
            - SAPLING
            - PRISM
            - SUCCESSFACTORS
            - RIPPLING
            - TRINET
            - ULTIPRO
            - WORKDAY
            - ZENEFITS
            - LINKEDIN
            - TWITTER
            - GITHUB
            - SLACK
            - TIMETASTIC
            - HOME_EMAIL
            - MOBILE_PHONE
            - WORK_EMAIL
            - HOME_PHONE
            - WORK_PHONE
            - WORK_FAX
            - FINCH
            - ALPHASTAFF
            - LEVER_JOB_POSTING
            - DEEL
            - ADP_ASSOCIATE_ID
            - ADP_WORKER_ID
        value:
          description: value for the contact
          type: string
          example: linkedin:name
        format:
          description: format for the value
          type: string
          example: EMAIL
          enum:
            - PHONE
            - EMAIL
            - ID
    Person:
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent org id
          type: string
          example: 588f7ee98f138b19220041a7
        userId:
          description: user id, if this person corresponds with a user
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          $ref: '#/components/schemas/Name'
        contacts:
          description: contacts (emails, phones, external ids)
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
        remoteWorkAddress:
          $ref: '#/components/schemas/Address'
        birthDate:
          description: birthdate
          type: string
          example: '1980-05-12'
        startDate:
          description: start date of most recent hire
          type: string
          example: '1980-05-12'
        endDate:
          description: end date of most recent hire
          type: string
          example: '1980-05-12'
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        nameAudioPath:
          description: path to pronunciation of the person's name
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        gender:
          description: self-reported gender
          type: string
          enum:
            - MALE
            - FEMALE
            - NONBINARY
            - PREFER_NOT
        ethnicity:
          description: self-reported ethnicity
          type: string
          enum:
            - HISPANIC
            - WHITE
            - BLACK
            - PACIFIC
            - ASIAN
            - NATIVE
            - TWO
            - PREFER_NOT
        fields:
          description: fields containing custom data
          type: object
          additionalProperties:
            type: object
        sensitiveFields:
          description: personal sensitivity preferences around specific fields
          type: object
        sort:
          description: sort order
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        inviteOptions:
          $ref: '#/components/schemas/OrgAccess'
        state:
          description: current status within the organization
          type: string
          enum:
            - PRIMARY
            - SCENARIO
            - PENDING
            - INACTIVE
    Name:
      type: object
      required:
        - last
      properties:
        first:
          description: first name
          type: string
          example: Jane
        middle:
          description: middle name
          type: string
          example: Quidditch
        last:
          description: last name
          type: string
          example: Public
        pref:
          description: preferred first name
          type: string
          example: JQ
        prefLast:
          description: preferred last name
          type: string
          example: Smith
    OrgAccess:
      type: object
      required:
        - access
        - orgId
      properties:
        orgId:
          description: org id
          type: string
          example: 5887a7718f138b6a2a0041a7
        personId:
          description: person id, if this user directly corresponds with a person
          type: string
          example: 5887a7718f138b6a2a0041a7
        access:
          description: legacy access permission level
          type: string
          enum:
            - NONE
            - VIEW
            - LIMITED
            - MEMBER_LIMITED_COMP
            - MEMBER
            - CUSTOM
            - TECH_OWNER
            - TIMEOFF
            - CONTACT
            - COMP_CASH
            - COMP_EQUITY
            - COMP_ALL
            - RECRUIT_SENSITIVE
            - RECRUIT_PRIMARY
            - SENSITIVE_LIMITED_COMP
            - SENSITIVE
            - PRIMARY
            - PEOPLE_OPS_ADMIN
            - PEOPLE_OPS_ADMIN_NO_COMP_DATA
            - PEOPLE_OPS_ADMIN_NO_SENSITIVE_DATA
            - OWNER
        groupIds:
          description: group ids that the above access applies to
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        expr:
          description: expression that the above access applies to
          type: string
        expireAt:
          description: timestamp that this org access will expire
          type: string
        roleId:
          description: the role id that defines the users access
          type: string
          example: 5887a7718f138b6a2a0041a7
    Postal:
      type: object
      required:
        - id
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        postal:
          description: postal code
          type: string
        city:
          description: city name
          type: string
        state:
          description: state code
          type: string
        country:
          description: country code
          type: string
        geo:
          $ref: '#/components/schemas/Geopoint'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Process:
      type: object
      required:
        - createAt
        - createId
        - id
        - label
        - options
        - orgId
        - runUserId
        - status
        - type
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent org id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable label that identifies this process
          type: string
        type:
          description: process type
          type: string
        status:
          description: current status of process
          type: string
          enum:
            - PENDING
            - RUNNING
            - DONE
            - ERROR
        filePath:
          description: data file path
          type: string
        logPath:
          description: data log path
          type: string
        runUserId:
          description: user id who is running the process
          type: string
          example: 588f7ee98f138b19220041a7
        parentProcessId:
          description: process id of parent process
          type: string
          example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id (user who requested the process run)
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        startAt:
          description: started at timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        endAt:
          description: ended at timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        message:
          description: status or error message
          type: string
        progress:
          description: percent progress so far
          type: number
          format: double
        internalError:
          description: internal-only error message
          type: string
        options:
          description: options passed to the process
          type: object
        results:
          description: results summary for the process
          type: object
          additionalProperties:
            type: object
        logDataList:
          description: list of log data that occurred during running of this process
          type: array
          items:
            $ref: '#/components/schemas/LogData'
        state:
          description: process-specific state data
          type: object
        appId:
          description: app id of the process
          type: string
          example: 588f7ee98f138b19220041a7
        uuid:
          description: unique ID of the process at queue time
          type: string
          example: 84db3c6e-0877-4436-8af1-768c06b29586
    LogData:
      type: object
      required:
        - at
        - data
        - level
      properties:
        level:
          type: string
          enum:
            - INFO
            - WARN
            - ERROR
        at:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        message:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
    Product:
      type: object
      required:
        - features
        - name
        - salesforceProductId
        - sku
        - stripeProductId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: name of product
          type: string
          example: Compensation Reviews
        sku:
          description: unique sku of product
          type: string
          example: compensation-reviews
        salesforceProductId:
          description: corresponding product id in salesforce
          type: string
          example: 01t4T000000RpgKQAS
        stripeProductId:
          description: corresponding product id in stripe
          type: string
          example: prod_12345ABC
        features:
          description: set of features this product has access to
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - ATS_SYNC
              - COMPENSATION_REVIEW
              - CUSTOM_FIELD
              - CUSTOM_FIELD_READONLY
              - CUSTOM_FORM
              - CUSTOM_PROFILE_TAB
              - CUSTOM_ROLE
              - MULTI_PAYROLL
              - PERFORMANCE_REVIEW
              - REPORT
              - REPORT_READONLY
              - SCENARIO
              - SIMPLE_WORKFLOWS
              - SURVEY
              - TABLE
              - TEMPLATE
              - WORKDAY_ADAPTIVE
              - PAYROLL_OUTBOUND
              - APPROVAL_WORKFLOWS
              - CONTENT
              - IDENTITY_OUTBOUND
              - ONBOARDING_OFFBOARDING
              - TIMEOFF
        featureOptions:
          description: map of options for the feature
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FeatureAccessOption'
    FeatureAccessOption:
      type: object
      required:
        - name
        - type
      properties:
        description:
          description: The description of the feature option
          type: string
        name:
          description: The name of the feature option tied to the feature access
          type: string
          example: smart_fields
          enum:
            - CONFIGURED_ROLES
            - SMART_FIELDS
            - APP_FIELD_MAPPERS
            - MULTI_PAYROLL_INSTALLS
        type:
          description: The feature option type
          type: string
          enum:
            - LIMIT
            - FULL_ACCESS
        limit:
          description: The feature option limit
          type: integer
          format: int32
    ProfileTab:
      type: object
      required:
        - blocks
        - id
        - label
        - orgId
        - sort
        - status
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable name of profile tab
          type: string
          example: Performance
        blocks:
          description: ordered list of blocks contained by profile tab
          type: array
          items:
            $ref: '#/components/schemas/Block'
        status:
          description: status of the profile tab
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        readFilter:
          description: >-
            filter that controls which viewers can read this profile tab. The
            profileTab:read permission, if present, overrides this filter
          type: string
        sort:
          description: sort order
          type: integer
          format: int32
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    QueryToken:
      type: object
      required:
        - createAt
        - expireAt
        - id
        - orgId
        - params
        - token
        - type
        - userId
      properties:
        id:
          description: globally unique id for query token
          type: string
        token:
          description: globally unique random token string
          type: string
        orgId:
          description: id of org
          type: string
        userId:
          description: id of user
          type: string
        type:
          description: query type
          type: string
        path:
          description: query path (deprecated)
          type: string
        params:
          description: query params
          type: object
        accessCount:
          description: total number of uses
          type: integer
          format: int64
        createAt:
          description: created timestamp
          type: string
          example: '2016-11-16T13:40:47Z'
        expireAt:
          description: expire timestamp
          type: string
          example: '2016-11-16T13:40:47Z'
        activeAt:
          description: last active timestamp
          type: string
          example: '2016-11-16T13:40:47Z'
    Report:
      type: object
      required:
        - createAt
        - createId
        - id
        - label
        - orgId
        - sensitive
        - share
        - shareAccess
        - updateAt
        - updateId
      properties:
        description:
          description: report description
          type: string
          example: This is a report on headcount etd
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: report label
          type: string
          example: Headcount Report
        filter:
          description: filter automatically applied to every chart in this report
          type: string
          example: department:engineering
        share:
          description: sharing settings of report
          type: string
          enum:
            - NORMAL
            - FULL
        sensitive:
          description: sensitivity level of report
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            report
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        chartIds:
          description: list of charts in this report
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ReportChart:
      type: object
      required:
        - createAt
        - createId
        - id
        - label
        - orgId
        - query
        - updateAt
        - updateId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        reportId:
          description: parent report id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: chart label
          type: string
          example: Headcount Report
        type:
          description: chart type
          type: string
          enum:
            - LINE
            - AREA
            - STACKED
            - BAR
            - VERTICAL_BAR
            - HORIZONTAL_BAR
            - PIE
            - TABLE
            - TABLE_CROSSTAB
            - SINGLE_METRIC
            - HEADER
            - TEXT
        filter:
          description: filter that applies to this chart
          type: string
          example: department='Engineering'
        filterOverride:
          description: whether the chart filter overrides the global filter
          type: boolean
        query:
          $ref: '#/components/schemas/ReportQuery'
        sort:
          description: sort order
          type: integer
          format: int32
        isAdvancedQueryMode:
          description: whether the chart configuration is using advanced mode
          type: boolean
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    CostImpact:
      type: object
      required:
        - annual
        - firstMonth
        - months
      properties:
        annual:
          description: total annual run-rate impact
          type: number
        firstMonth:
          description: first month to be affected
          type: string
        months:
          description: impact to each month, starting at firstMonth
          type: array
          items:
            type: number
    Scenario:
      type: object
      required:
        - createAt
        - createId
        - id
        - name
        - orgId
        - shareAccess
        - startDate
        - status
        - updateAt
        - updateId
      properties:
        description:
          description: scenario description
          type: string
          example: Q4 Conservative Plan
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: scenario name
          type: string
          example: Q4 Conservative Plan
        startDate:
          description: date that this scenario diverges from primary
          type: string
          example: '2017-01-15'
        status:
          description: status of scenario
          type: string
          enum:
            - OPEN
            - INACTIVE
            - MERGED
            - DRAFT
            - ARCHIVED
        shareAccess:
          description: users who are specifically granted permission to this scenario
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        cost:
          $ref: '#/components/schemas/CostImpact'
        changeCount:
          description: number of changes contained in scenario
          type: integer
          format: int32
        changeCounts:
          description: number of changes of each type contained in scenario
          type: object
          additionalProperties:
            type: integer
            format: int32
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        mergeId:
          description: merged by user id
          type: string
          example: 588f7ee98f138b19220041a7
        mergeAt:
          description: merged timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        calcStartAt:
          description: most recent summary calculation started at timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        calcEndAt:
          description: most recent summary calculation ended at timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        changeAt:
          description: timestamp of most recent changes made to scenario
          type: string
          example: '2017-01-24T13:57:52Z'
        changeId:
          description: user who made the most recent change to scenario
          type: string
          example: '2017-01-24T13:57:52Z'
        type:
          description: Type of scenario to be created
          type: string
          enum:
            - GENERAL
            - COMP
            - PROMOTION
            - TERMINATE
            - CREATE_JOB
            - UPDATE_JOB
            - BUDGET
        startDateFixed:
          description: >-
            whether or not the start date should stay fixed in time, or update
            to today's date as time passes
          type: string
          enum:
            - FIXED
            - TODAY
        query:
          description: >-
            Query for selecting which people/jobs are initially included in the
            scenario (only applies to promotion scenarios)
          type: string
        validJobIdSet:
          description: This scenario changes are restricted to the following jobIds
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        approvalRequestId:
          description: Approval request id, if the scenario has been submitted for approval
          type: string
        entityId:
          description: The entity this scenario is associated with
          type: string
        entityType:
          description: The type of entity associated with this scenario
          type: string
          enum:
            - COMP_REVIEW
        sharedViewConfig:
          description: View configurations associated with this scenario
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScenarioSharedViewConfig'
        budget:
          $ref: '#/components/schemas/Money'
        costCalc:
          description: CQL used to calculate the budget allocation in the scenario
          type: string
    ScenarioSharedViewConfig:
      type: object
      properties:
        customColumnNames:
          description: list of column names to display
          type: array
          items:
            type: string
        columnWidths:
          description: map of column names to widths
          type: object
          additionalProperties:
            type: integer
            format: int32
        type:
          description: type of view
          type: string
          enum:
            - ALL_CHANGES_GROUPED
        updateId:
          description: update id
          type: string
        updateAt:
          description: update at
          type: integer
          format: int64
    StockPrice:
      type: object
      required:
        - date
        - id
        - price
        - stock
        - type
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: org id that this stock price derives from
          type: string
          example: 588f7ee98f138b19220041a7
        stock:
          description: ticker symbol of this stock
          type: string
          example: GOOG
        date:
          description: date
          type: string
          format: date
        price:
          description: price per share
          type: number
        type:
          description: type of valuation
          type: string
          enum:
            - COMMON_FMV
            - FUNDRAISE
            - GRANT
            - PUBLIC
        total:
          description: total shares outstanding
          type: integer
          format: int64
        updateAt:
          description: updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: updated by person
          type: string
    Table:
      type: object
      required:
        - createAt
        - createId
        - effectiveDated
        - id
        - label
        - name
        - rowCount
        - sensitive
        - shareAccess
        - updateAt
        - updateId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent org id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: name of table
          type: string
          example: budget-data
        label:
          description: human readable label for the table
          type: string
          example: Budget Data
        labelColumnId:
          description: if set, use this column id as the label when referencing rows
          type: string
        effectiveDated:
          description: >-
            whether or not the table is time tracked with effective dates
            (allows time travel or not). If false, then the values set in the
            table will be the same across all dates.
          type: boolean
        sensitive:
          description: >-
            base sensitivity of this table and entities in it -- should be
            either ORG or HIGH
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: users who are specifically granted permission to this table
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        rowCount:
          description: number of rows in the table
          type: integer
          format: int64
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    Task:
      type: object
      required:
        - entityId
        - id
        - orgId
        - status
        - type
        - userId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        userId:
          description: user who is responsible for the task
          type: string
          example: 588f7ee98f138b19220041a7
        assessmentId:
          description: parent assessment id that this task belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        parentEntityId:
          description: >-
            parent entity id that this task belongs to, should be used with
            entityId
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: type of task
          type: string
          enum:
            - FORM_SUBMIT
            - CHANGE_APPROVE
            - TIMEOFF_APPROVE
            - SCENARIO_CHANGES_APPROVE
            - SCENARIO_CHANGES_CREATE
            - ORG_IMPORT
            - COMP_REVIEW_APPROVAL_SUBMIT
            - SCENARIO_APPROVAL_SUBMIT
            - APPROVAL_CHAIN_UPDATE_FALLBACK_APPROVER
            - ACTION
        entityId:
          description: >-
            the primary entity being referenced by the task - for example for a
            FORM_SUBMIT, this will be the form
          type: string
        targetId:
          description: >-
            the optional target entity being referenced by the task - for
            example for a FORM_SUBMIT, this will be the person
          type: string
        status:
          description: status of this task
          type: string
          enum:
            - PENDING
            - DONE
            - EXPIRED
            - SKIPPED
        doneAt:
          description: timestamp that the task was done, if it was done
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        message:
          description: The message attached to this task
          type: string
          example: this is the best task ever
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            task
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        path:
          description: the optional path of this task (only applies to Type == ORG_IMPORT)
          type: string
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        taskConfigId:
          description: id of the TaskConfig
          type: string
          example: 588f7ee98f138b19220041a7
        slug:
          description: slug used to reference tasks in events
          type: string
          example: onboardingForm
        dueAt:
          description: due date for the task
          type: string
        pastDueAction:
          description: what action to take when the task is past its due date
          type: string
          example: NONE
          enum:
            - NONE
            - SET_EXPIRED
        isSkippable:
          description: check for if the task can be skipped
          type: boolean
    TaskConfig:
      type: object
      required:
        - entityId
        - id
        - orgId
        - pastDueAction
        - slug
        - type
      properties:
        description:
          description: >-
            description for all tasks associated with the config that should be
            used in notifications
          type: string
        id:
          description: unique id of task config
          type: string
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        assessmentId:
          description: parent assessment id that this task config belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        parentEntityId:
          description: >-
            parent entity id that this task config belongs to, should be used
            with entityId
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: the primary entity being referenced by the task config
          type: string
          example: 588f7ee98f138b19220041a7
        slug:
          description: >-
            System generated identifying name so that actions can be triggered
            as a result of task completion
          type: string
        type:
          description: type of task generated by the task config
          type: string
          enum:
            - FORM_SUBMIT
            - CHANGE_APPROVE
            - TIMEOFF_APPROVE
            - SCENARIO_CHANGES_APPROVE
            - SCENARIO_CHANGES_CREATE
            - ORG_IMPORT
            - COMP_REVIEW_APPROVAL_SUBMIT
            - SCENARIO_APPROVAL_SUBMIT
            - APPROVAL_CHAIN_UPDATE_FALLBACK_APPROVER
            - ACTION
        dueDate:
          $ref: '#/components/schemas/DueDate'
        pastDueAction:
          description: sets pastDueAction on the task when it's generated
          type: string
          enum:
            - NONE
            - SET_EXPIRED
        isSkippable:
          description: sets isSkippable on the task
          type: boolean
        label:
          description: >-
            human-readable label that should be used for all tasks associated
            with the config as the task name
          type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    TimeOffEntity:
      type: object
      required:
        - endDate
        - id
        - orgId
        - personId
        - startDate
      properties:
        id:
          description: globally unique id of time off
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: org that the time off belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        personId:
          description: person taking the time off
          type: string
          example: 588f7ee98f138b19220041a7
        externalId:
          description: external identifier, if time off synced from external system
          type: string
          example: 588f7ee98f138b19220041a7
        startDate:
          description: start date of time off, inclusive
          type: string
          format: date
        endDate:
          description: end date of time off, inclusive
          type: string
          format: date
        days:
          description: number of days used
          type: number
        hours:
          description: number of hours used
          type: number
        typeDescription:
          description: type of time off
          type: string
        note:
          description: notes on the time off
          type: string
        approval:
          description: approval status of the time off
          type: string
          enum:
            - APPROVED
            - PENDING
            - CANCELLED
            - REJECTED
            - SUPERSEDED
        approvalAt:
          description: timestamp of approval
          type: string
          example: '2017-01-24T13:57:52Z'
        approvalUserId:
          description: >-
            user who either is the next one requesting approval, or the user who
            did the final approval or rejection
          type: string
          example: 588f7ee98f138b19220041a7
        requestAt:
          description: requested at timestamp -- often the same as createAt
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateAt:
          description: updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    BundleInstall:
      type: object
      required:
        - entities
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/BundleInstallEntity'
    BundleInstallEntity:
      type: object
      required:
        - entityId
        - entityType
        - originalId
      properties:
        entityType:
          type: string
          enum:
            - ACTION
            - CATEGORY
            - FIELD
            - FORM
            - GROUP
            - PROFILE_TAB
            - QUESTION
            - REPORT
            - REPORT_CHART
            - TASK_CONFIG
            - TEMPLATE
            - CONTENT
        entityId:
          type: string
        originalId:
          type: string
    User:
      type: object
      required:
        - id
        - name
      properties:
        title:
          description: job title, if available
          type: string
          example: CEO
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        appId:
          description: if the user is an app user, the id of the app
          type: string
        name:
          $ref: '#/components/schemas/Name'
        email:
          description: email address of user
          type: string
          example: bob@example.com
        password:
          description: password of user (encrypted)
          type: string
        orgs:
          description: list of member orgs with permission levels
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OrgAccess'
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        status:
          description: current status of user
          type: string
          enum:
            - SUPERUSER
            - NORMAL
            - INACTIVE
            - UNINSTALLED
        type:
          description: type of user
          type: string
          enum:
            - USER
            - APP
        options:
          description: >-
            for apps, options (specific options are specific to the particular
            app); for users, user-set preferences
          type: object
        internalOptions:
          description: internal (ChartHop controlled) options
          type: object
        bundleInstall:
          $ref: '#/components/schemas/BundleInstall'
        secrets:
          description: >-
            write-only secrets; the content of these secrets are not retrievable
            via the external-facing API
          type: object
        activeAt:
          description: last activity timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        loginAt:
          description: last login timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        loginFailCount:
          description: number of consecutive failed logins
          type: integer
          format: int32
          example: 3
        remoteIp:
          description: last IP address used
          type: string
          example: 127.0.0.1
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        verifyAt:
          description: email verified timestamp, if the email has been verified
          type: string
          example: '2017-01-24T13:57:52Z'
        mfas:
          description: list of registered 2FA registered credentials
          type: array
          items:
            $ref: '#/components/schemas/WebRegisteredCredential'
        emailSettings:
          description: Email settings for the user
          type: array
          items:
            $ref: '#/components/schemas/UserEmailSetting'
    UserEmailSetting:
      type: object
      required:
        - category
        - subscribed
      properties:
        category:
          description: Category of emails
          type: string
          example: ADMINISTRATIVE
          enum:
            - ADMINISTRATIVE
            - BILLING
            - DATA_IMPORT_AND_SYNC_STATUS
            - TRIAL_REMINDERS
        subscribed:
          description: Is user subscribed to the category of emails
          type: boolean
    WebRegisteredCredential:
      type: object
      required:
        - createdAt
        - credentialId
        - publicKeyBase64
        - signatureCount
        - userHandleBase64
      properties:
        credentialId:
          description: Credential id
          type: string
        publicKeyBase64:
          description: The public key we're saving
          type: string
        userHandleBase64:
          description: The user handle - username
          type: string
        signatureCount:
          description: This is used to protect against duplicated key attacks
          type: integer
          format: int64
        createdAt:
          description: When was this created
          type: integer
          format: int64
    Job:
      type: object
      required:
        - fields
        - groupAssignments
        - groupIds
        - jobId
        - orgId
        - title
      properties:
        title:
          description: job title
          type: string
          example: Senior Engineer
        jobId:
          description: globally unique job id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        comp:
          $ref: '#/components/schemas/Comp'
        sensitive:
          description: view sensitive of the job while open
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        relationships:
          description: relationship to other jobs
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/JobRelationship'
        managerIds:
          description: list of managers, from immediate manager upwards
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        groupIds:
          description: groups that this job is a member of
          type: array
          items:
            type: string
        groupAssignments:
          description: tracked group assignments that this job is a member or lead of
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupAssignment'
        placement:
          description: guidance on placement
          type: string
          enum:
            - NORMAL
            - ASSISTANT
        employment:
          description: employment status
          type: string
          enum:
            - FULL
            - PART
            - TEMP
            - CONTRACT
            - INTERN
            - EXPAT
        fields:
          description: fields containing custom data
          type: object
          additionalProperties:
            type: object
        startDate:
          description: >-
            for empty jobs, expected start date - for filled jobs, confirmed
            start date
          type: string
          format: date
        startDatePlanned:
          description: >-
            expected start date whether job is open or has been filled - doesn't
            change when job is filled
          type: string
          format: date
        personStartDate:
          description: >-
            if personId is present, the first day of that person in the org
            after the latest departure (if any)
          type: string
          format: date
        personEndDate:
          description: >-
            if personId is present and the person is departing, the last day of
            that person in the org
          type: string
          format: date
        personJobStartDate:
          description: if personId is present, the first day of that person in the job
          type: string
          format: date
        personJobEndDate:
          description: >-
            if personId is present and the person is departing or moving out,
            the last day of that person in the job
          type: string
          format: date
        personId:
          description: >-
            the person holding this job -- either currently in the job, or
            upcoming announced hire
          type: string
          example: 588f7ee98f138b19220041a7
        upcoming:
          description: >-
            if a HIRE, MOVE, or DEPART are upcoming, the details on those
            changes - should only include id, type, date, announceDate, personId
          type: array
          items:
            $ref: '#/components/schemas/UpcomingChange'
        scenarioId:
          description: >-
            scenario that the job was created in (null if job is on primary
            timeline)
          type: string
        backfillPersonId:
          description: >-
            the person who most recently held the job, who this represents a
            backfill for
          type: string
          example: 588f7ee98f138b19220041a7
    Deviation:
      type: object
      properties:
        min:
          type: object
        max:
          type: object
    GuidelineCalculation:
      type: object
      required:
        - appliedField
        - compReviewId
        - deviation
        - fields
        - flagMode
        - guidelineId
        - guidelineLabel
        - isDeviated
        - jobId
      properties:
        guidelineId:
          type: string
        jobId:
          type: string
        compReviewId:
          type: string
        budgetPoolId:
          type: string
        guidelineLabel:
          type: string
        min:
          type: object
        max:
          type: object
        target:
          type: object
        appliedField:
          type: string
        flagMode:
          type: string
          enum:
            - DEVIATION_THRESHOLD
            - NONE
        flagDeviationThreshold:
          type: number
        isDeviated:
          type: boolean
        deviation:
          $ref: '#/components/schemas/Deviation'
        fields:
          type: object
          additionalProperties:
            type: object
    UpdateAction:
      type: object
      properties:
        tags:
          description: tags to organize the purpose of the action
          type: array
          items:
            type: string
        description:
          description: description of the action
          type: string
        event:
          description: event pattern to match on, such as change.create.*
          type: string
        cronSchedule:
          description: cron schedule to run on, in crontab format
          type: string
          example: 5 4 * * *
        filter:
          description: only run when matching a particular filter
          type: string
        steps:
          description: list of steps to run when matching the event, schedule, and filter
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        status:
          description: status of the action
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        sensitive:
          description: whether to run with access to sensitive events or not
          type: boolean
        category:
          description: organizational category for HRIS-themed actions
          type: string
          enum:
            - ONBOARDING
            - OFFBOARDING
    AiModelConfig:
      type: object
      required:
        - maxStringLength
        - maxTokens
        - modelId
        - promptAfter
        - promptBefore
        - temperature
        - topP
      properties:
        modelId:
          type: string
        promptBefore:
          type: string
        promptAfter:
          type: string
        maxTokens:
          type: integer
          format: int32
        temperature:
          type: number
          format: double
        topP:
          type: integer
          format: int32
        stopSequences:
          type: string
        maxStringLength:
          type: integer
          format: int32
    UpdateAiConfig:
      type: object
      properties:
        formResponseSummaryConfig:
          $ref: '#/components/schemas/AiModelConfig'
        formResponseCombineSummaryConfig:
          $ref: '#/components/schemas/AiModelConfig'
        reportResultSummaryConfig:
          $ref: '#/components/schemas/AiModelConfig'
    UpdateApp:
      type: object
      properties:
        tags:
          description: tags/categories the app belongs to
          type: array
          items:
            type: string
        summary:
          description: short summary of app
          type: string
          example: The Slack app does X Y and Z
        title:
          description: human-readable name of app
          type: string
          example: Slack
        description:
          description: full description of app, in Markdown
          type: string
          example: The Slack app does X Y and Z
        name:
          description: short unique name
          type: string
          example: slack-import
          pattern: ^[a-z0-9-]+$
        redirectUris:
          description: >-
            list of acceptable Oauth2 redirect URIs, if Oauth2 is supported for
            this app
          type: array
          items:
            type: string
            format: uri
        allowedIps:
          description: >-
            allowlist of IPs or IP ranges that are allowed to make API calls on
            behalf of this app
          type: array
          items:
            type: string
        configFields:
          description: list of configuration fields
          type: array
          items:
            $ref: '#/components/schemas/AppConfigField'
        setupInstructions:
          description: setup instructions, in Markdown
          type: string
          example: To install the Slack, use your API key from X and Y
        cronOrder:
          description: execution order of the cron (lower numbers execute earlier)
          type: integer
          format: int32
        cronSchedule:
          description: cron schedule
          type: string
          enum:
            - DAILY
            - WEEKLY
        cronDayOfWeek:
          description: Day of week if cronSchedule is WEEKLY
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        imagePath:
          description: >-
            path to avatar profile image, should be approximately square
            dimensions and show logo
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        wordmarkImagePath:
          description: >-
            path to larger profile logo image containing brand wordmark, does
            not need to be square dimensions
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        poweredByImagePath:
          description: >-
            path to powered by image, should be approximately square dimensions
            and show logo
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        status:
          description: current status of app
          type: string
          enum:
            - GLOBAL
            - ACTIVE
            - INACTIVE
            - DEVELOPMENT
        minAccess:
          description: minimum access level requested by app
          type: string
          enum:
            - NONE
            - VIEW
            - LIMITED
            - MEMBER_LIMITED_COMP
            - MEMBER
            - CUSTOM
            - TECH_OWNER
            - TIMEOFF
            - CONTACT
            - COMP_CASH
            - COMP_EQUITY
            - COMP_ALL
            - RECRUIT_SENSITIVE
            - RECRUIT_PRIMARY
            - SENSITIVE_LIMITED_COMP
            - SENSITIVE
            - PRIMARY
            - PEOPLE_OPS_ADMIN
            - PEOPLE_OPS_ADMIN_NO_COMP_DATA
            - PEOPLE_OPS_ADMIN_NO_SENSITIVE_DATA
            - OWNER
        roleId:
          description: roleId requested by app
          type: string
        eventNotifyUrl:
          description: URL that should be notified on events
          type: string
          format: uri
        payload:
          description: custom payload to send in lieu of regular payload
          type: object
          additionalProperties:
            type: string
        events:
          description: set of events to notify on
          type: array
          uniqueItems: true
          items:
            type: string
        type:
          description: APP, BUNDLE, or INTERNAL
          type: string
          enum:
            - APP
            - BUNDLE
            - INTERNAL
        bundle:
          $ref: '#/components/schemas/Bundle'
        scopes:
          description: access scopes that the app is requesting
          type: array
          items:
            type: string
    UpdateAppConfig:
      type: object
      properties:
        fieldMappers:
          description: list of default field mappers
          type: array
          items:
            $ref: '#/components/schemas/FieldMapper'
        customFieldMappers:
          description: list of custom field mappers by a user
          type: array
          items:
            $ref: '#/components/schemas/FieldMapper'
        customOutboundFieldMappers:
          description: list of custom outbound field mappers
          type: array
          items:
            $ref: '#/components/schemas/OutboundFieldMapper'
        disabledFieldMappers:
          description: list of disabled inbound field mappers by id
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        enabledOutboundFieldMappers:
          description: list of enabled outbound field mappers by id
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        templateMatchers:
          description: template field matchers defined by a user
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        options:
          description: app specific options
          type: object
    UpdateApprovalChain:
      type: object
      properties:
        name:
          description: human-readable name of approval chain
          type: string
          example: Comp Review 06/15/2022
        isPreview:
          description: >-
            isPreview specifies that this is a preview for implementations that
            use it (e.g. Compensation Reviews)
          type: boolean
          example: true
        fallbackApproverJobId:
          description: the jobId of the fallback approver
          type: string
          example: 588f7ee98f138b19220041a7
        fallbackApproverJobError:
          description: most recent error for fallback approver
          type: string
        approvalNotifierUserIds:
          description: ids of any users who should be notified when approval is complete
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    UpdateApprovalChainStage:
      type: object
      properties:
        inclusionExpression:
          description: optional custom expression to determine stage inclusion behavior
          type: string
        inclusionBehavior:
          description: determines whether stage is conditional based on an expression
          type: string
          enum:
            - ONLY_INCLUDE_IF
            - EXCLUDE_IF
        expandExpression:
          description: optional custom expression to determine approval request tree
          type: string
        rejectBehavior:
          description: determines which stage becomes active when a rejection event happens
          type: string
          enum:
            - BACK_TO_BEGINNING
            - PREVIOUS_PHASE
        status:
          description: status of the stage
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        approvalCommentRequired:
          description: requires a comment on an approval event
          type: boolean
        rejectionCommentRequired:
          description: requires a comment on an rejection event
          type: boolean
        order:
          description: order of stage in approval chain
          type: integer
          format: int32
        groups:
          description: list of groups that are involved in this approval stage
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroup'
    UpdateApprovalRequest:
      type: object
      properties:
        stageOverrides:
          description: list of configuration fields
          type: array
          items:
            $ref: '#/components/schemas/ApprovalChainStageOverride'
    UpdateAssessment:
      type: object
      properties:
        label:
          description: human-readable label of assessment
          type: string
          example: Engineering Budget Q2 2019
        slug:
          description: unique slug of assessment
          type: string
          example: engineering-budget-q2-2019
        type:
          description: type of assessment
          type: string
          enum:
            - REVIEW
            - COMP_REVIEW
            - SURVEY
        fields:
          description: assessment fields (description)
          type: object
        shareAccess:
          description: users who have been granted access to this assessment
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        sensitive:
          description: view sensitivity of this assessment
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        color:
          description: color of assessment
          type: string
          pattern: ^#[a-f0-9]{6}$
        startDate:
          description: >-
            Date this assessment begins. In the context of REVIEW goals, the
            date the review cycle begins.
          type: string
          format: date
        endDate:
          description: >-
            Date this assessment ends, or is completed. In the context of REVIEW
            assessment, the date the review cycle ends.
          type: string
          format: date
        status:
          description: status of this assessment - DRAFT, ACTIVE, DONE
          type: string
          enum:
            - DRAFT
            - ACTIVE
            - DONE
        doneAt:
          description: timestamp when the status of this assessment was set to done
          type: string
          example: '2017-01-24T13:57:52Z'
        taskCount:
          description: number of tasks associated with this assessment
          type: integer
          format: int32
          example: 12
        taskDoneCount:
          description: number of tasks associated with this assessment that are done
          type: integer
          format: int32
          example: 3
        peopleIncludedCount:
          description: number of people included in this assessment
          type: integer
          format: int32
          example: 12
        query:
          description: Query for which people/jobs can be included in the review.
          type: string
    UpdateCategory:
      type: object
      properties:
        label:
          description: human-readable label of category
          type: string
          example: Performance
        fieldIds:
          description: set of field ids included in this category
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        nativeFields:
          description: set of native field names included in this category
          type: array
          uniqueItems: true
          items:
            type: string
    UpdateCategorySort:
      type: object
      properties:
        categoryIds:
          description: ordered list of category ids of an org
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    UpdateContent:
      type: object
      properties:
        title:
          description: title of the content page
          type: string
          example: Benefits Policies
        parentContentId:
          description: parent content id in the hierarchy
          type: string
          example: 588f7ee98f138b19220041a7
        path:
          description: >-
            full path to the content, if not set, defaults to an id/slug
            generated URL
          type: string
          example: employee-info/benefits-policies
        blocks:
          description: content blocks
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
        imagePath:
          description: path to the image for the page
          type: string
          example: path/to/image.jpg
          pattern: ^[a-zA-Z0-9._/-]+$
        emoji:
          description: emoji, if an emoji is used to represent the page
          type: string
          example: 💥
        coverImagePath:
          description: path to the cover image for the content page
          type: string
          example: path/to/image.jpg
          pattern: ^[a-zA-Z0-9._/-]+$
        sensitive:
          description: sensitivity level (ORG public, HIGHly sensitive, or PRIVATE)
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: list of users and groups who have the content shared with them
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        status:
          description: current status of the content page
          type: string
          enum:
            - DRAFT
            - ACTIVE
            - ARCHIVED
    UpdateCustomer:
      type: object
      properties:
        name:
          description: name of customer
          type: string
        email:
          description: email address for billing purposes
          type: string
        billAddress:
          $ref: '#/components/schemas/Address'
        industry:
          description: industry that customer is in
          type: string
        source:
          description: source of customer signup
          type: string
          enum:
            - ADP_MARKETPLACE
            - SELF_SERVE
            - SELF_SERVE_TEST
            - SEQUOIA_ONE
            - CONNECT
        status:
          description: current status
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - TRIAL
            - CHURN
            - PAYMENT_ERROR
        salesforceAccountId:
          description: salesforce account id
          type: string
          pattern: ^[a-zA-Z0-9]{15}|[a-zA-Z0-9]{18}$
        products:
          description: products that this customer has purchased
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        startDate:
          description: initial date of billing
          type: string
          format: date
        endDate:
          description: >-
            end of service date for churning customers -- on or after this date,
            service should be disabled
          type: string
          format: date
        nextInvoiceDate:
          description: date of next invoice
          type: string
          format: date
        primaryHeadCountFilter:
          description: primary headcount filter - used for billing purposes
          type: string
        secondaryHeadCountFilter:
          description: secondary headcount filter - used for billing purposes
          type: string
        arr:
          description: current ARR of the customer based on most recent invoice
          type: number
        projectedArr:
          description: >-
            projected ARR of the customer for upcoming invoice, based on plan
            and headcount
          type: number
        trialStartDate:
          description: date this customer begins their trial period
          type: string
          format: date
        trialEndDate:
          description: date this customer ends their trial period
          type: string
          format: date
        stripeSubscriptionSync:
          description: Stripe subscription settings
          type: string
          enum:
            - SYNC
            - DELETE
    UpdateDataView:
      type: object
      properties:
        name:
          description: data view name
          type: string
        columns:
          description: comma delimited list of columns
          type: string
          example: image,name,title
        type:
          description: type of data view
          type: string
          enum:
            - ANY
            - DATA_SHEET
            - ORG_CHART
            - MAP
        entityType:
          description: entity type being viewed
          type: string
        columnWidths:
          description: map of column names to widths in pixels
          type: object
          additionalProperties:
            type: number
            format: double
        date:
          description: >-
            date of view, in either relative (-7d) or exact (YYYY-MM-DD) format;
            if not present, defaults to today
          type: string
        startDate:
          description: >-
            start date of view, if displaying a date range, in either relative
            (-7d) or exact (YYYY-MM-DD) format; if not present, defaults to
            today
          type: string
        endDate:
          description: >-
            end date of view, if displaying a date range, in either relative
            (-7d) or exact (YYYY-MM-DD) format; if not present, defaults to
            today
          type: string
        filter:
          description: filter query
          type: string
          example: managerCount:1
        sort:
          description: comma delimited list of columns by which to sort
          type: string
          example: name,title
        groupBy:
          description: column to group duplicates by
          type: string
          example: title
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            data view
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        sensitive:
          description: sensitivity level of data view
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
    UpdateEmailTemplate:
      type: object
      properties:
        name:
          description: name of the email template
          type: string
          example: self_serve_welcome
        category:
          description: email category
          type: string
          enum:
            - ADMINISTRATIVE
            - BILLING
            - DATA_IMPORT_AND_SYNC_STATUS
            - TRIAL_REMINDERS
    UpdateExchangeRate:
      type: object
      properties:
        date:
          description: date
          type: string
          format: date
        rates:
          description: >-
            exchange rates, per currency - the multiplier to convert the base
            currency into the foreign currency
          type: object
          additionalProperties:
            type: number
    UpdateField:
      type: object
      properties:
        description:
          description: description of field
          type: string
          example: >-
            This field tracks the most recent performance rating for an
            individual.
        name:
          description: short field name
          type: string
          example: summary
          pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
        label:
          description: human-readable full name of field
          type: string
          example: Job Summary
        question:
          description: human-readable question associated with field
          type: string
          example: What do you think of this placeholder question?
        inUse:
          description: >-
            disallow any updates to this Field (except for field.question
            string)
          type: boolean
        expr:
          description: calculated expression
          type: string
          example: (base + variable) / 12
        exprType:
          description: the expected type of the evaluated expression
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        type:
          description: type of field
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the field (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        defaultValue:
          description: default value if field is not set
          type: object
        options:
          description: validation options
          type: object
        sensitive:
          description: sensitivity level of data
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        hideExpr:
          description: hide expression-derived values from non-sensitive users
          type: boolean
        expireDays:
          description: number of days after which the data becomes invalid
          type: integer
          format: int32
          minimum: 1
        status:
          description: the status of the field
          type: string
          enum:
            - ACTIVE
            - HIDDEN
        tableRef:
          $ref: '#/components/schemas/TableRef'
        isUnique:
          description: >-
            indicates that this field value is unique in conjunction with
            entityType PERSON or JOB
          type: boolean
        isRequired:
          description: indicates that this field value is required
          type: boolean
        isEffectiveDated:
          description: indicates that this field value is effective-dated
          type: boolean
        dataFetchTypes:
          description: set of data fetch types
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - BASIC
              - UPDATE
              - CHANGE
              - RELATIONSHIP_MANAGER
              - RELATIONSHIP_ALL
              - TITLE
              - PROMOTION
              - GROUP
              - COMP
              - COMP_HISTORY
              - GRANT
              - TIMEOFF
              - PERSON_JOIN
              - ALL_DATA
        aliases:
          description: set of aliases for this field
          type: array
          uniqueItems: true
          items:
            type: string
        calc:
          description: >-
            unique ID for the function that runs to calculate the value of this
            field. For native fields only
          type: string
          enum:
            - ADDRESS
            - AGE
            - ANNIVERSARY
            - ANNUAL_BASE_MONEY
            - BACKFILL
            - BAND
            - BAND_RANGE
            - BASE
            - BASE_CAL_YEAR_PRORATED
            - BASE_CAL_YTD
            - BASE_COMP
            - BASE_COMP_AMOUNT
            - BASE_COMP_ANNUALIZED
            - BASE_COMP_ANNUALIZED_AS_ORG_CURRENCY
            - BASE_COMP_AS_ORG_CURRENCY
            - BASE_COMP_CHANGES
            - BASE_COMP_CURRENCY
            - BASE_COMP_HOURS_PER_WEEK
            - BASE_COMP_INTERVAL
            - BASE_COMP_LAST_RAISE_DATE
            - BASE_COMP_LAST_RAISE_MONTHS_SINCE
            - BASE_COMP_LAST_RAISE_PAY
            - BASE_COMP_LAST_RAISE_PAY_AS_ORG_CURRENCY
            - BASE_COMP_LAST_RAISE_PERCENT
            - BASE_COMP_LAST_RAISE_TYPE
            - BASE_COMP_PAY
            - BASE_COMP_PAY_AS_ORG_CURRENCY
            - BASE_COMP_WEEKS_PER_YEAR
            - BASE_FISCAL_YEAR_PRORATED
            - BASE_FISCAL_YTD
            - BASE_PRIMARY
            - BASE_RAISE_AMOUNT
            - BASE_RAISE_DATE
            - BASE_RAISE_PERCENT
            - BIRTH_DATE
            - BIRTHDAY
            - BONUS_TARGET
            - BUDGET_COST
            - BUSINESS_UNITS
            - CAL_YEAR_VEST_SHARES
            - CAL_YEAR_VEST_VALUE
            - CAN_APPROVE_CHANGE
            - CAN_EDIT_JOB
            - CASH_COMP
            - CASH_COMP_LOCAL
            - CHANGE
            - CHANGE_ID
            - COMMISSION_TARGET
            - COMP
            - COMP_CHANGE_PERCENT
            - COMPA_RATIO_MID
            - COMPA_RATIO_TARGET
            - CONTACT
            - COST
            - CREATE_DATE
            - CURRENCY
            - DATA
            - DATE
            - DATE_OF
            - DAYS_ACTIVE
            - DAYS_OFF
            - DAYS_OFF_TAKEN
            - DAYS_OFF_UPCOMING
            - DAYS_OPEN
            - DB
            - DEPART
            - DEPARTMENT
            - DEPARTMENT_FUNC
            - DIRECT_JOBS
            - DIRECT_JOB_COUNT
            - DIRECT_PERSON_COUNT
            - EMPLOYMENT
            - END_DATE_JOB
            - END_DATE_ORG
            - ETHNICITY
            - FISCAL_YEAR_COST
            - GENDER
            - GEOIP
            - GEOIP_ADDRESS
            - GRAND_MANAGER
            - GRANT_SHARES
            - GRANT_TYPE
            - GRANT_VALUE
            - GRANTS
            - GROUP_IDS
            - HEADCOUNT
            - HISTORIC_BACKFILL
            - HOUR
            - HOURLY
            - HOURLY_PRIMARY
            - HOURS_PER_WEEK
            - IMAGE
            - INDIRECT
            - INDIRECT_JOBS
            - JOB
            - JOB_ID
            - JOB_CODE
            - JOBCOUNT
            - LAST_GRANT
            - LAST_GRANT_DATE
            - LAST_GRANT_ORIGINAL_VALUE
            - LOCATION
            - MANAGE_JOBS
            - MANAGE_PERSONS
            - MANAGER
            - MANAGER_COUNT
            - MANAGER_FILLED
            - MANAGER_ID
            - MANAGERS
            - MANAGER_PERSON
            - MANAGER_PERSONS
            - ME
            - MERGE_SCENARIO_ID
            - NAME
            - NAME_AUDIO
            - NAME_TITLE
            - NEXT_DAY_OFF
            - NEXT_TIME_OFF
            - NEXT_YEAR_VEST_SHARES
            - NEXT_YEAR_VEST_VALUE
            - NOTE
            - NOOP
            - OPEN
            - ORG
            - PERSON
            - PERSON_ID
            - PLACEMENT
            - PREV_DAY_OFF
            - PREV_TIME_OFF
            - PROMOTION
            - PROMOTION_DATE
            - PROPOSED
            - Q
            - RAISE_AMOUNT
            - RAISE_DATE
            - RAISE_PERCENT
            - RAISE_PROMOTION_DATE
            - REASON
            - REGRET
            - RELATIONSHIPS
            - REMOTE_WORK_ADDRESS
            - SCENARIO
            - SCENARIO_CHANGED
            - SENSITIVE
            - SENSITIVE_FIELDS
            - START_DATE
            - START_DATE_JOB
            - START_DATE_ORG
            - START_DATE_PLANNED
            - STATE
            - STRIKE_PRICE
            - TARGET_HOURS_PER_WEEK
            - TARGET_WEEKS_PER_YEAR
            - TEAM
            - TENURE_JOB
            - TENURE_ORG
            - TIMEZONE_OFFSET
            - TITLE
            - TITLE_DATE
            - TODAY
            - TOTAL_COMP
            - TOTAL_COMP_LOCAL
            - TOTAL_ORG_SHARES
            - TOTAL_SHARES
            - TOTAL_SHARES_VALUE
            - UNDER
            - UNDER_INCLUDING
            - UNDER_JOBS
            - UNVESTED_SHARES
            - UNVESTED_VALUE
            - UPDATE
            - USER_ACTIVE_DAYS
            - USER_CAN_EDIT_COMP_FOR_JOB
            - USER
            - VARIABLE
            - VARIABLE_AMOUNT
            - VARIABLE_INTERVAL
            - VARIABLE_PERCENT
            - VARIABLE_PRIMARY
            - VARIABLE_TARGET
            - VARIABLE_TARGET_AMOUNT
            - VARIABLE_TARGET_ANNUALIZED
            - VARIABLE_TARGET_CURRENCY
            - VARIABLE_TARGET_PERCENT
            - VARIABLE_TARGET_TYPE
            - VARIABLE_TARGETS
            - VARIABLE_TARGETS_LAST_RAISE_DATE
            - VARIABLE_TARGETS_LAST_RAISE_MONTHS_SINCE
            - VARIABLE_TARGETS_LAST_RAISE_PAY
            - VARIABLE_TARGETS_LAST_RAISE_PERCENT
            - VARIABLE_TYPE
            - VESTED_DATE
            - VESTED_SHARES
            - VESTED_VALUE
            - WEEKS_PER_YEAR
            - WORK_ADDRESS
        categoryId:
          description: ID of the category to which this field belongs, if any
          type: string
        classification:
          description: >-
            indicates how this field is calculated (whether it's stored in the
            DB, evaluated through the expression service, or compound)
          type: string
          enum:
            - COMPOUND
        places:
          description: number of decimal places for money values
          type: integer
          format: int32
    UpdateForm:
      type: object
      properties:
        description:
          description: description of form
          type: string
          example: >-
            The Engineering department, where engineers develop new technology
            and products.
        label:
          description: human-readable full name of form
          type: string
          example: 'Health Index: Q2'
        fields:
          description: ordered list of fields being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormField'
        blocks:
          description: ordered list of blocks being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormBlock'
        status:
          description: status of the form
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - ARCHIVED
        type:
          description: type of the form
          type: string
          enum:
            - BUILT_IN
            - CUSTOM
        targetType:
          description: >-
            target type that the form can be filled out about (null defaults to
            PERSON for backwards compatibility)
          type: string
          enum:
            - NONE
            - PERSON
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        submitFilter:
          description: >-
            filter that controls which respondents can submit this form. The
            form:submit permission, if present, overrides this filter
          type: string
        responseReadFilter:
          description: >-
            filter that controls who can read the form responses. The
            formResponse:read permission, if present, overrides this filter
          type: string
        useFieldAccess:
          description: >-
            if this option is on, then form response answers will use field
            permissions to determine access to those responses
          type: boolean
        approval:
          description: approval needed, if any approval is required
          type: string
          enum:
            - MANAGER
            - GRAND_MANAGER
        authorSensitive:
          description: >-
            view sensitivity for the author of this form - the level of view
            access required to view the createId and updateId fields. If null,
            the author's identity is always visible as long as the viewer can
            read the form response. If set to PRIVATE, the author's identity is
            stored in ChartHop, but protected such that even users with
            sensitive access cannot access the data. If set to ANONYMOUS, the
            author's identity is not stored in ChartHop at all.
          type: string
          enum:
            - ANONYMOUS
            - PRIVATE
            - HIGH
            - MANAGER
        options:
          description: options, such as notification settings
          type: object
    UpdateFormResponse:
      type: object
      properties:
        shareAccess:
          description: >-
            list of share access, if the form response has been shared with
            anyone
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
    UpdateGroup:
      type: object
      properties:
        name:
          description: unique name of group
          type: string
          example: Engineering
        slug:
          description: unique slug of group
          type: string
          example: engineering
        code:
          description: external code identifier of the group
          type: string
          example: D123
        aliases:
          description: aliases for group
          type: array
          uniqueItems: true
          items:
            type: string
        leadJobIds:
          description: >-
            a list of group leaders, or null if the leader of the group should
            be automatically derived from the org chart
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        fields:
          description: group fields (currently only description)
          type: object
        address:
          $ref: '#/components/schemas/Address'
        level:
          description: level of the group, for BAND type only
          type: integer
          format: int32
        func:
          description: Job function category of the group, for DEPARTMENT type only
          type: string
          enum:
            - BD
            - CS
            - DESIGN
            - ENGINEERING
            - EXECUTIVE
            - FINANCE
            - GENERAL
            - IT
            - LEGAL
            - MARKETING
            - OPERATIONS
            - PEOPLE
            - PRODUCT
            - RECRUITING
            - SALES
            - SECURITY
            - SUPPORT
        locationType:
          description: Type of the location, for LOCATION type only
          type: string
          enum:
            - OFFICE
            - REMOTE
        parentGroupId:
          description: parent group id
          type: string
        timezone:
          description: timezone of the group, for LOCATION type only
          type: string
          example: America/New_York
        compMin:
          $ref: '#/components/schemas/Money'
        compMax:
          $ref: '#/components/schemas/Money'
        imagePath:
          description: path to profile image
          type: string
          pattern: ^[a-zA-Z0-9._/-]*$
        color:
          description: color of group
          type: string
          pattern: ^#[a-f0-9]{6}$
    UpdateGroupType:
      type: object
      properties:
        name:
          description: unique name of group
          type: string
          example: Engineering
        slug:
          description: unique slug of group
          type: string
          example: engineering
        requirePositions:
          description: whether the group requires members to be positions
          type: boolean
    UpdateGroupTypeConfig:
      type: object
      properties:
        fieldIds:
          description: list of fields to be entered on groups of this type
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    UpdateGuideline:
      type: object
      properties:
        label:
          description: guideline name
          type: string
          example: Merit Guideline
        budgetPoolId:
          description: the budget pool the guideline is allocated from
          type: string
          example: 588f7ee98f138b19220041a7
        participantsExpr:
          description: CQL filter to determine which employees the guideline applies to
          type: string
          example: is:person and tenure>=12
        appliedField:
          description: the field the guideline applies to
          type: string
          example: '''base'' or ''grantShares'''
        sourceField:
          description: the field the guideline is calculated from
          type: string
          example: '''base'' or ''grantShares'''
        calculationType:
          description: >-
            how does the guideline calculate the target value? e.g. is there a
            range (min/max) or only a target
          type: string
          example: TARGET
          enum:
            - RANGE
            - TARGET
        flagMode:
          description: how does the guideline indicate deviations from the target amount
          type: string
          example: NONE
          enum:
            - DEVIATION_THRESHOLD
            - NONE
        flagDeviationThreshold:
          description: >-
            the threshold (percent) against which deviations from the guideline
            are flagged
          type: number
          example: 0.75
        enablePopulateValue:
          description: >-
            whether or not the target values from the guidelines are
            pre-populated in the given columns
          type: boolean
          example: false
        basisType:
          description: >-
            how an individual guideline value itself is calculated, e.g.
            percentage of the appliedField, fixed amount, or custom CQL
          type: string
          example: CUSTOM
          enum:
            - CUSTOM
            - FIXED
            - CUSTOM_FIXED
            - PERCENTAGE
            - CUSTOM_PERCENTAGE
        basisExpr:
          description: >-
            if basisType.CUSTOM, the custom CQL expression used to generate the
            guideline value
          type: string
          example: 'tenure>12 ? (base * 0.04) : (base * 0.02)'
        basisFieldMatrix:
          $ref: '#/components/schemas/BasisFieldMatrix'
        fixedAmountRange:
          $ref: '#/components/schemas/MoneyRange'
        fixedValueRange:
          $ref: '#/components/schemas/ValueRange'
    UpdateJobLevel:
      type: object
      properties:
        label:
          description: human-readable name of job level
          type: string
          example: Associate
        code:
          description: job level code
          type: string
          example: BF01
        benchmarkType:
          $ref: '#/components/schemas/EnumValue'
        benchmarkLevel:
          $ref: '#/components/schemas/EnumValue'
    UpdateLegalDoc:
      type: object
      properties:
        name:
          description: human-readable full name of form
          type: string
          example: ChartHop Service Agreement
        content:
          description: legal doc content
          type: string
        date:
          description: content by date
          type: string
          format: date
    UpdateMessage:
      type: object
      properties:
        readAt:
          description: read timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        seenAt:
          description: seen timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    UpdateMultiplier:
      type: object
      properties:
        label:
          description: human-readable name of multiplier
          type: string
          example: Non-technical
        code:
          type: string
        value:
          description: amount to multiply the initial value by
          type: number
          example: 0.75
        expr:
          description: calculated expression to match against the job
          type: string
          example: department!="Engineering"
        category:
          description: tag to group multipliers together by
          type: string
          example: Location
    UpdateOrg:
      type: object
      properties:
        customerId:
          description: customer for billing processing
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: name of organization
          type: string
          example: Acme Corp
        slug:
          description: unique slug of organization
          type: string
          example: acme-corp
        type:
          description: type of organization
          type: string
          example: PRIVATE
          enum:
            - PRIVATE
            - PUBLIC
            - EDU
            - GOV
            - NONPROFIT
            - DEMO
            - TEST
        industry:
          description: industry
          type: string
          example: Software and Internet
        estEmployees:
          description: approximate number of employees
          type: integer
          format: int32
        estRevenue:
          description: approximate amount of revenue
          type: integer
          format: int32
        foundedYear:
          description: year of founding
          type: integer
          format: int32
          example: 1998
        address:
          $ref: '#/components/schemas/Address'
        phone:
          description: company phone number in E.164 format
          type: string
          pattern: ^\+?[1-9]\d{1,14}$
        email:
          description: primary contact email
          type: string
          example: bob@example.com
        url:
          description: website URL
          type: string
          format: uri
        domains:
          description: domains used by this org
          type: array
          items:
            $ref: '#/components/schemas/OrgDomain'
        status:
          description: current status of organization
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DISABLED
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        currencies:
          description: >-
            types of currencies in use, with the first currency the primary
            currency
          type: array
          items:
            type: string
          maxItems: 20
          minItems: 1
        stock:
          description: stock symbol
          type: string
          example: GOOG
        timezone:
          description: timezone in use
          type: string
          example: America/New_York
        appTime:
          description: >-
            approximate time of day for daily app syncs to run (defaults to 9am
            Eastern time)
          type: string
          example: '09:00'
        zone:
          description: infrastructure zone
          type: integer
          format: int32
          example: 2
        fiscalStart:
          description: >-
            number of months into the calendar year that the fiscal year starts
            (1 = February, 2 = March)
          type: integer
          format: int32
        startDate:
          description: start date of history
          type: string
        sensitiveFields:
          description: map of sensitive field defaults
          type: object
        options:
          $ref: '#/components/schemas/OrgOptions'
        internalOptions:
          description: internal (ChartHop controlled) options
          type: object
        onboardSteps:
          description: list of onboard steps that this Org has completed (or skipped)
          type: array
          items:
            $ref: '#/components/schemas/OnboardStepResult'
        onboarding:
          description: >-
            current onboarding status of an organization, allowing clearing of
            org
          type: boolean
        selfServeImporting:
          description: >-
            completion status of initial import for orgs signed up via self
            serve
          type: boolean
        headCount:
          description: number of total headcount currently in the org
          type: integer
          format: int32
    UpdateOrgConfig:
      type: object
      properties:
        hiddenFieldIds:
          description: set of hidden field ids of an org
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        builtinCategoryMap:
          description: set of maps of the custom fields that belongs to a built-in category
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BuiltInCategoryMap'
        builtinFieldConfig:
          description: Org configuration for built-in fields
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BuiltInFieldConfig'
        compensationBandsConfig:
          $ref: '#/components/schemas/CompensationBandsConfig'
        smartCurrencyOptions:
          description: >-
            Options for where to source a currency to use when currency is
            unknown. order specific
          type: array
          example: PERSON_HOME_ADDRESS_COUNTRY
          items:
            $ref: '#/components/schemas/SmartCurrencyOption'
        smartCurrencyDefault:
          description: >-
            The default currency to use when currency is unknown and there are
            no options set in smartCurrencyOptions
          type: string
          example: USD
        requiredJobFields:
          description: Org configuration for required job fields
          type: array
          uniqueItems: true
          items:
            type: string
        scenarioApprovalChains:
          description: Configures which approval chains to use with specific scenario types
          type: object
          additionalProperties:
            type: string
            example: 588f7ee98f138b19220041a7
        isOpenJobRoleApprovalEnabled:
          description: Whether to show open job approval on Open Job Profile page
          type: boolean
        grantConfiguration:
          description: Org Grant Configuration
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GrantAlias'
    UpdatePerson:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        contacts:
          description: contacts (emails, phones, external ids)
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
        remoteWorkAddress:
          $ref: '#/components/schemas/Address'
        birthDate:
          description: birthdate
          type: string
          example: '1980-05-12'
        startDate:
          description: start date of most recent hire
          type: string
          example: '1980-05-12'
        endDate:
          description: end date of most recent hire
          type: string
          example: '1980-05-12'
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        nameAudioPath:
          description: path to pronunciation of the person's name
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        gender:
          description: self-reported gender
          type: string
          enum:
            - MALE
            - FEMALE
            - NONBINARY
            - PREFER_NOT
        ethnicity:
          description: self-reported ethnicity
          type: string
          enum:
            - HISPANIC
            - WHITE
            - BLACK
            - PACIFIC
            - ASIAN
            - NATIVE
            - TWO
            - PREFER_NOT
        fields:
          description: fields containing custom data
          type: object
          additionalProperties:
            type: object
        sensitiveFields:
          description: personal sensitivity preferences around specific fields
          type: object
        inviteOptions:
          $ref: '#/components/schemas/OrgAccess'
        state:
          description: current status within the organization
          type: string
          enum:
            - PRIMARY
            - SCENARIO
            - PENDING
            - INACTIVE
    PolicyRule:
      type: object
      properties:
        allow:
          description: allow rules
          type: array
          example: '[''job:read'', ''person.read'']'
          items:
            type: string
        deny:
          description: deny rules
          type: array
          example: '[''job:read'', ''person.read'']'
          items:
            type: string
        categories:
          description: categories the rule is limited to
          type: array
          example: '[''Compensation'', ''Stock Grants'']'
          items:
            type: string
        fields:
          description: fields the rule is limited to
          type: array
          example: '[''base'']'
          items:
            type: string
        departmentIds:
          description: departments the rule is limited to
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        filter:
          description: custom filter the rule is limited to
          type: string
          example: department:engineering and under:me
        directions:
          description: directions that the rule applies to -- either self or under
          type: array
          items:
            type: string
        types:
          description: types that the rule applies to
          type: array
          items:
            type: string
        visibleSensitive:
          description: >-
            if specified, controls visibility of sensitive entities -- for
            example, ['Manager Shared', 'Manager Only']
          type: array
          items:
            type: string
        fieldsSensitive:
          description: >-
            if specified, controls applicability of fields by sensitivity -- for
            example, ['Manager Shared', 'Manager Only']
          type: array
          items:
            type: string
    UpdatePolicy:
      type: object
      properties:
        description:
          description: description of policy
          type: string
          example: This policy allows compensation to be viewed.
        label:
          description: human-readable full name of policy
          type: string
          example: View Compensation
        rules:
          description: the rules that define the policy
          type: array
          items:
            $ref: '#/components/schemas/PolicyRule'
    UpdateProcess:
      type: object
      properties:
        status:
          description: current status of process
          type: string
          enum:
            - PENDING
            - RUNNING
            - DONE
            - ERROR
        filePath:
          description: data file path
          type: string
        message:
          description: status or error message
          type: string
        progress:
          description: percent progress so far
          type: number
          format: double
        internalError:
          description: internal-only error message
          type: string
        options:
          description: options passed to the process
          type: object
        results:
          description: results summary for the process
          type: object
          additionalProperties:
            type: object
        logDataList:
          description: list of log data that occurred during running of this process
          type: array
          items:
            $ref: '#/components/schemas/LogData'
        state:
          description: process-specific state data
          type: object
        appId:
          description: app id of the process
          type: string
          example: 588f7ee98f138b19220041a7
    UpdateProduct:
      type: object
      properties:
        name:
          description: name of product
          type: string
          example: Compensation Reviews
        sku:
          description: unique sku of product
          type: string
          example: compensation-reviews
        salesforceProductId:
          description: corresponding product id in salesforce
          type: string
          example: 01t4T000000RpgKQAS
        stripeProductId:
          description: corresponding product id in stripe
          type: string
          example: prod_12345ABC
        features:
          description: set of features this product has access to
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - ATS_SYNC
              - COMPENSATION_REVIEW
              - CUSTOM_FIELD
              - CUSTOM_FIELD_READONLY
              - CUSTOM_FORM
              - CUSTOM_PROFILE_TAB
              - CUSTOM_ROLE
              - MULTI_PAYROLL
              - PERFORMANCE_REVIEW
              - REPORT
              - REPORT_READONLY
              - SCENARIO
              - SIMPLE_WORKFLOWS
              - SURVEY
              - TABLE
              - TEMPLATE
              - WORKDAY_ADAPTIVE
              - PAYROLL_OUTBOUND
              - APPROVAL_WORKFLOWS
              - CONTENT
              - IDENTITY_OUTBOUND
              - ONBOARDING_OFFBOARDING
              - TIMEOFF
        featureOptions:
          description: map of options for the feature
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FeatureAccessOption'
    UpdateProfileTab:
      type: object
      properties:
        label:
          description: human-readable name of profile tab
          type: string
          example: Performance
        blocks:
          description: ordered list of blocks contained by profile tab
          type: array
          items:
            $ref: '#/components/schemas/Block'
        status:
          description: status of the profile tab
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        readFilter:
          description: >-
            filter that controls which viewers can read this profile tab. The
            profileTab:read permission, if present, overrides this filter
          type: string
        sort:
          description: sort order
          type: integer
          format: int32
    UpdateQuestion:
      type: object
      properties:
        question:
          description: text of the question
          type: string
          example: What is your favorite color?
        fieldId:
          description: >-
            if the question is linked to a field, the id of that field. Any
            question responses will be automatically saved to the field
          type: string
        type:
          description: datatype of the question
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the question datatype (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        options:
          description: validation options
          type: object
    UpdateReport:
      type: object
      properties:
        description:
          description: report description
          type: string
          example: This is a report on headcount etd
        label:
          description: report label
          type: string
          example: Headcount Report
        filter:
          description: filter automatically applied to every chart in this report
          type: string
          example: department:engineering
        share:
          description: sharing settings of report
          type: string
          enum:
            - NORMAL
            - FULL
        sensitive:
          description: sensitivity level of report
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            report
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        chartIds:
          description: list of charts in this report
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    UpdateReportChart:
      type: object
      properties:
        label:
          description: chart label
          type: string
          example: Headcount Report
        type:
          description: chart type
          type: string
          enum:
            - LINE
            - AREA
            - STACKED
            - BAR
            - VERTICAL_BAR
            - HORIZONTAL_BAR
            - PIE
            - TABLE
            - TABLE_CROSSTAB
            - SINGLE_METRIC
            - HEADER
            - TEXT
        filter:
          description: filter that applies to this chart
          type: string
          example: department='Engineering'
        filterOverride:
          description: whether the chart filter overrides the global filter
          type: boolean
        query:
          $ref: '#/components/schemas/ReportQuery'
        sort:
          description: sort order
          type: integer
          format: int32
        isAdvancedQueryMode:
          description: whether the chart configuration is using advanced mode
          type: boolean
    UpdateRole:
      type: object
      properties:
        description:
          description: description of role
          type: string
          example: >-
            This role is able to create and update new job data for the
            engineering department.
        label:
          description: human-readable full name of role
          type: string
          example: Engineering People Manager
        policyIds:
          description: the policies that define the role
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    UpdateScenario:
      type: object
      properties:
        description:
          description: scenario description
          type: string
          example: Q4 Conservative Plan
        name:
          description: scenario name
          type: string
          example: Q4 Conservative Plan
        startDate:
          description: date that this scenario diverges from primary
          type: string
          example: '2017-01-15'
        status:
          description: status of scenario
          type: string
          enum:
            - OPEN
            - INACTIVE
            - MERGED
            - DRAFT
            - ARCHIVED
        shareAccess:
          description: users who are specifically granted permission to this scenario
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        startDateFixed:
          description: >-
            whether or not the start date should stay fixed in time, or update
            to today's date as time passes
          type: string
          enum:
            - FIXED
            - TODAY
        validJobIdSet:
          description: This scenario changes are restricted to the following jobIds
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        entityId:
          description: The entity this scenario is associated with
          type: string
        entityType:
          description: The type of entity associated with this scenario
          type: string
          enum:
            - COMP_REVIEW
        sharedViewConfig:
          description: View configurations associated with this scenario
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScenarioSharedViewConfig'
        budget:
          $ref: '#/components/schemas/Money'
        costCalc:
          description: CQL used to calculate the budget allocation in the scenario
          type: string
    UpdateStockPrice:
      type: object
      properties:
        orgId:
          description: org id that this stock price derives from
          type: string
          example: 588f7ee98f138b19220041a7
        price:
          description: price per share
          type: number
        total:
          description: total shares outstanding
          type: integer
          format: int64
    UpdateTable:
      type: object
      properties:
        name:
          description: name of table
          type: string
          example: budget-data
        label:
          description: human readable label for the table
          type: string
          example: Budget Data
        labelColumnId:
          description: if set, use this column id as the label when referencing rows
          type: string
        effectiveDated:
          description: >-
            whether or not the table is time tracked with effective dates
            (allows time travel or not). If false, then the values set in the
            table will be the same across all dates.
          type: boolean
        sensitive:
          description: >-
            base sensitivity of this table and entities in it -- should be
            either ORG or HIGH
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: users who are specifically granted permission to this table
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
    UpdateTask:
      type: object
      properties:
        status:
          description: status of this task
          type: string
          enum:
            - PENDING
            - DONE
            - EXPIRED
            - SKIPPED
        message:
          description: The message attached to this task
          type: string
          example: this is the best task ever
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            task
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        taskConfigId:
          description: id of the TaskConfig
          type: string
          example: 588f7ee98f138b19220041a7
        slug:
          description: slug used to reference tasks in events
          type: string
          example: onboardingForm
        dueAt:
          description: due date for the task
          type: string
        pastDueAction:
          description: what action to take when the task is past its due date
          type: string
          example: NONE
          enum:
            - NONE
            - SET_EXPIRED
        isSkippable:
          description: check for if the task can be skipped
          type: boolean
    UpdateTaskConfig:
      type: object
      properties:
        description:
          description: >-
            description for all tasks associated with the config that should be
            used in notifications
          type: string
        type:
          description: type of task generated by the task config
          type: string
          enum:
            - FORM_SUBMIT
            - CHANGE_APPROVE
            - TIMEOFF_APPROVE
            - SCENARIO_CHANGES_APPROVE
            - SCENARIO_CHANGES_CREATE
            - ORG_IMPORT
            - COMP_REVIEW_APPROVAL_SUBMIT
            - SCENARIO_APPROVAL_SUBMIT
            - APPROVAL_CHAIN_UPDATE_FALLBACK_APPROVER
            - ACTION
        dueDate:
          $ref: '#/components/schemas/DueDate'
        pastDueAction:
          description: sets pastDueAction on the task when it's generated
          type: string
          enum:
            - NONE
            - SET_EXPIRED
        isSkippable:
          description: sets isSkippable on the task
          type: boolean
        label:
          description: >-
            human-readable label that should be used for all tasks associated
            with the config as the task name
          type: string
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    UpdateTemplate:
      type: object
      properties:
        tags:
          description: tags to organize the purpose of the template
          type: array
          items:
            type: string
        description:
          description: description of template
          type: string
        name:
          description: template name, must be unique to organization
          type: string
        content:
          description: template content
          type: string
        stylesheet:
          description: template inline stylesheet
          type: string
        type:
          description: type of template
          type: string
          enum:
            - DOCUMENT
            - EMAIL
        filename:
          description: document filename CQL
          type: string
    UpdateTimeOffEntity:
      type: object
      properties:
        externalId:
          description: external identifier, if time off synced from external system
          type: string
          example: 588f7ee98f138b19220041a7
        startDate:
          description: start date of time off, inclusive
          type: string
          format: date
        endDate:
          description: end date of time off, inclusive
          type: string
          format: date
        days:
          description: number of days used
          type: number
        hours:
          description: number of hours used
          type: number
        typeDescription:
          description: type of time off
          type: string
        note:
          description: notes on the time off
          type: string
        approval:
          description: approval status of the time off
          type: string
          enum:
            - APPROVED
            - PENDING
            - CANCELLED
            - REJECTED
            - SUPERSEDED
    UpdateUser:
      type: object
      properties:
        appId:
          description: if the user is an app user, the id of the app
          type: string
        name:
          $ref: '#/components/schemas/Name'
        email:
          description: email address of user
          type: string
          example: bob@example.com
        orgs:
          description: list of member orgs with permission levels
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OrgAccess'
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        status:
          description: current status of user
          type: string
          enum:
            - SUPERUSER
            - NORMAL
            - INACTIVE
            - UNINSTALLED
        options:
          description: >-
            for apps, options (specific options are specific to the particular
            app); for users, user-set preferences
          type: object
        internalOptions:
          description: internal (ChartHop controlled) options
          type: object
        secrets:
          description: >-
            write-only secrets; the content of these secrets are not retrievable
            via the external-facing API
          type: object
        emailSettings:
          description: Email settings for the user
          type: array
          items:
            $ref: '#/components/schemas/UserEmailSetting'
    AccessAction:
      type: object
      required:
        - action
      properties:
        action:
          type: string
        fields:
          type: array
          uniqueItems: true
          items:
            type: string
        types:
          type: array
          uniqueItems: true
          items:
            type: string
    AccessResponse:
      type: object
      properties:
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsAccess:
      type: object
      required:
        - allowed
      properties:
        ids:
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        allowed:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AccessAction'
    ResultsAction:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateAction:
      type: object
      required:
        - sensitive
        - steps
      properties:
        tags:
          description: tags to organize the purpose of the action
          type: array
          items:
            type: string
        description:
          description: description of the action
          type: string
        event:
          description: event pattern to match on, such as change.create.*
          type: string
        cronSchedule:
          description: cron schedule to run on, in crontab format
          type: string
          example: 5 4 * * *
        filter:
          description: only run when matching a particular filter
          type: string
        steps:
          description: list of steps to run when matching the event, schedule, and filter
          type: array
          items:
            $ref: '#/components/schemas/ActionStep'
        status:
          description: status of the action
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        sensitive:
          description: whether to run with access to sensitive events or not
          type: boolean
        category:
          description: organizational category for HRIS-themed actions
          type: string
          enum:
            - ONBOARDING
            - OFFBOARDING
    CreateActionBody:
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/CreateAction'
        stepTaskConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PartialTaskConfig'
    PatchActionBody:
      type: object
      required:
        - action
      properties:
        action:
          $ref: '#/components/schemas/UpdateAction'
        stepTaskConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PartialTaskConfig'
    ActionRunRequest:
      type: object
      required:
        - eventCode
        - jobId
      properties:
        jobId:
          type: string
        eventCode:
          type: string
    SummarizeResponse:
      type: object
      required:
        - responseCount
        - summary
      properties:
        summary:
          type: string
        responseCount:
          type: integer
          format: int32
    SummarizeFormResponsesRequest:
      type: object
      required:
        - questionId
      properties:
        questionId:
          type: string
        formId:
          type: string
        assessmentId:
          type: string
        submitPersonFilter:
          type: string
        targetPersonFilter:
          type: string
    CreateAppConfig:
      type: object
      required:
        - appId
      properties:
        appId:
          description: app id
          type: string
          example: 588f7ee98f138b19220041a7
        userId:
          description: user id, if this person corresponds with a user
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: org id, if this app config corresponds with an org
          type: string
          example: 588f7ee98f138b19220041a7
        fieldMappers:
          description: list of default field mappers
          type: array
          items:
            $ref: '#/components/schemas/FieldMapper'
        customFieldMappers:
          description: list of custom field mappers by a user
          type: array
          items:
            $ref: '#/components/schemas/FieldMapper'
        customOutboundFieldMappers:
          description: list of custom outbound field mappers
          type: array
          items:
            $ref: '#/components/schemas/OutboundFieldMapper'
        disabledFieldMappers:
          description: list of disabled inbound field mappers by id
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        enabledOutboundFieldMappers:
          description: list of enabled outbound field mappers by id
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        templateMatchers:
          description: template field matchers defined by a user
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        options:
          description: app specific options
          type: object
    NotifyRequest:
      type: object
      properties:
        emailSubject:
          description: email subject line
          type: string
        emailContentHtml:
          description: email HTML content
          type: string
        emailMarkdown:
          description: email Markdown content
          type: string
        chatMarkdown:
          description: >-
            chat Markdown content, if chat message should be
            different/abbreviated
          type: string
        notifyType:
          description: Type of notification
          type: string
    AccessTokenResponse:
      type: object
      required:
        - access_token
        - expires_in
        - token_type
      properties:
        access_token:
          description: access token value
          type: string
          example: 2YotnFZFEjr1zCsicMWsdv
          readOnly: true
        token_type:
          description: access token type
          type: string
          example: bearer
          readOnly: true
        expires_in:
          description: expiration time of token, in seconds
          type: integer
          format: int32
          example: 86400
          readOnly: true
        refresh_token:
          description: refresh token value
          type: string
          example: tGzv3JOkF0XG5Qx2TlKWIA
          readOnly: true
        scope:
          description: scope of the access token
          type: string
          example: admin
          readOnly: true
    ResultsApp:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/App'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateApp:
      type: object
      required:
        - cronOrder
        - minAccess
        - name
        - orgId
        - summary
        - title
        - type
      properties:
        tags:
          description: tags/categories the app belongs to
          type: array
          items:
            type: string
        summary:
          description: short summary of app
          type: string
          example: The Slack app does X Y and Z
        title:
          description: human-readable name of app
          type: string
          example: Slack
        description:
          description: full description of app, in Markdown
          type: string
          example: The Slack app does X Y and Z
        orgId:
          description: organization id
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: short unique name
          type: string
          example: slack-import
          pattern: ^[a-z0-9-]+$
        redirectUris:
          description: >-
            list of acceptable Oauth2 redirect URIs, if Oauth2 is supported for
            this app
          type: array
          items:
            type: string
            format: uri
        allowedIps:
          description: >-
            allowlist of IPs or IP ranges that are allowed to make API calls on
            behalf of this app
          type: array
          items:
            type: string
        configFields:
          description: list of configuration fields
          type: array
          items:
            $ref: '#/components/schemas/AppConfigField'
        setupInstructions:
          description: setup instructions, in Markdown
          type: string
          example: To install the Slack, use your API key from X and Y
        cronOrder:
          description: execution order of the cron (lower numbers execute earlier)
          type: integer
          format: int32
        cronSchedule:
          description: cron schedule
          type: string
          enum:
            - DAILY
            - WEEKLY
        cronDayOfWeek:
          description: Day of week if cronSchedule is WEEKLY
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        imagePath:
          description: >-
            path to avatar profile image, should be approximately square
            dimensions and show logo
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        wordmarkImagePath:
          description: >-
            path to larger profile logo image containing brand wordmark, does
            not need to be square dimensions
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        poweredByImagePath:
          description: >-
            path to powered by image, should be approximately square dimensions
            and show logo
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        status:
          description: current status of app
          type: string
          enum:
            - GLOBAL
            - ACTIVE
            - INACTIVE
            - DEVELOPMENT
        minAccess:
          description: minimum access level requested by app
          type: string
          enum:
            - NONE
            - VIEW
            - LIMITED
            - MEMBER_LIMITED_COMP
            - MEMBER
            - CUSTOM
            - TECH_OWNER
            - TIMEOFF
            - CONTACT
            - COMP_CASH
            - COMP_EQUITY
            - COMP_ALL
            - RECRUIT_SENSITIVE
            - RECRUIT_PRIMARY
            - SENSITIVE_LIMITED_COMP
            - SENSITIVE
            - PRIMARY
            - PEOPLE_OPS_ADMIN
            - PEOPLE_OPS_ADMIN_NO_COMP_DATA
            - PEOPLE_OPS_ADMIN_NO_SENSITIVE_DATA
            - OWNER
        roleId:
          description: roleId requested by app
          type: string
        eventNotifyUrl:
          description: URL that should be notified on events
          type: string
          format: uri
        payload:
          description: custom payload to send in lieu of regular payload
          type: object
          additionalProperties:
            type: string
        events:
          description: set of events to notify on
          type: array
          uniqueItems: true
          items:
            type: string
        type:
          description: APP, BUNDLE, or INTERNAL
          type: string
          enum:
            - APP
            - BUNDLE
            - INTERNAL
        bundle:
          $ref: '#/components/schemas/Bundle'
        scopes:
          description: access scopes that the app is requesting
          type: array
          items:
            type: string
    ResultsUser:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    BundleInstallValidate:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
        duplicateEntities:
          type: array
          items:
            $ref: '#/components/schemas/BundleInstallEntity'
        errors:
          type: array
          items:
            type: string
    CreateUser:
      type: object
      required:
        - orgs
      properties:
        appId:
          description: if the user is an app user, the id of the app
          type: string
        name:
          $ref: '#/components/schemas/Name'
        email:
          description: email address of user
          type: string
          example: bob@example.com
        orgs:
          description: list of member orgs with permission levels
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OrgAccess'
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        status:
          description: current status of user
          type: string
          enum:
            - SUPERUSER
            - NORMAL
            - INACTIVE
            - UNINSTALLED
        options:
          description: >-
            for apps, options (specific options are specific to the particular
            app); for users, user-set preferences
          type: object
        internalOptions:
          description: internal (ChartHop controlled) options
          type: object
        secrets:
          description: >-
            write-only secrets; the content of these secrets are not retrievable
            via the external-facing API
          type: object
        emailSettings:
          description: Email settings for the user
          type: array
          items:
            $ref: '#/components/schemas/UserEmailSetting'
    ScopeRequest:
      type: object
      required:
        - scope
      properties:
        scope:
          description: scope being requested
          type: string
    ResultsApprovalRequestScenarioResponse:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalRequestScenarioResponse'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsApprovalChain:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalChain'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateApprovalChain:
      type: object
      required:
        - approvalNotifierUserIds
        - isPreview
        - name
      properties:
        entityId:
          description: entity id
          type: string
          example: 588f7ee98f138b19220041a7
        entityType:
          description: entity type
          type: string
          example: SCENARIO
          enum:
            - COMP_REVIEW
            - SCENARIO
            - TIMEOFF
        name:
          description: human-readable name of approval chain
          type: string
          example: Comp Review 06/15/2022
        isPreview:
          description: >-
            isPreview specifies that this is a preview for implementations that
            use it (e.g. Compensation Reviews)
          type: boolean
          example: true
        fallbackApproverJobId:
          description: the jobId of the fallback approver
          type: string
          example: 588f7ee98f138b19220041a7
        fallbackApproverJobError:
          description: most recent error for fallback approver
          type: string
        approvalNotifierUserIds:
          description: ids of any users who should be notified when approval is complete
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    ResultsApprovalChainStage:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalChainStage'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsApprovalRequestCompReviewResponse:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalRequestCompReviewResponse'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateApprovalChainStage:
      type: object
      required:
        - approvalCommentRequired
        - groups
        - order
        - rejectBehavior
        - rejectionCommentRequired
        - status
      properties:
        inclusionExpression:
          description: optional custom expression to determine stage inclusion behavior
          type: string
        inclusionBehavior:
          description: determines whether stage is conditional based on an expression
          type: string
          enum:
            - ONLY_INCLUDE_IF
            - EXCLUDE_IF
        expandExpression:
          description: optional custom expression to determine approval request tree
          type: string
        rejectBehavior:
          description: determines which stage becomes active when a rejection event happens
          type: string
          enum:
            - BACK_TO_BEGINNING
            - PREVIOUS_PHASE
        status:
          description: status of the stage
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        approvalCommentRequired:
          description: requires a comment on an approval event
          type: boolean
        rejectionCommentRequired:
          description: requires a comment on an rejection event
          type: boolean
        order:
          description: order of stage in approval chain
          type: integer
          format: int32
        groups:
          description: list of groups that are involved in this approval stage
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroup'
    DefaultChainCreateBody:
      type: object
      required:
        - entityType
      properties:
        entityType:
          type: string
          enum:
            - COMP_REVIEW
            - SCENARIO
            - TIMEOFF
    ResultsApprovalRequest:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalRequest'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ApprovalRequestCreateBody:
      type: object
      required:
        - entityId
      properties:
        entityId:
          type: string
    ApprovalRequestPatchBody:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - CANCELED
            - REJECTED
            - PENDING
            - ACTIVE
            - REVIEWED
            - APPROVED
            - SKIPPED
            - SUBMITTED
        message:
          type: string
    ReassignApproverPatchBody:
      type: object
      required:
        - initialJobId
        - message
        - reassignJobId
        - stageOrder
      properties:
        stageOrder:
          type: integer
          format: int32
        initialJobId:
          type: string
        reassignJobId:
          type: string
        message:
          type: string
    ApprovalRequestDeleteBody:
      type: object
      properties:
        message:
          type: string
    SendReminderBody:
      type: object
      required:
        - jobId
      properties:
        jobId:
          type: string
    BulkChangeAssessmentTypesBody:
      type: object
      required:
        - ids
        - type
      properties:
        ids:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        type:
          type: string
          enum:
            - REVIEW
            - COMP_REVIEW
            - SURVEY
    ResultsAssessment:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Assessment'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    AssessmentFormsAndQuestions:
      type: object
      required:
        - forms
        - questions
      properties:
        forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    CreateAssessment:
      type: object
      required:
        - label
        - type
      properties:
        label:
          description: human-readable label of assessment
          type: string
          example: Engineering Budget Q2 2019
        slug:
          description: unique slug of assessment
          type: string
          example: engineering-budget-q2-2019
        type:
          description: type of assessment
          type: string
          enum:
            - REVIEW
            - COMP_REVIEW
            - SURVEY
        fields:
          description: assessment fields (description)
          type: object
        shareAccess:
          description: users who have been granted access to this assessment
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        sensitive:
          description: view sensitivity of this assessment
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        color:
          description: color of assessment
          type: string
          pattern: ^#[a-f0-9]{6}$
        startDate:
          description: >-
            Date this assessment begins. In the context of REVIEW goals, the
            date the review cycle begins.
          type: string
          format: date
        endDate:
          description: >-
            Date this assessment ends, or is completed. In the context of REVIEW
            assessment, the date the review cycle ends.
          type: string
          format: date
        status:
          description: status of this assessment - DRAFT, ACTIVE, DONE
          type: string
          enum:
            - DRAFT
            - ACTIVE
            - DONE
        doneAt:
          description: timestamp when the status of this assessment was set to done
          type: string
          example: '2017-01-24T13:57:52Z'
        taskCount:
          description: number of tasks associated with this assessment
          type: integer
          format: int32
          example: 12
        taskDoneCount:
          description: number of tasks associated with this assessment that are done
          type: integer
          format: int32
          example: 3
        peopleIncludedCount:
          description: number of people included in this assessment
          type: integer
          format: int32
          example: 12
        query:
          description: Query for which people/jobs can be included in the review.
          type: string
    Billing:
      type: object
      required:
        - customer
        - invoices
        - org
      properties:
        checkout:
          $ref: '#/components/schemas/Checkout'
        customer:
          $ref: '#/components/schemas/Customer'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
        plan:
          $ref: '#/components/schemas/Plan'
        org:
          $ref: '#/components/schemas/Org'
    Checkout:
      type: object
      properties:
        nextPaymentDate:
          type: string
          format: date
        tax:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    Invoice:
      type: object
      required:
        - amount
        - createAt
        - number
        - status
      properties:
        number:
          description: a unique identifying string for invoices
          type: string
          example: F38A6C8-0010
        amount:
          description: current final amount due for the invoices
          type: number
          example: 1002.31
        hostedInvoiceUrl:
          description: >-
            URL for the hosted invoice page, which allows customers to view and
            pay an invoice
          type: string
          example: https://pay.stripe.com/invoice/invst_Nv8DFERQvTsBJqnZ4z19cGZBU1
        invoicePdf:
          description: the link to download the PDF for the invoice
          type: string
          example: https://pay.stripe.com/invoice/invst_wNK0BvV4iUOWOn5mzLT1ybQ2LC/pdf
        status:
          description: one of PAID, UNPAID, or VOID
          type: string
          example: PAID
          enum:
            - PAID
            - UNPAID
            - VOID
        createAt:
          description: created timestamp
          type: string
          example: '2019-07-27T20:56:10Z'
    PaymentInfo:
      type: object
      required:
        - paymentType
      properties:
        paymentType:
          description: >-
            indicates how the customer has decided to pay; one of CREDIT_CARD,
            INVOICE
          type: string
          example: CREDIT_CARD
          enum:
            - CREDIT_CARD
            - INVOICE
        creditCardEndDigits:
          description: >-
            if the customer has indicated they wish to pay by credit card, the
            last four digits of the credit card they are paying with. Null if
            the customer is paying by invoice.
          type: string
          example: '4242'
        brand:
          description: >-
            if the customer has indicated they wish to pay by credit card, the
            brand of the credit card they are paying with. Null if the customer
            is paying by invoice.
          type: string
          example: Visa
    Plan:
      type: object
      required:
        - id
        - interval
        - intervalCount
        - name
        - stripeProductId
        - tiers
      properties:
        id:
          description: unique Stripe identifier for this plan
          type: string
        name:
          description: human-readable nickname for this plan
          type: string
        interval:
          description: interval for billing on this plan
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
            - YEAR
        intervalCount:
          description: number of intervals, for example 3 for quarterly billing
          type: integer
          format: int32
        tiers:
          description: pricing tiers, per employee per interval
          type: array
          items:
            $ref: '#/components/schemas/PlanTier'
        stripeProductId:
          description: stripe product id that this plan belongs to
          type: string
    PlanTier:
      type: object
      required:
        - unitAmount
      properties:
        upTo:
          description: headcount up to this level is charged at the below rate
          type: integer
          format: int64
        unitAmount:
          description: PEPM rate
          type: number
    UpdateSubscription:
      type: object
      required:
        - paymentMethod
      properties:
        paymentMethod:
          description: >-
            Payment method to create; 'INVOICE' to make subscription paid by
            invoice, or the ID of the payment method if to make the subscription
            automatically charge a card
          type: string
    CancelSubscriptionSurveyAnswers:
      type: object
      required:
        - otherComments
        - reason
      properties:
        otherComments:
          description: >-
            Any additional comments about ChartHop when cancelling their
            subscription
          type: string
        reason:
          description: >-
            Concatenated string of reasons why the customer unsubscribed from
            ChartHop
          type: string
    ResultsData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsGuideline:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Guideline'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateBudgetPool:
      type: object
      required:
        - appliedField
        - basisType
        - compReviewId
        - label
        - sourceField
      properties:
        compReviewId:
          description: the ID of the comp review this budget is for
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: unique label
          type: string
          example: Merit
        participantsExpr:
          description: >-
            expression that determines if a particular job is included in this
            budget pool
          type: string
        appliedField:
          description: the field this budget pool applies to
          type: string
          example: base
        sourceField:
          description: the field this budget pool is calculated from
          type: string
          example: base
        basisType:
          description: the method for calculating the amount in the budget
          type: string
          enum:
            - CUSTOM
            - FIXED
            - CUSTOM_FIXED
            - PERCENTAGE
            - CUSTOM_PERCENTAGE
        fixedAmount:
          $ref: '#/components/schemas/Money'
        fixedValue:
          description: >-
            a fixed amount for the budget (used with basisType=FIXED ||
            basisType=PERCENTAGE)
          type: number
        basisFieldMatrix:
          $ref: '#/components/schemas/BasisFieldMatrix'
        fixedBudgetMap:
          description: a map of reviewer job IDs to fixed budget money amounts
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Money'
        basisExpr:
          description: >-
            expression that calculates how much each job contributes to the
            budget (used with basisType=CUSTOM)
          type: string
        defaultCurrency:
          description: >-
            Default currency used when calculating budget pool, falls back to
            org primary currency if not set
          type: string
    BudgetTierRepresentationResponse:
      type: object
      required:
        - eligible
        - reviewees
        - reviewer
      properties:
        reviewer:
          $ref: '#/components/schemas/Job'
        reviewees:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        parentReviewerJobId:
          type: string
        eligible:
          type: boolean
        budget:
          type: object
    BudgetTiersResponse:
      type: object
      required:
        - finalApprovers
        - reviews
      properties:
        reviews:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BudgetTierRepresentationResponse'
        finalApprovers:
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    ResultsCategory:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        next:
          type: string
    CreateCategory:
      type: object
      required:
        - label
      properties:
        orgId:
          description: parent organization id (empty if built-in)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable label of category
          type: string
          example: Performance
        fieldIds:
          description: set of field ids included in this category
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        nativeFields:
          description: set of native field names included in this category
          type: array
          uniqueItems: true
          items:
            type: string
    CreateCategorySort:
      type: object
      required:
        - categoryIds
        - orgId
      properties:
        orgId:
          description: parent organization id (empty if built-in)
          type: string
          example: 588f7ee98f138b19220041a7
        categoryIds:
          description: ordered list of category ids of an org
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    BulkUpdateRequest:
      type: object
      required:
        - date
        - jobIds
        - update
      properties:
        jobIds:
          description: list of job ids to update
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        update:
          $ref: '#/components/schemas/JobUpdate'
        date:
          description: date of update
          type: string
          format: date
        scenarioId:
          description: scenario id
          type: string
        note:
          description: note for update
          type: string
    CreateChange:
      type: object
      properties:
        jobId:
          description: job id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        scenarioId:
          description: scenario that this change belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        personId:
          description: the id of the person involved, or empty if no person attached to job
          type: string
        otherJobId:
          description: >-
            for MOVE changes, the id of the job moving from; for RELATE changes,
            the id of the other job
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: type of change
          type: string
          enum:
            - HIRE
            - DEPART
            - MOVE
            - UPCOMING
            - CREATE
            - UPDATE
            - DATA
            - DELETE
            - RELATE
            - BACKFILL
        date:
          description: date of change
          type: string
          format: date
        announceDate:
          description: >-
            for HIRE and DEPART changes, the announce date, if the announce date
            is different from the date of change
          type: string
          format: date
        departType:
          description: for DEPART changes, the type of departure
          type: string
          enum:
            - VOLUNTARY
            - INVOLUNTARY
        departRegret:
          description: for DEPART changes, whether the departure is regrettable
          type: string
          enum:
            - REGRET
            - NONREGRET
        reason:
          description: the reason of the change
          type: string
        promotionType:
          description: if it's a promotion or a demotion
          type: string
          enum:
            - PROMOTION
            - DEMOTION
            - NONE
        job:
          $ref: '#/components/schemas/PartialJob'
        update:
          $ref: '#/components/schemas/JobUpdate'
        note:
          description: note on the change
          type: string
    ResultsChange:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Change'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsChangeData:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChangeData'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ScenarioChangesWithBudgetRollup:
      type: object
      required:
        - budgetPoolSummaries
        - changes
      properties:
        changes:
          $ref: '#/components/schemas/ResultsChangeData'
        budgetPoolSummaries:
          type: object
          additionalProperties:
            type: object
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    BulkChangeRequest:
      type: object
      required:
        - changes
      properties:
        changes:
          description: list of changes to create
          type: array
          items:
            $ref: '#/components/schemas/CreateChange'
    ApproveChange:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - STRUCK
            - CONFLICT
            - INACTIVE
            - PROPOSED
        approvalNote:
          type: string
        changeId:
          type: string
    ChangeStatusResponse:
      type: object
      required:
        - processId
        - status
      properties:
        processId:
          type: integer
          format: int32
        status:
          type: boolean
    UpdateScenarioChangeResponse:
      type: object
      required:
        - data
        - processId
      properties:
        processId:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChangeData'
    CreateComment:
      type: object
      required:
        - content
        - entityId
        - entityType
      properties:
        parentEntityId:
          description: >-
            parent entity id that this comment belongs to, should be used with
            entityId
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: entity the comment was posted on
          type: string
          example: 588f7ee98f138b19220041a7
        entityType:
          description: type of entity the comment was posted on
          type: string
          enum:
            - CHANGE
            - ASSESSMENT
            - SCENARIO
            - APPROVAL_APPROVE
            - APPROVAL_REJECT
            - APPROVAL_REASSIGN
            - APPROVAL_WITHDRAW
        content:
          $ref: '#/components/schemas/Markup'
    ResultsComment:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateCompBand:
      type: object
      required:
        - baseInterval
        - color
        - jobLevel
        - label
      properties:
        label:
          description: human-readable name of content
          type: string
          example: L15
        color:
          description: hex color associated with the band level
          type: string
          example: '#ffee4a'
        baseCompMax:
          $ref: '#/components/schemas/Money'
        baseCompMid:
          $ref: '#/components/schemas/Money'
        baseCompMin:
          $ref: '#/components/schemas/Money'
        baseSpread:
          description: spread percent used to calculate base comp from the midpoint
          type: number
        baseInterval:
          $ref: '#/components/schemas/EnumValue'
        baseTargetPay:
          $ref: '#/components/schemas/Money'
        baseTargetPayPercentile:
          description: >-
            base target pay associated with open jobs at this band level, as a
            percentile
          type: number
        equityTargetShares:
          description: target equity for the band, in shares
          type: number
        equityTargetPercentOfBase:
          description: target equity for the band, as a percentage of base
          type: number
        equityTargetValue:
          description: >-
            target equity for the band, as a monetary value, in the same
            currency as the base
          type: number
        variableValue:
          $ref: '#/components/schemas/Money'
        variablePercentOfBase:
          description: >-
            variable compensation for the band, specified as a percentage of
            base
          type: number
        jobTierOneField:
          description: first job tier associated with the comp band
          type: string
        jobTierTwoField:
          description: second job tier associated with the comp band
          type: string
        jobTierThreeField:
          description: third job tier associated with the comp band
          type: string
        jobLevel:
          description: job level associated with the comp band
          type: string
    ResultsCompReview:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CompReview'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CompReviewMetadata:
      type: object
      required:
        - approvers
        - collaborators
        - compReviewId
        - eligibleEmployees
        - eligibleEmployeesFilter
        - ineligibleEmployees
        - ineligibleEmployeesFilter
        - orgId
        - reviewers
      properties:
        compReviewId:
          description: comp review id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if built-in)
          type: string
          example: 588f7ee98f138b19220041a7
        eligibleEmployees:
          description: count of employees eligible for the comp review
          type: integer
          format: int32
        eligibleEmployeesFilter:
          description: filter to view eligible employees on the datasheet
          type: string
        ineligibleEmployees:
          description: count of employees ineligible for the comp review
          type: integer
          format: int32
        ineligibleEmployeesFilter:
          description: filter to view ineligible employees on the datasheet
          type: string
        approvers:
          description: count of final approvers
          type: integer
          format: int32
        reviewers:
          description: count of reviewers in the comp review
          type: integer
          format: int32
        collaborators:
          description: count of collaborators in the comp review
          type: integer
          format: int32
    CreateCompReview:
      type: object
      required:
        - label
      properties:
        label:
          description: human-readable label of goal
          type: string
          example: Comp review H2 2022
        config:
          $ref: '#/components/schemas/CompReviewConfig'
        status:
          description: >-
            Whether the compensation review has been approved by the final
            approvers
          type: string
          enum:
            - PENDING
            - PAUSED
            - ACTIVE
            - REJECTED
            - COMPLETE
            - COMPLETE_APPROVED
        shareAccess:
          description: users who have been granted access to this comp review
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
    GenerateCompReviewOptions:
      type: object
      required:
        - isPreview
      properties:
        isPreview:
          type: boolean
    TierRepresentationResponse:
      type: object
      required:
        - eligible
        - reviewees
        - reviewer
      properties:
        reviewer:
          $ref: '#/components/schemas/Job'
        reviewees:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        parentReviewerJobId:
          type: string
        eligible:
          type: boolean
    TiersResponse:
      type: object
      required:
        - finalApprovers
        - reviews
      properties:
        reviews:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TierRepresentationResponse'
        finalApprovers:
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    InCycleViewResponse:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalRequestCompReviewResponse'
        proposal:
          $ref: '#/components/schemas/ApprovalRequestCompReviewResponse'
        scenarioMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Scenario'
        parentReviewsMap:
          type: object
          additionalProperties:
            type: string
            example: 588f7ee98f138b19220041a7
        collaboratingWithJobIds:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        visibleColumns:
          type: array
          items:
            $ref: '#/components/schemas/CompReviewWorkbookColumn'
        error:
          type: object
          additionalProperties:
            type: string
        features:
          $ref: '#/components/schemas/InCycleViewFeatures'
    InCycleViewChanges:
      type: object
      required:
        - changeMap
      properties:
        changeMap:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ChangeData'
        guidelinesMap:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/GuidelineCalculation'
    InCycleChange:
      type: object
      required:
        - change
        - guidelines
      properties:
        change:
          $ref: '#/components/schemas/ChangeData'
        guidelines:
          type: array
          items:
            $ref: '#/components/schemas/GuidelineCalculation'
    PartialAppEntities:
      type: object
      required:
        - fields
        - jobs
        - personToJobMap
        - persons
      properties:
        jobs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Job'
        persons:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Person'
        personToJobMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Job'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    SendReminderEmailOptions:
      type: object
      required:
        - approvalRequestId
      properties:
        approvalRequestId:
          type: string
    Bucket:
      type: object
      required:
        - approverMap
        - bucket
      properties:
        bucket:
          type: number
        approverMap:
          type: object
          additionalProperties:
            type: integer
            format: int32
    CompReviewVisualizations:
      type: object
      required:
        - jobToBaseSpendMap
        - raisePercentageHistogram
      properties:
        raisePercentageHistogram:
          $ref: '#/components/schemas/RaisePercentageHistogram'
        jobToBaseSpendMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Money'
        budgetPoolCalculation:
          $ref: '#/components/schemas/BudgetCalculation'
    RaisePercentageHistogram:
      type: object
      required:
        - buckets
        - increment
        - max
        - min
      properties:
        min:
          type: number
        max:
          type: number
        increment:
          type: number
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/Bucket'
    GetVisualizationsOptions:
      type: object
      required:
        - isCollabicientView
      properties:
        changeIds:
          description: >-
            A set of Change ObjectIds used to filter the results of budget and
            raise calculations
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        viewInCurrency:
          description: Currency to view budget visualizations
          type: string
        includeCollaborators:
          description: >-
            Whether or not to include approval requests on which a user is
            collaborating when calculating budget amounts for that user
          type: boolean
        isCollabicientView:
          description: Are the visualizations for a collaborating participant
          type: boolean
    HomepageContentRender:
      type: object
      required:
        - content
      properties:
        content:
          type: string
    ResultsContent:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Content'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ContentRender:
      type: object
      required:
        - blocks
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
    CreateContent:
      type: object
      required:
        - title
      properties:
        title:
          description: title of the content page
          type: string
          example: Benefits Policies
        parentContentId:
          description: parent content id in the hierarchy
          type: string
          example: 588f7ee98f138b19220041a7
        path:
          description: >-
            full path to the content, if not set, defaults to an id/slug
            generated URL
          type: string
          example: employee-info/benefits-policies
        blocks:
          description: content blocks
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
        imagePath:
          description: path to the image for the page
          type: string
          example: path/to/image.jpg
          pattern: ^[a-zA-Z0-9._/-]+$
        emoji:
          description: emoji, if an emoji is used to represent the page
          type: string
          example: 💥
        coverImagePath:
          description: path to the cover image for the content page
          type: string
          example: path/to/image.jpg
          pattern: ^[a-zA-Z0-9._/-]+$
        sensitive:
          description: sensitivity level (ORG public, HIGHly sensitive, or PRIVATE)
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: list of users and groups who have the content shared with them
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        status:
          description: current status of the content page
          type: string
          enum:
            - DRAFT
            - ACTIVE
            - ARCHIVED
    ResultsCustomer:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    InvoiceResponse:
      type: object
      required:
        - invoices
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    Subscription:
      type: object
      required:
        - nextInvoiceAt
        - paymentInfo
        - plan
      properties:
        nextInvoiceAt:
          description: Timestamp when the next invoice will be generated
          type: string
          example: '2019-07-27T20:56:10Z'
        plan:
          $ref: '#/components/schemas/Plan'
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'
    CreateCustomer:
      type: object
      required:
        - email
        - name
        - startDate
      properties:
        name:
          description: name of customer
          type: string
        email:
          description: email address for billing purposes
          type: string
        billAddress:
          $ref: '#/components/schemas/Address'
        industry:
          description: industry that customer is in
          type: string
        source:
          description: source of customer signup
          type: string
          enum:
            - ADP_MARKETPLACE
            - SELF_SERVE
            - SELF_SERVE_TEST
            - SEQUOIA_ONE
            - CONNECT
        status:
          description: current status
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - TRIAL
            - CHURN
            - PAYMENT_ERROR
        salesforceAccountId:
          description: salesforce account id
          type: string
          pattern: ^[a-zA-Z0-9]{15}|[a-zA-Z0-9]{18}$
        products:
          description: products that this customer has purchased
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        startDate:
          description: initial date of billing
          type: string
          format: date
        endDate:
          description: >-
            end of service date for churning customers -- on or after this date,
            service should be disabled
          type: string
          format: date
        nextInvoiceDate:
          description: date of next invoice
          type: string
          format: date
        primaryHeadCountFilter:
          description: primary headcount filter - used for billing purposes
          type: string
        secondaryHeadCountFilter:
          description: secondary headcount filter - used for billing purposes
          type: string
        arr:
          description: current ARR of the customer based on most recent invoice
          type: number
        projectedArr:
          description: >-
            projected ARR of the customer for upcoming invoice, based on plan
            and headcount
          type: number
        trialStartDate:
          description: date this customer begins their trial period
          type: string
          format: date
        trialEndDate:
          description: date this customer ends their trial period
          type: string
          format: date
        stripeSubscriptionSync:
          description: Stripe subscription settings
          type: string
          enum:
            - SYNC
            - DELETE
    ResultsDataView:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataView'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateDataView:
      type: object
      required:
        - name
      properties:
        name:
          description: data view name
          type: string
        columns:
          description: comma delimited list of columns
          type: string
          example: image,name,title
        type:
          description: type of data view
          type: string
          enum:
            - ANY
            - DATA_SHEET
            - ORG_CHART
            - MAP
        entityType:
          description: entity type being viewed
          type: string
        columnWidths:
          description: map of column names to widths in pixels
          type: object
          additionalProperties:
            type: number
            format: double
        date:
          description: >-
            date of view, in either relative (-7d) or exact (YYYY-MM-DD) format;
            if not present, defaults to today
          type: string
        startDate:
          description: >-
            start date of view, if displaying a date range, in either relative
            (-7d) or exact (YYYY-MM-DD) format; if not present, defaults to
            today
          type: string
        endDate:
          description: >-
            end date of view, if displaying a date range, in either relative
            (-7d) or exact (YYYY-MM-DD) format; if not present, defaults to
            today
          type: string
        filter:
          description: filter query
          type: string
          example: managerCount:1
        sort:
          description: comma delimited list of columns by which to sort
          type: string
          example: name,title
        groupBy:
          description: column to group duplicates by
          type: string
          example: title
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            data view
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        sensitive:
          description: sensitivity level of data view
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
    CreateEmailTemplate:
      type: object
      required:
        - category
        - name
      properties:
        name:
          description: name of the email template
          type: string
          example: self_serve_welcome
        category:
          description: email category
          type: string
          enum:
            - ADMINISTRATIVE
            - BILLING
            - DATA_IMPORT_AND_SYNC_STATUS
            - TRIAL_REMINDERS
    ResultsEmailTemplate:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplate'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    Event:
      type: object
      required:
        - at
        - entityId
        - entityType
        - id
        - type
        - userId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        userId:
          description: user id who caused the event
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: type of event
          type: string
          enum:
            - APP
            - APPROVE
            - COMBINE
            - CREATE
            - DELETE
            - DONE
            - ERROR
            - EXPORT_CSV
            - EXPORT_ORG_CHART
            - GENERATE
            - GEOIP
            - INCOMING
            - INSTALL
            - INVITE
            - INBOUND
            - LOGIN
            - MERGE
            - OUTBOUND
            - PREVIEW_AS
            - READ
            - READ_SENSITIVE
            - READ_ATS
            - READ_ATS_WEBHOOK
            - READ_FULL_NAME
            - READ_FUTURE_DATE
            - READ_METADATA
            - READ_COMP
            - READ_BILLING
            - READ_PENDING
            - READ_PAYROLL
            - READ_SENSITIVE_FILTERS
            - REJECT
            - REMIND
            - REMOVE_PASSWORD
            - REQUEST
            - RESTORE
            - RESUME
            - REVOKE
            - RUN
            - RUN_ATS
            - SECURITY
            - SHOW_DASHBOARD_DAYS_AHEAD
            - SHOW_OPEN_JOBS
            - STEP
            - SUBMIT
            - SYNC
            - TEST
            - TOKEN
            - UNINSTALL
            - UPDATE
            - UPDATE_PASSWORD
            - UPLOAD_CSV
            - WRITE
            - VIEW_AS
        entityType:
          description: type of target entity
          type: string
          enum:
            - ACTION
            - AGREEMENT
            - APP
            - APP_CONFIG
            - APPROVAL_CHAIN
            - APPROVAL_CHAIN_STAGE
            - APPROVAL_REQUEST
            - ASSESSMENT
            - BUDGET_POOL
            - BUNDLE
            - CATEGORY
            - CATEGORY_SORT
            - CHANGE
            - COMMENT
            - COMP_BAND
            - COMP_REVIEW
            - CONTENT
            - CUSTOMER
            - DATA_VIEW
            - EXCHANGE_RATE
            - EMAIL_TEMPLATE
            - FIELD
            - FILE
            - FORM
            - FORM_DRAFT
            - FORM_RESPONSE
            - GEOCODE
            - GROUP
            - GUIDELINE
            - JOB
            - JOB_LEVEL
            - MEDIA
            - MESSAGE
            - MULTIPLIER
            - ORG
            - ORG_CONFIG
            - PERSON
            - PROFILE_TAB
            - POLICY
            - POSITION
            - PROCESS
            - PRODUCT
            - QUERY_TOKEN
            - QUESTION
            - REPORT
            - REPORT_CHART
            - ROLE
            - SCENARIO
            - STOCK_PRICE
            - TABLE
            - TABLE_ROW
            - TASK_CONFIG
            - TEMPLATE
            - TASK
            - TOKEN
            - TIMEOFF
            - TRACKED_GROUP
            - USER
        entityId:
          description: id of target entity
          type: string
        tableId:
          description: id of table, if entity is a table row
          type: string
        jobId:
          description: >-
            jobId of the entity, if the entity is a job or closely connected to
            a single job
          type: string
        personId:
          description: >-
            personId of the entity, if the entity is a person or closely
            connected to a single person
          type: string
        subtype:
          description: subtype of entity
          type: string
        payload:
          description: >-
            event-specific payload containing information about the change that
            took place
          type: object
        at:
          description: timestamp of event
          type: integer
          format: int64
        processId:
          description: id of process
          type: string
        date:
          description: effective date, if in use
          type: string
          format: date
        scenarioId:
          description: id of scenario
          type: string
        parentEntityId:
          description: id of associated entity, such as comp cycle
          type: string
        fields:
          description: set of fields that were updated by the event
          type: array
          uniqueItems: true
          items:
            type: string
        code:
          description: event code, for example job.update
          type: string
    ResultsEvent:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ValidateExpressionResponse:
      type: object
      required:
        - isValid
        - results
      properties:
        isValid:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/ValidateExpressionResult'
    ValidateExpressionResult:
      type: object
      required:
        - expr
        - isValid
        - message
      properties:
        expr:
          type: string
        isValid:
          type: boolean
        message:
          type: string
    ValidateExpressionRequest:
      type: object
      required:
        - expressions
      properties:
        expressions:
          type: array
          items:
            type: string
    EvaluateExpressionResponse:
      type: object
      properties:
        result:
          type: object
        error:
          type: string
    EvaluateExpressionRequest:
      type: object
      required:
        - entityId
        - entityType
        - expr
      properties:
        expr:
          type: string
        entityType:
          type: string
          enum:
            - ACTION
            - AGREEMENT
            - APP
            - APP_CONFIG
            - APPROVAL_CHAIN
            - APPROVAL_CHAIN_STAGE
            - APPROVAL_REQUEST
            - ASSESSMENT
            - BUDGET_POOL
            - BUNDLE
            - CATEGORY
            - CATEGORY_SORT
            - CHANGE
            - COMMENT
            - COMP_BAND
            - COMP_REVIEW
            - CONTENT
            - CUSTOMER
            - DATA_VIEW
            - EXCHANGE_RATE
            - EMAIL_TEMPLATE
            - FIELD
            - FILE
            - FORM
            - FORM_DRAFT
            - FORM_RESPONSE
            - GEOCODE
            - GROUP
            - GUIDELINE
            - JOB
            - JOB_LEVEL
            - MEDIA
            - MESSAGE
            - MULTIPLIER
            - ORG
            - ORG_CONFIG
            - PERSON
            - PROFILE_TAB
            - POLICY
            - POSITION
            - PROCESS
            - PRODUCT
            - QUERY_TOKEN
            - QUESTION
            - REPORT
            - REPORT_CHART
            - ROLE
            - SCENARIO
            - STOCK_PRICE
            - TABLE
            - TABLE_ROW
            - TASK_CONFIG
            - TEMPLATE
            - TASK
            - TOKEN
            - TIMEOFF
            - TRACKED_GROUP
            - USER
        entityId:
          type: string
    ResultsField:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        next:
          type: string
    Field:
      type: object
      required:
        - id
        - isRequired
        - isUnique
        - label
        - name
        - plural
        - sensitive
        - type
      properties:
        description:
          description: description of field
          type: string
          example: >-
            This field tracks the most recent performance rating for an
            individual.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: short field name
          type: string
          example: summary
          pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
        label:
          description: human-readable full name of field
          type: string
          example: Job Summary
        question:
          description: human-readable question associated with field
          type: string
          example: What do you think of this placeholder question?
        inUse:
          description: >-
            disallow any updates to this Field (except for field.question
            string)
          type: boolean
        expr:
          description: calculated expression
          type: string
          example: (base + variable) / 12
        exprType:
          description: the expected type of the evaluated expression
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        type:
          description: type of field
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the field (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        defaultValue:
          description: default value if field is not set
          type: object
        options:
          description: validation options
          type: object
        entityType:
          description: entity type of field
          type: string
          enum:
            - JOB
            - JOB_OPEN
            - JOB_FILLED
            - PERSON
            - CHANGE
            - TABLE
            - ORG
            - USER
            - NONE
        isUnique:
          description: >-
            indicates that this field value is unique in conjunction with
            entityType PERSON or JOB
          type: boolean
        isRequired:
          description: indicates that this field value is required
          type: boolean
        isEffectiveDated:
          description: indicates that this field value is effective-dated
          type: boolean
        aliases:
          description: set of aliases for this field
          type: array
          uniqueItems: true
          items:
            type: string
        calc:
          description: >-
            unique ID for the function that runs to calculate the value of this
            field. For native fields only
          type: string
          enum:
            - ADDRESS
            - AGE
            - ANNIVERSARY
            - ANNUAL_BASE_MONEY
            - BACKFILL
            - BAND
            - BAND_RANGE
            - BASE
            - BASE_CAL_YEAR_PRORATED
            - BASE_CAL_YTD
            - BASE_COMP
            - BASE_COMP_AMOUNT
            - BASE_COMP_ANNUALIZED
            - BASE_COMP_ANNUALIZED_AS_ORG_CURRENCY
            - BASE_COMP_AS_ORG_CURRENCY
            - BASE_COMP_CHANGES
            - BASE_COMP_CURRENCY
            - BASE_COMP_HOURS_PER_WEEK
            - BASE_COMP_INTERVAL
            - BASE_COMP_LAST_RAISE_DATE
            - BASE_COMP_LAST_RAISE_MONTHS_SINCE
            - BASE_COMP_LAST_RAISE_PAY
            - BASE_COMP_LAST_RAISE_PAY_AS_ORG_CURRENCY
            - BASE_COMP_LAST_RAISE_PERCENT
            - BASE_COMP_LAST_RAISE_TYPE
            - BASE_COMP_PAY
            - BASE_COMP_PAY_AS_ORG_CURRENCY
            - BASE_COMP_WEEKS_PER_YEAR
            - BASE_FISCAL_YEAR_PRORATED
            - BASE_FISCAL_YTD
            - BASE_PRIMARY
            - BASE_RAISE_AMOUNT
            - BASE_RAISE_DATE
            - BASE_RAISE_PERCENT
            - BIRTH_DATE
            - BIRTHDAY
            - BONUS_TARGET
            - BUDGET_COST
            - BUSINESS_UNITS
            - CAL_YEAR_VEST_SHARES
            - CAL_YEAR_VEST_VALUE
            - CAN_APPROVE_CHANGE
            - CAN_EDIT_JOB
            - CASH_COMP
            - CASH_COMP_LOCAL
            - CHANGE
            - CHANGE_ID
            - COMMISSION_TARGET
            - COMP
            - COMP_CHANGE_PERCENT
            - COMPA_RATIO_MID
            - COMPA_RATIO_TARGET
            - CONTACT
            - COST
            - CREATE_DATE
            - CURRENCY
            - DATA
            - DATE
            - DATE_OF
            - DAYS_ACTIVE
            - DAYS_OFF
            - DAYS_OFF_TAKEN
            - DAYS_OFF_UPCOMING
            - DAYS_OPEN
            - DB
            - DEPART
            - DEPARTMENT
            - DEPARTMENT_FUNC
            - DIRECT_JOBS
            - DIRECT_JOB_COUNT
            - DIRECT_PERSON_COUNT
            - EMPLOYMENT
            - END_DATE_JOB
            - END_DATE_ORG
            - ETHNICITY
            - FISCAL_YEAR_COST
            - GENDER
            - GEOIP
            - GEOIP_ADDRESS
            - GRAND_MANAGER
            - GRANT_SHARES
            - GRANT_TYPE
            - GRANT_VALUE
            - GRANTS
            - GROUP_IDS
            - HEADCOUNT
            - HISTORIC_BACKFILL
            - HOUR
            - HOURLY
            - HOURLY_PRIMARY
            - HOURS_PER_WEEK
            - IMAGE
            - INDIRECT
            - INDIRECT_JOBS
            - JOB
            - JOB_ID
            - JOB_CODE
            - JOBCOUNT
            - LAST_GRANT
            - LAST_GRANT_DATE
            - LAST_GRANT_ORIGINAL_VALUE
            - LOCATION
            - MANAGE_JOBS
            - MANAGE_PERSONS
            - MANAGER
            - MANAGER_COUNT
            - MANAGER_FILLED
            - MANAGER_ID
            - MANAGERS
            - MANAGER_PERSON
            - MANAGER_PERSONS
            - ME
            - MERGE_SCENARIO_ID
            - NAME
            - NAME_AUDIO
            - NAME_TITLE
            - NEXT_DAY_OFF
            - NEXT_TIME_OFF
            - NEXT_YEAR_VEST_SHARES
            - NEXT_YEAR_VEST_VALUE
            - NOTE
            - NOOP
            - OPEN
            - ORG
            - PERSON
            - PERSON_ID
            - PLACEMENT
            - PREV_DAY_OFF
            - PREV_TIME_OFF
            - PROMOTION
            - PROMOTION_DATE
            - PROPOSED
            - Q
            - RAISE_AMOUNT
            - RAISE_DATE
            - RAISE_PERCENT
            - RAISE_PROMOTION_DATE
            - REASON
            - REGRET
            - RELATIONSHIPS
            - REMOTE_WORK_ADDRESS
            - SCENARIO
            - SCENARIO_CHANGED
            - SENSITIVE
            - SENSITIVE_FIELDS
            - START_DATE
            - START_DATE_JOB
            - START_DATE_ORG
            - START_DATE_PLANNED
            - STATE
            - STRIKE_PRICE
            - TARGET_HOURS_PER_WEEK
            - TARGET_WEEKS_PER_YEAR
            - TEAM
            - TENURE_JOB
            - TENURE_ORG
            - TIMEZONE_OFFSET
            - TITLE
            - TITLE_DATE
            - TODAY
            - TOTAL_COMP
            - TOTAL_COMP_LOCAL
            - TOTAL_ORG_SHARES
            - TOTAL_SHARES
            - TOTAL_SHARES_VALUE
            - UNDER
            - UNDER_INCLUDING
            - UNDER_JOBS
            - UNVESTED_SHARES
            - UNVESTED_VALUE
            - UPDATE
            - USER_ACTIVE_DAYS
            - USER_CAN_EDIT_COMP_FOR_JOB
            - USER
            - VARIABLE
            - VARIABLE_AMOUNT
            - VARIABLE_INTERVAL
            - VARIABLE_PERCENT
            - VARIABLE_PRIMARY
            - VARIABLE_TARGET
            - VARIABLE_TARGET_AMOUNT
            - VARIABLE_TARGET_ANNUALIZED
            - VARIABLE_TARGET_CURRENCY
            - VARIABLE_TARGET_PERCENT
            - VARIABLE_TARGET_TYPE
            - VARIABLE_TARGETS
            - VARIABLE_TARGETS_LAST_RAISE_DATE
            - VARIABLE_TARGETS_LAST_RAISE_MONTHS_SINCE
            - VARIABLE_TARGETS_LAST_RAISE_PAY
            - VARIABLE_TARGETS_LAST_RAISE_PERCENT
            - VARIABLE_TYPE
            - VESTED_DATE
            - VESTED_SHARES
            - VESTED_VALUE
            - WEEKS_PER_YEAR
            - WORK_ADDRESS
        classification:
          description: >-
            indicates how this field is calculated (whether it's stored in the
            DB, evaluated through the expression service, or compound)
          type: string
          enum:
            - COMPOUND
        sensitive:
          description: sensitivity level of data
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        hideExpr:
          description: hide expression-derived values from non-sensitive users
          type: boolean
        expireDays:
          description: number of days after which the data becomes invalid
          type: integer
          format: int32
          minimum: 1
        categoryId:
          description: the category the field belongs to
          type: string
        categoryIds:
          description: the categories the field belongs to
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        status:
          description: the status of the field
          type: string
          enum:
            - ACTIVE
            - HIDDEN
        tableId:
          description: >-
            the table id this field applies to, only applicable when EntityType
            equals TABLE
          type: string
        tableName:
          type: string
        tableRef:
          $ref: '#/components/schemas/TableRef'
        readonly:
          type: boolean
        builtIn:
          type: boolean
        canOverrideSensitivity:
          type: boolean
        places:
          description: number of decimal places for money values
          type: integer
          format: int32
        overrideRevert:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DtValue'
        overrideName:
          type: string
        hasSubfields:
          type: boolean
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    CreateField:
      type: object
      required:
        - entityType
        - isRequired
        - isUnique
        - label
        - name
        - sensitive
        - type
      properties:
        description:
          description: description of field
          type: string
          example: >-
            This field tracks the most recent performance rating for an
            individual.
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: short field name
          type: string
          example: summary
          pattern: ^[a-zA-Z][a-zA-Z0-9_]+$
        label:
          description: human-readable full name of field
          type: string
          example: Job Summary
        question:
          description: human-readable question associated with field
          type: string
          example: What do you think of this placeholder question?
        inUse:
          description: >-
            disallow any updates to this Field (except for field.question
            string)
          type: boolean
        expr:
          description: calculated expression
          type: string
          example: (base + variable) / 12
        exprType:
          description: the expected type of the evaluated expression
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        type:
          description: type of field
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the field (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        defaultValue:
          description: default value if field is not set
          type: object
        options:
          description: validation options
          type: object
        entityType:
          description: entity type of field
          type: string
          enum:
            - JOB
            - JOB_OPEN
            - JOB_FILLED
            - PERSON
            - CHANGE
            - TABLE
            - ORG
            - USER
            - NONE
        sensitive:
          description: sensitivity level of data
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        hideExpr:
          description: hide expression-derived values from non-sensitive users
          type: boolean
        expireDays:
          description: number of days after which the data becomes invalid
          type: integer
          format: int32
          minimum: 1
        status:
          description: the status of the field
          type: string
          enum:
            - ACTIVE
            - HIDDEN
        tableId:
          description: >-
            the table id this field applies to, only applicable when EntityType
            equals TABLE
          type: string
        tableRef:
          $ref: '#/components/schemas/TableRef'
        isUnique:
          description: >-
            indicates that this field value is unique in conjunction with
            entityType PERSON or JOB
          type: boolean
        isRequired:
          description: indicates that this field value is required
          type: boolean
        isEffectiveDated:
          description: indicates that this field value is effective-dated
          type: boolean
        dataFetchTypes:
          description: set of data fetch types
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - BASIC
              - UPDATE
              - CHANGE
              - RELATIONSHIP_MANAGER
              - RELATIONSHIP_ALL
              - TITLE
              - PROMOTION
              - GROUP
              - COMP
              - COMP_HISTORY
              - GRANT
              - TIMEOFF
              - PERSON_JOIN
              - ALL_DATA
        aliases:
          description: set of aliases for this field
          type: array
          uniqueItems: true
          items:
            type: string
        calc:
          description: >-
            unique ID for the function that runs to calculate the value of this
            field. For native fields only
          type: string
          enum:
            - ADDRESS
            - AGE
            - ANNIVERSARY
            - ANNUAL_BASE_MONEY
            - BACKFILL
            - BAND
            - BAND_RANGE
            - BASE
            - BASE_CAL_YEAR_PRORATED
            - BASE_CAL_YTD
            - BASE_COMP
            - BASE_COMP_AMOUNT
            - BASE_COMP_ANNUALIZED
            - BASE_COMP_ANNUALIZED_AS_ORG_CURRENCY
            - BASE_COMP_AS_ORG_CURRENCY
            - BASE_COMP_CHANGES
            - BASE_COMP_CURRENCY
            - BASE_COMP_HOURS_PER_WEEK
            - BASE_COMP_INTERVAL
            - BASE_COMP_LAST_RAISE_DATE
            - BASE_COMP_LAST_RAISE_MONTHS_SINCE
            - BASE_COMP_LAST_RAISE_PAY
            - BASE_COMP_LAST_RAISE_PAY_AS_ORG_CURRENCY
            - BASE_COMP_LAST_RAISE_PERCENT
            - BASE_COMP_LAST_RAISE_TYPE
            - BASE_COMP_PAY
            - BASE_COMP_PAY_AS_ORG_CURRENCY
            - BASE_COMP_WEEKS_PER_YEAR
            - BASE_FISCAL_YEAR_PRORATED
            - BASE_FISCAL_YTD
            - BASE_PRIMARY
            - BASE_RAISE_AMOUNT
            - BASE_RAISE_DATE
            - BASE_RAISE_PERCENT
            - BIRTH_DATE
            - BIRTHDAY
            - BONUS_TARGET
            - BUDGET_COST
            - BUSINESS_UNITS
            - CAL_YEAR_VEST_SHARES
            - CAL_YEAR_VEST_VALUE
            - CAN_APPROVE_CHANGE
            - CAN_EDIT_JOB
            - CASH_COMP
            - CASH_COMP_LOCAL
            - CHANGE
            - CHANGE_ID
            - COMMISSION_TARGET
            - COMP
            - COMP_CHANGE_PERCENT
            - COMPA_RATIO_MID
            - COMPA_RATIO_TARGET
            - CONTACT
            - COST
            - CREATE_DATE
            - CURRENCY
            - DATA
            - DATE
            - DATE_OF
            - DAYS_ACTIVE
            - DAYS_OFF
            - DAYS_OFF_TAKEN
            - DAYS_OFF_UPCOMING
            - DAYS_OPEN
            - DB
            - DEPART
            - DEPARTMENT
            - DEPARTMENT_FUNC
            - DIRECT_JOBS
            - DIRECT_JOB_COUNT
            - DIRECT_PERSON_COUNT
            - EMPLOYMENT
            - END_DATE_JOB
            - END_DATE_ORG
            - ETHNICITY
            - FISCAL_YEAR_COST
            - GENDER
            - GEOIP
            - GEOIP_ADDRESS
            - GRAND_MANAGER
            - GRANT_SHARES
            - GRANT_TYPE
            - GRANT_VALUE
            - GRANTS
            - GROUP_IDS
            - HEADCOUNT
            - HISTORIC_BACKFILL
            - HOUR
            - HOURLY
            - HOURLY_PRIMARY
            - HOURS_PER_WEEK
            - IMAGE
            - INDIRECT
            - INDIRECT_JOBS
            - JOB
            - JOB_ID
            - JOB_CODE
            - JOBCOUNT
            - LAST_GRANT
            - LAST_GRANT_DATE
            - LAST_GRANT_ORIGINAL_VALUE
            - LOCATION
            - MANAGE_JOBS
            - MANAGE_PERSONS
            - MANAGER
            - MANAGER_COUNT
            - MANAGER_FILLED
            - MANAGER_ID
            - MANAGERS
            - MANAGER_PERSON
            - MANAGER_PERSONS
            - ME
            - MERGE_SCENARIO_ID
            - NAME
            - NAME_AUDIO
            - NAME_TITLE
            - NEXT_DAY_OFF
            - NEXT_TIME_OFF
            - NEXT_YEAR_VEST_SHARES
            - NEXT_YEAR_VEST_VALUE
            - NOTE
            - NOOP
            - OPEN
            - ORG
            - PERSON
            - PERSON_ID
            - PLACEMENT
            - PREV_DAY_OFF
            - PREV_TIME_OFF
            - PROMOTION
            - PROMOTION_DATE
            - PROPOSED
            - Q
            - RAISE_AMOUNT
            - RAISE_DATE
            - RAISE_PERCENT
            - RAISE_PROMOTION_DATE
            - REASON
            - REGRET
            - RELATIONSHIPS
            - REMOTE_WORK_ADDRESS
            - SCENARIO
            - SCENARIO_CHANGED
            - SENSITIVE
            - SENSITIVE_FIELDS
            - START_DATE
            - START_DATE_JOB
            - START_DATE_ORG
            - START_DATE_PLANNED
            - STATE
            - STRIKE_PRICE
            - TARGET_HOURS_PER_WEEK
            - TARGET_WEEKS_PER_YEAR
            - TEAM
            - TENURE_JOB
            - TENURE_ORG
            - TIMEZONE_OFFSET
            - TITLE
            - TITLE_DATE
            - TODAY
            - TOTAL_COMP
            - TOTAL_COMP_LOCAL
            - TOTAL_ORG_SHARES
            - TOTAL_SHARES
            - TOTAL_SHARES_VALUE
            - UNDER
            - UNDER_INCLUDING
            - UNDER_JOBS
            - UNVESTED_SHARES
            - UNVESTED_VALUE
            - UPDATE
            - USER_ACTIVE_DAYS
            - USER_CAN_EDIT_COMP_FOR_JOB
            - USER
            - VARIABLE
            - VARIABLE_AMOUNT
            - VARIABLE_INTERVAL
            - VARIABLE_PERCENT
            - VARIABLE_PRIMARY
            - VARIABLE_TARGET
            - VARIABLE_TARGET_AMOUNT
            - VARIABLE_TARGET_ANNUALIZED
            - VARIABLE_TARGET_CURRENCY
            - VARIABLE_TARGET_PERCENT
            - VARIABLE_TARGET_TYPE
            - VARIABLE_TARGETS
            - VARIABLE_TARGETS_LAST_RAISE_DATE
            - VARIABLE_TARGETS_LAST_RAISE_MONTHS_SINCE
            - VARIABLE_TARGETS_LAST_RAISE_PAY
            - VARIABLE_TARGETS_LAST_RAISE_PERCENT
            - VARIABLE_TYPE
            - VESTED_DATE
            - VESTED_SHARES
            - VESTED_VALUE
            - WEEKS_PER_YEAR
            - WORK_ADDRESS
        categoryId:
          description: ID of the category to which this field belongs, if any
          type: string
        classification:
          description: >-
            indicates how this field is calculated (whether it's stored in the
            DB, evaluated through the expression service, or compound)
          type: string
          enum:
            - COMPOUND
        places:
          description: number of decimal places for money values
          type: integer
          format: int32
    FieldStatusUpdateRequest:
      type: object
      required:
        - fieldIds
        - reservedFieldNames
        - updateStatus
      properties:
        updateStatus:
          description: New status to update
          type: string
          enum:
            - ACTIVE
            - HIDDEN
        fieldIds:
          description: Field ids to apply status to
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        reservedFieldNames:
          description: Reserved field names to apply status to
          type: array
          items:
            type: string
    FieldRemoveOverrideRequest:
      type: object
      required:
        - fieldIds
      properties:
        fieldIds:
          description: Field ids
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    FieldRemoveCategoryRequest:
      type: object
      required:
        - fieldIds
      properties:
        fieldIds:
          description: Field ids
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    ResultsPartialField:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PartialField'
        next:
          type: string
    DtValue:
      type: object
      properties:
        value:
          type: object
    ResultsFileEntity:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FileEntity'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    FormCollectRequest:
      type: object
      required:
        - preview
      properties:
        assessmentId:
          description: >-
            the assessment id that this form collection request aligns to (for
            example a performance review cycle)
          type: string
        targetFilter:
          description: >-
            filter query to apply on who should receive the form collection
            request
          type: string
        submitFilter:
          description: Filter to for jobs/person that match via relationship
          type: string
        message:
          description: message to include in notification
          type: string
        preview:
          description: Is this a preview?
          type: boolean
    FormStatusUpdateRequest:
      type: object
      required:
        - formIds
        - updateStatus
      properties:
        updateStatus:
          description: New status to update
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - ARCHIVED
        formIds:
          description: Form ids
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    FormDraft:
      type: object
      required:
        - createAt
        - createId
        - data
        - formId
        - id
        - orgId
        - updateAt
        - updateId
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        formId:
          description: form being submitted
          type: string
          example: 588f7ee98f138b19220041a7
        personId:
          description: person form is being filled out on
          type: string
          example: 588f7ee98f138b19220041a7
        data:
          description: draft submission data - map of field names to data
          type: object
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        pendingApprovalChangeId:
          type: string
    FormSubmitRequest:
      type: object
      required:
        - data
        - personId
      properties:
        personId:
          description: person data is being filled out on behalf of
          type: string
        data:
          description: data being submitted
          type: object
          additionalProperties:
            type: object
        blocksData:
          description: data being submitted
          type: object
          additionalProperties:
            type: object
    ResultsFormSummary:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FormSummary'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    FormRender:
      type: object
      required:
        - blocks
        - id
        - label
        - options
        - rerenderQuestionIds
        - responseSensitive
      properties:
        id:
          type: string
        label:
          type: string
        options:
          type: object
          additionalProperties:
            type: object
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/FormRenderBlock'
        rerenderQuestionIds:
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        responseSensitive:
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        authorSensitive:
          type: string
          enum:
            - ANONYMOUS
            - PRIVATE
            - HIGH
            - MANAGER
    FormRenderBlock:
      type: object
      required:
        - id
        - type
      properties:
        type:
          type: string
          enum:
            - QUESTION
            - CONTENT
        id:
          type: string
        name:
          type: string
        question:
          type: string
        dataType:
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        options:
          type: object
          additionalProperties:
            type: object
        value:
          type: object
        required:
          type: boolean
        content:
          type: string
        label:
          type: string
    FormRerender:
      type: object
      required:
        - blocks
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/FormRenderBlock'
    ResultsForm:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Form'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateForm:
      type: object
      required:
        - blocks
        - fields
        - label
        - status
      properties:
        description:
          description: description of form
          type: string
          example: >-
            The Engineering department, where engineers develop new technology
            and products.
        label:
          description: human-readable full name of form
          type: string
          example: 'Health Index: Q2'
        fields:
          description: ordered list of fields being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormField'
        blocks:
          description: ordered list of blocks being collected in this form
          type: array
          items:
            $ref: '#/components/schemas/FormBlock'
        status:
          description: status of the form
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - ARCHIVED
        type:
          description: type of the form
          type: string
          enum:
            - BUILT_IN
            - CUSTOM
        targetType:
          description: >-
            target type that the form can be filled out about (null defaults to
            PERSON for backwards compatibility)
          type: string
          enum:
            - NONE
            - PERSON
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        submitFilter:
          description: >-
            filter that controls which respondents can submit this form. The
            form:submit permission, if present, overrides this filter
          type: string
        responseReadFilter:
          description: >-
            filter that controls who can read the form responses. The
            formResponse:read permission, if present, overrides this filter
          type: string
        useFieldAccess:
          description: >-
            if this option is on, then form response answers will use field
            permissions to determine access to those responses
          type: boolean
        approval:
          description: approval needed, if any approval is required
          type: string
          enum:
            - MANAGER
            - GRAND_MANAGER
        authorSensitive:
          description: >-
            view sensitivity for the author of this form - the level of view
            access required to view the createId and updateId fields. If null,
            the author's identity is always visible as long as the viewer can
            read the form response. If set to PRIVATE, the author's identity is
            stored in ChartHop, but protected such that even users with
            sensitive access cannot access the data. If set to ANONYMOUS, the
            author's identity is not stored in ChartHop at all.
          type: string
          enum:
            - ANONYMOUS
            - PRIVATE
            - HIGH
            - MANAGER
        options:
          description: options, such as notification settings
          type: object
    FormResponsesExportOptions:
      type: object
      properties:
        formId:
          type: string
        assessmentId:
          type: string
        submitPersonFilter:
          type: string
        targetPersonFilter:
          type: string
        fromSubmitAt:
          type: string
        untilSubmitAt:
          type: string
    FormResponseCount:
      type: object
      required:
        - filteredCount
        - totalCount
      properties:
        totalCount:
          type: integer
          format: int32
        filteredCount:
          type: integer
          format: int32
    FormResponseApproval:
      type: object
      properties:
        message:
          type: string
    Media:
      type: object
      required:
        - createAt
        - createId
        - id
        - path
        - type
        - versions
      properties:
        id:
          description: globally unique id of media
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent org id, if the media belongs to an organization
          type: string
          example: 588f7ee98f138b19220041a7
        path:
          description: path to the file in media S3 bucket
          type: string
          example: >-
            588f7ee98f138b19220041a7/2017/02/21/588f7ee98f138b19220041a7/avatar.png
        type:
          description: mime type of file
          type: string
          example: image/jpeg
        bytes:
          description: size of file in bytes
          type: integer
          format: int64
          example: 102342
        width:
          description: width of image in pixels
          type: integer
          format: int32
          example: 600
        height:
          description: height of image in pixels
          type: integer
          format: int32
          example: 300
        versions:
          description: versions/sizes available
          type: array
          uniqueItems: true
          items:
            type: string
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ResultsGuidelineCalculation:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GuidelineCalculation'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateGuideline:
      type: object
      required:
        - appliedField
        - basisType
        - calculationType
        - compReviewId
        - enablePopulateValue
        - flagMode
        - label
        - sourceField
      properties:
        compReviewId:
          description: comp review id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: guideline name
          type: string
          example: Merit Guideline
        budgetPoolId:
          description: the budget pool the guideline is allocated from
          type: string
          example: 588f7ee98f138b19220041a7
        participantsExpr:
          description: CQL filter to determine which employees the guideline applies to
          type: string
          example: is:person and tenure>=12
        appliedField:
          description: the field the guideline applies to
          type: string
          example: '''base'' or ''grantShares'''
        sourceField:
          description: the field the guideline is calculated from
          type: string
          example: '''base'' or ''grantShares'''
        calculationType:
          description: >-
            how does the guideline calculate the target value? e.g. is there a
            range (min/max) or only a target
          type: string
          example: TARGET
          enum:
            - RANGE
            - TARGET
        flagMode:
          description: how does the guideline indicate deviations from the target amount
          type: string
          example: NONE
          enum:
            - DEVIATION_THRESHOLD
            - NONE
        flagDeviationThreshold:
          description: >-
            the threshold (percent) against which deviations from the guideline
            are flagged
          type: number
          example: 0.75
        enablePopulateValue:
          description: >-
            whether or not the target values from the guidelines are
            pre-populated in the given columns
          type: boolean
          example: false
        basisType:
          description: >-
            how an individual guideline value itself is calculated, e.g.
            percentage of the appliedField, fixed amount, or custom CQL
          type: string
          example: CUSTOM
          enum:
            - CUSTOM
            - FIXED
            - CUSTOM_FIXED
            - PERCENTAGE
            - CUSTOM_PERCENTAGE
        basisExpr:
          description: >-
            if basisType.CUSTOM, the custom CQL expression used to generate the
            guideline value
          type: string
          example: 'tenure>12 ? (base * 0.04) : (base * 0.02)'
        basisFieldMatrix:
          $ref: '#/components/schemas/BasisFieldMatrix'
        fixedAmountRange:
          $ref: '#/components/schemas/MoneyRange'
        fixedValueRange:
          $ref: '#/components/schemas/ValueRange'
    CreateJobLevel:
      type: object
      required:
        - label
      properties:
        label:
          description: human-readable name of job level
          type: string
          example: Associate
        code:
          description: job level code
          type: string
          example: BF01
        benchmarkType:
          $ref: '#/components/schemas/EnumValue'
        benchmarkLevel:
          $ref: '#/components/schemas/EnumValue'
    CreateLegalDoc:
      type: object
      required:
        - content
        - date
        - name
      properties:
        name:
          description: human-readable full name of form
          type: string
          example: ChartHop Service Agreement
        content:
          description: legal doc content
          type: string
        date:
          description: content by date
          type: string
          format: date
    PartialMessage:
      type: object
      properties:
        title:
          description: message title
          type: string
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: type of message
          type: string
          enum:
            - CHAT
            - EMAIL
            - WEB
        notificationType:
          description: type of notification (SUCCESS, ERR, ANNOUNCEMENT etc.)
          type: string
          enum:
            - SUCCESS
            - WARN
            - ERROR
            - COMMENT
            - TASK_COMPLETED
            - TASK_ASSIGNED
            - REMINDER
            - ANNOUNCEMENT
            - PROCESS_ERROR
            - PROCESS_DONE
        userId:
          description: user who receives the message
          type: string
          example: 588f7ee98f138b19220041a7
        content:
          description: message content
          type: string
        messageUrl:
          description: link to message content (if applicable)
          type: string
        key:
          description: >-
            key of message if applicable (e.g. product-tour,
            import-complete-{id})
          type: string
        readAt:
          description: read timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        seenAt:
          description: seen timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ResultsMessage:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    RecordMetricRequest:
      type: object
      required:
        - metric
        - value
      properties:
        metric:
          description: the name of the metric, for example kpi.revenue.arr
          type: string
        value:
          description: the numeric value of the metric
          type: number
        date:
          description: >-
            the date that the metric applies to (if blank, will default to
            today)
          type: string
          format: date
    CreateMultiplier:
      type: object
      required:
        - expr
        - label
        - value
      properties:
        label:
          description: human-readable name of multiplier
          type: string
          example: Non-technical
        code:
          type: string
        value:
          description: amount to multiply the initial value by
          type: number
          example: 0.75
        expr:
          description: calculated expression to match against the job
          type: string
          example: department!="Engineering"
        category:
          description: tag to group multipliers together by
          type: string
          example: Location
    NotificationJobData:
      type: object
      properties:
        title:
          type: string
        jobId:
          type: string
        jobUrl:
          type: string
          format: uri
        jobProfileUrl:
          type: string
          format: uri
        atsJobUrl:
          type: string
          format: uri
        atsJobId:
          type: string
        atsJobReq:
          type: string
        atsJobReqField:
          type: string
        openJobsUrl:
          type: string
          format: uri
        department:
          type: string
        location:
          type: string
        manager:
          type: string
        backfill:
          type: string
        hireMgr:
          type: string
        recruiter:
          type: string
        recruitPriority:
          type: string
        recruit:
          type: string
        sensitive:
          type: string
        startDate:
          type: string
          format: date
        estStartDate:
          type: string
          format: date
        announceDate:
          type: string
          format: date
        hireName:
          type: string
    NotificationRequest:
      type: object
      required:
        - jobData
        - templateName
        - toUserIds
      properties:
        templateName:
          description: name of message template
          type: string
        toUserIds:
          description: user ids for users to be notified
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        jobData:
          $ref: '#/components/schemas/NotificationJobData'
        atsName:
          description: name of the ATS system
          type: string
        orgName:
          description: name of the organization
          type: string
        userName:
          description: preferred name of the user
          type: string
        syncSummary:
          description: summary of reason for email
          type: string
        processId:
          description: id of the sync history process
          type: string
    AccessTokenRequest:
      type: object
      required:
        - idToken
        - scope
      properties:
        idToken:
          description: id token
          type: string
        scope:
          description: scope being requested
          type: string
        fromToken:
          description: an existing token
          type: string
    ViewAsRequest:
      type: object
      required:
        - orgId
        - scope
      properties:
        orgId:
          description: org id
          type: string
        personId:
          description: person id
          type: string
        userId:
          description: user id
          type: string
        roleId:
          description: role id
          type: string
        scope:
          description: scope being requested
          type: string
    IdpAccessTokenResponse:
      type: object
      required:
        - id_token
      properties:
        id_token:
          description: id token value (likely a JWT)
          type: string
          example: header.payload.signature
          readOnly: true
    ResultsOnboardStep:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OnboardStep'
        next:
          type: string
    CreateOrgConfig:
      type: object
      required:
        - orgId
      properties:
        orgId:
          description: parent organization id
          type: string
          example: 588f7ee98f138b19220041a7
        hiddenFieldIds:
          description: set of hidden field ids of an org
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        builtinCategoryMap:
          description: set of maps of the custom fields that belongs to a built-in category
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BuiltInCategoryMap'
        builtinFieldConfig:
          description: Org configuration for built-in fields
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BuiltInFieldConfig'
        compensationBandsConfig:
          $ref: '#/components/schemas/CompensationBandsConfig'
        smartCurrencyOptions:
          description: >-
            Options for where to source a currency to use when currency is
            unknown. order specific
          type: array
          example: PERSON_HOME_ADDRESS_COUNTRY
          items:
            $ref: '#/components/schemas/SmartCurrencyOption'
        smartCurrencyDefault:
          description: >-
            The default currency to use when currency is unknown and there are
            no options set in smartCurrencyOptions
          type: string
          example: USD
        requiredJobFields:
          description: Org configuration for required job fields
          type: array
          uniqueItems: true
          items:
            type: string
        scenarioApprovalChains:
          description: Configures which approval chains to use with specific scenario types
          type: object
          additionalProperties:
            type: string
            example: 588f7ee98f138b19220041a7
        isOpenJobRoleApprovalEnabled:
          description: Whether to show open job approval on Open Job Profile page
          type: boolean
        grantConfiguration:
          description: Org Grant Configuration
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GrantAlias'
    ResultsOrg:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Org'
        next:
          type: string
    AppInstallCodeValidateResponse:
      type: object
      required:
        - userId
      properties:
        userId:
          description: userId that created the app install authorization code
          type: string
          example: 64b050ef762ef7deb38ac723
        data:
          description: data associated with the app install authorization code
          type: object
          example: '{ "orgId": "64b05135e1342073d3d45984" }'
        accessToken:
          description: access token issued from app install authorization code
          type: string
    AppInstallCodeValidateRequest:
      type: object
      required:
        - authorizationCode
        - issueAccessToken
      properties:
        authorizationCode:
          description: authorization code token value
          type: string
        issueAccessToken:
          description: >-
            flag indicating if authorization code should be exchanged for an
            access token
          type: boolean
    CreateOrg:
      type: object
      required:
        - currencies
        - estEmployees
        - name
        - onboarding
        - options
        - status
        - timezone
        - type
      properties:
        customerId:
          description: customer for billing processing
          type: string
          example: 588f7ee98f138b19220041a7
        name:
          description: name of organization
          type: string
          example: Acme Corp
        slug:
          description: unique slug of organization
          type: string
          example: acme-corp
        type:
          description: type of organization
          type: string
          example: PRIVATE
          enum:
            - PRIVATE
            - PUBLIC
            - EDU
            - GOV
            - NONPROFIT
            - DEMO
            - TEST
        industry:
          description: industry
          type: string
          example: Software and Internet
        estEmployees:
          description: approximate number of employees
          type: integer
          format: int32
        estRevenue:
          description: approximate amount of revenue
          type: integer
          format: int32
        foundedYear:
          description: year of founding
          type: integer
          format: int32
          example: 1998
        address:
          $ref: '#/components/schemas/Address'
        phone:
          description: company phone number in E.164 format
          type: string
          pattern: ^\+?[1-9]\d{1,14}$
        email:
          description: primary contact email
          type: string
          example: bob@example.com
        url:
          description: website URL
          type: string
          format: uri
        domains:
          description: domains used by this org
          type: array
          items:
            $ref: '#/components/schemas/OrgDomain'
        status:
          description: current status of organization
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DISABLED
        imagePath:
          description: path to full-sized profile image in storage
          type: string
          pattern: ^[a-zA-Z0-9._/-]+$
        currencies:
          description: >-
            types of currencies in use, with the first currency the primary
            currency
          type: array
          items:
            type: string
          maxItems: 20
          minItems: 1
        stock:
          description: stock symbol
          type: string
          example: GOOG
        timezone:
          description: timezone in use
          type: string
          example: America/New_York
        appTime:
          description: >-
            approximate time of day for daily app syncs to run (defaults to 9am
            Eastern time)
          type: string
          example: '09:00'
        zone:
          description: infrastructure zone
          type: integer
          format: int32
          example: 2
        fiscalStart:
          description: >-
            number of months into the calendar year that the fiscal year starts
            (1 = February, 2 = March)
          type: integer
          format: int32
        startDate:
          description: start date of history
          type: string
        sensitiveFields:
          description: map of sensitive field defaults
          type: object
        options:
          $ref: '#/components/schemas/OrgOptions'
        internalOptions:
          description: internal (ChartHop controlled) options
          type: object
        onboardSteps:
          description: list of onboard steps that this Org has completed (or skipped)
          type: array
          items:
            $ref: '#/components/schemas/OnboardStepResult'
        onboarding:
          description: >-
            current onboarding status of an organization, allowing clearing of
            org
          type: boolean
        selfServeImporting:
          description: >-
            completion status of initial import for orgs signed up via self
            serve
          type: boolean
        headCount:
          description: number of total headcount currently in the org
          type: integer
          format: int32
    OrgUsersPersonsCountResponse:
      type: object
      required:
        - invitedCount
        - joinedCount
        - notInvitedCount
      properties:
        joinedCount:
          type: integer
          format: int32
        invitedCount:
          type: integer
          format: int32
        notInvitedCount:
          type: integer
          format: int32
    OrgUsersPersonsResponse:
      type: object
      required:
        - rows
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/UserListRow'
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    UserListRow:
      type: object
      required:
        - inviteStatus
        - isOrgMember
        - name
      properties:
        name:
          $ref: '#/components/schemas/Name'
        inviteStatus:
          type: string
          enum:
            - INVITED
            - JOINED
            - NOT_INVITED
        isOrgMember:
          type: boolean
        userId:
          type: string
        personId:
          type: string
        imagePath:
          type: string
        email:
          type: string
        access:
          type: string
        roleLabel:
          type: string
        expr:
          type: string
        groupIds:
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        loginAt:
          type: integer
          format: int64
        activeAt:
          type: integer
          format: int64
    WelcomeEmailSettings:
      type: object
      required:
        - welcomeEmailBody
        - welcomeEmailButtonLabel
        - welcomeEmailSubject
      properties:
        welcomeEmailSubject:
          description: Subject
          type: string
        welcomeEmailButtonLabel:
          description: Button label
          type: string
        welcomeEmailBody:
          description: Body
          type: string
    TestEmailRequest:
      type: object
      properties:
        welcomeEmailSubject:
          type: string
        welcomeEmailButtonLabel:
          type: string
        welcomeEmailBody:
          type: string
    AgreementRequest:
      type: object
      required:
        - action
        - legalDocId
      properties:
        action:
          description: action taken
          type: string
        legalDocId:
          description: legal document entity id
          type: string
    Policy:
      type: object
      required:
        - id
        - label
      properties:
        description:
          description: description of policy
          type: string
          example: This policy allows compensation to be viewed.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of policy
          type: string
          example: View Compensation
        rules:
          description: the rules that define the policy
          type: array
          items:
            $ref: '#/components/schemas/PolicyRule'
        roles:
          description: the roles the policy is attached to
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Role'
        users:
          description: the users the policy is attached to
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/User'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ResultsPolicy:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        next:
          type: string
    CreatePolicy:
      type: object
      required:
        - label
      properties:
        description:
          description: description of policy
          type: string
          example: This policy allows compensation to be viewed.
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of policy
          type: string
          example: View Compensation
        rules:
          description: the rules that define the policy
          type: array
          items:
            $ref: '#/components/schemas/PolicyRule'
        copiedFromId:
          description: policy id that was copied (empty if original)
          type: string
          example: 588f7ee98f138b19220041a7
    PartialPolicy:
      type: object
      properties:
        description:
          description: description of policy
          type: string
          example: This policy allows compensation to be viewed.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of policy
          type: string
          example: View Compensation
        rules:
          description: the rules that define the policy
          type: array
          items:
            $ref: '#/components/schemas/PolicyRule'
        copiedFromId:
          description: policy id that was copied (empty if original)
          type: string
          example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    EntityAction:
      type: object
      required:
        - entityToAction
      properties:
        entityToAction:
          type: object
          additionalProperties:
            type: array
            uniqueItems: true
            items:
              type: string
    CustomerDetails:
      type: object
      required:
        - actionRequired
      properties:
        actionRequired:
          description: Action required by the client
          type: array
          items:
            type: string
        partnershipApp:
          description: Partnership App
          type: string
    OrgStockData:
      type: object
      properties:
        strikePrice:
          type: number
        grantPrice:
          type: number
        totalShares:
          type: integer
          format: int64
    PreloadResponse:
      type: object
      required:
        - categories
        - compBands
        - featureAccess
        - fields
        - forms
        - groups
        - jobs
        - org
        - orgs
        - persons
        - questions
        - scenarios
        - user
        - users
      properties:
        org:
          $ref: '#/components/schemas/Org'
        orgs:
          type: array
          items:
            $ref: '#/components/schemas/Org'
        user:
          $ref: '#/components/schemas/User'
        role:
          $ref: '#/components/schemas/Role'
        viewUser:
          $ref: '#/components/schemas/User'
        viewRole:
          $ref: '#/components/schemas/Role'
        groups:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/Scenario'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
        exchangeRate:
          $ref: '#/components/schemas/ExchangeRate'
        stock:
          $ref: '#/components/schemas/OrgStockData'
        job:
          $ref: '#/components/schemas/Job'
        customer:
          $ref: '#/components/schemas/Customer'
        customerDetails:
          $ref: '#/components/schemas/CustomerDetails'
        featureAccess:
          type: array
          items:
            type: string
            enum:
              - ATS_SYNC
              - COMPENSATION_REVIEW
              - CUSTOM_FIELD
              - CUSTOM_FIELD_READONLY
              - CUSTOM_FORM
              - CUSTOM_PROFILE_TAB
              - CUSTOM_ROLE
              - MULTI_PAYROLL
              - PERFORMANCE_REVIEW
              - REPORT
              - REPORT_READONLY
              - SCENARIO
              - SIMPLE_WORKFLOWS
              - SURVEY
              - TABLE
              - TEMPLATE
              - WORKDAY_ADAPTIVE
              - PAYROLL_OUTBOUND
              - APPROVAL_WORKFLOWS
              - CONTENT
              - IDENTITY_OUTBOUND
              - ONBOARDING_OFFBOARDING
              - TIMEOFF
        enabledFeatureOptions:
          type: array
          items:
            $ref: '#/components/schemas/FeatureAccessOption'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        categorySort:
          $ref: '#/components/schemas/CategorySort'
        orgConfig:
          $ref: '#/components/schemas/OrgConfig'
        jobs:
          type: array
          items:
            type: object
        persons:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        compBands:
          type: array
          items:
            $ref: '#/components/schemas/CompBand'
        uiAccess:
          type: array
          uniqueItems: true
          items:
            type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    CreateProcess:
      type: object
      required:
        - label
        - options
        - orgId
        - runUserId
        - status
        - type
      properties:
        orgId:
          description: parent org id
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable label that identifies this process
          type: string
        type:
          description: process type
          type: string
        status:
          description: current status of process
          type: string
          enum:
            - PENDING
            - RUNNING
            - DONE
            - ERROR
        filePath:
          description: data file path
          type: string
        runUserId:
          description: user id who is running the process
          type: string
          example: 588f7ee98f138b19220041a7
        parentProcessId:
          description: process id of parent process
          type: string
          example: 588f7ee98f138b19220041a7
        message:
          description: status or error message
          type: string
        progress:
          description: percent progress so far
          type: number
          format: double
        internalError:
          description: internal-only error message
          type: string
        options:
          description: options passed to the process
          type: object
        results:
          description: results summary for the process
          type: object
          additionalProperties:
            type: object
        logDataList:
          description: list of log data that occurred during running of this process
          type: array
          items:
            $ref: '#/components/schemas/LogData'
        state:
          description: process-specific state data
          type: object
        appId:
          description: app id of the process
          type: string
          example: 588f7ee98f138b19220041a7
        uuid:
          description: unique ID of the process at queue time
          type: string
          example: 84db3c6e-0877-4436-8af1-768c06b29586
    AppProcessStatus:
      type: object
      properties:
        appLastSync:
          $ref: '#/components/schemas/Process'
        appLastSuccessSync:
          $ref: '#/components/schemas/Process'
    ProcessEvent:
      type: object
      required:
        - at
        - type
        - updates
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - HIRE
            - UPDATE
            - CREATE_PERSON
            - ERROR
            - INBOUND
            - CHANGE
            - OUTBOUND_CREATE
            - OUTBOUND_UPDATE
            - OUTBOUND_DELETE
            - INITIATING_CREATE
            - INITIATING_UPDATE
            - INITIATING_DELETE
        entityData:
          type: object
          additionalProperties:
            type: object
        updates:
          type: array
          items:
            $ref: '#/components/schemas/ProcessEventUpdate'
        at:
          type: integer
          format: int64
    ProcessEventResponse:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/ProcessEvent'
    ProcessEventUpdate:
      type: object
      required:
        - payload
        - type
      properties:
        type:
          type: string
          enum:
            - FIELD
            - CONTACT
            - COMP
            - ERROR
        payload:
          $ref: '#/components/schemas/ProcessEventUpdatePayload'
    ProcessEventUpdatePayload:
      type: object
      properties:
        key:
          type: string
        value:
          type: object
        currency:
          type: string
        contactFormat:
          type: string
          enum:
            - PHONE
            - EMAIL
            - ID
        errorMessage:
          type: string
    ResultsProcess:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Process'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsProduct:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateProduct:
      type: object
      required:
        - features
        - name
        - salesforceProductId
        - stripeProductId
      properties:
        name:
          description: name of product
          type: string
          example: Compensation Reviews
        sku:
          description: unique sku of product
          type: string
          example: compensation-reviews
        salesforceProductId:
          description: corresponding product id in salesforce
          type: string
          example: 01t4T000000RpgKQAS
        stripeProductId:
          description: corresponding product id in stripe
          type: string
          example: prod_12345ABC
        features:
          description: set of features this product has access to
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - ATS_SYNC
              - COMPENSATION_REVIEW
              - CUSTOM_FIELD
              - CUSTOM_FIELD_READONLY
              - CUSTOM_FORM
              - CUSTOM_PROFILE_TAB
              - CUSTOM_ROLE
              - MULTI_PAYROLL
              - PERFORMANCE_REVIEW
              - REPORT
              - REPORT_READONLY
              - SCENARIO
              - SIMPLE_WORKFLOWS
              - SURVEY
              - TABLE
              - TEMPLATE
              - WORKDAY_ADAPTIVE
              - PAYROLL_OUTBOUND
              - APPROVAL_WORKFLOWS
              - CONTENT
              - IDENTITY_OUTBOUND
              - ONBOARDING_OFFBOARDING
              - TIMEOFF
        featureOptions:
          description: map of options for the feature
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FeatureAccessOption'
    ResultsProfileTabSummary:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTabSummary'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ProfileTabSummary:
      type: object
      required:
        - id
        - isBuiltin
        - label
      properties:
        id:
          type: string
        label:
          type: string
        isBuiltin:
          type: boolean
        isSensitive:
          type: boolean
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/Block'
    ResultsProfileTabResponseCard:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTabResponseCard'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateProfileTab:
      type: object
      required:
        - blocks
        - label
        - sort
        - status
      properties:
        label:
          description: human-readable name of profile tab
          type: string
          example: Performance
        blocks:
          description: ordered list of blocks contained by profile tab
          type: array
          items:
            $ref: '#/components/schemas/Block'
        status:
          description: status of the profile tab
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        targetFilter:
          description: filter that controls on which profiles this tab will appear
          type: string
        readFilter:
          description: >-
            filter that controls which viewers can read this profile tab. The
            profileTab:read permission, if present, overrides this filter
          type: string
        sort:
          description: sort order
          type: integer
          format: int32
    ResultsProfileTab:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTab'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateQueryToken:
      type: object
      required:
        - params
        - type
      properties:
        type:
          description: query type
          type: string
        params:
          description: query params
          type: object
    ResultsQuestion:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateQuestion:
      type: object
      required:
        - question
      properties:
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        question:
          description: text of the question
          type: string
          example: What is your favorite color?
        fieldId:
          description: >-
            if the question is linked to a field, the id of that field. Any
            question responses will be automatically saved to the field
          type: string
        type:
          description: datatype of the question
          type: string
          enum:
            - ADDRESS
            - BOOLEAN
            - COMP
            - COMPOUND
            - COMP_BAND
            - CONTACTS
            - CURRENCY
            - DATE
            - DECIMAL
            - ELAPSED_DAYS
            - ELAPSED_MONTHS
            - ELAPSED_YEARS
            - EMAIL
            - ENUM
            - ENUM_EXPR
            - ENUM_MULTI
            - ENUM_SCALE
            - EXPR
            - FILE
            - GROUP
            - GROUPS
            - GROUP_ASSIGNMENTS
            - GROUP_TYPE
            - IMAGE
            - INTEGER
            - JOB
            - JOBS
            - JOB_TIER
            - LIST
            - MONEY
            - NAME
            - OBJECT
            - PAY_INTERVAL
            - PERCENT
            - PERSON
            - PERSONS
            - PHONE
            - STOCKGRANT
            - STRING
            - TABLE_REF
            - TEXT
            - TIMEOFF
            - TIMESTAMP
            - TRACKED_GROUP
            - URL
            - USER
            - VARIABLE_COMP
            - VARIABLE_COMPS
        plural:
          description: plural type of the question datatype (either SINGLE, LIST, or SET)
          type: string
          enum:
            - SINGLE
            - LIST
            - SET
        values:
          description: possible values (enum type only)
          type: array
          items:
            $ref: '#/components/schemas/EnumValue'
        options:
          description: validation options
          type: object
    ResultsReportChart:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ReportChart'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    LabelColor:
      type: object
      required:
        - color
        - label
      properties:
        label:
          description: human-readable label for the value
          type: string
        color:
          description: suggested color for the value
          type: string
    PairLocalDateLocalDate:
      type: object
      required:
        - first
        - second
      properties:
        first:
          type: string
          format: date
        second:
          type: string
          format: date
    ReportDateInterval:
      type: object
      required:
        - endDate
        - startDate
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        partialStartDate:
          type: string
          format: date
        partialEndDate:
          type: string
          format: date
    ReportGroupByDimension:
      type: object
      required:
        - keys
      properties:
        keys:
          description: list of keys appearing in the groupBy
          type: array
          items:
            $ref: '#/components/schemas/ReportGroupByKey'
    ReportGroupByKey:
      type: object
      required:
        - color
        - id
        - label
      properties:
        id:
          description: unique string identifier for this key
          type: string
        color:
          description: color for this key, prior to any overrides
          type: string
        label:
          description: label for this key, prior to any overrides
          type: string
    ReportMetricCollection:
      type: object
      required:
        - byQuery
        - changes
        - jobs
        - persons
        - relevantFields
      properties:
        collectedThrough:
          $ref: '#/components/schemas/PairLocalDateLocalDate'
        relevantFields:
          type: array
          uniqueItems: true
          items:
            type: string
        changes:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        jobs:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        persons:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        byQuery:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReportMetricCollectionItem'
        date:
          type: string
          format: date
    ReportMetricCollectionItem:
      type: object
      required:
        - changes
        - jobs
        - persons
      properties:
        changes:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        jobs:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        persons:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    ReportMetricsReturnType:
      type: object
      required:
        - metricCollection
        - result
      properties:
        result:
          $ref: '#/components/schemas/ReportResult'
        metricCollection:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReportMetricCollection'
    ReportQueryResult:
      type: object
      required:
        - series
      properties:
        version:
          description: version used to generate the results
          type: integer
          format: int32
        series:
          description: list of series results
          type: array
          items:
            $ref: '#/components/schemas/ReportSeriesResult'
        content:
          description: >-
            the results of rendering the content block, if a content template
            was used in the query
          type: string
        groupBys:
          description: list of group-by dimensions with default values
          type: array
          items:
            $ref: '#/components/schemas/ReportGroupByDimension'
        dateIntervals:
          description: list of group-by dimensions with default values
          type: array
          items:
            $ref: '#/components/schemas/ReportDateInterval'
    ReportResult:
      type: object
      required:
        - createAt
        - createId
        - endDate
        - id
        - key
        - options
        - orgId
        - queries
        - results
        - startDate
        - status
      properties:
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent org id
          type: string
          example: 588f7ee98f138b19220041a7
        key:
          description: identifying key for this report result
          type: string
          example: 588f7ee98f138b19220041a7
        startDate:
          description: date that the report result interval begins, inclusive
          type: string
          format: date
        endDate:
          description: date that the report result interval ends, exclusive
          type: string
          format: date
        options:
          description: date that the report result interval ends, exclusive
          type: object
        queries:
          description: list of queries that were requested
          type: array
          items:
            $ref: '#/components/schemas/ReportQuery'
        results:
          description: list of the results, one per query that was requested
          type: array
          items:
            $ref: '#/components/schemas/ReportQueryResult'
        buildStartAt:
          description: start time of last build
          type: string
          example: '2017-01-24T13:57:52Z'
        buildEndAt:
          description: end time of last build
          type: string
          example: '2017-01-24T13:57:52Z'
        message:
          description: status or error message
          type: string
        progress:
          description: percent progress so far
          type: number
          format: double
        viewId:
          description: viewer user id
          type: string
          example: 588f7ee98f138b19220041a7
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        status:
          description: status of the report result
          type: string
          enum:
            - OK
            - LOCKED
            - RETRY
            - ERROR
        reportId:
          description: corresponding report id for the built query
          type: string
        chartId:
          description: corresponding chart id for the built query
          type: string
    ReportSeriesResult:
      type: object
      required:
        - color
        - data
        - format
        - isIntervalMetric
        - label
      properties:
        label:
          description: human-readable label for the series
          type: string
        color:
          description: suggested color for the series
          type: string
        format:
          description: number format (currently 'number', 'money', 'percent' allowed)
          type: string
        data:
          description: array of numbers in the series
          type: array
          items:
            type: number
        xAxis:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LabelColor'
        isIntervalMetric:
          description: >-
            true if the metric being returned is reporting on the entire
            interval (includes the intervalFrom or intervalUntil metric), false
            if just the last date in the interval
          type: boolean
    CreateReportChart:
      type: object
      required:
        - label
        - query
        - sort
        - type
      properties:
        label:
          description: chart label
          type: string
          example: Headcount Report
        type:
          description: chart type
          type: string
          enum:
            - LINE
            - AREA
            - STACKED
            - BAR
            - VERTICAL_BAR
            - HORIZONTAL_BAR
            - PIE
            - TABLE
            - TABLE_CROSSTAB
            - SINGLE_METRIC
            - HEADER
            - TEXT
        filter:
          description: filter that applies to this chart
          type: string
          example: department='Engineering'
        filterOverride:
          description: whether the chart filter overrides the global filter
          type: boolean
        query:
          $ref: '#/components/schemas/ReportQuery'
        sort:
          description: sort order
          type: integer
          format: int32
        isAdvancedQueryMode:
          description: whether the chart configuration is using advanced mode
          type: boolean
    ReportDataStreamResults:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Report'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ReportCount:
      type: object
      required:
        - count
      properties:
        count:
          type: integer
          format: int64
    CreateReport:
      type: object
      required:
        - label
      properties:
        description:
          description: report description
          type: string
          example: This is a report on headcount etd
        label:
          description: report label
          type: string
          example: Headcount Report
        filter:
          description: filter automatically applied to every chart in this report
          type: string
          example: department:engineering
        share:
          description: sharing settings of report
          type: string
          enum:
            - NORMAL
            - FULL
        sensitive:
          description: sensitivity level of report
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: >-
            users who are specifically granted permission to view or edit this
            report
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        chartIds:
          description: list of charts in this report
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    ResultsRole:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        next:
          type: string
    Role:
      type: object
      required:
        - id
        - label
      properties:
        description:
          description: description of role
          type: string
          example: >-
            This role is able to create and update new job data for the
            engineering department.
        id:
          description: globally unique id
          type: string
          example: 588f7ee98f138b19220041a7
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of role
          type: string
          example: Engineering People Manager
        policyIds:
          description: the policies that define the role
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        policies:
          description: the policies attached to the role
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Policy'
        users:
          description: the users the role is attached to
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/User'
        createId:
          description: created by user id
          type: string
          example: 588f7ee98f138b19220041a7
        createAt:
          description: created timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        updateId:
          description: last updated by user id
          type: string
          example: 588f7ee98f138b19220041a7
        updateAt:
          description: last updated timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    CreateRole:
      type: object
      required:
        - label
      properties:
        description:
          description: description of role
          type: string
          example: >-
            This role is able to create and update new job data for the
            engineering department.
        orgId:
          description: parent organization id (empty if global)
          type: string
          example: 588f7ee98f138b19220041a7
        label:
          description: human-readable full name of role
          type: string
          example: Engineering People Manager
        policyIds:
          description: the policies that define the role
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
    ResultsScenario:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Scenario'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateScenario:
      type: object
      required:
        - name
      properties:
        description:
          description: scenario description
          type: string
          example: Q4 Conservative Plan
        name:
          description: scenario name
          type: string
          example: Q4 Conservative Plan
        startDate:
          description: date that this scenario diverges from primary
          type: string
          example: '2017-01-15'
        status:
          description: status of scenario
          type: string
          enum:
            - OPEN
            - INACTIVE
            - MERGED
            - DRAFT
            - ARCHIVED
        shareAccess:
          description: users who are specifically granted permission to this scenario
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
        type:
          description: Type of scenario to be created
          type: string
          enum:
            - GENERAL
            - COMP
            - PROMOTION
            - TERMINATE
            - CREATE_JOB
            - UPDATE_JOB
            - BUDGET
        startDateFixed:
          description: >-
            whether or not the start date should stay fixed in time, or update
            to today's date as time passes
          type: string
          enum:
            - FIXED
            - TODAY
        query:
          description: >-
            Query for selecting which people/jobs are initially included in the
            scenario (only applies to promotion scenarios)
          type: string
        validJobIdSet:
          description: This scenario changes are restricted to the following jobIds
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        entityId:
          description: The entity this scenario is associated with
          type: string
        entityType:
          description: The type of entity associated with this scenario
          type: string
          enum:
            - COMP_REVIEW
        sharedViewConfig:
          description: View configurations associated with this scenario
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScenarioSharedViewConfig'
        budget:
          $ref: '#/components/schemas/Money'
        costCalc:
          description: CQL used to calculate the budget allocation in the scenario
          type: string
    AdjustScenarioDateRequest:
      type: object
      properties:
        date:
          description: date to use as new start date
          type: string
          format: date
        days:
          description: number of days to adjust forward
          type: integer
          format: int32
    CombineScenarioRequest:
      type: object
      required:
        - scenarioIds
      properties:
        scenarioIds:
          description: scenarios to combine
          type: array
          uniqueItems: true
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        copyOnly:
          type: boolean
        useScenarioDateForChanges:
          type: boolean
    ScenarioMetadata:
      type: object
      required:
        - access
        - canChange
        - changeCount
        - cost
        - scenarioId
      properties:
        scenarioId:
          description: scenario id
          type: string
          example: 588f7ee98f138b19220041a7
        changeCount:
          description: number of changes contained in scenario
          type: integer
          format: int32
        jobCount:
          description: number of job changes contained in scenario
          type: integer
          format: int32
        access:
          description: access information on the user for the entity
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
        canChange:
          description: whether user can edit the scenario
          type: boolean
        cost:
          $ref: '#/components/schemas/CostImpact'
        calcEndAt:
          description: most recent summary calculation ended at timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    SearchResult:
      type: object
      required:
        - entity
        - entityId
        - entityType
        - score
        - searchFields
      properties:
        description:
          type: string
        entity:
          type: object
        entityId:
          type: string
        entityType:
          type: string
        searchFields:
          type: array
          items:
            type: string
        score:
          type: integer
          format: int32
        name:
          type: string
        imagePath:
          type: string
    SearchResultResponse:
      type: object
      properties:
        orgs:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        persons:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        functions:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        users:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        appUsers:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        compBands:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
    OkResponse:
      type: object
      required:
        - ok
      properties:
        ok:
          description: whether the status is okay
          type: boolean
          example: true
    ResultsStockPrice:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/StockPrice'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    ResultsStripeProduct:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/StripeProduct'
        next:
          type: string
    ResultsPlan:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        next:
          type: string
    SetupIntent:
      type: object
      required:
        - clientSecret
      properties:
        clientSecret:
          description: Secret of setup_intent object created
          type: string
          example: st_ersasdfasdf
    StripeProduct:
      type: object
      required:
        - label
        - stripeId
      properties:
        stripeId:
          description: unique Stripe identifier for this product
          type: string
        label:
          description: human-readable nickname for this product
          type: string
    ResultsTable:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Table'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateTable:
      type: object
      required:
        - effectiveDated
        - name
      properties:
        name:
          description: name of table
          type: string
          example: budget-data
        label:
          description: human readable label for the table
          type: string
          example: Budget Data
        effectiveDated:
          description: >-
            whether or not the table is time tracked with effective dates
            (allows time travel or not). If false, then the values set in the
            table will be the same across all dates.
          type: boolean
        sensitive:
          description: >-
            base sensitivity of this table and entities in it -- should be
            either ORG or HIGH
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        shareAccess:
          description: users who are specifically granted permission to this table
          type: array
          items:
            $ref: '#/components/schemas/ShareAccess'
    CreateTaskConfig:
      type: object
      required:
        - entityId
        - pastDueAction
        - type
      properties:
        description:
          description: >-
            description for all tasks associated with the config that should be
            used in notifications
          type: string
        assessmentId:
          description: parent assessment id that this task config belongs to
          type: string
          example: 588f7ee98f138b19220041a7
        parentEntityId:
          description: >-
            parent entity id that this task config belongs to, should be used
            with entityId
          type: string
          example: 588f7ee98f138b19220041a7
        entityId:
          description: the primary entity being referenced by the task config
          type: string
          example: 588f7ee98f138b19220041a7
        type:
          description: type of task generated by the task config
          type: string
          enum:
            - FORM_SUBMIT
            - CHANGE_APPROVE
            - TIMEOFF_APPROVE
            - SCENARIO_CHANGES_APPROVE
            - SCENARIO_CHANGES_CREATE
            - ORG_IMPORT
            - COMP_REVIEW_APPROVAL_SUBMIT
            - SCENARIO_APPROVAL_SUBMIT
            - APPROVAL_CHAIN_UPDATE_FALLBACK_APPROVER
            - ACTION
        dueDate:
          $ref: '#/components/schemas/DueDate'
        pastDueAction:
          description: sets pastDueAction on the task when it's generated
          type: string
          enum:
            - NONE
            - SET_EXPIRED
        isSkippable:
          description: sets isSkippable on the task
          type: boolean
        label:
          description: >-
            human-readable label that should be used for all tasks associated
            with the config as the task name
          type: string
        deleteId:
          description: deleted by user id
          type: string
          example: 588f7ee98f138b19220041a7
        deleteAt:
          description: deleted timestamp
          type: string
          example: '2017-01-24T13:57:52Z'
    ResultsTask:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    TaskRemindRequest:
      type: object
      required:
        - taskIds
      properties:
        taskIds:
          type: array
          items:
            type: string
            example: 588f7ee98f138b19220041a7
        message:
          type: string
        messageChannel:
          $ref: '#/components/schemas/MessageChannelConfig'
    ResultsTemplate:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Template'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateTemplate:
      type: object
      required:
        - content
        - name
      properties:
        tags:
          description: tags to organize the purpose of the template
          type: array
          items:
            type: string
        description:
          description: description of template
          type: string
        name:
          description: template name, must be unique to organization
          type: string
        content:
          description: template content
          type: string
        stylesheet:
          description: template inline stylesheet
          type: string
        type:
          description: type of template
          type: string
          enum:
            - DOCUMENT
            - EMAIL
        filename:
          description: document filename CQL
          type: string
    TemplateRenderResponse:
      type: object
      required:
        - content
      properties:
        content:
          type: string
    TemplatePreviewRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
        stylesheet:
          type: string
    GenerateTemplateRequest:
      type: object
      required:
        - saveToFiles
        - sendToManagers
        - sendToPersons
        - useScenarioChanges
      properties:
        filter:
          type: string
        emailSubject:
          type: string
        emailMessage:
          type: string
        saveToFiles:
          type: boolean
        fileSensitive:
          type: string
          enum:
            - GLOBAL
            - ORG
            - ORG_OTHER
            - PERSONAL_DEMOG
            - PERSONAL_BIRTH
            - PERSONAL_CONTACT
            - PERSONAL_PRIVATE
            - SENSITIVE_BIRTH
            - SENSITIVE_CONTACT
            - TIMEOFF
            - COMP_CASH
            - COMP_EQUITY
            - SENSITIVE
            - PERSONAL
            - MANAGER
            - GRAND_MANAGER
            - DIRECT
            - PEERS
            - HIGH
            - PRIVATE
        fileField:
          type: string
        sendToManagers:
          type: boolean
        sendToPersons:
          type: boolean
        scenarioId:
          type: string
        date:
          type: string
          format: date
        useScenarioChanges:
          type: boolean
        changeGroupingType:
          type: string
          enum:
            - PRIMARY
            - SCENARIO
            - COMP_REVIEW
        changeGroupingId:
          type: string
    TimeOffRequest:
      type: object
      required:
        - endDate
        - startDate
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        personId:
          type: string
        typeDescription:
          type: string
        note:
          type: string
    ResultsTimeOffEntity:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffEntity'
        next:
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/ResultsAccess'
    CreateTimeOffEntity:
      type: object
      required:
        - endDate
        - personId
        - startDate
      properties:
        personId:
          description: person taking the time off
          type: string
          example: 588f7ee98f138b19220041a7
        externalId:
          description: external identifier, if time off synced from external system
          type: string
          example: 588f7ee98f138b19220041a7
        startDate:
          description: start date of time off, inclusive
          type: string
          format: date
        endDate:
          description: end date of time off, inclusive
          type: string
          format: date
        days:
          description: number of days used
          type: number
        hours:
          description: number of hours used
          type: number
        typeDescription:
          description: type of time off
          type: string
        note:
          description: notes on the time off
          type: string
        approval:
          description: approval status of the time off
          type: string
          enum:
            - APPROVED
            - PENDING
            - CANCELLED
            - REJECTED
            - SUPERSEDED
    TimeOffApproval:
      type: object
      properties:
        message:
          type: string
    ChangePasswordRequest:
      type: object
      required:
        - newPassword
      properties:
        newPassword:
          description: password to change to
          type: string
        oldPassword:
          description: password to change from
          type: string
    EmailRequest:
      type: object
      required:
        - email
      properties:
        email:
          description: email address
          type: string
          example: example@example.com
    WebAuthnRequest:
      type: object
      required:
        - credentialResponse
        - requestId
      properties:
        requestId:
          type: string
        credentialResponse:
          type: string
    GroupGraphCount:
      type: object
      required:
        - groupCount
        - jobCount
        - personCount
      properties:
        jobCount:
          description: number of jobs
          type: number
        personCount:
          description: number of persons
          type: number
        groupCount:
          description: number of groups
          type: number
    GroupGraphResult:
      type: object
      required:
        - group
        - groupPositions
        - jobs
        - underCount
      properties:
        group:
          description: group data
          type: object
          additionalProperties:
            type: object
        jobs:
          description: job data
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        groupPositions:
          description: positions available within the group
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        parent:
          $ref: '#/components/schemas/GroupParent'
        underCount:
          $ref: '#/components/schemas/GroupGraphCount'
    GroupGraphResults:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GroupGraphResult'
        nextId:
          type: string
    GroupParent:
      type: object
      required:
        - id
        - type
      properties:
        id:
          description: globally unique id
          type: string
        type:
          description: type of the parent
          type: string
          example: GROUP
          enum:
            - GROUP
            - JOB
    GroupCount:
      type: object
      required:
        - orphanedGroupCount
        - relationshipGroupCount
        - totalGroupCount
      properties:
        totalGroupCount:
          description: total number of groups
          type: number
        relationshipGroupCount:
          description: number of groups that are part of a larger group tree
          type: number
        orphanedGroupCount:
          description: number of orphaned groups that do not belong to any group tree
          type: number
    OrgCount:
      type: object
      required:
        - departingCount
        - jobCount
        - personCount
        - startingCount
      properties:
        jobCount:
          type: integer
          format: int64
        personCount:
          type: integer
          format: int64
        startingCount:
          type: integer
          format: int64
        departingCount:
          type: integer
          format: int64
        groupCount:
          type: integer
          format: int64
    BulkJobUpdateRequest:
      type: object
      required:
        - date
        - updates
      properties:
        updates:
          description: list of update operations to perform
          type: array
          items:
            $ref: '#/components/schemas/UpdateOperation'
        date:
          description: date of update
          type: string
          format: date
        scenarioId:
          description: scenario id
          type: string
        note:
          description: note for update
          type: string
    UpdateOperation:
      type: object
      required:
        - jobId
        - update
      properties:
        jobId:
          type: string
        update:
          type: object
          additionalProperties:
            type: object
    GraphCount:
      type: object
      required:
        - sibling
        - siblingUnfilled
        - under
        - underUnfilled
      properties:
        under:
          type: integer
          format: int32
        sibling:
          type: integer
          format: int32
        underUnfilled:
          type: integer
          format: int32
        siblingUnfilled:
          type: integer
          format: int32
    GraphCountsResponse:
      type: object
      required:
        - counts
        - jobToManagerMap
        - managerToJobMap
      properties:
        counts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GraphCount'
        managerToJobMap:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
              example: 588f7ee98f138b19220041a7
        jobToManagerMap:
          type: object
          additionalProperties:
            type: string
            example: 588f7ee98f138b19220041a7
    Geocode:
      type: object
      required:
        - address
        - id
        - line
        - updateAt
      properties:
        id:
          type: string
        line:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        geo:
          $ref: '#/components/schemas/Geopoint'
        updateAt:
          type: integer
          format: int64
    AppRunInstalledAppRequest:
      type: object
      additionalProperties:
        type: object
    AssessmentBulkDeleteRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    AssessmentBulkDuplicateAssessmentsRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    ChangeAmendScenarioChangeRequest:
      type: object
      additionalProperties:
        type: object
    CompreviewDeleteBulkCompReviewsRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    CompreviewCreateBulkDuplicateRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    CompreviewExportChangesRequest:
      type: object
      additionalProperties:
        type: object
    EventCreateInboundNotificationRequest:
      type: object
      additionalProperties:
        type: object
    EventCreateOutboundEventRequest:
      type: object
      additionalProperties:
        type: object
    ExchangerateBulkUpdateCustomRatesRequest:
      type: array
      items:
        $ref: '#/components/schemas/UpdateExchangeRate'
    ExportOrgChartToPowerpointRequest:
      type: object
    ExportPdfReviewRequest:
      type: object
      additionalProperties:
        type: object
    ExportCsvCustomFieldsRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    FieldRemoveRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    FileUploadNewFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
    FormDeleteFormByIdRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    FormSubmitFormDraftRequest:
      type: object
      additionalProperties:
        type: object
    FormresponseUpdateAnswersMetadataRequest:
      type: object
      additionalProperties:
        type: object
    ImportCsvDataWithColumnMatchRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        userDefinedFieldAliases:
          description: user defined field aliases for column matching
          type: object
    MessageMarkMessagesAsReadRequest:
      type: array
      items:
        $ref: '#/components/schemas/PartialMessage'
    OauthAuthorizeUserTokenRequest:
      type: object
      properties:
        grant_type:
          description: >-
            Type of grant; 'password', 'refresh_token', 'authorization_code'
            supported
          type: string
        username:
          description: Username to authenticate
          type: string
        password:
          description: Password to authenticate
          type: string
        scope:
          description: Requested access scope or scopes (space separated)
          type: string
        code:
          description: Authorization code
          type: string
        redirect_uri:
          description: Redirect URI
          type: string
          format: uri
        client_id:
          description: Client id
          type: string
        refresh_token:
          description: Refresh token
          type: string
    ProcessCreatePendingProcessRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        state:
          type: object
    ProcessUpdateProcessStateRequest:
      type: object
      additionalProperties:
        type: object
    ProcessResumeProcessWithUserIdRequest:
      type: object
      additionalProperties:
        type: object
    ReportBulkDeleteRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    ReportDuplicateReportsRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    SamlPerformSsoAssertionRequest:
      type: object
      properties:
        SAMLResponse:
          description: SAML Response
          type: string
        RelayState:
          description: Relay State
          type: string
    ScenarioBulkArchiveScenariosRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    ScenarioDeleteBulkScenariosRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    ScenarioUnarchiveSetOfScenariosRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    StripeProcessWebhookEventsRequest:
      type: string
    TaskDeleteBulkTasksRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    TemplateBulkDeleteRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    TemplateCreateBulkDuplicateRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    UserRevokeAccessTokensRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    UserAssignRoleToMultipleRequest:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UpdateUser'
    UserInviteMultipleNewUsersRequest:
      type: array
      items:
        $ref: '#/components/schemas/CreateUser'
    GroupMarkMultipleAsDeletedRequest:
      type: array
      items:
        type: string
        example: 588f7ee98f138b19220041a7
    PositionImportCsvDataWithFilePathRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
    ChangeCheckApproverEligibilityResponse:
      type: boolean
    CompreviewListRequestResponsesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApprovalRequestCompReviewResponse'
    EventCreateInboundNotificationResponse:
      type: string
      example: 588f7ee98f138b19220041a7
    EventCreateOutboundEventResponse:
      type: string
      example: 588f7ee98f138b19220041a7
    ExchangerateOrgCustomExchangeRatesHistoryResponse:
      type: array
      items:
        $ref: '#/components/schemas/ExchangeRate'
    QueryQueryTokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/QueryToken'
    ReportTimeseriesDataArbitraryQueriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ReportResult'
    ReportGetAllReportChartsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ReportResult'
    UserInviteMultipleNewUsersResponse:
      type: array
      items:
        type: object
    GroupGetByIdResponse:
      type: object
      additionalProperties:
        type: object
    JobFindInOrganizationResponse:
      type: object
      properties: {}
      example: {}
    JobCreateNewJobResponse:
      type: object
      properties: {}
      example: {}
    PersonGetByIdResponse:
      type: object
      properties: {}
      example: {}
    PersonCreateNewPersonResponse:
      type: object
      properties: {}
      example: {}
    PersonGetGeocodesForOrgResponse:
      type: array
      items:
        $ref: '#/components/schemas/Geocode'
    PositionDeletePositionResponse:
      type: object
      properties: {}
      example: {}
    PositionGetByIdResponse:
      type: object
      additionalProperties:
        type: object
    PositionUpdatePositionDetailsResponse:
      type: object
      properties: {}
      example: {}
    PositionListResponse:
      type: object
      additionalProperties:
        type: object
    PositionCreateNewPositionResponse:
      type: object
      properties: {}
      example: {}
    PositionGetHistoryByIdResponse:
      type: object
      additionalProperties:
        type: object
    PositionDeleteAndPurgeResponse:
      type: object
      properties: {}
      example: {}
    PositionRemoveJobFromPositionResponse:
      type: object
      properties: {}
      example: {}
    PositionUpdateJobDatesOnPositionResponse:
      type: object
      properties: {}
      example: {}
    PositionAssignJobToPositionResponse:
      type: object
      properties: {}
      example: {}
