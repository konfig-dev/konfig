openapi: 3.0.3
info:
  title: Hive REST API
  description: >-
    We help teams move faster. Hive's best-in-class project management platform
    includes all of the tools you need and want - and if not, we will build them
    for you. With flexible project views and endless customizations, Hive offers
    project management on your terms, success guaranteed.


    Hive is used by thousands of fast-moving teams to help with:

    - Project management

    - Integrating tools

    - Resourcing

    - Time-Tracking

    - Proofing and approvals

    - Note Taking

    - Task management

    - Reporting and analytics


    Want to see what it's all about? Start using Hive for free:
    app.hive.com/join
  version: '1.0'
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://app.hive.com/api/v1
tags:
  - name: Workspace
  - name: User
  - name: Project
  - name: Action
  - name: Team
  - name: ResourceAssignment
  - name: Webhook
  - name: Message
paths:
  /workspaces:
    get:
      tags:
        - Workspace
      summary: Get workspaces
      operationId: Workspace_listAllWorkspaces
      description: Get all workspaces that you're is a member of.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n  \t\"id\": \"1a2b3c4d5e6f7g8h9\",\n\t  \"name\": \"Honey Enterprises\",\n\t  \"members\": [\n\t    '1234abc',\n\t    '5678zyc'\n\t  ],\n\t  \"createdAt\": \"2017-05-18T15:26:17.407Z\",\n\t  \"modifiedAt\": \"2017-05-19T02:25:06.190Z\",\n\t  \"createdBy\": \"1234abcuJzo4k7F9\",\n\t  \"modifiedBy\": \"1234abcuJzo4k7F9\"\n\t}\n]\n\n"
              schema:
                $ref: '#/components/schemas/WorkspaceListAllWorkspacesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceListAllWorkspaces400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: curl
            code: >-
              curl -X GET -H "api_key: API_KEY"
              https://app.hive.com/api/v1/workspaces?user_id=USER_ID
        samples-languages:
          - curl
  /workspaces/{workspaceId}/groups:
    get:
      tags:
        - Workspace
      summary: Get groups
      operationId: Workspace_getChatGroups
      description: Get all chat groups for a given workspace
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                        {
                          "id": "8MRZ6oYzRMJ4eJYnR",
                          "name": "Everyone",
                          "members": [
                            '1234abcuJzo4k7F9',
                            '6789abcuJzo4k7F9'
                           ],
                          "workspace": "12345aZjDQZndHqs",
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9"
                        },
                        {
                          "id": "8S8pMXXJwCeExYWzq",
                          "name": "Bee Hive Gossip",
                          "members": [
                            '1234abcuJzo4k7F9',
                            '6789abcuJzo4k7F9'
                           ],
                          "workspace": "12345aZjDQZndHqs",
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9"    
                        },
                        {
                          "id": "8yxNHYsvqYCDFP19J",
                          "name": "Maria von Trapp",
                          "members": [
                            '1234abcuJzo4k7F9',
                            '6789abcuJzo4k7F9'
                           ],
                          "workspace": "12345aZjDQZndHqs",
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9"    
                        }
                      ]
                      
              schema:
                $ref: '#/components/schemas/WorkspaceGetChatGroupsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetChatGroups400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY"
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/groups";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/activity-feeds:
    post:
      summary: Create activity feed
      operationId: workspacesworkspaceidactivity_feeds
      description: >-
        Create an Activity Feed in the specified workspace for a Project or
        Action
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacesworkspaceidactivityFeedsRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "abcde123456",
                        "workspace": "abcde123456",
                        "bucket": "activityFeed",
                        "assignedTo": "abcde123456",
                        "attachedItemType": "action",
                        "attachedItemId": "abcde123456",
                        "title": "Comment!",
                        "body": "Comment body",
                        "createdAt": "1900-01-01T00:00:00.000Z",
                        "modifiedAt": "1900-01-01T00:00:00.000Z",
                        "createdBy": "server",
                        "modifiedBy": "server"
                    }
              schema:
                $ref: >-
                  #/components/schemas/WorkspacesworkspaceidactivityFeedsResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/WorkspacesworkspaceidactivityFeeds400Response
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/activity-feeds";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                type: "comment",
                bucket: "activityFeed",
                assignedTo: userId,
                attachedItemType: "project",
                attachedItemId: projectId,
                title: "Comment title",
                body: "Comment body"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /users/{userId}:
    get:
      tags:
        - User
      summary: Get user
      operationId: User_getUserById
      description: Get a user by id
      parameters:
        - description: User ID
          name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "id": "232b3c4d5e6f7g8h1",
                      "profile": {
                        "firstName": "Jane",
                        "lastName": "Doe"
                      },
                      "fullName": "Jane Doe",
                      "email": "john.doe@hive.com"
                    }
              schema:
                $ref: '#/components/schemas/UserGetUserByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserGetUserById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "users/" + userId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - User
      summary: Update user
      operationId: User_updateUser
      description: Update a user
      parameters:
        - description: User ID
          name: userId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateUserRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "id": "232b3c4d5e6f7g8h1",
                      "profile": {
                        "firstName": "Jane",
                        "lastName": "Doe"
                      },
                      "fullName": "Jane Doe",
                      "email": "john.doe@hive.com"
                    }
              schema:
                $ref: '#/components/schemas/UserUpdateUserResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserUpdateUser400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "users/" + userId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              // New data for user record
              var data = {
                profile: {
                  firstName: "Jane"
                }
              };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /users:
    get:
      tags:
        - User
      summary: Get users
      operationId: User_listByEmail
      description: Get a list of users, filter by "email"
      parameters:
        - description: Email address to search by
          name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "id": "232b3c4d5e6f7g8h1",
                        "profile": {
                          "firstName": "Test",
                          "lastName": "User"
                        },
                        "fullName": "Test User",
                        "email": "test@example.com"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/UserListByEmailResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserListByEmail400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >
              var userId = "USER_ID";

              var filterEmail = "test@example.com";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "users";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey + "&email=" +
              filterEmail;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/users:
    get:
      tags:
        - User
      summary: Get workspace users
      operationId: User_getWorkspaceUsers
      description: Get all users for a given workspace that the user has access to
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "id": "22YK3N5uGpzMdw7fm",
                        "profile": {
                          "firstName": "Vera",
                          "lastName": "Morrisville"
                        },
                        "fullName": "Vera Morrisville",
                        "email": "john.doe@hive.com",
                      },
                      {
                        "id": "5oSp4usru9FTsFCuH",
                        "profile": {
                          "firstName": "Scott",
                          "lastName": "Brown"
                        },
                        "fullName": "Scott Brown",
                        "email": "john.doe@hive.com",
                      },
                    ]
              schema:
                $ref: '#/components/schemas/UserGetWorkspaceUsersResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserGetWorkspaceUsers400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/users";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - User
      summary: Invite user
      operationId: User_inviteNewUser
      description: Invite a new user to your workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInviteNewUserRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"id\": \"232b3c4d5e6f7g8h1\",\n  \"profile\": {\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\"\n  },\n\t\"fullName\": \"Test User\",\n  \"email\": \"test@example.com\"\n}\n"
              schema:
                $ref: '#/components/schemas/UserInviteNewUserResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserInviteNewUser400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/users";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                email: "test@example.com",
                fullName: "Test User"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - User
      summary: Remove user from workspace
      operationId: User_removeFromWorkspace
      description: Remove a user from a given workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRemoveFromWorkspaceRequest'
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {}
              schema:
                $ref: '#/components/schemas/UserRemoveFromWorkspaceResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserRemoveFromWorkspace400Response'
      deprecated: false
  /workspaces/{workspaceId}/external-users:
    get:
      tags:
        - User
      summary: Get workspace external users
      operationId: User_listExternalUsers
      description: Get all external users for a given workspace that the user has access to
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "id": "22YK3N5uGpzMdw7fm",
                        "profile": {
                          "firstName": "External",
                          "lastName": "User"
                        },
                        "fullName": "External User",
                        "email": "john.doe@hive.com",
                        "managers": []
                      },
                    ]
              schema:
                $ref: '#/components/schemas/UserListExternalUsersResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n    \"error\": 400,\n    \"message\": \"Workspace not found.\"\n\t},\n\t{\n    \"error\": 400,\n    \"message\": \"Invalid API Key.\"\n\t}\n]"
              schema:
                $ref: '#/components/schemas/UserListExternalUsers400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/external-users";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/{actionId}:
    get:
      tags:
        - Action
      summary: Get action
      operationId: Action_getDetails
      description: ''
      parameters:
        - description: The id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"id\": \"232b3c4d5e6f7g8h1\",\n  \"title\": \"Action title\",\n  \"workspace\": \"w32bac4d5e6f7g8h2\",\n  \"assignees\": [],\n  \"projectId\": null,\n  \"customFields\": [],\n  \"createdAt\": \"2019-01-01T00:00:00.000Z\",\n  \"modifiedAt\": \"2019-01-01T00:00:00.000Z\",\n  \"createdBy\": \"u32bac4d5e6f7g8h2\",\n  \"modifiedBy\": \"u32bac4d5e6f7g8h2\",\n  \"status\": \"Unstarted\",\n  \"deadline\": null,\n  \"scheduledDate\": null,\n  \"checkedDate\": null,\n  \"parent\": null,\n  \"root\": null,\n  \"archived\":false,\n  \"deleted\":false,\n  \"hasSubactions\": false,\n  \"estimate\": null,\n  \"estimates\":[\n    {\"userId\":user12345,\"time\":7200}\n  ]\n  \"milestone\": false,\n  \"loggedTime\": [\n    {\n      \"userId\":\"user12345\",\n      \"time\": 7200,\n      \"date\":\"2019-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"phaseId\":\"123ab456\",\n  \"phaseName\":\"planning\",\n  \"priority\": {\n  \t  \"name\":\"Urgent\",\n      \"level\": 1,\n      \"color\": \"#f6781a\",\n      \"_id\": \"abc321\"\n  }\n}"
              schema:
                $ref: '#/components/schemas/ActionGetDetailsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionGetDetails400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "/actions/" + actionId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - Action
      summary: Update action
      operationId: Action_updateActionById
      description: Update the action
      parameters:
        - description: The id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionUpdateActionByIdRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "id": "1a2b3c4d5e6f7g8h9",
                      "title": "Action title",
                      "workspace": "fd8s97f9sd87f89s",
                      "assignees": [],
                      "projectId": null,
                      "customFields": [
                        {
                          "_id": "1a2b3c4d5e6f7g8gn",
                          "label": "customActionField",
                          "type": "text",
                          "rank": 2.3843301617611736,
                          "dropdownValues": [],
                          "allowMultiSelect": false,
                          "id": "XkvuQsZ6vrLoba8gN",
                          "value": "customFieldValue",
                          "dateValue": null
                        }
                      ],
                      "createdAt": "2018-07-27T17:10:49.687Z",
                      "modifiedAt": "2018-07-30T18:12:10.411Z",
                      "createdBy": "fds879a7fd8s9a",
                      "modifiedBy": "fds879a7fd8s9a",
                      "status": "In Progress",
                      "deadline": null,
                      "scheduledDate": null,
                      "checkedDate": null,
                      "parent": null,
                      "root": null,
                      "hasSubactions": false,
                      "estimate": null,
                      "loggedTime": [
                        {
                          "userId":"user12345",
                          "time": 7200,
                          "date":"2019-01-01T00:00:00.000Z"
                        }
                      ],
                      "archived": false
                    }
              schema:
                $ref: '#/components/schemas/ActionUpdateActionByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionUpdateActionById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "actions/" + actionId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                status: "In Progress",
                customFields: [{ label: "customActionField", value: "customFieldValue" }]
              };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - Action
      summary: Delete action
      operationId: Action_removeById
      description: Delete the action by ID
      parameters:
        - description: The id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |+
                    {
                        "message": "Action successfully deleted"
                    }

              schema:
                $ref: '#/components/schemas/ActionRemoveByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionRemoveById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "actions/" + actionId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                method: "DELETE",
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/actions:
    get:
      tags:
        - Workspace
      summary: Get actions
      operationId: Workspace_getActions
      description: Get all actions for a given workspace that the user has access to
      parameters:
        - description: >-
            An optional project ID to get actions from. By default, all actions
            will be returned regardless of what project they belong to.
          name: projectId
          in: query
          schema:
            type: string
        - description: >-
            Sort results by an Action Object field (for example, `sortBy=title
            asc`)
          name: sortBy
          in: query
          schema:
            type: string
            default: fieldName asc
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: default = 100; min = 1; max = 100
          name: limit
          in: query
          schema:
            type: string
            default: '100'
        - description: >-
            Optional fields to filter by. Filters expects a structure like
            "filters[fieldName]=value". For example, if you wanted to filter to
            just get actions with the status "Completed", you would pass:
            "filters[status]=Completed". Currently, only the following fields
            are supported: "status", "parent", "archived", "milestone",
            "deleted".
          name: filters
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n    \"id\": \"jArt6JZpezAMZimzy\",\n    \"title\": \"Prepare for weekly product meeting\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"assignees\": [],\n    \"projectId\": null,\n    \"createdAt\": \"2015-07-09T20:33:56.465Z\",\n    \"modifiedAt\": \"2016-08-23T07:49:09.621Z\",\n    \"createdBy\": \"1234abcuJzo4k7F9\",\n    \"modifiedBy\": \"1234abcuJzo4k7F9\",\n    \"status\": \"Unstarted\",\n    \"deadline\": null,\n    \"scheduledDate\": null,\n    \"checkedDate\": null,\n    \"parent\": null,\n    \"root\": null,\n    \"archived\":false,\n    \"deleted\":false,\n    \"hasSubactions\": false,\n    \"estimate\": null,\n    \"estimates\": [\n      {\"userId\":\"user12345\",\"time\":7200}\n    ]\n    \"milestone\": false,\n    \"loggedTime\": [\n      {\n        \"userId\":\"user12345\",\n        \"time\": 7200,\n        \"date\":\"2019-01-01T00:00:00.000Z\"\n      }\n    ],\n  \t\"phaseId\":\"abcdefg9876\",\n    \"phaseName\": \"Planning\",\n    \"priority\": {\n  \t  \"name\":\"Urgent\",\n      \"level\": 1,\n      \"color\": \"#f6781a\",\n      \"_id\": \"abc321\"\n     }\n  }\n]"
              schema:
                $ref: '#/components/schemas/WorkspaceGetActionsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetActions400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/actions";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey +
              "&sortBy=title asc";

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/create:
    post:
      tags:
        - Action
      summary: Create action
      operationId: Action_listActions
      description: Get all actions for a given workspace that the user has access to
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionListActionsRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "qFR6a524nFARukmvF",
                      "title": "This is my action",
                      "workspace": "12345aZjDQZndHqs",
                      "assignees": [],
                      "projectId": null,
                      "customFields": [],
                      "createdAt": "2018-01-23T21:41:40.295Z",
                      "modifiedAt": "2018-01-23T21:41:40.289Z",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345gfuJzo4k7F9",
                      "status": "Unstarted",
                      "deadline": null,
                      "scheduledDate": null,
                      "checkedDate": null,
                      "parent": null,
                      "root": null,
                      "hasSubactions": false,
                      "estimate": null,
                      "loggedTime": []
                    }
              schema:
                $ref: '#/components/schemas/ActionListActionsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionListActions400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "actions/create";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                workspace: workspaceId,
                title: "Test action title",
                assigned_to: userId,
                when: "today"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/{actionId}/comments:
    get:
      tags:
        - Action
      summary: Get action comments
      operationId: Action_getComments
      description: ''
      parameters:
        - description: The id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
        - description: Number of comments
          name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - description: You can change to e.g. createdAt asc
          name: sortBy
          in: query
          schema:
            type: string
            default: createdAt+desc
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "id": "232b3c4d5e6f7g8h1",
                        "attachments": [],
                        "workspace": "w32bac4d5e6f7g8h2",
                        "body": "comment body",
                        "mentions": [],
                        "createdBy": "u32bac4d5e6f7g8h2",
                        "createdAt": "2020-01-04T23:30:54.816Z",
                        "reactions": []
                      }
                    ]
              schema:
                $ref: '#/components/schemas/ActionGetCommentsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionGetComments400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "/actions/" + actionId + '/comments';
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - Action
      summary: Create action comment
      operationId: Action_createComment
      description: ''
      parameters:
        - description: The id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionCreateCommentRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Action comment successfully inserted",
                      "comment": {
                        "id": "232b3c4d5e6f7g8h1",
                        "body": "comment body",
                        "workspace": "w32bac4d5e6f7g8h2",
                        "createdAt": "2019-01-01T00:00:00.000Z",
                        "createdBy": "u32bac4d5e6f7g8h2",
                        "attachments": [],
                        "reactions": [],
                        "mentions": []
                      }
                    }
              schema:
                $ref: '#/components/schemas/ActionCreateCommentResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionCreateComment400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "actions/" + actionId + "/comments";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                body: "New comment body"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/{actionId}/attachments:
    get:
      tags:
        - Action
      summary: Get action attachments
      operationId: Action_getAttachments
      description: >-
        Retrieves all attachments uploaded directly to the action card itself,
        or inserted using either of the available action attachment POST
        endpoints. Does not include attachments uploaded from 3rd party file
        store services, or attachments nested within comments on an action card.
      parameters:
        - description: The ID of the action.
          name: actionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                        {
                            "_id": "AzwXZkTsdH32nTPur",
                            "name": "Hello world",
                            "workspace": "9driAwqZjDQZndHqs",
                            "url": "https://hostname.com/file/path",
                            "createdAt": "2050-10-27T22:09:38.137Z",
                            "createdBy": "AnMyD2YXX4vcdTgxw",
                            "modifiedAt": "2050-10-27T22:09:38.717Z",
                            "modifiedBy": "AnMyD2YXX4vcdTgxw"
                        }
                    ]
              schema:
                $ref: '#/components/schemas/ActionGetAttachmentsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionGetAttachments400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/actions/" + actionId + '/attachments';
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - Action
      summary: Create action attachment
      operationId: Action_attachFile
      description: Attaches a file to an action.
      parameters:
        - description: The ID of the action.
          name: actionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionAttachFileRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Action attachment successfully added"
                    }
              schema:
                $ref: '#/components/schemas/ActionAttachFileResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionAttachFile400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var actionId = "ACTION_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/actions/" + actionId + '/attachments';
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs

              var data = {
                url: "https://domain.com/file/path"
              };

              $.ajax({
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/{actionId}/attachments/{attachmentId}:
    get:
      tags:
        - Action
      summary: Get attachment by attachment ID
      operationId: Action_getAttachmentById
      description: >-
        Returns the requested file object. File must exist on the corresponding
        action.
      parameters:
        - description: The ID of the action.
          name: actionId
          in: path
          schema:
            type: string
          required: true
        - description: The ID of the file attachment.
          name: attachmentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "_id": "AzwXZkTsdH32nTPur",
                      "name": "Hello world",
                      "workspace": "9driAwqZjDQZndHqs",
                      "url": "https://hostname.com/file/path",
                      "createdAt": "2050-10-27T22:09:38.137Z",
                      "createdBy": "AnMyD2YXX4vcdTgxw",
                      "modifiedAt": "2050-10-27T22:09:38.717Z",
                      "modifiedBy": "AnMyD2YXX4vcdTgxw"
                    }
              schema:
                $ref: '#/components/schemas/ActionGetAttachmentByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionGetAttachmentById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var actionId = "ACTION_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1";

              var endpoint = "/actions/" + actionId + '/attachments/' +
              attachmentId

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/{actionId}/apply-template:
    post:
      tags:
        - Action
      summary: Apply action template
      operationId: Action_applyTemplate
      description: ''
      parameters:
        - description: Id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionApplyTemplateRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      message: "Action template successfully applied"
                    }
              schema:
                $ref: '#/components/schemas/ActionApplyTemplateResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionApplyTemplate400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: "var userId = \"USER_ID\";\nvar actionId = \"ACTION_ID\";\nvar apiKey = \"API_KEY\";\nvar baseUrl = \"https://app.hive.com/api/v1/\";\nvar endpoint = \"actions/\" + actionId + \"/apply-template\";\nvar qs = \"?user_id=\" + userId + \"&api_key=\" + apiKey;\nvar url = baseUrl + endpoint + qs;\n\nvar data = {\n\tprocessId: \"existingWorkflowId\"\n};\n\n$.ajax({\n  method: \"POST\",\n  url: url,\n  data: JSON.stringify(data),\n  contentType: \"application/json\"\n}).done(function(data) {\n  console.log(data);\n});"
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/actiontemplates:
    get:
      tags:
        - Workspace
      summary: Get action templates
      operationId: Workspace_getActionTemplates
      description: >-
        Get all action templates for a given workspace that the user has access
        to
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "id": "BrhDWFRzJDPMcitEk",
                        "name": "Blog Post",
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "1234abcuJzo4k7F9",
                        "modifiedBy": "1234abcuJzo4k7F9" 
                      },
                      {
                        "id": "J7ixnuHFP4kmncLun",
                        "name": "Product Research",
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "1234abcuJzo4k7F9",
                        "modifiedBy": "1234abcuJzo4k7F9"   
                      }
                    ]
              schema:
                $ref: '#/components/schemas/WorkspaceGetActionTemplatesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetActionTemplates400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/actiontemplates";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /actions/{actionId}/action-history:
    get:
      tags:
        - Action
      summary: Get action history
      operationId: Action_getActionHistory
      description: ''
      parameters:
        - description: The id of the action
          name: actionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "id": "232b3c4d5e6f7g8h1",
                        "body":"comment body",
                        "actionId":"w32bac4d5e6f7g8h2"
                        "date":"2020-01-04T23:30:54.816Z"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/ActionGetActionHistoryResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ActionGetActionHistory400Response'
      deprecated: false
  /messages/create:
    post:
      tags:
        - Message
      summary: Create message
      operationId: Message_createNewMessage
      description: Create a new message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreateNewMessageRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "id": "2bK58icvKeJSzvupB",
                      "sender": "12345gfuJzo4k7F9",
                      "workspace": "12345naZjDQZndHqs",
                      "containerId": "12345ZTJqWY2QK2B",
                      "body": "This is a new message",
                      "senderPicture": "https://cdn2.iconfinder.com/data/icons/botcons/100/android-bot-round-ears-eyes-virus-brown-256.png",
                      "senderFirstName": "My Bot",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    }
              schema:
                $ref: '#/components/schemas/MessageCreateNewMessageResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/MessageCreateNewMessage400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var groupId = "GROUP_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "messages/create";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                workspace: workspaceId,
                body: "Hi! this message was sent from the API.",
                senderName: "Automated Messages",
                senderPicture:
                  "https://cdn2.iconfinder.com/data/icons/botcons/100/android-bot-round-ears-eyes-virus-brown-256.png",
                containerId: groupId
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /projects/{projectId}:
    get:
      tags:
        - Project
      summary: Get project
      operationId: Project_getById
      description: Get a project by id
      parameters:
        - description: ID of the project to update
          name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "project": {
                        "id": "123ABC567XYZ",
                        "name": "New project name",
                        "description": "",
                        "startDate": null,
                        "endDate": null,
                        "accessOption": "private",
                        "sharingType": "me",
                        "members": [],
                        "template": false,
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "1234abcuJzo4k7F9",
                        "modifiedBy": "1234abcuJzo4k7F9",
                        "projectCustomFields": [
                          {
                            "label": "Budget",
                            "value": "$5000000",
                            "dropdownValues": [],
                            "selectedValues": [],
                            "type": "text",
                            "_id": "1234abcuJzo4k7E1",
                            "hidden": false
                          }
                        ],
                        "color": "#3fcaca",
                        "parentProject": null,
                        "phases": [],
                        "budget":0,
                        "resourcePlaceholderIds": []
                      }
                    }
              schema:
                $ref: '#/components/schemas/ProjectGetByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectGetById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "projects/" + projectId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - Project
      summary: Update project
      operationId: Project_updateById
      description: Update a project by id
      parameters:
        - description: ID of the project to update
          name: projectId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateByIdRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"message\": \"Project was updated successfully\",\n  \"project\": {\n    \"id\": \"123ABC567XYZ\",\n    \"name\": \"New project name\",\n    \"description\": \"A new project description right here!\",\n    \"startDate\": \"2019-04-01T00:00:00.000Z\",\n\t\t\"endDate\": \"2019-04-01T00:00:00.000Z\",\n    \"accessOption\": \"public\",\n    \"sharingType\": \"everyone\",\n    \"members\": [],\n    \"template\": false,\n    \"createdAt\": \"2019-12-20T19:41:13.283Z\",\n    \"modifiedAt\": \"2020-01-04T23:53:41.413Z\",\n    \"createdBy\": \"1234abcuJzo4k7F9\",\n    \"modifiedBy\": \"1234abcuJzo4k7F9\",\n    \"projectCustomFields\": [\n      {\n        \"label\": \"Budget\",\n        \"value\": \"$5000000\",\n        \"dropdownValues\": [],\n        \"selectedValues\": [],\n        \"type\": \"text\",\n        \"_id\": \"1234abcuJzo4k7E1\",\n        \"hidden\": false\n      }\n    ],\n    \"color\": \"#F2F2F2\",\n    \"parentProject\": \"parent123\",\n    \"phases\": [],\n    \"resourcePlaceholderIds\": []\n  }\n}\n"
              schema:
                $ref: '#/components/schemas/ProjectUpdateByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectUpdateById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "projects/" + projectId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                name: "New project name",
                description: "A new project description right here!",
                color: "#F2F2F2",
                parentProject: "parent123",
                },
              };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - Project
      summary: Delete project
      operationId: Project_removeById
      description: Delete a project by id
      parameters:
        - description: ID of the project to update
          name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      message: 'Project was deleted successfully'
                    }
              schema:
                $ref: '#/components/schemas/ProjectRemoveByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectRemoveById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "projects/" + projectId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                method: "DELETE",
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/projects:
    get:
      tags:
        - Project
      summary: Get projects
      operationId: Project_listForWorkspace
      description: Get all projects for a given workspace that the user has access to
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: >-
            Sort results by an Action Object field (for example,
            `sortBy=title+asc`)
          name: sortBy
          in: query
          schema:
            type: string
            default: fieldName+asc
        - description: >-
            Optional fields to filter by. Filters expect a structure like
            "filters[fieldName]=value". For example, if you want to filter to
            just get deleted projects, you would pass: "filters[deleted]=true".
            Currently, only two fields are supported:  "archived", "deleted".
          name: filters
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "id": "9MRZ6oYzRMJ4eJYnR",
                        "name": "Spring Bee Hive Rebuild",
                        "description": "",
                        "startDate": null,
                        "endDate": null,
                        "accessOption": "private",
                        "sharingType": "me",
                        "members": [],
                        "template": true,
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "",
                        "modifiedBy": "",
                        "projectCustomFields": [],
                        "color": "#3390dc",
                        "parentProject": null,
                        "phases": [],
                        "budget": 100000,
                        "resourcePlaceholderIds": []
                      },
                      {
                        "id": "9S8pMXXJwCeExYWzq",
                        "name": "Sell More Honey Campaign",
                        "description": "",
                        "startDate": null,
                        "endDate": null,
                        "accessOption": "private",
                        "sharingType": "me",
                        "members": [],
                        "template": true,
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "",
                        "modifiedBy": "",
                        "projectCustomFields": [],
                        "color": "#3390dc",
                        "parentProject": null,
                        "phases": [],
                        "budget": 0,
                        "resourcePlaceholderIds": []
                      }
                    ]
              schema:
                $ref: '#/components/schemas/ProjectListForWorkspaceResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectListForWorkspace400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/projects";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /projects:
    post:
      tags:
        - Project
      summary: Create project
      operationId: Project_createNewProject
      description: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateNewProjectRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Project was created successfully",
                      "project": {
                        "id": "123ABC567XYZ",
                        "name": "Mobile app development",
                        "workspace": "workspace_id_123",
                        "description": "A project for tracking our shiny new mobile app.",
                        "startDate": "2019-04-01T00:00:00.000Z",
                        "endDate": "2019-04-01T00:00:00.000Z",
                        "accessOption": "public",
                        "sharingType": "custom",
                        "members": ["123ABC456XYZ"],
                        "template": false,
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "1234abcuJzo4k7F9",
                        "modifiedBy": "1234abcuJzo4k7F9",
                        "projectCustomFields": [
                          {
                            "label": "Design link",
                            "value": "https://invision.com/designs",
                            "dropdownValues": [],
                            "selectedValues": [],
                            "type": "text",
                            "_id": "NTuqNWyPBxAFGAk9Y",
                            "hidden": false
                          },
                          {
                            "label": "Project lead",
                            "value": "George Boole",
                            "dropdownValues": [],
                            "selectedValues": [],
                            "type": "text",
                            "_id": "SsjSn54vk9Z5XXCA4",
                            "hidden": false
                          }
                        ],
                        "color": "#F2F2F2",
                        "parentProject": null,
                        "phases": [],
                        "resourcePlaceholderIds": []
                      }
                    }
              schema:
                $ref: '#/components/schemas/ProjectCreateNewProjectResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectCreateNewProject400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |+
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var teamId = "TEAM_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "projects/";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                name: "Test project name",
                workspace: workspaceId,
                description: "Test project description",
                startDate: new Date(),
                endDate: new Date(),
                accessOption: "public",
                sharingType: "custom",
                members: [userId],
                teams: [teamId],
                projectCustomFields: [
                  { label: "Project lead", value: "George Boole" },
                  { label: "Design link", value: "https://invision.com/designs" }
                ],
                color: "#F2F2F2",
                template: false
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });

        samples-languages:
          - javascript
  /projects/{projectId}/project-custom-field:
    post:
      tags:
        - Project
      summary: Create project custom field
      operationId: Project_addCustomField
      description: Creates a new custom field for a project
      parameters:
        - description: ID of the project to add a custom field to
          name: projectId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAddCustomFieldRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "project": {
                        "id": "123ABC567XYZ",
                        "name": "Mobile app development",
                        "description": "A project for tracking our shiny new mobile app.",
                        "startDate": "2020-01-04T18:55:02.126Z",
                        "endDate": "2020-01-04T18:55:02.126Z",
                        "accessOption": "public",
                        "sharingType": "everyone",
                        "members": [],
                        "template": false,
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "1234abcuJzo4k7F9",
                        "modifiedBy": "1234abcuJzo4k7F9",
                        "projectCustomFields": [
                          {
                            "label": "Budget",
                            "value": "$1000000",
                            "dropdownValues": [],
                            "selectedValues": [],
                            "type": "text",
                            "_id": "1234abcuJzo4k7E2",
                            "hidden": false
                          }
                        ],
                        "color": "#F2F2F2",
                        "parentProject": null,
                        "phases": [],
                        "resourcePlaceholderIds": []
                      }
                    }
              schema:
                $ref: '#/components/schemas/ProjectAddCustomFieldResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectAddCustomField400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "projects/" + projectId + "/project-custom-field";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                label: "Budget",
                value: "$1000000"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /projects/{projectId}/project-custom-field/{customFieldId}:
    put:
      tags:
        - Project
      summary: Update project custom field
      operationId: Project_updateCustomField
      description: Updates an existing custom field for a project
      parameters:
        - description: ID of the project to add a custom field to
          name: projectId
          in: path
          schema:
            type: string
          required: true
        - description: ID of the custom field to update
          name: customFieldId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateCustomFieldRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "project": {
                        "id": "123ABC567XYZ",
                        "name": "Mobile app development",
                        "description": "A project for tracking our shiny new mobile app.",
                        "startDate": "2020-01-04T18:55:02.126Z",
                        "endDate": "2020-01-04T18:55:02.126Z",
                        "accessOption": "public",
                        "sharingType": "everyone",
                        "members": [],
                        "template": false,
                        "createdAt": "2017-05-18T15:26:17.407Z",
                        "modifiedAt": "2017-05-19T02:25:06.190Z",
                        "createdBy": "1234abcuJzo4k7F9",
                        "modifiedBy": "1234abcuJzo4k7F9",
                        "projectCustomFields": [
                          {
                            "label": "Budget",
                            "value": "$5000000",
                            "dropdownValues": [],
                            "selectedValues": [],
                            "type": "text",
                            "_id": "1234abcuJzo4k7E2",
                            "hidden": false
                          }
                        ],
                        "color": "#F2F2F2",
                        "parentProject": null,
                        "phases": [],
                        "resourcePlaceholderIds": []
                      }
                    }
              schema:
                $ref: '#/components/schemas/ProjectUpdateCustomFieldResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    // If you are trying to update a custom field label
                    // while a different custom field with that label
                    // and type already exists - an error will be thrown
                    {}
              schema:
                $ref: '#/components/schemas/ProjectUpdateCustomField400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var projectId = "PROJECT_ID";

              var customFieldId = "CUSTOM_FIELD_ID"

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "projects/" + projectId + "/project-custom-field/"
              + customFieldId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              var data = {
                label: "Budget",
                value: "$5000000"
              };


              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /projects/{projectId}/project-status:
    post:
      tags:
        - Project
      summary: Set project status
      operationId: Project_setStatus
      description: ''
      parameters:
        - description: ID of the project
          name: projectId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSetStatusRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "_id": "PROJECT_ID",
                      "statusUpdates": {
                        "_id": "Unique status Id in the list",
                        "statusId": "Some status Id",
                        "description": "Status description"
                      }
                    }
              schema:
                $ref: '#/components/schemas/ProjectSetStatusResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectSetStatus400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "projects/" + projectId + "/project-status";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                statusId: "Some status Id",
                description: "Status description",
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/project-statuses:
    get:
      tags:
        - Project
      summary: Get project statuses
      operationId: Project_getStatuses
      description: ''
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Get first n items
          name: first
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - description: Get last n items
          name: last
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - description: document ID to query documents before it
          name: before
          in: query
          schema:
            type: string
        - description: document ID to query documents after it
          name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "edges": [
                            {
                                "cursor": "Cursor Id",
                                "node": {
                                    "_id": "Status Id",
                                    "name": "Status name",
                                    "color": "#000000",
                                    "workspace": "WORKSPACE_ID",
                                    "deleted": false,
                                    "modifiedAt": "2022-02-03T07:49:26.732Z",
                                    "modifiedBy": "Some user Id",
                                    "createdAt": "2022-02-03T07:49:26.732Z",
                                    "createdBy": "Some user Id"
                                }
                            }
                        ],
                        "pageInfo": {
                            "startCursor": "Start cursor Id",
                            "endCursor": "End cursor Id",
                            "totalCount": 1,
                            "hasNextPage": false,
                            "hasPreviousPage": false
                        }
                    }
              schema:
                $ref: '#/components/schemas/ProjectGetStatusesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectGetStatuses400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var first = 1;

              var endpoint = "workspaces/" + workspaceId + "/project-statuses";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey +
              "&sortBy=title+asc" + "&first=" + first;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /resource-assignments/{resourceAssignmentId}:
    get:
      tags:
        - ResourceAssignment
      summary: Get resource assignment
      operationId: ResourceAssignment_getById
      description: Get a resource by id
      parameters:
        - description: ID of the resourceAssignment to update
          name: resourceAssignmentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      resourceAssignment:
                      {
                        "id" : "123ABC567XYZ",
                        "resourceId" : "user1234",
                        "projectId":"project1234",
                        "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                        "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                        "allocationType" : "hoursPerDay",
                        "assignmentType" : "regular",
                        "hoursPerDay" : 8,
                        "fixedHours" : 8,
                        "fixedDisplayType" : "hours",
                        "notes":"This is a note!"
                      }
                    }
              schema:
                $ref: '#/components/schemas/ResourceAssignmentGetByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    // If resourcing is desabled
                    {
                        "error": 400,
                        "message": "Resourcing is not enabled in current workspace"
                    }
              schema:
                $ref: '#/components/schemas/ResourceAssignmentGetById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var resourceId = "RESOURCE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "resource-assignments/" + resourceId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - ResourceAssignment
      summary: Update resource assignment
      operationId: ResourceAssignment_updateAssignmentById
      description: Create a new project
      parameters:
        - description: ID of the resourceAssignment
          name: resourceAssignmentId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ResourceAssignmentUpdateAssignmentByIdRequest
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "message": "Resource assignment was updated successfully",
                      "resourceAssignment": {
                        "id" : "123456ABCDE",
                        "resourceId" : "user1234",    
                        "projectId":"project1234",
                        "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                        "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                        "allocationType" : "hoursPerDay",
                        "assignmentType" : "regular",
                        "hoursPerDay" : 8,
                        "fixedHours" : 8,
                        "fixedDisplayType" : "hours",
                        "notes":"This is a note!"
                      }
                    }
              schema:
                $ref: >-
                  #/components/schemas/ResourceAssignmentUpdateAssignmentByIdResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    // If resourcing is desabled
                    {
                        "error": 400,
                        "message": "Resourcing is not enabled in current workspace"
                    }
              schema:
                $ref: >-
                  #/components/schemas/ResourceAssignmentUpdateAssignmentById400Response
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var resourceId = "RESOURCE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "resource-assignments/" + resourceId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                  "resourceId" : "user1234",
                  "projectId":"project1234",
                  "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                  "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                  "allocationType" : "hoursPerDay",
                  "assignmentType" : "regular",
                  "hoursPerDay" : 8,
                  "fixedHours" : 8,
                  "fixedDisplayType" : "hours",
                  "notes":"This is a note!"
                };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - ResourceAssignment
      summary: Delete resource assignment
      operationId: ResourceAssignment_removeById
      description: Create a new project
      parameters:
        - description: ID of the user for the resourcing
          name: resourceAssignmentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      message: 'Resource assignment was deleted successfully'
                    }
              schema:
                $ref: '#/components/schemas/ResourceAssignmentRemoveByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    // If resourcing is desabled
                    {
                        "error": 400,
                        "message": "Resourcing is not enabled in current workspace"
                    }
              schema:
                $ref: '#/components/schemas/ResourceAssignmentRemoveById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var resourceId = "RESOURCE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "resource-assignments/" + resourceId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                method: "DELETE",
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/resource-assignments:
    get:
      tags:
        - Workspace
      summary: Get resource assignments
      operationId: Workspace_listResourceAssignments
      description: ''
      parameters:
        - description: ID of the workspace
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Get first n items
          name: first
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - description: Get last n items
          name: last
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - description: document ID to query documents before it
          name: before
          in: query
          schema:
            type: string
        - description: document ID to query documents after it
          name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "edges": [
                            {
                                "cursor": "Cursor Id",
                                "node": {
                                    "id": "Some user Id",
                                    "workspace": "WORKSPACE_ID",
                                    "resourceId": "Resource assignment Id",
                                    "projectId": "Project Id",
                                    "startDate": "2022-01-10T00:00:00.000Z",
                                    "endDate": "2022-01-13T00:00:00.000Z",
                                    "allocationType": "fixedHours",
                                    "assignmentType": "regular",
                                    "hoursPerDay": 0.8,
                                    "fixedHours": 2.4,
                                    "fixedDisplayType": "percentages"
                                }
                            }
                        ],
                        "pageInfo": {
                            "startCursor": "Start cursor Id",
                            "endCursor": "End cursor Id",
                            "totalCount": 5,
                            "hasNextPage": true,
                            "hasPreviousPage": false
                        }
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceListResourceAssignmentsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceListResourceAssignments400Response
      deprecated: false
      x-readme:
        code-samples:
          - language: text
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var first = 1;

              var endpoint = "workspaces/" + workspaceId +
              "/resource-assignments";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey +
              "&sortBy=title+asc" + "&first=" + first;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - text
  /resource-assignments:
    post:
      tags:
        - ResourceAssignment
      summary: Create resource assignments
      operationId: ResourceAssignment_createNewAssignment
      description: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ResourceAssignmentCreateNewAssignmentRequest
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "message": "Resource assignment was created successfully",
                      "resource-assignment": {
                        "id" : "123ABC567XYZ",
                        "resourceId" : "user1234",
                        "projectId":"project1234",
                        "workspace":"workspace1234",
                        "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                        "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                        "allocationType" : "hoursPerDay",
                        "assignmentType" : "regular",
                        "hoursPerDay" : 8,
                        "fixedHours" : 8,
                        "notes":"This is a note!"
                      }
                    }
              schema:
                $ref: >-
                  #/components/schemas/ResourceAssignmentCreateNewAssignmentResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    // If resourcing is desabled
                    {
                        "error": 400,
                        "message": "Resourcing is not enabled in current workspace"
                    }
              schema:
                $ref: >-
                  #/components/schemas/ResourceAssignmentCreateNewAssignment400Response
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |+
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "resource-assignments/";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                  "id" : "123ABC567XYZ",
                  "resourceId" : "user1234",
                  "projectId":"project1234",
                  "workspace":"workspace1234",
                  "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                  "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                  "allocationType" : "hoursPerDay",
                  "assignmentType" : "regular",
                  "hoursPerDay" : 8,
                  "fixedHours" : 8,
                  "notes":"This is a note!"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });

        samples-languages:
          - javascript
  /workspaces/{workspaceId}/custom-tags:
    get:
      tags:
        - Workspace
      summary: Get custom tags
      operationId: Workspace_getCustomTags
      description: Get all project or user custom tags
      parameters:
        - description: >-
            Type of custom tags you are trying to access. Can be either "user"
            or "project"
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n    \"_id\": \"qFR6a524nFARukmvF\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"name\": \"Custom Tag 1\",\n    \"type\": \"user\",\n    \"options\": [\"Option 1\", \"Option 2\"],\n    \"isMulti\": false\n    \"createdBy\": \"12345gfuJzo4k7F9\",\n    \"modifiedBy\": \"12345xgfuJzo4k7F9\",\n    \"createdAt\": \"2018-01-23T22:14:24.862Z\",\n    \"modifiedAt\": \"2018-01-23T22:14:24.862Z\"\n\t},\n  {\n    \"_id\": \"lkdjfwjdoi2342w3\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"name\": \"Custom Tag 2\",\n    \"type\": \"user\",\n    \"options\": [\"Option 1\", \"Option 2\"],\n    \"isMulti\": false\n    \"createdBy\": \"12345gfuJzo4k7F9\",\n    \"modifiedBy\": \"12345xgfuJzo4k7F9\",\n    \"createdAt\": \"2018-01-23T22:14:24.862Z\",\n    \"modifiedAt\": \"2018-01-23T22:14:24.862Z\"\n\t}\n]\n\n"
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomTagsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomTags400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var tagType = "user";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/custom-tags";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey + "&type=" +
              tagType;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - Workspace
      summary: Create custom tag
      operationId: Workspace_createCustomTag
      description: Create a new custom tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateCustomTagRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "name": "Test custom tag",
                      "type": "user",
                      "isMulti": false,
                      "options": ["Option 1", "Option 2"],
                      "createdAt": "2020-01-05T16:41:59.527Z",
                      "createdBy": "12345xgfuJzo4k7F9",
                      "modifiedAt": "2020-01-05T16:41:59.527Z",
                      "modifiedBy": "12345xgfuJzo4k7F9"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceCreateCustomTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceCreateCustomTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/custom-tags";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                workspace: workspaceId,
                name: "Test custom tag",
                type: "user",
                options: ["Option 1", "Option 2"],
                isMulti: false
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/custom-tags/{customTagId}:
    get:
      tags:
        - Workspace
      summary: Get custom tag
      operationId: Workspace_getCustomTag
      description: Get a custom tag by id
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Tag ID
          name: customTagId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "name": "Test custom tag",
                      "type": "user",
                      "isMulti": false,
                      "options": ["Option 1", "Option 2"],
                      "createdAt": "2020-01-05T16:41:59.527Z",
                      "createdBy": "12345xgfuJzo4k7F9",
                      "modifiedAt": "2020-01-05T16:41:59.527Z",
                      "modifiedBy": "12345xgfuJzo4k7F9"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var customTagId = "CUSTOM_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/custom-tags/" +
              customTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - Workspace
      summary: Update custom tag
      operationId: Workspace_updateCustomTag
      description: Update an existing custom tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Custom tag ID
          name: customTagId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateCustomTagRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "name": "Updated custom tag",
                      "type": "user",
                      "isMulti": true,
                      "options": ["Option 3", "Option 4"],
                      "createdAt": "2020-01-05T16:41:59.527Z",
                      "createdBy": "12345xgfuJzo4k7F9",
                      "modifiedAt": "2020-01-05T16:41:59.527Z",
                      "modifiedBy": "12345xgfuJzo4k7F9"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceUpdateCustomTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceUpdateCustomTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var customTagId = "CUSTOM_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/custom-tags/" +
              customTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              var data = {
                name: "Updated custom tag",
                options: ["Option 3", "Option 4"],
                isMulti: true
              };


              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - Workspace
      summary: Delete custom tag
      operationId: Workspace_deleteCustomTag
      description: Delete an existing custom tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Tag ID
          name: customTagId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{ "message": "Success" }'
              schema:
                $ref: '#/components/schemas/WorkspaceDeleteCustomTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceDeleteCustomTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var customTagId = "CUSTOM_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/custom-tags/" +
              customTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                method: "DELETE",
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/users/{userId}/user-tags:
    get:
      tags:
        - User
      summary: Get user tags
      operationId: User_getUserTags
      description: Get all user tags for a user in a workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: User ID
          name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "userId": "123123123",
                        "name": "Custom Tag 1",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 2"],
                        "isMulti": false
                      },
                      {
                        "_id": "lkdjfwjdoi2342w3",
                        "userId": "123123123",
                        "name": "Custom Tag 2",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 1"],
                        "isMulti": false
                      }
                    ]
              schema:
                $ref: '#/components/schemas/UserGetUserTagsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserGetUserTags400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/users/" + userId +
              '/user-tags';

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/users/{userId}/user-tags/{userTagId}:
    put:
      tags:
        - User
      summary: Update user tag
      operationId: User_updateTag
      description: Update a specific tag on a user
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: ID of user to update
          name: userId
          in: path
          schema:
            type: string
          required: true
        - description: ID of tag to set on the user
          name: userTagId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateTagRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "name": "Custom Tag 1",
                      "options": ["Option 1", "Option 2"],
                      "selectedOptions": ["Option 1"],
                      "isMulti": false
                    }
              schema:
                $ref: '#/components/schemas/UserUpdateTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserUpdateTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var userTagId = "USER_TAG_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint =
                "workspaces/" + workspaceId + "/users/" + userId + "/user-tags/" + userTagId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                selectedOptions: ["Option 1"]
              };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    get:
      tags:
        - User
      summary: Get user tag
      operationId: User_getUserTag
      description: Get a single user tag for a given workspace and user
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: ID of the user
          name: userId
          in: path
          schema:
            type: string
          required: true
        - description: ID of the user tag
          name: userTagId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |+

                    {
                      "_id": "lkdjfwjdoi2342w3",
                      "name": "Custom Tag 1",
                      "options": ["Option 1", "Option 2"],
                      "selectedOptions": ["Option 2"],
                      "isMulti": false
                    }

              schema:
                $ref: '#/components/schemas/UserGetUserTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserGetUserTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var userTagId = "USER_TAG_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint =
                "workspaces/" + workspaceId + "/users/" + userId + "/user-tags/" + userTagId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/projects/{projectId}/project-tags:
    get:
      tags:
        - Project
      summary: Get project tags
      operationId: Project_getTags
      description: Get all project tags for a workspace and projectId
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: Project ID to get tags for
          name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "projectId": "123123123",
                        "name": "Custom Tag 1",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 1"],
                        "isMulti": false
                      },
                      {
                        "_id": "lkdjfwjdoi2342w3",
                        "projectId": "123123123",
                        "name": "Custom Tag 2",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 2"],
                        "isMulti": false
                      }
                    ]
              schema:
                $ref: '#/components/schemas/ProjectGetTagsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectGetTags400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var projectId = "PROJECT_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint =
                "workspaces/" + workspaceId + "/projects/" + projectId + "/project-tags";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/projects/{projectId}/project-tags/{projectTagId}:
    put:
      tags:
        - Project
      summary: Update project tag
      operationId: Project_updateTag
      description: Update a project tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: Project ID to update the tag value on
          name: projectId
          in: path
          schema:
            type: string
          required: true
        - description: Project tag ID
          name: projectTagId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateTagRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "name": "Custom Tag 1",
                      "options": ["Option 1", "Option 2"],
                      "selectedOptions": ["Option 1"],
                      "isMulti": false
                    }
              schema:
                $ref: '#/components/schemas/ProjectUpdateTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectUpdateTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var projectId = "PROJECT_ID";

              var projectTagId = "PROJECT_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/projects/" +
              projectId + "/project-tags/" + projectTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              var data = {
                selectedOptions: ["Option 1"]
              };


              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    get:
      tags:
        - Project
      summary: Get project tag
      operationId: Project_getTagById
      description: Get a single project tag for a given workspace and projectId
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: Project ID that you are trying to access project tag for
          name: projectId
          in: path
          schema:
            type: string
          required: true
        - description: ID of the project tag
          name: projectTagId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |+
                    {
                      "_id": "lkdjfwjdoi2342w3",
                      "name": "Custom Tag 1",
                      "options": ["Option 1", "Option 2"],
                      "selectedOptions": ["Option 2"],
                      "isMulti": false
                    }



              schema:
                $ref: '#/components/schemas/ProjectGetTagByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectGetTagById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var projectId = "PROJECT_ID";

              var projectTagId = "PROJECT_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/projects/" +
              projectId + "/project-tags/" + projectTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/role-tags:
    get:
      tags:
        - Workspace
      summary: Get role tags
      operationId: Workspace_listRoleTags
      description: Get all role tags for a workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Role Tag 1",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
                      {
                        "_id": "qFR6a524n14flfLfF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Role Tag 2",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/WorkspaceListRoleTagsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceListRoleTags400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/role-tags";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - Workspace
      summary: Create role tag
      operationId: Workspace_createRoleTag
      description: Create a new role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateRoleTagRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "Role Tag 1",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    },
              schema:
                $ref: '#/components/schemas/WorkspaceCreateRoleTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceCreateRoleTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/role-tags";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                name: "Role Tag 1"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/role-tags/{roleTagId}:
    put:
      tags:
        - Workspace
      summary: Update role tag
      operationId: Workspace_updateRoleTag
      description: Update an existing role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Role Tag ID
          name: roleTagId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateRoleTagRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "New role tag name",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    },
              schema:
                $ref: '#/components/schemas/WorkspaceUpdateRoleTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceUpdateRoleTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var roleTagId = "ROLE_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/role-tags/" +
              roleTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              var data = {
                name: "New role tag name"
              };


              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - Workspace
      summary: Delete role tag
      operationId: Workspace_removeRoleTag
      description: Delete an existing role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Role Tag ID
          name: roleTagId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      message: "Success"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceRemoveRoleTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceRemoveRoleTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var roleTagId = "ROLE_TAG_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/role-tags/" +
              roleTagId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                method: "DELETE",
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/users/{userId}/role-tags:
    get:
      tags:
        - User
      summary: Get user role tag
      operationId: User_getUserRoleTag
      description: Get a user's role tag for this workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: User ID
          name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |+
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "Role Tag 1",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    }

              schema:
                $ref: '#/components/schemas/UserGetUserRoleTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserGetUserRoleTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/users/" + userId +
              '/role-tags';

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/users/{userId}/role-tags/{roleTagId}:
    put:
      tags:
        - User
      summary: Update user role tag
      operationId: User_updateRoleTag
      description: Update user role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: User ID
          name: userId
          in: path
          schema:
            type: string
          required: true
        - description: Role tag ID to set on the user
          name: roleTagId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "Role Tag 1",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    },
              schema:
                $ref: '#/components/schemas/UserUpdateRoleTagResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserUpdateRoleTag400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var roleTagId = "ROLE_TAG_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint =
                "workspaces/" + workspaceId + "/users/" + userId + "/role-tags/" + roleTagId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                method: "PUT",
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/user-settings/{userId}:
    get:
      tags:
        - User
      summary: Get user setting by userId
      operationId: User_getUserTagByWorkspace
      description: Get a single user tag for a given workspace and user
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: User ID
          name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "workspaceId": "12345aZjDQZndHqs",
                      "_id": "qFR6a524nFARukmvF",
                      "userId": "123123123",
                      "firstDayOfWork": "2018-01-23T00:00:00.000Z",
                      "lastDayOfWork": "2019-01-23T00:00:00.000Z",
                      "billRate": 80,
                      "costRate": 70
                    }
              schema:
                $ref: '#/components/schemas/UserGetUserTagByWorkspaceResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserGetUserTagByWorkspace400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/user-settings/" +
              userId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - User
      summary: Update user setting
      operationId: User_updateUserSettings
      description: Get a single user tag for a given workspace and user
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: User ID
          name: userId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateUserSettingsRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "workspaceId": "12345aZjDQZndHqs",
                      "_id": "qFR6a524nFARukmvF",
                      "userId": "123123123",
                      "firstDayOfWork": "2018-01-23T00:00:00.000Z",
                      "lastDayOfWork": "2019-01-23T00:00:00.000Z",
                      "billRate": 100,
                      "costRate": 70
                    }
              schema:
                $ref: '#/components/schemas/UserUpdateUserSettingsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/UserUpdateUserSettings400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var workspaceId = "WORKSPACE_ID";

              var apiKey = "API_KEY";

              var baseUrl = "https://app.hive.com/api/v1/";

              var endpoint = "workspaces/" + workspaceId + "/user-settings/" +
              userId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              var data = {
                billRate: 100
              };


              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/teams:
    get:
      tags:
        - Team
      summary: Get Teams
      operationId: Team_getAll
      description: Get all teams for your workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        _id: 'u32bac4d5e6f7g8h2',
                        name: 'NYC Office',
                        workspace: '111114d5e6f7g8h1',
                        members: ['232b3c4d5e6f7g8h1']
                      }
                    ]
              schema:
                $ref: '#/components/schemas/TeamGetAllResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TeamGetAll400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/teams";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /teams:
    post:
      tags:
        - Team
      summary: Create team
      operationId: Team_addNewTeam
      description: Create new team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamAddNewTeamRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "_id": "B5hrsBi54cTFCwxXb",
                        "name": "Awesome team",
                        "members": [
                            "PtZNLxgfuJzo4k7F9",
                            "NcL3Tjeh9dtcztoxs"
                        ],
                        "workspace": "yL4w4D8R4QBEQpn2v",
                        "deleted": false,
                        "userId": "ekYxhtbfKPfb4X49r",
                        "createdBy": "ekYxhtbfKPfb4X49r",
                        "createdAt": "2022-06-22T09:58:14.678Z",
                        "modifiedAt": "2022-06-22T09:58:14.677Z",
                        "isExternal": false
                    }
              schema:
                $ref: '#/components/schemas/TeamAddNewTeamResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TeamAddNewTeam400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/teams";
              var qs = "?user_id=" + userId;
              var url = baseUrl + endpoint + qs;

              var data = {
                workspace: "yL4w4D8R4QBEQpn2v",
                members: ["PtZNLxgfuJzo4k7F9", "NcL3Tjeh9dtcztoxs"],
                name: "Awesome team"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json",
                headers: { 'api_key': apiKey }
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /teams/{teamId}:
    put:
      tags:
        - Team
      summary: Update Team
      operationId: Team_updateTeamById
      description: >-
        Update existing team (full update which overwrites existing name or
        members fields)
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateTeamByIdRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "_id": "B5hrsBi54cTFCwxXb",
                        "name": "Awesome team updated name",
                        "members": [
                            "PtZNLxgfuJzo4k7F9"
                        ],
                        "workspace": "yL4w4D8R4QBEQpn2v",
                        "deleted": false,
                        "userId": "ekYxhtbfKPfb4X49r",
                        "createdBy": "ekYxhtbfKPfb4X49r",
                        "createdAt": "2022-06-22T09:58:14.678Z",
                        "modifiedAt": "2022-06-22T09:59:30.672Z",
                        "isExternal": false
                    }
              schema:
                $ref: '#/components/schemas/TeamUpdateTeamByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TeamUpdateTeamById400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var teamId = "TEAM_ID"
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/teams/" + teamId;
              var qs = "?user_id=" + userId;
              var url = baseUrl + endpoint + qs;

              var data = {
                members: ["PtZNLxgfuJzo4k7F9"],
                name: "Awesome team updated name"
              };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json",
                headers: { 'api_key': apiKey }
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - Team
      summary: Delete Team
      operationId: Team_deleteTeam
      description: Update existing team
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/TeamDeleteTeamResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TeamDeleteTeam400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var teamId = "TEAM_ID"
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/teams/" + teamId;
              var qs = "?user_id=" + userId;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                method: "DELETE",
                url: url,
                contentType: "application/json",
                headers: { 'api_key': apiKey }
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /teams/{teamId}/add-members:
    post:
      tags:
        - Team
      summary: Add members
      operationId: Team_addMembers
      description: Add team members
      parameters:
        - description: Team id
          name: teamId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamAddMembersRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "_id": "Nt4hgngmjvb6Rrqcn",
                        "name": "Awesome team",
                        "members": [
                            "ekYxhtbfKPfb4X49r",
                            "PtZNLxgfuJzo4k7F9"
                        ],
                        "workspace": "yL4w4D8R4QBEQpn2v",
                        "deleted": false,
                        "userId": "ekYxhtbfKPfb4X49r",
                        "createdBy": "ekYxhtbfKPfb4X49r",
                        "createdAt": "2022-06-20T09:41:28.204Z",
                        "modifiedAt": "2022-06-22T10:23:04.531Z",
                        "isExternal": false
                    }
              schema:
                $ref: '#/components/schemas/TeamAddMembersResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TeamAddMembers400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var teamId = "TEAM_ID"
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/teams/" + teamId + "/add-members";
              var qs = "?user_id=" + userId;
              var url = baseUrl + endpoint + qs;

              var data = {
                members: ["PtZNLxgfuJzo4k7F9"]
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json",
                headers: { 'api_key': apiKey }
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /teams/{teamId}/remove-members:
    post:
      tags:
        - Team
      summary: Remove members
      operationId: Team_removeMembers
      description: Remove team members
      parameters:
        - description: Team id
          name: teamId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRemoveMembersRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "_id": "Nt4hgngmjvb6Rrqcn",
                        "name": "Awesome team",
                        "members": [
                            "ekYxhtbfKPfb4X49r"
                        ],
                        "workspace": "yL4w4D8R4QBEQpn2v",
                        "deleted": false,
                        "userId": "ekYxhtbfKPfb4X49r",
                        "createdBy": "ekYxhtbfKPfb4X49r",
                        "createdAt": "2022-06-20T09:41:28.204Z",
                        "modifiedAt": "2022-06-22T10:28:16.391Z",
                        "isExternal": false
                    }
              schema:
                $ref: '#/components/schemas/TeamRemoveMembersResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TeamRemoveMembers400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var teamId = "TEAM_ID"
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1";
              var endpoint = "/teams/" + teamId + "/remove-members";
              var qs = "?user_id=" + userId;
              var url = baseUrl + endpoint + qs;

              var data = {
                members: ["PtZNLxgfuJzo4k7F9"]
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json",
                headers: { 'api_key': apiKey }
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/labels/{labelId}:
    get:
      tags:
        - Workspace
      summary: Get label
      operationId: Workspace_getLabelRoleTags
      description: Get all role tags for a workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - description: The ID of the Label you want to retrieve
          name: labelId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "Label 1",
                      "color":"#00CCCC",
                      "parent":null,
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceGetLabelRoleTagsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetLabelRoleTags400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var labelId = "LABEL_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/labels/" + labelId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    put:
      tags:
        - Workspace
      summary: Update label
      operationId: Workspace_updateLabel
      description: Update an existing role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Label ID
          name: labelId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateLabelRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "New label name",
                      "color":"#00CCCC",
                      "parent":"123abc456",
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    },
              schema:
                $ref: '#/components/schemas/WorkspaceUpdateLabelResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceUpdateLabel400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var labelId = "LABEL_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/labels/" + labelId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                "name": "New label name",
                "color":"#00CCCC",
                "parent":"123abc456"
              };

              $.ajax({
                method: "PUT",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    delete:
      tags:
        - Workspace
      summary: Delete label
      operationId: Workspace_deleteLabel
      description: Delete an existing role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
        - description: Label ID
          name: labelId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      message: "Success"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceDeleteLabelResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceDeleteLabel400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var labelId = "LABEL_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/labels/" + labelId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                method: "DELETE",
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/labels:
    get:
      tags:
        - Workspace
      summary: Get labels
      operationId: Workspace_getAllLabels
      description: Get all role tags for a workspace
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 200
        - name: skip
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: Allowed values [name, createdAt]
          name: sortBy
          in: query
          schema:
            type: string
            default: name
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    [
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Label 1",
                        "color":"#000000",
                        "parent":null,
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
                      {
                        "_id": "qFR6a524n14flfLfF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Label 2",
                        "color":"#333333",
                        "parent":"qFR6a524nFARukmvF",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/WorkspaceGetAllLabelsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetAllLabels400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/labels";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - Workspace
      summary: Create label
      operationId: Workspace_createLabel
      description: Create a new role tag
      parameters:
        - description: Workspace ID
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateLabelRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "qFR6a524nFARukmvF",
                      "workspace": "12345aZjDQZndHqs",
                      "name": "Label 1",
                      "color":"#00CCCC",
                      "parent":null,
                      "createdBy": "12345gfuJzo4k7F9",
                      "modifiedBy": "12345xgfuJzo4k7F9",
                      "createdAt": "2018-01-23T22:14:24.862Z",
                      "modifiedAt": "2018-01-23T22:14:24.862Z"
                    },
              schema:
                $ref: '#/components/schemas/WorkspaceCreateLabelResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceCreateLabel400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var workspaceId = "WORKSPACE_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "workspaces/" + workspaceId + "/labels";
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              var data = {
                name: "Label 1",
                color:"#00CCCC"
              };

              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
                contentType: "application/json"
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/custom-fields/{customFieldId}:
    get:
      tags:
        - Workspace
      summary: Get custom field
      operationId: Workspace_getCustomField
      description: ''
      parameters:
        - description: Id of the custom field
          name: customFieldId
          in: path
          schema:
            type: string
          required: true
        - description: Workspace ID you wish to see custom fields for
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "customFieldId",
                      "label": "Custom Field Nmae",
                      "type": "text",
                      "workspace": "workspaceId",
                      "deleted": false,
                      "modifiedAt": "2019-10-22T00:00:00.000Z",
                      "modifiedBy": "server",
                      "attachedToObject": "action"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomFieldResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomField400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var customFieldId = "CUSTOM_FIELD_ID";

              var apiKey = "API_KEY";

              var baseUrl =
              "https://app.hive.com/api/v1/workspaces/workspaceId";

              var endpoint = "/custom-fields/" + customFieldId;

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /workspaces/{workspaceId}/custom-fields:
    get:
      tags:
        - Workspace
      summary: Get custom fields
      operationId: Workspace_getCustomFields
      description: ''
      parameters:
        - description: Workspace ID you wish to see custom fields for
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "customFieldId",
                      "label": "Custom Field Nmae",
                      "type": "text",
                      "workspace": "workspaceId",
                      "deleted": false,
                      "modifiedAt": "2019-10-22T00:00:00.000Z",
                      "modifiedBy": "server",
                      "attachedToObject": "action"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomFieldsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceGetCustomFields400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var customFieldId = "CUSTOM_FIELD_ID";

              var apiKey = "API_KEY";

              var baseUrl =
              "https://app.hive.com/api/v1/workspaces/workspaceId/custom-fields";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + qs;


              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
    post:
      tags:
        - Workspace
      summary: Create custom field
      operationId: Workspace_createCustomField
      description: ''
      parameters:
        - description: Workspace ID you wish to see custom fields for
          name: workspaceId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateCustomFieldRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "_id": "customFieldId",
                      "label": "New Custom Field",
                      "type": "select",
                      "workspace": "workspaceId",
                      "deleted": false,
                      "modifiedAt": "2019-10-22T00:00:00.000Z",
                      "modifiedBy": "server",
                      "attachedToObject": "action"
                    }
              schema:
                $ref: '#/components/schemas/WorkspaceCreateCustomFieldResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkspaceCreateCustomField400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: >-
              var userId = "USER_ID";

              var customFieldId = "CUSTOM_FIELD_ID";

              var apiKey = "API_KEY";

              var baseUrl =
              "https://app.hive.com/api/v1/workspaces/workspaceId/custom-fields";

              var qs = "?user_id=" + userId + "&api_key=" + apiKey;

              var url = baseUrl + endpoint + qs;


              var data = {
                label: "New Custom Field",
                type: "select",
                itemType: "action"
                dropdownValues: ["Option 1", "Option 2"],
                allowMultiSelect: true
              };


              $.ajax({
                method: "POST",
                url: url,
                data: JSON.stringify(data),
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /project-statuses/{projectStatusId}:
    get:
      tags:
        - Project
      summary: Get status
      operationId: Project_getStatus
      description: ''
      parameters:
        - description: Id of the status
          name: projectStatusId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "_id": "PROJECT_STATUS_ID",
                      "name": "Project status name",
                      "color": "#000000",
                      "workspace": "Some workspaceId",
                      "createdAt": "2019-01-01T00:00:00.000Z",
                      "modifiedAt": "2019-01-01T00:00:00.000Z",
                      "createdBy": "Some user Id",
                      "modifiedBy": "Some user Id",
                      
                    }
              schema:
                $ref: '#/components/schemas/ProjectGetStatusResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectGetStatus400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: |-
              var userId = "USER_ID";
              var projectStatusId = "PROJECT_STATUS_ID";
              var apiKey = "API_KEY";
              var baseUrl = "https://app.hive.com/api/v1/";
              var endpoint = "/project-statuses/" + projectStatusId;
              var qs = "?user_id=" + userId + "&api_key=" + apiKey;
              var url = baseUrl + endpoint + qs;

              $.ajax({
                url: url,
              }).done(function(data) {
                console.log(data);
              });
        samples-languages:
          - javascript
  /project-statuses:
    post:
      tags:
        - Project
      summary: Create status
      operationId: Project_createStatus
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateStatusRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "_id": "Status Id",
                      "name": "Status name",
                      "color": "#000000"
                    }
              schema:
                $ref: '#/components/schemas/ProjectCreateStatusResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectCreateStatus400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: javascript
            code: "var userId = \"USER_ID\";\nvar apiKey = \"API_KEY\";\nvar baseUrl = \"https://app.hive.com/api/v1/\";\nvar endpoint = \"project-statuses\";\nvar qs = \"?user_id=\" + userId + \"&api_key=\" + apiKey;\nvar url = baseUrl + endpoint + qs;\n\nvar data = {\n\tname: \"Status name\",\n  color: \"#000000\",\n  workspaceId: \"Some workspace Id\"\n};\n\n$.ajax({\n  method: \"POST\",\n  url: url,\n  data: JSON.stringify(data),\n  contentType: \"application/json\"\n}).done(function(data) {\n  console.log(data);\n});"
        samples-languages:
          - javascript
  /webhooks:
    post:
      tags:
        - Webhook
      summary: Create webhook
      operationId: Webhook_createHandler
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateHandlerRequest'
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Webhook created",
                        "webhook": {
                            "_id": "v2Y3CNCDyzeHEeorr",
                            "name": "Tell me when Projects are inserted",
                            "workspaceId": "oQkqDmkXzoHwjatAA",
                            "trigger": "projects::i",
                            "url": "https://webhook.site/4bfcb247-7370-4b5f-822a-6b6036db808e",
                            "projectIds": [],
                            "fields": [],
                            "filters": [],
                            "operator": "OR",
                            "ownerId": "9Mbh6keyT33iNN2xp",
                            "deleted": false,
                            "createdAt": "2023-09-27T15:21:14.839Z",
                            "modifiedAt": "2023-09-27T15:21:14.839Z",
                            "createdBy": "9Mbh6keyT33iNN2xp",
                            "modifiedBy": "9Mbh6keyT33iNN2xp"
                        }
                    }
              schema:
                $ref: '#/components/schemas/WebhookCreateHandlerResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WebhookCreateHandler400Response'
      deprecated: false
  /webhooks/{webhookId}:
    delete:
      tags:
        - Webhook
      summary: Delete webhook
      operationId: Webhook_removeHandler
      description: ''
      parameters:
        - description: ID of the Webhook to delete
          name: webhookId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Webhook deleted"
                    }
              schema:
                $ref: '#/components/schemas/WebhookRemoveHandlerResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WebhookRemoveHandler400Response'
      deprecated: false
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: api_key
    sec1:
      type: apiKey
      in: query
      name: user_id
  schemas:
    WorkspacesworkspaceidactivityFeedsRequest:
      type: object
      required:
        - type
        - assignedTo
        - attachedItemType
        - attachedItemId
        - body
      properties:
        title:
          description: Title
          type: string
        type:
          description: >-
            Type determines the icon used ('comment', 'addProject', 'action',
            'due', 'assignees', 'subaction', 'ready')
          type: string
        bucket:
          description: Bucket for the ActivityFeed
          type: string
          default: activityFeed
        assignedTo:
          description: UserId to receive this ActivityFeed
          type: string
        attachedItemType:
          description: '''action'' or ''project'''
          type: string
        attachedItemId:
          description: Id of the related item
          type: string
        body:
          type: string
    UserUpdateUserRequest:
      type: object
      properties:
        profile:
          description: User profile
          properties:
            firstName:
              description: First name
              type: string
            lastName:
              description: Last name
              type: string
          required: []
          type: object
    UserRemoveFromWorkspaceRequest:
      type: object
      properties:
        userId:
          description: User ID of the user to remove
          type: string
    UserInviteNewUserRequest:
      type: object
      required:
        - email
      properties:
        email:
          description: Email Address
          type: string
        fullName:
          description: Full name
          type: string
        shouldSendInvite:
          description: Send email notification
          type: boolean
          default: true
    ActionUpdateActionByIdRequest:
      type: object
      properties:
        title:
          description: Set new action title
          type: string
        description:
          description: >-
            Overwrite the description of the Action. Supports basic HTML (h1,
            h2, a, b, u tags).
          type: string
        status:
          description: The new status of the action
          type: string
        update_children:
          description: >-
            True if this action's children should also have their statuses
            updated
          type: boolean
          default: true
        projectId:
          description: Assign action to a specific project
          type: string
        assignees:
          description: User IDs
          type: array
          default:
            - '[]'
          items:
            type: string
        labels:
          description: Set new Labels
          type: array
          items:
            type: string
        urgent:
          description: Urgency state
          type: boolean
        privacy:
          description: 'Set privacy value (allowed values: "private", "public")'
          type: string
        checked:
          description: Checked state
          type: boolean
        scheduledDate:
          description: Set start date
          type: string
          format: date
        deadline:
          description: Set end date
          type: string
          format: date
        parent:
          description: Set new parent for action
          type: string
        customFields:
          description: >-
            Add new or update an existing custom field. Work with 'text' custom
            fields only.
          type: array
          items:
            properties:
              label:
                description: Label of the field
                type: string
              value:
                description: Value of the field
                type: string
            type: object
        shiftSubactionsDeadline:
          description: Shift subactions by same date update
          type: boolean
          default: false
        archived:
          description: True if this action is to be archived
          type: boolean
          default: false
        phaseId:
          description: >-
            ID of a project phase which will be assigned to the action. If both
            phaseId and phaseName are sent than phaseId will be used
          type: string
        phaseName:
          description: >-
            Name of a project phase which will be assigned to the action. If
            both phaseId and phaseName are sent than phaseId will be used
          type: string
        followingUserIds:
          description: Enter each userId to be included as an action card follower.
          type: array
          items:
            type: string
    ActionListActionsRequest:
      type: object
      properties:
        title:
          description: Title of the action
          type: string
        description:
          description: Description of the action
          type: string
        workspace:
          description: ID of the workspace
          type: string
        projectId:
          description: Assign action to a specific project
          type: string
        assignees:
          description: >-
            User Ids of action assignees; if value isn't passed the action will
            be assigned to the user Id of the request
          type: array
          items:
            type: string
        labels:
          description: Set Labels (Label IDs) for the Action
          type: array
          items:
            type: string
        deadline:
          description: 'Date string to set the deadline (date format: yyyy/mm/dd)'
          type: string
        scheduledDate:
          description: 'Date string to set the deadline (date format: yyyy/mm/dd)'
          type: string
          default: Date string to set the start date
        processId:
          description: Pass action template id to apply an action template
          type: string
        customFields:
          description: >-
            Add custom fields to the action: Each object must contain label
            (string) and value (string)
          type: array
          items:
            properties:
              label:
                description: Label of the field
                type: string
              value:
                description: Value of the field
                type: string
            type: object
        parentId:
          description: ID of an Action to set as the parent for your new Action
          type: string
        phaseId:
          description: >-
            ID of a project phase which will be assigned to the created action.
            If both phaseId and phaseName are sent than phaseId will be used
          type: string
        phaseName:
          description: >-
            Name of a project phase which will be assigned to the created
            action. If both phaseId and phaseName are sent than phaseId will be
            used
          type: string
    ActionCreateCommentRequest:
      type: object
      properties:
        body:
          description: Number of comments
          type: string
    ActionAttachFileRequest:
      type: object
      properties:
        url:
          description: File URL.
          type: string
    ActionApplyTemplateRequest:
      type: object
      required:
        - processId
      properties:
        processId:
          description: Id of the existing action template (workflow)
          type: string
    MessageCreateNewMessageRequest:
      type: object
      properties:
        workspace:
          description: ID of the workspace
          type: string
        body:
          description: Body of the message
          type: string
        senderName:
          description: The name of the sender
          type: string
        senderPicture:
          description: URL of the sender picture
          type: string
        containerId:
          description: Group the message will be created in
          type: string
        color:
          description: >-
            Optional background color for the message. Options are yellow,
            purple, green, red, gray
          type: string
    ProjectUpdateByIdRequest:
      type: object
      properties:
        description:
          description: Project description
          type: string
        name:
          description: Project name
          type: string
        startDate:
          description: Start date of the Project. Pass null value to unset
          type: string
          format: date
        endDate:
          description: End date of the Project. Pass null value to unset
          type: string
          format: date
        color:
          description: Optional hex code for project color
          type: string
        accessOption:
          description: Project access permissions. Either public or private
          type: string
        parentProject:
          type: string
          default: Id of parent project
        sharingType:
          description: Sharing type of the project (one of "everyone", "custom" or "me")
          type: string
        members:
          description: Array of User IDs to set as members of the project.
          type: array
          items:
            type: string
        teams:
          description: Array of Team IDs to set as members of the project.
          type: array
          items:
            type: string
        archived:
          type: boolean
          default: false
        template:
          description: >-
            template could be a string - ID of template to apply. Array of IDs.
            Object - object with settings for template appliance. Array of
            objects with settings for template appliance
          type: array
          items:
            properties:
              templateId:
                description: ID of template to apply
                type: string
              importWith:
                type: object
                properties:
                  description:
                    type: boolean
                    default: false
                  projectCustomFields:
                    type: boolean
                    default: false
                  includeWeekends:
                    type: boolean
                    default: false
                  customFields:
                    type: boolean
                    default: false
                  ganttGroupBy:
                    type: boolean
                    default: false
                  attachments:
                    type: boolean
                    default: false
                  permissions:
                    type: boolean
                    default: false
                  assignees:
                    type: boolean
                    default: false
                  deadline:
                    type: boolean
                    default: false
                  statuses:
                    type: boolean
                    default: false
                  sortType:
                    type: boolean
                    default: false
                  viewType:
                    type: boolean
                    default: false
                  labels:
                    type: boolean
                    default: false
                  actionDateSync:
                    type: boolean
                    default: false
                  ganttAutoScheduling:
                    type: boolean
                    default: false
                  automationWorkflows:
                    type: boolean
                    default: false
                  approvals:
                    type: boolean
                    default: false
                  projectPermissions:
                    type: boolean
                    default: false
                  advancedSettings:
                    description: Controls whether advanced settings is imported
                    type: boolean
                    default: false
              template:
                description: >-
                  true - means that it is a project template. false -  common
                  project
                type: boolean
                default: false
              projectPeopleIds:
                type: array
                default: []
                items:
                  type: string
              overrideLabels:
                type: boolean
                default: false
              shouldRemoveFromParentProjectIfNoParent:
                type: boolean
                default: true
            type: object
        budget:
          description: Budget value for the Project
          type: integer
          format: int32
        isDraftMode:
          description: >-
            Boolean value representing whether a project is in Draft Mode state
            or not. Pass boolean value to update Draft Mode state of the
            project.
          type: boolean
    ProjectCreateNewProjectRequest:
      type: object
      required:
        - workspace
        - name
      properties:
        description:
          description: Project description
          type: string
        workspace:
          description: ID of the workspace for the project to be created in
          type: string
        name:
          description: Name of the project
          type: string
        startDate:
          description: Start date of the Project
          type: string
          format: date
        endDate:
          description: End date of the Project
          type: string
          format: date
        sharingType:
          description: Sharing type of the project (one of "everyone", "custom" or "me")
          type: string
          default: everyone
        members:
          description: >-
            Array of User IDs to set as members of the project. Only relevant if
            "sharingType" is set to "custom"
          type: array
          default:
            - '[]'
          items:
            type: string
        teams:
          description: >-
            Array of Team IDs to set as members of the project. Only relevant if
            "sharingType" is set to "custom"
          type: array
          items:
            type: string
        projectCustomFields:
          description: Custom fields stored on the project-level
          type: array
          items:
            properties:
              label:
                description: Human readable label for the custom field
                type: string
              _id:
                description: Unique string ID
                type: string
              type:
                description: >-
                  Type of the custom field. One of the following is allowed:
                  text, number, date, user, project, select, formula.
                type: string
              value:
                description: Value of the "text" custom field.
                type: string
              numberValue:
                description: Value of the "number" custom field.
                type: integer
                format: int32
              dateValue:
                description: Value of the "date" custom field. ISO 8601 string.
                type: string
              formula:
                description: Value of the "formula" custom field.
                type: string
              dropdownValues:
                description: >-
                  Value of the "select" custom field. Leave empty for "user" and
                  "project" type.
                type: array
                default: []
                items:
                  type: string
              selectedValues:
                description: >-
                  Selected value of the "select", "user" or "project" custom
                  field.
                type: array
                default: []
                items:
                  type: string
              allowMultiSelect:
                description: Whether or not "selectedValues" can hold multiple values
                type: boolean
                default: false
            required:
              - label
            type: object
        color:
          description: Optional hex code for project color
          type: string
        template:
          description: Pass "true" if you want create project as template
          type: boolean
          default: false
        copyFrom:
          description: ID of the project to make a copy from
          type: string
        copyActionStatuses:
          description: >-
            Retaining action statuses when copying project. Works only if
            'copyFrom' specified
          type: boolean
          default: false
        copyAssignees:
          description: >-
            Retaining action assignees when copying project. Works only if
            'copyFrom' specified
          type: boolean
          default: false
        accessOption:
          description: Sets the project access to either private or public
          type: string
          default: private
        phases:
          description: Creates phases for the project
          type: array
          items:
            type: string
        parentProject:
          type: string
          default: Id of parentProject
        budget:
          description: Budget value for the Project
          type: integer
          default: 0
          format: int32
    ProjectAddCustomFieldRequest:
      type: object
      required:
        - label
      properties:
        label:
          description: Label for the custom field
          type: string
        type:
          description: >-
            Type of the custom field. One of the following is allowed: text,
            number, date, user, project, select, formula.
          type: string
          default: text
        hidden:
          description: If true, the value will be hidden in the UI but accessible via API
          type: boolean
          default: false
        value:
          description: Value of the "text" custom field.
          type: string
        numberValue:
          description: Value of the "number" custom field.
          type: integer
          format: int32
        dateValue:
          description: Value of the "date" custom field. ISO 8601 string.
          type: string
        formula:
          description: Value of the "formula" custom field.
          type: string
        dropdownValues:
          description: >-
            Value of the "select" custom field. Leave empty for "user" and
            "project" type.
          type: array
          items:
            type: string
        selectedValues:
          description: Selected value of the "select", "user" or "project" custom field.
          type: array
          items:
            type: string
        allowMultiSelect:
          description: Whether or not "selectedValues" can hold multiple values
          type: boolean
          default: false
    ProjectUpdateCustomFieldRequest:
      type: object
      properties:
        label:
          description: Label for the custom field
          type: string
        value:
          description: >-
            Value of the custom field. If custom field type is date, you can
            pass date string as a value. Please pass date with time in ISO 8601
            format. We pass date with time in order to avoid next bug When we
            send API request with date "2023-06-26" from Chicago, IL (GMT-5). In
            DB value will be saved as UTC date "2023-06-26T00:00:00.000Z" But
            when we display it on the client UI we convert UTC date to user
            local timezone (subtract 5 hours) and get "2023-06-25T19:00:00-0500"
            (previous day) Exists several ways to fix it. 1. Pass date with
            timezone "2023-06-26T00:00:00-0500" 2. Pass data in UTC but with
            time shifted by negative GTM offset "2023-06-26T05:00:00Z" You could
            shift time more than GTM offset. For example add 12 hours for
            Chicago instead of 5 "2023-06-26T12:00:00Z"
          type: string
    ProjectSetStatusRequest:
      type: object
      required:
        - statusId
      properties:
        description:
          description: Project status description
          type: string
        statusId:
          description: Id of the existing project status
          type: string
    ResourceAssignmentUpdateAssignmentByIdRequest:
      type: object
      properties:
        startDate:
          description: Start date of the Project
          type: string
          format: date
        endDate:
          description: End date of the Project
          type: string
          format: date
        projectId:
          description: ID of the project for the resourcing
          type: string
        notes:
          description: Project description
          type: string
        assignmentType:
          description: Type of resourcing (regular or timeOff)
          type: string
          default: regular
        allocationType:
          description: Type of hours breakdown (hoursPerDay or fixedHours)
          type: string
          default: hoursPerDay
        hoursPerDay:
          description: Hours worked per day
          type: integer
          format: int32
        fixedHours:
          description: Total hours across entire resourcing
          type: integer
          format: int32
        fixedDisplayType:
          description: Display type (hours or days)
          type: string
          default: hours
    ResourceAssignmentCreateNewAssignmentRequest:
      type: object
      required:
        - workspace
        - resourceId
        - startDate
        - endDate
      properties:
        workspace:
          description: ID of the workspace for the resourceAssignment to be created in
          type: string
        resourceId:
          description: ID of the user for the resourceAssignment
          type: string
        startDate:
          description: Start date of the resourceAssignment
          type: string
          format: date
        endDate:
          description: End date of the resourceAssignment
          type: string
          format: date
        projectId:
          description: ID of the project for the resourceAssignment
          type: string
          default: 'null'
        notes:
          description: Project description
          type: string
        assignmentType:
          description: Type of resourceAssignment (regular or timeOff)
          type: string
          default: regular
        allocationType:
          description: Type of hours breakdown (hoursPerDay or fixedHours)
          type: string
          default: hoursPerDay
        hoursPerDay:
          description: Hours worked per day
          type: integer
          default: 0
          format: int32
        fixedHours:
          description: Total hours across entire resourceAssignment
          type: integer
          default: 0
          format: int32
        fixedDisplayType:
          description: Display type (hours or days)
          type: string
          default: hours
    WorkspaceCreateCustomTagRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Name of the custom tag
          type: string
        type:
          description: Type of the custom tag, can be "user" or "project"
          type: string
        options:
          description: Array of options that are available for this custom tag
          type: array
          default:
            - '[]'
          items:
            type: string
        isMulti:
          description: Whether or not this custom tag can be multi select
          type: boolean
          default: false
    WorkspaceUpdateCustomTagRequest:
      type: object
      properties:
        name:
          description: Name of the custom tag
          type: string
        options:
          description: Array of options that are available for this custom tag
          type: array
          items:
            type: string
        isMulti:
          description: Whether or not this custom tag can be multi select
          type: boolean
    UserUpdateTagRequest:
      type: object
      required:
        - selectedOptions
      properties:
        selectedOptions:
          description: Selected options for this user tag
          type: array
          items:
            type: string
    ProjectUpdateTagRequest:
      type: object
      required:
        - selectedOptions
      properties:
        selectedOptions:
          description: Selected options for this user tag
          type: array
          items:
            type: string
    WorkspaceCreateRoleTagRequest:
      type: object
      required:
        - name
      properties:
        name:
          description: Name of the role tag
          type: string
    WorkspaceUpdateRoleTagRequest:
      type: object
      required:
        - name
      properties:
        name:
          description: Role Tag name
          type: string
    UserUpdateUserSettingsRequest:
      type: object
      properties:
        firstDayOfWork:
          description: First day of work
          type: string
        lastDayOfWork:
          description: Last day of work
          type: string
        billRate:
          description: Bill rate
          type: string
        costRate:
          description: Cost rate
          type: string
    TeamAddNewTeamRequest:
      type: object
      required:
        - workspace
        - members
        - name
      properties:
        workspace:
          description: Workspace id
          type: string
        members:
          description: Array of user ids. Each user should be workspace members.
          type: array
          items:
            type: string
        name:
          description: Team name. Not empty string
          type: string
    TeamUpdateTeamByIdRequest:
      type: object
      required:
        - members
        - name
      properties:
        members:
          description: Array of user ids. Each user should be workspace members.
          type: array
          items:
            type: string
        name:
          description: Team name. Not empty string.
          type: string
    TeamAddMembersRequest:
      type: object
      properties:
        members:
          description: Array of user ids. Each user should be workspace members
          type: array
          items:
            type: string
    TeamRemoveMembersRequest:
      type: object
      properties:
        members:
          description: Array of user ids
          type: array
          items:
            type: string
    WorkspaceUpdateLabelRequest:
      type: object
      properties:
        name:
          description: Label name
          type: string
        parent:
          description: _id of another label
          type: string
        color:
          description: Hex value of a color
          type: string
    WorkspaceCreateLabelRequest:
      type: object
      required:
        - name
        - color
      properties:
        name:
          description: Name of the label
          type: string
        parent:
          description: _id of parent label
          type: string
        color:
          description: hex value of a color
          type: string
    WorkspaceCreateCustomFieldRequest:
      type: object
      required:
        - label
      properties:
        label:
          description: Label for this new custom field
          type: string
        type:
          description: Type of custom field
          type: string
          enum:
            - '"user"'
            - '"select"'
            - '"text"'
            - '"date"'
            - '"project"'
            - '"formula"'
        defaultValue:
          description: Default value for this custom field
          type: string
        dropdownValues:
          description: Set of dropdown values for "select" custom fields
          type: array
          items:
            type: string
        allowMultiSelect:
          description: >-
            Boolean for whether this "select" custom field should allow multi
            select
          type: boolean
        itemType:
          description: >-
            Also referred to as attachedToObject elsewhere in the api. Which
            object this custom field should be attached to
          type: string
          enum:
            - '"action"'
            - '"project"'
    ProjectCreateStatusRequest:
      type: object
      required:
        - name
        - color
        - workspaceId
      properties:
        name:
          description: Status name
          type: string
        color:
          description: Status color
          type: string
        workspaceId:
          description: Status workspace
          type: string
    WebhookCreateHandlerRequest:
      type: object
      required:
        - name
        - workspaceId
        - trigger
        - url
      properties:
        name:
          type: string
        workspaceId:
          type: string
        projectIds:
          type: array
          default:
            - '[]'
          items:
            type: string
        trigger:
          type: string
        fields:
          type: array
          default:
            - '[]'
          items:
            type: string
        url:
          type: string
        additionalHeaders:
          type: array
          items:
            description: >-
              WARNING: Missing items property in array schema. Missing items
              property has been filled with this AnyType schema.
    WorkspaceListAllWorkspacesResponse:
      type: string
      example: "[\n  {\n  \t\"id\": \"1a2b3c4d5e6f7g8h9\",\n\t  \"name\": \"Honey Enterprises\",\n\t  \"members\": [\n\t    '1234abc',\n\t    '5678zyc'\n\t  ],\n\t  \"createdAt\": \"2017-05-18T15:26:17.407Z\",\n\t  \"modifiedAt\": \"2017-05-19T02:25:06.190Z\",\n\t  \"createdBy\": \"1234abcuJzo4k7F9\",\n\t  \"modifiedBy\": \"1234abcuJzo4k7F9\"\n\t}\n]\n\n"
    WorkspaceListAllWorkspaces400Response:
      type: object
      properties: {}
    WorkspaceGetChatGroupsResponse:
      type: string
      example: |-
        [
            {
              "id": "8MRZ6oYzRMJ4eJYnR",
              "name": "Everyone",
              "members": [
                '1234abcuJzo4k7F9',
                '6789abcuJzo4k7F9'
               ],
              "workspace": "12345aZjDQZndHqs",
              "createdAt": "2017-05-18T15:26:17.407Z",
              "createdBy": "1234abcuJzo4k7F9",
              "modifiedBy": "1234abcuJzo4k7F9"
            },
            {
              "id": "8S8pMXXJwCeExYWzq",
              "name": "Bee Hive Gossip",
              "members": [
                '1234abcuJzo4k7F9',
                '6789abcuJzo4k7F9'
               ],
              "workspace": "12345aZjDQZndHqs",
              "createdAt": "2017-05-18T15:26:17.407Z",
              "createdBy": "1234abcuJzo4k7F9",
              "modifiedBy": "1234abcuJzo4k7F9"    
            },
            {
              "id": "8yxNHYsvqYCDFP19J",
              "name": "Maria von Trapp",
              "members": [
                '1234abcuJzo4k7F9',
                '6789abcuJzo4k7F9'
               ],
              "workspace": "12345aZjDQZndHqs",
              "createdAt": "2017-05-18T15:26:17.407Z",
              "createdBy": "1234abcuJzo4k7F9",
              "modifiedBy": "1234abcuJzo4k7F9"    
            }
          ]
          
    WorkspaceGetChatGroups400Response:
      type: object
      properties: {}
    WorkspacesworkspaceidactivityFeedsResponse:
      type: object
      properties:
        title:
          type: string
          example: Comment!
        id:
          type: string
          example: abcde123456
        workspace:
          type: string
          example: abcde123456
        bucket:
          type: string
          example: activityFeed
        assignedTo:
          type: string
          example: abcde123456
        attachedItemType:
          type: string
          example: action
        attachedItemId:
          type: string
          example: abcde123456
        body:
          type: string
          example: Comment body
        createdAt:
          type: string
          example: '1900-01-01T00:00:00.000Z'
        modifiedAt:
          type: string
          example: '1900-01-01T00:00:00.000Z'
        createdBy:
          type: string
          example: server
        modifiedBy:
          type: string
          example: server
    WorkspacesworkspaceidactivityFeeds400Response:
      type: object
      properties: {}
    UserGetUserByIdResponse:
      type: object
      properties:
        id:
          type: string
          example: 232b3c4d5e6f7g8h1
        profile:
          type: object
          properties:
            firstName:
              type: string
              example: Jane
            lastName:
              type: string
              example: Doe
        fullName:
          type: string
          example: Jane Doe
        email:
          type: string
          example: john.doe@hive.com
    UserGetUserById400Response:
      type: object
      properties: {}
    UserUpdateUserResponse:
      type: object
      properties:
        id:
          type: string
          example: 232b3c4d5e6f7g8h1
        profile:
          type: object
          properties:
            firstName:
              type: string
              example: Jane
            lastName:
              type: string
              example: Doe
        fullName:
          type: string
          example: Jane Doe
        email:
          type: string
          example: john.doe@hive.com
    UserUpdateUser400Response:
      type: object
      properties: {}
    UserListByEmailResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: 232b3c4d5e6f7g8h1
          profile:
            type: object
            properties:
              firstName:
                type: string
                example: Test
              lastName:
                type: string
                example: User
          fullName:
            type: string
            example: Test User
          email:
            type: string
            example: test@example.com
    UserListByEmail400Response:
      type: object
      properties: {}
    UserRemoveFromWorkspaceResponse:
      type: object
      properties: {}
    UserRemoveFromWorkspace400Response:
      type: object
      properties: {}
    UserGetWorkspaceUsersResponse:
      type: string
      example: |
        [
          {
            "id": "22YK3N5uGpzMdw7fm",
            "profile": {
              "firstName": "Vera",
              "lastName": "Morrisville"
            },
            "fullName": "Vera Morrisville",
            "email": "john.doe@hive.com",
          },
          {
            "id": "5oSp4usru9FTsFCuH",
            "profile": {
              "firstName": "Scott",
              "lastName": "Brown"
            },
            "fullName": "Scott Brown",
            "email": "john.doe@hive.com",
          },
        ]
    UserGetWorkspaceUsers400Response:
      type: object
      properties: {}
    UserInviteNewUserResponse:
      type: object
      properties:
        id:
          type: string
          example: 232b3c4d5e6f7g8h1
        profile:
          type: object
          properties:
            firstName:
              type: string
              example: Test
            lastName:
              type: string
              example: User
        fullName:
          type: string
          example: Test User
        email:
          type: string
          example: test@example.com
    UserInviteNewUser400Response:
      type: object
      properties: {}
    UserListExternalUsersResponse:
      type: string
      example: |
        [
          {
            "id": "22YK3N5uGpzMdw7fm",
            "profile": {
              "firstName": "External",
              "lastName": "User"
            },
            "fullName": "External User",
            "email": "john.doe@hive.com",
            "managers": []
          },
        ]
    UserListExternalUsers400Response:
      type: array
      items:
        type: object
        properties:
          error:
            type: integer
            example: 400
            default: 0
          message:
            type: string
            example: Workspace not found.
    ActionRemoveByIdResponse:
      type: object
      properties:
        message:
          type: string
          example: Action successfully deleted
    ActionRemoveById400Response:
      type: object
      properties: {}
    ActionGetDetailsResponse:
      type: string
      example: "{\n  \"id\": \"232b3c4d5e6f7g8h1\",\n  \"title\": \"Action title\",\n  \"workspace\": \"w32bac4d5e6f7g8h2\",\n  \"assignees\": [],\n  \"projectId\": null,\n  \"customFields\": [],\n  \"createdAt\": \"2019-01-01T00:00:00.000Z\",\n  \"modifiedAt\": \"2019-01-01T00:00:00.000Z\",\n  \"createdBy\": \"u32bac4d5e6f7g8h2\",\n  \"modifiedBy\": \"u32bac4d5e6f7g8h2\",\n  \"status\": \"Unstarted\",\n  \"deadline\": null,\n  \"scheduledDate\": null,\n  \"checkedDate\": null,\n  \"parent\": null,\n  \"root\": null,\n  \"archived\":false,\n  \"deleted\":false,\n  \"hasSubactions\": false,\n  \"estimate\": null,\n  \"estimates\":[\n    {\"userId\":user12345,\"time\":7200}\n  ]\n  \"milestone\": false,\n  \"loggedTime\": [\n    {\n      \"userId\":\"user12345\",\n      \"time\": 7200,\n      \"date\":\"2019-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"phaseId\":\"123ab456\",\n  \"phaseName\":\"planning\",\n  \"priority\": {\n  \t  \"name\":\"Urgent\",\n      \"level\": 1,\n      \"color\": \"#f6781a\",\n      \"_id\": \"abc321\"\n  }\n}"
    ActionGetDetails400Response:
      type: object
      properties: {}
    ActionUpdateActionByIdResponse:
      type: object
      properties:
        title:
          type: string
          example: Action title
        id:
          type: string
          example: 1a2b3c4d5e6f7g8h9
        workspace:
          type: string
          example: fd8s97f9sd87f89s
        assignees:
          type: array
          items:
            description: >-
              WARNING: Missing items property in array schema. Missing items
              property has been filled with this AnyType schema.
        projectId: {}
        customFields:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: 1a2b3c4d5e6f7g8gn
              label:
                type: string
                example: customActionField
              type:
                type: string
                example: text
              rank:
                type: number
                example: 2.3843301617611736
                default: 0
              dropdownValues:
                type: array
                items:
                  description: >-
                    WARNING: Missing items property in array schema. Missing
                    items property has been filled with this AnyType schema.
              allowMultiSelect:
                type: boolean
                example: false
                default: true
              id:
                type: string
                example: XkvuQsZ6vrLoba8gN
              value:
                type: string
                example: customFieldValue
              dateValue: {}
        createdAt:
          type: string
          example: '2018-07-27T17:10:49.687Z'
        modifiedAt:
          type: string
          example: '2018-07-30T18:12:10.411Z'
        createdBy:
          type: string
          example: fds879a7fd8s9a
        modifiedBy:
          type: string
          example: fds879a7fd8s9a
        status:
          type: string
          example: In Progress
        deadline: {}
        scheduledDate: {}
        checkedDate: {}
        parent: {}
        root: {}
        hasSubactions:
          type: boolean
          example: false
          default: true
        estimate: {}
        loggedTime:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                example: user12345
              time:
                type: integer
                example: 7200
                default: 0
              date:
                type: string
                example: '2019-01-01T00:00:00.000Z'
        archived:
          type: boolean
          example: false
          default: true
    ActionUpdateActionById400Response:
      type: object
      properties: {}
    WorkspaceGetActionsResponse:
      type: string
      example: "[\n  {\n    \"id\": \"jArt6JZpezAMZimzy\",\n    \"title\": \"Prepare for weekly product meeting\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"assignees\": [],\n    \"projectId\": null,\n    \"createdAt\": \"2015-07-09T20:33:56.465Z\",\n    \"modifiedAt\": \"2016-08-23T07:49:09.621Z\",\n    \"createdBy\": \"1234abcuJzo4k7F9\",\n    \"modifiedBy\": \"1234abcuJzo4k7F9\",\n    \"status\": \"Unstarted\",\n    \"deadline\": null,\n    \"scheduledDate\": null,\n    \"checkedDate\": null,\n    \"parent\": null,\n    \"root\": null,\n    \"archived\":false,\n    \"deleted\":false,\n    \"hasSubactions\": false,\n    \"estimate\": null,\n    \"estimates\": [\n      {\"userId\":\"user12345\",\"time\":7200}\n    ]\n    \"milestone\": false,\n    \"loggedTime\": [\n      {\n        \"userId\":\"user12345\",\n        \"time\": 7200,\n        \"date\":\"2019-01-01T00:00:00.000Z\"\n      }\n    ],\n  \t\"phaseId\":\"abcdefg9876\",\n    \"phaseName\": \"Planning\",\n    \"priority\": {\n  \t  \"name\":\"Urgent\",\n      \"level\": 1,\n      \"color\": \"#f6781a\",\n      \"_id\": \"abc321\"\n     }\n  }\n]"
    WorkspaceGetActions400Response:
      type: object
      properties: {}
    ActionListActionsResponse:
      type: object
      properties:
        title:
          type: string
          example: This is my action
        id:
          type: string
          example: qFR6a524nFARukmvF
        workspace:
          type: string
          example: 12345aZjDQZndHqs
        assignees:
          type: array
          items:
            description: >-
              WARNING: Missing items property in array schema. Missing items
              property has been filled with this AnyType schema.
        projectId: {}
        customFields:
          type: array
          items:
            description: >-
              WARNING: Missing items property in array schema. Missing items
              property has been filled with this AnyType schema.
        createdAt:
          type: string
          example: '2018-01-23T21:41:40.295Z'
        modifiedAt:
          type: string
          example: '2018-01-23T21:41:40.289Z'
        createdBy:
          type: string
          example: 12345gfuJzo4k7F9
        modifiedBy:
          type: string
          example: 12345gfuJzo4k7F9
        status:
          type: string
          example: Unstarted
        deadline: {}
        scheduledDate: {}
        checkedDate: {}
        parent: {}
        root: {}
        hasSubactions:
          type: boolean
          example: false
          default: true
        estimate: {}
        loggedTime:
          type: array
          items:
            description: >-
              WARNING: Missing items property in array schema. Missing items
              property has been filled with this AnyType schema.
    ActionListActions400Response:
      type: object
      properties: {}
    ActionGetCommentsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: 232b3c4d5e6f7g8h1
          attachments:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          workspace:
            type: string
            example: w32bac4d5e6f7g8h2
          body:
            type: string
            example: comment body
          mentions:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          createdBy:
            type: string
            example: u32bac4d5e6f7g8h2
          createdAt:
            type: string
            example: '2020-01-04T23:30:54.816Z'
          reactions:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
    ActionGetComments400Response:
      type: object
      properties: {}
    ActionCreateCommentResponse:
      type: object
      properties:
        message:
          type: string
          example: Action comment successfully inserted
        comment:
          type: object
          properties:
            id:
              type: string
              example: 232b3c4d5e6f7g8h1
            body:
              type: string
              example: comment body
            workspace:
              type: string
              example: w32bac4d5e6f7g8h2
            createdAt:
              type: string
              example: '2019-01-01T00:00:00.000Z'
            createdBy:
              type: string
              example: u32bac4d5e6f7g8h2
            attachments:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            reactions:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            mentions:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
    ActionCreateComment400Response:
      type: object
      properties: {}
    ActionGetAttachmentsResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: AzwXZkTsdH32nTPur
          name:
            type: string
            example: Hello world
          workspace:
            type: string
            example: 9driAwqZjDQZndHqs
          url:
            type: string
            example: https://hostname.com/file/path
          createdAt:
            type: string
            example: '2050-10-27T22:09:38.137Z'
          createdBy:
            type: string
            example: AnMyD2YXX4vcdTgxw
          modifiedAt:
            type: string
            example: '2050-10-27T22:09:38.717Z'
          modifiedBy:
            type: string
            example: AnMyD2YXX4vcdTgxw
    ActionGetAttachments400Response:
      type: object
      properties: {}
    ActionAttachFileResponse:
      type: object
      properties:
        message:
          type: string
          example: Action attachment successfully added
    ActionAttachFile400Response:
      type: object
      properties: {}
    ActionGetAttachmentByIdResponse:
      type: object
      properties:
        _id:
          type: string
          example: AzwXZkTsdH32nTPur
        name:
          type: string
          example: Hello world
        workspace:
          type: string
          example: 9driAwqZjDQZndHqs
        url:
          type: string
          example: https://hostname.com/file/path
        createdAt:
          type: string
          example: '2050-10-27T22:09:38.137Z'
        createdBy:
          type: string
          example: AnMyD2YXX4vcdTgxw
        modifiedAt:
          type: string
          example: '2050-10-27T22:09:38.717Z'
        modifiedBy:
          type: string
          example: AnMyD2YXX4vcdTgxw
    ActionGetAttachmentById400Response:
      type: object
      properties: {}
    ActionApplyTemplateResponse:
      type: string
      example: |-
        {
          message: "Action template successfully applied"
        }
    ActionApplyTemplate400Response:
      type: object
      properties: {}
    WorkspaceGetActionTemplatesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: BrhDWFRzJDPMcitEk
          name:
            type: string
            example: Blog Post
          createdAt:
            type: string
            example: '2017-05-18T15:26:17.407Z'
          modifiedAt:
            type: string
            example: '2017-05-19T02:25:06.190Z'
          createdBy:
            type: string
            example: 1234abcuJzo4k7F9
          modifiedBy:
            type: string
            example: 1234abcuJzo4k7F9
    WorkspaceGetActionTemplates400Response:
      type: object
      properties: {}
    ActionGetActionHistoryResponse:
      type: string
      example: |
        [
          {
            "id": "232b3c4d5e6f7g8h1",
            "body":"comment body",
            "actionId":"w32bac4d5e6f7g8h2"
            "date":"2020-01-04T23:30:54.816Z"
          }
        ]
    ActionGetActionHistory400Response:
      type: object
      properties: {}
    MessageCreateNewMessageResponse:
      type: object
      properties:
        id:
          type: string
          example: 2bK58icvKeJSzvupB
        sender:
          type: string
          example: 12345gfuJzo4k7F9
        workspace:
          type: string
          example: 12345naZjDQZndHqs
        containerId:
          type: string
          example: 12345ZTJqWY2QK2B
        body:
          type: string
          example: This is a new message
        senderPicture:
          type: string
          example: >-
            https://cdn2.iconfinder.com/data/icons/botcons/100/android-bot-round-ears-eyes-virus-brown-256.png
        senderFirstName:
          type: string
          example: My Bot
        createdBy:
          type: string
          example: 12345gfuJzo4k7F9
        modifiedBy:
          type: string
          example: 12345xgfuJzo4k7F9
        createdAt:
          type: string
          example: '2018-01-23T22:14:24.862Z'
        modifiedAt:
          type: string
          example: '2018-01-23T22:14:24.862Z'
    MessageCreateNewMessage400Response:
      type: object
      properties: {}
    ProjectRemoveByIdResponse:
      type: string
      example: |
        {
          message: 'Project was deleted successfully'
        }
    ProjectRemoveById400Response:
      type: object
      properties: {}
    ProjectGetByIdResponse:
      type: object
      properties:
        project:
          type: object
          properties:
            description:
              type: string
              example: ''
            id:
              type: string
              example: 123ABC567XYZ
            name:
              type: string
              example: New project name
            startDate: {}
            endDate: {}
            accessOption:
              type: string
              example: private
            sharingType:
              type: string
              example: me
            members:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            template:
              type: boolean
              example: false
              default: true
            createdAt:
              type: string
              example: '2017-05-18T15:26:17.407Z'
            modifiedAt:
              type: string
              example: '2017-05-19T02:25:06.190Z'
            createdBy:
              type: string
              example: 1234abcuJzo4k7F9
            modifiedBy:
              type: string
              example: 1234abcuJzo4k7F9
            projectCustomFields:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: Budget
                  value:
                    type: string
                    example: $5000000
                  dropdownValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  selectedValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  type:
                    type: string
                    example: text
                  _id:
                    type: string
                    example: 1234abcuJzo4k7E1
                  hidden:
                    type: boolean
                    example: false
                    default: true
            color:
              type: string
              example: '#3fcaca'
            parentProject: {}
            phases:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            budget:
              type: integer
              example: 0
              default: 0
            resourcePlaceholderIds:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
    ProjectGetById400Response:
      type: object
      properties: {}
    ProjectUpdateByIdResponse:
      type: object
      properties:
        message:
          type: string
          example: Project was updated successfully
        project:
          type: object
          properties:
            description:
              type: string
              example: A new project description right here!
            id:
              type: string
              example: 123ABC567XYZ
            name:
              type: string
              example: New project name
            startDate:
              type: string
              example: '2019-04-01T00:00:00.000Z'
            endDate:
              type: string
              example: '2019-04-01T00:00:00.000Z'
            accessOption:
              type: string
              example: public
            sharingType:
              type: string
              example: everyone
            members:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            template:
              type: boolean
              example: false
              default: true
            createdAt:
              type: string
              example: '2019-12-20T19:41:13.283Z'
            modifiedAt:
              type: string
              example: '2020-01-04T23:53:41.413Z'
            createdBy:
              type: string
              example: 1234abcuJzo4k7F9
            modifiedBy:
              type: string
              example: 1234abcuJzo4k7F9
            projectCustomFields:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: Budget
                  value:
                    type: string
                    example: $5000000
                  dropdownValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  selectedValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  type:
                    type: string
                    example: text
                  _id:
                    type: string
                    example: 1234abcuJzo4k7E1
                  hidden:
                    type: boolean
                    example: false
                    default: true
            color:
              type: string
              example: '#F2F2F2'
            parentProject:
              type: string
              example: parent123
            phases:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            resourcePlaceholderIds:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
    ProjectUpdateById400Response:
      type: object
      properties: {}
    ProjectListForWorkspaceResponse:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
            example: ''
          id:
            type: string
            example: 9MRZ6oYzRMJ4eJYnR
          name:
            type: string
            example: Spring Bee Hive Rebuild
          startDate: {}
          endDate: {}
          accessOption:
            type: string
            example: private
          sharingType:
            type: string
            example: me
          members:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          template:
            type: boolean
            example: true
            default: true
          createdAt:
            type: string
            example: '2017-05-18T15:26:17.407Z'
          modifiedAt:
            type: string
            example: '2017-05-19T02:25:06.190Z'
          createdBy:
            type: string
            example: ''
          modifiedBy:
            type: string
            example: ''
          projectCustomFields:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          color:
            type: string
            example: '#3390dc'
          parentProject: {}
          phases:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          budget:
            type: integer
            example: 100000
            default: 0
          resourcePlaceholderIds:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
    ProjectListForWorkspace400Response:
      type: object
      properties: {}
    ProjectCreateNewProjectResponse:
      type: object
      properties:
        message:
          type: string
          example: Project was created successfully
        project:
          type: object
          properties:
            description:
              type: string
              example: A project for tracking our shiny new mobile app.
            id:
              type: string
              example: 123ABC567XYZ
            name:
              type: string
              example: Mobile app development
            workspace:
              type: string
              example: workspace_id_123
            startDate:
              type: string
              example: '2019-04-01T00:00:00.000Z'
            endDate:
              type: string
              example: '2019-04-01T00:00:00.000Z'
            accessOption:
              type: string
              example: public
            sharingType:
              type: string
              example: custom
            members:
              type: array
              items:
                type: string
                example: 123ABC456XYZ
            template:
              type: boolean
              example: false
              default: true
            createdAt:
              type: string
              example: '2017-05-18T15:26:17.407Z'
            modifiedAt:
              type: string
              example: '2017-05-19T02:25:06.190Z'
            createdBy:
              type: string
              example: 1234abcuJzo4k7F9
            modifiedBy:
              type: string
              example: 1234abcuJzo4k7F9
            projectCustomFields:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: Design link
                  value:
                    type: string
                    example: https://invision.com/designs
                  dropdownValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  selectedValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  type:
                    type: string
                    example: text
                  _id:
                    type: string
                    example: NTuqNWyPBxAFGAk9Y
                  hidden:
                    type: boolean
                    example: false
                    default: true
            color:
              type: string
              example: '#F2F2F2'
            parentProject: {}
            phases:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            resourcePlaceholderIds:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
    ProjectCreateNewProject400Response:
      type: object
      properties: {}
    ProjectAddCustomFieldResponse:
      type: object
      properties:
        project:
          type: object
          properties:
            description:
              type: string
              example: A project for tracking our shiny new mobile app.
            id:
              type: string
              example: 123ABC567XYZ
            name:
              type: string
              example: Mobile app development
            startDate:
              type: string
              example: '2020-01-04T18:55:02.126Z'
            endDate:
              type: string
              example: '2020-01-04T18:55:02.126Z'
            accessOption:
              type: string
              example: public
            sharingType:
              type: string
              example: everyone
            members:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            template:
              type: boolean
              example: false
              default: true
            createdAt:
              type: string
              example: '2017-05-18T15:26:17.407Z'
            modifiedAt:
              type: string
              example: '2017-05-19T02:25:06.190Z'
            createdBy:
              type: string
              example: 1234abcuJzo4k7F9
            modifiedBy:
              type: string
              example: 1234abcuJzo4k7F9
            projectCustomFields:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: Budget
                  value:
                    type: string
                    example: $1000000
                  dropdownValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  selectedValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  type:
                    type: string
                    example: text
                  _id:
                    type: string
                    example: 1234abcuJzo4k7E2
                  hidden:
                    type: boolean
                    example: false
                    default: true
            color:
              type: string
              example: '#F2F2F2'
            parentProject: {}
            phases:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            resourcePlaceholderIds:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
    ProjectAddCustomField400Response:
      type: object
      properties: {}
    ProjectUpdateCustomFieldResponse:
      type: object
      properties:
        project:
          type: object
          properties:
            description:
              type: string
              example: A project for tracking our shiny new mobile app.
            id:
              type: string
              example: 123ABC567XYZ
            name:
              type: string
              example: Mobile app development
            startDate:
              type: string
              example: '2020-01-04T18:55:02.126Z'
            endDate:
              type: string
              example: '2020-01-04T18:55:02.126Z'
            accessOption:
              type: string
              example: public
            sharingType:
              type: string
              example: everyone
            members:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            template:
              type: boolean
              example: false
              default: true
            createdAt:
              type: string
              example: '2017-05-18T15:26:17.407Z'
            modifiedAt:
              type: string
              example: '2017-05-19T02:25:06.190Z'
            createdBy:
              type: string
              example: 1234abcuJzo4k7F9
            modifiedBy:
              type: string
              example: 1234abcuJzo4k7F9
            projectCustomFields:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: Budget
                  value:
                    type: string
                    example: $5000000
                  dropdownValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  selectedValues:
                    type: array
                    items:
                      description: >-
                        WARNING: Missing items property in array schema. Missing
                        items property has been filled with this AnyType schema.
                  type:
                    type: string
                    example: text
                  _id:
                    type: string
                    example: 1234abcuJzo4k7E2
                  hidden:
                    type: boolean
                    example: false
                    default: true
            color:
              type: string
              example: '#F2F2F2'
            parentProject: {}
            phases:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            resourcePlaceholderIds:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
    ProjectUpdateCustomField400Response:
      type: object
      properties: {}
    ProjectSetStatusResponse:
      type: object
      properties:
        _id:
          type: string
          example: PROJECT_ID
        statusUpdates:
          type: object
          properties:
            description:
              type: string
              example: Status description
            _id:
              type: string
              example: Unique status Id in the list
            statusId:
              type: string
              example: Some status Id
    ProjectSetStatus400Response:
      type: object
      properties: {}
    ProjectGetStatusesResponse:
      type: object
      properties:
        edges:
          type: array
          items:
            type: object
            properties:
              cursor:
                type: string
                example: Cursor Id
              node:
                type: object
                properties:
                  _id:
                    type: string
                    example: Status Id
                  name:
                    type: string
                    example: Status name
                  color:
                    type: string
                    example: '#000000'
                  workspace:
                    type: string
                    example: WORKSPACE_ID
                  deleted:
                    type: boolean
                    example: false
                    default: true
                  modifiedAt:
                    type: string
                    example: '2022-02-03T07:49:26.732Z'
                  modifiedBy:
                    type: string
                    example: Some user Id
                  createdAt:
                    type: string
                    example: '2022-02-03T07:49:26.732Z'
                  createdBy:
                    type: string
                    example: Some user Id
        pageInfo:
          type: object
          properties:
            startCursor:
              type: string
              example: Start cursor Id
            endCursor:
              type: string
              example: End cursor Id
            totalCount:
              type: integer
              example: 1
              default: 0
            hasNextPage:
              type: boolean
              example: false
              default: true
            hasPreviousPage:
              type: boolean
              example: false
              default: true
    ProjectGetStatuses400Response:
      type: object
      properties: {}
    ResourceAssignmentRemoveByIdResponse:
      type: string
      example: |-
        {
          message: 'Resource assignment was deleted successfully'
        }
    ResourceAssignmentRemoveById400Response:
      oneOf:
        - type: object
          properties: {}
        - type: object
          properties:
            error:
              type: integer
              example: 400
              default: 0
            message:
              type: string
              example: Resourcing is not enabled in current workspace
    ResourceAssignmentGetByIdResponse:
      type: string
      example: |
        {
          resourceAssignment:
          {
            "id" : "123ABC567XYZ",
            "resourceId" : "user1234",
            "projectId":"project1234",
            "startDate" : ISODate("2019-01-01006:00:00.000Z"),
            "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
            "allocationType" : "hoursPerDay",
            "assignmentType" : "regular",
            "hoursPerDay" : 8,
            "fixedHours" : 8,
            "fixedDisplayType" : "hours",
            "notes":"This is a note!"
          }
        }
    ResourceAssignmentGetById400Response:
      oneOf:
        - type: object
          properties: {}
        - type: object
          properties:
            error:
              type: integer
              example: 400
              default: 0
            message:
              type: string
              example: Resourcing is not enabled in current workspace
    ResourceAssignmentUpdateAssignmentByIdResponse:
      type: string
      example: |
        {
          "message": "Resource assignment was updated successfully",
          "resourceAssignment": {
            "id" : "123456ABCDE",
            "resourceId" : "user1234",    
            "projectId":"project1234",
            "startDate" : ISODate("2019-01-01006:00:00.000Z"),
            "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
            "allocationType" : "hoursPerDay",
            "assignmentType" : "regular",
            "hoursPerDay" : 8,
            "fixedHours" : 8,
            "fixedDisplayType" : "hours",
            "notes":"This is a note!"
          }
        }
    ResourceAssignmentUpdateAssignmentById400Response:
      oneOf:
        - type: object
          properties: {}
        - type: object
          properties:
            error:
              type: integer
              example: 400
              default: 0
            message:
              type: string
              example: Resourcing is not enabled in current workspace
    WorkspaceListResourceAssignmentsResponse:
      type: object
      properties:
        edges:
          type: array
          items:
            type: object
            properties:
              cursor:
                type: string
                example: Cursor Id
              node:
                type: object
                properties:
                  id:
                    type: string
                    example: Some user Id
                  workspace:
                    type: string
                    example: WORKSPACE_ID
                  resourceId:
                    type: string
                    example: Resource assignment Id
                  projectId:
                    type: string
                    example: Project Id
                  startDate:
                    type: string
                    example: '2022-01-10T00:00:00.000Z'
                  endDate:
                    type: string
                    example: '2022-01-13T00:00:00.000Z'
                  allocationType:
                    type: string
                    example: fixedHours
                  assignmentType:
                    type: string
                    example: regular
                  hoursPerDay:
                    type: number
                    example: 0.8
                    default: 0
                  fixedHours:
                    type: number
                    example: 2.4
                    default: 0
                  fixedDisplayType:
                    type: string
                    example: percentages
        pageInfo:
          type: object
          properties:
            startCursor:
              type: string
              example: Start cursor Id
            endCursor:
              type: string
              example: End cursor Id
            totalCount:
              type: integer
              example: 5
              default: 0
            hasNextPage:
              type: boolean
              example: true
              default: true
            hasPreviousPage:
              type: boolean
              example: false
              default: true
    WorkspaceListResourceAssignments400Response:
      type: object
      properties: {}
    ResourceAssignmentCreateNewAssignmentResponse:
      type: string
      example: |
        {
          "message": "Resource assignment was created successfully",
          "resource-assignment": {
            "id" : "123ABC567XYZ",
            "resourceId" : "user1234",
            "projectId":"project1234",
            "workspace":"workspace1234",
            "startDate" : ISODate("2019-01-01006:00:00.000Z"),
            "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
            "allocationType" : "hoursPerDay",
            "assignmentType" : "regular",
            "hoursPerDay" : 8,
            "fixedHours" : 8,
            "notes":"This is a note!"
          }
        }
    ResourceAssignmentCreateNewAssignment400Response:
      oneOf:
        - type: object
          properties: {}
        - type: object
          properties:
            error:
              type: integer
              example: 400
              default: 0
            message:
              type: string
              example: Resourcing is not enabled in current workspace
    WorkspaceGetCustomTagsResponse:
      type: string
      example: "[\n  {\n    \"_id\": \"qFR6a524nFARukmvF\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"name\": \"Custom Tag 1\",\n    \"type\": \"user\",\n    \"options\": [\"Option 1\", \"Option 2\"],\n    \"isMulti\": false\n    \"createdBy\": \"12345gfuJzo4k7F9\",\n    \"modifiedBy\": \"12345xgfuJzo4k7F9\",\n    \"createdAt\": \"2018-01-23T22:14:24.862Z\",\n    \"modifiedAt\": \"2018-01-23T22:14:24.862Z\"\n\t},\n  {\n    \"_id\": \"lkdjfwjdoi2342w3\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"name\": \"Custom Tag 2\",\n    \"type\": \"user\",\n    \"options\": [\"Option 1\", \"Option 2\"],\n    \"isMulti\": false\n    \"createdBy\": \"12345gfuJzo4k7F9\",\n    \"modifiedBy\": \"12345xgfuJzo4k7F9\",\n    \"createdAt\": \"2018-01-23T22:14:24.862Z\",\n    \"modifiedAt\": \"2018-01-23T22:14:24.862Z\"\n\t}\n]\n\n"
    WorkspaceGetCustomTags400Response:
      type: object
      properties: {}
    WorkspaceCreateCustomTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        name:
          type: string
          example: Test custom tag
        type:
          type: string
          example: user
        isMulti:
          type: boolean
          example: false
          default: true
        options:
          type: array
          items:
            type: string
            example: Option 1
        createdAt:
          type: string
          example: '2020-01-05T16:41:59.527Z'
        createdBy:
          type: string
          example: 12345xgfuJzo4k7F9
        modifiedAt:
          type: string
          example: '2020-01-05T16:41:59.527Z'
        modifiedBy:
          type: string
          example: 12345xgfuJzo4k7F9
    WorkspaceCreateCustomTag400Response:
      type: object
      properties: {}
    WorkspaceDeleteCustomTagResponse:
      type: object
      properties:
        message:
          type: string
          example: Success
    WorkspaceDeleteCustomTag400Response:
      type: object
      properties: {}
    WorkspaceGetCustomTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        name:
          type: string
          example: Test custom tag
        type:
          type: string
          example: user
        isMulti:
          type: boolean
          example: false
          default: true
        options:
          type: array
          items:
            type: string
            example: Option 1
        createdAt:
          type: string
          example: '2020-01-05T16:41:59.527Z'
        createdBy:
          type: string
          example: 12345xgfuJzo4k7F9
        modifiedAt:
          type: string
          example: '2020-01-05T16:41:59.527Z'
        modifiedBy:
          type: string
          example: 12345xgfuJzo4k7F9
    WorkspaceGetCustomTag400Response:
      type: object
      properties: {}
    WorkspaceUpdateCustomTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        name:
          type: string
          example: Updated custom tag
        type:
          type: string
          example: user
        isMulti:
          type: boolean
          example: true
          default: true
        options:
          type: array
          items:
            type: string
            example: Option 3
        createdAt:
          type: string
          example: '2020-01-05T16:41:59.527Z'
        createdBy:
          type: string
          example: 12345xgfuJzo4k7F9
        modifiedAt:
          type: string
          example: '2020-01-05T16:41:59.527Z'
        modifiedBy:
          type: string
          example: 12345xgfuJzo4k7F9
    WorkspaceUpdateCustomTag400Response:
      type: object
      properties: {}
    UserGetUserTagsResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: qFR6a524nFARukmvF
          userId:
            type: string
            example: '123123123'
          name:
            type: string
            example: Custom Tag 1
          options:
            type: array
            items:
              type: string
              example: Option 1
          selectedOptions:
            type: array
            items:
              type: string
              example: Option 2
          isMulti:
            type: boolean
            example: false
            default: true
    UserGetUserTags400Response:
      type: object
      properties: {}
    UserGetUserTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: lkdjfwjdoi2342w3
        name:
          type: string
          example: Custom Tag 1
        options:
          type: array
          items:
            type: string
            example: Option 1
        selectedOptions:
          type: array
          items:
            type: string
            example: Option 2
        isMulti:
          type: boolean
          example: false
          default: true
    UserGetUserTag400Response:
      type: object
      properties: {}
    UserUpdateTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        name:
          type: string
          example: Custom Tag 1
        options:
          type: array
          items:
            type: string
            example: Option 1
        selectedOptions:
          type: array
          items:
            type: string
            example: Option 1
        isMulti:
          type: boolean
          example: false
          default: true
    UserUpdateTag400Response:
      type: object
      properties: {}
    ProjectGetTagsResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: qFR6a524nFARukmvF
          projectId:
            type: string
            example: '123123123'
          name:
            type: string
            example: Custom Tag 1
          options:
            type: array
            items:
              type: string
              example: Option 1
          selectedOptions:
            type: array
            items:
              type: string
              example: Option 1
          isMulti:
            type: boolean
            example: false
            default: true
    ProjectGetTags400Response:
      type: object
      properties: {}
    ProjectGetTagByIdResponse:
      type: object
      properties:
        _id:
          type: string
          example: lkdjfwjdoi2342w3
        name:
          type: string
          example: Custom Tag 1
        options:
          type: array
          items:
            type: string
            example: Option 1
        selectedOptions:
          type: array
          items:
            type: string
            example: Option 2
        isMulti:
          type: boolean
          example: false
          default: true
    ProjectGetTagById400Response:
      type: object
      properties: {}
    ProjectUpdateTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        name:
          type: string
          example: Custom Tag 1
        options:
          type: array
          items:
            type: string
            example: Option 1
        selectedOptions:
          type: array
          items:
            type: string
            example: Option 1
        isMulti:
          type: boolean
          example: false
          default: true
    ProjectUpdateTag400Response:
      type: object
      properties: {}
    WorkspaceListRoleTagsResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: qFR6a524nFARukmvF
          workspace:
            type: string
            example: 12345aZjDQZndHqs
          name:
            type: string
            example: Role Tag 1
          createdBy:
            type: string
            example: 12345gfuJzo4k7F9
          modifiedBy:
            type: string
            example: 12345xgfuJzo4k7F9
          createdAt:
            type: string
            example: '2018-01-23T22:14:24.862Z'
          modifiedAt:
            type: string
            example: '2018-01-23T22:14:24.862Z'
    WorkspaceListRoleTags400Response:
      type: object
      properties: {}
    WorkspaceCreateRoleTagResponse:
      type: string
      example: |
        {
          "_id": "qFR6a524nFARukmvF",
          "workspace": "12345aZjDQZndHqs",
          "name": "Role Tag 1",
          "createdBy": "12345gfuJzo4k7F9",
          "modifiedBy": "12345xgfuJzo4k7F9",
          "createdAt": "2018-01-23T22:14:24.862Z",
          "modifiedAt": "2018-01-23T22:14:24.862Z"
        },
    WorkspaceCreateRoleTag400Response:
      type: object
      properties: {}
    WorkspaceRemoveRoleTagResponse:
      type: string
      example: |
        {
          message: "Success"
        }
    WorkspaceRemoveRoleTag400Response:
      type: object
      properties: {}
    WorkspaceUpdateRoleTagResponse:
      type: string
      example: |
        {
          "_id": "qFR6a524nFARukmvF",
          "workspace": "12345aZjDQZndHqs",
          "name": "New role tag name",
          "createdBy": "12345gfuJzo4k7F9",
          "modifiedBy": "12345xgfuJzo4k7F9",
          "createdAt": "2018-01-23T22:14:24.862Z",
          "modifiedAt": "2018-01-23T22:14:24.862Z"
        },
    WorkspaceUpdateRoleTag400Response:
      type: object
      properties: {}
    UserGetUserRoleTagResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        workspace:
          type: string
          example: 12345aZjDQZndHqs
        name:
          type: string
          example: Role Tag 1
        createdBy:
          type: string
          example: 12345gfuJzo4k7F9
        modifiedBy:
          type: string
          example: 12345xgfuJzo4k7F9
        createdAt:
          type: string
          example: '2018-01-23T22:14:24.862Z'
        modifiedAt:
          type: string
          example: '2018-01-23T22:14:24.862Z'
    UserGetUserRoleTag400Response:
      type: object
      properties: {}
    UserUpdateRoleTagResponse:
      type: string
      example: |
        {
          "_id": "qFR6a524nFARukmvF",
          "workspace": "12345aZjDQZndHqs",
          "name": "Role Tag 1",
          "createdBy": "12345gfuJzo4k7F9",
          "modifiedBy": "12345xgfuJzo4k7F9",
          "createdAt": "2018-01-23T22:14:24.862Z",
          "modifiedAt": "2018-01-23T22:14:24.862Z"
        },
    UserUpdateRoleTag400Response:
      type: object
      properties: {}
    UserGetUserTagByWorkspaceResponse:
      type: object
      properties:
        workspaceId:
          type: string
          example: 12345aZjDQZndHqs
        _id:
          type: string
          example: qFR6a524nFARukmvF
        userId:
          type: string
          example: '123123123'
        firstDayOfWork:
          type: string
          example: '2018-01-23T00:00:00.000Z'
        lastDayOfWork:
          type: string
          example: '2019-01-23T00:00:00.000Z'
        billRate:
          type: integer
          example: 80
          default: 0
        costRate:
          type: integer
          example: 70
          default: 0
    UserGetUserTagByWorkspace400Response:
      type: object
      properties: {}
    UserUpdateUserSettingsResponse:
      type: object
      properties:
        workspaceId:
          type: string
          example: 12345aZjDQZndHqs
        _id:
          type: string
          example: qFR6a524nFARukmvF
        userId:
          type: string
          example: '123123123'
        firstDayOfWork:
          type: string
          example: '2018-01-23T00:00:00.000Z'
        lastDayOfWork:
          type: string
          example: '2019-01-23T00:00:00.000Z'
        billRate:
          type: integer
          example: 100
          default: 0
        costRate:
          type: integer
          example: 70
          default: 0
    UserUpdateUserSettings400Response:
      type: object
      properties: {}
    TeamGetAllResponse:
      type: string
      example: |-
        [
          {
            _id: 'u32bac4d5e6f7g8h2',
            name: 'NYC Office',
            workspace: '111114d5e6f7g8h1',
            members: ['232b3c4d5e6f7g8h1']
          }
        ]
    TeamGetAll400Response:
      type: object
      properties: {}
    TeamAddNewTeamResponse:
      type: object
      properties:
        _id:
          type: string
          example: B5hrsBi54cTFCwxXb
        name:
          type: string
          example: Awesome team
        members:
          type: array
          items:
            type: string
            example: PtZNLxgfuJzo4k7F9
        workspace:
          type: string
          example: yL4w4D8R4QBEQpn2v
        deleted:
          type: boolean
          example: false
          default: true
        userId:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdBy:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdAt:
          type: string
          example: '2022-06-22T09:58:14.678Z'
        modifiedAt:
          type: string
          example: '2022-06-22T09:58:14.677Z'
        isExternal:
          type: boolean
          example: false
          default: true
    TeamAddNewTeam400Response:
      type: object
      properties: {}
    TeamDeleteTeamResponse:
      type: string
      example: ''
    TeamDeleteTeam400Response:
      type: object
      properties: {}
    TeamUpdateTeamByIdResponse:
      type: object
      properties:
        _id:
          type: string
          example: B5hrsBi54cTFCwxXb
        name:
          type: string
          example: Awesome team updated name
        members:
          type: array
          items:
            type: string
            example: PtZNLxgfuJzo4k7F9
        workspace:
          type: string
          example: yL4w4D8R4QBEQpn2v
        deleted:
          type: boolean
          example: false
          default: true
        userId:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdBy:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdAt:
          type: string
          example: '2022-06-22T09:58:14.678Z'
        modifiedAt:
          type: string
          example: '2022-06-22T09:59:30.672Z'
        isExternal:
          type: boolean
          example: false
          default: true
    TeamUpdateTeamById400Response:
      type: object
      properties: {}
    TeamAddMembersResponse:
      type: object
      properties:
        _id:
          type: string
          example: Nt4hgngmjvb6Rrqcn
        name:
          type: string
          example: Awesome team
        members:
          type: array
          items:
            type: string
            example: ekYxhtbfKPfb4X49r
        workspace:
          type: string
          example: yL4w4D8R4QBEQpn2v
        deleted:
          type: boolean
          example: false
          default: true
        userId:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdBy:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdAt:
          type: string
          example: '2022-06-20T09:41:28.204Z'
        modifiedAt:
          type: string
          example: '2022-06-22T10:23:04.531Z'
        isExternal:
          type: boolean
          example: false
          default: true
    TeamAddMembers400Response:
      type: object
      properties: {}
    TeamRemoveMembersResponse:
      type: object
      properties:
        _id:
          type: string
          example: Nt4hgngmjvb6Rrqcn
        name:
          type: string
          example: Awesome team
        members:
          type: array
          items:
            type: string
            example: ekYxhtbfKPfb4X49r
        workspace:
          type: string
          example: yL4w4D8R4QBEQpn2v
        deleted:
          type: boolean
          example: false
          default: true
        userId:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdBy:
          type: string
          example: ekYxhtbfKPfb4X49r
        createdAt:
          type: string
          example: '2022-06-20T09:41:28.204Z'
        modifiedAt:
          type: string
          example: '2022-06-22T10:28:16.391Z'
        isExternal:
          type: boolean
          example: false
          default: true
    TeamRemoveMembers400Response:
      type: object
      properties: {}
    WorkspaceDeleteLabelResponse:
      type: string
      example: |
        {
          message: "Success"
        }
    WorkspaceDeleteLabel400Response:
      type: object
      properties: {}
    WorkspaceGetLabelRoleTagsResponse:
      type: object
      properties:
        _id:
          type: string
          example: qFR6a524nFARukmvF
        workspace:
          type: string
          example: 12345aZjDQZndHqs
        name:
          type: string
          example: Label 1
        color:
          type: string
          example: '#00CCCC'
        parent: {}
        createdBy:
          type: string
          example: 12345gfuJzo4k7F9
        modifiedBy:
          type: string
          example: 12345xgfuJzo4k7F9
        createdAt:
          type: string
          example: '2018-01-23T22:14:24.862Z'
        modifiedAt:
          type: string
          example: '2018-01-23T22:14:24.862Z'
    WorkspaceGetLabelRoleTags400Response:
      type: object
      properties: {}
    WorkspaceUpdateLabelResponse:
      type: string
      example: |
        {
          "_id": "qFR6a524nFARukmvF",
          "workspace": "12345aZjDQZndHqs",
          "name": "New label name",
          "color":"#00CCCC",
          "parent":"123abc456",
          "createdBy": "12345gfuJzo4k7F9",
          "modifiedBy": "12345xgfuJzo4k7F9",
          "createdAt": "2018-01-23T22:14:24.862Z",
          "modifiedAt": "2018-01-23T22:14:24.862Z"
        },
    WorkspaceUpdateLabel400Response:
      type: object
      properties: {}
    WorkspaceGetAllLabelsResponse:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: qFR6a524nFARukmvF
          workspace:
            type: string
            example: 12345aZjDQZndHqs
          name:
            type: string
            example: Label 1
          color:
            type: string
            example: '#000000'
          parent: {}
          createdBy:
            type: string
            example: 12345gfuJzo4k7F9
          modifiedBy:
            type: string
            example: 12345xgfuJzo4k7F9
          createdAt:
            type: string
            example: '2018-01-23T22:14:24.862Z'
          modifiedAt:
            type: string
            example: '2018-01-23T22:14:24.862Z'
    WorkspaceGetAllLabels400Response:
      type: object
      properties: {}
    WorkspaceCreateLabelResponse:
      type: string
      example: |
        {
          "_id": "qFR6a524nFARukmvF",
          "workspace": "12345aZjDQZndHqs",
          "name": "Label 1",
          "color":"#00CCCC",
          "parent":null,
          "createdBy": "12345gfuJzo4k7F9",
          "modifiedBy": "12345xgfuJzo4k7F9",
          "createdAt": "2018-01-23T22:14:24.862Z",
          "modifiedAt": "2018-01-23T22:14:24.862Z"
        },
    WorkspaceCreateLabel400Response:
      type: object
      properties: {}
    WorkspaceGetCustomFieldResponse:
      type: object
      properties:
        _id:
          type: string
          example: customFieldId
        label:
          type: string
          example: Custom Field Nmae
        type:
          type: string
          example: text
        workspace:
          type: string
          example: workspaceId
        deleted:
          type: boolean
          example: false
          default: true
        modifiedAt:
          type: string
          example: '2019-10-22T00:00:00.000Z'
        modifiedBy:
          type: string
          example: server
        attachedToObject:
          type: string
          example: action
    WorkspaceGetCustomField400Response:
      type: object
      properties: {}
    WorkspaceGetCustomFieldsResponse:
      type: object
      properties:
        _id:
          type: string
          example: customFieldId
        label:
          type: string
          example: Custom Field Nmae
        type:
          type: string
          example: text
        workspace:
          type: string
          example: workspaceId
        deleted:
          type: boolean
          example: false
          default: true
        modifiedAt:
          type: string
          example: '2019-10-22T00:00:00.000Z'
        modifiedBy:
          type: string
          example: server
        attachedToObject:
          type: string
          example: action
    WorkspaceGetCustomFields400Response:
      type: object
      properties: {}
    WorkspaceCreateCustomFieldResponse:
      type: object
      properties:
        _id:
          type: string
          example: customFieldId
        label:
          type: string
          example: New Custom Field
        type:
          type: string
          example: select
        workspace:
          type: string
          example: workspaceId
        deleted:
          type: boolean
          example: false
          default: true
        modifiedAt:
          type: string
          example: '2019-10-22T00:00:00.000Z'
        modifiedBy:
          type: string
          example: server
        attachedToObject:
          type: string
          example: action
    WorkspaceCreateCustomField400Response:
      type: object
      properties: {}
    ProjectGetStatusResponse:
      type: string
      example: |-
        {
          "_id": "PROJECT_STATUS_ID",
          "name": "Project status name",
          "color": "#000000",
          "workspace": "Some workspaceId",
          "createdAt": "2019-01-01T00:00:00.000Z",
          "modifiedAt": "2019-01-01T00:00:00.000Z",
          "createdBy": "Some user Id",
          "modifiedBy": "Some user Id",
          
        }
    ProjectGetStatus400Response:
      type: object
      properties: {}
    ProjectCreateStatusResponse:
      type: object
      properties:
        _id:
          type: string
          example: Status Id
        name:
          type: string
          example: Status name
        color:
          type: string
          example: '#000000'
    ProjectCreateStatus400Response:
      type: object
      properties: {}
    WebhookCreateHandlerResponse:
      type: object
      properties:
        message:
          type: string
          example: Webhook created
        webhook:
          type: object
          properties:
            _id:
              type: string
              example: v2Y3CNCDyzeHEeorr
            name:
              type: string
              example: Tell me when Projects are inserted
            workspaceId:
              type: string
              example: oQkqDmkXzoHwjatAA
            trigger:
              type: string
              example: projects::i
            url:
              type: string
              example: https://webhook.site/4bfcb247-7370-4b5f-822a-6b6036db808e
            projectIds:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            fields:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            filters:
              type: array
              items:
                description: >-
                  WARNING: Missing items property in array schema. Missing items
                  property has been filled with this AnyType schema.
            operator:
              type: string
              example: OR
            ownerId:
              type: string
              example: 9Mbh6keyT33iNN2xp
            deleted:
              type: boolean
              example: false
              default: true
            createdAt:
              type: string
              example: '2023-09-27T15:21:14.839Z'
            modifiedAt:
              type: string
              example: '2023-09-27T15:21:14.839Z'
            createdBy:
              type: string
              example: 9Mbh6keyT33iNN2xp
            modifiedBy:
              type: string
              example: 9Mbh6keyT33iNN2xp
    WebhookCreateHandler400Response:
      type: object
      properties: {}
    WebhookRemoveHandlerResponse:
      type: object
      properties:
        message:
          type: string
          example: Webhook deleted
    WebhookRemoveHandler400Response:
      type: object
      properties: {}
security:
  - sec0: []
    sec1: []
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
x-readme-fauxas: true
_id: 5e0fa20e44831a002ce2c7b1:6514496933b880000d31c261
