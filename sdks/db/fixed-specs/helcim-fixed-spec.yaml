openapi: 3.0.0
info:
  title: The Helcim API
  description: This API covers publicly accessible merchant actions
  version: 2.0.0
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://api.helcim.com/v2
tags:
  - name: Customer
  - name: Payment
  - name: Invoice
  - name: Card Batch
  - name: Card Transaction
  - name: General
  - name: Card Terminal
  - name: Helcim Pay
  - description: TODO
    name: TODO
paths:
  /connection-test:
    get:
      tags:
        - General
      summary: Tests connectivity to the Helcim API
      operationId: General_testConnectivityToHelcimApi
      security:
        - ApiAccessAuth: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralTestConnectivityToHelcimApiResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralTestConnectivityToHelcimApi400Response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralTestConnectivityToHelcimApi401Response
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralTestConnectivityToHelcimApi403Response
  /payment/purchase:
    post:
      tags:
        - Payment
      summary: Process Purchase Transaction
      operationId: Payment_processPurchaseTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchase_request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPaymentResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /payment/preauth:
    post:
      tags:
        - Payment
      summary: Process Preauth Transaction
      operationId: Payment_processPreauthTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchase_request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPaymentResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /payment/capture:
    post:
      tags:
        - Payment
      summary: Process Capture Transaction
      operationId: Payment_processCaptureTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureRequest'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPaymentResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /payment/verify:
    post:
      tags:
        - Payment
      summary: Process Verify Transaction
      operationId: Payment_verifyTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPaymentResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /payment/refund:
    post:
      tags:
        - Payment
      summary: Process Refund Transaction
      operationId: Payment_processRefundTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund_Request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPaymentResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /payment/reverse:
    post:
      tags:
        - Payment
      summary: Process Reverse Transaction
      operationId: Payment_reverseTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund_Request_1'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReverseTransactionResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReverseTransactiondefaultResponse'
  /payment/withdraw:
    post:
      tags:
        - Payment
      summary: Process Withdraw Transaction
      operationId: Payment_processWithdrawalTransaction
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Idempotency Key. Alphanumeric 25-characters
          in: header
          name: idempotency-key
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/withdraw_request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAchTransactionResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /card-batches/{cardBatchId}:
    get:
      tags:
        - Card Batch
      summary: Get Card Batch
      operationId: CardBatch_getDetails
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Card Batch Id of the Card Batch you want to get
          in: path
          name: cardBatchId
          required: true
          schema:
            type: integer
        - description: Includes transaction statistics for the batch
          example: true
          in: query
          name: collect-stats
          schema:
            enum:
              - 'true'
              - 'false'
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardBatch'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /card-batches/{cardBatchId}/settle:
    post:
      tags:
        - Card Batch
      summary: Settles an Open Card Batch
      operationId: CardBatch_settleBatch
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Card Batch Id of the Card Batch you want to settle
          in: path
          name: cardBatchId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardBatch'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /card-transactions/{cardTransactionId}:
    get:
      tags:
        - Card Transaction
      summary: Get Card Transaction by id
      operationId: CardTransaction_getById
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Card Transaction Id of the Card Transaction you want to get
          in: path
          name: cardTransactionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPaymentResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers/{customerId}:
    get:
      tags:
        - Customer
      summary: Get customer
      operationId: Customer_getCustomer
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
    put:
      tags:
        - Customer
      summary: Update customer
      operationId: Customer_updateDetails
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateRequest'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers/{customerId}/cards:
    get:
      tags:
        - Customer
      summary: Get customer cards
      operationId: Customer_getCards
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: integer
        - description: The card token.
          example: 907af81acc0224e0134949
          in: query
          name: cardToken
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGetCardsResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers/{customerId}/cards/{cardId}:
    get:
      tags:
        - Customer
      summary: Get customer card
      operationId: Customer_getCardDetails
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: integer
        - description: The Id of the card
          in: path
          name: cardId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGetCardDetailsResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers/{customerId}/bank-accounts:
    get:
      tags:
        - Customer
      summary: Get customer bank accounts
      operationId: Customer_getBankAccounts
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: integer
        - description: The bank account token.
          in: query
          name: bankToken
          schema:
            type: string
        - description: Check if bank account is verified or not. use 1 or 0.
          in: query
          name: verified
          schema:
            type: number
        - description: Check if bank account is ready or not. use 1 or 0.
          in: query
          name: ready
          schema:
            type: number
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGetBankAccountsResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers/{customerId}/bank-accounts/{bankAccountId}:
    get:
      tags:
        - Customer
      summary: Get customer bank account
      operationId: Customer_getBankAccount
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: integer
        - description: The Id of the bank account
          in: path
          name: bankAccountId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerGetBankAccountResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers/{customerId}/bank-accounts/{bankAccountId}/default:
    patch:
      tags:
        - Customer
      summary: Set customer bank account as default
      operationId: Customer_setBankAccountDefault
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The Id of the customer
          in: path
          name: customerId
          required: true
          schema:
            type: integer
        - description: The Id of the bank account
          in: path
          name: bankAccountId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSetBankAccountDefaultResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /invoices/{invoiceId}:
    get:
      tags:
        - Invoice
      summary: Get invoice
      operationId: Invoice_getById
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The unique invoice Id
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_invoice_200_response'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
    put:
      tags:
        - Invoice
      summary: Update invoice
      operationId: Invoice_updateDetails
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The unique invoice Id
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_invoice_request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_invoice_200_response'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /helcim-pay/initialize:
    post:
      tags:
        - Helcim Pay
      summary: Creates a HelcimPay.js Checkout Session
      operationId: HelcimPay_createCheckoutSession
      security:
        - ApiAccessAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelcimPayInitializeRequest'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_init_200_response'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_init_default_response'
  /card-batches:
    get:
      tags:
        - Card Batch
      summary: Get Card Batches
      operationId: CardBatch_getAll
      security:
        - ApiAccessAuth: []
      parameters:
        - description: >-
            The number of the batch to retrieve. Note that this is the batch
            number, not batch ID.
          example: 18900
          in: query
          name: batchNumber
          schema:
            type: number
        - description: The terminalId of the requested batch
          example: 180000
          in: query
          name: terminalId
          schema:
            type: number
        - description: Includes transaction statistics for the batch
          example: true
          in: query
          name: collect-stats
          schema:
            enum:
              - 'true'
              - 'false'
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardBatchGetAllResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /card-transactions:
    get:
      tags:
        - Card Transaction
      summary: Collects up to 1000 Card Transactions
      operationId: CardTransaction_collectTransactions
      security:
        - ApiAccessAuth: []
      parameters:
        - description: Filters transactions created from 2020-01-01 (Mountain Time)
          example: '2020-01-01'
          in: query
          name: dateFrom
          schema:
            type: string
        - description: Filters transactions created until 2021-01-01 (Mountain Time)
          example: '2021-01-01'
          in: query
          name: dateTo
          schema:
            type: string
        - description: >-
            Searches amount, card number(F4L4 only), cardholder name, & approval
            codes
          example: 500
          in: query
          name: search
          schema:
            type: string
        - description: The code of the customer associated with the transaction
          example: CST1000
          in: query
          name: customerCode
          schema:
            type: string
        - description: The number of the invoice associated with the transaction
          example: INV1000
          in: query
          name: invoiceNumber
          schema:
            type: string
        - description: The token of the card associated with the transaction
          example: 5454JK97UU1F5454
          in: query
          name: cardToken
          schema:
            type: string
        - description: The id of the batch associated with the transaction
          example: 3
          in: query
          name: cardBatchId
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CardTransactionCollectTransactionsResponse
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /customers:
    get:
      tags:
        - Customer
      summary: Get customers
      operationId: Customer_list
      security:
        - ApiAccessAuth: []
      parameters:
        - description: >-
            The search term to be used for partial matching on contactName,
            businessName, customerCode, city, phone and email (Only use one
            query field per request).
          example: john
          in: query
          name: search
          schema:
            type: string
        - description: Existing customer code (Only use one query field per request).
          example: CST1000
          in: query
          name: customerCode
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerListResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
    post:
      tags:
        - Customer
      summary: Create customer
      operationId: Customer_createNewCustomer
      security:
        - ApiAccessAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /invoices:
    get:
      tags:
        - Invoice
      summary: Get invoices
      operationId: Invoice_list
      security:
        - ApiAccessAuth: []
      parameters:
        - description: The number of the invoice associated with the transaction
          example: INV1000
          in: query
          name: invoiceNumber
          schema:
            type: string
        - description: Filters transactions created from 2020-01-01 (Mountain Time)
          example: '2020-01-01'
          in: query
          name: dateStart
          schema:
            type: string
        - description: Filters transactions created until 2021-01-01 (Mountain Time)
          example: '2021-01-01'
          in: query
          name: dateEnd
          schema:
            type: string
        - description: Include convenience fee of each invoice 0 | 1
          example: 1
          in: query
          name: withConvenienceFee
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceListResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
    post:
      tags:
        - Invoice
      summary: Create invoice
      operationId: Invoice_createNew
      security:
        - ApiAccessAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_invoice_request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_invoice_200_response'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
  /card-terminals:
    get:
      tags:
        - Card Terminal
      summary: Get card terminals
      operationId: CardTerminal_getAll
      security:
        - ApiAccessAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_terminals_request'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTerminalGetAllResponse'
        default:
          description: Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedPaymentResponse'
components:
  schemas:
    PaymentRequest:
      title: PaymenRequest
      properties:
        ipAddress:
          description: >-
            IP address of the customer making the transaction, used as part of
            fraud detection.
          example: 192.168.1.1
          type: string
        ecommerce:
          description: >-
            Set to indicate that the transaction is e-commerce. When set, the
            Helcim Fraud Defender will provide further analysis.
          example: true
          type: boolean
        terminalId:
          description: >-
            For card transactions only. Id of the terminal you would want to
            use. Default terminal for of the currency will be used if you dont
            send this.
          example: 3215
          type: integer
        currency:
          description: >-
            The currency abbreviation of the invoice, such as CAD or USD. This
            should match currency of existing invoice.
          example: CAD
          type: string
        amount:
          description: Amount to be processed
          example: 100.99
          type: number
        customerCode:
          description: Existing customer code associated with the transaction
          example: ''
          type: string
        invoiceNumber:
          description: >-
            To be filled when associating transaction to existing invoice.
            Invoice should be associated to the same customer linked to the card
          example: ''
          type: string
        invoice:
          $ref: '#/components/schemas/PaymentRequest_invoice'
        billingAddress:
          $ref: '#/components/schemas/Address'
      required:
        - amount
        - cardData
        - currency
        - ipAddress
      type: object
    CardData:
      title: CardData
      properties:
        cardData:
          $ref: '#/components/schemas/CardData_cardData'
      required:
        - cardData
      type: object
    SuccessfulPaymentResponse:
      title: Payment Response
      properties:
        transactionId:
          description: The transaction id
          example: 10
          type: number
        cardBatchId:
          description: The id of associated card batch
          example: 11
          type: number
        dateCreated:
          description: The date(Mountain Time) when the transaction is created.
          example: '2020-01-01 00:00:00'
          type: string
        status:
          description: >-
            The status of the transaction. possible values are APPROVED |
            DECLINED
          example: APPROVED
          type: string
        user:
          description: >-
            Full name of the user who processed the transaction. Default value
            is Helcim System
          example: Helcim System
          type: string
        type:
          description: >-
            The type of the transaction. possible values are purchase | preauth
            | verify
          example: purchase
          type: string
        amount:
          description: The amount of processed transaction
          example: 11.99
          type: number
        currency:
          description: The abbreviation of the transaction's currency
          example: CAD
          type: string
        avsResponse:
          description: AVS Response
          example: M
          type: string
        cvvResponse:
          description: CVV Response
          example: 'Y'
          type: string
        approvalCode:
          description: Approval Code
          example: HCMAPPRV
          type: string
        cardToken:
          description: Card token associated to the transaction
          example: 5454HCMXTEST5454
          type: string
        cardNumber:
          description: >-
            First-6 Last-4 numbers of the card number associated to the
            transaction
          example: '5454545454'
          type: string
        cardHolderName:
          description: Cardholdername associated to the transaction
          example: John Smith
          type: string
        customerCode:
          description: Customer code associated to the transaction
          example: CST1010
          type: string
        invoiceNumber:
          description: Invoice number associated to the transaction
          example: INV2022
          type: string
        warning:
          description: Warnings
          example: Failed to link customer to invoice
          type: string
      type: object
    FailedPaymentResponse:
      properties:
        errors:
          description: List of errors
          items:
            example: An error occured
            type: string
          type: array
      type: object
    CaptureRequest:
      title: Capture Request
      properties:
        preAuthTransactionId:
          description: The transaction ID of the original pre-authorization transaction.
          example: 198763
          type: integer
        amount:
          description: >-
            The amount to capture. Must be less or equal to the original
            pre-authorization amount.
          example: 100.99
          type: number
        ipAddress:
          description: >-
            IP address of the customer making the transaction, used as part of
            fraud detection.
          example: 192.168.1.1
          type: string
        ecommerce:
          description: >-
            Set to indicate that the transaction is e-commerce. When set, the
            Helcim Fraud Defender will provide further analysis.
          example: true
          type: boolean
      required:
        - amount
        - ipAddress
        - preAuthTransactionId
      type: object
    VerifyRequest:
      title: Verify Request
      properties:
        ipAddress:
          description: >-
            IP address of the customer making the transaction, used as part of
            fraud detection.
          example: 192.168.1.1
          type: string
        ecommerce:
          description: >-
            Set to indicate that the transaction is e-commerce. When set, the
            Helcim Fraud Defender will provide further analysis.
          example: true
          type: boolean
        currency:
          description: The currency abbreviation of the transaction.
          example: CAD
          type: string
        customerCode:
          description: Existing customer code associated with the transaction
          example: ''
          type: string
        invoiceNumber:
          description: >-
            To be filled when associating transaction to existing invoice.
            Invoice should be associated to the same customer linked to the card
          example: ''
          type: string
        invoice:
          $ref: '#/components/schemas/VerifyRequest_invoice'
        cardData:
          $ref: '#/components/schemas/Card'
        billingAddress:
          $ref: '#/components/schemas/Address'
      required:
        - amount
        - billingAddress
        - cardData
        - currency
        - ipAddress
      type: object
    BankData:
      title: BankData
      properties:
        bankData:
          $ref: '#/components/schemas/BankData_bankData'
      required:
        - bankData
      type: object
    SuccessfulAchTransactionResponse:
      title: Ach Transaction Response
      properties:
        transactionId:
          description: The transaction id
          example: 10
          type: number
        batchId:
          description: The id of associated card batch
          example: 11
          type: number
        dateCreated:
          description: The date(Mountain Time) when the transaction is created.
          example: '2020-01-01 00:00:00'
          type: string
        statusAuth:
          description: >-
            The status of the transaction. possible values are APPROVED |
            DECLINED | IN_PROGRESS | CANCELLED | PENDING
          example: APPROVED
          type: string
        statusClearing:
          description: >-
            The status of the transaction. possible values are OPENED | CLEARED
            | REJECTED | CONTESTED | RETURNED
          example: OPENED
          type: string
        type:
          description: >-
            The type of the transaction. possible values are WITHDRAWAL |
            DEPOSIT | SETTLE | REVERSE | REFUND
          example: WITHDRAWAL
          type: string
        amount:
          description: The amount of processed transaction
          example: 11.99
          type: number
        currency:
          description: The abbreviation of the transaction's currency
          example: CAD
          type: string
        approvalCode:
          description: Approval Code
          example: HCMAPPRV
          type: string
        bankAccountNumber:
          description: Bank account number
          example: A1B2C3D4E5F6G7
          type: string
        bankToken:
          description: Bank Token associated with bankAccount
          example: '-A1B2C3D4E5F6G7*'
          type: string
        invoiceNumber:
          description: Invoice number associated to the transaction
          example: INV2022
          type: string
      type: object
    CardBatch:
      properties:
        id:
          description: Id of Card batch
          example: 2488717
          type: integer
        dateCreated:
          description: Date Card batch is Created
          example: '2022-11-30 13:14:53'
          type: string
        dateUpdated:
          description: Date Card batch is last updated
          example: '2022-11-30 13:14:53'
          type: string
        dateClosed:
          description: Date Card Batch is closed
          example: '2022-11-30 14:14:53'
          type: string
        closed:
          description: True if the batch is closed. Else false
          example: true
          type: boolean
        terminalId:
          description: Id of associated Terminal
          example: 1411
          type: integer
        batchNumber:
          description: Batch Number
          example: 6
          type: integer
        netSales:
          description: Approved sales net refunds and voids
          example: 90
          type: number
        totalSales:
          description: Gross sales
          example: 100
          type: number
        totalRefunds:
          description: Gross refunds
          example: 8.5
          type: number
        totalReversed:
          description: Voided amount
          example: 5
          type: number
        totalRefundsReversed:
          description: Amount of voided refunds
          example: 3.5
          type: number
        countTotal:
          description: Total number of transactions
          example: 8
          type: number
        countApproved:
          description: Number of approved transactions
          example: 8
          type: number
        countDeclined:
          description: Number of declined transactions
          example: 0
          type: number
      type: object
    Customer:
      properties:
        id:
          description: Id of Customer
          example: 2488717
          type: integer
        customerCode:
          description: Customer code of the customer
          example: CST1200
          type: string
        businessName:
          description: Name of the business
          example: Best company
          type: string
        contactName:
          description: Contact Name
          example: John Smith
          type: string
        cellPhone:
          description: Cell phone number of customer
          example: 908-295-4902
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        cards:
          description: Array of cards stored in the vault associated with this customer.
          items:
            $ref: '#/components/schemas/Card_1'
          type: array
      type: object
    CustomerRequest:
      title: Customer Request
      properties:
        customerCode:
          description: >-
            The unique customer code. If blank, it will be automatically
            generated.
          example: CST1000
          type: string
        contactName:
          description: The primary contact name (full name) of the customer.
          example: John Smith
          type: string
        businessName:
          description: >-
            The business name of the customer. There must be either a contact
            name or business name present.
          example: Best Company
          type: string
        cellPhone:
          description: The cell phone number of the customer.
          example: 908-295-4902
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        shippingAddress:
          $ref: '#/components/schemas/Address'
      type: object
    CustomerUpdateRequest:
      title: Customer Update Request
      properties:
        customerCode:
          description: The unique customer code.
          example: CST1000
          type: string
        contactName:
          description: The primary contact name (full name) of the customer.
          example: John Smith
          type: string
        businessName:
          description: >-
            The business name of the customer. There must be either a contact
            name or business name present.
          example: Best Company
          type: string
        cellPhone:
          description: The cell phone number of the customer.
          example: 908-295-4902
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        shippingAddress:
          $ref: '#/components/schemas/Address'
      type: object
    CardResponse:
      title: Card
      properties:
        id:
          description: The id of the card.
          example: 161462
          type: integer
        cardToken:
          description: The card token.
          example: 907af81acc0224e0134949
          type: string
        dateCreated:
          description: The date when the card is created.
          example: '2025-01-30 13:35:36'
          type: string
        dateUpdated:
          description: The date when the card last got updated.
          example: '2025-01-30 13:35:36'
          type: string
        cardHolderName:
          description: The cardholder name.
          example: John Smith
          type: string
        cardF6L4:
          description: The first-six and last-four card numbers.
          example: '5454545454'
          type: string
        cardExpiry:
          description: >-
            The card expiry date, in MMYY format (total of 4 digits without
            spaces or slashes).
          example: '1257'
          type: string
        cardCVV:
          description: The card CVV (3-4 digits on back of credit card).
          example: '100'
          type: string
      type: object
    BankAccountResponse:
      title: BankAccount
      properties:
        id:
          description: The id of the bank account.
          example: 12312
          type: integer
        customerId:
          description: The id of the customer owning the bank account.
          example: 2222
          type: integer
        dateCreated:
          description: The date when the bank account is created.
          example: '2025-01-30 13:35:36'
          type: string
        dateUpdated:
          description: The date when the bank account last got updated.
          example: '2025-01-30 13:35:36'
          type: string
        dateLastUsed:
          description: The date when the bank account last got used.
          example: '2025-01-30 13:35:36'
          type: string
        dateVerified:
          description: The date when the bank account is verified.
          example: '2025-01-30 13:35:36'
          type: string
        bankToken:
          description: The token of the bank account.
          example: JHKJHKLKJLOHKJ876545KJBK
          type: string
        accountType:
          description: The type of the bank account, such as CHECKING | SAVINGS.
          example: CHECKING
          type: string
        accountCorporate:
          description: >-
            The corporate type of the bank account, such as PERSONAL |
            CORPORATE.
          example: PERSONAL
          type: string
        verified:
          description: Verified status of the bank account, 1|0.
          example: '1'
          type: string
        ready:
          description: Ready status of the bank account, 1|0.
          example: '1'
          type: string
        bankIdNumber:
          description: >-
            The institution number of Canadian Bank Account that identifies the
            bank.
          example: '333'
          type: string
        transitNumber:
          description: >-
            The transit number of Canadian Bank Account. Shows which branch you
            opened your account at.
          example: '55555'
          type: string
        routingNumber:
          description: >-
            The routing number of US Bank Account. Identifies the financial
            institution on which it was drawn.
          example: '999999999'
          type: string
        bankAccountNumberL4:
          description: Last 4 digits of the bank account number.
          example: '9999'
          type: string
        address:
          $ref: '#/components/schemas/Address'
      type: object
    InvoiceResponseBase:
      title: Invoice Base
      properties:
        invoiceId:
          description: Unique Invoice Id
          example: 12321
          type: number
        invoiceNumber:
          description: Invoice number of invoice to be created. Will be generated if blank
          example: INV1000
          type: string
        tipAmount:
          description: Tip amount
          example: 0.99
          type: number
        depositAmount:
          description: Deposit amount
          example: 1
          type: number
        notes:
          description: >-
            Comment to appear at the bottom of the invoice, visible to the
            customer.
          example: No vegetables please
          type: string
      type: object
    Invoice:
      title: Invoice
      properties:
        dateCreated:
          description: Date the invoice is created.
          example: '2020-01-01 00:30:50'
          type: string
        dateUpdated:
          description: Date the invoice is updated.
          example: '2020-01-01 20:30:50'
          type: string
        datePaid:
          description: Date the invoice is paid.
          example: '2020-01-01 00:30:50'
          type: string
        dateIssued:
          description: Date the invoice is paid.
          example: '2020-01-01 00:30:50'
          type: string
        status:
          description: >-
            The status of the invoice, such as due | paid | completed |
            refunded.
          example: due
          type: string
        customerId:
          description: The id of customer associated to the invoice.
          example: 234
          type: integer
        amount:
          description: The total amount of the invoice.
          example: 100.99
          type: number
        convenienceFee:
          description: The total convenience fee paid for the invoice.
          example: 100
          type: number
      type: object
    InvoiceBase:
      title: Invoice Base
      properties:
        invoiceNumber:
          description: Invoice number of invoice to be created. Will be generated if blank
          example: ''
          type: string
        tipAmount:
          description: Tip amount
          example: 0.99
          type: number
        depositAmount:
          description: Deposit amount
          example: 1
          type: number
        notes:
          description: >-
            Comment to appear at the bottom of the invoice, visible to the
            customer.
          example: No vegetables please
          type: string
      type: object
    InvoiceCreate:
      title: Invoice Create
      properties:
        customerId:
          description: Unique customer Id.
          example: 123123
          type: integer
        currency:
          description: >-
            The currency abbreviation of the invoice, such as CAD or USD. This
            should match currency of existing invoice.
          example: CAD
          type: string
        type:
          description: >-
            The type of the invoice, such as ESTIMATE | INVOICE | QUOTE | ORDER
            | PURCHASE_ORDER | STATEMENT | REGISTRATION | CREDIT.
          example: INVOICE
          type: string
        status:
          description: The status of invoice, such as DUE | SHIPPED | COMPLETED | CANCELLED
          example: DUE
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
      type: object
    InvoiceCreateAfterProcessing:
      title: Invoice Create after transaction processing
      properties:
        shipping:
          $ref: '#/components/schemas/Shipping'
        pickup:
          $ref: '#/components/schemas/Pickup'
        tax:
          $ref: '#/components/schemas/Tax'
        discount:
          $ref: '#/components/schemas/Discount'
        lineItems:
          items:
            $ref: '#/components/schemas/LineItem'
          maxLength: 10
          type: array
      type: object
    InvoiceUpdate:
      title: Invoice Create
      properties:
        currency:
          description: >-
            The currency abbreviation of the invoice, such as CAD or USD. This
            should match currency of existing invoice.
          example: CAD
          type: string
        type:
          description: >-
            The type of the invoice, such as ESTIMATE | INVOICE | QUOTE | ORDER
            | PURCHASE_ORDER | STATEMENT | REGISTRATION | CREDIT.
          example: INVOICE
          type: string
        status:
          description: The status of invoice, such as DUE | SHIPPED | COMPLETED | CANCELLED
          example: DUE
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
      type: object
    CardTerminal:
      title: Terminal
      properties:
        id:
          description: Id of the terminal.
          example: 123
          type: integer
        nickname:
          description: Nickname of terminal
          example: Terminal 1
          type: string
        currency:
          description: Currency of terminal. possible values are CAD | USD
          example: CAD
          type: string
        status:
          description: Status of Terminal. possible values are ACTIVE | INACTIVE
          example: ACTIVE
          type: string
        address:
          $ref: '#/components/schemas/CardTerminal_address'
      type: object
    Address:
      title: Address
      properties:
        name:
          description: Contact Name or Business Name
          example: John Smith / Helcim
          type: string
        street1:
          example: Jump Street 21
          type: string
        street2:
          type: string
        city:
          example: Calgary
          type: string
        province:
          description: >-
            2 letter abbreviation of the province(AB, BC, CA). Required field if
            country is CAN or USA.
          example: AB
          type: string
        country:
          description: 3-letter abbreviation of the country(CAN, USA)
          example: CAN
          type: string
        postalCode:
          example: H0H0H0
          type: string
        phone:
          description: 10 to 15 digits phone number.
          example: '4031231234'
          type: string
        email:
          example: john@example.com
          type: string
      required:
        - name
        - postalCode
        - street1
      type: object
    Card:
      title: Card
      properties:
        cardNumber:
          description: >-
            The full card number (13 to 16 digits) from merchant to process
            "purchase", "pre-auth", and "verify" transactions.
          example: '5454545454545454'
          type: string
        cardExpiry:
          description: >-
            The card expiry date, in MMYY format (total of 4 digits without
            spaces or slashes).
          example: '1257'
          type: string
        cardCVV:
          description: The card CVV (3-4 digits on back of credit card).
          example: '100'
          type: string
      required:
        - cardCVV
        - cardExpiry
        - cardHolderName
        - cardNumber
      type: object
    CardToken:
      title: Card Token
      properties:
        cardToken:
          description: >-
            The token for the card on file. If Customer Code is filled, The card
            should must be owned by a passed customer code
          example: HGKHJK5647698HGJJK
          type: string
      required:
        - cardToken
      type: object
    BankAccount:
      title: BankAccount
      properties:
        firstName:
          description: The bank account holder first name
          example: John
          type: string
        lastName:
          description: The bank account holder last name
          example: Smith
          type: string
        companyName:
          description: The company name
          example: Microsoft
          type: string
        bankAccountNumber:
          description: Bank account number
          example: '999999999'
          type: string
        accountType:
          description: CHECKING - Chequing, SAVINGS - Savings
          example: CHECKING
          type: string
        accountCorporate:
          description: PERSONAL - Personal Bank Account, CORPORATE - Corporate Bank Account
          example: PERSONAL
          type: string
        bankIdNumber:
          description: >-
            Required for Canadian Bank Account Holder, the institution number -
            three digits - identifies your bank.
          example: '888'
          type: string
        transitNumber:
          description: >-
            Required for Canadian Bank Account Holder, the transit number - five
            digits - shows which branch you opened your account at.
          example: '55555'
          type: string
        routingNumber:
          description: >-
            Required for US Bank Account Holder, a nine-digit code printed on
            the bottom of checks to identify the financial institution on which
            it was drawn.
          example: '123456789'
          type: string
        streetAddress:
          example: 440 - something
          type: string
        city:
          example: Calgary
          type: string
        country:
          description: Only allow CAN - Canada, USA - United States
          example: CAN
          type: string
        province:
          example: AB
          type: string
        postalCode:
          example: T2T2T2
          type: string
        padAgreement:
          description: >-
            Customer given permission for a company or financial institution to
            debit a bank account when the payment is due.
          example: true
          type: boolean
      required:
        - accountCorporate
        - accountType
        - bankAccountNumber
        - city
        - companyName
        - country
        - firstName
        - lastName
        - postalCode
        - province
        - streetAddress
      type: object
    BankToken:
      title: Bank Token
      properties:
        bankToken:
          description: The token for the bank account on file.
          example: HGKHJK5647698HGJJK
          type: string
      required:
        - bankToken
      type: object
    Shipping:
      title: Shipping Data
      properties:
        amount:
          description: Total Shipping Amount of the Invoice
          example: 10.99
          type: number
        details:
          description: This will show up in the invoice
          example: Canada Post 1 day shipping
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
        - address
        - amount
        - details
      type: object
    Pickup:
      title: Pickup Data
      properties:
        date:
          description: Pickup Date
          example: '2022-01-25 13:55:55'
          type: string
        name:
          description: Name of the person to pickup
          example: Jane Smith
          type: string
      required:
        - date
      type: object
    Tax:
      title: Tax Data
      properties:
        amount:
          description: Total Tax Amount of the Invoice
          example: 5.99
          type: number
        details:
          description: Tax Details
          example: GST 5%
          type: string
      required:
        - amount
        - details
      type: object
    Discount:
      title: Discount Data
      properties:
        amount:
          description: Total Discount Amount of the Invoice
          example: 10.99
          type: number
        details:
          description: Discount Details/Code
          example: DISC100
          type: string
      required:
        - amount
        - details
      type: object
    LineItem:
      title: Line Item Data
      properties:
        description:
          example: Red Hat
          type: string
        sku:
          example: ITM1434
          type: string
        quantity:
          description: The quantity of the line item. Can have upto 2 decimal places
          example: 10.5
          type: number
        price:
          example: 10.55
          type: number
        total:
          description: Total = Price * Quantity
          example: 110.78
          type: number
        taxAmount:
          description: This will be added to Invoice's total tax amount
          example: 0
          type: number
        discountAmount:
          description: This will be added to Invoice's total discount amount
          example: 0
          type: number
      required:
        - description
        - price
        - quantity
        - total
      type: object
    purchase_request:
      allOf:
        - $ref: '#/components/schemas/PaymentRequest'
        - $ref: '#/components/schemas/CardData'
    Refund_Request:
      title: Refund Request
      properties:
        originalTransactionId:
          description: The transaction ID of the purchase/capture transaction.
          example: 198763
          type: integer
        amount:
          description: >-
            The amount to refund. Must be less or equal to the original
            purchase/capture amount.
          example: 100.99
          type: number
        ipAddress:
          description: >-
            IP address of the customer making the transaction, used as part of
            fraud detection.
          example: 192.168.1.1
          type: string
        ecommerce:
          description: >-
            Set to indicate that the transaction is e-commerce. When set, the
            Helcim Fraud Defender will provide further analysis.
          example: true
          type: boolean
      required:
        - amount
        - ipAddress
        - originalTransactionId
      type: object
    Refund_Request_1:
      title: Refund Request
      properties:
        cardTransactionId:
          description: The transaction ID of the original transaction.
          example: 198763
          type: integer
        ipAddress:
          description: >-
            IP address of the customer making the transaction, used as part of
            fraud detection.
          example: 192.168.1.1
          type: string
        ecommerce:
          description: >-
            Set to indicate that the transaction is e-commerce. When set, the
            Helcim Fraud Defender will provide further analysis.
          example: true
          type: boolean
      required:
        - cardTransactionId
        - ipAddress
      type: object
    withdraw_request:
      allOf:
        - $ref: '#/components/schemas/PaymentRequest'
        - $ref: '#/components/schemas/BankData'
    get_invoices_200_response_inner:
      allOf:
        - $ref: '#/components/schemas/InvoiceResponseBase'
        - $ref: '#/components/schemas/Invoice'
    create_invoice_request:
      allOf:
        - $ref: '#/components/schemas/InvoiceBase'
        - $ref: '#/components/schemas/InvoiceCreate'
        - $ref: '#/components/schemas/InvoiceCreateAfterProcessing'
    create_invoice_200_response:
      allOf:
        - type: object
        - $ref: '#/components/schemas/InvoiceResponseBase'
        - $ref: '#/components/schemas/InvoiceCreate'
        - $ref: '#/components/schemas/InvoiceCreateAfterProcessing'
        - $ref: '#/components/schemas/Invoice'
    get_invoice_200_response:
      allOf:
        - $ref: '#/components/schemas/InvoiceResponseBase'
        - $ref: '#/components/schemas/InvoiceCreate'
        - $ref: '#/components/schemas/InvoiceCreateAfterProcessing'
        - $ref: '#/components/schemas/Invoice'
    update_invoice_request:
      allOf:
        - $ref: '#/components/schemas/InvoiceBase'
        - $ref: '#/components/schemas/InvoiceUpdate'
    card_terminals_request:
      properties:
        currency:
          description: >-
            The abbreviation of card terminal's currency. Possible values are
            CAD | USD
          example: CAD
          type: string
        status:
          description: The card terminal's status. possible values are ACTIVE | INACTIVE
          example: ACTIVE
          type: string
      type: object
    PaymentRequest_invoice:
      description: >-
        To be filled when creating new invoice to be associated to transaction.
        Will be linked to Customer owning the Card used
      allOf:
        - $ref: '#/components/schemas/InvoiceBase'
        - $ref: '#/components/schemas/InvoiceCreateAfterProcessing'
    CardData_cardData:
      oneOf:
        - $ref: '#/components/schemas/Card'
        - $ref: '#/components/schemas/CardToken'
    VerifyRequest_invoice:
      allOf:
        - $ref: '#/components/schemas/InvoiceBase'
        - $ref: '#/components/schemas/InvoiceCreateAfterProcessing'
    BankData_bankData:
      oneOf:
        - $ref: '#/components/schemas/BankAccount'
        - $ref: '#/components/schemas/BankToken'
    Card_1:
      title: Card
      properties:
        cardHolderName:
          description: The card holder name.
          example: John Smith
          type: string
        cardF6L4:
          description: The F6L4 of card.
          example: '5454545454'
          type: string
        cardToken:
          description: Card token
          example: a1b2c3d4e5f6
          type: string
      type: object
    CardTerminal_address:
      properties:
        street1:
          example: Street 1
          type: string
        street2:
          example: Street 2
          type: string
        city:
          example: Calgary
          type: string
        province:
          description: Abbreviation of province
          example: AB
          type: string
        country:
          description: Abbreviation of country
          example: CAN
          type: string
        postalCode:
          description: Postal or zip code
          example: H0H0H0
          type: string
      type: object
    HelcimPayInitializeRequest:
      title: Helcim Pay Initialize
      properties:
        paymentType:
          description: Payment Type. Valid payment types are purchase | preauth | verify
          example: purchase
          type: string
        amount:
          description: The amount of the transaction to be processed
          example: 100
          type: number
        currency:
          description: Currency abbreviation. CAD | USD
          example: CAD
          type: string
        customerCode:
          description: >-
            This is the code of an existing customer in Helcim associated with
            this checkout
          example: CST1000
          type: string
        invoiceNumber:
          description: >-
            This is the number of an existing invoice in Helcim associated with
            this checkout
          example: INV1000
          type: string
        paymentMethod:
          description: >-
            This is the payment method (credit card, ACH) that customer can use
            to pay the amount. cc | ach | cc-ach
          example: cc-ach
          type: string
        allowPartial:
          description: >-
            This is used to determine whether the partial payment UI will be
            displayed to the customer
          example: 1
          type: number
        hasConvenienceFee:
          description: >-
            This is used to apply the convenience fee rate to credit card
            transaction should customer chooses this payment method
          example: 1
          type: number
        taxAmount:
          description: >-
            This is used to enable level 2 processing lower rates. The value
            should be the dollar amount of the tax to 2 decimal places.
          example: 3.67
          type: number
      required:
        - amount
        - currency
        - paymentType
      type: object
    checkout_init_200_response:
      properties:
        checkoutToken:
          description: The checkout token is used to initialize Helcim Pay
          type: string
        secretToken:
          description: The secret token is used to validate the transaction response
          type: string
      type: object
    checkout_init_default_response:
      properties:
        errors:
          description: List of errors
          items:
            type: string
          type: array
      type: object
    GeneralTestConnectivityToHelcimApiResponse:
      title: Successful Connection Test
      example:
        message: Connection Successful
      type: object
    GeneralTestConnectivityToHelcimApi400Response:
      title: Invalid Business ID
      example:
        errors: invalid businessId
      type: object
    GeneralTestConnectivityToHelcimApi401Response:
      title: No credentials included
      description: No API token was included in the request
      type: object
    GeneralTestConnectivityToHelcimApi403Response:
      title: Forbidden
      description: Invalid API token was included in the request
      type: object
    PaymentReverseTransactiondefaultResponse:
      type: object
      properties: {}
      example: {}
    PaymentReverseTransactionResponse:
      type: object
      properties: {}
      example: {}
    CustomerGetCardsResponse:
      items:
        $ref: '#/components/schemas/CardResponse'
      type: array
    CustomerGetCardDetailsResponse:
      items:
        $ref: '#/components/schemas/CardResponse'
      type: array
    CustomerGetBankAccountsResponse:
      items:
        $ref: '#/components/schemas/BankAccountResponse'
      type: array
    CustomerGetBankAccountResponse:
      items:
        $ref: '#/components/schemas/BankAccountResponse'
      type: array
    CustomerSetBankAccountDefaultResponse:
      items:
        $ref: '#/components/schemas/BankAccountResponse'
      type: array
    CardBatchGetAllResponse:
      description: Array of card batches
      items:
        $ref: '#/components/schemas/CardBatch'
      type: array
    CardTransactionCollectTransactionsResponse:
      description: Array of card transactions
      items:
        $ref: '#/components/schemas/SuccessfulPaymentResponse'
      type: array
    CustomerListResponse:
      items:
        $ref: '#/components/schemas/Customer'
      type: array
    InvoiceListResponse:
      items:
        $ref: '#/components/schemas/get_invoices_200_response_inner'
      type: array
    CardTerminalGetAllResponse:
      items:
        $ref: '#/components/schemas/CardTerminal'
      type: array
  securitySchemes:
    ApiAccessAuth:
      description: API Token
      in: header
      name: api-token
      type: apiKey
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 64da5f4f935867002bd29615
