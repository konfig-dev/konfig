openapi: 3.0.3
info:
  title: CircleCI API
  description: This describes the resources that make up the CircleCI API v2.
  version: v2
  license:
    name: MIT
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - url: https://circleci.com/api/v2
tags:
  - description: '[__EXPERIMENTAL__] Endpoints related to creating and managing a project.'
    name: Project
  - name: Context
  - name: Insights
  - name: Pipeline
  - description: Endpoints related to managing policies and making policy decisions
    name: Policy Management
  - description: Endpoints related to manage oidc identity tokens
    name: OIDC Token Management
  - name: Workflow
  - name: Webhook
  - name: Schedule
  - name: Job
  - name: User
paths:
  /context:
    get:
      tags:
        - Context
      summary: List contexts
      operationId: Context_listOwnerContexts
      description: List all contexts for an owner.
      parameters:
        - description: >-
            The unique ID of the owner of the context. Specify either this or
            owner-slug.
          in: query
          name: owner-id
          schema:
            type: string
            format: uuid
          required: false
        - description: >-
            A string that represents an organization. Specify either this or
            owner-id. Cannot be used for accounts.
          in: query
          name: owner-slug
          schema:
            type: string
          required: false
        - description: >-
            The type of the owner. Defaults to "organization". Accounts are only
            used as context owners in server.
          in: query
          name: owner-type
          schema:
            type: string
            enum:
              - account
              - organization
          required: false
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
      responses:
        '200':
          description: A paginated list of contexts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextListOwnerContextsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextListOwnerContextsdefaultResponse'
    post:
      tags:
        - Context
      summary: Create a new context
      operationId: Context_createNewContext
      description: Creates a new context.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextCreateNewContextRequest'
      responses:
        '200':
          description: The new context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCreateNewContextResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCreateNewContextdefaultResponse'
  /context/{context-id}:
    delete:
      tags:
        - Context
      summary: Delete a context
      operationId: Context_removeContext
      parameters:
        - description: ID of the context (UUID)
          in: path
          name: context-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextRemoveContextResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextRemoveContextdefaultResponse'
    get:
      tags:
        - Context
      summary: Get a context
      operationId: Context_getInformation
      description: Returns basic information about a context.
      parameters:
        - description: ID of the context (UUID)
          in: path
          name: context-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: The context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextGetInformationResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextGetInformationdefaultResponse'
  /context/{context-id}/environment-variable:
    get:
      tags:
        - Context
      summary: List environment variables
      operationId: Context_listEnvironmentVariables
      description: >-
        List information about environment variables in a context, not including
        their values.
      parameters:
        - description: ID of the context (UUID)
          in: path
          name: context-id
          schema:
            type: string
            format: uuid
          required: true
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
      responses:
        '200':
          description: A paginated list of environment variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextListEnvironmentVariablesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContextListEnvironmentVariablesdefaultResponse
  /context/{context-id}/environment-variable/{env-var-name}:
    put:
      tags:
        - Context
      summary: Add or update an environment variable
      operationId: Context_updateEnvironmentVariable
      description: >-
        Create or update an environment variable within a context. Returns
        information about the environment variable, not including its value.
      parameters:
        - description: ID of the context (UUID)
          in: path
          name: context-id
          schema:
            type: string
            format: uuid
          required: true
        - description: The name of the environment variable
          in: path
          name: env-var-name
          schema:
            type: string
          required: true
          example: POSTGRES_USER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextUpdateEnvironmentVariableRequest'
      responses:
        '200':
          description: The new environment variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextUpdateEnvironmentVariableResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContextUpdateEnvironmentVariabledefaultResponse
    delete:
      tags:
        - Context
      summary: Remove an environment variable
      operationId: Context_removeEnvironmentVariable
      description: Delete an environment variable from a context.
      parameters:
        - description: The name of the environment variable
          in: path
          name: env-var-name
          schema:
            type: string
          required: true
          example: POSTGRES_USER
        - description: ID of the context (UUID)
          in: path
          name: context-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextRemoveEnvironmentVariableResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContextRemoveEnvironmentVariabledefaultResponse
  /insights/pages/{project-slug}/summary:
    get:
      tags:
        - Insights
      summary: >-
        Get summary metrics and trends for a project across it's workflows and
        branches
      operationId: Insights_getProjectSummaryMetrics
      description: >-
        Get summary metrics and trends for a project at workflow and branch
        level.
                     Workflow runs going back at most 90 days are included in the aggregation window.
                     Trends are only supported upto last 30 days.
                     Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: >-
            The time window used to calculate summary metrics. If not provided,
            defaults to last-90-days
          in: query
          name: reporting-window
          schema:
            type: string
            enum:
              - last-7-days
              - last-90-days
              - last-24-hours
              - last-30-days
              - last-60-days
          required: false
          example: last-90-days
        - description: >-
            The names of VCS branches to include in branch-level workflow
            metrics.
          in: query
          name: branches
          schema:
            type: object
          required: false
          example: >-
            A single branch: ?branches=main or for multiple branches:
            ?branches=main&branches=feature&branches=dev
        - description: The names of workflows to include in workflow-level metrics.
          in: query
          name: workflow-names
          schema:
            type: object
          required: false
          example: |-
            A single workflow name: ?workflow-names=build-test-deploy or
                for multiple workflow names: ?workflow-names=build&workflow-names=test-and-deploy.
      responses:
        '200':
          description: Aggregated summary metrics and trends by workflow and branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetProjectSummaryMetricsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetProjectSummaryMetricsdefaultResponse
  /insights/time-series/{project-slug}/workflows/{workflow-name}/jobs:
    get:
      tags:
        - Insights
      summary: Job timeseries data
      operationId: Insights_getJobTimeseriesData
      description: >-
        Get timeseries data for all jobs within a workflow. Hourly granularity
        data is only retained for 48 hours while daily granularity data is
        retained for 90 days.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the workflow.
          in: path
          name: workflow-name
          schema:
            type: string
          required: true
          example: build-and-test
        - description: >-
            The name of a vcs branch. If not passed we will scope the API call
            to the default branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
        - description: The granularity for which to query timeseries data.
          in: query
          name: granularity
          schema:
            type: string
            enum:
              - daily
              - hourly
          required: false
          example: hourly
        - description: >-
            Include only executions that started at or after this date. This
            must be specified if an end-date is provided.
          in: query
          name: start-date
          schema:
            type: string
            format: date-time
          required: false
          example: '2020-08-21T13:26:29Z'
        - description: >-
            Include only executions that started before this date. This date can
            be at most 90 days after the start-date.
          in: query
          name: end-date
          schema:
            type: string
            format: date-time
          required: false
          example: '2020-09-04T13:26:29Z'
      responses:
        '200':
          description: An array of timeseries data, one entry per job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetJobTimeseriesDataResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetJobTimeseriesDatadefaultResponse
  /insights/{org-slug}/summary:
    get:
      tags:
        - Insights
      summary: >-
        Get summary metrics with trends for the entire org, and for each
        project.
      operationId: Insights_getSummaryMetricsWithTrends
      description: |-
        Gets aggregated summary metrics with trends for the entire org.
                      Also gets aggregated metrics and trends for each project belonging to the org.
      parameters:
        - description: >-
            Org slug in the form `vcs-slug/org-name`. The `/` characters may be
            URL-escaped.
          in: path
          name: org-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public
        - description: >-
            The time window used to calculate summary metrics. If not provided,
            defaults to last-90-days
          in: query
          name: reporting-window
          schema:
            type: string
            enum:
              - last-7-days
              - last-90-days
              - last-24-hours
              - last-30-days
              - last-60-days
          required: false
          example: last-90-days
        - description: List of project names.
          in: query
          name: project-names
          schema:
            type: object
          required: false
          example: >-
            For a single project: ?project-names=some-project or for multiple
            projects: ?project-names=some-project1&project-names=some-project2
      responses:
        '200':
          description: summary metrics with trends for an entire org and it's projects.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetSummaryMetricsWithTrendsResponse
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetSummaryMetricsWithTrendsdefaultResponse
  /insights/{project-slug}/branches:
    get:
      tags:
        - Insights
      summary: Get all branches for a project
      operationId: Insights_listProjectBranches
      description: >-
        Get a list of all branches for a specified project. The list will only
        contain branches currently available within Insights. The maximum number
        of branches returned by this endpoint is 5,000.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: >-
            The name of a workflow. If not passed we will scope the API call to
            the project.
          in: query
          name: workflow-name
          schema:
            type: string
          required: false
          example: build-and-test
      responses:
        '200':
          description: A list of branches for a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsListProjectBranchesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsListProjectBranchesdefaultResponse
  /insights/{project-slug}/flaky-tests:
    get:
      tags:
        - Insights
      summary: Get flaky tests for a project
      operationId: Insights_getFlakyTests
      description: >-
        Get a list of flaky tests for a given project. Flaky tests are branch
        agnostic.
                     A flaky test is a test that passed and failed in the same commit.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: A list of flaky tests for a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetFlakyTestsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetFlakyTestsdefaultResponse'
  /insights/{project-slug}/workflows:
    get:
      tags:
        - Insights
      summary: Get summary metrics for a project's workflows
      operationId: Insights_getProjectWorkflowMetrics
      description: >-
        Get summary metrics for a project's workflows.  Workflow runs going back
        at most 90 days are included in the aggregation window. Metrics are
        refreshed daily, and thus may not include executions from the last 24
        hours.  Please note that Insights is not a financial reporting tool and
        should not be used for precise credit reporting.  Credit reporting from
        Insights does not use the same source of truth as the billing
        information that is found in the Plan Overview page in the CircleCI UI,
        nor does the underlying data have the same data accuracy guarantees as
        the billing information in the CircleCI UI.  This may lead to
        discrepancies between credits reported from Insights and the billing
        information in the Plan Overview page of the CircleCI UI.  For precise
        credit reporting, always use the Plan Overview page in the CircleCI UI.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
        - description: >-
            Whether to retrieve data for all branches combined. Use either this
            parameter OR the branch name parameter.
          in: query
          name: all-branches
          schema:
            type: boolean
          required: false
        - description: >-
            The name of a vcs branch. If not passed we will scope the API call
            to the default branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
        - description: >-
            The time window used to calculate summary metrics. If not provided,
            defaults to last-90-days
          in: query
          name: reporting-window
          schema:
            type: string
            enum:
              - last-7-days
              - last-90-days
              - last-24-hours
              - last-30-days
              - last-60-days
          required: false
          example: last-90-days
      responses:
        '200':
          description: A paginated list of summary metrics by workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetProjectWorkflowMetricsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetProjectWorkflowMetricsdefaultResponse
  /insights/{project-slug}/workflows/{workflow-name}:
    get:
      tags:
        - Insights
      summary: Get recent runs of a workflow
      operationId: Insights_getRecentWorkflowRuns
      description: >-
        Get recent runs of a workflow. Runs going back at most 90 days are
        returned. Please note that Insights is not a financial reporting tool
        and should not be used for precise credit reporting.  Credit reporting
        from Insights does not use the same source of truth as the billing
        information that is found in the Plan Overview page in the CircleCI UI,
        nor does the underlying data have the same data accuracy guarantees as
        the billing information in the CircleCI UI.  This may lead to
        discrepancies between credits reported from Insights and the billing
        information in the Plan Overview page of the CircleCI UI.  For precise
        credit reporting, always use the Plan Overview page in the CircleCI UI.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the workflow.
          in: path
          name: workflow-name
          schema:
            type: string
          required: true
          example: build-and-test
        - description: >-
            Whether to retrieve data for all branches combined. Use either this
            parameter OR the branch name parameter.
          in: query
          name: all-branches
          schema:
            type: boolean
          required: false
        - description: >-
            The name of a vcs branch. If not passed we will scope the API call
            to the default branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
        - description: >-
            Include only executions that started at or after this date. This
            must be specified if an end-date is provided.
          in: query
          name: start-date
          schema:
            type: string
            format: date-time
          required: false
          example: '2020-08-21T13:26:29Z'
        - description: >-
            Include only executions that started before this date. This date can
            be at most 90 days after the start-date.
          in: query
          name: end-date
          schema:
            type: string
            format: date-time
          required: false
          example: '2020-09-04T13:26:29Z'
      responses:
        '200':
          description: A paginated list of recent workflow runs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetRecentWorkflowRunsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetRecentWorkflowRunsdefaultResponse
  /insights/{project-slug}/workflows/{workflow-name}/jobs:
    get:
      tags:
        - Insights
      summary: Get summary metrics for a project workflow's jobs.
      operationId: Insights_getProjectWorkflowJobMetrics
      description: >-
        Get summary metrics for a project workflow's jobs. Job runs going back
        at most 90 days are included in the aggregation window. Metrics are
        refreshed daily, and thus may not include executions from the last 24
        hours. Please note that Insights is not a financial reporting tool and
        should not be used for precise credit reporting.  Credit reporting from
        Insights does not use the same source of truth as the billing
        information that is found in the Plan Overview page in the CircleCI UI,
        nor does the underlying data have the same data accuracy guarantees as
        the billing information in the CircleCI UI.  This may lead to
        discrepancies between credits reported from Insights and the billing
        information in the Plan Overview page of the CircleCI UI.  For precise
        credit reporting, always use the Plan Overview page in the CircleCI UI.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the workflow.
          in: path
          name: workflow-name
          schema:
            type: string
          required: true
          example: build-and-test
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
        - description: >-
            Whether to retrieve data for all branches combined. Use either this
            parameter OR the branch name parameter.
          in: query
          name: all-branches
          schema:
            type: boolean
          required: false
        - description: >-
            The name of a vcs branch. If not passed we will scope the API call
            to the default branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
        - description: >-
            The time window used to calculate summary metrics. If not provided,
            defaults to last-90-days
          in: query
          name: reporting-window
          schema:
            type: string
            enum:
              - last-7-days
              - last-90-days
              - last-24-hours
              - last-30-days
              - last-60-days
          required: false
          example: last-90-days
      responses:
        '200':
          description: A paginated list of summary metrics by workflow job.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetProjectWorkflowJobMetricsResponse
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetProjectWorkflowJobMetricsdefaultResponse
  /insights/{project-slug}/workflows/{workflow-name}/summary:
    get:
      tags:
        - Insights
      summary: Get metrics and trends for workflows
      operationId: Insights_getWorkflowSummaryMetrics
      description: >-
        Get the metrics and trends for a particular workflow on a single branch
        or all branches
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the workflow.
          in: path
          name: workflow-name
          schema:
            type: string
          required: true
          example: build-and-test
        - description: >-
            Whether to retrieve data for all branches combined. Use either this
            parameter OR the branch name parameter.
          in: query
          name: all-branches
          schema:
            type: boolean
          required: false
        - description: >-
            The name of a vcs branch. If not passed we will scope the API call
            to the default branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Metrics and trends for a workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsGetWorkflowSummaryMetricsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetWorkflowSummaryMetricsdefaultResponse
  /insights/{project-slug}/workflows/{workflow-name}/test-metrics:
    get:
      tags:
        - Insights
      summary: Get test metrics for a project's workflows
      operationId: Insights_getProjectWorkflowTestMetrics
      description: >-
        Get test metrics for a project's workflows. Currently tests metrics are
        calculated based on 10 most recent workflow runs.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the workflow.
          in: path
          name: workflow-name
          schema:
            type: string
          required: true
          example: build-and-test
        - description: >-
            The name of a vcs branch. If not passed we will scope the API call
            to the default branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
        - description: >-
            Whether to retrieve data for all branches combined. Use either this
            parameter OR the branch name parameter.
          in: query
          name: all-branches
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: A list of test metrics by workflow
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetProjectWorkflowTestMetricsResponse
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/InsightsGetProjectWorkflowTestMetricsdefaultResponse
  /me:
    get:
      tags:
        - User
      summary: User Information
      operationId: User_getInformation
      description: Provides information about the user that is currently signed in.
      responses:
        '200':
          description: User login information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetInformationResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetInformationdefaultResponse'
  /me/collaborations:
    get:
      tags:
        - User
      summary: Collaborations
      operationId: User_listCollaborations
      description: >-
        Provides the set of organizations of which a user is a member or a
        collaborator.


        The set of organizations that a user can collaborate on is composed of:


        * Organizations that the current user belongs to across VCS types (e.g.
        BitBucket, GitHub)

        * The parent organization of repository that the user can collaborate
        on, but is not necessarily a member of

        * The organization of the current user's account
      responses:
        '200':
          description: Collaborations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListCollaborationsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListCollaborationsdefaultResponse'
  /pipeline:
    get:
      tags:
        - Pipeline
      summary: Get a list of pipelines
      operationId: Pipeline_listRecentPipelines
      description: >-
        Returns all pipelines for the most recently built projects (max 250) you
        follow in an organization.
      parameters:
        - description: >-
            Org slug in the form `vcs-slug/org-name`. For projects that use
            GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace
            the `org-name` with the organization ID (found in Organization
            Settings).
          in: query
          name: org-slug
          schema:
            type: string
          required: false
          example: gh/CircleCI-Public
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
        - description: Only include entries created by your user.
          in: query
          name: mine
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: A sequence of pipelines.
          links:
            NextPipelinePage:
              operationId: listPipelines
              parameters:
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListRecentPipelinesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PipelineListRecentPipelinesdefaultResponse
  /pipeline/continue:
    post:
      tags:
        - Pipeline
      summary: Continue a pipeline
      operationId: Pipeline_continueExecution
      description: >-
        Continue a pipeline from the setup phase. For information on using
        pipeline parameters with dynamic configuration, see the [Pipeline values
        and
        parameters](https://circleci.com/docs/pipeline-variables/#pipeline-parameters-and-dynamic-configuration)
        docs.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineContinueExecutionRequest'
      responses:
        '200':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineContinueExecutionResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineContinueExecutiondefaultResponse'
  /pipeline/{pipeline-id}:
    get:
      tags:
        - Pipeline
      summary: Get a pipeline by ID
      operationId: Pipeline_getById
      description: Returns a pipeline by the pipeline ID.
      parameters:
        - description: The unique ID of the pipeline.
          in: path
          name: pipeline-id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      responses:
        '200':
          description: A pipeline object.
          links:
            ProjectFromPipeline:
              operationId: getProjectBySlug
              parameters:
                project_slug: $response.body#/project_slug
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetByIddefaultResponse'
  /pipeline/{pipeline-id}/config:
    get:
      tags:
        - Pipeline
      summary: Get a pipeline's configuration
      operationId: Pipeline_getConfigurationById
      description: Returns a pipeline's configuration by ID.
      parameters:
        - description: The unique ID of the pipeline.
          in: path
          name: pipeline-id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      responses:
        '200':
          description: The configuration strings for the pipeline.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetConfigurationByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PipelineGetConfigurationByIddefaultResponse
  /pipeline/{pipeline-id}/workflow:
    get:
      tags:
        - Pipeline
      summary: Get a pipeline's workflows
      operationId: Pipeline_listWorkflows
      description: Returns a paginated list of workflows by pipeline ID.
      parameters:
        - description: The unique ID of the pipeline.
          in: path
          name: pipeline-id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
      responses:
        '200':
          description: A paginated list of workflow objects.
          links:
            NextPipelineWorkflowsPage:
              operationId: listWorkflowsByPipelineId
              parameters:
                pipeline-id: $request.path.pipeline-id
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListWorkflowsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListWorkflowsdefaultResponse'
  /project/{project-slug}:
    get:
      tags:
        - Project
      summary: Get a project
      operationId: Project_getBySlug
      description: Retrieves a project by project slug.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: A project object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetBySlugResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetBySlugdefaultResponse'
  /project/{project-slug}/checkout-key:
    get:
      tags:
        - Project
      summary: Get all checkout keys
      operationId: Project_listCheckoutKeys
      description: Returns a sequence of checkout keys for `:project`.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: >-
            The fingerprint digest type to return. This may be either `md5` or
            `sha256`. If not passed, defaults to `md5`.
          in: query
          name: digest
          schema:
            type: string
            enum:
              - sha256
              - md5
          required: false
      responses:
        '200':
          description: A sequence of checkout keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListCheckoutKeysResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListCheckoutKeysdefaultResponse'
    post:
      tags:
        - Project
      summary: Create a new checkout key
      operationId: Project_createCheckoutKey
      description: >-
        Not available to projects that use GitLab or GitHub App. Creates a new
        checkout key. This API request is only usable with a user API token.
                                   Please ensure that you have authorized your account with GitHub before creating user keys.
                                   This is necessary to give CircleCI the permission to create a user key associated with
                                   your GitHub user account. You can find this page by visiting Project Settings > Checkout SSH Keys
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateCheckoutKeyRequest'
      responses:
        '201':
          description: The checkout key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateCheckoutKeyResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateCheckoutKeydefaultResponse'
  /project/{project-slug}/checkout-key/{fingerprint}:
    delete:
      tags:
        - Project
      summary: Delete a checkout key
      operationId: Project_deleteCheckoutKeyByFingerprint
      description: >-
        Deletes the checkout key via md5 or sha256 fingerprint. sha256 keys
        should be url-encoded.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: An SSH key fingerprint.
          in: path
          name: fingerprint
          schema:
            type: string
          required: true
          example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
      responses:
        '200':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProjectDeleteCheckoutKeyByFingerprintResponse
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProjectDeleteCheckoutKeyByFingerprintdefaultResponse
    get:
      tags:
        - Project
      summary: Get a checkout key
      operationId: Project_getCheckoutKeyByFingerprint
      description: >-
        Returns an individual checkout key via md5 or sha256 fingerprint. sha256
        keys should be url-encoded.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: An SSH key fingerprint.
          in: path
          name: fingerprint
          schema:
            type: string
          required: true
          example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
      responses:
        '200':
          description: The checkout key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProjectGetCheckoutKeyByFingerprintResponse
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProjectGetCheckoutKeyByFingerprintdefaultResponse
  /project/{project-slug}/envvar:
    post:
      tags:
        - Project
      summary: Create an environment variable
      operationId: Project_createEnvVar
      description: Creates a new environment variable.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateEnvVarRequest'
      responses:
        '201':
          description: The environment variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateEnvVarResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateEnvVardefaultResponse'
    get:
      tags:
        - Project
      summary: List all environment variables
      operationId: Project_listEnvVarValues
      description: >-
        Returns four 'x' characters, in addition to the last four ASCII
        characters of the value, consistent with the display of environment
        variable values on the CircleCI website.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: A sequence of environment variables.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListEnvVarValuesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListEnvVarValuesdefaultResponse'
  /project/{project-slug}/envvar/{name}:
    delete:
      tags:
        - Project
      summary: Delete an environment variable
      operationId: Project_deleteEnvironmentVariable
      description: Deletes the environment variable named :name.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the environment variable.
          in: path
          name: name
          schema:
            type: string
          required: true
          example: foo
      responses:
        '200':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeleteEnvironmentVariableResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProjectDeleteEnvironmentVariabledefaultResponse
    get:
      tags:
        - Project
      summary: Get a masked environment variable
      operationId: Project_getMaskedEnvVar
      description: Returns the masked value of environment variable :name.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of the environment variable.
          in: path
          name: name
          schema:
            type: string
          required: true
          example: foo
      responses:
        '200':
          description: The environment variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetMaskedEnvVarResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetMaskedEnvVardefaultResponse'
  /project/{project-slug}/job/{job-number}:
    get:
      tags:
        - Job
      summary: Get job details
      operationId: Job_getDetails
      description: Returns job details.
      parameters:
        - description: The number of the job.
          in: path
          name: job-number
          schema: {}
          required: true
          example: '123'
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: Job details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetDetailsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetDetailsdefaultResponse'
  /project/{project-slug}/job/{job-number}/cancel:
    post:
      tags:
        - Job
      summary: Cancel job
      operationId: Job_cancelWithNumber
      description: Cancel job with a given job number.
      parameters:
        - description: The number of the job.
          in: path
          name: job-number
          schema: {}
          required: true
          example: '123'
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCancelWithNumberResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCancelWithNumberdefaultResponse'
  /project/{project-slug}/pipeline:
    get:
      tags:
        - Pipeline
      summary: Get all pipelines
      operationId: Pipeline_getAllPipelines
      description: Returns all pipelines for this project.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The name of a vcs branch.
          in: query
          name: branch
          schema:
            type: string
          required: false
          allowEmptyValue: true
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
      responses:
        '200':
          description: A sequence of pipelines.
          links:
            NextPipelinePage:
              operationId: listPipelinesForProject
              parameters:
                project-slug: $request.path.project-slug
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetAllPipelinesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetAllPipelinesdefaultResponse'
    post:
      tags:
        - Pipeline
      summary: Trigger a new pipeline
      operationId: Pipeline_triggerNewPipeline
      description: >-
        Not yet available to projects that use GitLab or GitHub App. Triggers a
        new pipeline on the project.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineTriggerNewPipelineRequest'
      responses:
        '201':
          description: The created pipeline.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTriggerNewPipelineResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineTriggerNewPipelinedefaultResponse'
  /project/{project-slug}/pipeline/mine:
    get:
      tags:
        - Pipeline
      summary: Get your pipelines
      operationId: Pipeline_listUserPipelines
      description: >-
        Returns a sequence of all pipelines for this project triggered by the
        user.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
      responses:
        '200':
          description: A sequence of pipelines.
          links:
            NextPipelinePage:
              operationId: listMyPipelines
              parameters:
                project-slug: $request.path.project-slug
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListUserPipelinesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListUserPipelinesdefaultResponse'
  /project/{project-slug}/pipeline/{pipeline-number}:
    get:
      tags:
        - Pipeline
      summary: Get a pipeline by pipeline number
      operationId: Pipeline_getByNumber
      description: Returns a pipeline by the pipeline number.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: The number of the pipeline.
          in: path
          name: pipeline-number
          schema: {}
          required: true
          example: '123'
      responses:
        '200':
          description: A pipeline object.
          links:
            ProjectFromPipeline:
              operationId: getProjectBySlug
              parameters:
                project_slug: $response.body#/project_slug
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetByNumberResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetByNumberdefaultResponse'
  /project/{project-slug}/schedule:
    get:
      tags:
        - Schedule
      summary: Get all schedules
      operationId: Schedule_getAllSchedules
      description: Returns all schedules for this project.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
        - description: A token to retrieve the next page of results.
          in: query
          name: page-token
          schema:
            type: string
          required: false
          allowEmptyValue: true
      responses:
        '200':
          description: A sequence of schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleGetAllSchedulesResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleGetAllSchedulesdefaultResponse'
    post:
      tags:
        - Schedule
      summary: Create a schedule
      operationId: Schedule_createNewSchedule
      description: >-
        Not yet available to projects that use GitLab or GitHub App. Creates a
        schedule and returns the created schedule.
      parameters:
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateNewScheduleRequest'
      responses:
        '201':
          description: A schedule object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleCreateNewScheduleResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleCreateNewScheduledefaultResponse'
  /project/{project-slug}/{job-number}/artifacts:
    get:
      tags:
        - Job
      summary: Get a job's artifacts
      operationId: Job_getArtifacts
      description: Returns a job's artifacts.
      parameters:
        - description: The number of the job.
          in: path
          name: job-number
          schema: {}
          required: true
          example: '123'
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: A paginated list of the job's artifacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetArtifactsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetArtifactsdefaultResponse'
  /project/{project-slug}/{job-number}/tests:
    get:
      tags:
        - Job
      summary: Get test metadata
      operationId: Job_getTestMetadata
      description: >-
        Get test metadata for a build. In the rare case where there is more than
        250MB of test data on the job, no results will be returned.
      parameters:
        - description: The number of the job.
          in: path
          name: job-number
          schema: {}
          required: true
          example: '123'
        - description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          in: path
          name: project-slug
          schema:
            type: string
          required: true
          example: gh/CircleCI-Public/api-preview-docs
          allowReserved: true
      responses:
        '200':
          description: A paginated list of test results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetTestMetadataResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetTestMetadatadefaultResponse'
  /schedule/{schedule-id}:
    get:
      tags:
        - Schedule
      summary: Get a schedule
      operationId: Schedule_getById
      description: Get a schedule by id.
      parameters:
        - description: The unique ID of the schedule.
          in: path
          name: schedule-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A schedule object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleGetByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleGetByIddefaultResponse'
    patch:
      tags:
        - Schedule
      summary: Update a schedule
      operationId: Schedule_updateSchedule
      description: >-
        Not yet available to projects that use GitLab or GitHub App. Updates a
        schedule and returns the updated schedule.
      parameters:
        - description: The unique ID of the schedule.
          in: path
          name: schedule-id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateScheduleRequest'
      responses:
        '200':
          description: A schedule object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleUpdateScheduleResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleUpdateScheduledefaultResponse'
    get:
      tags:
        - Schedule
      summary: Get a schedule
      operationId: Schedule_getById
      description: Get a schedule by id.
      parameters:
        - description: The unique ID of the schedule.
          in: path
          name: schedule-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A schedule object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleGetByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleGetByIddefaultResponse'
    delete:
      tags:
        - Schedule
      summary: Delete a schedule
      operationId: Schedule_removeById
      description: >-
        Not yet available to projects that use GitLab or GitHub App. Deletes the
        schedule by id.
      parameters:
        - description: The unique ID of the schedule.
          in: path
          name: schedule-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleRemoveByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleRemoveByIddefaultResponse'
  /user/{id}:
    get:
      tags:
        - User
      summary: User Information
      operationId: User_getUserInformation
      description: Provides information about the user with the given ID.
      parameters:
        - description: The unique ID of the user.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: User login information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetUserInformationResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetUserInformationdefaultResponse'
  /webhook:
    get:
      tags:
        - Webhook
      summary: List webhooks
      operationId: Webhook_listMatchingScope
      description: >-
        Get a list of outbound webhooks that match the given scope-type and
        scope-id
      parameters:
        - description: >-
            ID of the scope being used (at the moment, only project ID is
            supported)
          in: query
          name: scope-id
          schema:
            type: string
            format: uuid
          required: true
        - description: Type of the scope being used
          in: query
          name: scope-type
          schema:
            type: string
            enum:
              - project
          required: true
      responses:
        '200':
          description: A list of webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListMatchingScopeResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListMatchingScopedefaultResponse'
    post:
      tags:
        - Webhook
      summary: Create an outbound webhook
      operationId: Webhook_createOutboundWebhook
      description: Creates an outbound webhook.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateOutboundWebhookRequest'
      responses:
        '201':
          description: A webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookCreateOutboundWebhookResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebhookCreateOutboundWebhookdefaultResponse
  /webhook/{webhook-id}:
    delete:
      tags:
        - Webhook
      summary: Delete an outbound webhook
      operationId: Webhook_deleteOutboundWebhook
      description: Deletes an outbound webhook
      parameters:
        - description: ID of the webhook (UUID)
          in: path
          name: webhook-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeleteOutboundWebhookResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebhookDeleteOutboundWebhookdefaultResponse
    put:
      tags:
        - Webhook
      summary: Update an outbound webhook
      operationId: Webhook_updateOutboundWebhook
      description: Updates an outbound webhook.
      parameters:
        - description: ID of the webhook (UUID)
          in: path
          name: webhook-id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateOutboundWebhookRequest'
      responses:
        '200':
          description: A webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookUpdateOutboundWebhookResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WebhookUpdateOutboundWebhookdefaultResponse
    get:
      tags:
        - Webhook
      summary: Get a webhook
      operationId: Webhook_getById
      description: Get an outbound webhook by id.
      parameters:
        - description: ID of the webhook (UUID)
          in: path
          name: webhook-id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: A webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookGetByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookGetByIddefaultResponse'
  /workflow/{id}:
    get:
      tags:
        - Workflow
      summary: Get a workflow
      operationId: Workflow_getById
      description: Returns summary fields of a workflow by ID.
      parameters:
        - description: The unique ID of the workflow.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      responses:
        '200':
          description: A workflow object.
          links:
            ProjectFromGetWorkflow:
              operationId: getProjectBySlug
              parameters:
                project_slug: $response.body#/project_slug
            WorkflowJobs:
              operationId: listWorkflowJobs
              parameters:
                id: $response.body#/id
            CancelWorkflow:
              operationId: cancelWorkflow
              parameters:
                id: $response.body#/id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetByIdResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetByIddefaultResponse'
  /workflow/{id}/approve/{approval_request_id}:
    post:
      tags:
        - Workflow
      summary: Approve a job
      operationId: Workflow_approveJob
      description: Approves a pending approval job in a workflow.
      parameters:
        - description: The ID of the job being approved.
          in: path
          name: approval_request_id
          schema:
            type: string
            format: uuid
          required: true
        - description: The unique ID of the workflow.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      responses:
        '202':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowApproveJobResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowApproveJobdefaultResponse'
  /workflow/{id}/cancel:
    post:
      tags:
        - Workflow
      summary: Cancel a workflow
      operationId: Workflow_cancelWorkflow
      description: Cancels a running workflow.
      parameters:
        - description: The unique ID of the workflow.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      responses:
        '202':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowCancelWorkflowResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowCancelWorkflowdefaultResponse'
  /workflow/{id}/job:
    get:
      tags:
        - Workflow
      summary: Get a workflow's jobs
      operationId: Workflow_getJobs
      description: Returns a sequence of jobs for a workflow.
      parameters:
        - description: The unique ID of the workflow.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      responses:
        '200':
          description: A paginated sequence of jobs.
          links:
            NextWorkflowJobPage:
              operationId: listWorkflowJobs
              parameters:
                id: $request.path.id
                page-token: $response.body#/next_page_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetJobsResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetJobsdefaultResponse'
  /workflow/{id}/rerun:
    post:
      tags:
        - Workflow
      summary: Rerun a workflow
      operationId: Workflow_rerunWorkflow
      description: Reruns a workflow.
      parameters:
        - description: The unique ID of the workflow.
          in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowRerunWorkflowRequest'
      responses:
        '202':
          description: A confirmation message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRerunWorkflowResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRerunWorkflowdefaultResponse'
  /org/{orgID}/oidc-custom-claims:
    delete:
      tags:
        - OIDC Token Management
      summary: Delete org-level claims
      operationId: OidcTokenManagement_deleteOrgClaims
      description: Deletes org-level custom claims of OIDC identity tokens
      parameters:
        - $ref: '#/components/parameters/OrgID'
        - $ref: '#/components/parameters/Claims'
      responses:
        '200':
          description: Claims successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - OIDC Token Management
      summary: Get org-level claims
      operationId: OidcTokenManagement_getOrgClaims
      description: Fetches org-level custom claims of OIDC identity tokens
      parameters:
        - $ref: '#/components/parameters/OrgID'
      responses:
        '200':
          description: Claims successfully fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - OIDC Token Management
      summary: Patch org-level claims
      operationId: OidcTokenManagement_updateOrgClaims
      description: Creates/Updates org-level custom claims of OIDC identity tokens
      parameters:
        - $ref: '#/components/parameters/OrgID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchClaimsRequest'
      responses:
        '200':
          description: Claims successfully patched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /org/{orgID}/project/{projectID}/oidc-custom-claims:
    delete:
      tags:
        - OIDC Token Management
      summary: Delete project-level claims
      operationId: OidcTokenManagement_deleteProjectClaims
      description: Deletes project-level custom claims of OIDC identity tokens
      parameters:
        - $ref: '#/components/parameters/OrgID'
        - $ref: '#/components/parameters/ProjectID'
        - $ref: '#/components/parameters/Claims'
      responses:
        '200':
          description: Claims successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - OIDC Token Management
      summary: Get project-level claims
      operationId: OidcTokenManagement_getProjectClaims
      description: Fetches project-level custom claims of OIDC identity tokens
      parameters:
        - $ref: '#/components/parameters/OrgID'
        - $ref: '#/components/parameters/ProjectID'
      responses:
        '200':
          description: Claims successfully fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - OIDC Token Management
      summary: Patch project-level claims
      operationId: OidcTokenManagement_updateProjectClaims
      description: Creates/Updates project-level custom claims of OIDC identity tokens
      parameters:
        - $ref: '#/components/parameters/OrgID'
        - $ref: '#/components/parameters/ProjectID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchClaimsRequest'
      responses:
        '200':
          description: Claims successfully patched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /owner/{ownerID}/context/{context}/decision:
    get:
      tags:
        - Policy Management
      summary: Retrieves the owner's decision audit logs.
      operationId: PolicyManagement_getDecisionAuditLogs
      description: >-
        This endpoint will return a list of decision audit logs that were made
        using this owner's policies.
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
        - description: Return decisions matching this decision status.
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Return decisions made after this date.
          in: query
          name: after
          required: false
          schema:
            format: date-time
            type: string
        - description: Return decisions made before this date.
          in: query
          name: before
          required: false
          schema:
            format: date-time
            type: string
        - description: Return decisions made on this branch.
          in: query
          name: branch
          required: false
          schema:
            type: string
        - description: Return decisions made for this project.
          in: query
          name: project_id
          required: false
          schema:
            type: string
        - description: Return decisions made for this build number.
          in: query
          name: build_number
          required: false
          schema:
            type: string
        - description: Sets the offset when retrieving the decisions, for paging.
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Decision logs successfully retrieved.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PolicyManagementGetDecisionAuditLogsResponse
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
    post:
      tags:
        - Policy Management
      summary: Makes a decision
      operationId: PolicyManagement_evaluateInputData
      description: >-
        This endpoint will evaluate input data (config+metadata) against owner's
        stored policies and return a decision.
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyManagementEvaluateInputDataRequest'
      responses:
        '200':
          description: >-
            Decision rendered by applying the policy against the provided data.
            Response will be modeled by the data and rego processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
        '400':
          description: |
            The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyManagementEvaluateInputDataResponse'
        '401':
          description: |
            The request is unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PolicyManagementEvaluateInputData401Response
        '500':
          description: Something unexpected happened on the server.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PolicyManagementEvaluateInputData500Response
  /owner/{ownerID}/context/{context}/decision/settings:
    get:
      tags:
        - Policy Management
      summary: Get the decision settings
      operationId: PolicyManagement_getDecisionSettings
      description: >-
        This endpoint retrieves the current decision settings (eg enable/disable
        policy evaluation)
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
      responses:
        '200':
          description: Decision settings successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionSettings'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
    patch:
      tags:
        - Policy Management
      summary: Set the decision settings
      operationId: PolicyManagement_modifyDecisionSettings
      description: >-
        This endpoint allows modifying decision settings (eg enable/disable
        policy evaluation)
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionSettings'
      responses:
        '200':
          description: Decision settings successfully set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionSettings'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
  /owner/{ownerID}/context/{context}/decision/{decisionID}:
    get:
      tags:
        - Policy Management
      summary: Retrieves the owner's decision audit log by given decisionID
      operationId: PolicyManagement_getDecisionAuditLogByGivenId
      description: This endpoint will retrieve a decision for a given decision log ID
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/DecisionID'
      responses:
        '200':
          description: Decision log successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: |
            There was no decision log found for given decision_id, and owner_id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PolicyManagementGetDecisionAuditLogByGivenIdResponse
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
  /owner/{ownerID}/context/{context}/decision/{decisionID}/policy-bundle:
    get:
      tags:
        - Policy Management
      summary: Retrieves Policy Bundle for a given decision log ID
      operationId: PolicyManagement_getPolicyBundleForDecision
      description: This endpoint will retrieve a policy bundle for a given decision log ID
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
        - $ref: '#/components/parameters/DecisionID'
      responses:
        '200':
          description: Policy-Bundle retrieved successfully for given decision log ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBundle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: |
            There was no decision log found for given decision_id, and owner_id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PolicyManagementGetPolicyBundleForDecisionResponse
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
  /owner/{ownerID}/context/{context}/policy-bundle:
    get:
      tags:
        - Policy Management
      summary: Retrieves Policy Bundle
      operationId: PolicyManagement_getPolicyBundle
      description: This endpoint will retrieve a policy bundle
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
      responses:
        '200':
          description: Policy-Bundle retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBundle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
    post:
      tags:
        - Policy Management
      summary: Creates policy bundle for the context
      operationId: PolicyManagement_createPolicyBundleForContext
      description: >-
        This endpoint replaces the current policy bundle with the provided
        policy bundle
      parameters:
        - $ref: '#/components/parameters/OwnerID'
        - $ref: '#/components/parameters/Context'
        - in: query
          name: dry
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundlePayload'
      responses:
        '200':
          description: Policy-Bundle diff successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleDiff'
        '201':
          description: Policy-Bundle successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleDiff'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          description: >
            The request exceeds the maximum payload size for policy bundles
            ~2.5Mib
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PolicyManagementCreatePolicyBundleForContextResponse
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
  /owner/{ownerID}/context/{context}/policy-bundle/{policyName}:
    parameters:
      - $ref: '#/components/parameters/OwnerID'
      - $ref: '#/components/parameters/Context'
      - description: the policy name set by the rego policy_name rule
        in: path
        name: policyName
        required: true
        schema:
          type: string
    get:
      tags:
        - Policy Management
      summary: Retrieves a policy document
      operationId: PolicyManagement_getDocument
      description: This endpoint will retrieve a policy document.
      responses:
        '200':
          description: Policy retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: >
            There was no policy that was found with the given owner_id and
            policy name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyManagementGetDocumentResponse'
        '500':
          $ref: '#/components/responses/UnexpectedServerError'
  /context/{context_id}/restrictions:
    parameters:
      - $ref: '#/components/parameters/context_id'
    get:
      tags:
        - Context
      summary: 🧪 Get context restrictions
      operationId: Context_getRestrictions
      description: >-
        [__EXPERIMENTAL__] Gets a list of project restrictions associated with a
        context.
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/context_project_restrictions_list'
        '400':
          $ref: '#/components/responses/400_invalid_context_id'
        '401':
          $ref: '#/components/responses/401_invalid_token'
        '404':
          $ref: '#/components/responses/404_entity_not_found'
        '429':
          $ref: '#/components/responses/429_rate_limit_exceeded'
        '500':
          $ref: '#/components/responses/500_internal_server_error'
    post:
      tags:
        - Context
      summary: 🧪 Create context restriction
      operationId: Context_createRestriction
      description: '[__EXPERIMENTAL__] Creates project restriction on a context.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextCreateRestrictionRequest'
            example:
              project_id: 405d8375-3514-403b-8c43-83ae74cfe0e9
              restriction_type: project
              restriction_value: 405d8375-3514-403b-8c43-83ae74cfe0e9
        required: true
      responses:
        '201':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restriction_created'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCreateRestrictionResponse'
              examples:
                invalid_restriction:
                  summary: Invalid restriction
                  value:
                    message: This restriction cannot be applied to this context.
                invalid_access:
                  summary: Project doesn't exist, or insufficient credentials
                  value:
                    message: >-
                      Project does not exist, or user does not have access to
                      this project.
        '401':
          $ref: '#/components/responses/401_invalid_token'
        '404':
          $ref: '#/components/responses/404_entity_not_found'
        '409':
          description: Request conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCreateRestriction409Response'
              examples:
                restriction_conflict:
                  summary: Restriction conflict
                  value:
                    message: The restriction you're trying to add already exists.
        '429':
          $ref: '#/components/responses/429_rate_limit_exceeded'
        '500':
          $ref: '#/components/responses/500_internal_server_error'
  /context/{context_id}/restrictions/{restriction_id}:
    parameters:
      - $ref: '#/components/parameters/context_id'
      - $ref: '#/components/parameters/restriction_id'
    delete:
      tags:
        - Context
      summary: 🧪 Delete context restriction
      operationId: Context_deleteRestriction
      description: '[__EXPERIMENTAL__] Deletes a project restriction on a context.'
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restriction_deleted'
              examples:
                successful_delete:
                  summary: Successful deletion of restriction
                  value:
                    message: Context restriction deleted.
        '400':
          $ref: '#/components/responses/400_invalid_restriction_id'
        '401':
          $ref: '#/components/responses/401_invalid_token'
        '404':
          $ref: '#/components/responses/404_entity_not_found'
        '429':
          $ref: '#/components/responses/429_rate_limit_exceeded'
        '500':
          $ref: '#/components/responses/500_internal_server_error'
  /project/{provider}/{organization}/{project}:
    parameters:
      - $ref: '#/components/parameters/provider'
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
    post:
      tags:
        - Project
      summary: 🧪 Create a project
      operationId: Project_createProjectDefaultSettings
      description: >-
        [__EXPERIMENTAL__]  Creates a new CircleCI project, and returns a list
        of the default advanced settings. Can only be called on a repo with a
        main branch and an existing config.yml file. Not yet available to
        projects that use GitLab or GitHub App.
      responses:
        '201':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_settings'
        '400':
          $ref: '#/components/responses/400_unexpected_request_body'
        '401':
          $ref: '#/components/responses/401_invalid_token'
        '403':
          $ref: '#/components/responses/403_permission_denied'
        '404':
          description: Either a branch or a project were not found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ProjectCreateProjectDefaultSettings404Response
              examples:
                branch_not_found:
                  summary: Branch not found, unable to trigger pipeline.
                  value:
                    message: Branch not found.
                project_not_found:
                  summary: Project not found, e.g. GitHub repo.
                  value:
                    message: Project not found.
        '405':
          $ref: '#/components/responses/405_cannot_create_standalone_project'
        '429':
          $ref: '#/components/responses/429_rate_limit_exceeded'
        '500':
          $ref: '#/components/responses/500_internal_server_error'
  /project/{provider}/{organization}/{project}/settings:
    parameters:
      - $ref: '#/components/parameters/provider'
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
    get:
      tags:
        - Project
      summary: 🧪 Get project settings
      operationId: Project_getSettings
      description: >-
        [__EXPERIMENTAL__] Returns a list of the advanced settings for a
        CircleCI project, whether enabled (true) or not (false).
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_settings'
        '401':
          $ref: '#/components/responses/401_invalid_token'
        '403':
          $ref: '#/components/responses/403_permission_denied'
        '404':
          $ref: '#/components/responses/404_project_not_found'
        '429':
          $ref: '#/components/responses/429_rate_limit_exceeded'
        '500':
          $ref: '#/components/responses/500_internal_server_error'
    patch:
      tags:
        - Project
      summary: 🧪 Update project settings
      operationId: Project_updateSettings
      description: >-
        [__EXPERIMENTAL__] Updates one or more of the advanced settings for a
        CircleCI project.
      requestBody:
        description: >-
          The setting(s) to update, including one or more fields in the JSON
          object. Note that `oss: true` will only be set on projects whose
          underlying repositories are actually open source.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_settings'
            example:
              advanced:
                autocancel_builds: false
                build_prs_only: true
                pr_only_branch_overrides:
                  - main
      responses:
        '200':
          description: >-
            Successful response. Always includes the full advanced settings
            object. Returned even when the provided updates match the existing
            settings, but can also be returned when `oss: true` fails to set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project_settings'
        '400':
          description: Request is malformed, e.g. with improperly encoded JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdateSettingsResponse'
              examples:
                invalid_json:
                  summary: Invalid JSON body
                  value:
                    message: Invalid JSON body.
                too_many_branch_overrides:
                  summary: More than 100 branches sent for `pr_only_branch_overrides`
                  value:
                    message: >-
                      Field 'pr_only_branch_overrides' only supports up to 100
                      branches.
                no_json:
                  summary: Empty JSON request body
                  value:
                    message: No JSON fields found.
                unexpected_field:
                  summary: Incorrect root field name
                  value:
                    message: Unexpected JSON field 'incorrect'
                unknown_setting:
                  summary: Incorrect setting name
                  value:
                    message: Unknown advanced setting 'incorrect'.
                incorrect_type:
                  summary: Incorrect setting type
                  value:
                    message: Setting 'autocancel_builds' must be boolean.
                oss:
                  summary: Incorrect OSS value for project
                  value:
                    message: Feature flag 'oss' is not settable for this project.
        '401':
          $ref: '#/components/responses/401_invalid_token'
        '403':
          $ref: '#/components/responses/403_permission_denied'
        '404':
          $ref: '#/components/responses/404_project_not_found'
        '429':
          $ref: '#/components/responses/429_rate_limit_exceeded'
        '500':
          $ref: '#/components/responses/500_internal_server_error'
components:
  parameters:
    Claims:
      description: >-
        comma separated list of claims to delete. Valid values are "audience"
        and "ttl".
      in: query
      name: claims
      required: true
      schema:
        type: string
    OrgID:
      in: path
      name: orgID
      required: true
      schema:
        format: uuid
        type: string
    ProjectID:
      in: path
      name: projectID
      required: true
      schema:
        format: uuid
        type: string
    Context:
      in: path
      name: context
      required: true
      schema:
        type: string
    DecisionID:
      in: path
      name: decisionID
      required: true
      schema:
        type: string
    OwnerID:
      in: path
      name: ownerID
      required: true
      schema:
        type: string
    context_id:
      description: An opaque identifier of a context.
      name: context_id
      example: be8bb2e3-c3d6-4098-89f4-572ff976ba9a
      in: path
      required: true
      schema:
        type: string
    restriction_id:
      description: An opaque identifier of a context restriction.
      name: restriction_id
      example: 1c23d2cb-07b1-4a28-8af3-e369732050ed
      in: path
      required: true
      schema:
        type: string
    provider:
      description: >-
        The `provider` segment of a project or org slug, the first of the three.
        This may be a VCS. For projects that use GitLab or GitHub App, use
        `circleci`.
      name: provider
      example: gh
      in: path
      required: true
      schema:
        type: string
    organization:
      description: >-
        The `organization` segment of a project or org slug, the second of the
        three. For GitHub OAuth or Bitbucket projects, this is the organization
        name. For projects that use GitLab or GitHub App, use the organization
        ID (found in Organization Settings).
      name: organization
      example: CircleCI-Public
      in: path
      required: true
      schema:
        type: string
    project:
      description: >-
        The `project` segment of a project slug, the third of the three. For
        GitHub OAuth or Bitbucket projects, this is the repository name. For
        projects that use GitLab or GitHub App, use the project ID (found in
        Project Settings).
      name: project
      example: api-preview-docs
      in: path
      required: true
      schema:
        type: string
    org_id:
      description: An opaque identifier of an organization.
      name: org_id
      example: b9291e0d-a11e-41fb-8517-c545388b5953
      in: path
      required: true
      schema:
        type: string
    user_id:
      description: An opaque identifier of a user.
      name: user_id
      example: a68942a8-c217-4d92-96e5-3b47f9a2f0d9
      in: path
      required: true
      schema:
        type: string
    limit:
      description: The number of results per page.
      name: limit
      in: query
      schema:
        type: integer
    next_page_token:
      description: Specify what page of results to fetch.
      name: next_page_token
      in: query
      schema:
        type: string
    group_id:
      description: An opaque identifier of a group.
      name: group_id
      example: 39f660db-f49b-417e-ad79-2769ba29faf7
      in: path
      required: true
      schema:
        type: string
    project_id:
      description: An opaque identifier of a project.
      name: project_id
      example: 39723015-b399-4601-9ff6-bd1bfbed8fa8
      in: path
      required: true
      schema:
        type: string
    usage_export_job_id:
      description: An opaque identifier of a usage export job.
      name: usage_export_job_id
      example: e8235eed-f121-4ae3-9c72-2719d6572818
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    BadRequest:
      description: |
        The request is malformed (e.g, a given path parameter is invalid)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OidcTokenManagementDeleteOrgClaimsResponse'
    Forbidden:
      description: |
        The user is forbidden from making this request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OidcTokenManagementDeleteOrgClaims403Response'
    InternalServerError:
      description: Something unexpected happened on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OidcTokenManagementDeleteOrgClaims500Response'
    Unauthenticated:
      description: |
        The request is unauthenticated
      content:
        application/json:
          schema:
            properties:
              error:
                example: unauthenticated
                type: string
            required:
              - error
            type: object
    Unauthorized:
      description: |
        The request is unauthorized
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/PolicyManagementGetDecisionAuditLogs401Response
    UnexpectedServerError:
      description: Something unexpected happened on the server.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/PolicyManagementGetDecisionAuditLogs500Response
    400_invalid_context_id:
      description: Context ID provided is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextGetRestrictionsResponse'
    401_invalid_token:
      description: Credentials provided are invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextGetRestrictions401Response'
          examples:
            invalid_token:
              summary: Token is invalid.
              value:
                message: Invalid token provided.
            old_token:
              summary: Token was generated before 2023-06-23.
              value:
                message: >-
                  New format tokens are needed to authenticate this API
                  endpoint. Create a new API token for access.
            query_auth:
              summary: Authentication attempted via query parameters.
              value:
                message: >-
                  Support for query parameter authentication has been deprecated
                  to improve security. Please use a supported authentication
                  method such as header-based, or basic authentication.
    404_entity_not_found:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextGetRestrictions404Response'
          examples:
            context_not_found:
              summary: Context not found.
              value:
                message: Context not found.
            org_not_found:
              summary: Organization not found.
              value:
                message: Organization does not exist.
            user_not_found:
              summary: User not found.
              value:
                message: User does not exist.
            project_not_found:
              summary: Project not found.
              value:
                message: Project does not exist.
            group_not_found:
              summary: Group not found.
              value:
                message: Group does not exist.
    429_rate_limit_exceeded:
      description: API rate limits exceeded.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextGetRestrictions429Response'
    500_internal_server_error:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextGetRestrictions500Response'
    400_invalid_restriction_id:
      description: Context restriction ID provided is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextDeleteRestrictionResponse'
    400_unexpected_request_body:
      description: Unexpected request body provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectCreateProjectDefaultSettingsResponse'
    403_permission_denied:
      description: None or insufficient credentials provided.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/ProjectCreateProjectDefaultSettings403Response
    405_cannot_create_standalone_project:
      description: >-
        Create projects using the API is currently supported for classic Github
        OAuth and Bitbucket projects only.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/ProjectCreateProjectDefaultSettings405Response
    404_project_not_found:
      description: >-
        Insufficient credentials for a private project, OR the organization,
        project, or repository does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectGetSettingsResponse'
    409_group_conflict:
      description: |
        A conflict has occurred while attempting to create the resource.
      content:
        application/json:
          schema:
            additionalProperties: false
            properties:
              message:
                type: string
          examples:
            max_groups:
              summary: Max number of groups reached
              value:
                message: >-
                  Failed to create group, reached max number of groups for this
                  organization.
            name_already_taken:
              summary: Group name already taken
              value:
                message: Failed to create group, group <group-name> already exists.
  securitySchemes:
    api_key_header:
      description: >-
        Project API tokens are not supported for API v2. Use a personal API
        token.
      type: apiKey
      name: Circle-Token
      in: header
    basic_auth:
      description: >-
        HTTP basic authentication. The username should be set as the
        circle-token value, and the password should be left blank. Note that
        project tokens are currently not supported on API v2.
      type: http
      scheme: basic
    api_key_query:
      description: >-
        DEPRECATED - we will remove this option in the future. Project API
        tokens are not supported for API v2. Use a personal API token.
      type: apiKey
      name: circle-token
      in: query
  schemas:
    ClaimResponse:
      properties:
        audience:
          items:
            type: string
          type: array
        audience_updated_at:
          format: date-time
          type: string
        org_id:
          format: uuid
          type: string
        project_id:
          format: uuid
          type: string
        ttl:
          $ref: '#/components/schemas/JSONDuration'
        ttl_updated_at:
          format: date-time
          type: string
      required:
        - org_id
      type: object
    JSONDuration:
      pattern: ^([0-9]+(ms|s|m|h|d|w)){1,7}$
      type: string
    PatchClaimsRequest:
      properties:
        audience:
          items:
            type: string
          type: array
        ttl:
          $ref: '#/components/schemas/JSONDuration'
      type: object
    BundleDiff:
      properties:
        created:
          items:
            description: policy names
            type: string
          type: array
        deleted:
          items:
            description: policy names
            type: string
          type: array
        modified:
          items:
            description: policy names
            type: string
          type: array
      type: object
    BundlePayload:
      properties:
        policies:
          additionalProperties:
            description: policy content
            type: string
          type: object
      type: object
    Decision:
      properties:
        enabled_rules:
          items:
            type: string
          type: array
        hard_failures:
          items:
            $ref: '#/components/schemas/Violation'
          type: array
        reason:
          type: string
        soft_failures:
          items:
            $ref: '#/components/schemas/Violation'
          type: array
        status:
          type: string
      required:
        - status
      type: object
    DecisionLog:
      properties:
        created_at:
          format: date-time
          type: string
        decision:
          $ref: '#/components/schemas/Decision'
        id:
          format: uuid
          type: string
        metadata:
          properties:
            build_number:
              type: integer
            project_id:
              format: uuid
              type: string
            ssh_rerun:
              type: boolean
            vcs:
              properties:
                branch:
                  type: string
                origin_repository_url:
                  type: string
                release_tag:
                  type: string
                target_repository_url:
                  type: string
              type: object
          type: object
        policies:
          description: policy-name-to-hash-map
          additionalProperties:
            maxLength: 128
            minLength: 128
            type: string
          example:
            policy_name1: >-
              1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75
            policy_name2: >-
              5267768822ee624d48fce15ec5ca79cbd602cb7f4c2157a516556991f22ef8c7b5ef7b18d1ff41c59370efb0858651d44a936c11b7b144c48fe04df3c6a3e8da
          type: object
        time_taken_ms:
          type: integer
      type: object
    DecisionSettings:
      properties:
        enabled:
          type: boolean
      type: object
    Policy:
      properties:
        content:
          type: string
        created_at:
          format: date-time
          type: string
        created_by:
          type: string
        name:
          type: string
      type: object
    PolicyBundle:
      additionalProperties:
        items:
          $ref: '#/components/schemas/Policy'
      type: object
    Violation:
      properties:
        reason:
          type: string
        rule:
          type: string
      required:
        - rule
        - reason
      type: object
    context_project_restrictions_list:
      type: object
      properties:
        items:
          type: array
          items:
            additionalProperties: false
            properties:
              context_id:
                description: UUID of the context
                type: string
                format: uuid
              id:
                description: UUID of the restriction
                type: string
                format: uuid
              project_id:
                description: >
                  Deprecated - For "project" restrictions read the project ID
                  from

                  "restriction_value" instead.


                  UUID of the project used in a project restriction.
                type: string
                format: uuid
                deprecated: true
              name:
                description: |
                  Contains a human-readable reference for the restriction. For
                  "project" restrictions this is the name of the project.

                  May be null.
                type: string
              restriction_type:
                description: Type of the restriction
                type: string
                enum:
                  - project
                  - expression
              restriction_value:
                description: Value used to evaluate the restriction
                type: string
        next_page_token:
          description: Token that can be used to retrieve next page of results
          type: string
          nullable: true
    project_settings:
      type: object
      properties:
        advanced:
          type: object
          properties:
            autocancel_builds:
              description: >-
                Except for the default branch, cancel running pipelines on a
                branch when a new pipeline starts on that branch.
              type: boolean
            build_fork_prs:
              description: Run builds for pull requests from forks.
              type: boolean
            build_prs_only:
              description: >-
                Once enabled, we will only build branches that have associated
                pull requests open.
              type: boolean
            disable_ssh:
              description: >-
                When set to true, job re-runs with SSH debugging access will be
                disabled for the project.
              type: boolean
            forks_receive_secret_env_vars:
              description: >-
                Run builds for forked pull requests with this project's
                configuration, environment variables, and secrets.
              type: boolean
            oss:
              description: >-
                Free and Open Source. Enabling this grants additional credits,
                and lets others see your builds, both through the web UI and the
                API.
              type: boolean
            set_github_status:
              description: >-
                Report the status of every pushed commit to GitHub's status API.
                Updates reported per job.
              type: boolean
            setup_workflows:
              description: >-
                Enabling allows you to conditionally trigger configurations
                outside of the primary `.circleci` parent directory.
              type: boolean
            write_settings_requires_admin:
              description: >-
                Whether updating these settings requires a user to be an
                organization administrator. When disabled, updating settings can
                be done by any member.
              type: boolean
            pr_only_branch_overrides:
              description: >-
                This field is used in conjunction with the `build_prs_only`, it
                allows you to specify a list of branches that will always triger
                a build. The value passed will overwrite the existing value.
              type: array
              items:
                type: string
    restriction_created:
      additionalProperties: false
      properties:
        id:
          description: UUID of the project restriction
          type: string
          format: uuid
        project_id:
          description: |
            Deprecated - For "project" restrictions read the project ID from
            "restriction_value" instead.

            UUID of the project used in a project restriction.
          type: string
          format: uuid
        name:
          description: |
            Contains a human-readable reference for the restriction. For
            "project" restrictions this is the name of the project.

            May be null.
          type: string
        restriction_type:
          description: Type of the restriction
          type: string
          enum:
            - project
            - expression
        restriction_value:
          description: Value used to evaluate the restriction
          type: string
    restriction_deleted:
      additionalProperties: false
      properties:
        message:
          description: Response message
          type: string
    ContextCreateNewContextRequest:
      type: object
      properties:
        name:
          description: The user defined name of the context.
          type: string
        owner:
          oneOf:
            - type: object
              properties:
                id:
                  description: >-
                    The unique ID of the owner of the context. Specify either
                    this or slug.
                  type: string
                  format: uuid
                type:
                  description: >-
                    The type of the owner. Defaults to "organization". Accounts
                    are only used as context owners in server.
                  enum:
                    - account
                    - organization
                  type: string
                  example: organization
              required:
                - id
            - type: object
              properties:
                slug:
                  description: >-
                    A string that represents an organization. Specify either
                    this or id. Cannot be used for accounts.
                  type: string
                type:
                  description: >-
                    The type of owner. Defaults to "organization". Accounts are
                    only used as context owners in server and must be specified
                    by an id instead of a slug.
                  enum:
                    - organization
                  type: string
              required:
                - slug
      required:
        - name
        - owner
    ContextUpdateEnvironmentVariableRequest:
      type: object
      properties:
        value:
          description: The value of the environment variable
          type: string
          example: some-secret-value
      required:
        - value
    PipelineContinueExecutionRequest:
      type: object
      properties:
        parameters:
          description: An object containing pipeline parameters and their values.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
        continuation-key:
          title: PipelineContinuationKey
          description: A pipeline continuation key.
          type: string
        configuration:
          description: A configuration string for the pipeline.
          type: string
      required:
        - continuation-key
        - configuration
    ProjectCreateCheckoutKeyRequest:
      title: CheckoutKeyInput
      type: object
      properties:
        type:
          title: CheckoutKeyInputType
          description: >-
            The type of checkout key to create. This may be either `deploy-key`
            or `user-key`.
          enum:
            - user-key
            - deploy-key
          type: string
          example: deploy-key
      required:
        - type
    ProjectCreateEnvVarRequest:
      title: EnvironmentVariable
      description: An environment variable request requires a name and a value
      type: object
      properties:
        name:
          description: The name of the environment variable.
          type: string
          example: foo
        value:
          description: The value of the environment variable.
          type: string
          example: xxxx1234
      required:
        - name
        - value
    PipelineTriggerNewPipelineRequest:
      title: TriggerPipelineParameters
      description: The information you can supply when triggering a pipeline.
      type: object
      properties:
        parameters:
          description: An object containing pipeline parameters and their values.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
        branch:
          description: >-
            The branch where the pipeline ran. The HEAD commit on this branch
            was used for the pipeline. Note that `branch` and `tag` are mutually
            exclusive. To trigger a pipeline for a PR by number use
            `pull/<number>/head` for the PR ref or `pull/<number>/merge` for the
            merge ref (GitHub only).
          type: string
          example: feature/design-new-api
        tag:
          description: >-
            The tag used by the pipeline. The commit that this tag points to was
            used for the pipeline. Note that `branch` and `tag` are mutually
            exclusive.
          type: string
          example: v3.1.4159
      x-nullable: true
    ScheduleCreateNewScheduleRequest:
      title: CreateScheduleParameters
      description: The parameters for a create schedule request
      type: object
      properties:
        description:
          description: Description of the schedule.
          type: string
          x-nullable: true
        parameters:
          description: >-
            Pipeline parameters represented as key-value pairs. Must contain
            branch or tag.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
            branch: feature/design-new-api
        name:
          description: Name of the schedule.
          type: string
        timetable:
          description: Timetable that specifies when a schedule triggers.
          anyOf:
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-week
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-month
        attribution-actor:
          description: The attribution-actor of the scheduled pipeline.
          enum:
            - current
            - system
          type: string
          example: current
      required:
        - name
        - timetable
        - attribution-actor
        - parameters
    ScheduleUpdateScheduleRequest:
      title: UpdateScheduleParameters
      description: The parameters for an update schedule request
      type: object
      properties:
        description:
          description: Description of the schedule.
          type: string
          x-nullable: true
        parameters:
          description: >-
            Pipeline parameters represented as key-value pairs. Must contain
            branch or tag.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
            branch: feature/design-new-api
        name:
          description: Name of the schedule.
          type: string
        timetable:
          description: Timetable that specifies when a schedule triggers.
          type: object
          properties:
            per-hour:
              description: >-
                Number of times a schedule triggers per hour, value must be
                between 1 and 60
              type: integer
              format: integer
            hours-of-day:
              description: Hours in a day in which the schedule triggers.
              type: array
              items:
                description: Hour in a day in UTC, value must be between 0 and 24
                type: integer
                format: integer
            days-of-week:
              description: Days in a week in which the schedule triggers.
              type: array
              items:
                description: Day in a week, in three letters format
                enum:
                  - TUE
                  - SAT
                  - SUN
                  - MON
                  - THU
                  - WED
                  - FRI
                type: string
            days-of-month:
              description: >-
                Days in a month in which the schedule triggers. This is mutually
                exclusive with days in a week.
              type: array
              items:
                description: Day in a month, between 1 and 31.
                type: integer
                format: integer
            months:
              description: Months in which the schedule triggers.
              type: array
              items:
                description: Month, in three letters format.
                enum:
                  - MAR
                  - NOV
                  - DEC
                  - JUN
                  - MAY
                  - OCT
                  - FEB
                  - APR
                  - SEP
                  - AUG
                  - JAN
                  - JUL
                type: string
        attribution-actor:
          description: The attribution-actor of the scheduled pipeline.
          enum:
            - current
            - system
          type: string
          example: current
    WebhookCreateOutboundWebhookRequest:
      description: The parameters for a create webhook request
      type: object
      properties:
        name:
          description: Name of the webhook
          type: string
        events:
          description: Events that will trigger the webhook
          type: array
          items:
            enum:
              - workflow-completed
              - job-completed
            type: string
        url:
          description: >-
            URL to deliver the webhook to. Note: protocol must be included as
            well (only https is supported)
          type: string
        verify-tls:
          description: >-
            Whether to enforce TLS certificate verification when delivering the
            webhook
          type: boolean
        signing-secret:
          description: >-
            Secret used to build an HMAC hash of the payload and passed as a
            header in the webhook request
          type: string
        scope:
          description: The scope in which the relevant events that will trigger webhooks
          type: object
          properties:
            id:
              description: >-
                ID of the scope being used (at the moment, only project ID is
                supported)
              type: string
              format: uuid
            type:
              description: Type of the scope being used
              enum:
                - project
              type: string
          required:
            - id
            - type
      required:
        - name
        - events
        - url
        - verify-tls
        - signing-secret
        - scope
    WebhookUpdateOutboundWebhookRequest:
      description: The parameters for an update webhook request
      type: object
      properties:
        name:
          description: Name of the webhook
          type: string
        events:
          description: Events that will trigger the webhook
          type: array
          items:
            enum:
              - workflow-completed
              - job-completed
            type: string
        url:
          description: >-
            URL to deliver the webhook to. Note: protocol must be included as
            well (only https is supported)
          type: string
        signing-secret:
          description: >-
            Secret used to build an HMAC hash of the payload and passed as a
            header in the webhook request
          type: string
        verify-tls:
          description: >-
            Whether to enforce TLS certificate verification when delivering the
            webhook
          type: boolean
    WorkflowRerunWorkflowRequest:
      title: RerunWorkflowParameters
      description: The information you can supply when rerunning a workflow.
      type: object
      properties:
        enable_ssh:
          description: >-
            Whether to enable SSH access for the triggering user on the
            newly-rerun job. Requires the jobs parameter to be used and so is
            mutually exclusive with the from_failed parameter.
          type: boolean
          example: false
        from_failed:
          description: >-
            Whether to rerun the workflow from the failed job. Mutually
            exclusive with the jobs parameter.
          type: boolean
          example: false
        jobs:
          description: A list of job IDs to rerun.
          type: array
          items:
            type: string
            format: uuid
          example:
            - c65b68ef-e73b-4bf2-be9a-7a322a9df150
            - 5e957edd-5e8c-4985-9178-5d0d69561822
        sparse_tree:
          description: >-
            Completes rerun using sparse trees logic, an optimization for
            workflows that have disconnected subgraphs. Requires jobs parameter
            and so is mutually exclusive with the from_failed parameter.
          type: boolean
          example: false
      x-nullable: true
    PolicyManagementEvaluateInputDataRequest:
      properties:
        input:
          type: string
        metadata:
          type: object
      required:
        - input
      type: object
    ContextCreateRestrictionRequest:
      type: object
      properties:
        project_id:
          description: |
            Deprecated - Use "restriction_type" and "restriction_value"
            instead.

            The project ID to use for a project restriction. This is
            mutually exclusive with restriction_type and restriction_value
            and implies restriction_type is "project".
          type: string
          format: uuid
          deprecated: true
        restriction_type:
          type: string
        restriction_value:
          type: string
    ContextListOwnerContextsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            title: Context
            type: object
            properties:
              id:
                description: The unique ID of the context.
                type: string
                format: uuid
              name:
                description: The user defined name of the context.
                type: string
              created_at:
                description: The date and time the context was created.
                type: string
                format: date-time
                example: '2015-09-21T17:29:21.042Z'
            required:
              - id
              - name
              - created_at
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    ContextListOwnerContextsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ContextCreateNewContextResponse:
      title: Context
      type: object
      properties:
        id:
          description: The unique ID of the context.
          type: string
          format: uuid
        name:
          description: The user defined name of the context.
          type: string
        created_at:
          description: The date and time the context was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
      required:
        - id
        - name
        - created_at
    ContextCreateNewContextdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ContextRemoveContextResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    ContextRemoveContextdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ContextGetInformationResponse:
      title: Context
      type: object
      properties:
        id:
          description: The unique ID of the context.
          type: string
          format: uuid
        name:
          description: The user defined name of the context.
          type: string
        created_at:
          description: The date and time the context was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
      required:
        - id
        - name
        - created_at
    ContextGetInformationdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ContextListEnvironmentVariablesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              variable:
                description: The name of the environment variable
                type: string
                example: POSTGRES_USER
              created_at:
                description: The date and time the environment variable was created.
                type: string
                format: date-time
                example: '2015-09-21T17:29:21.042Z'
              updated_at:
                description: The date and time the environment variable was updated
                type: string
                format: date-time
                example: '2015-09-21T17:29:21.042Z'
              context_id:
                description: ID of the context (UUID)
                type: string
                format: uuid
            required:
              - variable
              - created_at
              - updated_at
              - context_id
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    ContextListEnvironmentVariablesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ContextRemoveEnvironmentVariableResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    ContextRemoveEnvironmentVariabledefaultResponse:
      type: object
      properties:
        message:
          type: string
    ContextUpdateEnvironmentVariableResponse:
      anyOf:
        - type: object
          properties:
            variable:
              description: The name of the environment variable
              type: string
              example: POSTGRES_USER
            created_at:
              description: The date and time the environment variable was created.
              type: string
              format: date-time
              example: '2015-09-21T17:29:21.042Z'
            updated_at:
              description: The date and time the environment variable was updated
              type: string
              format: date-time
              example: '2015-09-21T17:29:21.042Z'
            context_id:
              description: ID of the context (UUID)
              type: string
              format: uuid
          required:
            - variable
            - created_at
            - updated_at
            - context_id
        - title: MessageResponse
          description: message response
          type: object
          properties:
            message:
              description: A human-readable message
              type: string
          required:
            - message
    ContextUpdateEnvironmentVariabledefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetProjectSummaryMetricsResponse:
      type: object
      properties:
        org_id:
          description: The unique ID of the organization
        project_id:
          description: The unique ID of the project
        project_data:
          description: Metrics and trends data aggregated for a given project.
          type: object
          properties:
            metrics:
              description: >-
                Metrics aggregated across all workflows and branches for a
                project.
              type: object
              properties:
                total_runs:
                  description: >-
                    The total number of runs, including runs that are still
                    on-hold or running.
                  type: integer
                  format: int64
                  minimum: 0
                total_duration_secs:
                  description: Total duration, in seconds.
                  type: integer
                  format: int64
                  minimum: 0
                total_credits_used:
                  description: >-
                    The total credits consumed over the current timeseries
                    interval.
                  type: integer
                  format: int64
                  minimum: 0
                success_rate:
                  type: number
                  format: float
                throughput:
                  description: The average number of runs per day.
                  type: number
                  format: float
              required:
                - total_runs
                - total_duration_secs
                - total_credits_used
                - success_rate
                - throughput
            trends:
              description: >-
                Metric trends aggregated across all workflows and branches for a
                project.
              type: object
              properties:
                total_runs:
                  description: The trend value for total number of runs.
                  type: number
                  format: float
                total_duration_secs:
                  description: Trend value for total duration.
                  type: number
                  format: float
                total_credits_used:
                  description: The trend value for total credits consumed.
                  type: number
                  format: float
                success_rate:
                  description: The trend value for the success rate.
                  type: number
                  format: float
                throughput:
                  description: Trend value for the average number of runs per day.
                  type: number
                  format: float
              required:
                - total_runs
                - total_duration_secs
                - total_credits_used
                - success_rate
                - throughput
          required:
            - metrics
            - trends
        project_workflow_data:
          description: A list of metrics and trends data for workflows for a given project.
          type: array
          items:
            type: object
            properties:
              workflow_name:
                description: The name of the workflow.
                type: string
                example: build-and-test
              metrics:
                description: Metrics aggregated across a workflow or branchfor a project.
                type: object
                properties:
                  total_credits_used:
                    description: >-
                      The total credits consumed over the current timeseries
                      interval.
                    type: integer
                    format: int64
                    minimum: 0
                  p95_duration_secs:
                    description: >-
                      The 95th percentile duration among a group of workflow
                      runs.
                    type: number
                    format: float
                  total_runs:
                    description: >-
                      The total number of runs, including runs that are still
                      on-hold or running.
                    type: integer
                    format: int64
                    minimum: 0
                  success_rate:
                    type: number
                    format: float
                required:
                  - total_credits_used
                  - p95_duration_secs
                  - total_runs
                  - success_rate
              trends:
                description: Trends aggregated across a workflow or branch for a project.
                type: object
                properties:
                  total_credits_used:
                    description: The trend value for total credits consumed.
                    type: number
                    format: float
                  p95_duration_secs:
                    description: >-
                      The 95th percentile duration among a group of workflow
                      runs.
                    type: number
                    format: float
                  total_runs:
                    description: The trend value for total number of runs.
                    type: number
                    format: float
                  success_rate:
                    description: The trend value for the success rate.
                    type: number
                    format: float
                required:
                  - total_credits_used
                  - p95_duration_secs
                  - total_runs
                  - success_rate
            required:
              - workflow_name
              - metrics
              - trends
        project_workflow_branch_data:
          description: A list of metrics and trends data for branches for a given project.
          type: array
          items:
            type: object
            properties:
              workflow_name:
                description: The name of the workflow.
                type: string
                example: build-and-test
              branch:
                description: The VCS branch of a workflow's trigger.
                type: string
                example: main
              metrics:
                description: Metrics aggregated across a workflow or branchfor a project.
                type: object
                properties:
                  total_credits_used:
                    description: >-
                      The total credits consumed over the current timeseries
                      interval.
                    type: integer
                    format: int64
                    minimum: 0
                  p95_duration_secs:
                    description: >-
                      The 95th percentile duration among a group of workflow
                      runs.
                    type: number
                    format: float
                  total_runs:
                    description: >-
                      The total number of runs, including runs that are still
                      on-hold or running.
                    type: integer
                    format: int64
                    minimum: 0
                  success_rate:
                    type: number
                    format: float
                required:
                  - total_credits_used
                  - p95_duration_secs
                  - total_runs
                  - success_rate
              trends:
                description: Trends aggregated across a workflow or branch for a project.
                type: object
                properties:
                  total_credits_used:
                    description: The trend value for total credits consumed.
                    type: number
                    format: float
                  p95_duration_secs:
                    description: >-
                      The 95th percentile duration among a group of workflow
                      runs.
                    type: number
                    format: float
                  total_runs:
                    description: The trend value for total number of runs.
                    type: number
                    format: float
                  success_rate:
                    description: The trend value for the success rate.
                    type: number
                    format: float
                required:
                  - total_credits_used
                  - p95_duration_secs
                  - total_runs
                  - success_rate
            required:
              - workflow_name
              - branch
              - metrics
              - trends
        all_branches:
          description: A list of all the branches for a given project.
          type: array
          items:
            description: The VCS branch of a workflow's trigger.
            type: string
            example: main
        all_workflows:
          description: A list of all the workflows for a given project.
          type: array
          items:
            description: The name of the workflow.
            type: string
            example: build-and-test
    InsightsGetProjectSummaryMetricsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetJobTimeseriesDataResponse:
      description: Project level timeseries metrics response
      type: object
      properties:
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
        items:
          description: Aggregate metrics for a workflow at a time granularity
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the workflow.
                type: string
                example: build-and-test
              min_started_at:
                description: >-
                  The start time for the earliest execution included in the
                  metrics.
                type: string
                format: date-time
              max_ended_at:
                description: The end time of the last execution included in the metrics.
                type: string
                format: date-time
              timestamp:
                description: The start of the interval for timeseries metrics.
                type: string
                format: date-time
              metrics:
                description: Metrics relating to a workflow's runs.
                type: object
                properties:
                  total_runs:
                    description: >-
                      The total number of runs, including runs that are still
                      on-hold or running.
                    type: integer
                    format: int64
                    minimum: 0
                  failed_runs:
                    description: The number of failed runs.
                    type: integer
                    format: int64
                    minimum: 0
                  successful_runs:
                    description: The number of successful runs.
                    type: integer
                    format: int64
                    minimum: 0
                  throughput:
                    description: The average number of runs per day.
                    type: number
                    format: float
                  median_credits_used:
                    description: >-
                      The median credits consumed over the current timeseries
                      interval.
                    type: integer
                    format: int64
                    minimum: 0
                  total_credits_used:
                    description: >-
                      The total credits consumed over the current timeseries
                      interval.
                    type: integer
                    format: int64
                    minimum: 0
                  duration_metrics:
                    description: Metrics relating to the duration of runs for a workflow.
                    type: object
                    properties:
                      min:
                        description: >-
                          The minimum duration, in seconds, among a group of
                          runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      median:
                        description: >-
                          The median duration, in seconds, among a group of
                          runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      max:
                        description: The max duration, in seconds, among a group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      p95:
                        description: >-
                          The 95th percentile duration, in seconds, among a
                          group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      total:
                        description: >-
                          The total duration, in seconds, added across a group
                          of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                    required:
                      - min
                      - median
                      - max
                      - p95
                      - total
                required:
                  - total_runs
                  - failed_runs
                  - successful_runs
                  - throughput
                  - median_credits_used
                  - total_credits_used
                  - duration_metrics
            required:
              - name
              - min_started_at
              - max_ended_at
              - timestamp
              - metrics
      required:
        - next_page_token
        - items
    InsightsGetJobTimeseriesDatadefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetSummaryMetricsWithTrendsResponse:
      description: Summary metrics with trends for the entire org, and for each project.
      type: object
      properties:
        org_data:
          description: Aggregated metrics for an org, with trends.
          type: object
          properties:
            metrics:
              description: Metrics for a single org metrics.
              type: object
              properties:
                total_runs:
                  description: >-
                    The total number of runs, including runs that are still
                    on-hold or running.
                  type: integer
                  format: int64
                  minimum: 0
                total_duration_secs:
                  description: Total duration, in seconds.
                  type: integer
                  format: int64
                  minimum: 0
                total_credits_used:
                  description: >-
                    The total credits consumed over the current timeseries
                    interval.
                  type: integer
                  format: int64
                  minimum: 0
                success_rate:
                  type: number
                  format: float
                throughput:
                  description: The average number of runs per day.
                  type: number
                  format: float
              required:
                - total_runs
                - total_duration_secs
                - total_credits_used
                - success_rate
                - throughput
            trends:
              description: Trends for a single org.
              type: object
              properties:
                total_runs:
                  description: The trend value for total number of runs.
                  type: number
                  format: float
                total_duration_secs:
                  description: Trend value for total duration.
                  type: number
                  format: float
                total_credits_used:
                  description: The trend value for total credits consumed.
                  type: number
                  format: float
                success_rate:
                  description: The trend value for the success rate.
                  type: number
                  format: float
                throughput:
                  description: Trend value for the average number of runs per day.
                  type: number
                  format: float
              required:
                - total_runs
                - total_duration_secs
                - total_credits_used
                - success_rate
                - throughput
          required:
            - metrics
            - trends
        org_project_data:
          description: Metrics for a single project, across all branches
          type: array
          items:
            type: object
            properties:
              project_name:
                description: The name of the project.
                type: string
                example: api-preview-docs
              metrics:
                description: Metrics for a single project, across all branches.
                type: object
                properties:
                  total_credits_used:
                    description: >-
                      The total credits consumed over the current timeseries
                      interval.
                    type: integer
                    format: int64
                    minimum: 0
                  total_duration_secs:
                    description: Total duration, in seconds.
                    type: integer
                    format: int64
                    minimum: 0
                  total_runs:
                    description: >-
                      The total number of runs, including runs that are still
                      on-hold or running.
                    type: integer
                    format: int64
                    minimum: 0
                  success_rate:
                    type: number
                    format: float
                required:
                  - total_credits_used
                  - total_duration_secs
                  - total_runs
                  - success_rate
              trends:
                description: Trends for a single project, across all branches.
                type: object
                properties:
                  total_credits_used:
                    description: The trend value for total credits consumed.
                    type: number
                    format: float
                  total_duration_secs:
                    description: Trend value for total duration.
                    type: number
                    format: float
                  total_runs:
                    description: The trend value for total number of runs.
                    type: number
                    format: float
                  success_rate:
                    description: The trend value for the success rate.
                    type: number
                    format: float
                required:
                  - total_credits_used
                  - total_duration_secs
                  - total_runs
                  - success_rate
            required:
              - project_name
              - metrics
              - trends
        all_projects:
          description: A list of all the project names in the organization.
          type: array
          items:
            type: string
          x-nullable: true
      required:
        - org_data
        - org_project_data
        - all_projects
    InsightsGetSummaryMetricsWithTrendsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsListProjectBranchesResponse:
      description: Project branches response.
      type: object
      properties:
        org_id:
          description: The unique ID of the organization
        project_id:
          description: The unique ID of the project
        branches:
          description: A list of all the branches for a given project.
          type: array
          items:
            description: The VCS branch of a workflow's trigger.
            type: string
            example: main
      required:
        - org_id
        - project_id
        - branches
    InsightsListProjectBranchesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetFlakyTestsResponse:
      description: Flaky tests response
      type: object
      properties:
        flaky-tests:
          description: >-
            A list of all instances of flakes. Note that a test is no longer
            considered flaky after 2 weeks have passed without a flake. Each
            flake resets this timer.
          type: array
          items:
            type: object
            properties:
              time-wasted:
                allOf:
                  - type: integer
                    format: int64
                  - type: integer
                    format: int64
                    minimum: 0
              workflow-created-at:
                description: The date and time when workflow was created.
                type: string
              workflow-id:
                description: >-
                  The ID of the workflow associated with the provided test
                  counts
              classname:
                description: The class the test belongs to.
                type: string
                x-nullable: true
              pipeline-number:
                description: The number of the pipeline.
                allOf:
                  - type: integer
                    format: int64
                  - type: integer
                    format: int64
                    minimum: 0
              workflow-name:
                description: The name of the workflow.
                type: string
              test-name:
                description: The name of the test.
                type: string
              job-name:
                description: The name of the job.
                type: string
              job-number:
                description: The number of the job.
                allOf:
                  - type: integer
                    format: int64
                  - type: integer
                    format: int64
                    minimum: 0
              times-flaked:
                description: The number of times the test flaked.
                type: integer
                format: int64
                minimum: 0
              source:
                description: The source of the test.
                type: string
                x-nullable: true
              file:
                description: The file the test belongs to.
                type: string
                x-nullable: true
            required:
              - workflow-created-at
              - classname
              - job-number
              - times-flaked
              - source
              - pipeline-number
              - file
              - workflow-name
              - job-name
              - workflow-id
              - test-name
        total-flaky-tests:
          description: >-
            A count of unique tests that have failed. If your project has N
            tests that have flaked multiple times each, this will be equal to N.
          type: number
          format: double
          example: 5
      required:
        - flaky-tests
        - total-flaky-tests
    InsightsGetFlakyTestsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetProjectWorkflowMetricsResponse:
      description: Paginated workflow summary metrics.
      type: object
      properties:
        items:
          description: Workflow summary metrics.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the workflow.
                type: string
                example: build-and-test
              metrics:
                description: Metrics relating to a workflow's runs.
                type: object
                properties:
                  total_runs:
                    description: >-
                      The total number of runs, including runs that are still
                      on-hold or running.
                    type: integer
                    format: int64
                    minimum: 0
                  successful_runs:
                    description: The number of successful runs.
                    type: integer
                    format: int64
                    minimum: 0
                  mttr:
                    description: >-
                      The mean time to recovery (mean time between failures and
                      their next success) in seconds.
                    type: integer
                    format: int64
                    minimum: 0
                    x-nullable: true
                  total_credits_used:
                    description: >-
                      The total credits consumed by the workflow in the
                      aggregation window. Note that Insights is not a real time
                      financial reporting tool and should not be used for credit
                      reporting.
                    type: integer
                    format: int64
                    minimum: 0
                    x-nullable: true
                  failed_runs:
                    description: The number of failed runs.
                    type: integer
                    format: int64
                    minimum: 0
                  success_rate:
                    type: number
                    format: float
                  duration_metrics:
                    description: Metrics relating to the duration of runs for a workflow.
                    type: object
                    properties:
                      min:
                        description: >-
                          The minimum duration, in seconds, among a group of
                          runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      mean:
                        description: The mean duration, in seconds, among a group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      median:
                        description: >-
                          The median duration, in seconds, among a group of
                          runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      p95:
                        description: >-
                          The 95th percentile duration, in seconds, among a
                          group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      max:
                        description: The max duration, in seconds, among a group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      standard_deviation:
                        description: >-
                          The standard deviation, in seconds, among a group of
                          runs.
                        type: number
                        format: float
                        x-nullable: true
                    required:
                      - min
                      - mean
                      - median
                      - p95
                      - max
                      - standard_deviation
                  total_recoveries:
                    description: The number of recovered workflow executions per day.
                    type: integer
                    format: int64
                    minimum: 0
                    x-nullable: true
                  throughput:
                    description: The average number of runs per day.
                    type: number
                    format: float
                required:
                  - total_runs
                  - successful_runs
                  - mttr
                  - total_credits_used
                  - failed_runs
                  - success_rate
                  - duration_metrics
                  - total_recoveries
                  - throughput
              window_start:
                description: >-
                  The timestamp of the first build within the requested
                  reporting window.
                type: string
                format: date-time
              window_end:
                description: >-
                  The timestamp of the last build within the requested reporting
                  window.
                type: string
                format: date-time
              project_id:
                description: The unique ID of the project
            required:
              - name
              - metrics
              - window_start
              - window_end
              - project_id
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    InsightsGetProjectWorkflowMetricsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetRecentWorkflowRunsResponse:
      description: Paginated recent workflow runs.
      type: object
      properties:
        items:
          description: Recent workflow runs.
          type: array
          items:
            type: object
            properties:
              id:
                description: The unique ID of the workflow.
                type: string
                format: uuid
              branch:
                description: The VCS branch of a Workflow's trigger.
                type: string
                example: main
              duration:
                description: The duration in seconds of a run.
                type: integer
                format: int64
                minimum: 0
                x-nullable: true
              created_at:
                description: The date and time the workflow was created.
                type: string
                format: date-time
              stopped_at:
                description: The date and time the workflow stopped.
                type: string
                format: date-time
                x-nullable: true
              credits_used:
                description: >-
                  The number of credits used during execution. Note that
                  Insights is not a real time financial reporting tool and
                  should not be used for credit reporting.
                type: integer
                format: int64
                minimum: 0
              status:
                description: Workflow status.
                enum:
                  - success
                  - failed
                  - error
                  - canceled
                  - unauthorized
                type: string
                x-nullable: true
              is_approval:
                description: >-
                  Describes if the job is an approval job or not. Approval jobs
                  are intermediary jobs that are created to pause the workflow
                  until approved.
                type: boolean
                example: false
            required:
              - id
              - branch
              - duration
              - created_at
              - stopped_at
              - credits_used
              - status
              - is_approval
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    InsightsGetRecentWorkflowRunsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetProjectWorkflowJobMetricsResponse:
      description: Paginated workflow job summary metrics.
      type: object
      properties:
        items:
          description: Job summary metrics.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the job.
                type: string
              metrics:
                description: Metrics relating to a workflow job's runs.
                type: object
                properties:
                  total_runs:
                    description: >-
                      The total number of runs, including runs that are still
                      on-hold or running.
                    type: integer
                    format: int64
                    minimum: 0
                  failed_runs:
                    description: The number of failed runs.
                    type: integer
                    format: int64
                    minimum: 0
                  successful_runs:
                    description: The number of successful runs.
                    type: integer
                    format: int64
                    minimum: 0
                  duration_metrics:
                    description: >-
                      Metrics relating to the duration of runs for a workflow
                      job.
                    type: object
                    properties:
                      min:
                        description: >-
                          The minimum duration, in seconds, among a group of
                          runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      mean:
                        description: The mean duration, in seconds, among a group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      median:
                        description: >-
                          The median duration, in seconds, among a group of
                          runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      p95:
                        description: >-
                          The 95th percentile duration, in seconds, among a
                          group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      max:
                        description: The max duration, in seconds, among a group of runs.
                        type: integer
                        format: int64
                        minimum: 0
                        x-nullable: true
                      standard_deviation:
                        description: >-
                          The standard deviation, in seconds, among a group of
                          runs.
                        type: number
                        format: float
                        x-nullable: true
                    required:
                      - min
                      - mean
                      - median
                      - p95
                      - max
                      - standard_deviation
                  success_rate:
                    type: number
                    format: float
                  total_credits_used:
                    description: >-
                      The total credits consumed by the job in the aggregation
                      window. Note that Insights is not a real time financial
                      reporting tool and should not be used for credit
                      reporting.
                    type: integer
                    format: int64
                    minimum: 0
                  throughput:
                    description: The average number of runs per day.
                    type: number
                    format: float
                required:
                  - total_runs
                  - failed_runs
                  - successful_runs
                  - duration_metrics
                  - success_rate
                  - total_credits_used
                  - throughput
              window_start:
                description: >-
                  The timestamp of the first build within the requested
                  reporting window.
                type: string
                format: date-time
              window_end:
                description: >-
                  The timestamp of the last build within the requested reporting
                  window.
                type: string
                format: date-time
            required:
              - name
              - metrics
              - window_start
              - window_end
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    InsightsGetProjectWorkflowJobMetricsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetWorkflowSummaryMetricsResponse:
      description: Workflow level aggregated metrics and trends response
      type: object
      properties:
        metrics:
          description: Metrics aggregated across a workflow for a given time window.
          type: object
          properties:
            total_runs:
              description: >-
                The total number of runs, including runs that are still on-hold
                or running.
              type: integer
              format: int64
              minimum: 0
            successful_runs:
              description: The number of successful runs.
              type: integer
              format: int64
              minimum: 0
            mttr:
              description: >-
                The mean time to recovery (mean time between failures and their
                next success) in seconds.
              type: integer
              format: int64
              minimum: 0
              x-nullable: true
            total_credits_used:
              description: >-
                The total credits consumed by the workflow in the aggregation
                window. Note that Insights is not a real time financial
                reporting tool and should not be used for credit reporting.
              type: integer
              format: int64
              minimum: 0
              x-nullable: true
            failed_runs:
              description: The number of failed runs.
              type: integer
              format: int64
              minimum: 0
            success_rate:
              type: number
              format: float
            completed_runs:
              description: >-
                The number of runs that ran to completion within the aggregation
                window
              type: integer
              format: int64
              minimum: 0
              x-nullable: true
            window_start:
              description: >-
                The timestamp of the first build within the requested reporting
                window.
              type: string
              format: date-time
            duration_metrics:
              description: Metrics relating to the duration of runs for a workflow.
              type: object
              properties:
                min:
                  description: The minimum duration, in seconds, among a group of runs.
                  type: integer
                  format: int64
                  minimum: 0
                  x-nullable: true
                mean:
                  description: The mean duration, in seconds, among a group of runs.
                  type: integer
                  format: int64
                  minimum: 0
                  x-nullable: true
                median:
                  description: The median duration, in seconds, among a group of runs.
                  type: integer
                  format: int64
                  minimum: 0
                  x-nullable: true
                p95:
                  description: >-
                    The 95th percentile duration, in seconds, among a group of
                    runs.
                  type: integer
                  format: int64
                  minimum: 0
                  x-nullable: true
                max:
                  description: The max duration, in seconds, among a group of runs.
                  type: integer
                  format: int64
                  minimum: 0
                  x-nullable: true
                standard_deviation:
                  description: The standard deviation, in seconds, among a group of runs.
                  type: number
                  format: float
                  x-nullable: true
              required:
                - min
                - mean
                - median
                - p95
                - max
                - standard_deviation
            window_end:
              description: >-
                The timestamp of the last build within the requested reporting
                window.
              type: string
              format: date-time
            throughput:
              description: The average number of runs per day.
              type: number
              format: float
          required:
            - total_runs
            - successful_runs
            - mttr
            - total_credits_used
            - failed_runs
            - success_rate
            - window_start
            - duration_metrics
            - window_end
            - throughput
            - completed_runs
        trends:
          description: >-
            Trends for aggregated metrics across a workflow for a given time
            window.
          type: object
          properties:
            total_runs:
              description: The trend value for total number of runs.
              type: number
              format: float
            failed_runs:
              description: The trend value for number of failed runs.
              type: number
              format: float
            success_rate:
              description: The trend value for the success rate.
              type: number
              format: float
            p95_duration_secs:
              description: >-
                Trend value for the 95th percentile duration for a workflow for
                a given time window.
              type: number
              format: float
            median_duration_secs:
              description: >-
                Trend value for the 50th percentile duration for a workflow for
                a given time window.
              type: number
              format: float
            total_credits_used:
              description: The trend value for total credits consumed.
              type: number
              format: float
            mttr:
              description: >-
                trend for mean time to recovery (mean time between failures and
                their next success).
              type: number
              format: float
            throughput:
              description: Trend value for the average number of runs per day.
              type: number
              format: float
          required:
            - total_runs
            - failed_runs
            - success_rate
            - p95_duration_secs
            - median_duration_secs
            - total_credits_used
            - mttr
            - throughput
        workflow_names:
          description: A list of all the workflow names for a given project.
          type: array
          items:
            type: string
      required:
        - metrics
        - trends
        - workflow_names
    InsightsGetWorkflowSummaryMetricsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    InsightsGetProjectWorkflowTestMetricsResponse:
      description: Project level test metrics response
      type: object
      properties:
        average_test_count:
          description: The average number of tests executed per run
          type: integer
          format: int64
          minimum: 0
        most_failed_tests:
          description: Metrics for the most frequently failing tests
          type: array
          items:
            type: object
            properties:
              p95_duration:
                description: >-
                  The 95th percentile duration, in seconds, among a group of
                  test runs.
                type: number
                format: double
                x-nullable: true
              total_runs:
                description: The total number of times the test was run.
                type: integer
                format: int64
                minimum: 0
              classname:
                description: The class the test belongs to.
                type: string
                x-nullable: true
              failed_runs:
                description: The number of times the test failed
                type: integer
                format: int64
                minimum: 0
              flaky:
                description: Whether the test is flaky.
                type: boolean
              source:
                description: The source of the test.
                type: string
                x-nullable: true
              file:
                description: The file the test belongs to.
                type: string
                x-nullable: true
              job_name:
                description: The name of the job.
                type: string
              test_name:
                description: The name of the test.
                type: string
            required:
              - failed_runs
              - job_name
              - p95_duration
              - test_name
              - file
              - source
              - classname
              - total_runs
              - flaky
        most_failed_tests_extra:
          description: >-
            The number of tests with the same success rate being omitted from
            most_failed_tests
          type: integer
          format: int64
          minimum: 0
        slowest_tests:
          description: Metrics for the slowest running tests
          type: array
          items:
            type: object
            properties:
              p95_duration:
                description: >-
                  The 95th percentile duration, in seconds, among a group of
                  test runs.
                type: number
                format: double
                x-nullable: true
              total_runs:
                description: The total number of times the test was run.
                type: integer
                format: int64
                minimum: 0
              classname:
                description: The class the test belongs to.
                type: string
                x-nullable: true
              failed_runs:
                description: The number of times the test failed
                type: integer
                format: int64
                minimum: 0
              flaky:
                description: Whether the test is flaky.
                type: boolean
              source:
                description: The source of the test.
                type: string
                x-nullable: true
              file:
                description: The file the test belongs to.
                type: string
                x-nullable: true
              job_name:
                description: The name of the job.
                type: string
              test_name:
                description: The name of the test.
                type: string
            required:
              - failed_runs
              - job_name
              - p95_duration
              - test_name
              - file
              - source
              - classname
              - total_runs
              - flaky
        slowest_tests_extra:
          description: >-
            The number of tests with the same duration rate being omitted from
            slowest_tests
          type: integer
          format: int64
          minimum: 0
        total_test_runs:
          description: The total number of test runs
          type: integer
          format: int64
          minimum: 0
        test_runs:
          description: Test counts grouped by pipeline number and workflow id
          type: array
          items:
            type: object
            properties:
              pipeline_number:
                description: >-
                  The number of the pipeline associated with the provided test
                  counts
                type: integer
                format: int64
                minimum: 0
              workflow_id:
                description: >-
                  The ID of the workflow associated with the provided test
                  counts
              success_rate:
                description: The success rate calculated from test counts
                type: number
                format: float
              test_counts:
                description: Test counts for a given pipeline number
                type: object
                properties:
                  error:
                    description: The number of tests with the error status
                    type: integer
                    format: int64
                    minimum: 0
                  failure:
                    description: The number of tests with the failure status
                    type: integer
                    format: int64
                    minimum: 0
                  skipped:
                    description: The number of tests with the skipped status
                    type: integer
                    format: int64
                    minimum: 0
                  success:
                    description: The number of tests with the success status
                    type: integer
                    format: int64
                    minimum: 0
                  total:
                    description: The total number of tests
                    type: integer
                    format: int64
                    minimum: 0
                required:
                  - error
                  - failure
                  - skipped
                  - success
                  - total
            required:
              - pipeline_number
              - workflow_id
              - success_rate
              - test_counts
      required:
        - average_test_count
        - most_failed_tests
        - most_failed_tests_extra
        - slowest_tests
        - slowest_tests_extra
        - total_test_runs
        - test_runs
    InsightsGetProjectWorkflowTestMetricsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    UserGetInformationResponse:
      title: User
      type: object
      properties:
        id:
          description: The unique ID of the user.
          type: string
          format: uuid
        login:
          title: Login
          description: The login information for the user on the VCS.
          type: string
        name:
          description: The name of the user.
          type: string
      required:
        - id
        - login
        - name
    UserGetInformationdefaultResponse:
      type: object
      properties:
        message:
          type: string
    UserListCollaborationsResponse:
      type: array
      items:
        title: Collaboration
        type: object
        properties:
          id:
            description: The UUID of the organization
            type: string
            format: uuid
            x-nullable: true
          vcs-type:
            description: The VCS provider
            type: string
          name:
            description: The name of the organization
            type: string
          avatar_url:
            description: URL to the user's avatar on the VCS
            type: string
          slug:
            description: The slug of the organization
            type: string
        required:
          - id
          - vcs-type
          - name
          - avatar_url
          - slug
    UserListCollaborationsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineListRecentPipelinesResponse:
      title: PipelineListResponse
      description: List of pipelines
      type: object
      properties:
        items:
          type: array
          items:
            title: Pipeline
            description: A pipeline response.
            type: object
            properties:
              id:
                description: The unique ID of the pipeline.
                type: string
                format: uuid
                example: 5034460f-c7c4-4c43-9457-de07e2029e7b
              errors:
                description: A sequence of errors that have occurred within the pipeline.
                type: array
                items:
                  description: An error with a type and message.
                  type: object
                  properties:
                    type:
                      description: The type of error.
                      enum:
                        - config
                        - config-fetch
                        - timeout
                        - permission
                        - other
                        - plan
                      type: string
                    message:
                      description: A human-readable error message.
                      type: string
                  required:
                    - type
                    - message
              project_slug:
                description: The project-slug for the pipeline.
                type: string
                example: gh/CircleCI-Public/api-preview-docs
              updated_at:
                description: The date and time the pipeline was last updated.
                type: string
                format: date-time
              number:
                description: The number of the pipeline.
                type: integer
                format: int64
                example: 25
              trigger_parameters:
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: integer
                      format: int64
                    - type: boolean
                    - type: object
              state:
                description: The current state of the pipeline.
                enum:
                  - created
                  - errored
                  - setup-pending
                  - setup
                  - pending
                type: string
              created_at:
                description: The date and time the pipeline was created.
                type: string
                format: date-time
              trigger:
                description: A summary of the trigger.
                type: object
                properties:
                  type:
                    description: The type of trigger.
                    enum:
                      - scheduled_pipeline
                      - explicit
                      - api
                      - webhook
                    type: string
                  received_at:
                    description: The date and time the trigger was received.
                    type: string
                    format: date-time
                  actor:
                    description: The user who triggered the Pipeline.
                    type: object
                    properties:
                      login:
                        title: Login
                        description: The login information for the user on the VCS.
                        type: string
                      avatar_url:
                        description: URL to the user's avatar on the VCS
                        type: string
                        x-nullable: true
                    required:
                      - login
                      - avatar_url
                required:
                  - type
                  - received_at
                  - actor
              vcs:
                description: VCS information for the pipeline.
                type: object
                properties:
                  provider_name:
                    description: Name of the VCS provider (e.g. GitHub, Bitbucket).
                    type: string
                    example: GitHub
                  target_repository_url:
                    description: >-
                      URL for the repository the trigger targets (i.e. the
                      repository where the PR will be merged). For fork-PR
                      pipelines, this is the URL to the parent repo. For other
                      pipelines, the `origin_` and `target_repository_url`s will
                      be the same.
                    type: string
                    example: https://github.com/CircleCI-Public/api-preview-docs
                  branch:
                    description: >-
                      The branch where the pipeline ran. The HEAD commit on this
                      branch was used for the pipeline. Note that `branch` and
                      `tag` are mutually exclusive. To trigger a pipeline for a
                      PR by number use `pull/<number>/head` for the PR ref or
                      `pull/<number>/merge` for the merge ref (GitHub only).
                    type: string
                    example: feature/design-new-api
                  review_id:
                    description: The code review id.
                    type: string
                    example: '123'
                  review_url:
                    description: The code review URL.
                    type: string
                    example: >-
                      https://github.com/CircleCI-Public/api-preview-docs/pull/123
                  revision:
                    description: The code revision the pipeline ran.
                    type: string
                    example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
                  tag:
                    description: >-
                      The tag used by the pipeline. The commit that this tag
                      points to was used for the pipeline. Note that `branch`
                      and `tag` are mutually exclusive.
                    type: string
                    example: v3.1.4159
                  commit:
                    description: The latest commit in the pipeline.
                    type: object
                    properties:
                      subject:
                        description: The subject of the commit message.
                        type: string
                        x-nullable: true
                      body:
                        description: The body of the commit message.
                        type: string
                        x-nullable: true
                    required:
                      - subject
                      - body
                  origin_repository_url:
                    description: >-
                      URL for the repository where the trigger originated. For
                      fork-PR pipelines, this is the URL to the fork. For other
                      pipelines the `origin_` and `target_repository_url`s will
                      be the same.
                    type: string
                    example: https://github.com/CircleCI-Public/api-preview-docs
                required:
                  - provider_name
                  - origin_repository_url
                  - target_repository_url
                  - revision
            required:
              - id
              - number
              - project_slug
              - created_at
              - errors
              - state
              - trigger
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    PipelineListRecentPipelinesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineContinueExecutionResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    PipelineContinueExecutiondefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineGetByIdResponse:
      title: Pipeline
      description: A pipeline response.
      type: object
      properties:
        id:
          description: The unique ID of the pipeline.
          type: string
          format: uuid
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
        errors:
          description: A sequence of errors that have occurred within the pipeline.
          type: array
          items:
            description: An error with a type and message.
            type: object
            properties:
              type:
                description: The type of error.
                enum:
                  - config
                  - config-fetch
                  - timeout
                  - permission
                  - other
                  - plan
                type: string
              message:
                description: A human-readable error message.
                type: string
            required:
              - type
              - message
        project_slug:
          description: The project-slug for the pipeline.
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        updated_at:
          description: The date and time the pipeline was last updated.
          type: string
          format: date-time
        number:
          description: The number of the pipeline.
          type: integer
          format: int64
          example: 25
        trigger_parameters:
          type: object
          additionalProperties:
            anyOf:
              - type: string
              - type: integer
                format: int64
              - type: boolean
              - type: object
        state:
          description: The current state of the pipeline.
          enum:
            - created
            - errored
            - setup-pending
            - setup
            - pending
          type: string
        created_at:
          description: The date and time the pipeline was created.
          type: string
          format: date-time
        trigger:
          description: A summary of the trigger.
          type: object
          properties:
            type:
              description: The type of trigger.
              enum:
                - scheduled_pipeline
                - explicit
                - api
                - webhook
              type: string
            received_at:
              description: The date and time the trigger was received.
              type: string
              format: date-time
            actor:
              description: The user who triggered the Pipeline.
              type: object
              properties:
                login:
                  title: Login
                  description: The login information for the user on the VCS.
                  type: string
                avatar_url:
                  description: URL to the user's avatar on the VCS
                  type: string
                  x-nullable: true
              required:
                - login
                - avatar_url
          required:
            - type
            - received_at
            - actor
        vcs:
          description: VCS information for the pipeline.
          type: object
          properties:
            provider_name:
              description: Name of the VCS provider (e.g. GitHub, Bitbucket).
              type: string
              example: GitHub
            target_repository_url:
              description: >-
                URL for the repository the trigger targets (i.e. the repository
                where the PR will be merged). For fork-PR pipelines, this is the
                URL to the parent repo. For other pipelines, the `origin_` and
                `target_repository_url`s will be the same.
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs
            branch:
              description: >-
                The branch where the pipeline ran. The HEAD commit on this
                branch was used for the pipeline. Note that `branch` and `tag`
                are mutually exclusive. To trigger a pipeline for a PR by number
                use `pull/<number>/head` for the PR ref or `pull/<number>/merge`
                for the merge ref (GitHub only).
              type: string
              example: feature/design-new-api
            review_id:
              description: The code review id.
              type: string
              example: '123'
            review_url:
              description: The code review URL.
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs/pull/123
            revision:
              description: The code revision the pipeline ran.
              type: string
              example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
            tag:
              description: >-
                The tag used by the pipeline. The commit that this tag points to
                was used for the pipeline. Note that `branch` and `tag` are
                mutually exclusive.
              type: string
              example: v3.1.4159
            commit:
              description: The latest commit in the pipeline.
              type: object
              properties:
                subject:
                  description: The subject of the commit message.
                  type: string
                  x-nullable: true
                body:
                  description: The body of the commit message.
                  type: string
                  x-nullable: true
              required:
                - subject
                - body
            origin_repository_url:
              description: >-
                URL for the repository where the trigger originated. For fork-PR
                pipelines, this is the URL to the fork. For other pipelines the
                `origin_` and `target_repository_url`s will be the same.
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs
          required:
            - provider_name
            - origin_repository_url
            - target_repository_url
            - revision
      required:
        - id
        - number
        - project_slug
        - created_at
        - errors
        - state
        - trigger
    PipelineGetByIddefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineGetConfigurationByIdResponse:
      title: PipelineConfig
      description: The configuration strings for the pipeline.
      type: object
      properties:
        source:
          description: >-
            The source configuration for the pipeline, before any config
            compilation has been performed. If there is no config, then this
            field will be empty.
          type: string
        compiled:
          description: >-
            The compiled configuration for the pipeline, after all orb expansion
            has been performed. If there were errors processing the pipeline's
            configuration, then this field may be empty.
          type: string
        setup-config:
          description: >-
            The setup configuration for the pipeline used for Setup Workflows.
            If there were errors processing the pipeline's configuration or if
            setup workflows are not enabled, then this field should not exist
          type: string
        compiled-setup-config:
          description: >-
            The compiled setup configuration for the pipeline, after all orb
            expansion has been performed. If there were errors processing the
            pipeline's setup workflows, then this field may be empty.
          type: string
      required:
        - source
        - compiled
    PipelineGetConfigurationByIddefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineListWorkflowsResponse:
      title: WorkflowListResponse
      description: A list of workflows and associated pagination token.
      type: object
      properties:
        items:
          title: Workflow list
          description: A list of workflows.
          type: array
          items:
            title: Workflow
            description: A workflow
            type: object
            properties:
              pipeline_id:
                description: The ID of the pipeline this workflow belongs to.
                type: string
                format: uuid
                example: 5034460f-c7c4-4c43-9457-de07e2029e7b
              canceled_by:
                type: string
                format: uuid
              id:
                description: The unique ID of the workflow.
                type: string
                format: uuid
              name:
                description: The name of the workflow.
                type: string
                example: build-and-test
              project_slug:
                description: The project-slug for the pipeline this workflow belongs to.
                type: string
                example: gh/CircleCI-Public/api-preview-docs
              errored_by:
                type: string
                format: uuid
              tag:
                description: Tag used for the workflow
                enum:
                  - setup
                type: string
                x-nullable: true
                example: setup
              status:
                description: The current status of the workflow.
                enum:
                  - success
                  - running
                  - not_run
                  - failed
                  - error
                  - failing
                  - on_hold
                  - canceled
                  - unauthorized
                type: string
              started_by:
                type: string
                format: uuid
              pipeline_number:
                description: The number of the pipeline this workflow belongs to.
                type: integer
                format: int64
                example: 25
              created_at:
                description: The date and time the workflow was created.
                type: string
                format: date-time
              stopped_at:
                description: The date and time the workflow stopped.
                type: string
                format: date-time
                x-nullable: true
            required:
              - id
              - name
              - status
              - created_at
              - stopped_at
              - pipeline_id
              - pipeline_number
              - project_slug
              - started_by
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    PipelineListWorkflowsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectGetBySlugResponse:
      title: Project
      description: 'NOTE: The definition of Project is subject to change.'
      type: object
      properties:
        slug:
          description: >-
            Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
            characters may be URL-escaped. For projects that use GitLab or
            GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
            with the organization ID (found in Organization Settings), and
            replace `repo-name` with the project ID (found in Project Settings).
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        name:
          description: The name of the project
          type: string
          example: api-preview-docs
        id:
          type: string
          format: uuid
        organization_name:
          description: The name of the organization the project belongs to
          type: string
          example: CircleCI-Public
        organization_slug:
          description: The slug of the organization the project belongs to
          type: string
          example: CircleCI-Public
        organization_id:
          description: The id of the organization the project belongs to
          type: string
          format: uuid
          example: CircleCI-Public
        vcs_info:
          description: Information about the VCS that hosts the project source code.
          type: object
          properties:
            vcs_url:
              description: URL to the repository hosting the project's code
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs
            provider:
              description: The VCS provider
              enum:
                - Bitbucket
                - CircleCI
                - GitHub
              type: string
            default_branch:
              type: string
              example: master
          required:
            - vcs_url
            - provider
            - default_branch
      required:
        - slug
        - name
        - id
        - organization_name
        - organization_slug
        - organization_id
        - vcs_info
    ProjectGetBySlugdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectListCheckoutKeysResponse:
      title: CheckoutKeyListResponse
      type: object
      properties:
        items:
          type: array
          items:
            title: CheckoutKey
            description: A checkout key
            type: object
            properties:
              public-key:
                description: A public SSH key.
                type: string
                example: ssh-rsa ...
              type:
                title: CheckoutKeyType
                description: >-
                  The type of checkout key. This may be either `deploy-key` or
                  `github-user-key`.
                enum:
                  - deploy-key
                  - github-user-key
                type: string
                example: deploy-key
              fingerprint:
                description: An SSH key fingerprint.
                type: string
                example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
              preferred:
                description: A boolean value that indicates if this key is preferred.
                type: boolean
                example: true
              created-at:
                description: The date and time the checkout key was created.
                type: string
                format: date-time
                example: '2015-09-21T17:29:21.042Z'
            required:
              - public-key
              - type
              - fingerprint
              - preferred
              - created-at
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    ProjectListCheckoutKeysdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectCreateCheckoutKeyResponse:
      title: CheckoutKey
      description: A checkout key
      type: object
      properties:
        public-key:
          description: A public SSH key.
          type: string
          example: ssh-rsa ...
        type:
          title: CheckoutKeyType
          description: >-
            The type of checkout key. This may be either `deploy-key` or
            `github-user-key`.
          enum:
            - deploy-key
            - github-user-key
          type: string
          example: deploy-key
        fingerprint:
          description: An SSH key fingerprint.
          type: string
          example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
        preferred:
          description: A boolean value that indicates if this key is preferred.
          type: boolean
          example: true
        created-at:
          description: The date and time the checkout key was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
      required:
        - public-key
        - type
        - fingerprint
        - preferred
        - created-at
    ProjectCreateCheckoutKeydefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectDeleteCheckoutKeyByFingerprintResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    ProjectDeleteCheckoutKeyByFingerprintdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectGetCheckoutKeyByFingerprintResponse:
      title: CheckoutKey
      description: A checkout key
      type: object
      properties:
        public-key:
          description: A public SSH key.
          type: string
          example: ssh-rsa ...
        type:
          title: CheckoutKeyType
          description: >-
            The type of checkout key. This may be either `deploy-key` or
            `github-user-key`.
          enum:
            - deploy-key
            - github-user-key
          type: string
          example: deploy-key
        fingerprint:
          description: An SSH key fingerprint.
          type: string
          example: c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f
        preferred:
          description: A boolean value that indicates if this key is preferred.
          type: boolean
          example: true
        created-at:
          description: The date and time the checkout key was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
      required:
        - public-key
        - type
        - fingerprint
        - preferred
        - created-at
    ProjectGetCheckoutKeyByFingerprintdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectListEnvVarValuesResponse:
      title: EnvironmentVariableListResponse
      type: object
      properties:
        items:
          type: array
          items:
            title: EnvironmentVariable
            description: >-
              An environment variable is a map containing a value and an
              optional timestamp.
            type: object
            properties:
              name:
                description: The name of the environment variable.
                type: string
                example: foo
              value:
                description: The value of the environment variable.
                type: string
                example: xxxx1234
              created-at:
                description: The creation timestamp of the environment variable.
                x-nullable: true
                example: '#joda/inst 2023-04-14T21:20:14+0000'
            required:
              - name
              - value
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    ProjectListEnvVarValuesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectCreateEnvVarResponse:
      title: EnvironmentVariable
      description: >-
        An environment variable is a map containing a value and an optional
        timestamp.
      type: object
      properties:
        name:
          description: The name of the environment variable.
          type: string
          example: foo
        value:
          description: The value of the environment variable.
          type: string
          example: xxxx1234
        created-at:
          description: The creation timestamp of the environment variable.
          x-nullable: true
          example: '#joda/inst 2023-04-14T21:20:14+0000'
      required:
        - name
        - value
    ProjectCreateEnvVardefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectDeleteEnvironmentVariableResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    ProjectDeleteEnvironmentVariabledefaultResponse:
      type: object
      properties:
        message:
          type: string
    ProjectGetMaskedEnvVarResponse:
      title: EnvironmentVariable
      description: >-
        An environment variable is a map containing a value and an optional
        timestamp.
      type: object
      properties:
        name:
          description: The name of the environment variable.
          type: string
          example: foo
        value:
          description: The value of the environment variable.
          type: string
          example: xxxx1234
        created-at:
          description: The creation timestamp of the environment variable.
          x-nullable: true
          example: '#joda/inst 2023-04-14T21:20:14+0000'
      required:
        - name
        - value
    ProjectGetMaskedEnvVardefaultResponse:
      type: object
      properties:
        message:
          type: string
    JobGetDetailsResponse:
      title: Job Details
      description: Job Details
      type: object
      properties:
        web_url:
          description: URL of the job in CircleCI Web UI.
          type: string
        project:
          description: Information about a project.
          type: object
          properties:
            id:
              type: string
              format: uuid
            slug:
              description: >-
                Project slug in the form `vcs-slug/org-name/repo-name`. The `/`
                characters may be URL-escaped. For projects that use GitLab or
                GitHub App, use `circleci` as the `vcs-slug`, replace `org-name`
                with the organization ID (found in Organization Settings), and
                replace `repo-name` with the project ID (found in Project
                Settings).
              type: string
              example: gh/CircleCI-Public/api-preview-docs
            name:
              description: The name of the project
              type: string
              example: api-preview-docs
            external_url:
              description: URL to the repository hosting the project's code
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs
          required:
            - id
            - slug
            - name
            - external_url
        parallel_runs:
          description: Info about parallels runs and their status.
          type: array
          items:
            description: Info about a status of the parallel run.
            type: object
            properties:
              index:
                description: Index of the parallel run.
                type: integer
                format: int64
              status:
                description: Status of the parallel run.
                type: string
            required:
              - index
              - status
        started_at:
          description: The date and time the job started.
          type: string
          format: date-time
        latest_workflow:
          description: Info about the latest workflow the job was a part of.
          type: object
          properties:
            id:
              description: The unique ID of the workflow.
              type: string
              format: uuid
            name:
              description: The name of the workflow.
              type: string
              example: build-and-test
          required:
            - id
            - name
        name:
          description: The name of the job.
          type: string
        executor:
          description: Information about executor used for a job.
          type: object
          properties:
            resource_class:
              description: Resource class name.
              type: string
            type:
              description: Executor type.
              type: string
          required:
            - resource_class
        parallelism:
          description: A number of parallel runs the job has.
          type: integer
          format: int64
        status:
          description: The current status of the job.
          enum:
            - success
            - running
            - not_run
            - failed
            - retried
            - queued
            - not_running
            - infrastructure_fail
            - timedout
            - on_hold
            - terminated-unknown
            - blocked
            - canceled
            - unauthorized
          type: string
        number:
          description: The number of the job.
          type: integer
          format: int64
        pipeline:
          description: Info about a pipeline the job is a part of.
          type: object
          properties:
            id:
              description: The unique ID of the pipeline.
              type: string
              format: uuid
              example: 5034460f-c7c4-4c43-9457-de07e2029e7b
          required:
            - id
        duration:
          description: Duration of a job in milliseconds.
          type: integer
          format: int64
          x-nullable: true
        created_at:
          description: The time when the job was created.
          type: string
          format: date-time
        messages:
          description: Messages from CircleCI execution platform.
          type: array
          items:
            description: Message from CircleCI execution platform.
            type: object
            properties:
              type:
                description: Message type.
                type: string
              message:
                description: Information describing message.
                type: string
              reason:
                description: >-
                  Value describing the reason for message to be added to the
                  job.
                type: string
            required:
              - type
              - message
        contexts:
          description: List of contexts used by the job.
          type: array
          items:
            description: Information about the context.
            type: object
            properties:
              name:
                description: The name of the context.
                type: string
            required:
              - name
        organization:
          description: Information about an organization.
          type: object
          properties:
            name:
              description: The name of the organization.
              type: string
          required:
            - name
        queued_at:
          description: The time when the job was placed in a queue.
          type: string
          format: date-time
        stopped_at:
          description: The time when the job stopped.
          type: string
          format: date-time
          x-nullable: true
      required:
        - number
        - name
        - status
        - started_at
        - created_at
        - queued_at
        - duration
        - executor
        - project
        - organization
        - contexts
        - web_url
        - parallel_runs
        - latest_workflow
        - pipeline
        - parallelism
        - messages
    JobGetDetailsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    JobCancelWithNumberResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    JobCancelWithNumberdefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineGetAllPipelinesResponse:
      title: PipelineListResponse
      description: List of pipelines
      type: object
      properties:
        items:
          type: array
          items:
            title: Pipeline
            description: A pipeline response.
            type: object
            properties:
              id:
                description: The unique ID of the pipeline.
                type: string
                format: uuid
                example: 5034460f-c7c4-4c43-9457-de07e2029e7b
              errors:
                description: A sequence of errors that have occurred within the pipeline.
                type: array
                items:
                  description: An error with a type and message.
                  type: object
                  properties:
                    type:
                      description: The type of error.
                      enum:
                        - config
                        - config-fetch
                        - timeout
                        - permission
                        - other
                        - plan
                      type: string
                    message:
                      description: A human-readable error message.
                      type: string
                  required:
                    - type
                    - message
              project_slug:
                description: The project-slug for the pipeline.
                type: string
                example: gh/CircleCI-Public/api-preview-docs
              updated_at:
                description: The date and time the pipeline was last updated.
                type: string
                format: date-time
              number:
                description: The number of the pipeline.
                type: integer
                format: int64
                example: 25
              trigger_parameters:
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: integer
                      format: int64
                    - type: boolean
                    - type: object
              state:
                description: The current state of the pipeline.
                enum:
                  - created
                  - errored
                  - setup-pending
                  - setup
                  - pending
                type: string
              created_at:
                description: The date and time the pipeline was created.
                type: string
                format: date-time
              trigger:
                description: A summary of the trigger.
                type: object
                properties:
                  type:
                    description: The type of trigger.
                    enum:
                      - scheduled_pipeline
                      - explicit
                      - api
                      - webhook
                    type: string
                  received_at:
                    description: The date and time the trigger was received.
                    type: string
                    format: date-time
                  actor:
                    description: The user who triggered the Pipeline.
                    type: object
                    properties:
                      login:
                        title: Login
                        description: The login information for the user on the VCS.
                        type: string
                      avatar_url:
                        description: URL to the user's avatar on the VCS
                        type: string
                        x-nullable: true
                    required:
                      - login
                      - avatar_url
                required:
                  - type
                  - received_at
                  - actor
              vcs:
                description: VCS information for the pipeline.
                type: object
                properties:
                  provider_name:
                    description: Name of the VCS provider (e.g. GitHub, Bitbucket).
                    type: string
                    example: GitHub
                  target_repository_url:
                    description: >-
                      URL for the repository the trigger targets (i.e. the
                      repository where the PR will be merged). For fork-PR
                      pipelines, this is the URL to the parent repo. For other
                      pipelines, the `origin_` and `target_repository_url`s will
                      be the same.
                    type: string
                    example: https://github.com/CircleCI-Public/api-preview-docs
                  branch:
                    description: >-
                      The branch where the pipeline ran. The HEAD commit on this
                      branch was used for the pipeline. Note that `branch` and
                      `tag` are mutually exclusive. To trigger a pipeline for a
                      PR by number use `pull/<number>/head` for the PR ref or
                      `pull/<number>/merge` for the merge ref (GitHub only).
                    type: string
                    example: feature/design-new-api
                  review_id:
                    description: The code review id.
                    type: string
                    example: '123'
                  review_url:
                    description: The code review URL.
                    type: string
                    example: >-
                      https://github.com/CircleCI-Public/api-preview-docs/pull/123
                  revision:
                    description: The code revision the pipeline ran.
                    type: string
                    example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
                  tag:
                    description: >-
                      The tag used by the pipeline. The commit that this tag
                      points to was used for the pipeline. Note that `branch`
                      and `tag` are mutually exclusive.
                    type: string
                    example: v3.1.4159
                  commit:
                    description: The latest commit in the pipeline.
                    type: object
                    properties:
                      subject:
                        description: The subject of the commit message.
                        type: string
                        x-nullable: true
                      body:
                        description: The body of the commit message.
                        type: string
                        x-nullable: true
                    required:
                      - subject
                      - body
                  origin_repository_url:
                    description: >-
                      URL for the repository where the trigger originated. For
                      fork-PR pipelines, this is the URL to the fork. For other
                      pipelines the `origin_` and `target_repository_url`s will
                      be the same.
                    type: string
                    example: https://github.com/CircleCI-Public/api-preview-docs
                required:
                  - provider_name
                  - origin_repository_url
                  - target_repository_url
                  - revision
            required:
              - id
              - number
              - project_slug
              - created_at
              - errors
              - state
              - trigger
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    PipelineGetAllPipelinesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineTriggerNewPipelineResponse:
      title: PipelineCreation
      description: A pipeline creation response.
      type: object
      properties:
        id:
          description: The unique ID of the pipeline.
          type: string
          format: uuid
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
        state:
          description: The current state of the pipeline.
          enum:
            - created
            - errored
            - setup-pending
            - setup
            - pending
          type: string
        number:
          description: The number of the pipeline.
          type: integer
          format: int64
          example: 25
        created_at:
          description: The date and time the pipeline was created.
          type: string
          format: date-time
      required:
        - id
        - state
        - number
        - created_at
    PipelineTriggerNewPipelinedefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineListUserPipelinesResponse:
      title: PipelineListResponse
      description: List of pipelines
      type: object
      properties:
        items:
          type: array
          items:
            title: Pipeline
            description: A pipeline response.
            type: object
            properties:
              id:
                description: The unique ID of the pipeline.
                type: string
                format: uuid
                example: 5034460f-c7c4-4c43-9457-de07e2029e7b
              errors:
                description: A sequence of errors that have occurred within the pipeline.
                type: array
                items:
                  description: An error with a type and message.
                  type: object
                  properties:
                    type:
                      description: The type of error.
                      enum:
                        - config
                        - config-fetch
                        - timeout
                        - permission
                        - other
                        - plan
                      type: string
                    message:
                      description: A human-readable error message.
                      type: string
                  required:
                    - type
                    - message
              project_slug:
                description: The project-slug for the pipeline.
                type: string
                example: gh/CircleCI-Public/api-preview-docs
              updated_at:
                description: The date and time the pipeline was last updated.
                type: string
                format: date-time
              number:
                description: The number of the pipeline.
                type: integer
                format: int64
                example: 25
              trigger_parameters:
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: integer
                      format: int64
                    - type: boolean
                    - type: object
              state:
                description: The current state of the pipeline.
                enum:
                  - created
                  - errored
                  - setup-pending
                  - setup
                  - pending
                type: string
              created_at:
                description: The date and time the pipeline was created.
                type: string
                format: date-time
              trigger:
                description: A summary of the trigger.
                type: object
                properties:
                  type:
                    description: The type of trigger.
                    enum:
                      - scheduled_pipeline
                      - explicit
                      - api
                      - webhook
                    type: string
                  received_at:
                    description: The date and time the trigger was received.
                    type: string
                    format: date-time
                  actor:
                    description: The user who triggered the Pipeline.
                    type: object
                    properties:
                      login:
                        title: Login
                        description: The login information for the user on the VCS.
                        type: string
                      avatar_url:
                        description: URL to the user's avatar on the VCS
                        type: string
                        x-nullable: true
                    required:
                      - login
                      - avatar_url
                required:
                  - type
                  - received_at
                  - actor
              vcs:
                description: VCS information for the pipeline.
                type: object
                properties:
                  provider_name:
                    description: Name of the VCS provider (e.g. GitHub, Bitbucket).
                    type: string
                    example: GitHub
                  target_repository_url:
                    description: >-
                      URL for the repository the trigger targets (i.e. the
                      repository where the PR will be merged). For fork-PR
                      pipelines, this is the URL to the parent repo. For other
                      pipelines, the `origin_` and `target_repository_url`s will
                      be the same.
                    type: string
                    example: https://github.com/CircleCI-Public/api-preview-docs
                  branch:
                    description: >-
                      The branch where the pipeline ran. The HEAD commit on this
                      branch was used for the pipeline. Note that `branch` and
                      `tag` are mutually exclusive. To trigger a pipeline for a
                      PR by number use `pull/<number>/head` for the PR ref or
                      `pull/<number>/merge` for the merge ref (GitHub only).
                    type: string
                    example: feature/design-new-api
                  review_id:
                    description: The code review id.
                    type: string
                    example: '123'
                  review_url:
                    description: The code review URL.
                    type: string
                    example: >-
                      https://github.com/CircleCI-Public/api-preview-docs/pull/123
                  revision:
                    description: The code revision the pipeline ran.
                    type: string
                    example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
                  tag:
                    description: >-
                      The tag used by the pipeline. The commit that this tag
                      points to was used for the pipeline. Note that `branch`
                      and `tag` are mutually exclusive.
                    type: string
                    example: v3.1.4159
                  commit:
                    description: The latest commit in the pipeline.
                    type: object
                    properties:
                      subject:
                        description: The subject of the commit message.
                        type: string
                        x-nullable: true
                      body:
                        description: The body of the commit message.
                        type: string
                        x-nullable: true
                    required:
                      - subject
                      - body
                  origin_repository_url:
                    description: >-
                      URL for the repository where the trigger originated. For
                      fork-PR pipelines, this is the URL to the fork. For other
                      pipelines the `origin_` and `target_repository_url`s will
                      be the same.
                    type: string
                    example: https://github.com/CircleCI-Public/api-preview-docs
                required:
                  - provider_name
                  - origin_repository_url
                  - target_repository_url
                  - revision
            required:
              - id
              - number
              - project_slug
              - created_at
              - errors
              - state
              - trigger
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    PipelineListUserPipelinesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    PipelineGetByNumberResponse:
      title: Pipeline
      description: A pipeline response.
      type: object
      properties:
        id:
          description: The unique ID of the pipeline.
          type: string
          format: uuid
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
        errors:
          description: A sequence of errors that have occurred within the pipeline.
          type: array
          items:
            description: An error with a type and message.
            type: object
            properties:
              type:
                description: The type of error.
                enum:
                  - config
                  - config-fetch
                  - timeout
                  - permission
                  - other
                  - plan
                type: string
              message:
                description: A human-readable error message.
                type: string
            required:
              - type
              - message
        project_slug:
          description: The project-slug for the pipeline.
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        updated_at:
          description: The date and time the pipeline was last updated.
          type: string
          format: date-time
        number:
          description: The number of the pipeline.
          type: integer
          format: int64
          example: 25
        trigger_parameters:
          type: object
          additionalProperties:
            anyOf:
              - type: string
              - type: integer
                format: int64
              - type: boolean
              - type: object
        state:
          description: The current state of the pipeline.
          enum:
            - created
            - errored
            - setup-pending
            - setup
            - pending
          type: string
        created_at:
          description: The date and time the pipeline was created.
          type: string
          format: date-time
        trigger:
          description: A summary of the trigger.
          type: object
          properties:
            type:
              description: The type of trigger.
              enum:
                - scheduled_pipeline
                - explicit
                - api
                - webhook
              type: string
            received_at:
              description: The date and time the trigger was received.
              type: string
              format: date-time
            actor:
              description: The user who triggered the Pipeline.
              type: object
              properties:
                login:
                  title: Login
                  description: The login information for the user on the VCS.
                  type: string
                avatar_url:
                  description: URL to the user's avatar on the VCS
                  type: string
                  x-nullable: true
              required:
                - login
                - avatar_url
          required:
            - type
            - received_at
            - actor
        vcs:
          description: VCS information for the pipeline.
          type: object
          properties:
            provider_name:
              description: Name of the VCS provider (e.g. GitHub, Bitbucket).
              type: string
              example: GitHub
            target_repository_url:
              description: >-
                URL for the repository the trigger targets (i.e. the repository
                where the PR will be merged). For fork-PR pipelines, this is the
                URL to the parent repo. For other pipelines, the `origin_` and
                `target_repository_url`s will be the same.
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs
            branch:
              description: >-
                The branch where the pipeline ran. The HEAD commit on this
                branch was used for the pipeline. Note that `branch` and `tag`
                are mutually exclusive. To trigger a pipeline for a PR by number
                use `pull/<number>/head` for the PR ref or `pull/<number>/merge`
                for the merge ref (GitHub only).
              type: string
              example: feature/design-new-api
            review_id:
              description: The code review id.
              type: string
              example: '123'
            review_url:
              description: The code review URL.
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs/pull/123
            revision:
              description: The code revision the pipeline ran.
              type: string
              example: f454a02b5d10fcccfd7d9dd7608a76d6493a98b4
            tag:
              description: >-
                The tag used by the pipeline. The commit that this tag points to
                was used for the pipeline. Note that `branch` and `tag` are
                mutually exclusive.
              type: string
              example: v3.1.4159
            commit:
              description: The latest commit in the pipeline.
              type: object
              properties:
                subject:
                  description: The subject of the commit message.
                  type: string
                  x-nullable: true
                body:
                  description: The body of the commit message.
                  type: string
                  x-nullable: true
              required:
                - subject
                - body
            origin_repository_url:
              description: >-
                URL for the repository where the trigger originated. For fork-PR
                pipelines, this is the URL to the fork. For other pipelines the
                `origin_` and `target_repository_url`s will be the same.
              type: string
              example: https://github.com/CircleCI-Public/api-preview-docs
          required:
            - provider_name
            - origin_repository_url
            - target_repository_url
            - revision
      required:
        - id
        - number
        - project_slug
        - created_at
        - errors
        - state
        - trigger
    PipelineGetByNumberdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ScheduleGetAllSchedulesResponse:
      description: A sequence of schedules
      type: object
      properties:
        items:
          type: array
          items:
            title: Schedule
            description: A schedule response
            type: object
            properties:
              description:
                description: Description of the schedule.
                type: string
                x-nullable: true
              parameters:
                description: >-
                  Pipeline parameters represented as key-value pairs. Must
                  contain branch or tag.
                type: object
                additionalProperties:
                  anyOf:
                    - type: integer
                    - type: string
                    - type: boolean
                example:
                  deploy_prod: true
                  branch: feature/design-new-api
              id:
                description: The unique ID of the schedule.
                type: string
                format: uuid
              timetable:
                description: Timetable that specifies when a schedule triggers.
                anyOf:
                  - type: object
                    properties:
                      per-hour:
                        description: >-
                          Number of times a schedule triggers per hour, value
                          must be between 1 and 60
                        type: integer
                        format: integer
                      hours-of-day:
                        description: Hours in a day in which the schedule triggers.
                        type: array
                        items:
                          description: Hour in a day in UTC, value must be between 0 and 24
                          type: integer
                          format: integer
                      days-of-week:
                        description: Days in a week in which the schedule triggers.
                        type: array
                        items:
                          description: Day in a week, in three letters format
                          enum:
                            - TUE
                            - SAT
                            - SUN
                            - MON
                            - THU
                            - WED
                            - FRI
                          type: string
                      days-of-month:
                        description: >-
                          Days in a month in which the schedule triggers. This
                          is mutually exclusive with days in a week.
                        type: array
                        items:
                          description: Day in a month, between 1 and 31.
                          type: integer
                          format: integer
                      months:
                        description: Months in which the schedule triggers.
                        type: array
                        items:
                          description: Month, in three letters format.
                          enum:
                            - MAR
                            - NOV
                            - DEC
                            - JUN
                            - MAY
                            - OCT
                            - FEB
                            - APR
                            - SEP
                            - AUG
                            - JAN
                            - JUL
                          type: string
                    required:
                      - per-hour
                      - hours-of-day
                      - days-of-week
                  - type: object
                    properties:
                      per-hour:
                        description: >-
                          Number of times a schedule triggers per hour, value
                          must be between 1 and 60
                        type: integer
                        format: integer
                      hours-of-day:
                        description: Hours in a day in which the schedule triggers.
                        type: array
                        items:
                          description: Hour in a day in UTC, value must be between 0 and 24
                          type: integer
                          format: integer
                      days-of-month:
                        description: >-
                          Days in a month in which the schedule triggers. This
                          is mutually exclusive with days in a week.
                        type: array
                        items:
                          description: Day in a month, between 1 and 31.
                          type: integer
                          format: integer
                      days-of-week:
                        description: Days in a week in which the schedule triggers.
                        type: array
                        items:
                          description: Day in a week, in three letters format
                          enum:
                            - TUE
                            - SAT
                            - SUN
                            - MON
                            - THU
                            - WED
                            - FRI
                          type: string
                      months:
                        description: Months in which the schedule triggers.
                        type: array
                        items:
                          description: Month, in three letters format.
                          enum:
                            - MAR
                            - NOV
                            - DEC
                            - JUN
                            - MAY
                            - OCT
                            - FEB
                            - APR
                            - SEP
                            - AUG
                            - JAN
                            - JUL
                          type: string
                    required:
                      - per-hour
                      - hours-of-day
                      - days-of-month
              updated-at:
                description: The date and time the pipeline was last updated.
                type: string
                format: date-time
              name:
                description: Name of the schedule.
                type: string
              created-at:
                description: The date and time the pipeline was created.
                type: string
                format: date-time
              project-slug:
                description: The project-slug for the schedule
                type: string
                example: gh/CircleCI-Public/api-preview-docs
              actor:
                title: User
                description: The attribution actor who will run the scheduled pipeline.
                type: object
                properties:
                  id:
                    description: The unique ID of the user.
                    type: string
                    format: uuid
                  login:
                    title: Login
                    description: The login information for the user on the VCS.
                    type: string
                  name:
                    description: The name of the user.
                    type: string
                required:
                  - id
                  - login
                  - name
            required:
              - id
              - name
              - timetable
              - description
              - project-slug
              - actor
              - created-at
              - updated-at
              - parameters
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    ScheduleGetAllSchedulesdefaultResponse:
      type: object
      properties:
        message:
          type: string
    ScheduleCreateNewScheduleResponse:
      title: Schedule
      description: A schedule response
      type: object
      properties:
        description:
          description: Description of the schedule.
          type: string
          x-nullable: true
        parameters:
          description: >-
            Pipeline parameters represented as key-value pairs. Must contain
            branch or tag.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
            branch: feature/design-new-api
        id:
          description: The unique ID of the schedule.
          type: string
          format: uuid
        timetable:
          description: Timetable that specifies when a schedule triggers.
          anyOf:
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-week
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-month
        updated-at:
          description: The date and time the pipeline was last updated.
          type: string
          format: date-time
        name:
          description: Name of the schedule.
          type: string
        created-at:
          description: The date and time the pipeline was created.
          type: string
          format: date-time
        project-slug:
          description: The project-slug for the schedule
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        actor:
          title: User
          description: The attribution actor who will run the scheduled pipeline.
          type: object
          properties:
            id:
              description: The unique ID of the user.
              type: string
              format: uuid
            login:
              title: Login
              description: The login information for the user on the VCS.
              type: string
            name:
              description: The name of the user.
              type: string
          required:
            - id
            - login
            - name
      required:
        - id
        - name
        - timetable
        - description
        - project-slug
        - actor
        - created-at
        - updated-at
        - parameters
    ScheduleCreateNewScheduledefaultResponse:
      type: object
      properties:
        message:
          type: string
    JobGetArtifactsResponse:
      title: ArtifactListResponse
      type: object
      properties:
        items:
          type: array
          items:
            title: Artifact
            description: An artifact
            type: object
            properties:
              path:
                description: The artifact path.
                type: string
              node_index:
                description: The index of the node that stored the artifact.
                type: integer
                format: int64
                minimum: 0
              url:
                description: The URL to download the artifact contents.
                type: string
            required:
              - path
              - node_index
              - url
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    JobGetArtifactsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    JobGetTestMetadataResponse:
      title: TestsResponse
      type: object
      properties:
        items:
          title: TestsResponse
          type: array
          items:
            type: object
            properties:
              message:
                description: The failure message associated with the test.
                type: string
                x-nullable: true
                example: ''
              source:
                description: The program that generated the test results
                type: string
                example: ''
              run_time:
                description: The time it took to run the test in seconds
                type: number
                format: double
                example: .nan
              file:
                description: The file in which the test is defined.
                type: string
                example: ''
              result:
                description: Indication of whether the test succeeded.
                type: string
                example: ''
              name:
                description: The name of the test.
                type: string
                example: ''
              classname:
                description: The programmatic location of the test.
                type: string
                example: ''
            required:
              - message
              - source
              - run_time
              - file
              - result
              - name
              - classname
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    JobGetTestMetadatadefaultResponse:
      type: object
      properties:
        message:
          type: string
    ScheduleRemoveByIdResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    ScheduleRemoveByIddefaultResponse:
      type: object
      properties:
        message:
          type: string
    ScheduleGetByIdResponse:
      title: Schedule
      description: A schedule response
      type: object
      properties:
        description:
          description: Description of the schedule.
          type: string
          x-nullable: true
        parameters:
          description: >-
            Pipeline parameters represented as key-value pairs. Must contain
            branch or tag.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
            branch: feature/design-new-api
        id:
          description: The unique ID of the schedule.
          type: string
          format: uuid
        timetable:
          description: Timetable that specifies when a schedule triggers.
          anyOf:
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-week
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-month
        updated-at:
          description: The date and time the pipeline was last updated.
          type: string
          format: date-time
        name:
          description: Name of the schedule.
          type: string
        created-at:
          description: The date and time the pipeline was created.
          type: string
          format: date-time
        project-slug:
          description: The project-slug for the schedule
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        actor:
          title: User
          description: The attribution actor who will run the scheduled pipeline.
          type: object
          properties:
            id:
              description: The unique ID of the user.
              type: string
              format: uuid
            login:
              title: Login
              description: The login information for the user on the VCS.
              type: string
            name:
              description: The name of the user.
              type: string
          required:
            - id
            - login
            - name
      required:
        - id
        - name
        - timetable
        - description
        - project-slug
        - actor
        - created-at
        - updated-at
        - parameters
    ScheduleGetByIddefaultResponse:
      type: object
      properties:
        message:
          type: string
    ScheduleUpdateScheduleResponse:
      title: Schedule
      description: A schedule response
      type: object
      properties:
        description:
          description: Description of the schedule.
          type: string
          x-nullable: true
        parameters:
          description: >-
            Pipeline parameters represented as key-value pairs. Must contain
            branch or tag.
          type: object
          additionalProperties:
            anyOf:
              - type: integer
              - type: string
              - type: boolean
          example:
            deploy_prod: true
            branch: feature/design-new-api
        id:
          description: The unique ID of the schedule.
          type: string
          format: uuid
        timetable:
          description: Timetable that specifies when a schedule triggers.
          anyOf:
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-week
            - type: object
              properties:
                per-hour:
                  description: >-
                    Number of times a schedule triggers per hour, value must be
                    between 1 and 60
                  type: integer
                  format: integer
                hours-of-day:
                  description: Hours in a day in which the schedule triggers.
                  type: array
                  items:
                    description: Hour in a day in UTC, value must be between 0 and 24
                    type: integer
                    format: integer
                days-of-month:
                  description: >-
                    Days in a month in which the schedule triggers. This is
                    mutually exclusive with days in a week.
                  type: array
                  items:
                    description: Day in a month, between 1 and 31.
                    type: integer
                    format: integer
                days-of-week:
                  description: Days in a week in which the schedule triggers.
                  type: array
                  items:
                    description: Day in a week, in three letters format
                    enum:
                      - TUE
                      - SAT
                      - SUN
                      - MON
                      - THU
                      - WED
                      - FRI
                    type: string
                months:
                  description: Months in which the schedule triggers.
                  type: array
                  items:
                    description: Month, in three letters format.
                    enum:
                      - MAR
                      - NOV
                      - DEC
                      - JUN
                      - MAY
                      - OCT
                      - FEB
                      - APR
                      - SEP
                      - AUG
                      - JAN
                      - JUL
                    type: string
              required:
                - per-hour
                - hours-of-day
                - days-of-month
        updated-at:
          description: The date and time the pipeline was last updated.
          type: string
          format: date-time
        name:
          description: Name of the schedule.
          type: string
        created-at:
          description: The date and time the pipeline was created.
          type: string
          format: date-time
        project-slug:
          description: The project-slug for the schedule
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        actor:
          title: User
          description: The attribution actor who will run the scheduled pipeline.
          type: object
          properties:
            id:
              description: The unique ID of the user.
              type: string
              format: uuid
            login:
              title: Login
              description: The login information for the user on the VCS.
              type: string
            name:
              description: The name of the user.
              type: string
          required:
            - id
            - login
            - name
      required:
        - id
        - name
        - timetable
        - description
        - project-slug
        - actor
        - created-at
        - updated-at
        - parameters
    ScheduleUpdateScheduledefaultResponse:
      type: object
      properties:
        message:
          type: string
    UserGetUserInformationResponse:
      title: User
      type: object
      properties:
        id:
          description: The unique ID of the user.
          type: string
          format: uuid
        login:
          title: Login
          description: The login information for the user on the VCS.
          type: string
        name:
          description: The name of the user.
          type: string
      required:
        - id
        - login
        - name
    UserGetUserInformationdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WebhookListMatchingScopeResponse:
      description: A list of webhooks
      type: object
      properties:
        items:
          type: array
          items:
            title: Webhook
            type: object
            properties:
              url:
                description: >-
                  URL to deliver the webhook to. Note: protocol must be included
                  as well (only https is supported)
                type: string
              verify-tls:
                description: >-
                  Whether to enforce TLS certificate verification when
                  delivering the webhook
                type: boolean
              id:
                description: The unique ID of the webhook
                type: string
                format: uuid
              signing-secret:
                description: >-
                  Masked value of the secret used to build an HMAC hash of the
                  payload and passed as a header in the webhook request
                type: string
              updated-at:
                description: The date and time the webhook was last updated.
                type: string
                format: date-time
                example: '2015-09-21T17:29:21.042Z'
              name:
                description: Name of the webhook
                type: string
              created-at:
                description: The date and time the webhook was created.
                type: string
                format: date-time
                example: '2015-09-21T17:29:21.042Z'
              scope:
                description: >-
                  The scope in which the relevant events that will trigger
                  webhooks
                type: object
                properties:
                  id:
                    description: >-
                      ID of the scope being used (at the moment, only project ID
                      is supported)
                    type: string
                    format: uuid
                  type:
                    description: Type of the scope being used
                    type: string
                required:
                  - id
                  - type
              events:
                description: Events that will trigger the webhook
                type: array
                items:
                  enum:
                    - workflow-completed
                    - job-completed
                  type: string
            required:
              - id
              - scope
              - name
              - events
              - url
              - verify-tls
              - signing-secret
              - created-at
              - updated-at
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    WebhookListMatchingScopedefaultResponse:
      type: object
      properties:
        message:
          type: string
    WebhookCreateOutboundWebhookResponse:
      title: Webhook
      type: object
      properties:
        url:
          description: >-
            URL to deliver the webhook to. Note: protocol must be included as
            well (only https is supported)
          type: string
        verify-tls:
          description: >-
            Whether to enforce TLS certificate verification when delivering the
            webhook
          type: boolean
        id:
          description: The unique ID of the webhook
          type: string
          format: uuid
        signing-secret:
          description: >-
            Masked value of the secret used to build an HMAC hash of the payload
            and passed as a header in the webhook request
          type: string
        updated-at:
          description: The date and time the webhook was last updated.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
        name:
          description: Name of the webhook
          type: string
        created-at:
          description: The date and time the webhook was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
        scope:
          description: The scope in which the relevant events that will trigger webhooks
          type: object
          properties:
            id:
              description: >-
                ID of the scope being used (at the moment, only project ID is
                supported)
              type: string
              format: uuid
            type:
              description: Type of the scope being used
              type: string
          required:
            - id
            - type
        events:
          description: Events that will trigger the webhook
          type: array
          items:
            enum:
              - workflow-completed
              - job-completed
            type: string
      required:
        - id
        - scope
        - name
        - events
        - url
        - verify-tls
        - signing-secret
        - created-at
        - updated-at
    WebhookCreateOutboundWebhookdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WebhookDeleteOutboundWebhookResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    WebhookDeleteOutboundWebhookdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WebhookGetByIdResponse:
      title: Webhook
      type: object
      properties:
        url:
          description: >-
            URL to deliver the webhook to. Note: protocol must be included as
            well (only https is supported)
          type: string
        verify-tls:
          description: >-
            Whether to enforce TLS certificate verification when delivering the
            webhook
          type: boolean
        id:
          description: The unique ID of the webhook
          type: string
          format: uuid
        signing-secret:
          description: >-
            Masked value of the secret used to build an HMAC hash of the payload
            and passed as a header in the webhook request
          type: string
        updated-at:
          description: The date and time the webhook was last updated.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
        name:
          description: Name of the webhook
          type: string
        created-at:
          description: The date and time the webhook was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
        scope:
          description: The scope in which the relevant events that will trigger webhooks
          type: object
          properties:
            id:
              description: >-
                ID of the scope being used (at the moment, only project ID is
                supported)
              type: string
              format: uuid
            type:
              description: Type of the scope being used
              type: string
          required:
            - id
            - type
        events:
          description: Events that will trigger the webhook
          type: array
          items:
            enum:
              - workflow-completed
              - job-completed
            type: string
      required:
        - id
        - scope
        - name
        - events
        - url
        - verify-tls
        - signing-secret
        - created-at
        - updated-at
    WebhookGetByIddefaultResponse:
      type: object
      properties:
        message:
          type: string
    WebhookUpdateOutboundWebhookResponse:
      title: Webhook
      type: object
      properties:
        url:
          description: >-
            URL to deliver the webhook to. Note: protocol must be included as
            well (only https is supported)
          type: string
        verify-tls:
          description: >-
            Whether to enforce TLS certificate verification when delivering the
            webhook
          type: boolean
        id:
          description: The unique ID of the webhook
          type: string
          format: uuid
        signing-secret:
          description: >-
            Masked value of the secret used to build an HMAC hash of the payload
            and passed as a header in the webhook request
          type: string
        updated-at:
          description: The date and time the webhook was last updated.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
        name:
          description: Name of the webhook
          type: string
        created-at:
          description: The date and time the webhook was created.
          type: string
          format: date-time
          example: '2015-09-21T17:29:21.042Z'
        scope:
          description: The scope in which the relevant events that will trigger webhooks
          type: object
          properties:
            id:
              description: >-
                ID of the scope being used (at the moment, only project ID is
                supported)
              type: string
              format: uuid
            type:
              description: Type of the scope being used
              type: string
          required:
            - id
            - type
        events:
          description: Events that will trigger the webhook
          type: array
          items:
            enum:
              - workflow-completed
              - job-completed
            type: string
      required:
        - id
        - scope
        - name
        - events
        - url
        - verify-tls
        - signing-secret
        - created-at
        - updated-at
    WebhookUpdateOutboundWebhookdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WorkflowGetByIdResponse:
      title: Workflow
      description: A workflow
      type: object
      properties:
        pipeline_id:
          description: The ID of the pipeline this workflow belongs to.
          type: string
          format: uuid
          example: 5034460f-c7c4-4c43-9457-de07e2029e7b
        canceled_by:
          type: string
          format: uuid
        id:
          description: The unique ID of the workflow.
          type: string
          format: uuid
        name:
          description: The name of the workflow.
          type: string
          example: build-and-test
        project_slug:
          description: The project-slug for the pipeline this workflow belongs to.
          type: string
          example: gh/CircleCI-Public/api-preview-docs
        errored_by:
          type: string
          format: uuid
        tag:
          description: Tag used for the workflow
          enum:
            - setup
          type: string
          x-nullable: true
          example: setup
        status:
          description: The current status of the workflow.
          enum:
            - success
            - running
            - not_run
            - failed
            - error
            - failing
            - on_hold
            - canceled
            - unauthorized
          type: string
        started_by:
          type: string
          format: uuid
        pipeline_number:
          description: The number of the pipeline this workflow belongs to.
          type: integer
          format: int64
          example: 25
        created_at:
          description: The date and time the workflow was created.
          type: string
          format: date-time
        stopped_at:
          description: The date and time the workflow stopped.
          type: string
          format: date-time
          x-nullable: true
      required:
        - id
        - name
        - status
        - created_at
        - stopped_at
        - pipeline_id
        - pipeline_number
        - project_slug
        - started_by
    WorkflowGetByIddefaultResponse:
      type: object
      properties:
        message:
          type: string
    WorkflowApproveJobResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    WorkflowApproveJobdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WorkflowCancelWorkflowResponse:
      title: MessageResponse
      description: message response
      type: object
      properties:
        message:
          description: A human-readable message
          type: string
      required:
        - message
    WorkflowCancelWorkflowdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WorkflowGetJobsResponse:
      title: WorkflowJobListResponse
      type: object
      properties:
        items:
          type: array
          items:
            title: Job
            description: Job
            type: object
            properties:
              canceled_by:
                description: The unique ID of the user.
                type: string
                format: uuid
              dependencies:
                description: >-
                  A sequence of the unique job IDs for the jobs that this job
                  depends upon in the workflow.
                type: array
                items:
                  description: The unique ID of the job.
                  type: string
                  format: uuid
              job_number:
                description: The number of the job.
                type: integer
                format: int64
              id:
                description: The unique ID of the job.
                type: string
                format: uuid
              started_at:
                description: The date and time the job started.
                type: string
                format: date-time
              name:
                description: The name of the job.
                type: string
              approved_by:
                description: The unique ID of the user.
                type: string
                format: uuid
              project_slug:
                description: The project-slug for the job.
                type: string
                example: gh/CircleCI-Public/api-preview-docs
              status:
                description: The current status of the job.
                enum:
                  - success
                  - running
                  - not_run
                  - failed
                  - retried
                  - queued
                  - not_running
                  - infrastructure_fail
                  - timedout
                  - on_hold
                  - terminated-unknown
                  - blocked
                  - canceled
                  - unauthorized
                type: string
              type:
                description: The type of job.
                enum:
                  - build
                  - approval
                type: string
              stopped_at:
                description: The time when the job stopped.
                type: string
                format: date-time
                x-nullable: true
              approval_request_id:
                description: The unique ID of the job.
                type: string
                format: uuid
            required:
              - id
              - name
              - started_at
              - dependencies
              - project_slug
              - status
              - type
        next_page_token:
          description: >-
            A token to pass as a `page-token` query parameter to return the next
            page of results.
          type: string
          x-nullable: true
      required:
        - items
        - next_page_token
    WorkflowGetJobsdefaultResponse:
      type: object
      properties:
        message:
          type: string
    WorkflowRerunWorkflowResponse:
      description: A response to rerunning a workflow
      type: object
      properties:
        workflow_id:
          description: The ID of the newly-created workflow.
          type: string
          format: uuid
          example: 0e53027b-521a-4c40-9042-47e72b3c63a3
      required:
        - workflow_id
    WorkflowRerunWorkflowdefaultResponse:
      type: object
      properties:
        message:
          type: string
    OidcTokenManagementDeleteOrgClaimsResponse:
      properties:
        error:
          example: 'OwnerID: must be a valid UUID.'
          type: string
      required:
        - error
      type: object
    OidcTokenManagementDeleteOrgClaims403Response:
      properties:
        error:
          example: Forbidden
          type: string
      required:
        - error
      type: object
    OidcTokenManagementDeleteOrgClaims500Response:
      properties:
        error:
          example: internal server error
          type: string
      required:
        - error
      type: object
    PolicyManagementGetDecisionAuditLogsResponse:
      items:
        $ref: '#/components/schemas/DecisionLog'
      type: array
    PolicyManagementGetDecisionAuditLogs401Response:
      properties:
        error:
          example: Unauthorized
          type: string
      required:
        - error
      type: object
    PolicyManagementGetDecisionAuditLogs500Response:
      properties:
        error:
          example: unexpected server error
          type: string
      required:
        - error
      type: object
    PolicyManagementEvaluateInputDataResponse:
      properties:
        error:
          example: 'context: must be a valid value.'
          type: string
      required:
        - error
      type: object
    PolicyManagementEvaluateInputData401Response:
      properties:
        error:
          example: Unauthorized.
          type: string
      required:
        - error
      type: object
    PolicyManagementEvaluateInputData500Response:
      properties:
        error:
          example: There was an error processing your request.
          type: string
      required:
        - error
      type: object
    PolicyManagementGetDecisionAuditLogByGivenIdResponse:
      properties:
        error:
          example: decision log not found
          type: string
      required:
        - error
      type: object
    PolicyManagementGetPolicyBundleForDecisionResponse:
      properties:
        error:
          example: decision log not found
          type: string
      required:
        - error
      type: object
    PolicyManagementCreatePolicyBundleForContextResponse:
      properties:
        error:
          example: 'http: request payload too large'
          type: string
      required:
        - error
      type: object
    PolicyManagementGetDocumentResponse:
      properties:
        error:
          example: policy not found
          type: string
      required:
        - error
      type: object
    ContextGetRestrictionsResponse:
      additionalProperties: false
      properties:
        message:
          type: string
          default: context_id is invalid.
    ContextGetRestrictions401Response:
      additionalProperties: false
      properties:
        message:
          type: string
    ContextGetRestrictions404Response:
      additionalProperties: false
      properties:
        message:
          type: string
    ContextGetRestrictions429Response:
      additionalProperties: false
      properties:
        message:
          type: string
          default: Rate limit exceeded.
    ContextGetRestrictions500Response:
      additionalProperties: false
      properties:
        message:
          type: string
          default: Internal server error.
    ContextCreateRestrictionResponse:
      additionalProperties: false
      properties:
        message:
          type: string
    ContextCreateRestriction409Response:
      additionalProperties: false
      properties:
        message:
          type: string
    ContextDeleteRestrictionResponse:
      additionalProperties: false
      properties:
        message:
          type: string
          default: restriction_id is invalid.
    ProjectCreateProjectDefaultSettingsResponse:
      additionalProperties: false
      properties:
        message:
          type: string
          default: Unexpected request body provided.
    ProjectCreateProjectDefaultSettings403Response:
      additionalProperties: false
      properties:
        message:
          type: string
          default: Permission denied.
    ProjectCreateProjectDefaultSettings404Response:
      additionalProperties: false
      properties:
        message:
          type: string
    ProjectCreateProjectDefaultSettings405Response:
      additionalProperties: false
      properties:
        message:
          type: string
          default: >-
            Create projects using the API is currently supported for classic
            Github OAuth and Bitbucket projects only.
    ProjectGetSettingsResponse:
      additionalProperties: false
      properties:
        message:
          type: string
          default: Project not found.
    ProjectUpdateSettingsResponse:
      additionalProperties: false
      properties:
        message:
          type: string
security:
  - api_key_header: []
  - basic_auth: []
  - api_key_query: []
