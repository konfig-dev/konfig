openapi: 3.0.0
info:
  title: Paycor Public API
  description: >-

    Welcome to Paycor's Public API! This document is a reference for the APIs
    Paycor has available, and acts as a complement to the "Guides" section. 


    # Getting Started


    <strong>To learn more about getting started with Paycor's Public APIs, check
    out our <a href="/guides">Guides.</a></strong>


    # GET, PUT, POST


    * When requesting object, use GET endpoints. All list endpoints support
    paging, as described [in the other doc]. 

    * When creating an object, use POST endpoints. Your code will need to create
    an object and send it to Paycor in your API call request body as JSON. You
    can use the "request sample" body as a starting point. Our endpoints will
    return a reference to the created object (the ID and GET API URL) for your
    system.

    * When updating an object, you will use PUT endpoints. The general flow
    would be to: GET the object you want to update, modify the fields as
    desired, then PUT the object (as JSON in the request body) to our endpoints.
    Some fields like the object's ID cannot be updated because they are
    system-set.'



    # Error Handling


    * 400: Please consult the response text to correct your request
    information. 

    * 401 with response "Access denied due to missing subscription key": Please
    include your APIM Subscription Key as header Ocp-Apim-Subscription-Key or
    querystring parameter subscription-key. 

    * 401 with no response: Please ensure you included a valid & current Access
    Token in the Authorization header.

    * 403: Please ensure your Access Token's scope has all the relevant access
    you need, on the AppCreator Data Access screen. 

    * 404: Please validate the API route you are using. If that is correct, one
    of your IDs most likely does not exist or is not in a valid state. 

    * 429: Paycor implements rate limits for our Public API. Each customer
    (implemented via APIM subscription key) has a limited number of calls. The
    number of calls is counted across all APIs, not per individual API. Please
    use bulk endpoints where available and spread your calls over a wider
    timespan.
      * The default rate limit is up to 1000 API calls per minute (total across all our Public APIs). 
    * 500: Please contact Paycor. When you make a POST or PUT call and receive a
    500, please do not retry the call automatically - this may result in
    double-posting. GETs can be safely retried.



    # IDs


    * ClientId = LegalEntityId

    * TenantId = CompanyId

    * EmployeeId is not visible in Paycor's UI, you must retrieve it from the
    Public API


    # Earnings, Deductions, Taxes


    This section describes the domain model for Paycor's Earnings, Deductions,
    and Taxes. This will provide background for many paydata-related Public API
    endpoints. 


    Paycor stores Earnings, Deductions, and Taxes each at three levels:

    * Global: Same data across all legal entities. Setup by Paycor for customers
    to choose from. Sample Codes (note these will not be setup on every Legal
    Entity):
      * Earnings: REG, OT
      * Taxes: FITWH, SOC, SOCER, OHCIN
      * Deductions: 401k, KMat, H125, UWay
    * Legal Entity or Tenant: Codes setup &amp; customized on the legal entity
    or Tenant level. Must be tied to a Global Code. 
      * Perform UI allows creating Deduction and Earning codes on Tenant level (under Configure Company nav menu). These will be returned by the Legal Entity Public API endpoints. 
    * Employee: codes setup on a particular employee, tied to a Legal
    Entity-level or Tenant-level code
      * Employee Earnings/Deductions/Taxes are applied during payroll. Many properties are inherited from the Legal Entity or Global levels, but some can be overridden. 

    # Authentication


    <!-- ReDoc-Inject: <security-definitions> -->
  version: ''
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://apis.paycor.com
tags:
  - description: >-
      These endpoints interact with Employees.

      * An Employee is linked to a single Legal Entity, a single Person, and a
      single Tenant.

      * Each Person will be linked to one or more Employees (setup by the admin
      in the Manage People screen).

      * Employee APIs will return Work email addresses, not Home.
    name: Employees
  - description: "\r\nEmployees can setup Direct Deposit accounts to send their paycheck into bank accounts or HSA accounts. \r\n* To use the Employee Direct Deposit endpoints, the Legal Entity must have the Direct Deposit Workflow product or an error will be returned\r\n* Employees can choose a 'partial' or a 'full' (called Net) Direct Deposit. Partial Direct Deposits must set either a Rate or an Amount.\r\n* All Direct Deposits and HSA Direct Deposits must be tied to a Deduction Code that has already been setup on the Legal Entity.\r\n  * To add a new DD, you'll need to call 'GET Legal Entity Deductions' and find a Deduction Code of the correct type - usually one with DD or HSA in the Code.\r\n"
    name: Employee Direct Deposits
  - description: "\r\nFor more information, see documentation section titled 'Earnings, Deductions, and Taxes.'\r\n"
    name: Employee Taxes
  - description: Legal entity work locations information.
    name: Legal Entity Work Locations
  - description: >-
      A Person is tied to a single Tenant, and will work in one or more Legal
      Entities (FEINs) - each of which will be be represented by one or more
      Employee rows. 

      * Person APIs will return all Phone types, and Home-type emails (not
      work-type emails). 
    name: Persons
  - description: "\r\nFor more information, see documentation section titled 'Earnings, Deductions, and Taxes.'\r\n"
    name: Employee Deductions
  - description: "\r\nFor more information, see documentation section titled 'Earnings, Deductions, and Taxes.'\r\n"
    name: Employee Earnings
  - description: "\r\nThis API allows working with an employee's Pay Stubs. Each Pay Period will generate one Pay Stub.\r\n* Calling GET Legal Entity Pay Data is required before calling GET Employee Pay Stubs, to obtain a list of valid check dates.\r\n\r\n"
    name: Employee Pay Stubs
  - description: "\r\nThese APIs interact with Paycor’s Perform Time Scheduling system. They will only be available to customers with Perform Time Scheduling service\r\n* Perform Time Scheduling (sometimes called Legacy Scheduling) stores basic information about Shifts\r\n* The Public APIs do not communicate with the more powerful “Paycor Scheduling” system. For Paycor Scheduling please refer to the documentation under the ‘Employee Scheduling’ section.\r\n"
    name: Employee (Legacy / Perform Time) Schedules
  - description: "These APIs allow querying employees' requests to take time off.\r\n* These APIs require the 'Perform Time Off' service.\r\n"
    name: Time Off Requests
  - description: "\r\nThese APIs allow working with the Departments (also called Organizations) that have been configured on the Legal Entity. \r\n"
    name: Legal Entity Departments
  - description: "\r\nThese APIs interact with Paycor's Perform Time system. \r\n* And will only work with 'Perform Time' service/product enabled clients - otherwise you will receive an error.\r\n"
    name: Legal Entity Time Data
  - description: "Applicant Tracking System\r\n\r\nThese endpoints can only be used if the Client has the Applicant Tracking Service."
    name: Applicant Tracking System
  - description: Employee certification information
    name: Employee Certifications
  - description: "\r\nThese endpoints allow working with an Employee's pay rate, as setup on their profile by the Administrator. \r\n"
    name: Employee Pay Rates
  - description: This API allows working with Labor Codes
    name: Labor Codes
  - description: >-
      A Tenant is a collection of multiple Legal Entities. Each Legal Entity is
      one FEIN. 

      * In Paycor terminology, a Tenant is also known as a Company. 
    name: Tenants
  - description: ' This API allows working with an employee''s custom fields '
    name: Employee Custom Fields
  - description: This APIs allow working with Documents of the Employees
    name: Employee Documents
  - description: "\r\nThese APIs interact with Paycor's Payroll system directly. They do not go through any Time system.\r\n\r\n* Paycor will need to add the 'Integration Payroll Time Partner' or have the Trackforce product enabled.\r\n* They are useful if you are integrating a third-party time product with Paycor.\r\n* You will need to choose an Earning Code for each set of Hours. The Code must already be setup on the particular Employee - you can use the Employee Earnings endpoints for this.\r\n* Calling this endpoint kicks off a backend import process. Currently, there are no APIs to read or monitor the import process. A client administrator must import, review & submit the payrun before any employees will be paid.\r\n* Client administrator will need to login to Paycor's Paygrid and use the Import Time Card feature to see & approve the values. They will see an Import Pay screen when they Begin a new Payrun.\r\n"
    name: Employee Payroll Hours
  - description: ' This API allows working with an employee''s I9 Verification fields '
    name: Employee I9 Verification
  - description: "\r\nThese APIs allow working with employees in the onboarding state.\r\n\r\nThese endpoints can only be used if the Client has the Onboarding Service."
    name: Employee Onboarding
  - description: "\r\nThese APIs interact with Paycor's Perform Time system.\r\n* They will only work with Perform Time-enabled clients - otherwise you will receive an error.\r\n* These APIs will not work for Time on Demand or Attendance on Demand clients.\r\n"
    name: Employee Time Card Punches
  - description: "Accruals are time-off benefits for employees that increase over time, and are updated when a payrun is run (the employee is paid). \r\n* Common plans include PTO, vacation time, sick time, and floating holidays. \r\n* Accrual types and plans are setup at the Tenant level in Paycor's UI by the HR Admin. \r\n* Each employee can participate in a number of individual Accrual plans. \r\n* This API is only available to legal entities with the 'Perform Accruals' service. It is not available to clients with the older 'Perform Time Off' service. There is a migration path available. "
    name: Employee Time Off Accruals
  - description: "\r\nA Legal Entity is a single FEIN (Federal ID number, for tax purposes). A Legal Entity will have a single Tenant as its parent. \r\n* In Paycor terminology, a Legal Entity is called a 'client'. \r\n  * Paycor customers are often familiar with their ClientId, which is a synonym for Public API's Legal Entity ID. \r\n"
    name: Legal Entities
  - description: Legal entity certification information
    name: Legal Entity Certifications
  - description: Post Emergency Contact Details.
    name: Employee Emergency Contact
  - description: "\r\nThis API allows working with an employee's scheduled Pay Periods, which indicates when the employee was/will be paid (known as a payrun). \r\n* Note that Pay Schedule is unrelated to the employee's work schedule or timecard information. \r\n* The employee's actual pay dates may not match the Pay Schedule, depending on the payroll admin's processing. \r\n  * An employee may be excluded from scheduled payruns. \r\n  * An employee may also have Additional Payruns (such as for bonuses) - which this API will not return. \r\n* A given employee will have a default Pay Frequency (such as Biweekly), which will define the Pay Schedule calendar.\r\n  * The employee's Pay Frequency is defined by the Paygroup they are assigned to. \r\n* This endpoint can be used to retrieve parameters for GET Employee Pay Stubs, although 'GET Legal Entity Paydata' would be more accurate for that. \r\n"
    name: Employee Pay Schedule
  - description: "These APIs interact with Paycor Scheduling system.\r\n\r\nIn order to use these apis you must have either Paycor Scheduling or Paycor Scheduling Pro Service."
    name: Employee Scheduling
  - description: This API allows working with clients General Ledger
    name: General Ledger
  - description: This API allows working with clients Job Costing
    name: General Ledger Job Costing
  - description: This API allows working with Labor Categories
    name: Labor Categories
  - description: "\r\nPaycor's Public API doesn't currently include editing Legal Entity-level Deductions. Those must be setup by a client administrator in Paycor's system. \r\n\r\nFor more information, see documentation section titled 'Earnings, Deductions, and Taxes.'\r\n\r\n"
    name: Legal Entity Deductions
  - description: "\r\nPaycor's Public API doesn't currently include editing Legal Entity-level Earnings. Those must be setup by a client administrator in Paycor's system. \r\n\r\nFor more information, see documentation section titled 'Earnings, Deductions, and Taxes.'\r\n"
    name: Legal Entity Earnings
  - description: Legal entity job titles information
    name: Legal Entity Job Titles
  - description: "\r\nAllows working with Pay Data information from Paycor's Payroll system.\r\n* Works with the dates that employees are actually paid, as opposed to the Pay Schedule which returns their scheduled pay dates.\r\n\r\n"
    name: Legal Entity Pay Data
  - description: "\r\nEach Paycor Legal Entity has a collection of one or more Payrolls. Each Payroll contains one or more Paygroups. These APIs return data about both. \r\n\r\nThis structure can be modified by the client administrator - there are currently no Public APIs for editing. \r\n"
    name: Legal Entity Pay Groups
  - description: This API allows working with legal entity pay periods
    name: Legal Entity Payroll Processing Data
  - description: "\r\nThis API allows working with a Paygroup's scheduled Pay Periods, which indicates when its employees was/will be paid (known as a payrun). \r\n* Note that Pay Schedule is unrelated to the employee's work schedule or timecard information. \r\n* The actual pay dates may vary depending on when the Payroll Admin processes payroll. \r\n* This endpoint can be used to retrieve parameters for GET Employee Pay Stubs, although 'GET Legal Entity Paydata' would be more accurate for that. \r\n"
    name: Legal Entity Pay Schedule
  - description: This API allows working with Activity Types
    name: Legal Entity Activity Types
  - name: Legal Entity Schedule Groups
  - description: "\r\nLegal Entity Services are optional products and offerings that the entity may choose to subscribe. \r\n* Calling certain Public APIs will require the Legal Entity to have a certain Service. \r\n"
    name: Legal Entity Services
  - name: Legal Entity Status Reason
  - description: >-
      For more information, see documentation section titled 'Earnings,
      Deductions, and Taxes.'
    name: ' Legal Entity Taxes'
  - name: Legal Entity Time Off Types
  - name: Legal Entity Work Sites
  - name: Events
  - name: Job Titles
paths:
  /v1/legalEntities/{legalEntityId}/ats/{atsAccountId}/jobs:
    get:
      tags:
        - Applicant Tracking System
      summary: Get a list of ATS Account jobs for ATS Account Id
      operationId: ApplicantTrackingSystem_getAccountJobs
      description: 'Data Access: View ATS Account jobs by ATS Account ID'
      parameters:
        - description: >-
            Paycor Legal Entity ID of the legal entity for which you want to get
            the ATS account jobs
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: ATS account ID of for which you want to get the ATS account jobs
          name: atsAccountId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          x-position: 2
        - description: >-
            Options to include more data: All, Hiring managers, Recruiters, Team
            members, Executives
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes'
          x-position: 3
        - description: >-
            Option to filter jobs based on if they are posted to the careers
            page
          name: postedToCareers
          in: query
          schema:
            type: boolean
            nullable: true
          x-position: 4
        - description: Option to filter jobs by status
          name: status
          in: query
          schema:
            nullable: true
            $ref: '#/components/schemas/JobStatus'
          x-position: 5
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 6
      responses:
        '200':
          description: Returns a list of ATS Account jobs for ATS Account Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfJob'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalEntities/{legalEntityId}/ats/{atsAccountId}/jobs/{atsJobId}:
    get:
      tags:
        - Applicant Tracking System
      summary: Get an ATS Account Job for ATS Account Id
      operationId: ApplicantTrackingSystem_getJobByJobId
      description: 'Data Access: View ATS Account Job by ATS Job Id'
      parameters:
        - description: >-
            Paycor Legal Entity ID of the legal entity for which you want to get
            the ATS account job
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: ATS account ID of for which you want to get the ATS account job
          name: atsAccountId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          x-position: 2
        - description: ATS Job ID
          name: atsJobId
          in: path
          required: true
          schema:
            type: string
            nullable: true
          x-position: 3
        - description: >-
            Options to include more data: All, Hiring managers, Recruiters, Team
            members, Executives
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes2'
          x-position: 4
      responses:
        '200':
          description: Returns an Account job for an ATS Account Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalEntities/{legalEntityId}/ats/accounts:
    get:
      tags:
        - Applicant Tracking System
      summary: Get a list of ATS Accounts for Legal Entity
      operationId: ApplicantTrackingSystem_listAtsAccountsByLegalEntity
      description: 'Data Access: View ATS Accounts By Legal Entity Id'
      parameters:
        - description: >-
            Paycor Legal Entity ID of the legal entity for which you want to get
            the ATS accounts
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns a list of ATS Accounts for Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfATSAccount'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/emergencycontact:
    post:
      tags:
        - Employee Emergency Contact
      operationId: EmployeeEmergencyContact_createUpdate
      description: |-
        Either Home Phone, Work Phone or Mobile Phone must be specified

        Data Access: Create Emergency Contact
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        x-name: emergencyContactPost
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContact'
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/certifications:
    get:
      tags:
        - Employee Certifications
      summary: Get a list of Employee Certifications for an employee
      operationId: EmployeeCertifications_listByEmployeeId
      description: 'Data Access: View Certification Information for Employee'
      parameters:
        - description: ID of the employee for which you want to get the certifications
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns a list of Employee Certifications for an employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeCertification'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Certifications
      summary: Update Employee Certification
      operationId: EmployeeCertifications_updateCertification
      description: 'Data Access: Create and Update Certification'
      parameters:
        - description: ID of the employee for which you want to update the certifications
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        x-name: certification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCertification2'
        required: true
        x-position: 2
      responses:
        '200':
          description: Returns a resource reference for employee certifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee Certifications
      summary: Add Employee Certification
      operationId: EmployeeCertifications_addNewCertification
      description: 'Data Access: Create and Update Certification'
      parameters:
        - description: ID of an Employee for whom you want to add the certification
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Certification object
        x-name: certification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certification'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/customfields:
    get:
      tags:
        - Employee Custom Fields
      summary: Get Employee Custom Fields by EmployeeID
      operationId: EmployeeCustomFields_getByEmployeeId
      description: 'Data Access: View Employee Custom Fields'
      parameters:
        - description: ID of the employee for whom you want to get the custom fields
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Token to get the next set of employee custom fields
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of employee custom fields based on EmployeeID
            provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeCustomField'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Custom Fields
      summary: Update Custom Field by EmployeeID
      operationId: EmployeeCustomFields_updateByEmployeeId
      description: 'Data Access: Update Employee Custom Fields'
      parameters:
        - description: ID of an Employee for whom you want to update the custom field
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: CustomFields object
        x-name: customFields
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/EmployeeCustomFieldsUpdateByEmployeeIdRequest
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/deductions/{employeeDeductionId}:
    get:
      tags:
        - Employee Deductions
      summary: Get Employee Deduction by EmployeeID and EmployeeDeductionID
      operationId: EmployeeDeductions_getByEmployeeIdAndDeductionId
      description: 'Data Access: View Employee Deduction Information'
      parameters:
        - description: ID of an Employee for whom you want to get the deduction.
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: ID of the Employee Deduction you want to get.
          name: employeeDeductionId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
        - description: |-
            Options to include more data: All, AmountData

            Data Access required

            AmountData = View Employee Deduction Amounts
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes3'
          x-position: 3
      responses:
        '200':
          description: >-
            Returns an Employee Deduction based on the EmployeeID and
            DeductionID provided. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDeduction'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/deductions:
    get:
      tags:
        - Employee Deductions
      summary: Get Employee Deductions by EmployeeID
      operationId: EmployeeDeductions_getByEmployeeId
      description: 'Data Access: View Employee Deductions Information'
      parameters:
        - description: ID of the employee for whom you want to get the deductions
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: |-
            Options to include more data: All, AmountData

            Data Access required

            AmountData = View Employee Deductions Amounts
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes4'
          x-position: 2
        - description: Token to get the next set of employee earnings
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: >-
            Returns a collection of employee deductions based on EmployeeID
            provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeDeduction'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee Deductions
      summary: Add Deduction to Employee
      operationId: EmployeeDeductions_addDeductionToEmployee
      description: >-
        Tip: first call "Get Legal Entity Deductions by Legal Entity ID" to get
        the valid Deduction Codes


        Data Access: Add Employee Deduction
      parameters:
        - description: ID of an Employee for whom you want to add the deduction
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: EmployeeDeduction object
        x-name: employeeDeduction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDeduction2'
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionsAddDeductionToEmployeeResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Deductions
      summary: Update Employee Deduction by EmployeeID
      operationId: EmployeeDeductions_updateByEmployeeId
      description: 'Data Access: Update Employee Deduction'
      parameters:
        - description: ID of an Employee that has the Deduction you wish to update
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: EmployeeDeduction with ID set and fields updated
        x-name: employeeDeduction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDeduction3'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/HSAaccounts:
    get:
      tags:
        - Employee Direct Deposits
      summary: Get Employee HSA Direct Deposits by EmployeeID
      operationId: EmployeeDirectDeposits_getByEmployeeIdHSA
      description: 'Data Access: View Employee HSA Account Information'
      parameters:
        - description: ID of employee for whom you want to get HSA Direct Deposits
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Token to get next set of HSA Direct Deposits
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns HSA Direct Deposits based on EmployeeID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeDirectDeposit'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee Direct Deposits
      summary: Add Employee HSA Direct Deposits by EmployeeID
      operationId: EmployeeDirectDeposits_addByEmployeeIdHsa
      description: 'Data Access: Add Employee HSA Account'
      parameters:
        - description: ID of employee for which you want to add HSA Direct Deposits
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: HSA Direct Deposit object to insert
        x-name: employeeDirectDeposit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHsaDirectDeposit'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Direct Deposits
      summary: Update Employee HSA Direct Deposits by EmployeeID
      operationId: EmployeeDirectDeposits_updateHsaDirectDepositsByEmployeeId
      description: 'Data Access: Update Employee HSA Account Information'
      parameters:
        - description: ID of employee for which you want to update HSA Direct Deposits
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: HSA Employee Direct Deposit object with updated fields
        x-name: employeeDirectDeposit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHsaDirectDeposit2'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/DirectDeposits:
    post:
      tags:
        - Employee Direct Deposits
      summary: Add Employee Direct Deposits by EmployeeID
      operationId: EmployeeDirectDeposits_addByEmployeeId
      description: 'Data Access: Add Employee Direct Deposit'
      parameters:
        - description: Id of employee for which you want to add Direct Deposits
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Direct Deposit object to insert
        x-name: employeeDirectDeposit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDirectDeposit2'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    get:
      tags:
        - Employee Direct Deposits
      summary: Get Employee Direct Deposits by EmployeeID
      operationId: EmployeeDirectDeposits_getByEmployeeId
      description: 'Data Access: View Employee Direct Deposit Information by Employee Id'
      parameters:
        - description: ID of employee for which you want to get Direct Deposits
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Token to get next set of direct deposits
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns Direct Deposits based on EmployeeID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeDirectDeposit'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Direct Deposits
      summary: Update Employee Direct Deposits by EmployeeID
      operationId: EmployeeDirectDeposits_updateByEmployeeIdDDD
      description: 'Data Access: Update Employee Direct Deposit Information'
      parameters:
        - description: ID of employee for which you want to update Direct Deposit
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Employee Direct Deposit object with updated fields
        x-name: employeeDirectDeposit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDirectDeposit3'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/DirectDeposits/{directDepositId}:
    get:
      tags:
        - Employee Direct Deposits
      summary: Get Employee Direct Deposit by EmployeeID and DirectDepositID
      operationId: EmployeeDirectDeposits_getByEmployeeAndDepositId
      description: >-
        Data Access: View Employee Direct Deposit Information by Direct Deposit
        Id
      parameters:
        - description: ID of employee for which you want to get Direct Deposits
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: ID of an employee direct deposit which you want to retrieve
          name: directDepositId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: Returns Direct Deposits based on EmployeeID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDirectDeposit'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/paystubDocumentData:
    get:
      tags:
        - Employee Documents
      summary: Get Employee Pay Stubs document link by EmployeeID
      operationId: EmployeeDocuments_getPayStubDocumentByEmployeeId
      description: |-
        Start Date and End Date are required parameters.

        Data Access: Get Employee Pay Stub Document Link
      parameters:
        - description: >-
            ID of an Employee for whom you want to get the Pay Stubs Document
            Link
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Date that is earlier or equal to paycheck date
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date that is after or equal to paycheck date
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 3
        - description: Token to get the next set of Employee Pay Stubs Document Links
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Returns a Employee Pay Stubs document link based on EmployeeID and
            date provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayStubFile'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/PayStubDocument/{documentId}:
    get:
      tags:
        - Employee Documents
      summary: Download Employee Pay Stub Document
      operationId: EmployeeDocuments_downloadPayStub
      description: 'Data Access: Download Employee Pay Stub Document'
      parameters:
        - description: Id of an Employee for whom you want to get the Pay Stub Document
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Id of Pay Stub Document
          name: documentId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: Returns Pay Stub Document that can be downloaded
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/EmployeeDocumentsDownloadPayStubResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/earnings/{employeeEarningId}:
    get:
      tags:
        - Employee Earnings
      summary: Get Employee Earning by EmployeeID and EmployeeEarningID
      operationId: EmployeeEarnings_getByEmployeeAndEarning
      description: 'Data Access: View Employee Earning Information'
      parameters:
        - description: ID of an Employee for whom you want to get the Earning
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: ID of an Employee Earning you want to get
          name: employeeEarningId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
        - description: |-
            Options to include more data: All, AmountData

            Data Access required

            AmountData = View Employee Earning Amounts
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes5'
          x-position: 3
      responses:
        '200':
          description: >-
            Returns an Employee Earning based on the EmployeeID and
            EmployeeEarningID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeEarning'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/earnings:
    get:
      tags:
        - Employee Earnings
      summary: Get Employee Earnings by EmployeeID
      operationId: EmployeeEarnings_getByEmployeeId
      description: 'Data Access: View Employee Earnings Information'
      parameters:
        - description: ID of an Employee for whom you want to get the Earnings
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: |-
            Options to include more data: All, AmountData

            Data Access required

            AmountData = View Employee Earnings Amounts
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes6'
          x-position: 2
        - description: Token to get the next set of Employee Earnings
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: >-
            Returns a collection of Employee Earnings based on EmployeeID
            provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeEarning'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee Earnings
      summary: Add Earning to Employee
      operationId: EmployeeEarnings_addNewEarning
      description: 'Data Access: Add Employee Earning'
      parameters:
        - description: ID of an Employee for whom you want to add an Earning
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Employee Earning object to insert
        x-name: employeeEarning
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEarning2'
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Earnings
      summary: Update Employee Earning
      operationId: EmployeeEarnings_updateData
      description: 'Data Access: Update Employee Earning'
      parameters:
        - description: ID of an Employee that has the Earning you wish to update
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Employee Earning object with updated fields
        x-name: employeeEarning
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEarning3'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/payrollhours:
    post:
      tags:
        - Employee Payroll Hours
      summary: Add Employee Hours And Earnings To Paygrid
      operationId: EmployeePayrollHours_addHoursAndEarningsToPaygrid
      description: >-
        Required parameters in body are: IntegrationVendor, ProcessId,
        LegalEntityId, EmployeeNumber, DepartmentCode, EarningCode,
        BusinessStartDate


        Data Access: Import Employee Hours and Earnings to Paygrid
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to set employee hours and
            earnings
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: >-
            If "True" is passed for this query parameter and a matching
            ProcessID is passed, then the system will fully replace the entire
            record that was previously added.
          name: replaceData
          in: query
          schema:
            type: boolean
          x-position: 3
        - description: >-
            If "True" is passed for this query parameter, then the system will
            NOT replace any record that was previously added.
          name: appendData
          in: query
          schema:
            type: boolean
          x-position: 4
      requestBody:
        x-name: importPayrollHours
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportPayrollHours'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeePayrollHoursAddHoursAndEarningsToPaygridResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/payrollhours:
    post:
      tags:
        - Employee Payroll Hours
      summary: Import Payroll Hours to Employee
      operationId: EmployeePayrollHours_importToEmployee
      description: 'Data Access: Import Payroll Hours to Employee'
      parameters:
        - description: ID of an Employee for whom you want to add the payroll hours
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Employee Hours object
        x-name: employeePayrollHours
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeCard2'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeePayrollHoursImportToEmployeeResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/I9Verification:
    get:
      tags:
        - Employee I9 Verification
      summary: Get Employee I9 Verification by EmployeeID
      operationId: EmployeeI9Verification_getByEmployeeId
      description: 'Data Access: View I9 Verification'
      parameters:
        - description: ID of the employee for whom you want to get the I9 information
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: 'Options to include more data: documents'
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes7'
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a list of employee I9 verification docs based on EmployeeID
            provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/I9Verification'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee I9 Verification
      summary: Update I9 Verification by EmployeeID
      operationId: EmployeeI9Verification_updateByEmployeeIdI9Verification
      description: 'Data Access: Edit I9 Verification'
      parameters:
        - description: ID of an Employee for whom you want to update the I9 Verification
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: I9 Verification object
        x-name: i9Verification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I9Verification2'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/payrates:
    get:
      tags:
        - Employee Pay Rates
      summary: Get Employee Payrates by EmployeeID
      operationId: EmployeePayRates_getByEmployeeId
      description: 'Data Access: View Employee Payrates'
      parameters:
        - description: ID of employee for which you want to get payrates
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Token to get next set of payrates
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns payrates based on EmployeeID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeePayRate'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee Pay Rates
      summary: Add Payrate to Employee
      operationId: EmployeePayRates_addNewRate
      description: >-
        This immediately creates a new payrate related to an Employee in
        Paycor's system. There is no way to undo or reverse this operation. 


        Data Access: Create Employee PayRates

        Sequence numbers must be consecutive and unique
      parameters:
        - description: ID of the Employee you wish to create the payrate for
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Create Payrate model
        x-name: payRatePost
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayRate2'
        required: true
        x-position: 2
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/payrates/{payrateId}:
    put:
      tags:
        - Employee Pay Rates
      summary: Update Employee Payrate by EmployeeID
      operationId: EmployeePayRates_updateByEmployeeIdAndPayrateId
      description: 'Data Access: Update Employee PayRates'
      parameters:
        - description: ID of an Employee that has the Payrate you wish to update
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: ID of the Payrate you wish to update
          name: payrateId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      requestBody:
        description: EmployeePayRate with ID set and fields updated
        x-name: employeePayRate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayRate3'
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/payschedule:
    get:
      tags:
        - Employee Pay Schedule
      summary: Get Employee Pay Schedule by EmployeeID
      operationId: EmployeePaySchedule_getUpcomingCheckDates
      description: >-
        This API will return upcoming pay scheduled for a given employee
        (upcoming check dates),

        or allow looking up the check date for specific pay period dates.

        * You must either specify the exact Period Start & End Date, or leave
        them blank. 
          * Alternatively you may consider 'GET Legal Entity Pay Schedule' which takes a range parameter.
          * You can look up pay period dates from 'GET Legal Entity Pay Schedule' (scheduled dates) or 'GET Legal Entity Pay Data' (actual dates)
        * The actual pay dates may change depending on when the client admin
        processes payroll.


        Data Access: View Employee Pay Schedule
      parameters:
        - description: ID of the Employee for which you want to get the Pay Schedule
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: 'Exact Period Start Date of Pay Schedule, to lookup specific payrun. '
          name: periodStartDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - description: >-
            Exact Period End Date of Pay Schedule, if you wish to filter -
            defaults to showing upcoming (future) runs
          name: periodEndDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
        - description: Token to get the next set of Employee Pay Schedule
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
        - description: 'Options to include more data: Additional Runs'
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes8'
          x-position: 5
      responses:
        '200':
          description: >-
            Returns a collection of Employee's Pay Schedules based on EmployeeID
            and filters provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayPeriod'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/paystubs:
    get:
      tags:
        - Employee Pay Stubs
      summary: Get Employee Pay Stubs by EmployeeID
      operationId: EmployeePayStubs_getByEmployeeId
      description: >-
        Note: Either CheckDate, ProcessDate or PlannerId is required as a
        parameter. You can find a list of valid dates by calling 'GET Legal
        Entity Pay Data by Legal Entity ID'.


        Data Access: View Paystub Information
      parameters:
        - description: ID of an Employee for whom you want to get the Pay Stubs
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Check Date of Pay Stubs - required (unless processDate supplied)
          name: checkDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - description: Process Date of Pay Stubs - required (unless checkDate supplied)
          name: processDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
        - description: ID of the Planner for which you want to get the Pay Stubs.
          name: plannerId
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
        - description: >-
            Options to include more data: All, GrossAmount, NetAmount, Earnings,
            Taxes, Deductions


            Data Access required


            GrossAmount = View Paystub Gross Pay Information


            NetAmount = View Paystub Net Pay Information


            Earnings = View Paystub Earning Information


            Taxes = View Paystub Tax Information


            Deductions = View Paystub Deduction Information
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes9'
          x-position: 5
        - description: Token to get the next set of Employee Pay Stubs
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 6
      responses:
        '200':
          description: >-
            Returns a collection of Employee Pay Stubs based on EmployeeID and
            date provided, with properties populated based on Include parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayStub'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/paystubs:
    get:
      tags:
        - Employee Pay Stubs
      summary: Get Employee Pay Stubs by Legal Entity ID
      operationId: EmployeePayStubs_getByLegalEntity
      description: >-
        Note: Either CheckDate, ProcessDate or PlannerId is required as a
        parameter.


        Data Access: View Paystub Information by Legal Entity Id
      parameters:
        - description: ID of a Legal entity for which you want to get the Pay Stubs
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: Check Date of Pay Stubs - required (unless processDate supplied)
          name: checkDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - description: Process Date of Pay Stubs - required (unless checkDate supplied)
          name: processDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
        - description: ID of the Planner for which you want to get the Pay Stubs.
          name: plannerId
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
        - description: >-
            Options to include more data: All, GrossAmount, NetAmount, Earnings,
            Taxes, Deductions


            Data Access required


            GrossAmount = View Paystub Gross Pay Information


            NetAmount = View Paystub Net Pay Information


            Earnings = View Paystub Earning Information


            Taxes = View Paystub Tax Information


            Deductions = View Paystub Deduction Information
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes10'
          x-position: 5
        - description: Token to get the next set of Employee Pay Stubs
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 6
      responses:
        '200':
          description: >-
            Returns a collection of Employee Pay Stubs based on Legal Entity ID
            and date provided, with properties populated based on Include
            parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayStub2'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/paystubsytd:
    get:
      tags:
        - Employee Pay Stubs
      summary: Get Employee Pay Stubs YTD by EmployeeID
      operationId: EmployeePayStubs_getYtdByEmployeeId
      description: >-
        * To Check Date is required parameter.  

        * To get a list of check dates, you can use the GET Legal Entity Pay
        data endpoint.


        Data Access: View Paystub Information YTD
      parameters:
        - description: ID of an Employee for whom you want to get the Pay Stubs
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: 'Check Date of latest Pay Stub for YTD data. '
          name: toCheckDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: |-
            Options to include more data: All, Earnings, Taxes, Deductions

            Data Access required

            Earnings = View Paystub Earning Information YTD

            Taxes = View Paystub Tax Information YTD

            Deductions = View Paystub Deduction Information YTD
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes11'
          x-position: 3
      responses:
        '200':
          description: >-
            Returns a Employee Pay Stubs based on EmployeeID and date provided,
            with properties populated based on Include parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStubHistory'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/paystubsytd:
    get:
      tags:
        - Employee Pay Stubs
      summary: Get Employee Pay Stubs YTD by Legal entity ID
      operationId: EmployeePayStubs_getYtdByLegalEntity
      description: >-
        * To Check Date is required parameter.  

        * To get a list of check dates, you can use the GET Legal Entity Pay
        data endpoint.


        Data Access: View Paystub Information YTD By Legal Entity
      parameters:
        - description: ID of a Legal entity for which you want to get the Pay Stubs
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: 'Check Date of latest Pay Stub for YTD data. '
          name: toCheckDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: |-
            Options to include more data: All, Earnings, Taxes, Deductions

            Data Access required

            Earnings = View Paystub Earning Information YTD By Legal Entity

            Taxes = View Paystub Tax Information YTD By Legal Entity

            Deductions = View Paystub Deduction Information YTD By Legal Entity
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes12'
          x-position: 3
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Returns a Employee Pay Stubs based on Legal Entity ID and date
            provided, with properties populated based on Include parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeePayStubHistory'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/schedules:
    get:
      tags:
        - Employee (Legacy / Perform Time) Schedules
      summary: Get Employee Schedules by EmployeeID
      operationId: EmployeeLegacyPerformTimeSchedules_getByEmployeeId
      description: |-
        Date requirements:
        * Start Date and End Date must not be more than one year ago
        * Start Date must not be in future
        * Start date and end date range can be no greater than 90 days

        Data Access: View Legacy/Perform Employee Schedules by Employee Id
      parameters:
        - description: ID of employee for which you want to get schedules
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Date range filter, showing which records to return
          name: startDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date range filter, showing which records to return
          name: endDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 3
      responses:
        '200':
          description: >-
            Collection of Employee Schedules, based on EmployeeID and provided
            date ranges
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeLegacyPerformTimeSchedulesGetByEmployeeIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee (Legacy / Perform Time) Schedules
      summary: Add Schedule to Employee
      operationId: EmployeeLegacyPerformTimeSchedules_addToEmployee
      description: 'Data Access: Create Legacy/Perform Time Employee Schedule'
      parameters:
        - description: ID of an Employee for whom you want to add a schedule
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: Employee Schedule object to insert
        x-name: employeeSchedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule2'
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalEntities/{legalEntityId}/schedules:
    get:
      tags:
        - Employee (Legacy / Perform Time) Schedules
      summary: Get Employee Schedules by Legal Entity ID
      operationId: EmployeeLegacyPerformTimeSchedules_getByLegalEntityId
      description: |-
        Date requirements:
        * Start Date and End Date must not be more than one year ago
        * Start Date must not be in future
        * Start date and end date range can be no greater than 90 days

        Data Access: View Legacy/Perform Employee Schedules by Legal Entity Id
      parameters:
        - description: ID of Legal Entity for which you want to get schedules
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: Date range filter, showing which records to return
          name: startDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date range filter, showing which records to return
          name: endDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 3
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Collection of Employee Schedules, based on Legal Entity ID and
            provided date ranges
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeSchedule'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/schedules/{scheduleId}:
    delete:
      tags:
        - Employee (Legacy / Perform Time) Schedules
      summary: Delete Employee Schedule
      operationId: EmployeeLegacyPerformTimeSchedules_deleteLegacySchedule
      description: 'Data Access: Delete Legacy/Perform Time Employee Schedule'
      parameters:
        - description: Employee ID of the schedule record you want to delete
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Schedule ID to delete
          name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '204':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/SchedulingJobs:
    get:
      tags:
        - Employee Scheduling
      summary: Get Scheduling Jobs by LegalEntityID
      operationId: EmployeeScheduling_getSchedulingJobsByLegalEntityId
      description: 'Data Access: View Legal Entity Scheduling Jobs'
      parameters:
        - description: Legal Entity ID
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Collection of Legal Entity Scheduling Jobs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSchedulingJob'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}:
    get:
      tags:
        - Employees
      summary: Get Employee by EmployeeID
      operationId: Employees_getByEmployeeId
      description: >-
        Tip: you can retrieve a valid EmployeeID guid via endpoints like 'Get
        Employees by Legal Entity ID'
                    
        Data Access: View Employee Information
      parameters:
        - description: ID of the Employee you want to get
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: >-
            Options to include more data: All, EmploymentDates, Status,
            Position, WorkLocation
                        
            Data Access required
                        
            EmploymentDates = View Employee Employment Dates
                        
            Status = View Employee Status
                        
            Position = View Employee Position
                        
            WorkLocation = View Employee Work Location
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes13'
          x-position: 2
        - description: >-
            Options to specify which emaill address to return. Work email type
            will be returned if none are specified: Home, Work
          name: emailType
          in: query
          schema:
            nullable: true
            $ref: '#/components/schemas/EmailTypeOptions'
          x-position: 3
      responses:
        '200':
          description: >-
            Returns an Employee object based on the EmployeeID, with some fields
            populated based on the Include parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeReturnItem'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employees
      summary: Update Employee Contact
      operationId: Employees_updateContact
      description: >-
        This immediately updates an employee's contact information and
        associated Person's in Paycor's system.
                    
        Data Access: Update Employee Contact
      parameters:
        - description: Id of the employee
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      requestBody:
        description: Put Employee Contact model
        x-name: employeePut
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeContact'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/tenants/{tenantId}/employees:
    get:
      tags:
        - Employees
      summary: Get Employees By TenantID
      operationId: Employees_listByTenantId
      description: 'Data Access: View Tenant Employees'
      parameters:
        - description: ID of the tenant for which you want to get employees
          name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Option to filter by employment status
          name: statusFilter
          in: query
          schema:
            $ref: '#/components/schemas/EmploymentStatus'
          x-position: 2
        - description: Option to filter by Employee Number.
          name: employeeNumber
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 3
        - description: Option to filter by Employee Last Name.
          name: lastName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 4
        - description: Option to filter by Department Code.
          name: departmentCode
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
          x-position: 5
        - description: Option to filter by Work Location Name.
          name: workLocationName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 6
        - description: Option to filter by Job Code.
          name: jobCode
          in: query
          schema:
            type: string
            nullable: true
          x-position: 7
        - description: Token to get the next set of employees
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 8
      responses:
        '200':
          description: >-
            Returns a collection of EmployeeList (with a subset of Employee
            fields) objects based on the TenantID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeList'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/employees:
    get:
      tags:
        - Employees
      summary: Get Employees by Legal Entity ID
      operationId: Employees_listByLegalEntityId
      description: 'Data Access: View Legal Entity Employees'
      parameters:
        - description: ID of the legal entity for which you want to get employees
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: >-
            Options to include more data: All, EmploymentDates, Status,
            Position, WorkLocation
                        
            Data Access required
                        
            EmploymentDates = View Legal Entity Employees Employment Dates
                        
            Status = View Legal Entity Employees Status
                        
            Position = View Legal Entity Employees Position
                        
            WorkLocation = View Legal Entity Employees Work Location
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes14'
          x-position: 2
        - description: >-
            Options to specify which email address to return. Work email type
            will be returned if none are specified: Home, Work
          name: emailType
          in: query
          schema:
            nullable: true
            $ref: '#/components/schemas/EmailTypeOptions2'
          x-position: 3
        - description: Option to filter by employment status.
          name: statusFilter
          in: query
          schema:
            $ref: '#/components/schemas/EmploymentStatus'
          x-position: 4
        - description: Option to filter by Employee Number.
          name: employeeNumber
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 5
        - description: Option to filter by Employee Last Name.
          name: lastName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 6
        - description: Option to filter by Department Code.
          name: departmentCode
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
          x-position: 7
        - description: Option to filter by Work Location Name.
          name: workLocationName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 8
        - description: Token to get the next set of employees
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 9
      responses:
        '200':
          description: >-
            Returns Employee objects based on the Legal Entity ID & Include
            parameter provided.
                        
            This endpoint returns all Employee details (based on the Include
            parameter) except for SSN, DOB, and Emergency Contact. Those fields
            are not currently available in bulk.

            Returns 200 records per page to allow for ease of use for larger
            clients.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeReturnItem'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees:
    post:
      tags:
        - Employees
      summary: Create Employee
      operationId: Employees_createNewEmployee
      description: >-
        This immediately "hires" a new employee and associated Person in
        Paycor's system. There is no way to undo or reverse this operation.

        After creating an employee, please wait sixty seconds before using
        employeeId to call other endpoints.
                    
        Data Access: Create Employee
      requestBody:
        description: Create Employee model
        x-name: employeePost
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee2'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/positionandstatus:
    put:
      tags:
        - Employees
      summary: Update Employee Position and Status data
      operationId: Employees_updatePositionAndStatusData
      description: |-
        This endpoint updates an employee's status and position information.
                    
        Data Access: Update Employee Position And Status
      parameters:
        - description: Id of the employee
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      requestBody:
        description: Put Employee Position and Status model
        x-name: employeeUpdateData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePositionAndStatus'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/position:
    put:
      tags:
        - Employees
      summary: Update Employee Position data
      operationId: Employees_updatePositionData
      description: |-
        This endpoint updates an employee's position information.
                    
        Data Access: Update Employee Position
      parameters:
        - description: Id of the employee
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      requestBody:
        description: Put Employee Position model
        x-name: employeePositionData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePosition'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/status:
    put:
      tags:
        - Employees
      summary: Update Employee Status data
      operationId: Employees_updateStatusData
      description: |-
        This endpoint updates an employee status information.
                    
        Data Access: Update Employee Status Data
      parameters:
        - description: Id of the employee
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      requestBody:
        description: Put Employee Status model
        x-name: employeeStatusData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeStatusUpdate'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/identifyingdata:
    put:
      tags:
        - Employees
      summary: Update Employee Personal data
      operationId: Employees_updatePersonalData
      description: |-
        This endpoint updates an employee's personal information.
                    
        Data Access: Update Employee Identifying Data
      parameters:
        - description: Id of the employee
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      requestBody:
        description: Put Employee Identifying data model
        x-name: employeeIdentifyingData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIdentifyingData'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/employeesIdentifyingData:
    get:
      tags:
        - Employees
      summary: GET Identifying Employee Data by Legal Entity Id
      operationId: Employees_getIdentifyingData
      description: |-
        Data Access: View Legal Entity Employees Identifying Data
                    
        Optional Data Access: View Legal Entity Employees SSN and BirthDate
      parameters:
        - description: ID of the legal entity for which you want to get employees
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: 'Options to filter employees by employment status: Active, Inactive'
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes15'
          x-position: 2
        - description: Token to get the next set of data
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: Returns Employee Identifying data objects for the Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeesIdentifyingData'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/Paygroup:
    put:
      tags:
        - Employees
      summary: Update Employee Paygroup
      operationId: Employees_updatePaygroup
      description: |-
        This endpoint updates an employee's paygroup.
                    
        Data Access: Update Employee Paygroup
      parameters:
        - description: Id of the employee
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: >-
            ID of the Paygroup for whom you want to get the Pay Schedule.
            Available via 'GET Legal Entity Pay Groups'
          name: payGroupId
          in: query
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/onboarding:
    post:
      tags:
        - Employee Onboarding
      summary: Create Employee Onboarding
      operationId: EmployeeOnboarding_addNewEntry
      description: |-
        This will allow partners to add a new employee entry for pending hire

        Data Access: Create Employee Onboarding
      requestBody:
        x-name: simpleHire
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleHire'
        required: true
        x-position: 1
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/onboardingemployees:
    get:
      tags:
        - Employee Onboarding
      summary: Get employees in the onboarding state
      operationId: EmployeeOnboarding_listOnboardingEmployees
      description: >-
        This endpoint allows partners to see the employees in the onboarding
        state.


        Data Access: View Legal Entity Onboarding Employees
      parameters:
        - description: >-
            ID of the legal entity for which you want to get the employees in
            the onboarding state
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get next set of Onboarding Employee records
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns a paged list of Onboarding Employee items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOnboardingEmployee'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/taxes:
    get:
      tags:
        - Employee Taxes
      summary: Get Employee Taxes by EmployeeID
      operationId: EmployeeTaxes_getByEmployeeId
      description: 'Data Access: View Employee Taxes'
      parameters:
        - description: ID of the employee for whom you want to get the taxes
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: |-
            Options to include more data: All, TaxCredits

            Data Access required

            TaxCredits = View Employee Tax Credits
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes16'
          x-position: 2
        - description: Token to get the next set of employee taxes
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: Returns a collection of employee taxes based on EmployeeID provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeTax'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Employee Taxes
      summary: Add Tax by EmployeeID
      operationId: EmployeeTaxes_addByEmployeeId
      description: >-
        * Use GET Tax Fields by Tax Code to determine payload needed to complete
        this call


        Data Access: Create Employee Tax
      parameters:
        - description: ID of an Employee for whom you want to add the tax
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: EmployeeTax object
        x-name: employeeTax
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTax2'
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTaxesAddByEmployeeIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Employee Taxes
      summary: Update Tax by EmployeeID
      operationId: EmployeeTaxes_updateByEmployeeId
      description: >-
        * Use GET Tax Fields by Tax Code to determine payload needed to complete
        this call


        Data Access: Update Employee Tax
      parameters:
        - description: ID of an Employee for whom you want to update the tax
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
      requestBody:
        description: EmployeeTax object
        x-name: employeeTax
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTax3'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTaxesUpdateByEmployeeIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/taxes/filingStatus/{taxCode}:
    get:
      tags:
        - Employee Taxes
      summary: Get Filing Status by Tax Code
      operationId: EmployeeTaxes_getFilingStatusByTaxCode
      description: 'Data Access: View Filing Status by Tax Code'
      parameters:
        - description: >-
            You can retrieve a valid Tax Code via Get Legal Entity Taxes by
            Legal Entity ID
          name: taxCode
          in: path
          required: true
          schema:
            type: string
            nullable: true
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingStatus'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/taxes/taxFields/{taxCode}:
    get:
      tags:
        - Employee Taxes
      summary: Get Tax Fields by Tax Code
      operationId: EmployeeTaxes_getTaxFieldsByTaxCode
      description: >-
        * This endpoint will allow you to pass in a Tax Code and will return the
        fields that are expected to be passed for PUT/POST Employee Taxes

        * To get the Tax Codes available for your account to be used for this
        endpoint, use GET Legal Entity Taxes by Legal Entity ID


        Data Access: Get Tax Fields By Tax Code
      parameters:
        - description: You can retrieve a Tax fields by Tax Codes
          name: taxCode
          in: path
          required: true
          schema:
            type: string
            nullable: true
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalTaxForm'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalEntities/{legalEntityId}/punches:
    get:
      tags:
        - Employee Time Card Punches
      summary: Get Legal Entity Employees Time Card Punches by Legal Entity ID
      operationId: EmployeeTimeCardPunches_getByLegalEntityId
      description: >-
        This pulls Punches data from Paycor's Perform Time system, for one legal
        entity.

        * Clients *do not* need to run payroll before hours are returned by this
        endpoint.

        * Our Public API currently does not include whether the hours have
        already been Approved or not.

        * Time Card hours may be delayed by 20 minutes.


        Date requirements:

        * Start Date and End Date must not be more than one year ago

        * Start Date must not be in future

        * Start date and end date range can be no greater than 90 days


        Data Access: View Employee Time Card Punches By Legal Entity Id
      parameters:
        - description: ID of legal entity for which you want to get hours
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Date range filter, showing which records to return
          name: startDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date range filter, showing which records to return
          name: endDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 3
        - description: >-
            Token to get next set of Employee Time Cards. ContinuationToken
            would be valid only for 24 hours. If a call is made after 24 hours
            with old continuationToken, no data will be retrieved.
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Employee Time Card collection, based on Legal Entity Id and provided
            date ranges
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTimeCardV3'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/punches:
    get:
      tags:
        - Employee Time Card Punches
      summary: Get Legal Entity Employees Time Card Punches by Employee ID
      operationId: EmployeeTimeCardPunches_getByEmployeeId
      description: >-
        This pulls Punches data from Paycor's Perform Time system for one
        employee.

        * Clients *do not* need to run payroll before hours are returned by this
        endpoint.

        * Our Public API currently does not include whether the hours have
        already been Approved or not.

        * Time Card punches may be delayed by 20 minutes.


        Date requirements:

        * Start Date and End Date must not be more than one year ago

        * Start Date must not be in future

        * Start date and end date range can be no greater than 90 days


        Data Access: View Employee Time Card Punches
      parameters:
        - description: ID of employee for which you want to get hours
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Date range filter, showing which records to return
          name: startDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date range filter, showing which records to return
          name: endDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 3
        - description: >-
            Token to get next set of Employee Time Cards. ContinuationToken
            would be valid only for 24 hours. If a call is made after 24 hours
            with old continuationToken, no data will be retrieved.
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Employee Time Card collection, based on Legal Entity Id and provided
            date ranges
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTimeCardV3'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/timeoffaccruals:
    get:
      tags:
        - Employee Time Off Accruals
      summary: Get Employee Accruals by EmployeeID
      operationId: EmployeeTimeOffAccruals_getByEmployeeId
      description: 'Data Access: View Employee Timeoff Accruals by Employee Id'
      parameters:
        - description: ID of an Employee for whom you want to get the Balances
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Token to get the next set of Employee Balances
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of Employee Accrual Balances based on
            EmployeeID provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeBalance'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/timeoffaccruals:
    get:
      tags:
        - Employee Time Off Accruals
      summary: Get Employee Accruals by Legal Entity ID
      operationId: EmployeeTimeOffAccruals_getByLegalEntityId
      description: 'Data Access: View Employee Timeoff Accruals by Legal Entity Id'
      parameters:
        - description: Legal entity ID for which you want to get the balances
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: Token to get the next set of employee balances
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of Employee Accrual Balances based on legal
            entity ID provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeBalance'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/timeoffrequests:
    get:
      tags:
        - Time Off Requests
      summary: Get Employee Time Off Requests by EmployeeId
      operationId: TimeOffRequests_listByEmployeeId
      description: |-
        Date requirements:
        * Start Date and End Date must not be more than one year ago
        * Start date and end date range can be no greater than 90 days

        Data Access: View Timeoff Requests by Employee Id
      parameters:
        - description: ID of the Employee for which you want to get the Time Off Requests.
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: Date range filter, showing which records to return.
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date range filter, showing which records to return.
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 3
        - description: Token to get the next set of results.
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
          x-position: 4
      responses:
        '200':
          description: Returns a Time Off Requests for specific Employee.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeTimeOffRequest'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/events/mockevent:
    post:
      tags:
        - Events
      summary: Mock Event Notification
      operationId: Events_notifyEventDetails
      description: |-
        Following body attributes are optionally required:
        * ItemId is required when EventType is Employee.Modified
        * LegalEntityId is required when EventType is LegalEntity.Modified
      requestBody:
        description: Mock Event that user wants to trigger.
        x-name: mockEventRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
        required: true
        x-position: 1
      responses:
        '201':
          description: >-
            Returns the Event Notification Object that will be triggered by
            Paycor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/generalledger/legalentities/{legalEntityId}:
    get:
      tags:
        - General Ledger
      summary: Get General Ledger by Legal Entity ID
      operationId: GeneralLedger_getByLegalEntityId
      description: |-
        * Type of report can be Regular or Setup
            * Setup report returns only department number, company department number, account name, account number, itemize, and sort sequence all other values are set to null.
            * Regular report returns all data. 
        * Planner id is required if report type is set to regular

        Data Access: View General Ledger
      parameters:
        - description: >-
            ID of the legal entity for which you want to get the general ledger
            items
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of planner, required if report type is regular
          name: plannerId
          in: query
          schema:
            type: string
            format: guid
          x-position: 2
        - description: 'Type of General Ledger, Regular or Setup '
          name: reportType
          in: query
          schema:
            $ref: '#/components/schemas/GeneralLedgerReportType'
          x-position: 3
        - description: 'Options to include more data: EmployeeData'
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes17'
          x-position: 4
        - description: Token to get next set of General Ledger records
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 5
      responses:
        '200':
          description: Returns a paged list of General Ledger items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfGeneralLedger'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/generalledger/jobcosting/legalentities/{legalEntityId}:
    get:
      tags:
        - General Ledger Job Costing
      summary: Get General Ledger Job Costing by Legal Entity ID
      operationId: GeneralLedgerJobCosting_getByLegalEntityId
      description: 'Data Access: View General Ledger Job Costing'
      parameters:
        - description: >-
            ID of the legal entity for which you want to get the job costing
            items.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of planner.
          name: plannerId
          in: query
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
        - description: 'Options to include more data: EmployeeData'
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes18'
          x-position: 3
        - description: Token to get next set of Job Costing records.
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: Returns a paged list of JobCosting items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfJobCosting'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/laborcategories:
    get:
      tags:
        - Labor Categories
      summary: Get Labor Categories by Legal Entity ID
      operationId: LaborCategories_byLegalEntityIdGet
      description: >-
        To make this call you will need the Job Costing or Workforce Management
        Service.


        Data Access: View Labor Categories by Legal Entity Id
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get labor categories
            (also known as job categories)
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns list of Labor Category items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLaborCategories'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/laborcodes:
    post:
      tags:
        - Labor Codes
      summary: Add Labor Code to Legal Entity
      operationId: LaborCodes_addLaborCodeToLegalEntity
      description: >-
        This immediately creates a new labor code related to a Legal Entity in
        Paycor's system. There is no way to undo or reverse this operation.

        * Required body attributes:
            * LaborCategoryId
            * Code
            * LaborCodeName
            
        To make this call you will need the Job Costing or Workforce Management
        Service.


        Data Access: Create and Update Labor Codes
      parameters:
        - description: ID of the Legal Entity for which you want to create Labor Code
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: laborCode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborCode3'
        required: true
        x-position: 2
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    get:
      tags:
        - Labor Codes
      summary: Get Labor Code By Legal Entity ID
      operationId: LaborCodes_listByLegalEntityId
      description: >-
        Returns list of all Labor Code items. 

        * Labor code is not active if effective start date is after current date
        or if effective end date is before current date.


        To make this call you will need the Job Costing or Workforce Management
        Service.


        Data Access: View Labor Codes by Legal Entity Id
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get labor codes (also
            known as job codes)
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns list of all Labor Code items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLaborCode'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Labor Codes
      summary: Update Labor Code
      operationId: LaborCodes_updateSpecifiedLaborCode
      description: >-
        This operation updates specified labor code in Paycor's system.


        To make this call you will need the Job Costing or Workforce Management
        Service.


        LaborCodeId is required.


        Data Access: Create and Update Labor Codes
      parameters:
        - description: ID of the Legal Entity for which you want to update Labor Code
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: laborCode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborCode5'
        required: true
        x-position: 2
      responses:
        '200':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}:
    get:
      tags:
        - Legal Entities
      operationId: LegalEntities_getById
      parameters:
        - name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes19'
          x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/ActivatedLegalEntityTenantList:
    get:
      tags:
        - Legal Entities
      summary: Get Legal Entities/Tenants for the user logged in
      operationId: LegalEntities_getTenantList
      responses:
        '200':
          description: 'Returns list of Legal Entities/Tenant that user has access to '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/certificationOrganizations:
    get:
      tags:
        - Legal Entity Certifications
      summary: Get a list of Certification Organizations for a Legal Entity
      operationId: LegalEntityCertifications_listCertificationOrganizations
      description: 'Data Access: View Certification Organizations for Legal Entity'
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get the certification
            organizations
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of certification organizations
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns a list of Certification Organizations for a Legal Entity
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PagedResultOfTenantCertificationOrganization
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/certifications:
    get:
      tags:
        - Legal Entity Certifications
      summary: Get a list of Certifications for a Legal Entity
      operationId: LegalEntityCertifications_list
      description: >-
        Tip: you can retrieve a list of certiifcates via endpoints like 'Get
        Certificates by Legal Entity ID'


        Data Access: View Certification Information for Legal Entity
      parameters:
        - name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns a list of Certifications for a Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTenantCertification'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/deductions:
    get:
      tags:
        - Legal Entity Deductions
      summary: Get Legal Entity Deductions by Legal Entity ID
      operationId: LegalEntityDeductions_viewEmployeesData
      description: 'Data Access: View Legal Entity Employees'
      parameters:
        - description: ID of the Legal Entity for which you want to get the deductions
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of Legal Entity Deductions
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns Legal Entity Deductions based on the Legal Entity ID
            provided. Will also include any Tenant-level deductions. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLegalEntityDeduction'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/departments:
    get:
      tags:
        - Legal Entity Departments
      summary: Get Legal Entity Departments by Legal Entity ID
      operationId: LegalEntityDepartments_listByLegalEntityId
      description: 'Data Access: View Legal Entity Departments Information'
      parameters:
        - description: ID of the Legal Entity for which you want to get the Departments
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of Legal Entity Departments
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns Legal Entity Departments based on the Legal Entity ID
            provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfDepartment'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Legal Entity Departments
      summary: Create Departments by Legal Entity Id
      operationId: LegalEntityDepartments_createNewDepartment
      description: >-
        Creates new Department for a Legal Entity.

        * the newly created Department will take at least 60 seconds to
        propagate through the system


        Data Access: Create and Update Legal Entity Departments
      parameters:
        - description: ID of the Legal Entity for which you want to create the Departments
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        description: Create department model
        x-name: departmentData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department2'
        required: true
        x-position: 2
      responses:
        '200':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Legal Entity Departments
      summary: Update Legal Entity Department by Legal Entity ID
      operationId: LegalEntityDepartments_updateByLegalEntityId
      description: >-
        Updates existing Department for a Legal Entity.

        * The update of the Department will take at least 60 seconds to
        propagate through the system

        * When updating top level departments, payroll id should be used as
        parent id


        Data Access: Create and Update Legal Entity Departments
      parameters:
        - description: ID of the Legal Entity for which you want to update the Department
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        description: Update Department model
        x-name: putDepartmentRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department3'
        required: true
        x-position: 2
      responses:
        '200':
          description: Returns a resource reference of work location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfDepartment'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/departments/{departmentId}:
    get:
      tags:
        - Legal Entity Departments
      summary: Get Legal Entity Department by Legal Entity ID and Department ID
      operationId: LegalEntityDepartments_getById
      description: 'Data Access: View Legal Entity Departments by Department Id'
      parameters:
        - description: ID of the Legal Entity for which you want to get the Departments
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: ID of the Department
          name: departmentId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a Legal Entity Department based on the Legal Entity ID and
            Department ID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/earnings:
    get:
      tags:
        - Legal Entity Earnings
      operationId: LegalEntityEarnings_getByLegalEntityId
      parameters:
        - name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLegalEntityEarning'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/jobtitles:
    get:
      tags:
        - Legal Entity Job Titles
      summary: Get Job Titles by Legal Entity ID
      operationId: LegalEntityJobTitles_listByLegalEntityId
      description: >-
        Job Titles are configured at a Tenant level, unlike most other objects
        which are configured at a Legal Entity level.


        Data Access: View Legal Entity Job Titles
      parameters:
        - description: ID of the Legal Entity you want to get Job Titles.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of Job Titles
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns Job Titles based on the LegalEntityId provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTenantJobTitle'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/paydata:
    get:
      tags:
        - Legal Entity Pay Data
      summary: Get Legal Entity Pay Data by Legal Entity ID
      operationId: LegalEntityPayData_getPayDates
      description: >-
        This endpoint returns the dates that particular employees were actually
        paid.

        * You can retrieve all employees by not passing EmployeeId, or you can
        pass EmployeeId to filter.

        * The returned values (Check Date or Process Date) can be used as an
        input for GET Employee Pay Stubs.

        * Only dates from provided fromCheckDate and toCheckDate are used.

        * Requires exactly one filtering parameter to be passed in. Choose *one*
        of these three:
          * Check Date range: parameters fromCheckDate and toCheckDate
          * Process Date: the single date the payrun was processed.
          * PlannerID: You can retrieve your Planner ID by using the Legal Entity Payroll Processing Data endpoint.
        * Returns one object per pay date, even if there were multiple paychecks
        on that same date.

        * Does include Additional Payruns, which don't have to follow the
        schedule and can be used for bonuses.


        Data Access: View Paydata Information
      parameters:
        - description: ID of the Legal Entity for which you want to get the Pay Data
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: >-
            ID of an Employee, if you want to filter to paydata from a specific
            Employee
          name: employeeId
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
        - description: 'Filter Option 1: Date Range, From Check Date of Payrun'
          name: fromCheckDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
        - description: 'Filter Option 1: Date Range, To Check Date of Payrun'
          name: toCheckDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 4
        - description: 'Filter Option 2: Process Date of Payrun'
          name: processDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 5
        - description: >-
            Filter Option 3: ID of the Planner for which you want to get the Pay
            Data.
          name: plannerId
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 6
        - description: Token to get the next set of Legal Entity Pay Data
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 7
      responses:
        '200':
          description: >-
            Returns a collection of Legal Entity Pay Data based on Legal Entity
            ID, EmployeeID, and filter provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLegalEntityPayData'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/payGroups:
    get:
      tags:
        - Legal Entity Pay Groups
      summary: Get Pay Groups by Legal Entity ID
      operationId: LegalEntityPayGroups_listByLegalEntityId
      description: 'Data Access: View Legal Entity Pay Groups'
      parameters:
        - description: ID of the Legal Entity for which you want to get the Pay Groups
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: Token to get the next set of Legal Entity Pay Groups
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of the Pay Groups available for the Legal
            Entity ID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayGroup'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/payrollProcessing:
    get:
      tags:
        - Legal Entity Payroll Processing Data
      summary: GET Payroll Processing Data by Legal Entity
      operationId: LegalEntityPayrollProcessingData_getByLegalEntity
      description: |-
        * If fromCheckDate is not provided, current date will be used.

        Data Access: View Legal Entity Payroll Processing Data
      parameters:
        - description: ID of the Legal Entity for which you want to get the Pay Groups
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: 'Date range filter, From Check Date '
          name: fromCheckDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - description: Date range filter, To Check Date
          name: toCheckDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
        - description: Token to get the next set of Legal Entity Payroll Processing Data
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Returns a collection of the Pay Periods available for the Legal
            Entity ID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayPeriod2'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/payschedule:
    get:
      tags:
        - Legal Entity Pay Schedule
      summary: Get Legal Entity Pay Schedule by Legal Entity ID and Paygroup ID
      operationId: LegalEntityPaySchedule_getByLegalEntityAndPaygroup
      description: >-
        This returns the schedule of regularly-scheduled payruns for a given
        Paygroup and date range. 

        * Tip: first list the Paygroups within a Legal Entity using GET Legal
        Entity Pay Groups, in order to populate the payGroupId parameter

        * Tip: You can take the returned Check Dates or Process Dates and pass
        into Get Employee Pay Stubs by EmployeeID


        Note that query parameters PayGroupId, AsOfDate and UntilDate are
        required.


        Data Access: View Pay Schedule Information
      parameters:
        - description: ID of the Legal Entity for which you want to get the Pay Schedule
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: >-
            ID of the Paygroup for whom you want to get the Pay Schedule.
            Available via 'GET Legal Entity Pay Groups'
          name: payGroupId
          in: query
          schema:
            type: string
            format: guid
          x-position: 2
        - description: >-
            Acts as a 'start date' filter - looks for Payruns that are
            in-progress or unpaid as of this date
          name: asOfDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 3
        - description: >-
            Acts as an 'end date' filter - looks for Payruns that are
            in-progress or unpaid until this date
          name: untilDate
          in: query
          schema:
            type: string
            format: date-time
          x-position: 4
        - description: Token to get the next set of Legal Entity Pay Schedule
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 5
      responses:
        '200':
          description: >-
            Returns a collection of Legal Entity Pay Schedules (payrun period
            dates) based on parameters provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPayPeriod'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/activitytypes:
    get:
      tags:
        - Legal Entity Activity Types
      summary: Get Legal Entity Activity Types by Legal Entity ID
      operationId: LegalEntityActivityTypes_getByLegalEntityId
      parameters:
        - description: Legal Entity Id for whom you want to get the Activity Types
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of Activity Types based on the provided Legal
            Entity Id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfActivityType'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/schedulegroups:
    get:
      tags:
        - Legal Entity Schedule Groups
      summary: Get Schedules Groups for Legal Entity
      operationId: LegalEntityScheduleGroups_getByLegalEntityId
      description: 'Data Access: View Legal Entity Schedule Groups'
      parameters:
        - description: ID of the Legal Entity you want to get Schedule Groups
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: A token to get next set of results
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: A collection of Schedule Groups for the specified Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfScheduleGroup'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/services:
    get:
      tags:
        - Legal Entity Services
      summary: Get subscribed services for Legal Entity
      operationId: LegalEntityServices_getSubscribedServices
      description: 'Data Access: View Legal Entity Services'
      parameters:
        - description: >-
            ID of the Legal Entity you want to get (synonymous to Paycor's
            ClientID)
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
      responses:
        '200':
          description: A listing of services for the specified Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/statusReasons/{statusCategory}:
    get:
      tags:
        - Legal Entity Status Reason
      summary: Get Legal Entity Status Reason values
      operationId: LegalEntityStatusReason_getList
      description: 'Data Access: Legal Entity Status Reason'
      parameters:
        - description: >-
            ID of the legal entity for which you want to get the status reasons
            items
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Status category of status reasons.
          name: statusCategory
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StatusCategory2'
          x-position: 2
      responses:
        '200':
          description: Returns collection of status reasons by status category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityStatusReasonGetListResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/taxes:
    get:
      tags:
        - ' Legal Entity Taxes'
      summary: Get Legal Entity Taxes by Legal Entity ID
      operationId: LegalEntityTaxes_getByLegalEntityId
      description: 'Data access: View Legal Entity Taxes'
      parameters:
        - description: >-
            ID of the Legal Entity you want to get (synonymous to Paycor's
            ClientID) the taxes
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of Legal Entity taxes
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of the taxes available for the Legal Entity ID
            provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLegalEntityTax'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/CreatePunches:
    post:
      tags:
        - Legal Entity Time Data
      summary: Create Punches for Employee(s) under Legal Entity
      operationId: LegalEntityTimeData_createPunches
      description: 'Data access: Create Punches for Employee(s)'
      parameters:
        - description: >-
            ID of the Legal Entity for whose employees you want to create
            punches
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
      requestBody:
        x-name: employeePunch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalEntityTimeDataCreatePunchesRequest'
        required: true
        x-position: 2
      responses:
        '202':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/CreateHours:
    post:
      tags:
        - Legal Entity Time Data
      summary: Create Hours for Employee(s) under Legal Entity
      operationId: LegalEntityTimeData_createHoursForEmployee
      description: 'Data access: Create Hours for Employee(s)'
      parameters:
        - description: ID of the Legal Entity for whose employees you want to create hours
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
      requestBody:
        x-name: employeeHours
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/LegalEntityTimeDataCreateHoursForEmployeeRequest
        required: true
        x-position: 2
      responses:
        '202':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/punchErrorLog/{trackingId}:
    get:
      tags:
        - Legal Entity Time Data
      summary: Get Punch error logs by Legal Entity Id And Tracking Id
      operationId: LegalEntityTimeData_getPunchErrorLogs
      description: 'Data Access: View Punch Error log'
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get the Punch Error
            log.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Punch Create api failure result.
          name: trackingId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: Returns Punch Error log for specific Legal Entity and tracking ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPunchErrorLog'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/HourErrorLog/{trackingId}:
    get:
      tags:
        - Legal Entity Time Data
      summary: Get Employee Hour error logs by Legal Entity Id And Tracking Id
      operationId: LegalEntityTimeData_getHourErrorLog
      description: 'Data Access: View Hour Error log.'
      parameters:
        - description: ID of the Legal Entity for which you want to get the Hour Error log.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Hour Request Create api failure result.
          name: trackingId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
        - name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: Returns Hour Error log for specific Legal Entity and tracking ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfHourErrorLog'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/timeoffrequests:
    get:
      tags:
        - Time Off Requests
      summary: Get Employee Time Off Requests by Legal Entity Id
      operationId: TimeOffRequests_listByLegalEntityId
      description: |-
        Date requirements:
        * Start Date and End Date must not be more than one year ago
        * Start date and end date range can be no greater than 90 days

        Data Access: View Timeoff Requests by Legal Entity Id
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get the Time Off
            Requests.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Date range filter, showing which records to return.
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 2
        - description: Date range filter, showing which records to return.
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
          x-position: 3
        - description: Token to get the next set of results.
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 4
      responses:
        '200':
          description: >-
            Returns a collection of Time Off Requests of Employees for specific
            Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmployeeTimeOffRequest'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/timeoffRequests/{timeoffRequestId}:
    get:
      tags:
        - Time Off Requests
      summary: Get Employee Timeoff Request by Legal Entity Id And Timeoff Request Id
      operationId: TimeOffRequests_getTimeoffRequestById
      description: 'Data Access: View Timeoff Requests by Timeoff Request Id'
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get the Timeoff
            Request.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Employee Timeoff Request.
          name: timeoffRequestId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: Returns an Employee Timeoff Request for specific Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTimeOffRequest'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/timeOffRequestsErrorLog/{trackingId}:
    get:
      tags:
        - Time Off Requests
      summary: >-
        Get Employee Timeoff Request error logs by Legal Entity Id And Tracking
        Id
      operationId: TimeOffRequests_getErrorLogsByLegalEntityAndTracking
      description: >-
        Data Access: View Timeoff Requests Error log by Legal entity Id and
        Tracking Id
      parameters:
        - description: >-
            ID of the Legal Entity for which you want to get the Timeoff Request
            Error log.
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Timeoff Request Create api failure result.
          name: trackingId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: >-
            Returns Timeoff Request Error log for specific Legal Entity and
            tracking ID.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimeOffRequestsGetErrorLogsByLegalEntityAndTrackingResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/timeofftypes:
    get:
      tags:
        - Legal Entity Time Off Types
      summary: Get Legal Entity Time Off Types
      operationId: LegalEntityTimeOffTypes_viewTimeOffTypes
      description: 'Data Access: View Time Off Types'
      parameters:
        - description: ID of an Legal Entity for which you want to get the Time Off Types
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - description: Token to get the next set of results
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of Time Off Types based on Legal Entity Id
            provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTimeOffType'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/worklocations:
    get:
      tags:
        - Legal Entity Work Locations
      summary: Get a list of Work Locations for a Legal Entity
      operationId: LegalEntityWorkLocations_list
      description: 'Data Access: View Legal Entity Work Locations'
      parameters:
        - description: ID of the Legal Entity for which you want to get the work locations
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of work locations
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns a list of Work Locations for a Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLegalEntityWorkLocation'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    post:
      tags:
        - Legal Entity Work Locations
      summary: Add Work Location By Legal Entity ID
      operationId: LegalEntityWorkLocations_addByLegalEntityId
      description: 'Data Access: Create Legal Entity Work Location'
      parameters:
        - name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Use Physical Address as mailing address?
          name: addressData
          in: query
          schema:
            type: boolean
          x-position: 2
      requestBody:
        description: Create Work Location model
        x-name: workLocationPost
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkLocation'
        required: true
        x-position: 3
      responses:
        '201':
          description: Returns a CreateOrUpdateResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    put:
      tags:
        - Legal Entity Work Locations
      summary: Update Work Location By Legal Entity ID
      operationId: LegalEntityWorkLocations_updateByLegalEntityId
      description: 'Data Access: Update Legal Entity Work Location'
      parameters:
        - description: ID of the Legal Entity for which you want to get the work locations
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        description: Update Work Location model
        x-name: workLocationPut
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkLocation2'
        required: true
        x-position: 2
      responses:
        '201':
          description: Returns a resource reference for work location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/worklocations/{workLocationId}:
    delete:
      tags:
        - Legal Entity Work Locations
      summary: Delete Work Location By Work Location ID And Legal Entity ID
      operationId: LegalEntityWorkLocations_deleteByLegalEntityAndWorkLocationId
      description: 'Data Access: Delete Legal Entity Work Location'
      parameters:
        - description: ID of the Legal Entity for which you want to delete Work Location
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Work Location
          name: workLocationId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: Returns a Status Code only
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
    get:
      tags:
        - Legal Entity Work Locations
      summary: >-
        Get a Work Location for a Legal Entity By Legal Entity ID and Work
        Location ID
      operationId: LegalEntityWorkLocations_getByLegalEntityAndLocation
      description: 'Data Access: View Legal Entity Work Location'
      parameters:
        - description: ID of the Legal Entity for which you want to get the work location
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Work Location
          name: workLocationId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
      responses:
        '200':
          description: Returns Legal Entity Work Location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityWorkLocation'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalentities/{legalEntityId}/worksites:
    get:
      tags:
        - Legal Entity Work Sites
      summary: Get Work Sites for Legal Entity
      operationId: LegalEntityWorkSites_getByLegalEntityId
      description: 'Data Access: View Legal Entity Work Sites'
      parameters:
        - description: ID of the Legal Entity you want to get Work Sites
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: A token to get next set of results
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: A listing of services for the specified Legal Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfWorkSite'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/legalEntities/{legalEntityId}/persons:
    get:
      tags:
        - Persons
      summary: Get Persons by Legal Entity ID
      operationId: Persons_listByLegalEntityId
      description: 'Data Access: View Legal Entity Persons'
      parameters:
        - description: ID of the Legal Entity for which you want to get the persons
          name: legalEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: >-
            Options to include more data: All, Demographic, Benefit, Military,
            SocialMedia, Addresses, EmployeeAssignments, SocialSecurityNumber,
            Phones


            Data Access required


            Demographic = View Person Demographic Information


            Benefit = View Person Disability and Tobacco Status


            Military = View Person Military


            SocialMedia = View Person Social Media


            Addresses = View Person Addresses


            EmployeeAssignments = View Employee Records
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludesList
              wrapped: true
            items:
              xml:
                name: IncludesList
              $ref: '#/components/schemas/IncludesList'
          x-position: 2
        - description: Token to get the next set of persons
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 3
      responses:
        '200':
          description: >-
            Returns a collection of Person objects, based on the Legal Entity ID
            & Include provided.


            This endpoint returns all Person details (based on Include
            parameter) except for Emergency Contact. Those fields are not
            currently available in bulk.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPerson'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/tenants/{tenantId}/persons:
    get:
      tags:
        - Persons
      summary: Get Persons By TenantID
      operationId: Persons_listByTenantId
      description: |-
        PersonList provides a subset of the full Person fields.

        Data Access: View Tenant Persons
      parameters:
        - description: ID of the Tenant for which you want to get persons
          name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of persons
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: >-
            Returns a collection of PersonList (a subset of Person fields)
            objects, based on the TenantID provided. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonList'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/tenants/{tenantId}/persons/{personId}:
    get:
      tags:
        - Persons
      summary: Get Person By TenantID And PersonID
      operationId: Persons_getByTenantAndPerson
      description: |-
        Note that PersonID and TenantID must always be passed together.

        Data Access: View Person Information
      parameters:
        - description: ID of the Tenant that the Person is in
          name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: ID of the Person you want to get
          name: personId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 2
        - description: >-
            Options to include more data:  All, Demographic, Benefit, Military,
            SocialMedia, Addresses, EmployeeAssignments, EmergencyContact,
            SocialSecurityNumber, Phones


            Demographic = View Person Demographic Information


            Benefit = View Person Disability and Tobacco Status


            Military = View Person Military


            SocialMedia = View Person Social Media


            Addresses = View Person Addresses


            EmployeeAssignments = View Employee Records


            EmergencyContact = View Person Emergency Contacts


            SocialSecurityNumber = View Person SSN


            Phones = View Person Phone
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes20'
          x-position: 3
      responses:
        '200':
          description: >-
            Returns Person Details based on the TenantID and PersonID provided,
            with some fields populated based on the Include parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/employees/{employeeId}/person:
    get:
      tags:
        - Persons
      summary: Get Person by EmployeeID
      operationId: Persons_getByEmployeeIdPerson
      description: 'Data Access: View Employee Person'
      parameters:
        - description: EmployeeID linked to the Person you want to get
          name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: guid
          x-position: 1
        - description: >-
            Options to include more data: All, Demographic, Benefit, Military,
            SocialMedia, Addresses, EmployeeAssignments, EmergencyContact,
            SocialSecurityNumber, Phones
          name: include
          in: query
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            xml:
              name: ArrayOfIncludes
              wrapped: true
            items:
              xml:
                name: Includes
              $ref: '#/components/schemas/Includes21'
          x-position: 2
      responses:
        '200':
          description: Returns a Person based on the EmployeeID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/tenants/{tenantId}:
    get:
      tags:
        - Tenants
      summary: Get Tenant by TenantID
      operationId: Tenants_getById
      description: 'Data Access: View Tenant Information'
      parameters:
        - description: ID of the Tenant you want to get
          name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
      responses:
        '200':
          description: Returns a Tenant based on the TenantID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/tenants/{tenantId}/worklocations:
    get:
      tags:
        - Tenants
      summary: Get Tenant Work Locations by TenantID
      operationId: Tenants_getWorkLocationsByTenantId
      description: >-
        Work Locations are configured at a Tenant level, unlike most other
        objects which are configured at a Legal Entity level. 


        Data Access: View Tenant Work Locations
      parameters:
        - description: ID of the Tenant you want to get work locations.
          name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of work locations
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns Tenant's Work Locations based on the TenantID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTenantWorkLocation'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
  /v1/tenants/{tenantId}/jobtitles:
    get:
      tags:
        - Job Titles
      summary: Get All Job Titles by Tenant ID
      operationId: JobTitles_listByTenantId
      description: >-
        Job Titles are configured at a Tenant level, unlike most other objects
        which are configured at a Legal Entity level.


        Data Access: View Tenant Job Titles
      parameters:
        - description: ID of the Tenant you want to get Job Titles.
          name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            maximum: 2147483647
            minimum: 1
          x-position: 1
        - description: Token to get the next set of Job Titles
          name: continuationToken
          in: query
          schema:
            type: string
            format: guid
            nullable: true
          x-position: 2
      responses:
        '200':
          description: Returns Tenant's Job Titles based on the TenantID provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTenantJobTitle'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaycorError'
components:
  schemas:
    PaycorError:
      description: >-
        The Paycor Error model is used to catch exceptions and related
        contextual data for logging.
      type: object
      properties:
        CorrelationId:
          description: >-
            Correlation ID will help identify specific transactions and logs
            when troubleshooting.  This is generated by Paycor systems.
          type: string
          format: guid
          example: a8bc429b-b515-49a6-8874-8dd1d0c4b8ed
        Title:
          description: >-
            Title is friendly overall information that can be displayed to
            users.
          type: string
          nullable: true
          example: Validation Error
        Detail:
          description: Gives more information to describe what the error is.
          type: string
          nullable: true
          example: >-
            A validation error occurred. See the source for more information
            about specific errors.
        Source:
          description: Specific details of the fields that have errors (when applicable).
          type: object
          nullable: true
          example: |-
            "source": {
                "person.lastName": "string length to long",
                "person.firstName": "must be unique"
            }
          additionalProperties:
            type: string
    PagedResultOfJob:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Job
            $ref: '#/components/schemas/Job'
    Job:
      description: Details about the Job.
      type: object
      properties:
        Id:
          description: Unique identifier of the Job in Paycor's system.
          type: string
          nullable: true
          example: ff80828188da71090188da8f2c240001
        ATSAccountId:
          description: The ATS client ID.
          type: string
          nullable: true
          example: ff808281889cbe5701889cd426ee0000
        Number:
          description: The job's human readable job number.
          type: string
          nullable: true
          example: 103
        Title:
          description: The job's name.
          type: string
          nullable: true
          example: CCPA Job
        Description:
          description: The job's description in HTML format.
          type: string
          nullable: true
          example: Job for CCPA supa
        Status:
          description: Status of the job. Default is ACTIVE.
          example: APPROVING
          $ref: '#/components/schemas/JobStatus'
        Openings:
          description: The number of openings for the job.
          type: integer
          format: int32
          example: 1
        Priority:
          description: The job's priority
          example: LOW
          $ref: '#/components/schemas/JobPriority'
        Confidential:
          description: If the job is confidential.
          type: boolean
          example: true
        Internal:
          description: If the job is an internal only job.
          type: boolean
          example: false
        TimeToFill:
          description: The targeted time to fill the job.
          type: integer
          format: int32
          example: 0
        RemoteStatus:
          description: The job's remote status.
          example: FullyRemote
          $ref: '#/components/schemas/JobRemoteStatus'
        EeoCategory:
          description: >-
            The EEO (Equal Employment Opportunity) category specification for
            the job. Can be one of these values: Executive/Senior-Level
            Officials and Managers, First/Mid-Level Officials and Managers,
            Professionals, Technicians, Sales Workers, Administrative Support
            Workers, Craft Workers, Operatives, Laborers and Helpers, Service
            Workers.
          type: string
          nullable: true
          example: Technicians
        PayRange:
          description: The job's Pay Range.
          nullable: true
          $ref: '#/components/schemas/JobPayRange'
        ATSLocation:
          description: The job's location.
          nullable: true
          $ref: '#/components/schemas/JobLocation'
        ATSDepartment:
          description: The job's department.
          nullable: true
          $ref: '#/components/schemas/JobDepartment'
        HiringManagers:
          description: The hiring managers assigned to the job.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: JobUser
            $ref: '#/components/schemas/JobUser'
        Recruiters:
          description: The recruiters assigned to the job.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: JobUser
            $ref: '#/components/schemas/JobUser'
        TeamMembers:
          description: The team members assigned to the job.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: JobUser
            $ref: '#/components/schemas/JobUser'
        Executives:
          description: The executives assigned to the job.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: JobUser
            $ref: '#/components/schemas/JobUser'
        ActivatedDate:
          description: The date when the job was activated.
          type: string
          format: date-time
          nullable: true
          example: '2023-06-20T13:45:32.000Z'
        CreatedDate:
          description: The date when the job was created.
          type: string
          format: date-time
          example: '2023-06-20T13:45:32.000Z'
        ModifiedDate:
          description: The date when the job was last modified.
          type: string
          format: date-time
          example: '2023-06-20T13:45:32.000Z'
        PostedToCareers:
          description: Is the job posted to the company careers page.
          type: boolean
          example: true
        PostedToIndeed:
          description: Is the job posted to the free Indeed feed.
          type: boolean
          example: true
        PostedToSmartSourcing:
          description: Is the job posted to Smart Sourcing.
          type: boolean
          example: true
        PostedToLinkedIn:
          description: Is the job posted to the free LinkedIn.
          type: boolean
          example: true
        PostedToZipRecruiter:
          description: Is the job posted to the free ZipRecruiter feed.
          type: boolean
          example: true
        PostedToGravity:
          description: |-
            Is the job posted to Gravity.
                        
          type: boolean
          example: false
    JobStatus:
      description: ''
      type: string
      x-enumNames:
        - ACTIVE
        - ACTIVATING
        - APPROVING
        - CLOSED
        - DENIED
        - DRAFT
        - FILLED
        - REVIEWING
      enum:
        - ACTIVE
        - ACTIVATING
        - APPROVING
        - CLOSED
        - DENIED
        - DRAFT
        - FILLED
        - REVIEWING
    JobPriority:
      description: ''
      type: string
      x-enumNames:
        - NONE
        - LOW
        - NORMAL
        - ON_HOLD
        - URGENT
      enum:
        - NONE
        - LOW
        - NORMAL
        - ON_HOLD
        - URGENT
    JobRemoteStatus:
      description: ''
      type: string
      x-enumNames:
        - Undefined
        - OnSite
        - FullyRemote
        - WFHFlexible
      enum:
        - Undefined
        - OnSite
        - FullyRemote
        - WFHFlexible
    JobPayRange:
      type: object
      properties:
        Currency:
          type: string
          nullable: true
        Minimum:
          type: number
          format: double
        Maximum:
          type: number
          format: double
        PayPeriod:
          type: string
          nullable: true
    JobLocation:
      type: object
      properties:
        Id:
          description: Id of Job Location.
          type: string
          nullable: true
          example: ff808281889cbe5701889cd6fec40020
        Address1:
          description: Address Line One of Job Location.
          type: string
          nullable: true
          example: 707 MLK dr.
        Address2:
          description: Address Line Two of Job Location.
          type: string
          nullable: true
          example: Apt 5
        City:
          description: City of Job Location.
          type: string
          nullable: true
          example: fort collins
        State:
          description: State of Job Location.
          type: string
          nullable: true
          example: CO
        PostalCode:
          description: Postal Code of Job Location.
          type: string
          nullable: true
          example: 80524
        Country:
          description: Country of Job Location.
          type: string
          nullable: true
          example: USA
    JobDepartment:
      type: object
      properties:
        Id:
          description: Id of Job Department.
          type: string
          nullable: true
          example: ff808281889cbe5701889cd6f382001b
        Title:
          description: Title of Job Department.
          type: string
          nullable: true
          example: other
    JobUser:
      type: object
      properties:
        Id:
          description: Id of the User.
          type: integer
          format: int32
          example: 347854
        Email:
          description: Email Id of the User.
          type: string
          nullable: true
          example: jeff@admin.com
        FirstName:
          description: First Name of the User.
          type: string
          nullable: true
          example: Jeff
        LastName:
          description: Last Name of the User.
          type: string
          nullable: true
          example: Jones
    Includes:
      description: |2-
            All - Include all data


            HiringManagers - Include the list of hiring managers in the response


            Recruiters - Include the list of recruiters in the response


            TeamMembers - Include the list of team members in the response


            Executives - Include the list of executives in the response
      type: string
      x-enumNames:
        - All
        - HiringManagers
        - Recruiters
        - TeamMembers
        - Executives
      enum:
        - All
        - HiringManagers
        - Recruiters
        - TeamMembers
        - Executives
    Includes2:
      description: |2-
            All - Include all data


            HiringManagers - Include the list of hiring managers in the response


            Recruiters - Include the list of recruiters in the response


            TeamMembers - Include the list of team members in the response


            Executives - Include the list of executives in the response
      type: string
      x-enumNames:
        - All
        - HiringManagers
        - Recruiters
        - TeamMembers
        - Executives
      enum:
        - All
        - HiringManagers
        - Recruiters
        - TeamMembers
        - Executives
    PagedResultOfATSAccount:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: ATSAccount
            $ref: '#/components/schemas/ATSAccount'
    ATSAccount:
      description: Details about the ATS Account
      type: object
      properties:
        Id:
          description: Unique identifier of the ATS Account.
          type: string
          nullable: true
          example: ff80828188da71090188da8f2c240001
        Title:
          description: The ATS Account title.
          type: string
          nullable: true
          example: CCPA ATS Account
    RefreshToken:
      description: The OAuth2 refresh token that can be exchanged for access token.
      type: object
      required:
        - refresh_token
        - client_id
        - client_secret
      properties:
        refresh_token:
          description: The refresh token previously issued to the client.
          type: string
          minLength: 1
        client_id:
          description: >-
            OAuth Client Id. It can be read from Application page > Security
            Connections tab.
          type: string
          minLength: 1
        client_secret:
          description: >-
            OAuth Client Secret. It can be read from Application page > Security
            Connections tab.
          type: string
          minLength: 1
    CreateOrUpdateResponse:
      type: object
      properties:
        ResourceUrl:
          description: >-
            URL to access the resource information about the entity that was
            created or updated.
                        
          nullable: true
          $ref: '#/components/schemas/ResourceReference'
    ResourceReference:
      description: 'The Resource Reference model is used to provide URL links to resources. '
      type: object
      properties:
        Id:
          description: ID of the resource being referenced. This is generated by Paycor.
          type: string
          nullable: true
          example: d63759d5-40cc-4ec2-98df-772342f1b974
        Url:
          description: URL to reach the resource being referenced
          type: string
          nullable: true
          example: >-
            v1/myresources/resource?resourceID=d63759d5-40cc-4ec2-98df-772342f1b974
    EmergencyContact:
      type: object
      required:
        - FirstName
        - LastName
      properties:
        FirstName:
          description: First name of the emergency contact.
          type: string
          minLength: 1
          example: Charles
        MiddleName:
          description: Middle name of the emergency contact.
          type: string
          nullable: true
          example: Lutwidge
        LastName:
          description: Last name of the emergency contact.
          type: string
          minLength: 1
          example: Dodgson
        Relationship:
          description: Relationship of the emergency contact with the employee.
          example: Father
          $ref: '#/components/schemas/Relationship'
        HomePhone:
          description: |-
            Home Phone of the emergency contact.
            Must be 10 characters.
                        
          type: string
          nullable: true
          example: 1234567890
        WorkPhone:
          description: |-
            Work Phone of the emergency contact.
            Must be 10 characters.
                        
          type: string
          nullable: true
          example: 1234567890
        WorkPhoneExtension:
          description: |-
            Work Phone extension of the emergency contact.
                        
          type: string
          nullable: true
          example: 123
        MobilePhone:
          description: |-
            Mobile Phone of the emergency contact.
            Must be 10 characters.
                        
          type: string
          nullable: true
          example: 1234567890
        EmailAddress:
          description: |-
            Email Address of the emergency contact.
                        
          type: string
          nullable: true
          example: abc@paycor.com
    Relationship:
      description: |-
        Enumeration of valid Types of Relationship values.
                    
      type: string
      x-enumNames:
        - Daughter
        - Father
        - Friend
        - Grandparent
        - Mother
        - Other
        - Sibling
        - Son
        - Spouse
      enum:
        - Daughter
        - Father
        - Friend
        - Grandparent
        - Mother
        - Other
        - Sibling
        - Son
        - Spouse
    PagedResultOfEmployeeCertification:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeCertification
            $ref: '#/components/schemas/EmployeeCertification'
    EmployeeCertification:
      type: object
      properties:
        CertificationId:
          description: |-
            Identifier of certification.
                        
          type: string
          format: guid
          nullable: true
          example: dd71aee2-22c8-4937-a3d7-28a4ad3f1df7
        CertificationName:
          description: |-
            Name of certification
                        
          type: string
          nullable: true
          example: First Aid certificate
        CertificationNumber:
          description: |-
            Number of certification
                        
          type: string
          nullable: true
          example: '436576'
        CertificationOrganizationName:
          description: |-
            Name of certification organization
                        
          type: string
          nullable: true
          example: Training CO.
        CertificationOrganizationId:
          description: |-
            Id of certification organization
                        
          type: string
          format: guid
          nullable: true
          example: 590BC80F-94A1-4ABD-9A6B-7242C818EDF5
        EmployeeCertificationId:
          description: |-
            Id of employee certification
                        
          type: string
          format: guid
          example: FDB487C7-E853-4097-8697-B705AC3C7ABF
        Notes:
          description: |-
            Certification notes
                        
          type: string
          nullable: true
          example: Compleated required training
        EffectiveDate:
          type: string
          format: date-time
          nullable: true
        ExpirationDate:
          description: |-
            Expiration date of certification
                        
          type: string
          format: date-time
          nullable: true
          example: '2022-03-19'
    EmployeeCertification2:
      type: object
      required:
        - EmployeeCertificationId
      properties:
        CertificationNumber:
          description: |-
            Number of certification
                        
          type: string
          nullable: true
          example: '436576'
        EmployeeCertificationId:
          description: |-
            Id of employee certification
                        
          type: string
          format: guid
          minLength: 1
          example: FDB487C7-E853-4097-8697-B705AC3C7ABF
        EffectiveDate:
          description: |-
            Effective date of certification
                        
          type: string
          format: date-time
          nullable: true
          example: '2022-03-09'
        ExpirationDate:
          description: |-
            Expiration date of certification
                        
          type: string
          format: date-time
          nullable: true
          example: '2022-03-19'
        Notes:
          description: |-
            Note on certification
                        
          type: string
          nullable: true
          example: 'note: expires soon'
    Certification:
      type: object
      required:
        - CertificationName
      properties:
        EffectiveDate:
          description: |-
            Effective date of certification
                        
          type: string
          format: date-time
          nullable: true
          example: '2022-03-09'
        ExpirationDate:
          description: |-
            Expiration date of certification
                        
          type: string
          format: date-time
          nullable: true
          example: '2022-03-19'
        CertificationName:
          description: |-
            Name of certification
                        
          type: string
          minLength: 1
          example: First Aid certificate
        CertificationNumber:
          description: |-
            Number of certification
                        
          type: string
          nullable: true
          example: '436576'
        CertificationOrganizationName:
          description: |-
            Name of certification organization
                        
          type: string
          nullable: true
          example: Red Cross
        Notes:
          description: |-
            Note on certification
                        
          type: string
          nullable: true
          example: 'note: expires soon'
    PagedResultOfEmployeeCustomField:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeCustomField
            $ref: '#/components/schemas/EmployeeCustomField'
    EmployeeCustomField:
      description: >-
        Allows reading the value of a Custom Field set on a particular
        Employee. 
      type: object
      properties:
        CustomFieldId:
          description: |-
            Unique identifier of the Custom Field. Generated by Paycor.
                        
          type: string
          format: guid
          example: 7b64160b-0a3a-0000-0000-000014e00100
        LegalEntityId:
          description: LegalEntityId that created the Custom Field.
          type: integer
          format: int32
          example: 123666
        FieldName:
          description: Name of the custom field, set at the Legal Entity level.
          type: string
          nullable: true
          example: Payroll
        DataType:
          description: >-
            Data type for the custom field. Values submitted (in PUT Employee
            Custom Field) must be of this type. 
          example: FreeFormAlphaNumeric
          $ref: '#/components/schemas/CustomFieldDataType'
        Value:
          description: >-
            Value of the custom field set for this employee.

            Expected Datatype could be string, float, or date - depending on the
            setup of the LegalEntity Custom Field.
          type: string
          nullable: true
          example: Division 1
        IsRequired:
          description: Whether this custom field is required to be setup on each Employee.
          type: boolean
          example: false
        CustomFieldsOptions:
          description: Valid list of values for a custom field (for appropriate types)
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: string
        DateModified:
          description: Date when custom field value was last modified.
          type: string
          format: date-time
          nullable: true
          example: '2022-06-14T07:24:44.807'
        Employee:
          description: >-
            URL to access the Employees resource for information about the
            employee. 
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    CustomFieldDataType:
      description: ''
      type: string
      x-enumNames:
        - FreeFormAlphaNumeric
        - FreeFormCurrency
        - DropDownAlphaNumeric
        - DropDownYesNo
        - DropDownCurrency
        - Date
        - PickListAlphaNumeric
        - PickListCurrency
      enum:
        - FreeFormAlphaNumeric
        - FreeFormCurrency
        - DropDownAlphaNumeric
        - DropDownYesNo
        - DropDownCurrency
        - Date
        - PickListAlphaNumeric
        - PickListCurrency
    EmployeeCustomField2:
      description: >-
        Allows upserting (inserting or updating) a value for a specific Custom
        Field on a specific Employee. 

        Calling this twice will replace the previously-supplied value. 

        You must first call GET Employee Custom Fields, to identify a
        CustomFieldId and the datatype for its Value. 
      type: object
      required:
        - CustomFieldId
        - Value
      properties:
        CustomFieldId:
          description: >-
            Unique identifier of the Custom Field, available via GET Employee
            Custom Fields. 

            Used to lookup which field value to update on this employee.
            Generated by Paycor.
          type: string
          format: guid
          minLength: 1
          example: 7b64160b-0a3a-0000-0000-000014e00100
        Value:
          description: >-
            Value of the custom field set for this employee.

            Expected Datatype could be string, float, or date - depending on the
            setup of the LegalEntity Custom Field.
          type: string
          minLength: 1
          example: Division 1
    EmployeeDeduction:
      description: >-
        The Employee Deduction model represents Employee level Deduction
        information.

        Provides link to associated Employee information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee deduction in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: cb4a1b67-000c-0000-0000-000066000000
        Code:
          description: 'Unique deduction code set at the legal entity or tenant level.  '
          type: string
          nullable: true
          example: Pension
        Description:
          description: Description of the employee deduction code.
          type: string
          nullable: true
          example: Pension Plan Deduction
        Type:
          description: Enumeration of valid types of employee deduction values.
          example: D125
          $ref: '#/components/schemas/DeductionType'
        Frequency:
          description: |-
            Enumeration of valid employee deduction frequency values.
                        
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        IncludeInPay:
          description: >-
            Enumeration of valid values indicating which pay run should include
            the employee deduction.
          example: AllPay
          $ref: '#/components/schemas/IncludeInPay'
        OnHold:
          description: >-
            Whether the employee deduction should be not deducted in a paycheck.
            This is specified by the 'Calculate' checkbox in the Paycor UI.
            Default is OnHold=false, meaning Calculate=true.
                        
          type: boolean
          example: false
        EffectiveStartDate:
          description: |-
            Date the employee deduction takes effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date the employee deduction is no longer in effect (soft-delete
            flag). Null if deduction is still in effect. 

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: null
        AmountData:
          description: >-
            List of type EmployeeDeductionAmount containing the employee's
            deduction rates and amounts.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeDeductionAmount
            $ref: '#/components/schemas/EmployeeDeductionAmount'
        Employee:
          description: >-
            URL to access the Employee resource containing additional employee
            information. 
                        
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
        LegalEntityDeduction:
          description: >-
            URL to access the Legal Entity Deduction resource for information
            about the legal entity's deductions. Currently returns the list. 
                        
          nullable: true
          example: /v1/legalentities/501123/deductions/
          $ref: '#/components/schemas/ResourceReference'
    DeductionType:
      description: |-
        Enumeration of valid Types of Deduction values.
                    
      type: string
      x-enumNames:
        - CS
        - D
        - D125
        - DCNTCAF
        - DDIR
        - DINV
        - DM
        - DME
        - DTADJ
        - FB
        - OB
        - OD
        - PPD
        - PPEC
        - PPL
        - SD
      enum:
        - CS
        - D
        - D125
        - DCNTCAF
        - DDIR
        - DINV
        - DM
        - DME
        - DTADJ
        - FB
        - OB
        - OD
        - PPD
        - PPEC
        - PPL
        - SD
    PayFrequency:
      description: Enumeration of valid Pay Frequency values.
      type: string
      x-enumNames:
        - EveryPayPeriod
        - FirstPayPeriodOfMonth
        - SecondPayPeriodOfMonth
        - ThirdPayPeriodOfMonth
        - FourthPayPeriodOfMonth
        - EveryNotThirdNotFifth
        - FirstAndThirdPayPeriod
        - SecondAndFourthPayPeriod
        - LastPayPeriod
        - SpecialOccurrence
        - FirstAndSecondPayPeriod
      enum:
        - EveryPayPeriod
        - FirstPayPeriodOfMonth
        - SecondPayPeriodOfMonth
        - ThirdPayPeriodOfMonth
        - FourthPayPeriodOfMonth
        - EveryNotThirdNotFifth
        - FirstAndThirdPayPeriod
        - SecondAndFourthPayPeriod
        - LastPayPeriod
        - SpecialOccurrence
        - FirstAndSecondPayPeriod
    IncludeInPay:
      description: >-
        Enumeration of valid IncludeInPay values indicating which pay run to
        include an Earning or Deduction.
      type: string
      x-enumNames:
        - AddtlPayOnly
        - AllPay
        - RegularOnly
      enum:
        - AddtlPayOnly
        - AllPay
        - RegularOnly
    EmployeeDeductionAmount:
      description: >-
        The Employee Deduction Amount model represents Employee Deductions
        Amount data.
      type: object
      properties:
        Rate:
          description: |-
            Percentage value set by the user.
                        
          type: number
          format: decimal
          nullable: true
          example: 0.58
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 3141.59
        Factor:
          type: number
          format: decimal
          nullable: true
        EffectiveStartDate:
          description: |-
            Date the employee deduction rates and amounts take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date the employee deduction rates and amounts are no longer in
            effect (soft-delete flag). Null if still active.

            Date is formatted as MM/DD/YYY
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-11-01T00:00:00Z'
    Includes3:
      description: ''
      type: string
      x-enumNames:
        - All
        - AmountData
      enum:
        - All
        - AmountData
    PagedResultOfEmployeeDeduction:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeDeduction
            $ref: '#/components/schemas/EmployeeDeduction'
    Includes4:
      description: ''
      type: string
      x-enumNames:
        - All
        - AmountData
      enum:
        - All
        - AmountData
    EmployeeDeduction2:
      description: The employee deduction create model
      type: object
      required:
        - Code
      properties:
        Code:
          description: 'Unique deduction code set at the legal entity or tenant level.  '
          type: string
          minLength: 1
          example: Pension
        OnHold:
          description: |-
            Specifies whether the deduction should be deducted in a paycheck.
                        
          type: boolean
        Frequency:
          description: |-
            Enumeration of valid employee deduction frequency values.
                        
          example: FirstPayPeriodOfMonth
          $ref: '#/components/schemas/PayFrequency'
        IncludeInPay:
          description: >-
            Enumeration of valid values indicating which pay run should include
            the employee deduction.
          example: AllPay
          $ref: '#/components/schemas/IncludeInPay'
        AmountData:
          description: |-
            Specifies the rate and amount for the employee deduction.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeDeductionAmount
            $ref: '#/components/schemas/EmployeeDeductionAmount2'
    EmployeeDeductionAmount2:
      description: >-
        The Employee Deduction Amount model represents Employee Deductions
        Amount data.
      type: object
      required:
        - EffectiveStartDate
      properties:
        Rate:
          description: |-
            Percentage value set by the user.
                        
          type: number
          format: decimal
          nullable: true
          example: 0.58
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 3141.59
        EffectiveStartDate:
          description: |-
            Date the employee deduction rates and amounts take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date the employee deduction rates and amounts are no longer in
            effect.

            If null, then the rate & amount are still in effect. If not null,
            the rate & amount are considered "deleted."

            Date is formatted as MM/DD/YYY
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-11-01T00:00:00Z'
    EmployeeDeduction3:
      description: The employee deduction update model
      type: object
      required:
        - Id
      properties:
        Id:
          description: >-
            The unique identifier of this employee deduction generated in
            Paycor's system. Used as the Key for Update (PUT) endpoint. 
          type: string
          format: guid
          minLength: 1
        IncludeInPay:
          description: >-
            Enumeration of valid values indicating which pay run should include
            the employee deduction.
          nullable: true
          example: AllPay
          $ref: '#/components/schemas/IncludeInPay'
        Frequency:
          description: |-
            Enumeration of valid employee deduction frequency values.
                        
          nullable: true
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        OnHold:
          description: >-
            Specifies whether the deduction should be deducted in a paycheck.
            Required, defaults to false (meaning it should be deducted).
                        
          type: boolean
          nullable: true
        AmountData:
          description: |-
            Specifies the rate and amount for the employee deduction.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeDeductionAmount
            $ref: '#/components/schemas/EmployeeDeductionAmount3'
    EmployeeDeductionAmount3:
      description: >-
        The Employee Deduction Amount model represents Employee Deductions
        Amount data.
      type: object
      required:
        - EffectiveStartDate
      properties:
        Rate:
          description: |-
            Percentage value set by the user.
                        
          type: number
          format: decimal
          nullable: true
          example: 0.58
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 3141.59
        EffectiveStartDate:
          description: |-
            Date the employee deduction rates and amounts take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date the employee deduction rates and amounts are no longer in
            effect (soft-delete flag). Null if rate & amount is still active.

            Date is formatted as MM/DD/YYY
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-11-01T00:00:00Z'
    PagedResultOfEmployeeDirectDeposit:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeDirectDeposit
            $ref: '#/components/schemas/EmployeeDirectDeposit'
    EmployeeDirectDeposit:
      description: >-
        The Employee Direct Deposit model represents an Employee's Direct
        Deposit information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee direct deposit in Paycor's system.
            Generated by Paycor.
                        
          type: string
          format: guid
          example: 5e699a0d-0000-0000-0000-0007d54d9839
        AccountType:
          description: >-
            Enumeration of valid account type values. This specifies the type of
            account the employee's direct deposit is destined for. 
                        
          example: C
          $ref: '#/components/schemas/AccountType'
        MaskedAccountNumber:
          description: |-
            The masked bank account number where the direct deposit is directed.
                        
          type: string
          nullable: true
          example: '****5678'
        RoutingNumber:
          description: |-
            The bank routing number where the direct deposit is directed. 
                        
          type: string
          nullable: true
          example: 322271627
        BankName:
          description: |-
            Name of the bank receiving the employee's direct deposit.
                        
          type: string
          nullable: true
          example: J.P. MORGAN CHASE BANK, N.A.
        Frequency:
          description: Enumeration of valid pay frequency values.
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        DeductionCode:
          description: 'Unique deduction code set at the legal entity or tenant level.  '
          type: string
          nullable: true
          example: Pension
        DirectDepositType:
          description: Enumeration of valid types of direct deposit values.
          example: Net
          $ref: '#/components/schemas/DirectDepositType'
        OnHold:
          description: >-
            Whether any money should be deposited into the direct deposit
            account.
          type: boolean
          nullable: true
          example: true
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 22.22
        Rate:
          description: >-
            Percentage of the paycheck to be deposited into the direct deposit
            account
                        
          type: number
          format: decimal
          nullable: true
          example: 0.84
        Employee:
          description: >-
            URL to access the Employee resource for information about the
            employee. 
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    AccountType:
      description: Enumeration of valid Types of Account values.
      type: string
      x-enumNames:
        - Checking
        - Savings
      enum:
        - Checking
        - Savings
    DirectDepositType:
      description: Enumeration of valid Types of Direct Deposit values.
      type: string
      x-enumNames:
        - Net
        - Partial
      enum:
        - Net
        - Partial
    EmployeeHsaDirectDeposit:
      description: >-
        The Employee HSA Direct Deposit model represents an Employee's HSA
        Direct Deposit information.
      type: object
      required:
        - AccountType
        - Frequency
        - DeductionCode
        - OnHold
      properties:
        AccountType:
          description: >-
            Enumeration of valid account type values. This specifies the type of
            account the employee's HSA direct deposit is destined for. 
                        
          example: C
          $ref: '#/components/schemas/AccountType'
        AccountNumber:
          description: |-
            The bank account number where the HSA direct deposit is directed.
                        
          type: string
          nullable: true
          example: 1234567890
        RoutingNumber:
          description: |-
            The bank routing number where the HSA direct deposit is directed. 
                        
          type: string
          nullable: true
          example: 322271627
        Frequency:
          description: Enumeration of valid pay frequency values.
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        DeductionCode:
          description: 'Unique deduction code set at the legal entity or tenant level.  '
          type: string
          minLength: 1
          example: Pension
        OnHold:
          description: >-
            Whether any money should be deposited into the HSA direct deposit
            account.
          type: boolean
          example: true
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 22.22
        Rate:
          description: >-
            Percentage of the paycheck to be deposited into the HSA direct
            deposit account
                        
          type: number
          format: decimal
          nullable: true
          example: 0.84
    EmployeeHsaDirectDeposit2:
      description: >-
        The Employee HSA Direct Deposit model represents an Employee's HSA
        Direct Deposit information.
      type: object
      required:
        - Id
        - AccountType
        - AccountNumber
        - RoutingNumber
        - Frequency
        - OnHold
      properties:
        Id:
          description: >-
            Unique identifier of the employee hsa direct deposit in Paycor's
            system. Generated by Paycor.
                        
          type: string
          format: guid
          minLength: 1
          example: 5e699a0d-0000-0000-0000-0007d54d9839
        AccountType:
          description: >-
            Enumeration of valid account type values. This specifies the type of
            account the employee's HSA direct deposit is destined for. 
                        
          example: C
          $ref: '#/components/schemas/AccountType'
        AccountNumber:
          description: |-
            The bank account number where the HSA direct deposit is directed.
                        
          type: string
          minLength: 1
          example: 1234567890
        RoutingNumber:
          description: |-
            The bank routing number where the HSA direct deposit is directed. 
                        
          type: string
          minLength: 1
          example: 322271627
        Frequency:
          description: Enumeration of valid pay frequency values.
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        OnHold:
          description: >-
            Whether any money should be deposited into the HSA direct deposit
            account.
          type: boolean
          example: true
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 22.22
        Rate:
          description: >-
            Percentage of the paycheck to be deposited into the HSA direct
            deposit account
                        
          type: number
          format: decimal
          nullable: true
          example: 0.84
    EmployeeDirectDeposit2:
      description: >-
        The Employee Direct Deposit model represents an Employee's Direct
        Deposit information.
      type: object
      required:
        - AccountType
        - Frequency
        - OnHold
      properties:
        AccountType:
          description: >-
            Enumeration of valid account type values. This specifies the type of
            account the employee's direct deposit is destined for. 
                        
          example: C
          $ref: '#/components/schemas/AccountType'
        AccountNumber:
          description: |-
            The bank account number where the direct deposit is directed.
                        
          type: string
          nullable: true
          example: 1234567890
        RoutingNumber:
          description: |-
            The bank routing number where the direct deposit is directed. 
                        
          type: string
          nullable: true
          example: 322271627
        Frequency:
          description: |-
            Enumeration of valid pay frequency values.
            If DirectDepositType is Partial, Value is required.
            If DirectDepositType is Net, Value is required to be EveryPayPeriod.
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        DeductionCode:
          type: string
          nullable: true
        DirectDepositType:
          description: Enumeration of valid types of direct deposit values.
          example: Net
          $ref: '#/components/schemas/DirectDepositType'
        OnHold:
          description: >-
            Whether any money should be deposited into the direct deposit
            account.
          type: boolean
          example: true
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 22.22
        Rate:
          description: >-
            Percentage of the paycheck to be deposited into the direct deposit
            account
                        
          type: number
          format: decimal
          nullable: true
          example: 0.84
    EmployeeDirectDeposit3:
      description: >-
        The Employee Direct Deposit model represents an Employee's Direct
        Deposit information.
      type: object
      required:
        - Id
        - AccountType
        - AccountNumber
        - RoutingNumber
        - Frequency
        - OnHold
      properties:
        Id:
          description: >-
            Unique identifier of the employee direct deposit in Paycor's system.
            Generated by Paycor.
                        
          type: string
          format: guid
          minLength: 1
          example: 5e699a0d-0000-0000-0000-0007d54d9839
        AccountType:
          description: >-
            Enumeration of valid account type values. This specifies the type of
            account the employee's direct deposit is destined for. 
                        
          example: C
          $ref: '#/components/schemas/AccountType'
        AccountNumber:
          description: |-
            The bank account number where the direct deposit is directed.
                        
          type: string
          minLength: 1
          example: 1234567890
        RoutingNumber:
          description: |-
            The bank routing number where the direct deposit is directed. 
                        
          type: string
          minLength: 1
          example: 322271627
        Frequency:
          description: |-
            Enumeration of valid pay frequency values.
            If DirectDepositType is Partial, Value is required.
            If DirectDepositType is Net, Value is required to be EveryPayPeriod.
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        DirectDepositType:
          description: Enumeration of valid types of direct deposit values.
          example: Net
          $ref: '#/components/schemas/DirectDepositType'
        OnHold:
          description: >-
            Whether any money should be deposited into the direct deposit
            account.
          type: boolean
          example: true
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 22.22
        Rate:
          description: >-
            Percentage of the paycheck to be deposited into the direct deposit
            account
                        
          type: number
          format: decimal
          nullable: true
          example: 0.84
    PagedResultOfPayStubFile:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubFile
            $ref: '#/components/schemas/PayStubFile'
    PayStubFile:
      description: >-
        PayStubFile represents an object that holds information about pay stub
        file.
      type: object
      properties:
        PayrollId:
          description: >-
            Unique identifier of the parent payroll in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 52a2s23-0000-0000-0000-0007d0009840
        PlannerId:
          description: Id of the planner for this payment
          type: string
          format: guid
          nullable: true
          example: 5f407b07-014a-0000-0000-00009add0300
        CheckDate:
          description: The paycheck date. Also referred to as Pay Date.
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        ProcessDate:
          description: The internal pay processing date for this employee.
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        DocumentId:
          description: Unique identifier of the Document.
          type: string
          format: guid
          example: 3bb813a8-0000-0000-0000-000066000000
        LegalEntityId:
          description: >-
            Unique identifier of the legal entity in Paycor's system. This is
            also known as the Client Id.
                        
          type: integer
          format: int32
          example: 501123
        FileName:
          description: Name of the file.
          type: string
          nullable: true
          example: Paystub.pdf
        PayStubDocumentURL:
          description: Resource url used for downloading the file.
          nullable: true
          example: URL to access the Employee Pay Stub document link
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfTaxFile:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TaxFile
            $ref: '#/components/schemas/TaxFile'
    TaxFile:
      description: TaxFile represents an object that holds information about taxes.
      type: object
      properties:
        ReportType:
          description: Type of the report.
          type: string
          nullable: true
          example: W2C
        EmployeeId:
          description: |-
            Unique identifier of the Employee in Paycor's system.
                        
          type: string
          format: guid
          example: 9bf397b0-fd86-0000-0000-000047e80100
        Year:
          description: Tax year of the document.
          type: integer
          format: int32
          example: 2020
        DocumentId:
          description: Unique identifier of the Document.
          type: string
          format: guid
          nullable: true
          example: 3bb813a8-0000-0000-0000-000066000000
        LegalEntityId:
          description: >-
            Unique identifier of the legal entity in Paycor's system. This is
            also known as the Client Id.
                        
          type: integer
          format: int32
          example: 501123
        ReportName:
          description: Name of the report.
          type: string
          nullable: true
          example: Tax form - W2C
        FileName:
          description: Name of the tax document.
          type: string
          nullable: true
          example: Paystub.pdf
        TaxDocumentURL:
          description: Resource url used for downloading the file.
          nullable: true
          example: URL to access the Employee Tax document link
          $ref: '#/components/schemas/ResourceReference'
    EmployeeInformation:
      description: >-
        Represents information related to an Employee for whom the Tax document
        has been requested for.
      type: object
      required:
        - SocialSecurityNumber
      properties:
        SocialSecurityNumber:
          description: Social security number of the employee.
          type: string
          minLength: 1
          example: 555555555
    EmployeeEarning:
      description: >-
        A record of one specific earning that one particular employee has setup,
        including employee-specific details such as amount. Must be tied to an
        earning at the LegalEntity level.
      type: object
      properties:
        Id:
          description: Unique identifier of the employee earning in Paycor's system.
          type: string
          format: guid
          example: eae83607-000c-0000-0000-000066000000
        Code:
          description: >-
            Descriptive earning identifier which appears on paychecks. Only set
            at the legal entity or tenant level.
          type: string
          nullable: true
          example: BonusDis
        Description:
          description: Description of the employee earning code.
          type: string
          nullable: true
          example: Bonus Discretionary
        Type:
          description: Enumeration of valid type of employee earning values.
          example: FB
          $ref: '#/components/schemas/EarningType'
        Frequency:
          description: |-
            Enumeration of valid Pay Frequency values.
                        
          example: LastPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        SequenceNumber:
          description: >-
            Order earnings are calculated based on sequence values.

            This is needed so earnings dependent on other earnings are
            calculated in the proper sequence.
          type: integer
          format: int32
          nullable: true
          example: 3
        IncludeInPay:
          description: >-
            Enumeration of valid values indicating which pay run should include
            the employee earning.
          example: A
          $ref: '#/components/schemas/IncludeInPay'
        OnHold:
          description: >-
            Whether the employee earning should included in a paycheck. This is
            specified by the 'Calculate' checkbox in the Paycor UI.
                        
          type: boolean
          example: false
        EffectiveStartDate:
          description: |-
            Date the employee earning take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: |-
            Date the employee earning is no longer in effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: 2020-11-01T00:00Z
        AmountData:
          description: >-
            List of the employee's earning rates, factors and amounts of type
            EmployeeEarningAmount.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeEarningAmount
            $ref: '#/components/schemas/EmployeeEarningAmount'
        Employee:
          description: >-
            URL to access the Employees resource for information about the
            employee. 
                        
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
        LegalEntityEarning:
          description: >-
            URL to access the Legal Entity Earning resource for information
            about the legal entity's earnings.
                        
          nullable: true
          example: /v1/legalentities/501123/earnings
          $ref: '#/components/schemas/ResourceReference'
    EarningType:
      description: |-
        Enumeration of valid Types of Earning values.
                    
      type: string
      x-enumNames:
        - A
        - E
        - ESL
        - FB
        - MOTE
        - NOBENHR
        - NONQ
        - NTOTEAR
        - OE
        - OEX
        - OTE
        - OTPE
        - RE
        - REG
        - REX
        - SE
        - TENX
        - TpE
        - TPS
      enum:
        - A
        - E
        - ESL
        - FB
        - MOTE
        - NOBENHR
        - NONQ
        - NTOTEAR
        - OE
        - OEX
        - OTE
        - OTPE
        - RE
        - REG
        - REX
        - SE
        - TENX
        - TpE
        - TPS
    EmployeeEarningAmount:
      description: >-
        The Employee Earning Amount model represents Employee Earning Amount
        data.
      type: object
      required:
        - EffectiveStartDate
      properties:
        Rate:
          description: |-
            Amount per hour the employee will obtain from this earning.
                        
          type: number
          format: decimal
          nullable: true
          example: 55.55
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 5555.55
        Factor:
          description: |-
            Multiplier used with the hourly rate to calculate other earnings.
            Default value is 1, unless changed at the global level.
                        
          type: number
          format: decimal
          nullable: true
          example: 1
        EffectiveStartDate:
          description: |-
            Date the employee earning rates and amounts take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2019-12-01T00:00:00Z'
        EffectiveEndDate:
          description: |-
            Date the employee earning rates and amounts are no longer in effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-11-01T00:00:00Z'
    Includes5:
      description: |2-
            All - Include all data


            AmountData - Include amount data
      type: string
      x-enumNames:
        - All
        - AmountData
      enum:
        - All
        - AmountData
    PagedResultOfEmployeeEarning:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeEarning
            $ref: '#/components/schemas/EmployeeEarning'
    Includes6:
      description: |2-
            All - Include all data


            AmountData - Include amount data
      type: string
      x-enumNames:
        - All
        - AmountData
      enum:
        - All
        - AmountData
    EmployeeEarning2:
      description: >-
        A record of one specific earning that one particular employee has setup,
        including employee-specific details such as amount. Must be tied to an
        earning at the LegalEntity level.
      type: object
      required:
        - Code
        - AmountData
      properties:
        Code:
          description: >-
            Descriptive earning identifier which appears on paychecks. Only set
            at the legal entity or tenant level.
          type: string
          minLength: 1
          example: BonusDis
        Frequency:
          description: |-
            Enumeration of valid Pay Frequency values.
                        
          example: LastPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        SequenceNumber:
          description: >-
            Order earnings are calculated based on sequence values.

            This is needed so earnings dependent on other earnings are
            calculated in the proper sequence.
          type: integer
          format: int32
          nullable: true
          example: 3
        IncludeInPay:
          description: >-
            Enumeration of valid values indicating which pay run should include
            the employee earning.
          example: A
          $ref: '#/components/schemas/IncludeInPay'
        OnHold:
          description: >-
            Whether the employee earning should included in a paycheck. This is
            specified by the 'Calculate' checkbox in the Paycor UI.
                        
          type: boolean
          example: false
        AmountData:
          description: >-
            List of the employee's earning rates, factors and amounts of type
            EmployeeEarningAmount.
                        
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeEarningAmount
            $ref: '#/components/schemas/EmployeeEarningAmount'
    EmployeeEarning3:
      description: >-
        A record of one specific earning that one particular employee has setup,
        including employee-specific details such as amount. Must be tied to an
        earning at the LegalEntity level.
      type: object
      required:
        - Id
        - Code
        - Frequency
        - IncludeInPay
        - OnHold
        - AmountData
      properties:
        Id:
          description: >-
            The unique identifier of this employee earning generated in Paycor's
            system.
          type: string
          format: guid
          minLength: 1
        Code:
          description: >-
            Descriptive earning identifier which appears on paychecks. Only set
            at the legal entity or tenant level.
          type: string
          minLength: 1
          example: BonusDis
        Frequency:
          description: |-
            Enumeration of valid Pay Frequency values.
                        
          example: LastPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        SequenceNumber:
          description: >-
            Order earnings are calculated based on sequence values.

            This is needed so earnings dependent on other earnings are
            calculated in the proper sequence.
          type: integer
          format: int32
          nullable: true
          example: 3
        IncludeInPay:
          description: >-
            Enumeration of valid values indicating which pay run should include
            the employee earning.
          example: A
          $ref: '#/components/schemas/IncludeInPay'
        OnHold:
          description: >-
            Whether the employee earning should included in a paycheck. This is
            specified by the 'Calculate' checkbox in the Paycor UI.
                        
          type: boolean
          example: false
        AmountData:
          description: >-
            List of the employee's earning rates, factors and amounts of type
            EmployeeEarningAmount.
                        
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeEarningAmount
            $ref: '#/components/schemas/EmployeeEarningAmount'
    ImportPayrollHours:
      description: >-
        Request body object for importing Payroll data into Paycor's Payroll
        system (not Time system).
      type: object
      required:
        - IntegrationVendor
        - ProcessId
        - ImportEmployees
      properties:
        IntegrationVendor:
          description: >-
            Required freeform field for tracking purposes. You can input your
            company or application name.
          type: string
          minLength: 1
        ProcessId:
          description: >-
            Unique identifier of the transaction to prevent double-posting in
            Paycor's systems. 

            Please generate a new GUID (using any method) for every API call.

            Use the same GUID only when you want to replace existing data.
          type: string
          format: guid
          minLength: 1
          example: b962666d-8c1e-46db-a750-53edfe25d47e
        ImportEmployees:
          description: >-
            List of Employees, with nested lists of Earnings, to import into
            Paycor's Paygrid system. 
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: ImportEmployee
            $ref: '#/components/schemas/ImportEmployee'
    ImportEmployee:
      type: object
      required:
        - EmployeeNumber
        - ImportEarnings
      properties:
        EmployeeNumber:
          description: >-
            Unique number of the employee in the tenant. Generated by Paycor.
            You can use any GET Employee endpoint to retrieve.
          type: integer
          format: int32
          example: 33420
        ImportEarnings:
          description: 'List of Earnings for this Employee. '
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: ImportEarning
            $ref: '#/components/schemas/ImportEarning'
        BaseDepartmentCode:
          description: >-
            Department to be used when employee is being paid outside of their
            assigned payroll.  All scheduled earnings for this employee will be
            paid in this department.
          type: string
          nullable: true
    ImportEarning:
      description: >-
        Employee-specific Payroll Import row for a specific working date range.
        Includes all Pay-related info. 
      type: object
      required:
        - DepartmentCode
        - EarningCode
        - BusinessStartDate
        - PayGroupId
      properties:
        DepartmentCode:
          description: >-
            Department code that the Hours should be paid under. You can use GET
            Legal Entity Departments to retrieve valid Code values. 
          type: integer
          format: int64
          example: 334
        EarningCode:
          description: >-
            Employee's earning Code. You can retrieve via Get Employee Earnings
            endpoints.
          type: string
          minLength: 1
          example: ERC300
        EarningHours:
          description: Number of hours that Employee worked.
          type: number
          format: decimal
          example: 3.5
        EarningAmount:
          description: Dollar amount that Employee earned.
          type: number
          format: decimal
          nullable: true
          example: 150.57
        EarningRate:
          description: 'Dollar rate to assign to the earning. '
          type: number
          format: decimal
          nullable: true
          example: 15.09
        BusinessStartDate:
          description: Start date of TimeCard
          type: string
          format: date-time
          minLength: 1
          example: '2020-11-17T12:00:00.000Z'
        BusinessEndDate:
          description: End date of TimeCard
          type: string
          format: date-time
          nullable: true
          example: '2020-11-22T12:00:00.000Z'
        DateWorked:
          description: >-
            The date worked (associated with this earning). 

            Optional. May be used by clients who have Workweek calculation
            feature enabled or by specific partner integrations.
          type: string
          format: date-time
          nullable: true
          example: '2022-01-22T12:00:00.000Z'
        LaborCodes:
          description: >-
            Optional. This allows supplying Labor Codes tied to this earning,
            used for Job Costing and other functionality. 
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCode
            $ref: '#/components/schemas/LaborCode'
        PayGroupId:
          description: >-
            Unique identifier of the pay group in Paycor's system. You can
            retrieve by calling 'Get Pay Groups by Legal Entity ID'
          type: string
          format: guid
          minLength: 1
          example: 71c9338a-4c28-0000-0000-0000712f0300
        PayNumber:
          description: >-
            Optional, defaults to 1. 

            Indicates which paycheck for this employee the earning will appear
            on (essentially a sort order for the particular Employee). 

            Use sequential values such as 1, 2, 3...
          type: integer
          format: int32
          nullable: true
        ClientDefinedValue:
          description: >-
            Optional. This field allows passing in additional information used
            by specific partner integrations.
          type: string
          nullable: true
    LaborCode:
      description: >-
        Labor Code (also called Job Code) is used for Job Costing
        functionality. 

        Note that both Category and Code are required in order to be unique. 
      type: object
      properties:
        Category:
          description: >-
            Job Category (also known as Labor Category) are used to organize Job
            Codes. 

            This feature is used for Job Costing support, which not all clients
            will use. Categories must be configured in advance by an HR Admin in
            Perform. 

            You can use GET Legal Entity Job Categories API to retrieve. 
          type: string
          nullable: true
          example: Job
        Code:
          description: >-
            Job Code is used for Job Costing functionality, to map paid amounts
            to a project.

            You can use GET Legal Entity Job Codes APIs to retrieve. This field
            expects the Code, not the Labor Code Name. 

            Not all clients will use Job Costing. 
          type: string
          nullable: true
          example: WCH
    EmployeeTimeCard:
      description: >-
        The EmployeeTimeCard model represents an employee's Timecard
        information. 
      type: object
      properties:
        EmployeeNumber:
          description: |-
            Unique number of the employee in the tenant. Generated by Paycor.
                        
          type: integer
          format: int32
          example: 33422310
        BadgeNumber:
          description: |-
            Employee's assigned badge number.
                        
          type: integer
          format: int32
          nullable: true
          example: 778665
        Details:
          description: |2-
                   List of type Timecard containing the employee's timecard information.
                  
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TimeCard
            $ref: '#/components/schemas/TimeCard'
    TimeCard:
      description: >-
        The Timecard model represents Employee level time, punch details and
        associated labor code information. 
      type: object
      properties:
        DisplayDate:
          description: |-
            The date when the timecard was created.
            Format: YYYY-MM-DD
          type: string
          format: date-time
          example: '2020-11-17'
        InActualPunch:
          description: |-
            Date and time when the employee punched in.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17T13:03:03.943Z'
        OutActualPunch:
          description: |-
            Date and time when the employee punched out.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17T18:03:03.000Z'
        InRoundedPunch:
          description: |-
            Date and rounded time when the employee punched in. 
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17T13:00:00.000Z'
        OutRoundedPunch:
          description: |-
            Date and rounded time when the employee punched out.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17T18:00:00.000Z'
        HoursAmount:
          description: Amount of hours entered for employee's timecard.
          type: number
          format: decimal
          example: 4.5
        DepartmentCode:
          description: Department code where the employee's timecard was created.
          type: integer
          format: int64
          example: 3027442356
        DepartmentName:
          description: Department name where the employee's timecard was created.
          type: string
          nullable: true
          example: Accounting
        EarningCode:
          description: Identifies the type of earning for this timecard.
          type: string
          nullable: true
          example: ERC300
        LaborCodes:
          description: >-
            List of type LaborCode containing the employee's labor code
            information.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCode
            $ref: '#/components/schemas/LaborCode2'
    LaborCode2:
      description: >-
        The LaborCode model is used to define rules for Employees including
        minimum and maximum hours, overtime and benefits.
      type: object
      properties:
        LaborCategoryLevel:
          description: Labor category level
          type: integer
          format: int32
          example: 2
        LaborCategoryName:
          description: Name of labor category
          type: string
          nullable: true
          example: Job
        LaborCategoryItemCode:
          description: Item code of labor category
          type: string
          nullable: true
          example: LCI
        LaborCategoryItemName:
          description: Item name of labor category
          type: string
          nullable: true
          example: CIN Location
    EmployeeTimeCard2:
      description: Employee's timecard base object used for Payroll Api
      type: object
      required:
        - IntegrationVendor
        - ProcessId
        - EmployeeNumber
        - DepartmentCode
        - TimeCardData
      properties:
        AppId:
          description: >-
            Optional field that can be used for tracking purposes. Not required
            for payroll processing. 
          type: string
          format: guid
          nullable: true
          example: 763a5661-b518-0000-0000-000014e00100
        IntegrationVendor:
          description: >-
            Required freeform field for tracking purposes. You can input your
            company or application name.
          type: string
          minLength: 1
        ProcessId:
          description: >-
            Unique identifier of the transaction to prevent double-posting in
            Paycor's systems. 

            Please generate a new GUID (using any method) for every API call.
          type: string
          format: guid
          minLength: 1
          example: b962666d-8c1e-46db-a750-53edfe25d47e
        LegalEntityId:
          description: Unique identifier of the Legal Entity in Paycor's system.
          type: integer
          format: int32
          example: 100289
        EmployeeNumber:
          description: >-
            Unique number of the employee in the tenant. Generated by Paycor.
            You can use any GET Employee endpoint to retrieve.
          type: integer
          format: int32
          example: 33420
        DepartmentCode:
          description: >-
            Department code that the Hours should be paid under. You can use GET
            Legal Entity Departments to retrieve valid Code values. 
          type: integer
          format: int64
          example: 334
        JobCode:
          description: >-
            JobCode parameter is not currently used - included for future
            functionality. 
          type: string
          nullable: true
        TimeCardData:
          description: >-
            List of the employee's earning rates, factors and amounts of type
            EmployeeEarningAmount.
                        
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: TimeCardData
            $ref: '#/components/schemas/TimeCardData'
    TimeCardData:
      description: >-
        Employee's timecard with information about earnings, start and end
        dates.
      type: object
      required:
        - EarningCode
        - EarningHours
        - BusinessStartDate
      properties:
        EarningCode:
          description: >-
            Employee's earning Code. You can retrieve via Get Employee Earnings
            endpoints.
          type: string
          minLength: 1
          example: ERC300
        EarningHours:
          description: Employee's earning hours
          type: number
          format: decimal
          example: 3.5
        BusinessStartDate:
          description: Start date of TimeCard
          type: string
          format: date-time
          minLength: 1
          example: '2020-11-17T12:00:00.000Z'
        BusinessEndDate:
          description: End date of TimeCard
          type: string
          format: date-time
          nullable: true
          example: '2020-11-22T12:00:00.000Z'
    I9Verification:
      type: object
      properties:
        CitizenOfCountry:
          description: |-
            Country of which the employee is citizen of.
                        
          type: string
          nullable: true
          example: USA
        WorkEligibility:
          description: |-
            Work Eligibility of the employee.
                        
          nullable: true
          example: USCitizen
          $ref: '#/components/schemas/WorkEligibility'
        WorkVisaType:
          description: |-
            Work visa type of the employee. Maximum characters should be 20.
                        
          type: string
          nullable: true
          example: H1B
        WorkVisaExpirationDate:
          description: |-
            Expiration date of the work visa.
                        
          type: string
          format: date-time
          nullable: true
          example: 05/25/2023
        AlienAdmissionNumber:
          description: |-
            Alien admission number of the employee.
                        
          type: string
          nullable: true
          example: 12365478961
        AlienAdmissionExpirationDate:
          description: |-
            Expiration date of the alien admission.
                        
          type: string
          format: date-time
          nullable: true
          example: 05/25/2023
        ListA:
          description: |-
            List A document of the employee.
                        
          nullable: true
          $ref: '#/components/schemas/ListA'
        ListB:
          description: |-
            List B document of the employee.
                        
          nullable: true
          $ref: '#/components/schemas/ListB'
        ListC:
          description: |-
            List C document of the employee.
                        
          nullable: true
          $ref: '#/components/schemas/ListC'
        ForeignPassportNumber:
          description: |-
            Foreign passport number of the employee.
                        
          type: string
          nullable: true
          example: N4123456
        CountryOfIssuance:
          description: |-
            Country of issuance of the foreign passport.
                        
          type: string
          nullable: true
          example: AU
        AdditionalInformation:
          description: >-
            Additional information for the I9 verification. Must be under 768
            characters.
                        
          type: string
          nullable: true
        HireDate:
          description: Hire date of the employee.
          type: string
          format: date-time
          example: 05/25/2019
        DateModified:
          description: |-
            Date when document were last updated.
                        
          type: string
          format: date-time
          example: 05/25/2023
    WorkEligibility:
      description: |-
        Enumeration of valid Types of WorkEligibility values.
                    
      type: string
      x-enumNames:
        - USCitizen
        - PermanentResident
        - AuthorizedAlien
        - NonCitizenNational
      enum:
        - USCitizen
        - PermanentResident
        - AuthorizedAlien
        - NonCitizenNational
    ListA:
      type: object
      properties:
        DocumentTitle:
          description: |-
            Document title of List A document.
                        
          nullable: true
          example: USPassport
          $ref: '#/components/schemas/ListADocument'
        DocumentNumber:
          description: |-
            Document number of the ListA document.Must be under 20 characters.
                        
          type: string
          nullable: true
          example: 1234567
        IssuingAuthority:
          description: |-
            Issuing authority of the ListA document.Must be under 30 characters.
                        
          type: string
          nullable: true
          example: state
        ListExpirationDate:
          description: |-
            Expiration date of ListA document.
                        
          type: string
          format: date-time
          nullable: true
          example: 01/01/2020
        ListASecondDocumentTitle:
          description: Document title of second document.Must be under 50 characters.
          type: string
          nullable: true
        ListASecondDocumentNumber:
          description: |-
            Document number of second document.Must be under 20 characters.
                        
          type: string
          nullable: true
        ListASecondIssuingAuthority:
          description: |-
            Issuing authority of second document.Must be under 30 characters.
                        
          type: string
          nullable: true
        ListASecondExpirationDate:
          description: >-
            Expiration date of scond document.Must be between "01/01/1900",
            "12/31/9999".
                        
          type: string
          format: date-time
          nullable: true
        ListAThirdDocumentTitle:
          description: |-
            Document title of third document.Must be under 50 characters.
                        
          type: string
          nullable: true
        ListAThirdDocumentNumber:
          description: Document number of third document.Must be under 20 characters.
          type: string
          nullable: true
        ListAThirdIssuingAuthority:
          description: |-
            Issuing authority of third document.Must be under 30 characters.
                        
          type: string
          nullable: true
        ListAThirdExpirationDate:
          description: >-
            Expiration date of third document.Must be between "01/01/1900",
            "12/31/9999".
                        
          type: string
          format: date-time
          nullable: true
    ListADocument:
      description: |-
        Enumeration of valid List A document values.
                    
      type: string
      x-enumNames:
        - USPassport
        - ForeignPassportWithI551stamp
        - PermanentResidentOrAlienRegistrationI551
        - EmploymentAuthorisationDocI766
        - ForeignPassportAndI94orI94A
        - PassportFromFSMorRMI
        - DocsFromFSMorRMI
        - I94withTempI551orRefugeeAdmissionStamp
        - ForeignPassportorI94orI94AOR120orDS2019
        - ReceiptReplacementPermanentResidentCardFormI551
        - ReceiptReplacementEADFormI766
        - ReceiptForeignPassportorI94or120orDS2019
        - ReceiptFSMPassportWithFormI94orI94orI94A
        - ReceiptRMIPassportWithFormI94orI94orI94A
        - ReceiptUSPassportOrUSPassportCard
        - ReceiptI94PermanentResidentCardI551StampAndPhoto
        - ReceiptI94withRENotationOrRefugeeStamp
      enum:
        - USPassport
        - ForeignPassportWithI551stamp
        - PermanentResidentOrAlienRegistrationI551
        - EmploymentAuthorisationDocI766
        - ForeignPassportAndI94orI94A
        - PassportFromFSMorRMI
        - DocsFromFSMorRMI
        - I94withTempI551orRefugeeAdmissionStamp
        - ForeignPassportorI94orI94AOR120orDS2019
        - ReceiptReplacementPermanentResidentCardFormI551
        - ReceiptReplacementEADFormI766
        - ReceiptForeignPassportorI94or120orDS2019
        - ReceiptFSMPassportWithFormI94orI94orI94A
        - ReceiptRMIPassportWithFormI94orI94orI94A
        - ReceiptUSPassportOrUSPassportCard
        - ReceiptI94PermanentResidentCardI551StampAndPhoto
        - ReceiptI94withRENotationOrRefugeeStamp
    ListB:
      type: object
      properties:
        DocumentTitle:
          description: |-
            Document title of ListB document.
                        
          nullable: true
          example: DriverLicense
          $ref: '#/components/schemas/ListBDocument'
        DocumentNumber:
          description: |-
            Document number of the ListB document.Must be under 20 characters.
                        
          type: string
          nullable: true
          example: 1234567
        IssuingAuthority:
          description: |-
            Issuing authority of the ListB document.Must be under 30 characters.
                        
          type: string
          nullable: true
          example: state
        ListExpirationDate:
          description: |-
            Expiration date of ListB document.
                        
          type: string
          format: date-time
          nullable: true
          example: 01/01/2020
    ListBDocument:
      description: |-
        Enumeration of valid List B document values.
                    
      type: string
      x-enumNames:
        - DriverLicenseorIDcard
        - FederalORstateORLocalGovtID
        - SchoolIDcardWithPhotograph
        - VotersRegistrationCard
        - USMilitaryCardOrDraftRecord
        - MilitaryDependentsIDcard
        - USCoastGuardMerchantMariner
        - NativeAmericanTribalDoc
        - DriverLicenseCanadianGovt
        - SchoolRecordOrReportCard
        - ClinicDoctorOrHospitalRecord
        - DaycareOrNurserySchoolRecord
        - DriverLicense
        - IDCardIssuedByUSStateOrOutlyingPossession
        - ReceiptDriverLicenseOrIDCard
        - ReceiptFederalOrStateOrLocalGovtID
        - ReceiptSchoolIDCardWithPhotograph
        - ReceiptVotersRegistrationCard
        - ReceiptUSMilitaryCardOrDraftRecord
        - ReceiptMilitaryDependentsIDCard
        - ReceiptUSCoastGuardMerchantMariner
        - ReceiptNativeAmericanTribalDoc
        - ReceiptDriverLicenseCanadianGovt
        - ReceiptSchoolRecordOrReportCard
        - ReceiptClinicDoctorOrHospitalRecord
        - ReceiptDayCareOrNurserySchoolRecord
        - ReceiptDriversLicense
        - ReceiptUSStateCardOrOutlyingPossession
      enum:
        - DriverLicenseorIDcard
        - FederalORstateORLocalGovtID
        - SchoolIDcardWithPhotograph
        - VotersRegistrationCard
        - USMilitaryCardOrDraftRecord
        - MilitaryDependentsIDcard
        - USCoastGuardMerchantMariner
        - NativeAmericanTribalDoc
        - DriverLicenseCanadianGovt
        - SchoolRecordOrReportCard
        - ClinicDoctorOrHospitalRecord
        - DaycareOrNurserySchoolRecord
        - DriverLicense
        - IDCardIssuedByUSStateOrOutlyingPossession
        - ReceiptDriverLicenseOrIDCard
        - ReceiptFederalOrStateOrLocalGovtID
        - ReceiptSchoolIDCardWithPhotograph
        - ReceiptVotersRegistrationCard
        - ReceiptUSMilitaryCardOrDraftRecord
        - ReceiptMilitaryDependentsIDCard
        - ReceiptUSCoastGuardMerchantMariner
        - ReceiptNativeAmericanTribalDoc
        - ReceiptDriverLicenseCanadianGovt
        - ReceiptSchoolRecordOrReportCard
        - ReceiptClinicDoctorOrHospitalRecord
        - ReceiptDayCareOrNurserySchoolRecord
        - ReceiptDriversLicense
        - ReceiptUSStateCardOrOutlyingPossession
    ListC:
      type: object
      properties:
        DocumentTitle:
          description: |-
            Document title of ListC document.
                        
          nullable: true
          example: USCitizenIDCardI197
          $ref: '#/components/schemas/ListCDocument'
        DocumentNumber:
          description: |-
            Document number of the ListC document.Must be under 20 characters.
                        
          type: string
          nullable: true
          example: 1234567
        IssuingAuthority:
          description: |-
            Issuing authority of the ListC document.Must be under 30 characters.
                        
          type: string
          nullable: true
          example: state
        ListExpirationDate:
          description: |-
            Expiration date of ListC document.
                        
          type: string
          format: date-time
          nullable: true
          example: 01/01/2020
    ListCDocument:
      description: |-
        Enumeration of valid List C document values.
                    
      type: string
      x-enumNames:
        - SocialSecurityAccountNumber
        - CertificateOfBirthDS1350orFS545FS240
        - CertificationOfBirthAbroadFS545
        - CertificateOfReportOfBirthDS1350
        - ConsularReportOfBirthAbroadFS240
        - USBirthCertificate
        - NativeAmericanTribalDoc
        - USCitizenIDCardI197
        - IDCardForResidentCitizenI179
        - EmploymentAuthorisationDocumentDHS
        - ReceiptSocialSecurityAccountNumber
        - ReceiptUSBirthCertificate
        - ReceiptNativeAmericanTribalDoc
        - ReceiptUSCitizenIDCardI197
        - ReceiptIDCardForResidentCitizenI179
        - ReceiptEmploymentAuthorizationDocumentDHS
        - CertificationOfBirthDS1350FS545FS240
        - ReceiptCertificationOfBirthAbroadFS545
        - ReceiptCertificateOfReportOfBirthDS1350
        - ReceiptConsularReportOfBirthAbroadFS240
      enum:
        - SocialSecurityAccountNumber
        - CertificateOfBirthDS1350orFS545FS240
        - CertificationOfBirthAbroadFS545
        - CertificateOfReportOfBirthDS1350
        - ConsularReportOfBirthAbroadFS240
        - USBirthCertificate
        - NativeAmericanTribalDoc
        - USCitizenIDCardI197
        - IDCardForResidentCitizenI179
        - EmploymentAuthorisationDocumentDHS
        - ReceiptSocialSecurityAccountNumber
        - ReceiptUSBirthCertificate
        - ReceiptNativeAmericanTribalDoc
        - ReceiptUSCitizenIDCardI197
        - ReceiptIDCardForResidentCitizenI179
        - ReceiptEmploymentAuthorizationDocumentDHS
        - CertificationOfBirthDS1350FS545FS240
        - ReceiptCertificationOfBirthAbroadFS545
        - ReceiptCertificateOfReportOfBirthDS1350
        - ReceiptConsularReportOfBirthAbroadFS240
    Includes7:
      description: ''
      type: string
      x-enumNames:
        - DocumentNumber
      enum:
        - DocumentNumber
    I9Verification2:
      type: object
      properties:
        CitizenOfCountry:
          description: |-
            Country of which the employee is citizen of.
                        
          type: string
          nullable: true
          example: USA
        WorkEligibility:
          description: |-
            Work Eligibility of the employee.
                        
          nullable: true
          example: USCitizen
          $ref: '#/components/schemas/WorkEligibility'
        WorkVisaType:
          description: |-
            Work visa type of the employee. Maximum characters should be 20.
                        
          type: string
          nullable: true
          example: H1B
        WorkVisaExpirationDate:
          description: |-
            Expiration date of the work visa.
                        
          type: string
          format: date-time
          nullable: true
          example: 10/25/2023
        AlienAdmissionNumber:
          description: |-
            Alien admission number of the employee.
                        
          type: string
          nullable: true
          example: 12365478961
        AlienAdmissionExpirationDate:
          description: |-
            Expiration date of the alien admission.
                        
          type: string
          format: date-time
          nullable: true
          example: 05/25/2023
        ListA:
          description: |-
            List A document of the employee.
                        
          nullable: true
          $ref: '#/components/schemas/ListA'
        ListB:
          description: |-
            List B document of the employee.
                        
          nullable: true
          $ref: '#/components/schemas/ListB'
        ListC:
          description: |-
            List C document of the employee.
                        
          nullable: true
          $ref: '#/components/schemas/ListC'
        ForeignPassportNumber:
          description: |-
            Foreign passport number of the employee.
                        
          type: string
          nullable: true
          example: N4123456
        CountryOfIssuance:
          description: |-
            Country of issuance of the foreign passport.
            Accepted values ISO-3166 alpha2 or alpha3 codes for countries.
                        
          type: string
          nullable: true
          example: AU
        AdditionalInformation:
          description: >-
            Additional information for the I9 verification. Must be under 768
            characters.
                        
          type: string
          nullable: true
    PayAdvance:
      type: object
      properties:
        PayImportId:
          description: Unique identifier of Pay Import
          type: integer
          format: int32
          example: 435
        EmployeeId:
          description: Unique identifier of this employee
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        Code:
          description: Pay code for this payment
          type: string
          nullable: true
          example: On demand
        DeductOnDate:
          description: Advance payment date for this employee
          type: string
          format: date-time
          example: '2021-04-21'
        Amount:
          description: Advance payment amount
          type: number
          format: decimal
          example: 3000
        PlannerId:
          description: Id of the planner for this payment
          type: string
          format: guid
          example: d6001214-0331-0000-0000-0000673f0300
    PayAdvance2:
      description: Pay advance create object for specific employee
      type: object
      required:
        - DeductOnDate
        - Amount
      properties:
        DeductOnDate:
          description: Advance payment date for this employee
          type: string
          format: date-time
          minLength: 1
          example: '2021-04-21'
        Amount:
          description: Advance payment amount
          type: number
          format: decimal
          example: 3000
        Partner:
          description: Optional Partner Name value
          type: string
          nullable: true
          example: PartnerName
    CancelOnDemandPayResult:
      type: object
      properties:
        OriginalPayImportId:
          type: integer
          format: int32
        CancellationPayImportId:
          type: integer
          format: int32
    CancelPayAdvances:
      description: >-
        Cancel pay data model represents collection of advance payment imports
        which needs to be canceled for specific legal entity
      type: object
      required:
        - AdvancePayImportIds
      properties:
        AdvancePayImportIds:
          description: Collection of advance payment ids which needs to be canceled
          type: array
          xml:
            wrapped: true
          items:
            type: integer
            format: int32
            xml:
              name: int
    PagedResultOfEmployeePayRate:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeePayRate
            $ref: '#/components/schemas/EmployeePayRate'
    EmployeePayRate:
      description: >-
        The Pay Rates model represents information about the Employee's Pay
        Rate.

        Provides link to the Employee's information.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee pay rate in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 75571ee9-d359-0000-0000-000066000000
        EffectiveStartDate:
          description: |-
            Date when the employee pay rate takes effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-22T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date when the employee pay rate is no longer in effect, or NULL if
            rate is currently active.

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-12-01T12:15:00Z'
        SequenceNumber:
          description: >-
            Orders how multiple earnings are calculated. Needed so earnings
            dependent on other earnings are calculated in the proper sequence.
          type: integer
          format: int32
          nullable: true
          example: 1
        PayRate:
          description: >-
            Employee's rate of pay (in dollars). 

            If Pay Type is Hourly, then Pay Rate is a Per-Hour dollar amount and
            is required. 

            If Pay Type is Salary, then Pay Rate is a Per-Pay dollar amount, and
            either Pay Rate or Annual Rate is required.

            Payrate can't have more than 6 decimal places and can't be
            negative. 
                        
          type: number
          format: decimal
          nullable: true
          example: 25.52
        AnnualPayRate:
          description: |-
            Employee's annual amount of pay (in dollars).
                        
          type: number
          format: decimal
          nullable: true
          example: 53081.6
        Description:
          description: |-
            Brief description of the employee's pay rate.
                        
          type: string
          nullable: true
          example: Rate 1
        AnnualHours:
          description: Employee's annual working hours. Value defaults to 2080.
          type: integer
          format: int32
          example: 2080
        Type:
          description: |-
            Whether pay rate is: 
              * Hourly (in which case PayRate will be per-hour)
              * Salary (in which case PayRate will be per-pay) 
          example: Hourly
          $ref: '#/components/schemas/PayType'
        Reason:
          description: |-
            Reason associated with the employee's pay rate. 
                        
          type: string
          nullable: true
          example: Merit Increase.
        Notes:
          description: >-
            Notes associated with the employee's pay rate, which will be
            displayed on Pay Rate History page.  

            There is a known bug and would be fixed in coming release. 

            Value is always null due to existing issue and actual values in
            Paycor system may or may not be null based on the user input.
                        
          type: string
          nullable: true
        Employees:
          description: >-
            URL to access the Employee resource for information about the
            employee.
                        
          nullable: true
          example: v1/employees/36f45f30-9a35-0000-0000-000001000000
          $ref: '#/components/schemas/ResourceReference'
    PayType:
      description: |-
        Enumeration of valid Pay Type values.
                    
      type: string
      x-enumNames:
        - Salary
        - Hourly
      enum:
        - Salary
        - Hourly
    EmployeePayRate2:
      description: >-
        The Create PayRate model represents Employee PayRate related information
        needed to create a new PayRate.
      type: object
      required:
        - EffectiveStartDate
        - SequenceNumber
        - Description
      properties:
        EffectiveStartDate:
          description: >-
            Represents the date that the payrate goes into effect. 

            You can pass in future dates to take effect in future, or today's
            date to take effect immediately. 

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-22T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date when the employee pay rate is no longer in effect. Default to
            null. Only pass in a date if the payrate is no longer active.

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-12-01T12:15:00Z'
        SequenceNumber:
          description: >-
            Orders how multiple earnings are calculated. Needed so earnings
            dependent on other earnings are calculated in the proper sequence.

            Must be unique and be ascending without gaps (ie 1, 2, 3…). Use GET
            Payrates to identify existing sequences.
          type: integer
          format: int32
          example: 1
        PayRate:
          description: >-
            Employee's rate of pay (in dollars). 

            If Pay Type is Hourly, then Pay Rate is a Per-Hour dollar amount and
            is required. 

            If Pay Type is Salary, then Pay Rate is a Per-Pay dollar amount, and
            either Pay Rate or Annual Rate is required.

            Payrate can't have more than 6 decimal places and can't be
            negative. 
                        
          type: number
          format: decimal
          nullable: true
          example: 25.52
        AnnualPayRate:
          description: >-
            Employee's annual pay amount (in dollars). Only used if
            Type=Salary. 

            * For Salary Type, AnnualPayRate overrides payRate if passed into
            API call. The value not provided will be calculated based on
            Employee's Annual Hours setup on Employee's Profile.

            * For Hourly Type, this parameter is ignored - Paycor calculates
            based on Employee's Annual Hours setup on Employee's Profile.
                        
          type: number
          format: decimal
          nullable: true
          example: 53081.6
        Description:
          description: >-
            Required. Brief description of the employee's pay rate. Defaults to
            "Rate {SequenceNumber}"

            Must be 20 characters or less
                        
          type: string
          minLength: 1
          example: Rate 1
        Type:
          description: |-
            Whether pay rate is: 
              * Hourly (in which case PayRate will be per-hour)
              * Salary (in which case PayRate will be per-pay) 
          example: Hourly
          $ref: '#/components/schemas/PayType'
        Reason:
          description: |-
            Reason associated with the employee's pay rate. Optional. 
                        
          type: string
          nullable: true
          example: Merit Increase.
        Notes:
          description: >-
            Notes associated with the employee's pay rate, which will be
            displayed on Pay Rate History page. 

            Must be 512 characters or less. Optional. 
                        
          type: string
          nullable: true
    EmployeePayRate3:
      description: >-
        The Update PayRate model includes fields that can be updated on an
        existing PayRate. 
      type: object
      required:
        - EffectiveStartDate
        - PayRate
        - Description
      properties:
        EffectiveStartDate:
          description: >-
            Represents the date that the payrate goes into effect. 

            PUT requires EffectiveStartDate value to be unique for this
            PayRateId. 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-22T00:00:00Z'
        SequenceNumber:
          description: >-
            Orders how multiple earnings are calculated. Needed so earnings
            dependent on other earnings are calculated in the proper sequence.

            For PUT, this should match an existing SequenceNumber (retrieved via
            GET Employee PayRates).
          type: integer
          format: int32
          example: 1
        PayRate:
          description: >-
            Employee's rate of pay (in dollars). 

            If Pay Type is Hourly, then Pay Rate is a Per-Hour dollar amount and
            is required. 

            If Pay Type is Salary, then Pay Rate is a Per-Pay dollar amount, and
            either Pay Rate or Annual Rate is required.

            Payrate can't have more than 6 decimal places and can't be
            negative. 
                        
          type: number
          format: decimal
          example: 25.52
        AnnualPayRate:
          description: >-
            Employee's annual pay amount (in dollars). Only used if
            Type=Salary. 

            * For Salary Type, AnnualPayRate overrides payRate if passed into
            API call. The value not provided will be calculated based on
            Employee's Annual Hours setup on Employee's Profile.

            * For Hourly Type, this parameter is ignored - Paycor calculates
            based on Employee's Annual Hours setup on Employee's Profile.
                        
          type: number
          format: decimal
          nullable: true
          example: 53081.6
        Description:
          description: >-
            Required. Brief description of the employee's pay rate. Defaults to
            "Rate {SequenceNumber}"

            Must be 20 characters or less
                        
          type: string
          minLength: 1
          example: Rate 1
        Type:
          description: |-
            Whether pay rate is: 
              * Hourly (in which case PayRate will be per-hour)
              * Salary (in which case PayRate will be per-pay) 
          example: Hourly
          $ref: '#/components/schemas/PayType'
        Reason:
          description: |-
            Reason associated with the employee's pay rate. Optional. 
                        
          type: string
          nullable: true
          example: Merit Increase.
        Notes:
          description: >-
            Notes associated with the employee's pay rate, which will be
            displayed on Pay Rate History page. 

            Must be 512 characters or less. Optional. 
                        
          type: string
          nullable: true
    PagedResultOfPayPeriod:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayPeriod
            $ref: '#/components/schemas/PayPeriod'
    PayPeriod:
      type: object
      properties:
        PeriodStartDate:
          description: Start date of the pay period
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        PeriodEndDate:
          description: End date of the pay period
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        CheckDate:
          description: The paycheck date for this employee. Also referred to as Pay Date.
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        ProcessDate:
          description: The pay process date for this employee.
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        PlannerId:
          description: Planner id
          type: string
          format: guid
          example: dbec8470-e8b4-0000-0000-00009add0300
        PayrollStatus:
          description: |-
            B - Posted Sent to Billing,
            D - Payroll Distributed,
            E - Expected To Run,
            H - Payroll On Hold,
            I - Payroll In Process,
            P - Payroll Posted,
            R - Ready to Post,
            S - Payroll Skipped,
            W - Waiting for Wired Funds
          example: P
          $ref: '#/components/schemas/PayrollStatus'
    PayrollStatus:
      description: |-
        B - Posted Sent to Billing,
        D - Payroll Distributed,
        E - Expected To Run,
        H - Payroll On Hold,
        I - Payroll In Process,
        P - Payroll Posted,
        R - Ready to Post,
        S - Payroll Skipped,
        W - Waiting for Wired Funds
      type: string
      x-enumNames:
        - B
        - D
        - E
        - H
        - I
        - P
        - R
        - S
        - W
      enum:
        - B
        - D
        - E
        - H
        - I
        - P
        - R
        - S
        - W
    Includes8:
      description: '    AdditionalRuns - Include additinal runs'
      type: string
      x-enumNames:
        - AdditionalRuns
      enum:
        - AdditionalRuns
    PagedResultOfPayStub:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStub
            $ref: '#/components/schemas/PayStub'
    PayStub:
      type: object
      properties:
        EmployeeId:
          description: Unique identifier of this employee
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        ClientId:
          description: Unique identifier of the legal entity in Paycor's system
          type: integer
          format: int32
          example: 100
        CheckNumber:
          description: Check number.
          type: integer
          format: int64
          example: 27463631
        PlannerId:
          description: Unique identifier of the Planner Id for this Paystub.
          type: string
          format: guid
          example: cfc11370-c241-4c9d-a5d2-90d340ee005c
        CheckType:
          description: >-
            The type of check: Regular, Manual, Void, ThirdPartySickPay,
            NetDirectDepositOverride
          example: Regular
          $ref: '#/components/schemas/CheckType'
        PeriodStartDate:
          description: |-
            Start date of the pay period
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        PeriodEndDate:
          description: |-
            End date of the pay period
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        GrossAmount:
          description: Employee's grosspay
          type: number
          format: decimal
          nullable: true
          example: 4200
        NetAmount:
          description: Employee's netpay
          type: number
          format: decimal
          nullable: true
          example: 3000
        Earnings:
          description: >-
            Earning object which contains total amount of earnings and
            collection of earning items included on paycheck
          nullable: true
          $ref: '#/components/schemas/PayStubEarning'
        Taxes:
          description: >-
            Tax object which contains total amount of taxes and collection of
            tax items included on paycheck
          nullable: true
          $ref: '#/components/schemas/PayStubTax'
        Deductions:
          description: >-
            Deductions object which contains total amount of deductions and
            collection of deductions items included on paycheck
          nullable: true
          $ref: '#/components/schemas/PayStubDeduction'
        Employee:
          description: |-
            URL to access the Employee resource for additional information. 
                        
          nullable: true
          example: /v1/employees/26413223-196c-0000-0000-0007d54d9839
          $ref: '#/components/schemas/ResourceReference'
        LegalEntity:
          description: |-
            URL to access the Legal Entity resource. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
    CheckType:
      description: Enumeration indicating types of paychecks
      type: string
      x-enumNames:
        - Unknown
        - Regular
        - Manual
        - Void
        - ThirdPartySickPay
        - NetDirectDepositOverride
      enum:
        - Unknown
        - Regular
        - Manual
        - Void
        - ThirdPartySickPay
        - NetDirectDepositOverride
    PayStubEarning:
      type: object
      properties:
        TotalEarningsAmount:
          description: Sum of all earning amounts in Earnings collection
          type: number
          format: decimal
          nullable: true
          example: 15000
        TotalEarningsHours:
          description: Sum of all earning hours in Earnings collection
          type: number
          format: decimal
          nullable: true
          example: 53.6
        Earnings:
          description: List of Earnings included on the paycheck
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubEarningItem
            $ref: '#/components/schemas/PayStubEarningItem'
    PayStubEarningItem:
      type: object
      properties:
        EarningCode:
          description: Earning code printed on paycheck, assigned via LegalEntityEarning
          type: string
          nullable: true
          example: Reg
        EarningDescription:
          description: >-
            Earning description assigned by Legal Entity, assigned via
            LegalEntityEarning
          type: string
          nullable: true
          example: Regular
        GlobalEarningCode:
          description: >-
            Paycor's Global earning code that is linked to this
            LegalEntityEarning
          type: string
          nullable: true
          example: Reg
        EarningAmount:
          description: >-
            Amount paid via this earning (USD). Includes Hours*Rate and Salary
            income.
          type: number
          format: decimal
          nullable: true
          example: 4800
        EarningHours:
          description: Hours covered by this earning, if provided
          type: number
          format: decimal
          nullable: true
          example: 160
        EarningRate:
          description: Hourly rate paid by this earning, if provided
          type: number
          format: decimal
          nullable: true
          example: 30
    PayStubTax:
      type: object
      properties:
        TotalTaxesAmount:
          description: Sum of all tax amounts in Taxes collection
          type: number
          format: decimal
          nullable: true
          example: 12600
        Taxes:
          description: List of Taxes included on the paycheck
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubTaxItem
            $ref: '#/components/schemas/PayStubTaxItem'
    PayStubTaxItem:
      type: object
      properties:
        TaxCode:
          description: Tax code printed on paycheck, Paycor-assigned
          type: string
          nullable: true
          example: FITWH
        GlobalTaxCode:
          description: Paycor's Global tax code
          type: string
          nullable: true
          example: FITWH
        TaxDescription:
          description: Tax description, Paycor-assigned
          type: string
          nullable: true
          example: Federal Income Tax
        TaxAmount:
          description: Amount withheld from check for tax
          type: number
          format: decimal
          nullable: true
          example: 477.83
    PayStubDeduction:
      type: object
      properties:
        TotalDeductionsAmount:
          description: Sum of all deduction amounts in Deductions collection
          type: number
          format: decimal
          nullable: true
        Deductions:
          description: List of Deductions included on the paycheck
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubDeductionItem
            $ref: '#/components/schemas/PayStubDeductionItem'
    PayStubDeductionItem:
      type: object
      properties:
        DeductionCode:
          description: >-
            Deduction code printed on paycheck, assigned via
            LegalEntityDeduction
          type: string
          nullable: true
          example: CSDispOH
        GlobalDeductionCode:
          description: Global deduction code
          type: string
          nullable: true
          example: 401K
        DeductionDescription:
          description: >-
            Deduction description assigned by Legal Entity, assigned via
            LegalEntityDeduction
          type: string
          nullable: true
          example: Child Support Ohio
        DeductionAmount:
          description: Amount deducted from check
          type: number
          format: decimal
          nullable: true
          example: 1000
    Includes9:
      description: |2-
            All - Include all data


            GrossAmount - Include gross amount


            NetAmount - Include net amount


            Earnings - Include earnings


            Taxes - Include taxes


            Deductions - Include deductions
      type: string
      x-enumNames:
        - All
        - GrossAmount
        - NetAmount
        - Earnings
        - Taxes
        - Deductions
      enum:
        - All
        - GrossAmount
        - NetAmount
        - Earnings
        - Taxes
        - Deductions
    PagedResultOfPayStub2:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStub
            $ref: '#/components/schemas/PayStub2'
    PayStub2:
      description: >-
        Pay Stub model represents collection of information included on
        Employee's pay stub
      type: object
      properties:
        EmployeeId:
          description: Unique identifier of employee
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        ClientId:
          description: Unique identifier of the legal entity in Paycor's system
          type: integer
          format: int32
          example: 100
        CheckNumber:
          description: Check number.
          type: integer
          format: int64
          example: 27463631
        PlannerId:
          description: Unique identifier of the Planner Id for this Paystub.
          type: string
          format: guid
          example: cfc11370-c241-4c9d-a5d2-90d340ee005c
        CheckType:
          description: >-
            The type of check: Regular, Manual, Void, ThirdPartySickPay,
            NetDirectDepositOverride
          example: Regular
          $ref: '#/components/schemas/CheckType'
        PeriodStartDate:
          description: |-
            Start date of the pay period
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        PeriodEndDate:
          description: |-
            End date of the pay period
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        GrossAmount:
          description: Employee's grosspay
          type: number
          format: decimal
          nullable: true
          example: 4200
        NetAmount:
          description: Employee's netpay
          type: number
          format: decimal
          nullable: true
          example: 3000
        Earnings:
          description: >-
            Earning object which contains total amount of earnings and
            collection of earning items included on paycheck
          nullable: true
          $ref: '#/components/schemas/PayStubEarning2'
        Taxes:
          description: >-
            Tax object which contains total amount of taxes and collection of
            tax items included on paycheck
          nullable: true
          $ref: '#/components/schemas/PayStubTax2'
        Deductions:
          description: >-
            Deductions object which contains total amount of deductions and
            collection of deductions items included on paycheck
          nullable: true
          $ref: '#/components/schemas/PayStubDeduction2'
        Employee:
          description: |-
            URL to access the Employee resource for additional information. 
                        
          nullable: true
          example: /v1/employees/26413223-196c-0000-0000-0007d54d9839
          $ref: '#/components/schemas/ResourceReference'
        LegalEntity:
          description: |-
            URL to access the Legal Entity resource. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
    PayStubEarning2:
      type: object
      properties:
        TotalEarningsAmount:
          description: Sum of all earning amounts in Earnings collection
          type: number
          format: decimal
          nullable: true
          example: 15000
        TotalEarningsHours:
          description: Sum of all earning hours in Earnings collection
          type: number
          format: decimal
          nullable: true
          example: 53.6
        Earnings:
          description: 'List of Earnings included '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubEarningItem
            $ref: '#/components/schemas/PayStubEarningItem2'
    PayStubEarningItem2:
      type: object
      properties:
        EarningCode:
          description: Earning code printed on paycheck, assigned via LegalEntityEarning
          type: string
          nullable: true
          example: Reg
        EarningDescription:
          description: >-
            Earning description assigned by Legal Entity, assigned via
            LegalEntityEarning
          type: string
          nullable: true
          example: Regular
        GlobalEarningCode:
          description: >-
            Paycor's Global earning code that is linked to this
            LegalEntityEarning
          type: string
          nullable: true
          example: Reg
        EarningAmount:
          description: >-
            Amount paid via this earning (USD). Includes Hours*Rate and Salary
            income.
          type: number
          format: decimal
          nullable: true
          example: 4800
        EarningHours:
          description: Hours covered by this earning
          type: number
          format: decimal
          nullable: true
          example: 160
        EarningRate:
          description: Hourly rate paid by this earning
          type: number
          format: decimal
          nullable: true
          example: 30
        DepartmentCode:
          description: 'Numeric code of department '
          type: integer
          format: int64
          example: 334
    PayStubTax2:
      type: object
      properties:
        TotalTaxesAmount:
          description: Sum of all tax amounts in Taxes collection
          type: number
          format: decimal
          nullable: true
          example: 12600
        TotalEmployeeTaxAmount:
          description: Sum of all tax amounts in Deductions collection for employees
          type: number
          format: decimal
          nullable: true
        TotalEmployerTaxAmount:
          description: Sum of all tax amounts in Deductions collection for employers
          type: number
          format: decimal
          nullable: true
        Taxes:
          description: List of Taxes included on the paycheck
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubTaxItem
            $ref: '#/components/schemas/PayStubTaxItem2'
    PayStubTaxItem2:
      type: object
      properties:
        TaxCode:
          description: Tax code printed on paycheck, Paycor-assigned
          type: string
          nullable: true
          example: FITWH
        GlobalTaxCode:
          description: Paycor's Global tax code
          type: string
          nullable: true
          example: FITWH
        TaxDescription:
          description: Tax description, Paycor-assigned
          type: string
          nullable: true
          example: Federal Income Tax
        TaxAmount:
          description: Amount withheld from check for tax
          type: number
          format: decimal
          nullable: true
          example: 477.83
        EmployeeTax:
          description: Indicates if tax refers to employee
          type: boolean
          example: true
        EmployerTax:
          description: Indicates if tax refers to employer
          type: boolean
          example: false
    PayStubDeduction2:
      type: object
      properties:
        TotalDeductionsAmount:
          description: Sum of all deduction amounts in Deductions collection
          type: number
          format: decimal
          nullable: true
        TotalEmployerDeductionsAmount:
          description: Sum of all deduction amounts in Deductions collection for employers
          type: number
          format: decimal
          nullable: true
        TotalEmployeeDeductionsAmount:
          description: Sum of all deduction amounts in Deductions collection for employees
          type: number
          format: decimal
          nullable: true
        Deductions:
          description: 'List of Deductions included '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayStubDeductionItem
            $ref: '#/components/schemas/PayStubDeductionItem2'
    PayStubDeductionItem2:
      type: object
      properties:
        DeductionCode:
          description: >-
            Deduction code printed on paycheck, assigned via
            LegalEntityDeduction
          type: string
          nullable: true
          example: CSDispOH
        GlobalDeductionCode:
          description: Global deduction code
          type: string
          nullable: true
          example: 401K
        DeductionDescription:
          description: >-
            Deduction description assigned by Legal Entity, assigned via
            LegalEntityDeduction
          type: string
          nullable: true
          example: Child Support Ohio
        DeductionAmount:
          description: Amount deducted from check
          type: number
          format: decimal
          nullable: true
          example: 1000
        EmployeeDeduction:
          description: Indicates if deduction is employee deduction
          type: boolean
          example: true
        EmployerDeduction:
          description: Indicates if deduction is employer deduction
          type: boolean
          example: false
    Includes10:
      description: |2-
            All - Include all data


            GrossAmount - Include gross amount


            NetAmount - Include net amount


            Earnings - Include earnings


            Taxes - Include taxes


            Deductions - Include deductions
      type: string
      x-enumNames:
        - All
        - GrossAmount
        - NetAmount
        - Earnings
        - Taxes
        - Deductions
      enum:
        - All
        - GrossAmount
        - NetAmount
        - Earnings
        - Taxes
        - Deductions
    EmployeePayStubHistory:
      type: object
      properties:
        LegalEntityId:
          description: Unique identifier of the legal entity in Paycor's system.
          type: integer
          format: int32
          example: 100
        EmployeeId:
          description: Unique identifier of this employee.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        Earnings:
          description: >-
            Earning object which contains total amount of earnings and
            collection of earning items.
          nullable: true
          $ref: '#/components/schemas/EmployeeEarningsHistory'
        Deductions:
          description: >-
            Deductions object which contains total amount of deductions and
            collection of deductions items.
          nullable: true
          $ref: '#/components/schemas/EmployeeDeductionsHistory'
        Taxes:
          description: >-
            Tax object which contains total amount of taxes and collection of
            tax items.
          nullable: true
          $ref: '#/components/schemas/EmployeeTaxesHistory'
        Employee:
          description: |-
            URL to access the Employee resource for additional information. 
                        
          nullable: true
          example: /v1/employees/26413223-196c-0000-0000-0007d54d9839
          $ref: '#/components/schemas/ResourceReference'
        LegalEntity:
          description: |-
            URL to access the Legal Entity resource. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
    EmployeeEarningsHistory:
      type: object
      properties:
        TotalEarningsAmount:
          description: Sum of all earning amounts in EarningHistoryItems collection.
          type: number
          format: decimal
          nullable: true
          example: 15000
        EarningHistoryItems:
          description: List of Earnings.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeEarningHistoryItem
            $ref: '#/components/schemas/EmployeeEarningHistoryItem'
    EmployeeEarningHistoryItem:
      type: object
      properties:
        Id:
          description: Unique identifier of this tax item.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        Name:
          description: Name of this earning item.
          type: string
          nullable: true
          example: Overtime Hours
        TotalEarningAmount:
          description: Total earning amount.
          type: number
          format: decimal
          nullable: true
          example: 456
        TotalEarningHours:
          description: Total earning hours.
          type: number
          format: decimal
          nullable: true
          example: 82
        DeductionAmount:
          description: Amount deducted from this earning item.
          type: number
          format: decimal
          nullable: true
          example: 100
        EarningsTaxableAmount:
          description: Taxable amount of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 100
        EarningsTaxableWages:
          description: Taxable wages of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 100
        EarningsExemptWages:
          description: Exempt wages of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 100
        EarningsExcessWages:
          description: Excess wages of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 100
        TotalWages:
          description: Total wages of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 100
        EarningTotalNonMemoAmount:
          description: Total non memo amount of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 50
        EarningTotalNonMemoHours:
          description: Total non memo hours of this earning item.
          type: number
          format: decimal
          nullable: true
          example: 40
        EarningCode:
          description: Earning code of this item, assigned via LegalEntityEarning.
          type: string
          nullable: true
          example: Reg
        EarningDescription:
          description: >-
            Earning description of this item, assigned by Legal Entity via
            LegalEntityEarning.
          type: string
          nullable: true
          example: Regular
    EmployeeDeductionsHistory:
      type: object
      properties:
        TotalDeductionsAmount:
          description: Sum of all deduction amounts in DeductionHistoryItems collection.
          type: number
          format: decimal
          nullable: true
        DeductionHistoryItems:
          description: List of Deductions.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeDeductionHistoryItem
            $ref: '#/components/schemas/EmployeeDeductionHistoryItem'
    EmployeeDeductionHistoryItem:
      type: object
      properties:
        Id:
          description: Unique identifier of this deduction item.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        Name:
          description: Name of this deduction item.
          type: string
          nullable: true
          example: 401k plan
        TotalDeductionAmount:
          description: Total amount deducted from this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 234
        DeductionTotalNonMemoHours:
          description: Total non memo hours hours of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 22
        DeductionTaxableAmount:
          description: Taxable amount of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 500
        DeductionTaxableWages:
          description: Taxable wages of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 500
        DeductionExemptWages:
          description: Exempt wages of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 300
        DeductionExcessWages:
          description: Excess wages of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 300
        DeductionTotalWages:
          description: Total wages of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 600
        DeductionTotalNonMemoAmount:
          description: Total non memo amount of this deduction item.
          type: number
          format: decimal
          nullable: true
          example: 200
        DeductionCode:
          description: Deduction code of this deduction item.
          type: string
          nullable: true
          example: CSDispOH
        DeductionDescription:
          description: >-
            Deduction description assigned by Legal Entity, assigned via
            LegalEntityDeduction.
          type: string
          nullable: true
          example: Child Support Ohio
    EmployeeTaxesHistory:
      type: object
      properties:
        TotalEmployeeAmount:
          description: Sum of all employee tax amounts in TaxHistoryItems collection.
          type: number
          format: decimal
          nullable: true
          example: 12600
        TotalEmployerAmount:
          description: Sum of all employer tax amounts in TaxHistoryItems collection.
          type: number
          format: decimal
          nullable: true
          example: 12600
        TaxHistoryItems:
          description: List of Taxes.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeTaxHistoryItem
            $ref: '#/components/schemas/EmployeeTaxHistoryItem'
    EmployeeTaxHistoryItem:
      type: object
      properties:
        Id:
          description: Unique identifier of this tax item.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        Name:
          description: Name of this tax item.
          type: string
          nullable: true
          example: FITWH - Federal Income Tax
        EmployerTaxAmount:
          description: Employer's tax amount.
          type: number
          format: decimal
          nullable: true
          example: 430.5
        EmployeeTaxAmount:
          description: Employee's tax amount.
          type: number
          format: decimal
          nullable: true
          example: 430.5
        TaxableWages:
          description: Employee's taxable wage.
          type: number
          format: decimal
          nullable: true
          example: 430.5
        TaxableExemptWages:
          description: Employee's taxable exempt wage.
          type: number
          format: decimal
          nullable: true
          example: 430.5
        TaxableExcessWages:
          description: Employee's taxable excess wage.
          type: number
          format: decimal
          nullable: true
          example: 430.5
        TotalWages:
          description: Employee's total wage.
          type: number
          format: decimal
          nullable: true
          example: 430.5
        TaxCode:
          description: Tax code printed on paycheck, Paycor-assigned
          type: string
          nullable: true
          example: FITWH
        TaxDescription:
          description: Tax description, Paycor-assigned
          type: string
          nullable: true
          example: Federal Income Tax
        TaxAmount:
          description: Amount withheld from check for tax
          type: number
          format: decimal
          nullable: true
          example: 477.83
    Includes11:
      description: |2-
            All - Include all data


            Earnings - Include earnings


            Taxes - Include taxes


            Deductions - Include deductions
      type: string
      x-enumNames:
        - All
        - Earnings
        - Taxes
        - Deductions
      enum:
        - All
        - Earnings
        - Taxes
        - Deductions
    PagedResultOfEmployeePayStubHistory:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeePayStubHistory
            $ref: '#/components/schemas/EmployeePayStubHistory'
    Includes12:
      description: |2-
            All - Include all data


            Earnings - Include earnings


            Taxes - Include taxes


            Deductions - Include deductions
      type: string
      x-enumNames:
        - All
        - Earnings
        - Taxes
        - Deductions
      enum:
        - All
        - Earnings
        - Taxes
        - Deductions
    EmployeeSchedule:
      description: >-
        The Employee Schedule model represents all schedules for a single
        employee for a given date range.
      type: object
      properties:
        Date:
          description: |-
            Date of the shift when employee worked.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        EmployeeId:
          description: >-
            Unique identifier of the employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        LegalEntityId:
          description: |-
            Unique Identifier of the Legal Entity in Paycor's system.
                        
          type: integer
          format: int32
          example: 122900
        Schedules:
          description: >-
            List of type Schedule containing the employee's schedule
            information.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Schedule
            $ref: '#/components/schemas/Schedule'
        TotalShifts:
          description: >-
            This is the number of shifts an employee has worked for a given date
            range.
          type: integer
          format: int32
          example: 5
        TotalHours:
          description: >-
            This is the amount of hours an employee has worked for a given date
            range.
          type: number
          format: double
          example: 40
        Employee:
          description: >-
            URL to access the Employee resource for additional information about
            the employee.
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    Schedule:
      description: |-
        The Schedule model represents all related employee schedule information.
        Provides link to the Shift's Department
      type: object
      properties:
        ScheduleId:
          description: >-
            Unique identifier of the Schedule in Paycor's system. Generated by
            Paycor.
                        
          type: string
          format: guid
          example: 5e699a0d-0000-0000-0000-0007d54d9839
        StartDateTime:
          description: |-
            Date and time the employee will begin work.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        EndDateTime:
          description: |-
            Date and time the employee will stop work.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        BeforeStartTimeInMinutes:
          description: >-
            Punches will be tied to the schedule if employee clocks in this many
            Minutes before shift starts.
          type: integer
          format: int32
          example: 120
        AfterEndTimeInMinutes:
          description: >-
            Punches will be tied to the schedule if employee clocks out this
            many Minutes after shift ends.
          type: integer
          format: int32
          example: 120
        ShiftDepartmentName:
          description: Department name where the employee's timecard was created.
          type: string
          nullable: true
          example: Sales
        ShiftName:
          description: This is the shift name that is associated to the shift.
          type: string
          nullable: true
          example: Shift A
        TotalMinutesWorked:
          description: This is the amount of minutes an employee has worked.
          type: integer
          format: int32
          example: 480
        TotalHoursWorked:
          description: This is the amount of hours an employee has worked.
          type: number
          format: double
          example: 38.5
        StartDateTimeWithBefore:
          description: >-
            Date and time when employee punches will start being tied to a
            schedule.

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        EndDateTimeWithAfter:
          description: >-
            Date and time when employee punches will stop being tied to a
            schedule.

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        CrossesMidnight:
          description: True if shift starts in one day and ends the next day.
          type: boolean
          example: true
        ShiftDepartment:
          description: URL to access the Department resource for additional information.
          nullable: true
          example: /v1/Departments/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfEmployeeSchedule:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeSchedule
            $ref: '#/components/schemas/EmployeeSchedule'
    Schedule2:
      description: The Schedule create model.
      type: object
      properties:
        StartDateTime:
          description: |-
            Date and time the employee will begin work.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        EndDateTime:
          description: |-
            Date and time the employee will stop work.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        BeforeStartTimeInMinutes:
          description: >-
            Punches will be tied to the schedule if employee clocks in this many
            Minutes before shift starts.
          type: integer
          format: int32
          nullable: true
          example: 120
        AfterEndTimeInMinutes:
          description: >-
            Punches will be tied to the schedule if employee clocks out this
            many Minutes after shift ends.
          type: integer
          format: int32
          nullable: true
          example: 120
        Label:
          description: |-
            This is the label that will be assigned to the shift.
                        
          type: string
          nullable: true
          example: MorningShift
        ShiftDepeartmentId:
          description: >-
            Unique identifier of the Department where the employee's timecard
            will be created.
          type: string
          format: guid
          nullable: true
          example: 2f28bd9c-a39e-41f1-b40f-b44bf2e9c265
    PagedResultOfSchedulingJob:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: SchedulingJob
            $ref: '#/components/schemas/SchedulingJob'
    SchedulingJob:
      description: Paycor Scheduling Job.
      type: object
      properties:
        SchedulingJobId:
          description: Unique identifier of the Scheduling Job.
          type: string
          format: guid
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        SchedulingJobName:
          description: Name of the Scheduling Job.
          type: string
          nullable: true
          example: Software Engineer
    EmployeeReturnItem:
      allOf:
        - $ref: '#/components/schemas/Employee'
        - type: object
          properties:
            Email:
              nullable: true
              $ref: '#/components/schemas/WorkEmailExample'
    WorkEmailExample:
      allOf:
        - $ref: '#/components/schemas/Email'
        - type: object
          properties:
            Type:
              $ref: '#/components/schemas/EmployeeEmailType'
    EmployeeEmailType:
      description: ''
      type: string
      x-enumNames:
        - Work
      enum:
        - Work
    Email:
      description: 'The Email model represents Email information. '
      type: object
      properties:
        Type:
          description: Enumeration of valid email type values.
          example: Home
          $ref: '#/components/schemas/EmailType'
        EmailAddress:
          description: Email Address of the person.
          type: string
          nullable: true
          example: abc@email.com
    EmailType:
      description: 'Enumeration of valid Email Type values. '
      type: string
      x-enumNames:
        - Home
        - Work
      enum:
        - Home
        - Work
    Employee:
      description: |-
        The Employee model represents all Employee related information.
         Provides links to the Employee's associated Person, Legal Entity, Department, Earning, Deduction, Tax, Direct Deposit, Pay Rat and Custom Field information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        EmployeeNumber:
          description: |-
            Unique number of the employee in the tenant. Generated by Paycor.
                        
          type: string
          nullable: true
          example: 12345
        AlternateEmployeeNumber:
          description: Alternate employee number in the tenant.
          type: string
          nullable: true
          example: 135790
        BadgeNumber:
          description: |-
            Employee's assigned badge number - currently unavailable
                        
          type: string
          nullable: true
          example: 123666
        FirstName:
          description: First name of the employee.
          type: string
          nullable: true
          example: Charles
        MiddleName:
          description: Middle name of the employee.
          type: string
          nullable: true
          example: Lutwidge
        LastName:
          description: Last name of the employee.
          type: string
          nullable: true
          example: Dodgson
        Email:
          description: |-
            Email Information of an employee.
                        
          nullable: true
          $ref: '#/components/schemas/Email'
        EmploymentDateData:
          description: >-
            Data including the employee's employment dates of type
            EmploymentDateData.
                        
          nullable: true
          $ref: '#/components/schemas/EmploymentDateData'
        PositionData:
          description: |-
            Data including the employee's position of type EmployeePositionData.
                        
          nullable: true
          $ref: '#/components/schemas/EmployeePositionData'
        StatusData:
          description: |-
            Data including the employee's status of type EmployeeStatusData.
                        
          nullable: true
          $ref: '#/components/schemas/EmployeeStatusData'
        WorkLocation:
          description: >-
            Data including the employee's work location of type
            EmployeeWorkLocationData.
                        
          nullable: true
          $ref: '#/components/schemas/EmployeeWorkLocationData'
        Earnings:
          description: >-
            URL to access the Earnings resource for employee earnings
            information. 
                        
          nullable: true
          example: /v1/employees/66925f42-196c-0000-0000-0007d54d9839/earnings
          $ref: '#/components/schemas/ResourceReference'
        Deductions:
          description: >-
            URL to access the Deductions resource for employee deductions
            information. 
                        
          nullable: true
          example: /v1/employees/66925f42-196c-0000-0000-0007d54d9839/deductions
          $ref: '#/components/schemas/ResourceReference'
        Taxes:
          description: |-
            URL to access the Taxes resource for employee tax information. 
                        
          nullable: true
          example: /v1/employees/66925f42-196c-0000-0000-0007d54d9839/taxes
          $ref: '#/components/schemas/ResourceReference'
        DirectDeposits:
          description: >-
            URL to access the Direct Deposits resource for employee direct
            deposit information. 
                        
          nullable: true
          example: /v1/employees/66925f42-196c-0000-0000-0007d54d9839/directDeposits
          $ref: '#/components/schemas/ResourceReference'
        PayRates:
          description: >-
            URL to access the PayRates resource for employee pay rate
            information. 
                        
          nullable: true
          example: /v1/employees/66925f42-196c-0000-0000-0007d54d9839/payRates
          $ref: '#/components/schemas/ResourceReference'
        LegalEntity:
          description: |-
            URL to access the Legal Entity resource. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
        Person:
          description: |-
            URL to access the Persons resource for employee information.
                        
          nullable: true
          example: /v1/500198/persons/66925f42-196c-0000-0000-0007d54d9839
          $ref: '#/components/schemas/ResourceReference'
        Department:
          description: >-
            URL to access the Department resource for information about the
            employee's department.
                        
          nullable: true
          example: /v1/employees/66925f42-196c-0000-0000-0007d54d9839/department
          $ref: '#/components/schemas/ResourceReference'
    EmploymentDateData:
      description: >-
        The Employment Date Data represents the Employee's Employment Date
        information.
                    
      type: object
      properties:
        HireDate:
          description: |-
            Date the employee was hired.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2000-11-01T00:00:00Z'
        AdjustedHireDate:
          description: >-
            Adjusted hire date is used when the employee's hire date does not
            accurately reflect benefits eligibility because an employee may have
            left, 

            been rehired or taken a Leave of Absence. This provides an
            alternative date for the employee's accruals to be calculated on.
             Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2000-11-01T00:00:00Z'
        TerminationDate:
          description: |-
            Date the employee was terminated.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-01-01T00:00:00Z'
        TerminationReason:
          description: |-
            Reason for the employee's termination.
                        
          type: string
          nullable: true
        ReHireDate:
          description: |-
            Re-hire date of the employee. Terminated employees can be rehired.
             Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2020-05-21T00:00:00Z'
        SeniorityDate:
          description: |-
            Date on which the calculation of an employee's seniority is based.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2000-11-01T00:00:00Z'
    EmployeePositionData:
      description: >-
        The Employee Position Data model represents the Employee's Position
        related data.
      type: object
      properties:
        JobTitle:
          description: |-
            Name of the employee's job title.
                        
          type: string
          nullable: true
          example: Software Engineer
        JobCode:
          description: |-
            Code of the employee's job.
                        
          type: string
          nullable: true
          example: P2
        EffectiveStartDate:
          description: |-
            Date the employee position data takes effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: >-
            Date the employee position data is no longer in effect. This
            property will not return values for Active employees

            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2020-11-01T00:00:00Z'
        PayGroupId:
          description: >-
            Unique identifier of the pay group in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: 52a2s23-0000-0000-0000-0007d0009840
        Manager:
          description: |-
            Employee's Manager's data of type Manager.
                        
          nullable: true
          $ref: '#/components/schemas/Manager'
    Manager:
      description: |-
        The Manager model represents information about the Employee's Manager.
        Provides link to the Manager's Employee level information.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the manager in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: 52a2s23-0000-0000-0000-0007d0009840
        EmployeeNumber:
          description: |-
            Employee number of the employee's manager.
                        
          type: string
          nullable: true
          example: 234444
        Employee:
          description: >-
            URL to access the Employee resource for additional information about
            the employee's manager.
                        
          nullable: true
          example: /v1/employees/26413223-196c-0000-0000-0007d54d9839
          $ref: '#/components/schemas/ResourceReference'
    EmployeeStatusData:
      description: >-
        The Employee Status Data model represents Employee Employment Status
        information.
                    
      type: object
      properties:
        IsFullTime:
          description: |-
            Whether employee is full time. 
                        
          type: boolean
          nullable: true
          example: true
        Status:
          description: |-
            Enumeration of valid employment status values.
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatus'
        Flsa:
          description: >-
            Enumeration of valid Fair Labor Standards Act (FLSA) defined type
            values.
                        
          example: SalaryExempt
          $ref: '#/components/schemas/FlsaType'
        Type:
          description: |-
            Enumeration of valid employment type values.
                        
          example: Temporary
          $ref: '#/components/schemas/EmploymentType'
        EligibleForRehire:
          description: |-
            Determines is employee eligible for rehire.
                        
          type: string
          nullable: true
          example: 'Yes'
    EmploymentStatus:
      description: |-
        Enumeration of valid Employment Status values.
                    
      type: string
      x-enumNames:
        - Active
        - Deceased
        - LongTermDisability
        - ShortTermDisability
        - Fmla
        - LaidOff
        - LeaveWithPay
        - LeaveWithoutPay
        - ThirdPartyPayable
        - Resigned
        - Retired
        - Terminated
        - WorkersCompensation
      enum:
        - Active
        - Deceased
        - LongTermDisability
        - ShortTermDisability
        - Fmla
        - LaidOff
        - LeaveWithPay
        - LeaveWithoutPay
        - ThirdPartyPayable
        - Resigned
        - Retired
        - Terminated
        - WorkersCompensation
    FlsaType:
      description: >-
        Enumeration of valid Types of Fair Labor Standards Act (FLSA) employment
        values.
                    
      type: string
      x-enumNames:
        - HourlyExempt
        - HourlyNonExempt
        - SalaryExempt
        - SalaryNonExempt
      enum:
        - HourlyExempt
        - HourlyNonExempt
        - SalaryExempt
        - SalaryNonExempt
    EmploymentType:
      description: |-
        Enumeration of valid Employment Type values.
                    
      type: string
      x-enumNames:
        - Casual
        - IndependentContractor
        - Regular
        - Seasonal
        - Temporary
        - Variable
      enum:
        - Casual
        - IndependentContractor
        - Regular
        - Seasonal
        - Temporary
        - Variable
    EmployeeWorkLocationData:
      description: >-
        The Employee Work Location Data model represents the Employee's Work
        Location related data.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the Employee's work location in Paycor's
            system. Generated by Paycor.
          type: string
          format: guid
          example: 5245ae3d-e570-0000-0000-000066000000
        Name:
          description: Name of the Employee's work location.
          type: string
          nullable: true
          example: ACME East is an open concept office.
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          nullable: true
          example: 4811 Montgomery Road
        Type:
          description: |-
            Address Type of Employee Work Location.
                        
          $ref: '#/components/schemas/WorkLocationAddressType'
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        County:
          description: |-
            County in the address.
                        
          type: string
          nullable: true
          example: Hamilton
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          nullable: true
          example: 45212-0341
        Country:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
    WorkLocationAddressType:
      description: |-
        Enumeration of valid Type of Work Location Address values.
                    
      type: string
      x-enumNames:
        - Physical
        - Mailing
        - Unknown
      enum:
        - Physical
        - Mailing
        - Unknown
    Includes13:
      description: |2-
            All - Include all data


            EmploymentDates - Include employment dates (e.g. hireDate)


            Position - Include employee position (e.g. job title and manager)


            Status - Include status data (e.g. Full time)


            WorkLocation - Include work location data
      type: string
      x-enumNames:
        - All
        - EmploymentDates
        - Position
        - Status
        - WorkLocation
      enum:
        - All
        - EmploymentDates
        - Position
        - Status
        - WorkLocation
    EmailTypeOptions:
      description: ''
      type: string
      x-enumNames:
        - Work
        - Home
      enum:
        - Work
        - Home
    PagedResultOfEmployeeList:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeList
            $ref: '#/components/schemas/EmployeeList'
    EmployeeList:
      description: |-
        The Employee List model represents information about multiple Employees.
        Provides link to additional Employee information.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee list record in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 52b68a4a-196c-0000-0000-0007d5268Sa2
        EmployeeNumber:
          description: Unique number of the employee in a partner's tenant.
          type: string
          nullable: true
          example: 123666
        FirstName:
          description: First name of the employee.
          type: string
          nullable: true
          example: Charles
        MiddleName:
          description: Middle name of the employee.
          type: string
          nullable: true
          example: Lutwidge
        LastName:
          description: Last name of the employee.
          type: string
          nullable: true
          example: Dodgson
        Employee:
          description: >-
            URL to access the Employee resource for additional information about
            the employee.
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfEmployeeReturnItem:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeReturnItem
            $ref: '#/components/schemas/EmployeeReturnItem2'
    EmployeeReturnItem2:
      allOf:
        - $ref: '#/components/schemas/Employee'
        - type: object
          properties:
            Email:
              nullable: true
              $ref: '#/components/schemas/WorkEmailExample2'
    WorkEmailExample2:
      allOf:
        - $ref: '#/components/schemas/Email'
        - type: object
          properties:
            Type:
              $ref: '#/components/schemas/EmployeeEmailType'
    Includes14:
      description: |2-
            All - Include all data


            EmploymentDates - Include employment dates (e.g. hireDate)


            Position - Include employee position (e.g. job title and manager)


            Status - Include status data (e.g. Full time)


            WorkLocation - Include work location data
      type: string
      x-enumNames:
        - All
        - EmploymentDates
        - Position
        - Status
        - WorkLocation
      enum:
        - All
        - EmploymentDates
        - Position
        - Status
        - WorkLocation
    EmailTypeOptions2:
      description: ''
      type: string
      x-enumNames:
        - Work
        - Home
      enum:
        - Work
        - Home
    Employee2:
      description: >-
        The Create Employee model represents Employee related information needed
        to create a new employee (a new hire).
      type: object
      required:
        - LegalEntityId
        - FirstName
        - LastName
        - HireDate
        - Status
        - PaygroupDescription
        - DepartmentCode
        - PrimaryAddress
      properties:
        LegalEntityId:
          description: |-
            Employee's LegalEntityId.
                        
          type: integer
          format: int32
          example: 123666
        EmployeeNumber:
          description: >-
            Unique number of the employee in the tenant. Generated by Paycor if
            not provided.
                        
          type: integer
          format: int32
          nullable: true
          example: 12345
        AlternateEmployeeNumber:
          description: >-
            Can be up to 9 characters, Requires Alternate Employee Number
            product offering.
          type: string
          nullable: true
          example: 1234567890
        Prefix:
          description: Enumeration of valid name prefix values.
          example: Dr
          $ref: '#/components/schemas/Prefix'
        FirstName:
          description: First name of the employee.
          type: string
          minLength: 1
          example: Charles
        MiddleName:
          description: Middle name of the employee.
          type: string
          nullable: true
          example: Lutwidge
        LastName:
          description: Last name of the employee.
          type: string
          minLength: 1
          example: Dodgson
        Suffix:
          description: Enumeration of valid name suffix values.
          example: Sr
          $ref: '#/components/schemas/Suffix'
        HomeEmail:
          description: |-
            Home Email Information of an employee.
                        
          type: string
          nullable: true
        WorkEmail:
          description: |-
            Work Email Information of an employee.
                        
          type: string
          nullable: true
        Phones:
          description: |-
            List of type Phone containing phone numbers of the employee.
            Accepts home,mobile and work phone numbers, upto 1 of each type.
            Mobile phone is accepted only if home contact is provided. 
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Phone
            $ref: '#/components/schemas/Phone'
        SocialSecurityNumber:
          description: Social security number of the employee.
          type: string
          nullable: true
          example: 555555555
        BirthDate:
          description: |-
            Date of birth of the employee following the ISO 8601 standard.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '1944-04-01T00:00:00Z'
        Gender:
          description: |-
            Employee's Gender (enumeration)
                        
          example: Female
          $ref: '#/components/schemas/Gender'
        Ethnicity:
          description: |-
            Employee's Ethnicity (enumeration)
                        
          example: DeclinedtoIdentify
          $ref: '#/components/schemas/EthnicityType'
        MaritalStatus:
          description: |-
            Employee's Marital Status (enumeration)
                        
          example: Married
          $ref: '#/components/schemas/MaritalStatus'
        WorkLocation:
          description: |-
            The name of the Work Location to associate with new hire.
             * Must be an existing Work Location. Use API 'GET Legal Entity Work Location by Legal Entity ID' to retrieve a list of valid names.
                        
          type: string
          nullable: true
        JobTitle:
          description: |-
            Name of the Job Title to associate with new hire.
             * Must be an existing Job setup on the Tenant. Use API 'GET Tenant Job Titles by TenantId' to retrieve a list of valid names.
                        
          type: string
          nullable: true
          example: Software Engineer
        HireDate:
          description: |-
            Date the employee was hired following the ISO 8601 standard..
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2000-11-01T00:00:00Z'
        ReHireDate:
          description: |-
            Re-hire date of the employee. Terminated employees can be rehired.
             Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '2020-05-21T00:00:00Z'
        Status:
          description: |-
            New hire employee's Status (enumeration)
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatus'
        Flsa:
          description: >-
            Fair Labor Standards Act (FLSA) type value for employee
            (enumeration)
                        
          example: SalaryExempt
          $ref: '#/components/schemas/FlsaType'
        Type:
          description: |-
            If no input is supplied, Default value "Regular" will be assigned.
            New hire employee's Employment Type (enumeration)
                        
          example: Temporary
          $ref: '#/components/schemas/EmploymentType'
        ManagerEmpId:
          description: >-
            Unique identifier of the manager in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          nullable: true
          example: 52a2s23-0000-0000-0000-0007d0009840
        PaygroupDescription:
          description: |-
            The description of the paygroup that the employee belongs to.
             * Must be existing Paygroup. Call GET Pay Groups by LegalEntityID to lookup valid values in the field "PaygroupName". 
                        
          type: string
          minLength: 1
        DepartmentCode:
          description: |-
            The department code that the employee belongs to.
              * Must be existing Department. Call Get Legal Entity Departments by LegalEntityID to get valid Code value.
                        
          type: integer
          format: int64
        Veteran:
          description: Veteran Status of new hire employee (enumeration)
          example: true
          $ref: '#/components/schemas/VeteranStatus'
        Disability:
          description: Disabiilty Status of new hire employee (enumeration)
          example: true
          $ref: '#/components/schemas/DisabilityStatus'
        PrimaryAddress:
          description: |-
            Primary address of employee.
                        
          $ref: '#/components/schemas/GenericAddress'
    Prefix:
      description: Enumeration of valid Prefix values.
      type: string
      x-enumNames:
        - None
        - Dr
        - DrWithSpace
        - Fr
        - Miss
        - Mr
        - Mrs
        - Ms
        - Prof
        - Rev
        - Sr
      enum:
        - None
        - Dr
        - DrWithSpace
        - Fr
        - Miss
        - Mr
        - Mrs
        - Ms
        - Prof
        - Rev
        - Sr
    Suffix:
      description: Enumeration of valid Suffix values.
      type: string
      x-enumNames:
        - None
        - II
        - III
        - IV
        - V
        - VI
        - VII
        - VIII
        - IX
        - X
        - Jr
        - Sr
      enum:
        - None
        - II
        - III
        - IV
        - V
        - VI
        - VII
        - VIII
        - IX
        - X
        - Jr
        - Sr
    Phone:
      description: 'The Phone model represents Phone information. '
      type: object
      properties:
        CountryCode:
          description: 'Country code for the phone number. '
          type: string
          nullable: true
          example: '+1'
        AreaCode:
          description: Area code for the phone number.
          type: string
          nullable: true
          example: 513
        PhoneNumber:
          description: 'Local phone number. '
          type: string
          nullable: true
          example: 555-2300
        Type:
          description: Enumeration of valid phone type values.
          example: Cell
          $ref: '#/components/schemas/PhoneType'
    PhoneType:
      description: 'Enumeration of valid Phone Type values. '
      type: string
      x-enumNames:
        - Unknown
        - Work
        - Home
        - Pager
        - Mobile
        - Fax
        - None
      enum:
        - Unknown
        - Work
        - Home
        - Pager
        - Mobile
        - Fax
        - None
    Gender:
      description: Enumeration of valid Gender values.
      type: string
      x-enumNames:
        - Male
        - Female
      enum:
        - Male
        - Female
    EthnicityType:
      description: |-
        Enumeration of valid Ethnicity Type values.
                    
      type: string
      x-enumNames:
        - AmerIndorAKNative
        - Asian
        - BlackorAfricanAmerican
        - HispanicorLatino
        - White
        - NatHIorOthPacIsland
        - TwoormoreRaces
        - DeclinedToIdentify
      enum:
        - AmerIndorAKNative
        - Asian
        - BlackorAfricanAmerican
        - HispanicorLatino
        - White
        - NatHIorOthPacIsland
        - TwoormoreRaces
        - DeclinedToIdentify
    MaritalStatus:
      description: |-
        Enumeration of valid Marital Status values.
                    
      type: string
      x-enumNames:
        - Single
        - Married
        - Divorced
        - Separated
        - StateRecognizedUnion
        - Widowed
      enum:
        - Single
        - Married
        - Divorced
        - Separated
        - StateRecognizedUnion
        - Widowed
    VeteranStatus:
      description: |-
        Enumeration of valid Veteran Status values.
                    
      type: string
      x-enumNames:
        - 'Yes'
        - 'No'
        - DeclinedToIdentify
      enum:
        - 'Yes'
        - 'No'
        - DeclinedToIdentify
    DisabilityStatus:
      description: Enumeration of valid Disability Status values.
      type: string
      x-enumNames:
        - 'Yes'
        - 'No'
        - DeclinedToIdentify
      enum:
        - 'Yes'
        - 'No'
        - DeclinedToIdentify
    GenericAddress:
      description: >-
        The Generic Address model represents the Person's Address information
        (No type).
      type: object
      required:
        - StreetLine1
        - ZipCode
      properties:
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          minLength: 1
          example: 4811 Montgomery Road
        StreetLine2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building A
        Suite:
          description: |-
            Suite information in the address.
                        
          type: string
          nullable: true
          example: Suite 100
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        Country:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
        County:
          description: |-
            County in the address.
                        
          type: string
          nullable: true
          example: Hamilton
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          minLength: 1
          example: 45212
    EmployeeContact:
      description: >-
        The PUT EmployeeContact model allows updating Employee's Contact
        Information fields. 

        All fields are optional. Fields not supplied with a value will retain
        previous values. 
      type: object
      properties:
        HomeEmail:
          description: |-
            Home Email Address of an employee.
                        
          type: string
          nullable: true
        WorkEmail:
          description: |-
            Work Email Address of an employee.
                        
          type: string
          nullable: true
        Phones:
          description: >-
            List of type Phone containing phone numbers of the employee.

            Accepts Home, Mobile and Work phone numbers, upto 1 of each type.

            Only the specific number types passed in will be updated, existing
            phone numbers will remain unchanged.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Phone
            $ref: '#/components/schemas/Phone'
        PrimaryAddress:
          description: |-
            Primary address of employee.
                        
          nullable: true
          $ref: '#/components/schemas/GenericAddress'
    EmployeePositionAndStatus:
      description: >-
        The PUT Employee Position And Status model allows updating Employee's
        Position and Status Information fields. 

        Employee Status fields are: EmploymentStatus and RehireDate. Both fields
        have to be set in order to update Employee Status.

        Employee Position fields are: EmploymentType, WorkLocation, JobTitle,
        FLSA, ManagerId, DepartmentId. Fields EmployeeType and WorkLocation have
        to be set in order to update Employee Position.
      type: object
      required:
        - EmploymentStatus
        - RehireDate
        - EmploymentType
        - WorkLocation
      properties:
        EmploymentStatus:
          description: |-
            Employment Status (only valid value is "Active")
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatus2'
        RehireDate:
          description: |-
            Re-hire date of the employee. Terminated employees can be rehired.
             Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          minLength: 1
          example: '2020-05-21T00:00:00Z'
        EmploymentType:
          description: |-
            Employee's Employment Type (enumeration)
                        
          example: Temporary
          $ref: '#/components/schemas/EmploymentType'
        WorkLocation:
          description: |-
            The name of the Work Location to associate with Employee.
             * Must be an existing Work Location, use Legal Entity Work Locations to retrieve a list of valid names.
                        
          type: string
          minLength: 1
          example: Cincinnati
        JobTitle:
          description: |-
            Name of the Job Title to associate with Employee.
             * Must be an existing Job setup on the Tenant. Use API 'GET Tenant Job Titles by TenantId' to retrieve a list of valid names.
                        
          type: string
          nullable: true
          example: Software Engineer
        Flsa:
          description: >-
            Fair Labor Standards Act (FLSA) type value for employee
            (enumeration)
                        
          nullable: true
          example: SalaryExempt
          $ref: '#/components/schemas/FlsaType'
        ManagerId:
          description: >-
            Unique identifier of Employee in Paycor's system. 

            * Must be an existing Employee, use the EmployeeID provided from
            other GET Employee endpoints 
          type: string
          format: guid
          nullable: true
          example: 44480aa9-08d8-0000-0000-0000fd0d0300
        DepartmentId:
          description: >-
            Identifier of Department.

            * Use API 'GET Legal Entity Departments by Legal Entity id' to
            retrieve a list of valid departments.
                        
          type: string
          format: guid
          nullable: true
          example: 3c88ef90-5e35-0000-0000-0000fb0d0300
    EmploymentStatus2:
      description: |-
        Enumeration of valid Employment Status Update values.
                    
      type: string
      x-enumNames:
        - Active
      enum:
        - Active
    EmployeePosition:
      description: >-
        The PUT Employee Position model allows updating Employee's Position
        fields.
      type: object
      required:
        - EmploymentType
        - WorkLocation
      properties:
        EmploymentType:
          description: |-
            Employee's Employment Type (enumeration)
                        
          example: Temporary
          $ref: '#/components/schemas/EmploymentType'
        WorkLocation:
          description: |-
            The name of the Work Location to associate with Employee.
             * Must be an existing Work Location. Use API 'GET Legal Entity Work Location by Legal Entity ID' to retrieve a list of valid names.
                        
          type: string
          minLength: 1
          example: Cincinnati
        JobTitle:
          description: |-
            Name of the Job Title to associate with Employee.
             * Must be an existing Job setup on the Tenant. Use API 'GET Tenant Job Titles by TenantId' to retrieve a list of valid names.
                        
          type: string
          nullable: true
          example: Software Engineer
        Flsa:
          description: >-
            Fair Labor Standards Act (FLSA) type value for employee
            (enumeration)
                        
          nullable: true
          example: SalaryExempt
          $ref: '#/components/schemas/FlsaType'
        ManagerId:
          description: 'Unique identifier of Employee in Paycor''s system. '
          type: string
          format: guid
          nullable: true
          example: 44480aa9-08d8-0000-0000-0000fd0d0300
        DepartmentId:
          description: |-
            Identifier of Department.
                        
          type: string
          format: guid
          nullable: true
          example: 3c88ef90-5e35-0000-0000-0000fb0d0300
    EmployeeStatusUpdate:
      description: The Employee Status model to update Employee Status related data.
      type: object
      required:
        - EffectiveDate
        - EmployeeStatus
      properties:
        EffectiveDate:
          description: |-
            Date at which the employee status update takes effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-01T00:00:00Z'
        EmployeeStatus:
          description: |-
            Enumeration of valid employment status values.
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatus'
        EmployeeStatusReasonId:
          description: >-
            Unique Identifier for Employee Status Reason. All possible Status
            Reason Values can be found using Get Legal Entity Status Reason
            values endpoint.
                        
          type: string
          format: guid
          nullable: true
          example: aaeeef19-7b65-4ace-a244-ae1e43c6a634
        EligibleForRehire:
          description: >-
            Determines if an employee is eligible for rehire after termination.
            This is required when EmployeeStatus is updated to one of these
            values: Deceased, LaidOff, Resigned, Retired, Terminated. Otherwise
            optional.
                        
          nullable: true
          example: 'Yes'
          $ref: '#/components/schemas/EligibleForRehire'
        IsVoluntaryByEmployee:
          description: >-
            Determines if an employee termination is voluntary or not.  This is
            required when EmployeeStatus is updated to one of these values:
            Deceased, LaidOff, Resigned, Retired, Terminated. Otherwise
            optional.
                        
          type: boolean
          nullable: true
          example: false
        Notes:
          description: >-
            Notes associated with the employee's status update, which will be
            stored in Employee's Status History.
                        
          type: string
          nullable: true
          example: Employee absence from work
    EligibleForRehire:
      description: ''
      type: string
      x-enumNames:
        - 'Yes'
        - 'No'
      enum:
        - 'Yes'
        - 'No'
    EmployeeIdentifyingData:
      description: >-
        The PUT EmployeeIdentifyingData model allows updating Employee's
        personal data fields. 

        All fields are required, except EmployeeNumber, Middle Name and Status. 
      type: object
      required:
        - FirstName
        - LastName
        - Suffix
        - SocialSecurityNumber
        - BirthDate
      properties:
        FirstName:
          description: First name of the employee.
          type: string
          minLength: 1
          example: Charles
        LastName:
          description: Last name of the employee.
          type: string
          minLength: 1
          example: Peterson
        MiddleName:
          description: Middle name of the employee.
          type: string
          nullable: true
          example: Hubble
        Suffix:
          description: Enumeration of valid name suffix values.
          example: Sr
          $ref: '#/components/schemas/Suffix'
        SocialSecurityNumber:
          description: Social security number of the employee.
          type: string
          minLength: 1
          example: 555555555
        BirthDate:
          description: |-
            Date of birth of the employee.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          minLength: 1
          example: '1944-04-01T00:00:00Z'
    PagedResultOfEmployeesIdentifyingData:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeesIdentifyingData
            $ref: '#/components/schemas/EmployeesIdentifyingData'
    EmployeesIdentifyingData:
      type: object
      properties:
        FirstName:
          description: First name of the employee.
          type: string
          nullable: true
          example: Charles
        LastName:
          description: Last name of the employee.
          type: string
          nullable: true
          example: Peterson
        SocialSecurityNumber:
          description: Social security number of the employee.
          type: string
          nullable: true
          example: 555555555
        EmployeeId:
          description: >-
            Unique identifier of the employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: 52b68a4a-196c-0000-0000-0007d5268Sa2
        EmployeeNumber:
          description: Unique number of the employee in the client.
          type: string
          nullable: true
          example: 123666
        BirthDate:
          description: |-
            Date of birth of the employee.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          nullable: true
          example: '1944-04-01T00:00:00Z'
        Status:
          description: |-
            Employee status. Values are: Active and Inactive
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatusIdentifyingData'
    EmploymentStatusIdentifyingData:
      description: |-
        Enumeration of valid Employment Status values.
                    
      type: string
      x-enumNames:
        - Active
        - Inactive
      enum:
        - Active
        - Inactive
    Includes15:
      description: ''
      type: string
      x-enumNames:
        - Active
        - Inactive
      enum:
        - Active
        - Inactive
    EmployeesSearchResult:
      description: Represents collection of employees with same SSN.
      type: object
      properties:
        Match:
          description: Flag which determines existence of employees with requested SSN.
          type: boolean
          example: true
        Employees:
          description: Collection of employees with requested SSN.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeRecord
            $ref: '#/components/schemas/EmployeeRecord'
    EmployeeRecord:
      description: Employee status info.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        Status:
          description: Employee's status.
          example: Active
          $ref: '#/components/schemas/EmploymentStatus'
    EmployeeSearchRequest:
      description: >-
        Represents body of search request for Employees by Social Security
        Number.
      type: object
      properties:
        LegalEntityId:
          description: >-
            The unique identifier of the legal entity where we perform the
            search.
          type: integer
          format: int32
          example: 200187
        SocialSecurityNumber:
          description: Social Security Number
          type: string
          nullable: true
          example: 123-45-6789
    SimpleHire:
      type: object
      required:
        - LegalEntityId
        - FirstName
        - LastName
        - HomeEmailAddress
      properties:
        LegalEntityId:
          description: Legal Entity Id
          type: integer
          format: int32
          example: 122900
        ExportedByEmailAddress:
          description: Email of the user exporting records
          type: string
          nullable: true
          example: email@domain.com
        FirstName:
          description: 'First name of the person. '
          type: string
          minLength: 1
          example: Edwin
        LastName:
          description: Last name of the person.
          type: string
          minLength: 1
          example: Hubble
        PreferredName:
          description: |-
            Preferred Name of the Person
                        
          type: string
          nullable: true
          example: Carroll
        CountryCode:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
        Zip:
          description: |-
            Zip code in the address.
                        
          type: string
          nullable: true
          example: 45212
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        Address1:
          description: |-
            First line of street address information.
                        
          type: string
          nullable: true
          example: 4811 Montgomery Road
        Address2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building A
        MobilePhone:
          description: 'Mobile phone number. '
          type: string
          nullable: true
          example: (123) 456–7890
        HomePhone:
          description: 'Home phone number. '
          type: string
          nullable: true
          example: (123) 456–7890
        HomeEmailAddress:
          description: |-
            Email Information of the person.
                        
          type: string
          minLength: 1
          example: homeEmail@domain.com
        Gender:
          description: |-
            Employee's Gender (enumeration)
                        
          nullable: true
          example: Female
          $ref: '#/components/schemas/Gender'
        Ethnicity:
          description: |-
            Employee's Ethnicity (enumeration)
                        
          nullable: true
          example: AmerIndorAKNative
          $ref: '#/components/schemas/EthnicityType'
        VeteranStatus:
          description: |-
            Employee's VeteranStatus (enumeration)
                        
          nullable: true
          example: 'Yes'
          $ref: '#/components/schemas/VeteranStatus'
        StartDate:
          description: |-
            Date the employement start.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        JobTitle:
          description: |-
            Name of the Job Title to associate with new hire.
                        
          type: string
          nullable: true
          example: Software Engineer
        DepartmentCode:
          description: >-
            Code of the department in Paycor's system. 

            Can be retrieved by calling 'Get Legal Entity Departments by Legal
            Entity ID'
          type: string
          nullable: true
          example: 80
        Disability:
          description: Disabiilty Status of new hire employee (enumeration)
          nullable: true
          example: 'Yes'
          $ref: '#/components/schemas/DisabilityStatus'
        BaseSalary:
          description: Base Salary of new hire employee
          type: number
          format: decimal
          nullable: true
          example: 10000
        SalaryFrequency:
          description: Salary Frequency of new hire employee
          type: string
          nullable: true
          example: Bi-Weekly
        WorkLocationId:
          description: Worklocation Id of new hire employee
          type: string
          format: guid
          nullable: true
          example: dc069074-24b2-0000-0000-000014e00100
    PagedResultOfOnboardingEmployee:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: OnboardingEmployee
            $ref: '#/components/schemas/OnboardingEmployee'
    OnboardingEmployee:
      type: object
      properties:
        OnboardingEmployeeId:
          description: Id of the employee in the onboarding state.
          type: string
          format: guid
          example: a332bab4-9b53-ed11-913a-0050569fc0c9
        EmployeeNumber:
          description: |-
            Unique number of the employee.
                        
          type: integer
          format: int32
          nullable: true
          example: 12345
        LegalEntityId:
          description: Id of the legal entity.
          type: integer
          format: int32
          example: 133900
        FirstName:
          description: First name of the employee in the onboarding state.
          type: string
          nullable: true
          example: John
        LastName:
          description: Last name of the employee in the onboarding state.
          type: string
          nullable: true
          example: Smith
        FullName:
          description: >-
            First and last name of the employee in the onboarding state
            combined.
          type: string
          nullable: true
          example: Smith, John
        EmailAddress:
          description: Email address of the employee in the onboarding state.
          type: string
          nullable: true
          example: johnsmith@gmail.com
        InvitedDate:
          description: Date when employee was invited.
          type: string
          format: date-time
          nullable: true
          example: '2022-10-24T09:02:33.173'
        HasOnboardingAccess:
          description: Indicates if this is invited or manual hiring.
          type: boolean
          example: true
        HireDate:
          description: Date when the employee was hired.
          type: string
          format: date-time
          nullable: true
          example: '2022-10-24T09:02:33.173'
        StepsTotal:
          description: Number of the total steps in the onboarding.
          type: integer
          format: int32
          nullable: true
          example: 12
        StepsCompleted:
          description: Number of the completed steps in the onboarding.
          type: integer
          format: int32
          nullable: true
          example: 2
        LastEmployeeStepCompleted:
          description: Last step that was completed by the employee.
          type: integer
          format: int32
          example: 1
        LastEmployeeStepCompletedDate:
          description: Date when the last step was completed by employee.
          type: string
          format: date-time
          nullable: true
          example: '2022-10-24T09:02:33.173'
        LastAdminStepCompleted:
          description: Last step that was completed by the admin.
          type: integer
          format: int32
          nullable: true
          example: 2
        LastAdminStepCompletedDate:
          description: 'Date when the last step was completed by admin. '
          type: string
          format: date-time
          nullable: true
          example: '2022-10-24T09:02:33.173'
        WorkLocation:
          description: Name of the work location.
          type: string
          nullable: true
          example: Office
        WorkLocationId:
          description: Id of the work location.
          type: string
          format: guid
          nullable: true
          example: a332bab4-9b53-ed11-913a-0050569fc0c9
        Manager:
          description: Full name of the employees manager.
          type: string
          nullable: true
          example: Erricson, Allen
        ManagerId:
          description: Id of the employees manager.
          type: string
          format: guid
          nullable: true
          example: a332bab4-9b53-ed11-913a-0050569fc0c9
    PagedResultOfEmployeeTax:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeTax
            $ref: '#/components/schemas/EmployeeTax'
    EmployeeTax:
      description: The Employee Tax model represents Employee level Tax information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the employee tax in Paycor's system. Generated
            by Paycor.
          type: string
          format: guid
          example: a5713n92-196c-0000-0000-0007d5268Sa2
        LegalEntityTaxId:
          description: >-
            Unique identifier of the legal entity tax in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: b55a9eba-1007-0000-0000-000040e20100
        TaxCode:
          description: |-
            Tax code values set at the global level.
                        
          type: string
          nullable: true
          example: OH
        Description:
          description: Description of tax code.
          type: string
          nullable: true
          example: OHIO
        TaxType:
          description: Enumeration of valid types of tax values.
          example: FMISC
          $ref: '#/components/schemas/TaxType'
        ReciprocityType:
          description: |-
            Enumeration of valid multi-state tax reciprocity values. 
                        
          nullable: true
          example: LivesIn
          $ref: '#/components/schemas/ReciprocityType'
        FilingStatus:
          description: Enumeration of valid filing status values.
          nullable: true
          example: S
          $ref: '#/components/schemas/FilingStatus'
        WithholdingEffectiveStartDate:
          description: Effective start date of withholding
          type: string
          format: date-time
          nullable: true
          example: '2020-01-13T00:00:00'
        BlockDate:
          description: Withholding block date
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        NonResidentAlien:
          description: Specifies whether an employee is NonResidentAlien
          type: string
          nullable: true
          example: true
        IsProbationaryEmployee:
          description: Specifies whether an employee is a probationary employee
          type: boolean
          nullable: true
          example: true
        OccupationalCode:
          description: Occupational code
          type: string
          nullable: true
          example: '1234'
        GeographicCode:
          description: Geographic code
          type: string
          nullable: true
          example: '1234'
        SOCCode:
          description: Standard occupational classification Code
          type: string
          nullable: true
          example: '1234'
        SeasonalCode:
          description: Seasonal Code
          type: string
          nullable: true
          example: '14'
        CountyCode:
          description: County Code
          type: string
          nullable: true
          example: '124'
        SpouseWork:
          description: Specifies  whether an employee's spouse is employed
          type: string
          nullable: true
          example: Yes/True
        DependentInsuranceEligible:
          description: Dependent insurance eligibility status
          type: string
          nullable: true
          example: Yes/True
        DependentInsuranceEligibleDate:
          description: Dependent insurance eligibility date
          type: string
          format: date-time
          nullable: true
          example: '2020-02-13T00:00:00'
        ApplicableBirthyear:
          description: Birth year
          type: integer
          format: int32
          nullable: true
          example: 1980
        AdjustWithholding:
          description: How to adjust the employee tax withholding.
          nullable: true
          example: O
          $ref: '#/components/schemas/AdjustWithholdingType'
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 3141.59
        Percentage:
          description: 'Percentage value used in tax calculation. '
          type: number
          format: decimal
          nullable: true
          example: 0.2
        NCCICode:
          description: 'National Council on Compensation Insurance (NCCI) Code '
          type: string
          nullable: true
          example: '2004'
        PsdCode:
          description: |-
            PA Residence PSD code- political subdivision code
            Required only for PA taxes
          type: string
          nullable: true
          example: 101001
        PsdRate:
          description: |-
            PA Residence PSD rate
            Required only for PA taxes
          type: number
          format: decimal
          nullable: true
          example: 0.123
        OnHold:
          description: |-
            Specifies whether employee tax should appear on paychecks.
                        
          type: boolean
          nullable: true
          example: true
        Exemptions:
          description: Information related to Employee exemptions.
          nullable: true
          $ref: '#/components/schemas/EmployeeExemptions'
        TaxCredit:
          description: >-
            Information related to Employee Tax Credit including Depedent and
            other Tax Credits.
          nullable: true
          $ref: '#/components/schemas/EmployeeTaxCredit'
        Employee:
          description: >-
            URL to access the Employee resource for information about the
            person's employment.
                        
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    TaxType:
      description: Enumeration of valid Types of Tax values.
      type: string
      x-enumNames:
        - F3MEDA
        - F3SS
        - FCAP
        - FEIC
        - FESL
        - FMEDA
        - FMISC
        - FSOCER
        - FSS
        - FSSERC
        - FUTA
        - FWH
        - FWH945
        - LCITY
        - LCITYN
        - LCITYR
        - LCITYS
        - LCNTY
        - LCNTYN
        - LCNTYR
        - LMISC
        - LSDIT
        - OLDCODE
        - SDI
        - SMISC
        - SUI
        - SUR
        - SWC
        - SWH
      enum:
        - F3MEDA
        - F3SS
        - FCAP
        - FEIC
        - FESL
        - FMEDA
        - FMISC
        - FSOCER
        - FSS
        - FSSERC
        - FUTA
        - FWH
        - FWH945
        - LCITY
        - LCITYN
        - LCITYR
        - LCITYS
        - LCNTY
        - LCNTYN
        - LCNTYR
        - LMISC
        - LSDIT
        - OLDCODE
        - SDI
        - SMISC
        - SUI
        - SUR
        - SWC
        - SWH
    ReciprocityType:
      description: |-
        Enumeration of valid Types of multi-state Reciprocity values.
                    
      type: string
      x-enumNames:
        - LiveIn
        - FWIT
        - WorkIn
      enum:
        - LiveIn
        - FWIT
        - WorkIn
    FilingStatus:
      description: The Filing Status Model represents the filing status information.
      type: object
      properties:
        Code:
          description: |-
            Filing Status code values set at the global level.
                        
          type: string
          nullable: true
          example: M
        Description:
          description: Description of filing status code.
          type: string
          nullable: true
          example: Married or Joint-KS
    AdjustWithholdingType:
      description: |-
        Enumeration of valid Types of AdjustWithholdingType.
                    
      type: string
      x-enumNames:
        - 'N'
        - A
        - O
      enum:
        - 'N'
        - A
        - O
    EmployeeExemptions:
      description: >-
        The Employee Exemptions Model represents the Employee's exemptions
        information.
      type: object
      properties:
        Exemptions:
          description: 'Number of tax exemptions claimed by employee. '
          type: integer
          format: int32
          nullable: true
          example: 3
        ExemptionAmount:
          description: |-
            Exemption amount
            For CO and MS tax codes
          type: number
          format: decimal
          nullable: true
          example: 3
        EmployeeLowIncomeExemption:
          description: |-
            Specifies whether an employee has low income exemption
                        
          type: boolean
          nullable: true
          example: true
        CurrentYearExempt:
          description: |-
            Specifies whether an employee has current year exemption
                        
          type: boolean
          nullable: true
          example: true
        NextYearExempt:
          description: |-
            Specifies whether an employee has next year exemption 
                        
          type: boolean
          nullable: true
          example: true
    EmployeeTaxCredit:
      description: >-
        The Employee Tax Credit Model represents the Employee's Tax Credit
        information.
      type: object
      properties:
        NumberOfDependents:
          description: >-
            Number of employee's dependents as specified on employee IRS' Form
            W-4. 
          type: integer
          format: int32
          nullable: true
          example: 8
        NumberOfOtherDependents:
          description: >-
            Number of employee's other dependents as specified on employee's
            IRS' Form W-4.
          type: integer
          format: int32
          nullable: true
          example: 0
        HasTwoIncomes:
          description: Whether or not employee's household has two incomes.
          type: boolean
          nullable: true
          example: false
        AdditionalIncome:
          description: >-
            Amount of employee's additional income as specified on employee's
            IRS Form W-4.
          type: number
          format: decimal
          nullable: true
          example: 123.45
        AdditionalDeduction:
          description: >-
            Amount of employee's additional deductions as specified on
            employee's IRS Form W-4.           
          type: number
          format: decimal
          nullable: true
          example: 987.65
        QualifiedDependentCredit:
          description: >-
            Amount of employee's qualified dependent credit as specified on
            employee's IRS Form W-4. 
          type: number
          format: decimal
          nullable: true
          example: 20.2
        OtherDependentCredit:
          description: >-
            Amount of employee's other dependent tax credit as specified on
            employee's IRS Form W-4. 
          type: number
          format: decimal
          nullable: true
          example: 111.22
        TotalCredits:
          description: >-
            Total amount of employee's tax credit as specifies on employee's IRS
            Form W-4.
          type: number
          format: decimal
          nullable: true
          example: 123.58
    Includes16:
      description: ''
      type: string
      x-enumNames:
        - All
        - TaxCredits
      enum:
        - All
        - TaxCredits
    EmployeeTax2:
      description: The Employee Tax model represents Employee level Tax information.
      type: object
      required:
        - LegalEntityTaxId
        - ReciprocityType
        - WithholdingEffectiveStartDate
      properties:
        LegalEntityTaxId:
          description: >-
            Unique identifier of the legal entity tax in Paycor's system.
            Generated by Paycor.

            Retrieve a value by calling "Get Legal Entity Taxes by Legal Entity
            ID".
          type: string
          format: guid
          minLength: 1
          example: b55a9eba-1007-0000-0000-000040e20100
        ReciprocityType:
          description: |-
            Enumeration of valid multi-state tax reciprocity values. 
                        
          example: LivesIn
          $ref: '#/components/schemas/ReciprocityType'
        FilingStatus:
          description: |-
            Filing status code.
            Retrieve a value by calling "Get Filing Status by Tax Code
          type: string
          nullable: true
          example: S
        WithholdingEffectiveStartDate:
          description: |-
            Effective start date of withholding
            Retrieve a value by calling "Get Filing Status by Tax Code".
          type: string
          format: date-time
          minLength: 1
          example: '2020-11-13T00:00:00'
        BlockDate:
          description: Withholding block date
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        NonResidentAlien:
          description: Specifies whether an employee is NonResidentAlien
          type: string
          nullable: true
          example: true
        IsProbationaryEmployee:
          description: Specifies whether an employee is a probationary employee
          type: boolean
          nullable: true
          example: true
        OccupationalCode:
          description: Occupational code
          type: string
          nullable: true
          example: '12'
        GeographicCode:
          description: |-
            Geographic code
            Required only for UNEAK tax
          type: string
          nullable: true
          example: 11-1011
        SOCCode:
          description: Standard occupational classification Code
          type: string
          nullable: true
          example: 11-1012
        SeasonalCode:
          description: Seasonal Code
          type: string
          nullable: true
          example: '14'
        CountyCode:
          description: County Code
          type: string
          nullable: true
          example: '124'
        SpouseWork:
          description: Specifies  whether an employee's spouse is employed
          type: string
          nullable: true
          example: Yes/True
        DependentInsuranceEligible:
          description: Dependent insurance eligibility status
          type: string
          nullable: true
          example: Yes/True
        DependentInsuranceEligibleDate:
          description: Dependent insurance eligibility date
          type: string
          format: date-time
          nullable: true
          example: '2020-02-13T00:00:00'
        ApplicableBirthyear:
          description: Birth year
          type: integer
          format: int32
          nullable: true
          example: 1980
        AdjustWithholding:
          description: How to adjust the employee tax withholding.
          nullable: true
          example: O
          $ref: '#/components/schemas/AdjustWithholdingType'
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 3141.59
        Percentage:
          description: 'Percentage value used in tax calculation. '
          type: number
          format: decimal
          nullable: true
          example: 0.2
        NCCICode:
          description: 'National Council on Compensation Insurance (NCCI) Code '
          type: string
          nullable: true
          example: '2004'
        PsdCode:
          description: PA Residence PSD code- political subdivision code
          type: string
          nullable: true
          example: 101001
        PsdRate:
          description: PA Residence PSD rate
          type: number
          format: decimal
          nullable: true
          example: 0.123
        OnHold:
          description: |-
            Whether employee tax should appear on paychecks.
                        
          type: boolean
          nullable: true
          example: true
        Exemptions:
          description: Information related to Employee exemptions.
          nullable: true
          $ref: '#/components/schemas/EmployeeExemptions'
        TaxCredit:
          description: >-
            Information related to Employee Tax Credit including Depedent and
            other Tax Credits.
          nullable: true
          $ref: '#/components/schemas/EmployeeTaxCredit'
    EmployeeTax3:
      description: The Employee Tax model represents Employee level Tax information.
      type: object
      required:
        - Id
        - LegalEntityTaxId
      properties:
        Id:
          description: >-
            Unique identifier of the employee tax in Paycor's system. Generated
            by Paycor.
          type: string
          format: guid
          minLength: 1
          example: a5713n92-196c-0000-0000-0007d5268Sa2
        LegalEntityTaxId:
          description: >-
            Unique identifier of the legal entity tax in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          minLength: 1
          example: b55a9eba-1007-0000-0000-000040e20100
        ReciprocityType:
          description: |-
            Enumeration of valid multi-state tax reciprocity values. 
                        
          nullable: true
          example: LivesIn
          $ref: '#/components/schemas/ReciprocityType'
        FilingStatus:
          description: |-
            Filing status code.
            Retrieve a value by calling "Get Filing Status by Tax Code
          type: string
          nullable: true
          example: S
        WithholdingEffectiveStartDate:
          description: Effective start date of withholding
          type: string
          format: date-time
          nullable: true
          example: '2020-01-13T00:00:00'
        BlockDate:
          description: Withholding block date
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        NonResidentAlien:
          description: Specifies whether an employee is NonResidentAlien
          type: string
          nullable: true
          example: true
        IsProbationaryEmployee:
          description: Specifies whether an employee is a probationary employee
          type: boolean
          nullable: true
          example: true
        OccupationalCode:
          description: Occupational code
          type: string
          nullable: true
          example: '12'
        GeographicCode:
          description: |-
            Geographic code
            Required only for UNEAK tax
          type: string
          nullable: true
          example: 11-1011
        SOCCode:
          description: Standard occupational classification Code
          type: string
          nullable: true
          example: 11-1012
        SeasonalCode:
          description: 'Seasonal Code '
          type: string
          nullable: true
          example: '14'
        CountyCode:
          description: County Code
          type: string
          nullable: true
          example: '124'
        SpouseWork:
          description: Specifies  whether an employee's spouse is employed
          type: string
          nullable: true
          example: Yes/True
        DependentInsuranceEligible:
          description: Dependent insurance eligibility status
          type: string
          nullable: true
          example: Yes/True
        DependentInsuranceEligibleDate:
          description: Dependent insurance eligibility date
          type: string
          format: date-time
          nullable: true
          example: '2020-02-13T00:00:00'
        ApplicableBirthyear:
          description: Birth year
          type: integer
          format: int32
          nullable: true
          example: 1980
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 3141.59
        Percentage:
          description: 'Percentage value used in tax calculation. '
          type: number
          format: decimal
          nullable: true
          example: 0.2
        NCCICode:
          description: 'National Council on Compensation Insurance (NCCI) Code '
          type: string
          nullable: true
          example: '2004'
        PsdCode:
          description: PA Residence PSD code- political subdivision code
          type: string
          nullable: true
          example: 101001
        PsdRate:
          description: PA Residence PSD rate
          type: number
          format: decimal
          nullable: true
          example: 0.123
        OnHold:
          description: |-
            Whether employee tax should appear on paychecks.
                        
          type: boolean
          nullable: true
          example: true
        Exemptions:
          description: Information related to Employee exemptions.
          nullable: true
          $ref: '#/components/schemas/EmployeeExemptions'
        TaxCredit:
          description: >-
            Information related to Employee Tax Credit including Depedent and
            other Tax Credits.
          nullable: true
          $ref: '#/components/schemas/EmployeeTaxCredit'
    GlobalTaxForm:
      description: >-
        The Global Tax Form model represents required fields when
        creating/updating Employee tax.

        So that user can easily determine what data needs to be passed for each
        specific Tax Code.
      type: object
      properties:
        EffectiveStartDate:
          description: Effective start date of withholding.
          type: string
          format: date-time
          nullable: true
          example: '2020-01-13T00:00:00'
        EffectiveEndDate:
          description: Effective end date of withholding.
          type: string
          format: date-time
          nullable: true
          example: '2030-01-13T00:00:00'
        HasFilingStatus:
          description: Information whether global tax requires the Filing status.
          type: boolean
          example: true
        HasAdjustWithholding:
          description: Information whether global tax requires the adjust witholding field.
          type: boolean
          example: true
        HasOverrideWithholdingDate:
          description: >-
            Information whether global tax requires the override witholding date
            field.
          type: boolean
          example: true
        HasApplicableBirthYear:
          description: >-
            Information whether global tax requires the applicable birth year
            field.
          type: boolean
          example: true
        HasAmount:
          description: Information whether global tax requires the amount field.
          type: boolean
          example: true
        HasRate:
          description: Information whether global tax requires the rate field.
          type: boolean
          example: true
        HasExemptionAmount:
          description: Information whether global tax requires exemption amount field.
          type: boolean
          example: true
        HasNonResidentAlien:
          description: Information whether global tax requires non resident alien field.
          type: boolean
          example: true
        HasNumberOfQualifiedDependents:
          description: >-
            Information whether global tax requires the number of qualified
            dependents field.
          type: boolean
          example: true
        HasNumberOfOtherDependents:
          description: >-
            Information whether global tax requires the Number Of Other
            Dependents field.
          type: boolean
          example: true
        HasNumberOfExemptions:
          description: >-
            Information whether global tax requires the Number Of Exemptions
            field.
          type: boolean
          example: true
        HasSpouseWorking:
          description: Information whether global tax requires the Spouse Working field.
          type: boolean
          example: true
        HasTwoIncomes:
          description: Information whether global tax requires the HasTwoIncomes field.
          type: boolean
          example: true
        HasAdditionalIncome:
          description: >-
            Information whether global tax requires the AdditionalIncome field.

            Amount of employee's additional income as specified on employee's
            IRS Form W-4.
          type: boolean
          example: true
        HasAdditionalDeduction:
          description: >-
            Information whether global tax requires the Additional Deduction
            field.
          type: boolean
          example: true
        HasAccuracyConfirmation:
          description: >-
            Information whether global tax requires the Accuracy Confirmation
            field.
          type: boolean
          example: true
        HasQualifiedDependentCredit:
          description: >-
            Information whether global tax requires the Qualified Dependent
            Credit field.
          type: boolean
          example: true
        HasOtherDependentCredit:
          description: >-
            Information whether global tax requires the Other Dependent Credit
            field.
          type: boolean
          example: true
        HasTotalCredits:
          description: Information whether global tax requires Total Credits field.
          type: boolean
          example: true
        QualifiedDependentCredit:
          description: >-
            Information whether global tax requires Qualified Dependent Credit
            field.
          type: number
          format: decimal
          nullable: true
          example: .nan
        OtherDependentCredit:
          description: >-
            Information whether global tax requires Other Dependent Credit
            field.
          type: number
          format: decimal
          nullable: true
          example: .nan
        FilingStatuses:
          description: Enumeration of valid filing status values for this tax code.
          type: array
          nullable: true
          example: S
          xml:
            wrapped: true
          items:
            xml:
              name: FilingStatus
            $ref: '#/components/schemas/FilingStatus'
        HasIncomeTax:
          description: Information whether global tax requires the Income Tax field.
          type: string
          nullable: true
          example: 'Y'
    PagedResultOfTimeCardv2:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TimeCardv2
            $ref: '#/components/schemas/TimeCardv2'
    TimeCardv2:
      allOf:
        - $ref: '#/components/schemas/TimeCard'
        - description: >-
            The Timecard model represents Employee level time, punch details and
            associated labor code information. 
          type: object
          properties:
            EmployeeId:
              description: Unique identifier of this employee.
              type: string
              format: guid
              example: 36f45f30-9a35-0000-0000-000001000000
            EmployeeNumber:
              description: Unique number of the employee in a partner's tenant.
              type: integer
              format: int32
              nullable: true
              example: 123666
            BadgeNumber:
              description: |-
                Employee's assigned badge number.
                            
              type: integer
              format: int32
              nullable: true
              example: 778665
    PagedResultOfTimeCardV3:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TimeCardV3
            $ref: '#/components/schemas/TimeCardV3'
    TimeCardV3:
      description: >-
        The Timecard model represents Employee level time, punch details,pay
        rate (GROSSPAY) and associated labor code information. 
      type: object
      properties:
        EmployeeId:
          description: Unique identifier of this employee.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        EmployeeNumber:
          description: Unique number of the Employee in the Legal Entity.
          type: integer
          format: int32
          nullable: true
          example: 123666
        BadgeNumber:
          description: |-
            Employee's assigned badge number.
                        
          type: integer
          format: int32
          nullable: true
          example: 778665
        DisplayDate:
          description: |-
            The date when the timecard was created.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          example: '2020-11-17T00:00:00Z'
        PunchIn:
          description: |-
            Date and time when the employee punched in.
            Format: YYYY-MM-DDTHH:MM:SS
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17T13:03:03.943'
        PunchOut:
          description: |-
            Date and time when the employee punched out.
            Format: YYYY-MM-DDTHH:MM:SS
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17T18:03:03.000'
        HourAmount:
          description: Amount of hours entered for employee's timecard.
          type: number
          format: decimal
          example: 4.5
        DepartmentCode:
          description: Department Code where the Employee worked.
          type: integer
          format: int64
          example: 3027442356
        DepartmentName:
          description: Department name where the Employee worked.
          type: string
          nullable: true
          example: Accounting
        EarningCode:
          description: Identifies the type of earning for this timecard.
          type: string
          nullable: true
          example: ERC300
        EstimatedGrossPay:
          description: |-
            Employee's estimated pay for the entire Punch pair.. 
                        
          type: number
          format: decimal
          nullable: true
          example: 25.52
        LaborCodes:
          description: >-
            List of type LaborCode containing the employee's labor code
            information.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCodeV2
            $ref: '#/components/schemas/LaborCodeV2'
    LaborCodeV2:
      description: >-
        The LaborCode model is used to define rules for Employees including
        minimum and maximum hours, overtime and benefits.
      type: object
      properties:
        LaborCategoryLevel:
          description: >-
            This represents the Labor Category level the Labor Code is
            associated with.  

            You can find the correlating Labor Category Level by calling GET
            Labor Categories 

            by Legal Entity ID and matching on the "CategoryLevel" field
            (available values = 1-6).
          type: integer
          format: int32
          example: 2
        LaborCode:
          description: The labor code associated with the punch pair.
          type: string
          nullable: true
          example: LCI
        LaborCodeName:
          description: The labor code name associated with the punch pair.
          type: string
          nullable: true
          example: CIN Location
    PagedResultOfEmployeeBalance:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeBalance
            $ref: '#/components/schemas/EmployeeBalance'
    EmployeeBalance:
      description: >-
        The Employee Balance model represents Employee level Balance information
        for accrual balances.
      type: object
      properties:
        EmployeeName:
          description: Full name of the employee.
          type: string
          nullable: true
          example: Lutwidge Roberts
        EmployeeNumber:
          description: >-
            Customer-assigned friendly unique number of the employee within the
            Tenant.
          type: string
          nullable: true
          example: 123666
        EmployeeId:
          description: >-
            Unique identifier of the Employee in Paycor's system. Generated by
            Paycor. Used for other GET endpoints. 
          type: string
          format: guid
          example: 52b68a4a-196c-0000-0000-0007d5268Sa2
        TypeBalances:
          description: >-
            Employee accrual balances information, for each plan the Employee
            participates in.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TypeBalance
            $ref: '#/components/schemas/TypeBalance'
    TypeBalance:
      type: object
      properties:
        TimeOffPlanName:
          description: Name of the time off plan related to this balance.
          type: string
          nullable: true
          example: 2018 Start Date Plan
        TimeOffTypeId:
          description: >-
            Unique identifier of the time off plan record in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 52b68a4a-196c-0000-0000-0007d5268Sa2
        TimeOffTypeCode:
          description: >-
            Abbreviated code of the time off type linked to this plan
            (admin-configured)
          type: string
          nullable: true
          example: Sal
        TimeOffTypeName:
          description: Name of the time off type linked to this plan (admin-configured)
          type: string
          nullable: true
          example: Salary PTO
        ActivityStartDate:
          description: 'Date range this time off balance record covers. '
          type: string
          format: date-time
        ActivityEndDate:
          description: 'Date range this time off balance record covers. '
          type: string
          format: date-time
        CurrentBalance:
          description: >-
            Current balance (in hours) within this plan and date range,
            including upcoming approved requests. 
          type: number
          format: double
          nullable: true
        AccruedBalance:
          description: >-
            Total number of hours accrued (earned) within this plan and date
            range. 
          type: number
          format: double
        UsedBalance:
          description: >-
            Number of hours used (spent) so far within this plan and date
            range. 
          type: number
          format: double
        ScheduledBalance:
          description: >-
            Scheduled upcoming time off within this plan and date range, in
            hours.
          type: number
          format: double
        DefaultEarning:
          description: Earning information related to this time off plan.
          nullable: true
          $ref: '#/components/schemas/EarningCodeLight'
    EarningCodeLight:
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the earning record in Paycor's system.
            Generated by Paycor.
          type: string
          nullable: true
          example: 52b68a4a-196c-0000-0000-0007d5268Sa2
        LegalEntityId:
          description: Id of the Legal Entity.
          type: string
          nullable: true
          example: 678556
        TenantId:
          description: Id of the Tenant.
          type: integer
          format: int32
          example: 678556
        Code:
          description: >-
            Descriptive earning identifier which appears on paychecks. Only set
            at the legal entity or tenant level.
          type: string
          nullable: true
          example: PTO
        Description:
          description: Description of the employee earning code.
          type: string
          nullable: true
          example: Vacation
        EffectiveStartDate:
          description: |-
            Date the employee earning take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        EffectiveEndDate:
          description: |-
            Date the employee earning is no longer in effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: 2020-11-01T00:00Z
    PagedResultOfEmployeeTimeOffRequest:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeTimeOffRequest
            $ref: '#/components/schemas/EmployeeTimeOffRequest'
    EmployeeTimeOffRequest:
      description: >-
        Employee Time Off Request model represents information about time off
        requests for specific employee.
      type: object
      properties:
        LegalEntityId:
          type: integer
          format: int32
        TimeOffRequestId:
          description: Unique identifier of this time off request.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        BenefitCode:
          type: string
          nullable: true
        TotalHours:
          description: Total amount of hours inside this time off request.
          type: number
          format: decimal
          example: 14.5
        Days:
          description: Collection of days for this time off request.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TimeOffRequestDay
            $ref: '#/components/schemas/TimeOffRequestDay'
        Comment:
          description: >-
            Additional comment for this time off request. Optional. Currently
            not available in Get Employee Time Off Requests by EmployeeId.
          type: string
          nullable: true
        Status:
          description: >-
            Status of this time off request.

            Status could be Pending, Approved, Denied, Removed, Canceled or
            empty
          type: string
          nullable: true
          example: Approved
        CreatedDate:
          description: Date and time when this time off request is created.
          type: string
          format: date-time
          example: '2020-11-17T13:00:00.000Z'
        StatusUpdateTime:
          description: Date and time when is the status of this time off request updated.
          type: string
          format: date-time
          example: '2020-11-17T13:00:00.000Z'
        StatusUpdateByEmployeeId:
          description: Unique identifier of employee who is updated status.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        CreatedByEmployeeId:
          description: Unique identifier of employee who is created this time off request.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        EmployeeId:
          description: Unique identifier of this employee.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
    TimeOffRequestDay:
      type: object
      properties:
        TimeOffRequestDayId:
          description: Unique identifier of specific day inside time off request model.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        Date:
          description: Date for Time off request day
          type: string
          format: date-time
          nullable: true
          example: '2020-11-17'
        Hours:
          description: Total amount of hours for this day.
          type: number
          format: decimal
          example: 6
        StartTime:
          description: Exact start date and time for this day
          type: string
          format: date-time
          example: '2020-11-17'
        EndTime:
          description: Exact end date and time for this day
          type: string
          format: date-time
          example: '2020-11-17'
        IsPartial:
          type: boolean
    Event:
      description: Event Model Emitted By Paycor.
      type: object
      properties:
        EventType:
          description: Type of Event triggered by Paycor.
          type: string
          nullable: true
          example: Employee.Modified
        EventId:
          description: Unique Identifier of the Event Generated by Paycor.
          type: string
          format: guid
          example: 75571ee9-d359-0000-0000-000066000000
        TenantId:
          description: Unique Identifier of the Tenant in Paycor's system.
          type: integer
          format: int32
          nullable: true
          example: 2080
        LegalEntityId:
          description: |-
            Unique Identifier of the Legal Entity in Paycor's system.
                        
          type: integer
          format: int32
          nullable: true
          example: 501123
        ItemId:
          description: >-
            Unique Identifier of the Resource change for the Event that is
            triggered by Paycor.
                        
          type: string
          format: guid
          nullable: true
          example: 89610735-e570-0000-0000-000066000000
        ExtendedProperties:
          description: |-
            Additional Information about the Modified Resource or Event.
                        
          type: object
          nullable: true
          example: '{"name", "xyz"}'
          additionalProperties:
            type: string
        ChangedFields:
          description: |-
            This is a placeholder field that will always return null.
                        
          type: array
          nullable: true
          example: null
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: string
        Resource:
          description: |-
            URL to access the modified Resource to retrieve more information.
                        
          nullable: true
          example: v1/employees/89610735-e570-0000-0000-000066000000
          $ref: '#/components/schemas/ResourceReference'
    Command:
      type: object
      required:
        - ApplicationId
        - NotificationURL
        - NotificationSecret
        - EventType
        - TenantId
      properties:
        ApplicationId:
          description: |-
            Unique Identifier of the Application that needs mock events.
                        
          type: string
          format: guid
          minLength: 1
          example: 0f8fad5b-d9cb-469f-a165-70867728950e
        NotificationURL:
          description: |-
            URL where the Event Notification has to be sent.
                        
          type: string
          minLength: 1
          example: https://partner/v1/eventNotificationReceiver
        NotificationSecret:
          description: |-
            Secret or Security Token required to authenticate above server.
                        
          type: string
          minLength: 1
          example: >-
            Bearer
            WREXIDWmfhlc19eLE1vXQ5KDnGEk22AeEvGcON2L2As8I1GwDUGstl-SUfyV6V3e23v3_EVABGx
        EventType:
          description: Type of Event that needs to be triggered by Paycor's System.
          type: string
          minLength: 1
          example: Employee.Modified
        ItemId:
          description: >-
            Unique Identifier of the Resource change for the Event that is
            triggered by Paycor.
                        
          type: string
          format: guid
          nullable: true
          example: 89610735-e570-0000-0000-000066000000
        LegalEntityId:
          description: |-
            Unique Identifier of the Legal Entity in Paycor's system.
                        
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 1
          nullable: true
          example: 501123
        TenantId:
          description: Unique Identifier of the Tenant in Paycor's system.
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 1
          example: 2080
    PagedResultOfGeneralLedger:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: GeneralLedger
            $ref: '#/components/schemas/GeneralLedger'
    GeneralLedger:
      type: object
      properties:
        EmployeeId:
          description: |-
            Unique identifier of employee
            Only set for employee level general ledger data
          type: string
          format: guid
          nullable: true
          example: 36f45f30-9a35-0000-0000-000001000000
        DepartmentId:
          description: |-
            Unique identifier of department
            Synonymous with OrganizationId
          type: string
          format: guid
          nullable: true
          example: 36f45f30-9a35-0000-0000-000001000000
        DepartmentDescription:
          description: |-
            Description of department
            Synonymous with OrganizationDescription
          type: string
          nullable: true
          example: IT
        DepartmentCode:
          description: |-
            Numeric code of department 
            Synonymous with OrganizationCode
          type: integer
          format: int64
          nullable: true
          example: 213
        Amount:
          description: Dollar amount on general ledger
          type: number
          format: double
          nullable: true
          example: -16880
        AccountNumber:
          description: 'Account number '
          type: string
          nullable: true
          example: 64
        MasterAccount:
          description: 'Master Account '
          type: string
          nullable: true
          example: 'XE '
        AccountName:
          description: Account Name
          type: string
          nullable: true
          example: Ohio State Treasurer
        Itemize:
          description: >-
            Identifier that shows whether that particular record can be
            separated

            into additional records
          type: boolean
          nullable: true
          example: true
        SortSequence:
          description: Sort sequence number
          type: integer
          format: int32
          nullable: true
          example: 40
        Credit:
          description: Field that shows whether record is a credit (true) or debit (false)
          type: boolean
          nullable: true
          example: true
        CompanyDepartmentNumber:
          description: |-
            String of 20 characters that represent company department number 
            Synonymous with CompanyOrganizationNumber
          type: string
          nullable: true
          example: 139
        FirstName:
          description: |-
            First name of an employee
            Only set for employee level general ledger data
          type: string
          nullable: true
          example: Emily
        MiddleName:
          description: |-
            Middle name of an employee
            Only set for employee level general ledger data
          type: string
          nullable: true
          example: Anna
        LastName:
          description: |-
            Last name of an employee
            Only set for employee level general ledger data
          type: string
          nullable: true
          example: Smith
    GeneralLedgerReportType:
      description: Enumeration of valid report type values of General Ledger.
      type: string
      x-enumNames:
        - Unknown
        - Setup
        - Regular
      enum:
        - Unknown
        - Setup
        - Regular
    Includes17:
      description: '    EmployeeData - Include employee data in record'
      type: string
      x-enumNames:
        - EmployeeData
      enum:
        - EmployeeData
    PagedResultOfJobCosting:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: JobCosting
            $ref: '#/components/schemas/JobCosting'
    JobCosting:
      type: object
      properties:
        LegalEntityId:
          description: Id of the Legal Entity.
          type: string
          nullable: true
          example: 678556
        CheckDate:
          description: The paycheck date. Also referred to as Pay Date.
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        DepartmentDescription:
          description: |-
            Description of department
            Synonymous with OrganizationDescription
          type: string
          nullable: true
          example: IT
        DepartmentCode:
          description: |-
            Numeric code of department 
            Synonymous with OrganizationCode
          type: integer
          format: int64
          nullable: true
          example: 213
        LaborCategory1Code:
          description: Labor category code 1
          type: integer
          format: int32
          nullable: true
          example: 1
        LaborCode1:
          description: Labor code 1
          type: string
          nullable: true
          example: LCI
        LaborCode1Id:
          description: Labor Code 1 ID
          type: string
          nullable: true
          example: Job
        LaborCode1Description:
          description: Description of labor category 1
          type: string
          nullable: true
          example: CIN Location
        LaborCategory2Code:
          description: Labor category code 1
          type: integer
          format: int32
          nullable: true
          example: 1
        LaborCode2:
          description: Labor code 2
          type: string
          nullable: true
          example: LCI
        LaborCode2Id:
          description: Labor Code 2 ID
          type: string
          nullable: true
          example: Job
        LaborCode2Description:
          description: Description of labor category 1
          type: string
          nullable: true
          example: CIN Location
        LaborCategory3Code:
          description: Labor category code 3
          type: integer
          format: int32
          nullable: true
          example: 1
        LaborCode3:
          description: Labor code 3
          type: string
          nullable: true
          example: LCI
        LaborCode3Id:
          description: Labor Code 3 ID
          type: string
          nullable: true
          example: Job
        LaborCode3Description:
          description: Description of labor category 3
          type: string
          nullable: true
          example: CIN Location
        LaborCategory4Code:
          description: Labor category code 4
          type: integer
          format: int32
          nullable: true
          example: 1
        LaborCode4:
          description: Labor code 4
          type: string
          nullable: true
          example: LCI
        LaborCode4Id:
          description: Labor Code 4 ID
          type: string
          nullable: true
          example: Job
        LaborCode4Description:
          description: Description of labor category 4
          type: string
          nullable: true
          example: CIN Location
        LaborCategory5Code:
          description: Labor category code 5
          type: integer
          format: int32
          nullable: true
          example: 1
        LaborCode5:
          description: Labor code 5
          type: string
          nullable: true
          example: LCI
        LaborCode5Id:
          description: Labor Code 5 ID
          type: string
          nullable: true
          example: Job
        LaborCode5Description:
          description: Description of labor category 5
          type: string
          nullable: true
          example: CIN Location
        LaborCategory6Code:
          description: Labor category code 6
          type: integer
          format: int32
          nullable: true
          example: 1
        LaborCode6:
          description: Labor code 6
          type: string
          nullable: true
          example: LCI
        LaborCode6Id:
          description: Labor Code 6 ID
          type: string
          nullable: true
          example: Job
        LaborCode6Description:
          description: Description of labor category 6
          type: string
          nullable: true
          example: CIN Location
        GLAccountNumber:
          description: 'Account number '
          type: string
          nullable: true
          example: 64
        GLAccountDescription:
          description: 'Account description '
          type: string
          nullable: true
          example: Account One
        CreditAmount:
          description: Credited amount
          type: number
          format: decimal
          nullable: true
          example: 10.56
        DebitAmount:
          description: Credited amount
          type: number
          format: decimal
          nullable: true
          example: 1.33
        WeekNumber:
          description: Week number
          type: integer
          format: int32
          example: 2
        PayNumber:
          description: Pay number
          type: integer
          format: int32
          example: 2
        FileDateMonth:
          description: File Date Month
          type: integer
          format: int32
          example: 5
        FileDateDay:
          description: File date day
          type: integer
          format: int32
          example: 11
        FileDateYear:
          description: File date year
          type: integer
          format: int32
          example: 2010
        EmployeeId:
          description: >-
            Unique identifier of the employee record in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          nullable: true
          example: 52b68a4a-196c-0000-0000-0007d5268Sa2
        EmployeeDepartmentDescription:
          description: Employee's organization description
          type: string
          nullable: true
          example: Cin Store 105
        EmployeeDepartmentCode:
          description: Employee's organization code
          type: integer
          format: int64
          nullable: true
          example: 105
        EmployeeLastName:
          description: Employee's last name
          type: string
          nullable: true
          example: Jones
        EmployeeFirstName:
          description: Employee's first name
          type: string
          nullable: true
          example: Mary
        EmployeeMiddleName:
          description: Employee's middle name
          type: string
          nullable: true
          example: Esther
        EmployeeNumber:
          description: Unique number of the employee in the tenant. Generated by Paycor.
          type: integer
          format: int32
          nullable: true
          example: 33420
        EmployeeStatus:
          description: |-
            Enumeration of valid employment status values.
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatus'
        CheckNumber:
          description: Check number.
          type: integer
          format: int64
          nullable: true
          example: 27463631
        PeriodStartDate:
          description: |-
            Period start date.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        PeriodEndDate:
          description: |-
            Period end date.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          example: '2020-10-01T00:00:00Z'
    Includes18:
      description: '    EmployeeData - Include employee data in record'
      type: string
      x-enumNames:
        - EmployeeData
      enum:
        - EmployeeData
    PagedResultOfReportBuilder:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: ReportBuilder
            $ref: '#/components/schemas/ReportBuilder'
    ReportBuilder:
      description: The ReportBuilder model represents information about user reports.
      type: object
      properties:
        Headers:
          description: |-
            Allows reading basic information of a Fields.
                        
          type: array
          nullable: true
          example: |-
            "fieldId": "0d5257e6-6619-4773-a3a2-93f28ce1814b",
            "displayName": "PayrollId",
            "clientDataType": 3,
            "relatedFieldId": null,
            "groupLevel": null,
            "aggregationType": null,
            "fieldType": 1
                        
          xml:
            wrapped: true
          items:
            xml:
              name: SimplifiedClientField
            $ref: '#/components/schemas/SimplifiedClientField'
        Data:
          description: |-
            Values of the Fields set on a particular user.
                        
          type: array
          nullable: true
          example: >-
            "0d5257e6-6619-4773-a3a2-93f28ce1814b":
            "c73416ce-fe49-0000-0000-0000fb0d0301",
                "34e24335-145e-4443-b597-a5056a417613": "555669329",
                "9f05187d-aa65-4b61-b98c-5ad9f36213e7": "John",
                "a61cab9d-f4b4-462b-8b87-61117602b77b": "Smith",
                "c1d45c25-c0c7-4f2a-b778-679b33bbf40c": "HSAPlan HG",
                "241af216-8d0a-4aae-9187-fcbd888182ad": 123.0000
          xml:
            wrapped: true
          items:
            xml:
              name: Object
        Footers:
          description: Flag that shows information of footers.
          nullable: true
          example: null
        TotalRows:
          description: Flag that shows information of total rows.
          type: integer
          format: int64
          example: 37740
    SimplifiedClientField:
      type: object
      properties:
        FieldId:
          type: string
          format: guid
        DisplayName:
          type: string
          nullable: true
        ClientDataType:
          $ref: '#/components/schemas/ClientDataType'
        RelatedFieldId:
          type: string
          format: guid
          nullable: true
        GroupLevel:
          type: integer
          format: int32
          nullable: true
        AggregationType:
          type: string
          nullable: true
        FieldType:
          nullable: true
          $ref: '#/components/schemas/ReportFieldType'
    ClientDataType:
      description: ''
      type: string
      x-enumNames:
        - Unknown
        - Number
        - DateTime
        - String
        - Guid
        - Date
        - EmployeeStatus
        - EmployeeType
        - Boolean
      enum:
        - Unknown
        - Number
        - DateTime
        - String
        - Guid
        - Date
        - EmployeeStatus
        - EmployeeType
        - Boolean
    ReportFieldType:
      description: ''
      type: string
      x-enumNames:
        - Unknown
        - TemplateField
        - NonTemplateField
        - SnowflakeNonTemplateField
      enum:
        - Unknown
        - TemplateField
        - NonTemplateField
        - SnowflakeNonTemplateField
    ReportCustomParameter:
      description: Update model for Custom Parameters in Reports.
      type: object
      required:
        - CustomParameterId
        - Values
      properties:
        CustomParameterId:
          description: Unique identifier of Custom Parameter.
          type: string
          format: guid
          minLength: 1
          example: 3bb813a8-0000-0000-0000-000066000000
        Values:
          description: Collection of values for that Custom Parameter.
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: Object
    ExportFileType:
      description: ''
      type: string
      x-enumNames:
        - Csv
        - Pdf
        - Excel
        - Html
        - Dfix
      enum:
        - Csv
        - Pdf
        - Excel
        - Html
        - Dfix
    PagedResultOfImpersonatedUser:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: ImpersonatedUser
            $ref: '#/components/schemas/ImpersonatedUser'
    ImpersonatedUser:
      description: Basic user details
      type: object
      properties:
        UserId:
          description: User Id
          type: string
          format: guid
          example: 5245ae3d-e570-0000-0000-000066000000
        FirstName:
          description: First name
          type: string
          nullable: true
          example: John
        LastName:
          description: Last name
          type: string
          nullable: true
          example: Doe
        LegalEntityId:
          description: Legal entity where user belongs
          type: integer
          format: int32
          example: 200187
    PagedResultOfTemplateCustomParameter:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TemplateCustomParameter
            $ref: '#/components/schemas/TemplateCustomParameter'
    TemplateCustomParameter:
      type: object
      required:
        - CustomParameterId
        - Values
      properties:
        CustomParameterId:
          description: Unique identifier of Custom Parameter.
          type: string
          format: guid
          minLength: 1
          example: 3bb813a8-0000-0000-0000-000066000000
        Type:
          description: Parameter type.
          type: string
          nullable: true
          example: Int
        Name:
          description: Parameter name.
          type: string
          nullable: true
          example: Param1
        Values:
          description: Collection of values for that Custom Parameter.
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: Object
    PagedResultOfLaborCategories:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCategories
            $ref: '#/components/schemas/LaborCategories'
    LaborCategories:
      description: 'Labor Category (also called Job Category) '
      type: object
      properties:
        LaborCategoryId:
          description: 'Id of the Labor Category '
          type: string
          format: guid
          example: 12e0e1c9-e8dc-ec11-912c-0050569f27b8
        LegalEntityId:
          description: Unique identifyer of legal entity
          type: integer
          format: int32
          example: 122900
        LaborCategoryName:
          description: Name of labor category
          type: string
          nullable: true
          example: Cat 1
        CategoryLevel:
          description: Order of categories
          type: integer
          format: int32
          example: 1
        CategoryItemCount:
          description: Nummber of labor code items linked to labor category
          type: integer
          format: int32
          example: .nan
    LaborCode3:
      type: object
      required:
        - LaborCategoryId
        - LaborCodeName
        - Code
      properties:
        LaborCategoryId:
          description: 'Id of the Labor Category '
          type: string
          format: guid
          minLength: 1
          example: 12e0e1c9-e8dc-ec11-912c-0050569f27b8
        LaborCodeName:
          description: Unique name of labor code in the labor category
          type: string
          minLength: 1
          example: IT
        Description:
          description: Description of labor code
          type: string
          nullable: true
          example: labor code effective until New year
        Code:
          description: textual code of labor code
          type: string
          minLength: 1
          example: code 1
        EffectiveStartDate:
          description: Effective start date of labor code
          type: string
          format: date-time
          nullable: true
          example: '2020-05-26'
        EffectiveEndDate:
          description: Effective end date of labor code
          type: string
          format: date-time
          nullable: true
          example: '2020-11-25'
    PagedResultOfLaborCode:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCode
            $ref: '#/components/schemas/LaborCode4'
    LaborCode4:
      type: object
      properties:
        LaborCodeId:
          description: 'Id of the Labor Code '
          type: string
          format: guid
          example: 12e0e1c9-e8dc-ec11-912c-0050569f27b8
        LaborCategoryId:
          description: 'Id of the Labor Category '
          type: string
          format: guid
          example: 12e0e1c9-e8dc-ec11-912c-0050569f27b8
        LegalEntityId:
          description: Unique identifyer of legal entity
          type: integer
          format: int32
          example: 122900
        LaborCodeName:
          description: Unique name of labor code in the labor category
          type: string
          nullable: true
          example: IT
        Description:
          description: Description of labor code
          type: string
          nullable: true
          example: labor code effective until New year
        Code:
          description: textual code of labor code
          type: string
          nullable: true
          example: code 1
        EffectiveStartDate:
          description: Effective start date of labor code
          type: string
          format: date-time
          nullable: true
          example: '2020-05-26'
        EffectiveEndDate:
          description: Effective end date of labor code
          type: string
          format: date-time
          nullable: true
          example: '2020-11-25'
    LaborCode5:
      type: object
      required:
        - LaborCodeId
      properties:
        LaborCodeId:
          description: 'Id of the Labor Code '
          type: string
          format: guid
          minLength: 1
          example: 12e0e1c9-e8dc-ec11-912c-0050569f27b8
        LaborCodeName:
          description: Unique name of labor code in the labor category
          type: string
          nullable: true
          example: IT
        Description:
          description: Description of labor code
          type: string
          nullable: true
          example: labor code effective until New year
        Code:
          description: textual code of labor code
          type: string
          nullable: true
          example: code 1
        EffectiveStartDate:
          description: Effective start date of labor code
          type: string
          format: date-time
          nullable: true
          example: '2020-05-26'
        EffectiveEndDate:
          description: Effective end date of labor code
          type: string
          format: date-time
          nullable: true
          example: '2020-11-25'
    LegalEntity:
      description: >-
        The Legal Entity (Client) model represents organization Legal Entity
        information.

        Provides links to the Legal Entity's associated Tenant, Employee,
        Person, Earning, Deduction, Taxes and Custom Field information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the legal entity in Paycor's system. This is
            also known as the Client Id.
                        
          type: integer
          format: int32
          example: 501123
        Name:
          description: |-
            Name of the legal entity. 
                        
          type: string
          nullable: true
          example: ACME Inc.
        FederalId:
          description: >-
            US Federal tax Identification Number/Employer Identification
            Number. 
                        
          type: string
          nullable: true
          example: 555555555
        Type:
          description: >-
            Enumeration of valid types of corporation values specifying how the
            legal entity is registered with the US government. 
          example: Corporation
          $ref: '#/components/schemas/CorporationType'
        IsLost:
          description: >-
            Flag that shows is the client active in Paycor system.

            Once a client is marked Lost, it will never reset to IsLost=false. A
            new LegalEntityId would be created instead
          type: boolean
          example: false
        BusinessNames:
          description: >-
            List of type BusinessName containing the legal entity's name,
            addresses and types. 
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: BusinessName
            $ref: '#/components/schemas/BusinessName'
        Tenant:
          description: >-
            URL to access the Tenant resource for information about the legal
            entity's tenant.
                        
          nullable: true
          example: /v1/legalentities/501123/tenants
          $ref: '#/components/schemas/ResourceReference'
        Employees:
          description: >-
            URL to access the Employee resource for information about the legal
            entity's employees. 
                        
          nullable: true
          example: /v1/legalentities/501123/employees
          $ref: '#/components/schemas/ResourceReference'
        Persons:
          description: >-
            URL to access the Person resource for person information for the
            employee.
                        
          nullable: true
          example: /v1/legalentities/501123/persons
          $ref: '#/components/schemas/ResourceReference'
        Earnings:
          description: >-
            URL to access the Earning resource for information about the legal
            entity's earnings. 
                        
          nullable: true
          example: /v1/legalentities/501123/earnings
          $ref: '#/components/schemas/ResourceReference'
        Deductions:
          description: >-
            URL to access the Deduction resource for information about the legal
            entity's deductions. 
                        
          nullable: true
          example: /v1/legalentities/501123/deductions
          $ref: '#/components/schemas/ResourceReference'
        Taxes:
          description: >-
            URL to access the Taxes resource for information about the legal
            entity's taxes. 
                        
          nullable: true
          example: /v1/legalentities/501123/taxes
          $ref: '#/components/schemas/ResourceReference'
    CorporationType:
      description: |-
        Enumeration of valid Types of Corporation values.
                    
      type: string
      x-enumNames:
        - Corporation
        - SolePropLLC
        - LLC
        - PartnershipLLC
        - EstateTrust
        - Unincorporated
        - Railroad
        - CommonPaymaster
        - Seasonal
        - Successorship
        - Government
        - CERS
        - PERS
        - MQGE
        - FICATaxable
        - FICAExempt
        - NonProfit
        - Reimbursing
        - Clergy
        - Agricultural
        - Household
        - IndContractor
        - TenNinetyNineR
        - TenNinetyNineIGDB
        - SCorp
        - CCorp
        - ThirdPartyPayer
      enum:
        - Corporation
        - SolePropLLC
        - LLC
        - PartnershipLLC
        - EstateTrust
        - Unincorporated
        - Railroad
        - CommonPaymaster
        - Seasonal
        - Successorship
        - Government
        - CERS
        - PERS
        - MQGE
        - FICATaxable
        - FICAExempt
        - NonProfit
        - Reimbursing
        - Clergy
        - Agricultural
        - Household
        - IndContractor
        - TenNinetyNineR
        - TenNinetyNineIGDB
        - SCorp
        - CCorp
        - ThirdPartyPayer
    BusinessName:
      description: >-
        The Business Name model represents Legal Entity Business Name
        information. 
                    
      type: object
      properties:
        Type:
          description: |-
            Type of the legal entity's business name.
                        
          example: DBA
          $ref: '#/components/schemas/BusinessNameType'
        Name:
          description: |-
            Name of legal entity.
                        
          type: string
          nullable: true
          example: The Integration T-Shirt Company
        Addresses:
          description: >-
            List of data of type Address containing all of the legal entity's
            business addresses.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityAddress
            $ref: '#/components/schemas/LegalEntityAddress'
    BusinessNameType:
      description: |-
        Enumeration of valid Types of Business Name values.
                    
      type: string
      x-enumNames:
        - DBA
        - Legal
        - Secondary
      enum:
        - DBA
        - Legal
        - Secondary
    LegalEntityAddress:
      description: >-
        The Legal Entity Address model represents Legal Entity Address
        information.
      type: object
      properties:
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          nullable: true
          example: 4811 Montgomery Road
        StreetLine2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building 6
        Suite:
          description: |-
            Suite information in the address.
                        
          type: string
          nullable: true
          example: Suite 1000
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        Country:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
        County:
          description: |-
            County in the address.
                        
          type: string
          nullable: true
          example: Hamilton
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          nullable: true
          example: 45212-0341
        Type:
          description: |-
            Enumeration of valid legal entity address type values.
                        
          example: Unknown
          $ref: '#/components/schemas/LegalEntityAddressType'
    LegalEntityAddressType:
      description: |-
        Enumeration of valid Legal Entity Address Type values.
                    
      type: string
      x-enumNames:
        - Unknown
        - Primary
        - Secondary
      enum:
        - Unknown
        - Primary
        - Secondary
    Includes19:
      description: |2-
            All - Include all data


            BusinessNames - Include business names (e.g. type, name)
      type: string
      x-enumNames:
        - All
        - BusinessNames
      enum:
        - All
        - BusinessNames
    UserInfo:
      description: >-
        The User Info provides a List of the Legal Entities and Tenants User has
        access to.
      type: object
      properties:
        UserLegalEntities:
          description: >-
            Provides a List of the Legal Entities and Tenants User has access
            to.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityTenant
            $ref: '#/components/schemas/LegalEntityTenant'
    LegalEntityTenant:
      type: object
      properties:
        LegalEntityId:
          description: >-
            Unique identifier of the legal entity in Paycor's system. This is
            also known as the Client Id.
                        
          type: integer
          format: int32
          example: 501123
        TenantId:
          description: Id of the Tenant.
          type: integer
          format: int32
          example: 678556
    PagedResultOfTenantCertificationOrganization:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TenantCertificationOrganization
            $ref: '#/components/schemas/TenantCertificationOrganization'
    TenantCertificationOrganization:
      type: object
      properties:
        CertificationOrganizationId:
          description: |-
            Identifier of certification organization.
                        
          type: string
          format: guid
          example: dd71aee2-22c8-4937-a3d7-28a4ad3f1df7
        CertificationOrganizationName:
          description: |-
            Name of the organization that is issuing the certification.
                        
          type: string
          nullable: true
          example: CPR Class
    PagedResultOfTenantCertification:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TenantCertification
            $ref: '#/components/schemas/TenantCertification'
    TenantCertification:
      type: object
      properties:
        CertificationId:
          description: |-
            Identifier of certification.
                        
          type: string
          format: guid
          example: dd71aee2-22c8-4937-a3d7-28a4ad3f1df7
        CertificationName:
          description: |-
            Name of certification
                        
          type: string
          nullable: true
          example: First Aid certificate
    PagedResultOfLegalEntityDeduction:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityDeduction
            $ref: '#/components/schemas/LegalEntityDeduction'
    LegalEntityDeduction:
      description: >-
        The Legal Entity Deduction model represents Legal Entity level Deduction
        information.
         Provides link to the associated Legal Entity information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the legal entity deduction in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 3bb813a8-0000-0000-0000-000066000000
        Code:
          description: 'Unique deduction code set at legal entity or tenant level.  '
          type: string
          nullable: true
          example: 401K
        GlobalDeductionCode:
          description: Global deduction code.
          type: string
          nullable: true
          example: 401K
        Description:
          description: Description of the deduction code.
          type: string
          nullable: true
          example: NEED-401k Deduction
        Type:
          description: Enumeration of valid types of legal entity deduction values.
          example: PPD
          $ref: '#/components/schemas/DeductionType'
        LinkedDeductionCodes:
          description: |-
            List of linked deduction codes.
                        
          type: array
          nullable: true
          example: 401K, Loan
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: string
        Amount:
          description: |-
            Fixed, recurring deduction dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 45202.99
        Rate:
          description: |-
            Percentage-based amount that may vary by deduction type.
                        
          type: number
          format: decimal
          nullable: true
          example: 1
        Frequency:
          description: |-
            Enumeration of valid legal entity deduction frequency values.
                        
          example: Daily
          $ref: '#/components/schemas/PayFrequency'
        IsOnW2:
          description: |-
            Whether legal entity deduction shows up on a W-2 tax form.
                        
          type: boolean
          example: true
        OnHold:
          description: |-
            Whether legal entity deduction should appear on paychecks.
                        
          type: boolean
          example: true
        EffectiveStartDate:
          description: |-
            Date the legal entity deduction take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        LegalEntity:
          description: >-
            URL to access the Legal Entity resource for information about the
            legal entity. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfDepartment:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Department
            $ref: '#/components/schemas/Department'
    Department:
      description: The Client Department model represents client department information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the department in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: cb4a1b67-000c-0000-0000-000066000000
        Code:
          description: 'User defined department code.  '
          type: string
          nullable: true
          example: 123
        Description:
          description: User defined description of the department.
          type: string
          nullable: true
          example: Department 123
        ParentId:
          description: >-
            Unique identifier of the department's parent department in Paycor's
            system.

            Value will be NULL for top level departments.

            Level 2 Departments do not have ParentID's.
          type: string
          format: guid
          nullable: true
          example: cb4a1b67-000c-0000-0000-000066000077
        Level:
          description: >-
            The level of the department in the department structure.

            Level 1 Department is the parent payroll for the pay group. Hence,
            Level will always be >= 2 for bulk/list api.
          type: integer
          format: int32
          example: 2
        PayrollId:
          description: Id of the parent payroll for the pay group.
          type: string
          format: guid
          nullable: true
          example: cb4a1b67-000c-0000-0000-000066000077
        PayrollDescription:
          description: Description of the parent payroll for the pay group.
          type: string
          nullable: true
        WorkLocationId:
          description: >-
            Unique identifier of the legal entity's work location in Paycor's
            system. Generated by Paycor.
          type: string
          format: guid
          nullable: true
          example: 5245ae3d-e570-0000-0000-000066000000
        WorkLocationName:
          description: Name of the legal entity's work location.
          type: string
          nullable: true
          example: ACME East is an open concept office.
    Department2:
      description: The Department model represents legal entity department information.
      type: object
      required:
        - Code
        - ParentId
        - Description
        - WorkLocationId
      properties:
        Code:
          description: >-
            User defined department code. Only numeric characters are allowed
            and the limit is 14 characters.
          type: string
          minLength: 1
          example: 123
        ParentId:
          description: >-
            Id of the parent department (or payroll) under which new department
            will be created.

            When creating top level departments, payroll id should be used as
            parent id
          type: string
          format: guid
          minLength: 1
          example: cb4a1b67-000c-0000-0000-000066000456
        Description:
          description: User defined description of the department.
          type: string
          minLength: 1
          example: Department 123
        WorkLocationId:
          description: |-
            The ID of the Work Location to associate with new department.
             * Must be an existing Work Location on the Legal Entity. Use API 'Get a list of Work Locations for a Legal Entity' to retrieve a list of valid IDs.
                         
          type: string
          format: guid
          minLength: 1
          example: cb4a1b67-000c-0000-0000-000066000212
    Department3:
      description: The Department model represents legal entity department information.
      type: object
      required:
        - DepartmentId
        - Code
        - ParentId
        - Description
        - WorkLocationId
      properties:
        DepartmentId:
          description: |-
            Unique Identifier of the Department in Paycor's system.
                        
          type: string
          format: guid
          minLength: 1
          example: 89b88074-4b20-0000-0000-000014e00146
        Code:
          description: >-
            User defined department code. Only numeric characters are allowed
            and the limit is 14 characters.
          type: string
          minLength: 1
          example: 123
        ParentId:
          description: >-
            Id of the parent department (or payroll) under which new department
            will be created.

            When updating top level departments, payroll id should be used as
            parent id
          type: string
          format: guid
          minLength: 1
          example: cb4a1b67-000c-0000-0000-000066000456
        Description:
          description: User defined description of the department.
          type: string
          minLength: 1
          example: Department 123
        WorkLocationId:
          description: |-
            The ID of the Work Location to associate with new department.
             * Must be an existing Work Location on the Legal Entity. Use API 'Get a list of Work Locations for a Legal Entity' to retrieve a list of valid IDs.
                         
          type: string
          format: guid
          minLength: 1
          example: cb4a1b67-000c-0000-0000-000066000212
    PagedResultOfLegalEntityEarning:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityEarning
            $ref: '#/components/schemas/LegalEntityEarning'
    LegalEntityEarning:
      description: >-
        The Legal Entity Earning model represents Legal Entity level Earning
        information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the legal entity's earning in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: d0f18d42-21cb-0000-0000-0000fb0d0300
        Code:
          description: >-
            Descriptive legal entity earning identifier set at the legal entity
            or tenant level.
          type: string
          nullable: true
          example: OT
        GlobalEarningCode:
          description: Global descriptive legal entity earning identifier.
          type: string
          nullable: true
          example: OT
        Description:
          description: Description of the legal entity's earning code.
          type: string
          nullable: true
          example: Overtime
        Hours:
          description: Total hours worked for legal entity's earning.
          type: number
          format: decimal
          nullable: true
          example: 40.4
        Amount:
          description: |-
            Fixed, recurring dollar amount.
                        
          type: number
          format: decimal
          nullable: true
          example: 123.45
        Rate:
          description: |-
            Percentage value set by the user.
                        
          type: number
          format: decimal
          nullable: true
          example: 0.25
        Frequency:
          description: |-
            Enumeration of valid legal entity earning frequency values.
                        
          example: EveryPayPeriod
          $ref: '#/components/schemas/PayFrequency'
        IsOnW2:
          description: |-
            Whether legal entity's earning shows up on a W-2 tax form.
                        
          type: boolean
          example: true
        OnHold:
          description: |-
            Whether legal entity's earning should appear on paychecks.
                        
          type: boolean
          example: true
        EffectiveStartDate:
          description: |-
            Date the legal entity earning take effect.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        Factor:
          description: |-
            Value set by the user to multiply with the rate.
                        
          type: number
          format: decimal
          nullable: true
          example: 1.5
        LegalEntity:
          description: >-
            URL link to access the Legal Entity resource for additional
            information on the legal entity. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfTenantJobTitle:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TenantJobTitle
            $ref: '#/components/schemas/TenantJobTitle'
    TenantJobTitle:
      description: >-
        The Tenant Jo Title model represents information about Job Titles
        assigned by the Tenant.

        Provides link to the associated Tenant's information.
      type: object
      properties:
        JobTitleId:
          description: >-
            Unique identifier of the tenant's job title in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 5245ae3d-e570-0000-0000-000066000000
        JobTitle:
          description: Name of the tenant's job title.
          type: string
          nullable: true
          example: Software Engineer.
        JobCode:
          description: 'Setup by HR Admin in Job Code field. '
          type: string
          nullable: true
          example: 12345
        JobCategory:
          description: The Job's EEO category.
          type: integer
          format: int32
          nullable: true
          example: 9
        IsArchived:
          description: 'Whether the HR Admin has chosen to Archive the Job '
          type: boolean
        Tenant:
          description: |-
            URL to access the Tenant resource for information about the tenant.
                        
          nullable: true
          example: /v1/tenants/501123
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfOnDemandPayDeductionInformation:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: OnDemandPayDeductionInformation
            $ref: '#/components/schemas/OnDemandPayDeductionInformation'
    OnDemandPayDeductionInformation:
      description: >-
        The On Demand Pay Deduction represents Employee level Deduction
        Information.

        Provides link to the associated Employee information.
                    
      type: object
      properties:
        LegalEntityId:
          description: Unique identifier of the Legal Entity in Paycor's system.
          type: integer
          format: int32
          example: 100289
        CheckDate:
          description: Flag that shows information of date of paycheck.
          type: string
          format: date-time
          example: '2020-11-13T00:00:00'
        PayImportId:
          description: |-
            Unique identifier of import pay.
                        
          type: integer
          format: int32
          example: 123456
        EmployeeId:
          description: >-
            Unique identifier of the employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        EmployeeNumber:
          description: |-
            Unique number of the employee in the tenant. Generated by Paycor.
                        
          type: integer
          format: int32
          example: 12345
        EmployeeName:
          description: First and last name of the employee.
          type: string
          nullable: true
          example: Charles Dodgson
        EmployeeStatus:
          description: |-
            Data including the employee's status of type EmployeeStatusData.
                        
          nullable: true
          example: Active
          $ref: '#/components/schemas/EmployeeStatusData2'
        WasEmployeePaid:
          description: |-
            A flag that indicates that employee is paid.
                        
          type: boolean
          example: true
        ReceivedAmount:
          description: |-
            Flag that shows information of Received amount.
                        
          type: number
          format: decimal
          example: 2000.95
        PaidAmount:
          description: |-
            Flag that shows information of paid amount.
                        
          type: number
          format: decimal
          example: 2000.95
        ShortfallAmount:
          description: |-
            Flag that shows information of shortfall amount.
                        
          type: number
          format: decimal
          example: 2000.95
        PayrunStatus:
          description: Flag that shows status information of payrun.
          type: string
          nullable: true
          example: Expected To Run
        PayrunProcessDate:
          description: Flag that shows information of date of payrun process.
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        PeriodStartDate:
          description: Flag that shows start date period.
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        PeriodEndDate:
          description: Flag that shows end date period.
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        ImpoundProcessDate:
          description: Flag that shows information of date of Impound process.
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        ImpoundReferenceId:
          description: |-
            Unique number of impound reference.
                        
          type: string
          nullable: true
          example: 123456
        ImpoundedAmount:
          description: |-
            Flag that shows information of impounded amount.
                        
          type: number
          format: decimal
          example: 123456
        IsClientActive:
          description: |-
            Flag that shows is the client active or not in Paycor system.
                        
          type: boolean
          example: true
    EmployeeStatusData2:
      description: >-
        The Employee Status Data model represents Employee Employment Status
        information.
                    
      type: object
      properties:
        IsFullTime:
          description: |-
            Whether employee is full time. 
                        
          type: boolean
          nullable: true
          example: true
        Status:
          description: |-
            Enumeration of valid employment status values.
                        
          example: Active
          $ref: '#/components/schemas/EmploymentStatus3'
        Flsa:
          description: >-
            Enumeration of valid Fair Labor Standards Act (FLSA) defined type
            values.
                        
          example: SalaryExempt
          $ref: '#/components/schemas/FlsaType'
        Type:
          description: |-
            Enumeration of valid employment type values.
                        
          example: Temporary
          $ref: '#/components/schemas/EmploymentType'
        EligibleForRehire:
          description: |-
            Determines is employee eligible for rehire.
                        
          type: string
          nullable: true
          example: 'Yes'
    EmploymentStatus3:
      description: |-
        Enumeration of valid Employment Status values.
                    
      type: string
      x-enumNames:
        - Active
        - Deceased
        - LongTermDisability
        - ShortTermDisability
        - Fmla
        - LaidOff
        - LeaveWithPay
        - LeaveWithoutPay
        - ThirdPartyPayable
        - Resigned
        - Retired
        - Terminated
        - WorkersCompensation
      enum:
        - Active
        - Deceased
        - LongTermDisability
        - ShortTermDisability
        - Fmla
        - LaidOff
        - LeaveWithPay
        - LeaveWithoutPay
        - ThirdPartyPayable
        - Resigned
        - Retired
        - Terminated
        - WorkersCompensation
    PayrunAccrualData:
      description: >-
        Payrun Accrual Data represents information about the Distributed Accrual
        Data of a Legal Entity.
                    
      type: object
      properties:
        LegalEntityId:
          description: |-
            Unique identifier of the legal entity in Paycor's system.
                        
          type: integer
          format: int32
          example: 501123
        PeriodStartDate:
          description: |-
            Start date of given Planner id
                        
          type: string
          format: date-time
          example: '2019-11-22T00:00:00Z'
        PeriodEndDate:
          description: |-
            End date of given Planner id
                        
          type: string
          format: date-time
          example: '2019-11-22T00:00:00Z'
        EmployeePayrollHours:
          description: |-
            List of Employee Payroll Hours. 
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeePayrollHours
            $ref: '#/components/schemas/EmployeePayrollHours'
    EmployeePayrollHours:
      description: |-
        Employee Payroll Hours of Legal Entity Payrun Accrual Data.
                    
      type: object
      properties:
        EmployeeId:
          description: Unique identifier of the employee.
          type: string
          format: guid
          example: 75571ee9-d359-0000-0000-000066000000
        PayNumber:
          description: Number of checks that an employee will get for a particular payrun.
          type: integer
          format: int32
          example: 2
        LegalEntityEarningID:
          description: Identifier of the Legal Entity Earning
          type: string
          format: guid
          example: 4f1a9fa9-3037-0000-0000-0000ab360100
        PaidHours:
          description: The actual hours that the employee have paid for the given payrun
          type: number
          format: decimal
          example: 25
        ImportedHours:
          description: >-
            The hours that were imported during key-in/reviewing the payrun
            before posting it
          type: number
          format: decimal
          example: 1
        AdjustedHours:
          description: Self calculated value of PaidHours-ImportedHours
          type: number
          format: decimal
          example: 25
        DepartmentId:
          description: >-
            Employee Department Id against which the items were posted for
            distribution
          type: string
          format: guid
          example: 0aea177a-26ef-0000-0000-0000ab360100
    AccrualBalanceData:
      description: >-
        Accrual Balance Data represents the employees summarized accrual balance
        information.
                    
      type: object
      required:
        - EmployeeId
        - PlannerId
        - TimeOffTypeDescription
        - HoursAddedYTD
        - HoursUsedYTD
        - AvailableBalance
      properties:
        EmployeeId:
          description: >-
            Unique identifier of the Employee in Paycor's system. Generated by
            Paycor. Used for other GET endpoints. 
          type: string
          format: guid
          minLength: 1
          example: 497b41d0-5646-0000-0000-00009add0300
        PlannerId:
          description: Id of the planner for this payment
          type: string
          format: guid
          minLength: 1
          example: 5f407b07-014a-0000-0000-00009add0300
        PayNumber:
          description: Pay number
          type: integer
          format: int32
          example: 0
        PeriodEndDate:
          description: |-
            Period end date.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '2023-05-09T13:44:57.669Z'
        TimeOffTypeCode:
          description: >-
            Abbreviated code of the time off type linked to this plan
            (admin-configured)
          type: string
          nullable: true
          example: Sal
        TimeOffTypeDescription:
          description: >-
            Description of the time off type linked to this plan
            (admin-configured)
          type: string
          minLength: 1
          example: Sal
        PrintOption:
          description: >-
            Determines what information to print on the payroll paystub
            (1.AvailableBalanceAndYTD,2.AvailableBalance,3.NoPrint)
          type: string
          nullable: true
          example: NoPrint
        PayrunTypesToInclude:
          description: >-
            Determines which payroll paystubs should be
            printed(1.AllPayStubs,2.RegularOnly,3.AdditionalOnly)
          type: string
          nullable: true
          example: AllPayStubs
        PrintDelayinDays:
          description: >-
            The number of days after an employee’s hire date before the balance
            is printed on the paystub
          type: integer
          format: int32
          example: 2
        ShortfallOption:
          description: >-
            If there is a balance shortfall at the time of payroll
            (1.Warning,2.None,3.DoNotPay)
          type: string
          nullable: true
          example: None
        PrintBalancePaystubOption:
          description: >-
            Whether to print the employee’s current balance (Current) or balance
            at the end of the pay period (Pay Period End Date) on the paystub
          type: string
          nullable: true
          example: Sal
        StartingBalance:
          description: The employee’s start of year balance
          type: number
          format: double
          example: 0
        HoursAddedYTD:
          description: >-
            Total hours added from start year to date. This value is required
            and cannot be null.
          type: number
          format: double
          example: 56
        HoursUsedYTD:
          description: >-
            Total hours deducted from start year to date. This value is required
            and cannot be null.
          type: number
          format: double
          example: 56
        AvailableBalance:
          description: >-
            Employee’s current available balance. This value is required and
            cannot be null.
          type: number
          format: double
          example: 8
        MaxEntitledBalance:
          description: Maximum hours that an employee is entitled to use in a year
          type: number
          format: double
          example: 160
        RemainingEntitledBalance:
          description: Hours remaining until maxEntitledBalance limit is reached
          type: number
          format: double
          example: 80
    EmployeeShortfallConfiguration:
      description: Employee's accrual short fall configuration model.
      type: object
      required:
        - EmployeeId
        - StartDate
        - EndDate
      properties:
        EmployeeId:
          description: >-
            Unique identifier of the employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          minLength: 1
          example: 5245ae3d-e570-0000-0000-000066000000
        StartDate:
          description: Date range filter.
          type: string
          format: date-time
          minLength: 1
        EndDate:
          description: Date range filter.
          type: string
          format: date-time
          minLength: 1
        TimeOffTypeCode:
          description: >-
            Code for the time off plan (example PTO, Holiday, Personal etc.)
            Specific to Reseller’s plan.
          type: string
          nullable: true
          example: PTO
        AvailableBalance:
          description: >-
            Amount of hours available for an Employee for the particular
            TimeOffTypeCode.
          type: number
          format: double
          nullable: true
          example: 6
        ShortFallAlarmOption:
          description: >-
            Payroll's Short fall alarm option configured for the specific
            Employee.
          type: string
          nullable: true
        EarningCodes:
          description: List of earnings codes.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: string
        TimeOffHours:
          description: >-
            Amount of hours for which an Employee has time off hours per
            TimeOffTypeCode after the start date of the short fall alarm option.
          type: number
          format: double
          nullable: true
          example: 15
    PagedResultOfLegalEntityPayData:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityPayData
            $ref: '#/components/schemas/LegalEntityPayData'
    LegalEntityPayData:
      description: >-
        Each instance of this object represents an Employee being paid on a
        specific date. 
         Provides link to the associated Legal Entity information.
      type: object
      properties:
        EmployeeId:
          description: Unique identifier of this employee who was paid.
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        CheckDate:
          description: The paycheck date for this employee. Also referred to as Pay Date.
          type: string
          format: date-time
          nullable: true
          example: '2020-11-13T00:00:00'
        ProcessDate:
          description: 'The internal pay processing date for this employee. '
          type: string
          format: date-time
          nullable: true
          example: '2020-11-11T00:00:00'
        LegalEntity:
          description: >-
            URL to access the Legal Entity resource for information about the
            legal entity. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
        EmployeePaystub:
          description: |-
            URL to access the Employee Paystub information for these paychecks. 
                        
          nullable: true
          example: /v1/employees/{employeeId}/paystubs?checkDate=
          $ref: '#/components/schemas/ResourceReference'
    PagedResultOfPayGroup:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayGroup
            $ref: '#/components/schemas/PayGroup'
    PayGroup:
      type: object
      properties:
        LegalEntityId:
          description: >-
            Unique identifier of the legal entity in Paycor's system. This is
            also known as the Client Id.
                        
          type: integer
          format: int32
          example: 501123
        PayrollId:
          description: >-
            Unique identifier of the parent payroll in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 52a2s23-0000-0000-0000-0007d0009840
        PayrollDescription:
          description: Description of the parent payroll for the pay group
          type: string
          nullable: true
        PayrollCode:
          description: Code of the parent payroll for the pay group
          type: string
          nullable: true
        PayGroupId:
          description: >-
            Unique identifier of the pay group in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: 52a2s23-0000-0000-0000-0007d0009840
        PayGroupName:
          description: Name of the pay group
          type: string
          nullable: true
        PayGroupFrequency:
          description: Frequency that the pay group will run
          type: string
          nullable: true
    PagedResultOfPayPeriod2:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PayPeriod
            $ref: '#/components/schemas/PayPeriod2'
    PayPeriod2:
      type: object
      properties:
        PlannerId:
          description: Planner id
          type: string
          format: guid
          example: dbec8470-e8b4-0000-0000-00009add0300
        CheckDate:
          description: The paycheck date.
          type: string
          format: date-time
          example: '2020-11-13T00:00:00'
        ProcessDate:
          description: The pay process date.
          type: string
          format: date-time
          example: '2020-11-13T00:00:00'
        PeriodStartDate:
          description: Start date of the pay period
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        PeriodEndDate:
          description: End date of the pay period
          type: string
          format: date-time
          example: '2019-11-01T00:00:00Z'
        PayGroup:
          description: id of the pay group
          type: string
          format: guid
          example: bd2bf6d2-a1d7-0000-0000-00009add0300
    PagedResultOfActivityType:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: ActivityType
            $ref: '#/components/schemas/ActivityType'
    ActivityType:
      type: object
      properties:
        Id:
          description: >-
            Unique Identifier of Activity Type in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          nullable: true
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        Name:
          description: Name of the Activity Type.
          type: string
          nullable: true
          example: Work
        Color:
          description: |-
            The Color used for the Activity Type.
                        
          type: string
          nullable: true
          example: Black
        Type:
          description: |-
            Enumeration of valid Type values.
            Describes the Activity Type as Productive or NonProductive.
          example: Productive
          $ref: '#/components/schemas/ProductivityType'
        IsCustom:
          description: >-
            Whether the Activity Type is a Custom Value or Default Value
            provided by Paycor.
                        
          type: boolean
          example: false
    ProductivityType:
      description: ''
      type: string
      x-enumNames:
        - Productive
        - NonProductive
      enum:
        - Productive
        - NonProductive
    PagedResultOfScheduleGroup:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: ScheduleGroup
            $ref: '#/components/schemas/ScheduleGroup'
    ScheduleGroup:
      type: object
      properties:
        Id:
          description: Schedule Group identifier
          type: string
          format: guid
          example: b95b8067-09c9-46d2-52d8-08da7531eb4f
        Name:
          description: Schedule Group name
          type: string
          nullable: true
          example: Office schedule
        IsActive:
          description: Is Schedule Group active
          type: boolean
          example: true
    Services:
      description: >-
        The Services model represents service offerings available to a Legal
        Entity.
      type: object
      properties:
        TimeService:
          description: >-
            The name of the services that the Legal Entity has activated or
            "None"

            if no service has been activated.
          type: string
          nullable: true
        TimeOnDemand:
          type: boolean
        PerformTime:
          type: boolean
        PerformTimeScheduling:
          type: boolean
        PaycorScheduling:
          type: boolean
        PaycorSchedulingPro:
          type: boolean
        PerformAccruals:
          type: boolean
        ResellerAccruals:
          type: boolean
        PerformTimeOff:
          type: boolean
        IntegrationPayrollTimePartner:
          type: boolean
        WorkforceManagement:
          type: boolean
        JobCosting:
          type: boolean
        Onboarding:
          type: boolean
    StatusReason:
      description: |-
        Legal Entity's status reason.
        Represents possible employee's statuses and it's categories.
      type: object
      properties:
        Id:
          description: Unique identifier of the status.
          type: string
          format: guid
          example: 3c88ef90-5e35-0000-0000-0000fb0d0300
        StatusCategory:
          description: Category of the status.
          example: PlaceOnLeave
          $ref: '#/components/schemas/StatusCategory'
        Value:
          description: Status reason value.
          type: string
          nullable: true
          example: Sick
    StatusCategory:
      description: Enumeration of valid status categories.
      type: string
      x-enumNames:
        - Termination
        - ReturnFromLeave
        - PlaceOnLeave
      enum:
        - Termination
        - ReturnFromLeave
        - PlaceOnLeave
    StatusCategory2:
      description: |2-
            TerminationReason 


            LeaveReason 


            ReturnReason
      type: string
      x-enumNames:
        - TerminationReason
        - LeaveReason
        - ReturnReason
      enum:
        - TerminationReason
        - LeaveReason
        - ReturnReason
    PagedResultOfLegalEntityTax:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityTax
            $ref: '#/components/schemas/LegalEntityTax'
    LegalEntityTax:
      description: >-
        The Legal Entity (Client) tax model represents organization Legal Entity
        Tax information.  
      type: object
      properties:
        LegalEntityTaxId:
          description: |-
            Unique identifier of the legal entity tax in Paycor's system.
                        
          type: string
          format: guid
          example: 2802cb0f-d278-0000-0000-000014e00100
        LegalEntityId:
          description: |-
            Unique identifier of the legal entity in Paycor's system.
                        
          type: integer
          format: int32
          example: 501123
        TaxCode:
          description: |-
            Tax code values set at the client level.
                        
          type: string
          nullable: true
          example: ZZEIC
        Description:
          description: Description of  tax code.
          type: string
          nullable: true
          example: Earned Income Credit
        Type:
          description: Enumeration of valid Types of Tax values
          example: FEIC
          $ref: '#/components/schemas/TaxType'
        TaxAuthCode:
          description: Tax authority code
          type: string
          nullable: true
          example: 940
        DepositFrequency:
          description: 'Frequency that the deposit will run '
          example: SW
          $ref: '#/components/schemas/DepositFrequencyType'
        EffectiveStartDate:
          description: Specifies the effective start date of the tax
          type: string
          format: date-time
          nullable: true
          example: '2019-11-01T00:00:00Z'
        SequenceNumber:
          description: Specifies the sequence number of the tax
          type: integer
          format: int32
          nullable: true
          example: 1
        Rate:
          description: |-
            Tax rate 
                        
          type: number
          format: decimal
          nullable: true
          example: 0.1
        ReciprocityType:
          description: |-
            Enumeration of valid multi-state tax reciprocity values. 
                        
          nullable: true
          example: LivesIn
          $ref: '#/components/schemas/ReciprocityType'
        OfferDependentInsurance:
          description: |-
            Specifies whether dependent insurance is offered.
                        
          type: boolean
          nullable: true
          example: true
        WagePlan:
          description: |-
            Wage plan
                        
          type: string
          nullable: true
          example: S
        ItemHold:
          description: |-
            Specifies Item hold status on the tax
            Specifies tax status
          type: string
          nullable: true
          example: 'N'
        LegalEntity:
          description: >-
            URL to access the Legal Entity resource for information about the
            legal entity. 
                        
          nullable: true
          example: /v1/legalentities/501123
          $ref: '#/components/schemas/ResourceReference'
    DepositFrequencyType:
      description: ''
      type: string
      x-enumNames:
        - General
        - Accelerated
        - SemiWeekly
        - BiWeekly
        - Weekly
        - EighthMonthly
        - QuarterMonthly
        - SemiMonthly
        - Monthly20th
        - Monthly
        - Quarterly
        - SemiAnnually
        - Yearly
        - ThreeDayFiler
        - FiveDayFiler
      enum:
        - General
        - Accelerated
        - SemiWeekly
        - BiWeekly
        - Weekly
        - EighthMonthly
        - QuarterMonthly
        - SemiMonthly
        - Monthly20th
        - Monthly
        - Quarterly
        - SemiAnnually
        - Yearly
        - ThreeDayFiler
        - FiveDayFiler
    EmployeePunch:
      type: object
      required:
        - EmployeeId
        - DepartmentId
        - PunchDateTime
        - PunchStatusType
        - ActivityTypeId
        - IsTransfer
      properties:
        EmployeeId:
          description: >-
            Unique Identifier of the Employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          minLength: 1
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        DepartmentId:
          description: >-
            Unique identifier of the department in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          minLength: 1
          example: cb4a1b67-000c-0000-0000-000066000000
        PunchDateTime:
          description: |-
            Punch DateTime of the Employee
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-01T00:00:00Z'
        PunchStatusType:
          description: Enumeration of valid Punch Status Type values.
          example: In
          $ref: '#/components/schemas/PunchStatusType'
        ActivityTypeId:
          description: Unique identifier for the Activity Type.
          type: string
          format: guid
          minLength: 1
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        IsTransfer:
          description: >-
            IsTransfer property serves as an indicator in identifying a transfer
            punch.

            When set to 'true' this property designates a punch as a transfer
            punch.

            To appropriately handle a transfer punch ensure that the
            'PunchStatusType' is set to value 'Transfer' when sending a payload.

            If 'PunchStatusType' is set to a value other then 'Transfer' and
            'IsTransfer' is set to 'true', PunchStatusType value will get
            ignored in most of the cases.

            Transfer punch is essential for tracking and management of employee
            transfers during the working hours.

            Transfer punches find their use in scenarios where an employee
            undergoes a change in department or labor type.

            By adding a transfer punch the application effectively captures
            these transitions

            providing an overview of employee movements between different
            departments or labor types.
          type: boolean
          example: false
        Note:
          description: |-
            Comments to describe the Punch.
            ​Note when provided must be between 1 and 300 characters.
          type: string
          nullable: true
          example: Punch during break
        LaborCodes:
          description: >-
            ​LaborCodes must either be empty or contain an array of valid
            LaborCategoryIds and LaborCodeIds.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCode
            $ref: '#/components/schemas/LaborCode6'
    PunchStatusType:
      description: |-
        Enumeration of Valid Type of Status values.
                    
      type: string
      x-enumNames:
        - Auto
        - In
        - Out
        - Transfer
      enum:
        - Auto
        - In
        - Out
        - Transfer
    LaborCode6:
      type: object
      properties:
        LaborCategoryId:
          description: >-
            Unique identifier of the Job Costing Labor Category of the Labor
            Code. 
          type: string
          format: guid
        LaborCodeId:
          description: |-
            Unique identifier for the Labor Code under the Labor Category.
                        
          type: string
          format: guid
    EmployeeHour:
      type: object
      required:
        - EmployeeId
        - DepartmentId
        - LegalEntityEarningId
        - StartDateTime
        - Total
        - ActivityTypeId
      properties:
        EmployeeId:
          description: >-
            Unique Identifier of the Employee in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          minLength: 1
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        DepartmentId:
          description: >-
            Unique identifier of the department in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          minLength: 1
          example: cb4a1b67-000c-0000-0000-000066000000
        LegalEntityEarningId:
          description: >-
            Unique identifier of the Legal Entity Earning in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          minLength: 1
          example: f3f4eee9-c7a3-ed11-912f-0050569f27b8
        StartDateTime:
          description: |-
            The date and time the hour record begins.
            Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
          type: string
          format: date-time
          minLength: 1
          example: '2019-11-01T00:00:00Z'
        Total:
          description: The total hours amount.
          type: number
          format: decimal
          example: 8
        ActivityTypeId:
          description: Enumeration of valid Activity values.
          type: string
          format: guid
          minLength: 1
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        ApplyAllPolicies:
          description: >-
            Determines the type of Hour being created.

            When set to 'true' Hour Entry is created, if set to 'false' Hour
            Record is created.

            Existing client policies are only applied to Hour Entries.

            Default value will be false.
          type: boolean
          example: false
        Note:
          description: |-
            Comments to describe the Hour.
            ​Note when provided must be between 1 and 300 characters.
          type: string
          nullable: true
          example: Employee Hour missed
        LaborCodes:
          description: >-
            ​LaborCodes must either be empty or contain an array of valid
            LaborCategoryIds and LaborCodeIds.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LaborCode
            $ref: '#/components/schemas/LaborCode6'
    PagedResultOfPunchErrorLog:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PunchErrorLog
            $ref: '#/components/schemas/PunchErrorLog'
    PunchErrorLog:
      allOf:
        - $ref: '#/components/schemas/TimeErrorLog'
        - description: >-
            Punch Error log model represents information about error logs in the
            create punch request api.
          type: object
          properties:
            PunchDetail:
              description: >-
                Punch details EmployeeID and date of punch that failed while
                importing
              type: string
              nullable: true
              example: >-
                EmployeeID : 116f2f66-7dbc-0000-0000-0000603d0400, Punch Date
                Time: 3/13/2024 8:59:00 PM
    TimeErrorLog:
      description: Error log
      type: object
      properties:
        TrackingId:
          description: >-
            Unique identifier of the request. This is the output of creating
            bulk punch/hour/payitem request
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        ErrorDetail:
          description: Error details of failed request
          type: string
          nullable: true
          example: Request Failed.
    PagedResultOfHourErrorLog:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: HourErrorLog
            $ref: '#/components/schemas/HourErrorLog'
    HourErrorLog:
      allOf:
        - $ref: '#/components/schemas/TimeErrorLog'
        - description: >-
            Hour Error log model represents information about error logs in the
            create hour request api.
          type: object
          properties:
            HourDetail:
              description: >-
                Hour details EmployeeID and start date time of hour and total
                that failed while importing
                            
              type: string
              nullable: true
              example: >-
                EmployeeID : 36f45f30-9a35-0000-0000-000001000000, Hour start
                date Time : 11/29/2023 11:00:00 PM,Total:10.00 
    TimeOffRequestsErrorLog:
      description: >-
        Time Off Request Error log model represents information about error logs
        in the create timeoff request api.
      type: object
      properties:
        TrackingId:
          description: >-
            Unique identifier of the request. This is the output of creating
            bulk Timeoff request
          type: string
          format: guid
          example: 36f45f30-9a35-0000-0000-000001000000
        TORDetail:
          description: >-
            TimeOffRequest details LegalEntityId, EmployeeUID and date of
            timeoffrequest that failed while importing
          type: string
          nullable: true
          example: >-
            EmployeeID : 36f45f30-9a35-0000-0000-000001000000, TOR Date :
            11/29/2023 11:00:00 PM
        ErrorDetail:
          description: Error details of failed request
          type: string
          nullable: true
          example: >-
            Validation failed:  Days[0].StartTime: 'Start Time' must not be
            empty. Days[0].EndTime: 'End Time' must not be empty.
    PagedResultOfTimeOffType:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TimeOffType
            $ref: '#/components/schemas/TimeOffType'
    TimeOffType:
      type: object
      properties:
        Id:
          description: Unique identifier used to represent the Time Off Type
          type: string
          format: guid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        Name:
          description: Friendly name used to identify the Time Off Type
          type: string
          nullable: true
          example: Paid Time Off
        Code:
          description: 'Short string used to identify the Time Off Type '
          type: string
          nullable: true
          example: PTO
    PagedResultOfLegalEntityWorkLocation:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityWorkLocation
            $ref: '#/components/schemas/LegalEntityWorkLocation'
    LegalEntityWorkLocation:
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the legal entity's work location in Paycor's
            system. Generated by Paycor.
          type: string
          format: guid
          example: 5245ae3d-e570-0000-0000-000066000000
        Name:
          description: Name of the legal entity's work location.
          type: string
          nullable: true
          example: ACME East is an open concept office.
        Addresses:
          description: A list of legal entity's work location's addresses.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityWorkLocationAddress
            $ref: '#/components/schemas/LegalEntityWorkLocationAddress'
        Phones:
          description: |-
            A list of the legal entity's work location's phone numbers.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: WorkLocationPhone
            $ref: '#/components/schemas/WorkLocationPhone'
        LocationNumber:
          description: Location Number of the work location.
          type: string
          nullable: true
          example: Number
        StoreId:
          description: >-
            Unique identifier of the work location store. StoreId is used for
            clients with WOTC Service only, defaults to Worklocation name if not
            provided.
          type: string
          nullable: true
          example: 18
        IsFmlaEligible:
          description: >-
            Flag which determines if work location is FMLA eligible (Family and
            Medical Leave Act).
          type: boolean
          nullable: true
          example: true
    LegalEntityWorkLocationAddress:
      description: >-
        The Legal Entity Work Location Address model represents Legal Entity
        Work Location Address information.
      type: object
      properties:
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          nullable: true
          example: 4811 Montgomery Road
        StreetLine2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building 6
        Suite:
          description: |-
            Suite information in the address.
                        
          type: string
          nullable: true
          example: Suite 1000
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        Country:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
        County:
          description: |-
            County in the address.
                        
          type: string
          nullable: true
          example: Hamilton
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          nullable: true
          example: 45212-0341
        Type:
          description: |-
            Enumeration of valid legal entity address type values.
                        
          example: Unknown
          $ref: '#/components/schemas/WorkLocationAddressType2'
    WorkLocationAddressType2:
      description: ''
      type: string
      x-enumNames:
        - Unknown
        - Physical
        - Mailing
      enum:
        - Unknown
        - Physical
        - Mailing
    WorkLocationPhone:
      allOf:
        - $ref: '#/components/schemas/Phone'
        - type: object
          properties:
            Type:
              description: Enumeration of valid work location phone type values.
              example: Voice
              $ref: '#/components/schemas/WorkLocationPhoneType'
    WorkLocationPhoneType:
      description: ''
      type: string
      x-enumNames:
        - Unknown
        - Voice
        - Fax
      enum:
        - Unknown
        - Voice
        - Fax
    WorkLocation:
      type: object
      required:
        - Name
        - Addresses
      properties:
        Name:
          description: Name of the work location.
          type: string
          minLength: 1
          example: Temp WL.
        StoreId:
          description: >-
            Unique identifier of the work location store. StoreId is used for
            clients with WOTC Service only, defaults to Worklocation name if not
            provided.
          type: string
          nullable: true
          example: 18
        IsFmlaEligible:
          description: >-
            Flag which determines if work location is FMLA eligible (Family and
            Medical Leave Act).
          type: boolean
          nullable: true
          example: true
        Addresses:
          description: A list of work location's addresses.
          type: array
          xml:
            wrapped: true
          items:
            xml:
              name: WorkLocationAddress
            $ref: '#/components/schemas/WorkLocationAddress'
        PhoneNumbers:
          description: |-
            A list of the work location's phone numbers.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: WorkLocationPhoneNumber
            $ref: '#/components/schemas/WorkLocationPhoneNumber'
    WorkLocationAddress:
      type: object
      required:
        - Type
        - StreetLine1
        - State
        - City
        - Country
        - ZipCode
      properties:
        Type:
          description: |-
            Enumeration of valid address type values.
                        
          example: Physical
          $ref: '#/components/schemas/AddressType'
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          minLength: 1
          example: 5555 Test Road
        StreetLine2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building 1
        State:
          description: |-
            State in the address.
                        
          type: string
          minLength: 1
          example: OH
        City:
          description: |-
            City in the address.
                        
          type: string
          minLength: 1
          example: Cincinnati
        Country:
          description: |-
            Country in the address.
                        
          type: string
          minLength: 1
          example: USA
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          minLength: 1
          example: 55555
    AddressType:
      description: Enumeration of valid Types of Address.
      type: string
      x-enumNames:
        - Physical
        - Mailing
      enum:
        - Physical
        - Mailing
    WorkLocationPhoneNumber:
      type: object
      properties:
        Type:
          description: Enumeration of valid work location phone type values.
          nullable: true
          example: Voice
          $ref: '#/components/schemas/PhoneNumberType'
        PhoneNumber:
          description: 'Local phone number. '
          type: string
          nullable: true
          example: 555-2300
    PhoneNumberType:
      description: Enumeration of valid Types of phone number.
      type: string
      x-enumNames:
        - Voice
        - Fax
      enum:
        - Voice
        - Fax
    WorkLocation2:
      type: object
      required:
        - Id
      properties:
        Id:
          description: >-
            Unique identifier of the work location in Paycor's system. Generated
            by Paycor.
          type: string
          format: guid
          minLength: 1
          example: 164f5405-d32c-4612-8a11-20491516e557
        Addresses:
          description: A list of work location's addresses.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: WorkLocationAddressUpdate
            $ref: '#/components/schemas/WorkLocationAddressUpdate'
        PhoneNumbers:
          description: |-
            A list of the work location's phone numbers.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: WorkLocationPhoneNumber
            $ref: '#/components/schemas/WorkLocationPhoneNumber'
        TimeZone:
          description: |-
            Time zone.
                        
          type: string
          nullable: true
          example: 12
        IsFmlaEligible:
          description: |-
            Is FmlaEligible.
                        
          type: boolean
          nullable: true
          example: false
        IsDefault:
          description: |-
            Is default
                        
          type: boolean
          nullable: true
          example: false
    WorkLocationAddressUpdate:
      type: object
      required:
        - Type
      properties:
        Type:
          description: |-
            Enumeration of valid address type values.
                        
          example: Physical
          $ref: '#/components/schemas/AddressType'
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          nullable: true
          example: 5555 Test Road
        StreetLine2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building 1
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        Country:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          nullable: true
          example: 55555
    PagedResultOfWorkSite:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: WorkSite
            $ref: '#/components/schemas/WorkSite'
    WorkSite:
      type: object
      properties:
        Id:
          description: Work Site identifier
          type: string
          format: guid
          example: b95b8067-09c9-46d2-52d8-08da7531eb4f
        Name:
          description: Work Site name
          type: string
          nullable: true
          example: Paycor Cincinati office
        StreetLine1:
          description: First line of street address information.
          type: string
          nullable: true
          example: 4811 Montgomery Road
        StreetLine2:
          description: Additional line of street address information.
          type: string
          nullable: true
          example: Building 6
        City:
          description: City in the address.
          type: string
          nullable: true
          example: Cincinnati
        State:
          description: State in the address.
          type: string
          nullable: true
          example: OH
        ZipCode:
          description: Zip code in the address.
          type: string
          nullable: true
          example: 45212-0341
        Country:
          description: Country in the address.
          type: string
          nullable: true
          example: USA
        PhoneNumber:
          description: Worksite Phone
          type: string
          nullable: true
          example: 555-2300
    PagedResultOfSmartlinxEmployeeMapping:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: SmartlinxEmployeeMapping
            $ref: '#/components/schemas/SmartlinxEmployeeMapping'
    SmartlinxEmployeeMapping:
      description: >-
        Employee mapping object which represents mappings between Paycor and
        Smartlinx systems
      type: object
      properties:
        PaycorEmployeeId:
          description: Unique identifier of the employee in Paycor system.
          type: string
          format: guid
          nullable: true
          example: eae83607-000c-0000-0000-000066000000
        PaycorEmployeeUid:
          description: Internal unique identifier of the employee in Paycor system.
          type: integer
          format: int64
          nullable: true
          example: 96264703587284
        PaycorLegalEntityId:
          description: Id of the Legal Entity in Paycor system.
          type: integer
          format: int32
          example: 678556
        PaycorEmployeeNumber:
          description: >-
            Customer-assigned friendly unique number of the employee within the
            Tenant in Paycor system.
          type: integer
          format: int32
          nullable: true
          example: 123666
        PaycorTenantId:
          description: Id of the Tenant in Paycor system.
          type: integer
          format: int32
          example: 678556
        SmartlinxCompanyId:
          description: Id of the Company in Smartlinx system.
          type: integer
          format: int32
          example: 2
        SmartlinxClientId:
          description: Id of the Client in Smartlinx system.
          type: string
          nullable: true
          example: 73557
        SmartlinxEmployeePayrollNumber:
          description: Employee number in Smartlinx system.
          type: string
          nullable: true
          example: 1453
    PagedResultOfPerson:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Person
            $ref: '#/components/schemas/Person'
    Person:
      description: >-
        Each Person is associated with one or more Employees within one Tenant.
        An Employee works for a single Legal Entity within the Tenant.  If a
        person works

        for multiple Legal Entities within a Tenant, they will be associated
        with multiple Employee records - but will only have a single Person
        record in the Paycor system.

        Provides links to the Person's associated Employee, Legal Entity and
        Tenant information.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the person in Paycor's system. Generated by
            Paycor.
          type: string
          format: guid
          example: df5566ef-196c-0000-0000-0007d5268Sa2
        Prefix:
          description: Enumeration of valid name prefix values.
          example: Dr
          $ref: '#/components/schemas/Prefix'
        FirstName:
          description: 'First name of the person. '
          type: string
          nullable: true
          example: Edwin
        MiddleName:
          description: Middle name of the person.
          type: string
          nullable: true
          example: Powell
        LastName:
          description: Last name of the person.
          type: string
          nullable: true
          example: Hubble
        Suffix:
          description: Enumeration of valid name suffix values.
          example: Sr
          $ref: '#/components/schemas/Suffix'
        LegalFirstName:
          description: |-
            First name used on the person's W-2 tax form.
                        
          type: string
          nullable: true
          example: Lewis
        LegalLastName:
          description: |-
            Last name used on the person's W-2 tax form.
                        
          type: string
          nullable: true
          example: Carroll
        SocialSecurityNumber:
          description: Social security number of the person.
          type: string
          nullable: true
          example: 555555555
        Email:
          description: |-
            Email Information of the person.
                        
          nullable: true
          $ref: '#/components/schemas/PersonEmail'
        DemographicData:
          description: |-
            Person's demographic data of type DemographicData.
                        
          nullable: true
          $ref: '#/components/schemas/DemographicData'
        BenefitData:
          description: |-
            Person's benefits data of type BenefitData.
                        
          nullable: true
          $ref: '#/components/schemas/BenefitData'
        EmergencyContactData:
          description: >-
            List of type EmergencyContactData containing a Person's emergency
            contacts data.

            This data will only be available for Get Person (returns single
            Person object) APIs and will always be null for Get Persons (returns
            list of Person) APIs.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmergencyContactData
            $ref: '#/components/schemas/EmergencyContactData'
        MilitaryData:
          description: |-
            Person's military data of type MilitaryData.
                        
          nullable: true
          $ref: '#/components/schemas/MilitaryData'
        SocialMediaData:
          description: >-
            List of type SocialMediaData containing the Person's social media
            information. 
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: SocialMediaData
            $ref: '#/components/schemas/SocialMediaData'
        EmployeeAssignments:
          description: >-
            List of type EmployeeAssignment containing the person's employee
            assignments.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: EmployeeAssignment
            $ref: '#/components/schemas/EmployeeAssignment'
        Addresses:
          description: |-
            List of type Address containing the person's addresses.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PersonAddress
            $ref: '#/components/schemas/PersonAddress'
        Phones:
          description: |-
            List of type Phone containing the person's phone numbers.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Phone
            $ref: '#/components/schemas/Phone'
        Tenants:
          description: >-
            URL to access the Tenant resource for information about the person's
            tenant.
                        
          nullable: true
          example: /v1/tenants/10138
          $ref: '#/components/schemas/ResourceReference'
    PersonEmail:
      allOf:
        - $ref: '#/components/schemas/Email'
        - type: object
          properties:
            Type:
              $ref: '#/components/schemas/PersonEmailType'
    PersonEmailType:
      description: ''
      type: string
      x-enumNames:
        - Home
      enum:
        - Home
    DemographicData:
      description: >-
        The Demographic Data model represents a Person's confidential
        Demographic Information.
                    
      type: object
      properties:
        BirthDate:
          description: |-
            Date of birth of the person following the ISO 8601 standard.
            Format: YYYY-MM-DDTHH:MM:SSZ (ISO-8601 standard)
          type: string
          format: date-time
          nullable: true
          example: '1944-04-01T00:00:00Z'
        Gender:
          description: |-
            Enumeration of valid gender values.
                        
          example: Female
          $ref: '#/components/schemas/Gender'
        Ethnicity:
          description: |-
            Enumeration of valid ethnicity type values.
                        
          example: DeclinedtoIdentify
          $ref: '#/components/schemas/EthnicityType'
        MaritalStatus:
          description: |-
            Enumeration of valid marital status values.
                        
          example: Married
          $ref: '#/components/schemas/MaritalStatus'
        MaidenName:
          description: |-
            Maiden name of the person.
                        
          type: string
          nullable: true
          example: Monroe
    BenefitData:
      description: The Benefit Data model represents a Person's Benefits Data.
      type: object
      properties:
        IsTobaccoUser:
          description: Whether person is a tobacco user.
          type: boolean
          nullable: true
          example: false
        Disability:
          description: Enumeration of valid disability status values.
          example: true
          $ref: '#/components/schemas/DisabilityStatus'
    EmergencyContactData:
      description: >-
        The Emergency Contact Data model represents a Person's Emergency
        Contacts Data.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the emergency contact in Paycor's system.
            Generated by Paycor.
                        
          type: string
          format: guid
          example: af5566ef-196c-0000-0000-0007d5268Sa2
        FirstName:
          description: |-
            First name of the emergency contact.
                        
          type: string
          nullable: true
          example: Erwin
        MiddleName:
          description: Middle name of the emergency contact.
          type: string
          nullable: true
          example: Rudolf
        LastName:
          description: |-
            Last name of the emergency contact.
                        
          type: string
          nullable: true
          example: Shrodinger
        Phones:
          description: >-
            List of type Phone containing phone numbers for the emergency
            contact.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: Phone
            $ref: '#/components/schemas/Phone'
        Order:
          description: |-
            Emergency contacts priority.
                        
          type: integer
          format: int32
          example: 1
        Relationship:
          description: |-
            Relationship to the emergency contact.
                        
          type: string
          nullable: true
          example: Father
    MilitaryData:
      description: |-
        The Military Data model represents a Person's military information.
                    
      type: object
      properties:
        Veteran:
          description: |-
            Enumeration of valid veteran status values.
                        
          example: true
          $ref: '#/components/schemas/VeteranStatus'
        DischargeDate:
          description: >-
            Discharge date of the person from the military per US protected
            veteran definition. 

            Available only if person's veteran status is 'true'.
                         Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard) 
                        
          type: string
          format: date-time
          nullable: true
          example: '1999-11-01T00:00:00Z'
        IsArmedForcesServiceMedalVeteran:
          description: >-
            Whether person qualifies as a medal recipient per US protected
            veteran definitions.

            Available only if person's veteran status is 'true'.
                        
          type: boolean
          nullable: true
          example: false
        IsDisabledVeteran:
          description: >-
            Whether person qualifies as a disabled veteran per US protected
            veteran definitions.

            Available only if person's veteran status is 'true'.
                        
          type: boolean
          nullable: true
          example: false
        IsOtherProtectedVeteran:
          description: >-
            Whether person qualifies as an other protected veteran per US
            protected veteran definitions.

            Available only if person's veteran status is 'true'.
                        
          type: boolean
          nullable: true
          example: false
        IsRecentlySeparatedVeteran:
          description: >-
            Whether person qualifies as a recently separated veteran per US
            protected veteran definitions.

            Available only if person's veteran status is 'true'.
                        
          type: boolean
          nullable: true
          example: true
        IsVietnamEra:
          description: >-
            Whether person qualifies as a Vietnam era veteran per US protected
            veteran definitions.

            Available only if person's veteran status is 'true'.
                        
          type: boolean
          nullable: true
          example: false
        IsSpecialDisabled:
          description: >-
            A special disabled veteran is an individual who is legally approved
            for financial compensation
             in accordance with laws provided by the Veterans Administration for disabilities that are rated at least 30 percent. .
             
          type: boolean
          nullable: true
          example: false
    SocialMediaData:
      description: >-
        The Social Media Data model represents information about a Person's
        Social Media accounts.

        Provides links to Person's Social Media accounts.
                    
      type: object
      properties:
        Type:
          description: Enumeration of valid social media type values.
          example: Twitter
          $ref: '#/components/schemas/SocialMediaType'
        Url:
          description: |-
            URL to access the person's social media account.
                        
          type: string
          nullable: true
          example: https://www.twitter.com/exanple_account
    SocialMediaType:
      description: Enumeration of valid Social Media Type Values.
      type: string
      x-enumNames:
        - LinkedIn
        - Twitter
      enum:
        - LinkedIn
        - Twitter
    EmployeeAssignment:
      description: >-
        The Employee Assignment model represents information regarding the legal
        entity or specific FEIN the employee is assigned too.

        Provides link to associated Employee information.
                    
      type: object
      properties:
        Employees:
          description: >-
            URL to access the Employee resource for information about the
            employees.
                        
          nullable: true
          example: /v1/employees/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    PersonAddress:
      description: The Person Address model represents the Person's Address information.
      type: object
      properties:
        StreetLine1:
          description: |-
            First line of street address information.
                        
          type: string
          nullable: true
          example: 4811 Montgomery Road
        StreetLine2:
          description: |-
            Additional line of street address information.
                        
          type: string
          nullable: true
          example: Building A
        Suite:
          description: |-
            Suite information in the address.
                        
          type: string
          nullable: true
          example: Suite 100
        City:
          description: |-
            City in the address.
                        
          type: string
          nullable: true
          example: Cincinnati
        State:
          description: |-
            State in the address.
                        
          type: string
          nullable: true
          example: OH
        Country:
          description: |-
            Country in the address.
                        
          type: string
          nullable: true
          example: USA
        County:
          description: |-
            County in the address.
                        
          type: string
          nullable: true
          example: Hamilton
        ZipCode:
          description: |-
            Zip code in the address.
                        
          type: string
          nullable: true
          example: 45212-0930
        Type:
          description: |-
            Enumeration of valid address type values.
                        
          example: Home
          $ref: '#/components/schemas/AddressType2'
    AddressType2:
      description: |-
        Enumeration of valid Type of Address values.
                    
      type: string
      x-enumNames:
        - Unknown
        - Primary
        - Home
        - Check
      enum:
        - Unknown
        - Primary
        - Home
        - Check
    IncludesList:
      description: |2-
            All - Include all data


            Demographic - Include demographic data (e.g. BirthDate)


            Benefit - Include benefit data (e.g. Status, IsTobaccoUser)


            Military - Include military data (e.g. IsRecentlySeparatedVeteran)


            SocialMedia - Include social media data (e.g. TwitterUrl)


            Addresses - Include addresses (e.g. StreetLine, ZipCode)


            EmployeeAssignments - Include employee assignments (e.g. EmployeeId)


            SocialSecurityNumber - Include social security number (e.g. SocialSecurityNumber)


            Phone - Include phone data (e.g. Phone)


            Email - Include home email address (e.g. EmailAddress)
                
      type: string
      x-enumNames:
        - All
        - Demographic
        - Benefit
        - Military
        - SocialMedia
        - Addresses
        - EmployeeAssignments
        - SocialSecurityNumber
        - Phones
        - Email
      enum:
        - All
        - Demographic
        - Benefit
        - Military
        - SocialMedia
        - Addresses
        - EmployeeAssignments
        - SocialSecurityNumber
        - Phones
        - Email
    PagedResultOfPersonList:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: PersonList
            $ref: '#/components/schemas/PersonList'
    PersonList:
      description: >-
        The Person List model represents general data returned for multiple
        Persons.

        Provides link to additional Person information.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the person list record in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: b6h1223a-196c-0000-0000-0007d5268Sa2
        Prefix:
          description: Enumeration of valid name prefix values.
          example: Dr
          $ref: '#/components/schemas/Prefix'
        FirstName:
          description: 'First name of the person. '
          type: string
          nullable: true
          example: Edwin
        MiddleName:
          description: Middle name of the person.
          type: string
          nullable: true
          example: Powell
        LastName:
          description: Last name of the person.
          type: string
          nullable: true
          example: Hubble
        Suffix:
          description: Enumeration of valid name suffix values.
          example: Sr
          $ref: '#/components/schemas/Suffix'
        Person:
          description: URL to access the Person resource for information about the person.
          nullable: true
          example: /v1/persons/df5566ef-196c-0000-0000-0007d5268Sa2
          $ref: '#/components/schemas/ResourceReference'
    Includes20:
      description: |2-
            All - Include all data


            Demographic - Include demographic data (e.g. BirthDate)


            Benefit - Include benefit data (e.g. Status, IsTobaccoUser)


            Military - Include military data (e.g. IsRecentlySeparatedVeteran)


            SocialMedia - Include social media data (e.g. TwitterUrl)


            Addresses - Include addresses (e.g. StreetLine, ZipCode)


            EmployeeAssignments - Include employee assignments (e.g. EmployeeId)


            EmergencyContact - Include emergency contact  data (e.g. FirstName)


            SocialSecurityNumber - Include social security number (e.g. SocialSecurityNumber)


            Phone - Include phone data (e.g. Phone)


            Email - Include home email address (e.g. EmailAddress)
                
      type: string
      x-enumNames:
        - All
        - Demographic
        - Benefit
        - Military
        - SocialMedia
        - Addresses
        - EmployeeAssignments
        - EmergencyContact
        - SocialSecurityNumber
        - Phones
        - Email
      enum:
        - All
        - Demographic
        - Benefit
        - Military
        - SocialMedia
        - Addresses
        - EmployeeAssignments
        - EmergencyContact
        - SocialSecurityNumber
        - Phones
        - Email
    Includes21:
      description: |2-
            All - Include all data


            Demographic - Include demographic data (e.g. BirthDate)


            Benefit - Include benefit data (e.g. Status, IsTobaccoUser)


            Military - Include military data (e.g. IsRecentlySeparatedVeteran)


            SocialMedia - Include social media data (e.g. TwitterUrl)


            Addresses - Include addresses (e.g. StreetLine, ZipCode)


            EmployeeAssignments - Include employee assignments (e.g. EmployeeId)


            EmergencyContact - Include emergency contact  data (e.g. FirstName)


            SocialSecurityNumber - Include social security number (e.g. SocialSecurityNumber)


            Phone - Include phone data (e.g. Phone)


            Email - Include home email address (e.g. EmailAddress)
                
      type: string
      x-enumNames:
        - All
        - Demographic
        - Benefit
        - Military
        - SocialMedia
        - Addresses
        - EmployeeAssignments
        - EmergencyContact
        - SocialSecurityNumber
        - Phones
        - Email
      enum:
        - All
        - Demographic
        - Benefit
        - Military
        - SocialMedia
        - Addresses
        - EmployeeAssignments
        - EmergencyContact
        - SocialSecurityNumber
        - Phones
        - Email
    Tenant:
      description: >-
        The Tenant model represents information about Tenant (company) level
        organization information.

        Provides links to the associated Legal Entity information.
                    
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the tenant in Paycor's system. Generated by
            Paycor.
          type: integer
          format: int32
          example: 10138
        Name:
          description: Name of the tenant.
          type: string
          nullable: true
          example: ACME Inc.
        LegalEntities:
          description: >-
            URL to access the Legal Entity resource for information about the
            tenant's legal entities.
          type: array
          nullable: true
          example: /v1/legalentities/501123
          xml:
            wrapped: true
          items:
            xml:
              name: ResourceReference
            $ref: '#/components/schemas/ResourceReference'
    PagedResultOfTenantWorkLocation:
      description: >-
        The Paged Result model enables pagination of results if maximum of 100
        records per response is exceeded. Additional

        results can be requested by providing calling the AdditionalResultsUrl
        endpoint containing the continuation token, or

        by building your own URL using the provided continuation token.
      type: object
      properties:
        HasMoreResults:
          description: Whether additional API result records exist on the Paycor system.
          type: boolean
          example: true
        ContinuationToken:
          description: >-
            Paycor generated token string which may be provided in a subsequent
            request to  release additional records past the maximum. 

            Used when partner is building their own URL.
          type: string
          format: guid
          nullable: true
          example: 3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        AdditionalResultsUrl:
          description: >-
            Provides URL to call with the continuation token included for
            additional results. 
          type: string
          nullable: true
          example: >-
            /v1/myresources/xyz?continuationTokenId=3ac2fca9-09f2-49fb-86d7-b1b84ed6ca74
        Records:
          description: 'List of the API response records. '
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: TenantWorkLocation
            $ref: '#/components/schemas/TenantWorkLocation'
    TenantWorkLocation:
      description: >-
        The Tenant Work Location model represents information about Work
        Locations assigned by the Tenant.

        Provides link to the associated Tenant's information.
      type: object
      properties:
        Id:
          description: >-
            Unique identifier of the tenant's work location in Paycor's system.
            Generated by Paycor.
          type: string
          format: guid
          example: 5245ae3d-e570-0000-0000-000066000000
        Name:
          description: Name of the tenant's work location.
          type: string
          nullable: true
          example: ACME East is an open concept office.
        Addresses:
          description: >-
            List of type of (to change)  LegalEntityAddress containing the
            tenant's work location's addresses.
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: LegalEntityWorkLocationAddress
            $ref: '#/components/schemas/LegalEntityWorkLocationAddress'
        Phones:
          description: >-
            List of type of Phone containing the tenant's work location's phone
            numbers.
                        
          type: array
          nullable: true
          xml:
            wrapped: true
          items:
            xml:
              name: WorkLocationPhone
            $ref: '#/components/schemas/WorkLocationPhone'
        Tenant:
          description: |-
            URL to access the Tenant resource for information about the tenant.
                        
          nullable: true
          example: /v1/tenants/501123
          $ref: '#/components/schemas/ResourceReference'
    EmployeeCustomFieldsUpdateByEmployeeIdRequest:
      type: array
      xml:
        name: ArrayOfEmployeeCustomField
        wrapped: true
      items:
        xml:
          name: EmployeeCustomField
        $ref: '#/components/schemas/EmployeeCustomField2'
    LegalEntityTimeDataCreatePunchesRequest:
      type: array
      xml:
        name: ArrayOfEmployeePunch
        wrapped: true
      items:
        xml:
          name: EmployeePunch
        $ref: '#/components/schemas/EmployeePunch'
    LegalEntityTimeDataCreateHoursForEmployeeRequest:
      type: array
      xml:
        name: ArrayOfEmployeeHour
        wrapped: true
      items:
        xml:
          name: EmployeeHour
        $ref: '#/components/schemas/EmployeeHour'
    EmployeeDeductionsAddDeductionToEmployeeResponse:
      type: array
      xml:
        name: ArrayOfCreateOrUpdateResponse
        wrapped: true
      items:
        xml:
          name: CreateOrUpdateResponse
        $ref: '#/components/schemas/CreateOrUpdateResponse'
    EmployeeDocumentsDownloadPayStubResponse:
      type: string
      format: binary
    EmployeePayrollHoursAddHoursAndEarningsToPaygridResponse:
      type: object
      properties: {}
      example: {}
    EmployeePayrollHoursImportToEmployeeResponse:
      type: object
      properties: {}
      example: {}
    EmployeeLegacyPerformTimeSchedulesGetByEmployeeIdResponse:
      type: array
      xml:
        name: ArrayOfEmployeeSchedule
        wrapped: true
      items:
        xml:
          name: EmployeeSchedule
        $ref: '#/components/schemas/EmployeeSchedule'
    EmployeeTaxesAddByEmployeeIdResponse:
      type: array
      xml:
        name: ArrayOfCreateOrUpdateResponse
        wrapped: true
      items:
        xml:
          name: CreateOrUpdateResponse
        $ref: '#/components/schemas/CreateOrUpdateResponse'
    EmployeeTaxesUpdateByEmployeeIdResponse:
      type: array
      xml:
        name: ArrayOfCreateOrUpdateResponse
        wrapped: true
      items:
        xml:
          name: CreateOrUpdateResponse
        $ref: '#/components/schemas/CreateOrUpdateResponse'
    LegalEntityStatusReasonGetListResponse:
      type: array
      xml:
        name: ArrayOfStatusReason
        wrapped: true
      items:
        xml:
          name: StatusReason
        $ref: '#/components/schemas/StatusReason'
    TimeOffRequestsGetErrorLogsByLegalEntityAndTrackingResponse:
      type: array
      xml:
        name: ArrayOfTimeOffRequestsErrorLog
        wrapped: true
      items:
        xml:
          name: TimeOffRequestsErrorLog
        $ref: '#/components/schemas/TimeOffRequestsErrorLog'
  securitySchemes:
    Access-Token:
      description: >-
        You will need to Activate your Application and retrieve an Access Token
        (a JWT Bearer Token) before calling our APIs. Please login and refer to
        the Guides for Activation information. When using the 'Try API' feature
        online, type into the textbox: Bearer {your Access Token}.
      type: apiKey
      name: Authorization
      in: header
    Apim-Subscription-Key:
      description: >-
        Provide the APIm subscription key that you wish to use. Please login and
        consult the Guides for more information on retrieving this.
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
security:
  - Access-Token: []
  - Apim-Subscription-Key: []
x-generator: NSwag v13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))
