openapi: 3.0.1
info:
  title: Layer2 API Specification
  description: |
    Welcome to the Layer2 Financial Developer Guide!
  version: 1.0.5
servers:
  - description: Early Adopter / Beta Instance
    url: https://alpha.layer2financial.dev/api
  - description: Sandbox - Stable API Instance
    url: https://sandbox.layer2financial.com/api
  - description: Production - Stable API Instance
    url: https://platform.layer2financial.com/api
tags:
  - description: Customer application (onboarding) management
    name: Applications
  - description: >-
      Customer management and servicing functions to allow clients to onboard,
      manage and maintain customers
    name: Customers
  - description: Deposit accounts creation and management functions
    name: Accounts/Deposits
  - description: Payment accounts creation and management functions
    name: Accounts/Payments
  - description: Counterparty creation and management functions, including remote linking
    name: Counterparty
  - description: >-
      Exchanges are used to convert funds from one currency to another. This is
      achieved by moving money between 2 platform accounts that are denominated
      in different currencies. We have eliminated the complexity of traditional
      currency trading.
    name: Exchanges
  - description: Deposits are used to move external funds into platform managed accounts
    name: Deposits
  - description: >-
      Transfer are used to move funds between two platform managed accounts that
      are denominated in the same currency. Where possible, these are always
      performed *offchain*. 
    name: Transfers
  - description: Move funds from a platform managed account to an external counter party
    name: Withdrawals
  - description: Manage your callback (webhook) subscriptions
    name: Subscriptions
  - description: Document uploading and management functions
    name: Documents
  - description: Settlement services for funds confirmation and reconciliation
    name: Settlements
paths:
  /v1/withdrawals:
    post:
      tags:
        - Withdrawals
      summary: Create Withdrawal
      operationId: Withdrawals_requestNewWithdrawal
      security:
        - OAuth2Flow:
            - withdrawals:write
      description: >-
        Request a new withdrawal. On successful request, the withdrawal must be
        accepted before it is queued for execution. Withdrawals accepted before 
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdrawal'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithdrawalBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/withdrawals/{id}/accept:
    post:
      tags:
        - Withdrawals
      summary: Accept Withdrawal
      operationId: Withdrawals_acceptanceOperation
      security:
        - OAuth2Flow:
            - withdrawals:write
      description: >-
        Accept a withdrawal. This will execute the withdrawal and may not be
        reversible
      parameters:
        - description: Withdrawal ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
        - description: >-
            Client signature to validate the provence of the API request. See
            [signing](https://docs.layer2financial.com/guides/requestsigning/)
            section for more details.
          name: x-signature
          in: header
          schema:
            type: string
        - description: >-
            Current timestamp, represented AS unix epoch seconds. Mandatory when
            x-signature is provided.
          name: x-timestamp
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithdrawalBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/transfers:
    post:
      tags:
        - Transfers
      summary: Create Transfer
      operationId: Transfers_requestNewTransfer
      security:
        - OAuth2Flow:
            - transfers:write
      description: Request a new transfer. The transfer must be accepted prior to executing
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTransfer'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransfer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/transfers/{id}/accept:
    post:
      tags:
        - Transfers
      summary: Accept Transfer
      operationId: Transfers_acceptTransfer
      security:
        - OAuth2Flow:
            - transfers:write
      description: >-
        Accept a requested transfer. This will execute the transfer and may not
        be reversible depending on the owner of the destination account
      parameters:
        - description: Transfer ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
        - description: >-
            Client signature to validate the provence of the API request. See
            [signing](https://docs.layer2financial.com/guides/requestsigning/)
            section for more details.
          name: x-signature
          in: header
          schema:
            type: string
        - description: >-
            Current timestamp, represented AS unix epoch seconds. Mandatory when
            x-signature is provided.
          name: x-timestamp
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransferBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/subscriptions:
    get:
      tags:
        - Subscriptions
      summary: Get Subscriptions
      operationId: Subscriptions_listAll
      security:
        - OAuth2Flow:
            - subscriptions:read
      description: Return all subscriptions
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSubscriptions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Subscriptions
      summary: Create Subscription
      operationId: Subscriptions_createEventCallback
      security:
        - OAuth2Flow:
            - subscriptions:write
      description: Creates a new event call back subscription
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/exchanges/{id}/accept:
    post:
      tags:
        - Exchanges
      summary: Accept Exchange
      operationId: Exchanges_acceptQuote
      security:
        - OAuth2Flow:
            - exchanges:write
      description: >-
        Accept an exchange quote. This will execute the exchange and is not
        reversible
      parameters:
        - description: Exchange ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
        - description: >-
            Client signature to validate the provence of the API request. See
            [signing](https://docs.layer2financial.com/guides/requestsigning/)
            section for more details.
          name: x-signature
          in: header
          schema:
            type: string
        - description: >-
            Current timestamp, represented AS unix epoch seconds. Mandatory when
            x-signature is provided.
          name: x-timestamp
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestExchangeAccept'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseExchange'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/exchanges/quote:
    post:
      tags:
        - Exchanges
      summary: Create Exchange (Quote)
      operationId: Exchanges_requestQuote
      security:
        - OAuth2Flow:
            - exchanges:write
      description: >-
        Requesting an exchange is non binding, you can request as many exchanges
        as needed. Typically within your user experience tier, you are expected
        to poll this endpoint periodically when showing users quotes (e.g. every
        3 seconds). When you are ready to accept a quote, see the [accept
        exchange](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/)
        endpoint. 


        Note: Not all custodians support all order types. Where the order type
        is not possible (Quote/Market/Fix Destination/ Fix Source) an error will
        be returned. 
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestExchange'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseExchange'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/exchanges/market:
    post:
      tags:
        - Exchanges
      summary: Create Exchange (Market)
      operationId: Exchanges_createMarketExchange
      security:
        - OAuth2Flow:
            - exchanges:write
      description: >-
        When requesting a market exchange, the quote received is indicative
        ONLY. This represents an approximate  rate from our liquidity providers.
        On accepting a market exchange the trade is performed at the current
        market rate which will be different to the quote presented to you.


        Note: Not all custodians support all order types. Where the order type
        is not possible (Quote/Market/Fix Destination/ Fix Source) an error will
        be returned.
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestExchange'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseExchange'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/documents/{id}:
    post:
      tags:
        - Documents
      summary: Upload Document
      operationId: Documents_uploadDocument
      security:
        - OAuth2Flow:
            - applications:write
            - customers:write
      description: >-
        Uploads a document to the system. Subsequent uploads to the same id will
        overwrite previous documents.ß
      parameters:
        - description: Document ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentsUploadDocumentRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDocumentBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/deposits:
    post:
      tags:
        - Deposits
      summary: Create Deposit
      operationId: Deposits_createRequest
      security:
        - OAuth2Flow:
            - deposits:write
      description: >-
        Create a deposit request for a platform account in order to send funds
        into the account.
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositsCreateRequestResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/deposits/{id}/accept:
    post:
      tags:
        - Deposits
      summary: Accept Deposit
      operationId: Deposits_acceptance
      security:
        - OAuth2Flow:
            - deposits:write
      description: >-
        Accept a Deposit. This is only needed for `PULL` deposits, `PUSH`
        deposits do not need to be accepted. On acceptance, this will initiate
        the funds pull from the source counterparty. It is not reversible
      parameters:
        - description: Deposit ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
        - description: >-
            Client signature to validate the provence of the API request. See
            [signing](https://docs.layer2financial.com/guides/requestsigning/)
            section for more details.
          name: x-signature
          in: header
          schema:
            type: string
        - description: >-
            Current timestamp, represented AS unix epoch seconds. Mandatory when
            x-signature is provided.
          name: x-timestamp
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDepositBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/customers:
    get:
      tags:
        - Customers
      summary: Retrieve Customers
      operationId: Customers_getMatchingQuery
      security:
        - OAuth2Flow:
            - customers:read
      description: 'Retrieve customers matching the provided query parameters '
      parameters:
        - description: Page of records to get (default 0 = first page)
          name: page
          in: query
          schema:
            type: integer
            format: int32
        - description: Records to return per page (default = 20)
          name: page_size
          in: query
          schema:
            type: integer
            format: int32
        - description: Type of Customer
          name: type
          in: query
          schema:
            type: string
            enum:
              - INDIVIDUAL
              - CORPORATION
        - description: >+
            * `ACTIVE` - Customer is active and available for use in line with
            client configuration. 

            * `CLOSED` -  Customer is permanently closed, no further actions can
            be performed on it or associated accounts. 

            * `PENDING` -  Customer is under additional review. No actions can
            be performed on the account.   

            * `FROZEN` - Customer and associated accounts have been temporarily
            locked for all actions. 

            * `EDD` -  Customer requires enhanced due diligence to be performed.
            The customer and accounts will operate as if frozen. 

            * `DORMANT` - No activity has been seen in the last 12 months.
            Customer and accounts are available for use.  

          name: status
          in: query
          schema:
            type: string
            enum:
              - ACTIVE
              - CLOSED
              - FROZEN
              - PENDING
              - EDD
              - DORMANT
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomers'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Customers
      summary: Create Customer
      operationId: Customers_createNew
      security:
        - OAuth2Flow:
            - customers:write
      description: >-
        Create a new customer (individual or corporation). This operation will
        not perform KYC/KYB on your behalf, and is only available to regulated
        clients. For non regulated clients you must onboard via the application
        process
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCustomer'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomerBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/customers/{id}/payor:
    post:
      tags:
        - Customers
      summary: Create Payor
      operationId: Customers_createPayor
      security:
        - OAuth2Flow:
            - customers:write
      description: >-
        Onboard a payor and assign them to a customer. All details are optional
        barring the ID and First/Last name
      parameters:
        - description: Customer ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPayorOnboarding'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePayorBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/customers/{id}/individuals:
    post:
      tags:
        - Customers
      summary: Create Individual
      operationId: Customers_addNewIndividual
      security:
        - OAuth2Flow:
            - customers:write
      description: Add a new individual/officer on a corporate customer
      parameters:
        - description: >-
            Corporate Customer ID. This operation can only be performed on
            corporate customers.
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestIndividual'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseIndividualBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/counterparties:
    get:
      tags:
        - Counterparty
      summary: Retrieve Counterparties
      operationId: Counterparty_getList
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves a list of counterparties given the filter parameters provided
      parameters:
        - description: Page of records to get (default 0 = first page)
          name: page
          in: query
          schema:
            type: integer
            format: int32
        - description: Records to return per page (default = 20)
          name: page_size
          in: query
          schema:
            type: integer
            format: int32
        - description: Customer ID to whom the counterparty belongs
          name: customer_id
          in: query
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCounterparties'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Counterparty
      summary: Create Counterparty
      operationId: Counterparty_createNewCounterparty
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Create a new counterparty for the purpose of pulling funds into the
        platform or pushing out
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterParty'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCounterpartyBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/counterparties/{id}/link/details:
    post:
      tags:
        - Counterparty
      summary: Retrieve Linking Details
      operationId: Counterparty_getLinkingDetails
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Retrieve the linking instructions for embedding in a UI to launch
        account linking from providers such as MX or Plaid.
      parameters:
        - description: Counterparty ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterPartyLinkingDetails'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterPartyLinkingDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/counterparties/{id}/link/connect:
    post:
      tags:
        - Counterparty
      summary: Connect Linked Account
      operationId: Counterparty_establishConnection
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Established the connection between a counterparty and external linked
        account. 
      parameters:
        - description: Counterparty ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterPartyLinkingConnect'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCounterpartyBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/counterparties/{id}/link/accounts:
    post:
      tags:
        - Counterparty
      summary: Retrieve Linkable Accounts
      operationId: Counterparty_getLinkableAccounts
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Retrieve the accounts that are available for linking for a `LINKED`
        counterparty via a provider such as MX or Plaid. 
      parameters:
        - description: Counterparty ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterPartyLinkingAccounts'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterPartyLinkingAccounts'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications:
    post:
      tags:
        - Applications
      summary: Create Application
      operationId: Applications_startNewApplication
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Start a new application to onboard a person or corporation. Once the
        application is created, proceed to add individuals and update as needed,
        and then submit once the status allows for it. 
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestApplication'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseApplicationBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications/{id}/submit:
    post:
      tags:
        - Applications
      summary: Submit Application
      operationId: Applications_submitForProcessing
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Submit the application for processing, can only be performed once the
        application status is  "READY_FOR_SUBMISSION".
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseApplicationBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications/{id}/individual:
    post:
      tags:
        - Applications
      summary: Add Individual
      operationId: Applications_addIndividual
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Adds an individual to the corporate application. Not applicable for
        individual applications
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestIndividual'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseIndividualBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications/{id}/accesscode:
    post:
      tags:
        - Applications
      summary: Request Access Code
      operationId: Applications_generateAccessCode
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Generate an access code for use with the Layer2 Customer Onboarding
        SDK. 
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseApplicationAccessCode'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/payments:
    get:
      tags:
        - Accounts/Payments
      summary: Retrieve Accounts
      operationId: AccountsPayments_getList
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves a list of accounts given the filter parameters provided
      parameters:
        - description: Page of records to get (default 0 = first page)
          name: page
          in: query
          schema:
            type: integer
            format: int32
        - description: Records to return per page (default = 20)
          name: page_size
          in: query
          schema:
            type: integer
            format: int32
        - description: Account holder customer ID
          name: customer_id
          in: query
          schema:
            type: string
        - description: >+
            * `OPEN` - Account is open and available for use in line with its
            product configuration

            * `CLOSED` - Account is permanently closed, no further actions can
            be performed on the account.  

            * `PENDING` - Account is under additional review prior to moving to
            the OPEN or CLOSED state. No actions can be performed on the
            account.  

            * `FROZEN` - Account has been temporarily locked for all actions
            (deposits, transfers, exchanges and withdrawals).  

            * `EDD` -  Account (and/or customer) requires enhanced due diligence
            to be performed. The accounts will operate as if frozen. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            account is available for use.  

          name: status
          in: query
          schema:
            type: string
            enum:
              - OPEN
              - CLOSED
              - FROZEN
              - PENDING
              - EDD
              - DORMANT
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccounts'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Accounts/Payments
      summary: Open Payment Account
      operationId: AccountsPayments_createPaymentAccount
      security:
        - OAuth2Flow:
            - accounts:write
      description: 'Opens a new payment account for a customer. '
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAccountOpen'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccountBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/payments/{id}/address:
    post:
      tags:
        - Accounts/Payments
      summary: Request Payment Address
      operationId: AccountsPayments_requestPaymentAddress
      security:
        - OAuth2Flow:
            - accounts:write
      description: >
        Returns an address that can be used to send deposits to this account. If
        payor details are provided in the request, the address is also
        associated to the payor and payment reference ID. 


        The
        [transactions](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/)
        listing provides reconciliation details per deposit, including payor
        information if provided. When auto exchange is enabled, the
        [settlements](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/)
        listing provides a fully breakdown of deposit to exchange and
        settlement. 


        The product configuration of the account will determine if the address
        being returned is fixed or temporary (rotating). This can be modified
        via the [Management Interface](https://management.layer2financial.com).
        You can read more about the address leasing model under [Leasing
        Concepts]().  

        > If no payor details are provided whn requesting an address, the
        behaviour defaults to that of a [deposit
        account](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 
      parameters:
        - description: Payment Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPaymentAddress'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAddressLease'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/deposits:
    get:
      tags:
        - Accounts/Deposits
      summary: Retrieve Accounts
      operationId: AccountsDeposits_getList
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves a list of accounts given the filter parameters provided
      parameters:
        - description: Page of records to get (default 0 = first page)
          name: page
          in: query
          schema:
            type: integer
            format: int32
        - description: Records to return per page (default = 20)
          name: page_size
          in: query
          schema:
            type: integer
            format: int32
        - description: Account holder customer ID
          name: customer_id
          in: query
          schema:
            type: string
        - description: >-
            * `CLIENT` - Accounts at the Client level for managing client
            treasury operations

            * `DEPOSIT` - Accounts at the Customer level account for managing
            customer funds on platform

            * `VIRTUAL` - Accounts at the Customer level account for tracking
            externally managed customer funds 


            [see account
            concepts](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/)
            for more details.
          name: product_type
          in: query
          schema:
            type: string
            enum:
              - CLIENT
              - DEPOSIT
              - VIRTUAL
        - description: >+
            * `OPEN` - Account is open and available for use in line with its
            product configuration

            * `CLOSED` - Account is permanently closed, no further actions can
            be performed on the account.  

            * `PENDING` - Account is under additional review prior to moving to
            the OPEN or CLOSED state. No actions can be performed on the
            account.  

            * `FROZEN` - Account has been temporarily locked for all actions
            (deposits, transfers, exchanges and withdrawals).  

            * `EDD` -  Account (and/or customer) requires enhanced due diligence
            to be performed. The accounts will operate as if frozen. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            account is available for use.  

          name: status
          in: query
          schema:
            type: string
            enum:
              - OPEN
              - CLOSED
              - FROZEN
              - PENDING
              - EDD
              - DORMANT
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccounts'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Accounts/Deposits
      summary: Open Account
      operationId: AccountsDeposits_openNewAccount
      security:
        - OAuth2Flow:
            - accounts:write
      description: Opens a new account for a customer of a given product type
      parameters:
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAccountOpen'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccountBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/deposits/{id}/address:
    post:
      tags:
        - Accounts/Deposits
      summary: Request Address
      operationId: AccountsDeposits_requestAddress
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Generates and retrieves a usable deposit address for the Asset Type that
        is assigned to this account
      parameters:
        - description: Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAddressLease'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/customers/{id}:
    get:
      tags:
        - Customers
      summary: Retrieve Customer
      operationId: Customers_getDetails
      security:
        - OAuth2Flow:
            - customers:read
      description: Retrieve customer details
      parameters:
        - description: Customer ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersGetDetailsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Customers
      summary: 'Update Customer '
      operationId: Customers_updateDetails
      security:
        - OAuth2Flow:
            - customers:write
      description: >-
        Update customer details. For individuals (officers) linked to a
        corporate customer, modify the individual resource directly using
        [Update
        Individual](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/).
      parameters:
        - description: Customer ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCustomerPatch'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCustomerBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/customers/{id}/individuals/{individual_id}:
    get:
      tags:
        - Customers
      summary: Retrieve Individual
      operationId: Customers_getIndividualDetails
      security:
        - OAuth2Flow:
            - customers:read
      description: >-
        Retrieve individual details. This operation is only for corporate
        customers that have individual officers with access to the account
      parameters:
        - description: >-
            Corporate Customer ID. This operation can only be performed on
            corporate customers.
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Individual ID
          name: individual_id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseIndividual'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Customers
      summary: Update Individual
      operationId: Customers_updateIndividualDetails
      security:
        - OAuth2Flow:
            - customers:write
      description: >-
        Update individual details. This operation is only for corporate
        customers that have individual officers with access to the account
      parameters:
        - description: Customer ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Individual ID
          name: individual_id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPatchGeneric'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseIndividualBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/counterparties/{id}:
    get:
      tags:
        - Counterparty
      summary: Retrieve Counterparty
      operationId: Counterparty_getList
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves a list of counterparties given the filter parameters provided
      parameters:
        - description: Counterparty ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCounterparty'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Counterparty
      summary: 'Update Counterparty '
      operationId: Counterparty_updateDetails
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Update Counterparty details. There are limits to what can be updated
        once the counterparty has been approved for use. 
      parameters:
        - description: Counterparty ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCounterpartyPatch'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCounterpartyBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications/{id}:
    get:
      tags:
        - Applications
      summary: Retrieve Application
      operationId: Applications_getDetails
      security:
        - OAuth2Flow:
            - applications:read
      description: Retrieve full details of the  application
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsGetDetailsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Applications
      summary: 'Update Application '
      operationId: Applications_updateProperties
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Update applicant properties. For Individuals attached to a corporation,
        you much patch the individuals directly using [Update
        Individual](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/).
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestApplicationPatch'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseApplicationBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications/{id}/individual/{individual_id}:
    delete:
      tags:
        - Applications
      summary: Delete Individual
      operationId: Applications_deleteIndividual
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Deletes an individual from a corporate application. This action is
        permanent and cannot be reversed. All related details of the individual
        (including uploaded documents) will also be deleted.
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Individual ID
          name: individual_id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseIndividualBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Applications
      summary: Update Individual
      operationId: Applications_updateIndividualProperties
      security:
        - OAuth2Flow:
            - applications:write
      description: >-
        Update individual properties. This applies only for corporate
        applications where individuals associated to the company need to be
        updated.
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Individual ID
          name: individual_id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestIndividualPatch'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseIndividualBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/payments/{id}:
    get:
      tags:
        - Accounts/Payments
      summary: Retrieve Payment Account
      operationId: AccountsPayments_getDetails
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves the base set of account details for a given account ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Accounts/Payments
      summary: 'Update Account '
      operationId: AccountsPayments_updateStatus
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Update an account details. Currently only the account status can be
        updated.
      parameters:
        - description: Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAccountPatch'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccountBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/deposits/{id}:
    get:
      tags:
        - Accounts/Deposits
      summary: Retrieve Account
      operationId: AccountsDeposits_getDetails
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves the base set of account details for a given account ID
      parameters:
        - description: Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccount'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      tags:
        - Accounts/Deposits
      summary: 'Update Account '
      operationId: AccountsDeposits_updateStatus
      security:
        - OAuth2Flow:
            - accounts:write
      description: >-
        Update an account details. Currently only the account status can be
        updated.
      parameters:
        - description: Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAccountPatch'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAccountBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/withdrawals/{id}:
    get:
      tags:
        - Withdrawals
      summary: Retrieve Withdrawal
      operationId: Withdrawals_getDetails
      security:
        - OAuth2Flow:
            - transfers:read
      description: Retrieves details of a previously requested withdrawal
      parameters:
        - description: Withdrawal ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalsGetDetailsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/transfers/{id}:
    get:
      tags:
        - Transfers
      summary: Retrieve Transfer
      operationId: Transfers_getDetails
      security:
        - OAuth2Flow:
            - transfers:read
      description: Retrieves details of a previously requested transfer
      parameters:
        - description: Transfer ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransfer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/settlements/{id}:
    get:
      tags:
        - Settlements
      summary: Retrieve Settlement
      operationId: Settlements_getDetailsByAccount
      security:
        - OAuth2Flow:
            - settlements:read
      description: >-
        Returns a detailed breakdown of an outbound settlement by account and
        customer. Filterable by source and destination accounts.
      parameters:
        - description: Settlement ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Source Account ID to filter settlement on
          name: source_account_id
          in: query
          required: false
          schema:
            type: string
        - description: Destination Account ID to filter settlement on
          name: destination_account_id
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSettlement'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      callbacks:
        Test Call Back 1:
          '':
            post:
              summary: Test Summary
              description: Test Description
              requestBody:
                description: body description
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Customer'
              responses:
                '200':
                  description: all good
  /v1/exchanges/{id}:
    get:
      tags:
        - Exchanges
      summary: Retrieve Exchange
      operationId: Exchanges_getDetails
      security:
        - OAuth2Flow:
            - exchanges:read
      description: Retrieves details of a previously requested exchange
      parameters:
        - description: Exchange ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseExchange'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/documents/{id}/download:
    get:
      tags:
        - Documents
      summary: Download Document
      operationId: Documents_getDocument
      security:
        - OAuth2Flow:
            - applications:read
            - customers:read
      description: Downloads a previously upload document
      parameters:
        - description: Document ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/octet-stream: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/deposits/{id}:
    get:
      tags:
        - Deposits
      summary: Retrieve Deposit
      operationId: Deposits_getDetails
      security:
        - OAuth2Flow:
            - deposits:read
      description: Retrieves details of a previously requested deposit
      parameters:
        - description: Deposit ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositsGetDetailsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/applications/{id}/status:
    get:
      tags:
        - Applications
      summary: Retrieve Application Status
      operationId: Applications_getStatus
      security:
        - OAuth2Flow:
            - applications:read
      description: 'Retrieve the detailed status of an application '
      parameters:
        - description: Application ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseApplicationState'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/payments/{id}/transactions:
    get:
      tags:
        - Accounts/Payments
      summary: Retrieve Transactions
      operationId: AccountsPayments_getTransactions
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves all transactions under the given account
      parameters:
        - description: Payment Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Page of records to get (default 0 = first page)
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Records to return per page (default = 20)
          name: page_size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Sort order by transaction date (ASC or DESC)
          name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: Filter for transaction from this date
          name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Filter for transaction to this date
          name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransactionPayments'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/payments/{id}/transactions/{id}:
    get:
      tags:
        - Accounts/Payments
      summary: Retrieve Transaction
      operationId: AccountsPayments_getTransaction
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves details of a single transaction under the given account
      parameters:
        - description: Transaction ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransactionDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/deposits/{id}/transactions:
    get:
      tags:
        - Accounts/Deposits
      summary: Retrieve Transactions
      operationId: AccountsDeposits_getTransactions
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves all transactions under the given account
      parameters:
        - description: Account ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Page of records to get (default 0 = first page)
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Records to return per page (default = 20)
          name: page_size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Sort order by transaction date (ASC or DESC)
          name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: Filter for transaction from this date
          name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Filter for transaction to this date
          name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransactions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/accounts/deposits/{id}/transactions/{id}:
    get:
      tags:
        - Accounts/Deposits
      summary: Retrieve Transaction
      operationId: AccountsDeposits_getTransaction
      security:
        - OAuth2Flow:
            - accounts:read
      description: Retrieves details of a single transaction under the given account
      parameters:
        - description: Transaction ID
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransactionDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /v1/subscriptions/{id}:
    delete:
      tags:
        - Subscriptions
      summary: Delete Subscription
      operationId: Subscriptions_deleteExistingSubscription
      security:
        - OAuth2Flow:
            - subscriptions:write
      description: Delete an existing subscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional Unique ID per request, useful for fault
            resolution/diagnosis and audit.
          name: x-l2f-request-id
          in: header
          schema:
            type: string
        - description: >-
            Unique ID used to safely retry an operation. See
            [idempotency](https://docs.layer2financial.com/guides/idempotence/)
            section for more details.
          name: x-l2f-idempotency-id
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSubscriptionBase'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
components:
  schemas:
    ResponseWithdrawalBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WithdrawalBase'
    WithdrawalBase:
      type: object
      properties:
        id:
          description: Unique Identifier for the withdrawal request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the withdrawal. 

            * `REQUESTED` - Withdrawal request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Withdrawal request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a withdrawal request was not accepted
            within a reasonable time frame. The request cannot be replayed from
            this state.  

            * `CANCELLED` - Withdrawal request was cancelled. Only available
            prior to acceptance. The  request cannot be replayed from this
            state.  

            * `EXECUTED` -  Withdrawal request has been executed, it is
            completed with all ledger entries performed.  

            * `REJECTED` - Withdrawal request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - REJECTED
            - EXPIRED
            - ACCEPTED
            - EXECUTED
            - CANCELLED
    Error:
      description: Error List
      type: object
      properties:
        description:
          description: Error Description
          type: string
        code:
          description: Layer2 Standard Error Code
          type: string
    ResponseError:
      type: object
      properties:
        errors:
          description: Error List
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Withdrawal:
      required:
        - amount
        - created_timestamp
        - destination_counterparty_id
        - purpose
        - source_account_id
        - withdrawal_rail
      type: object
      properties:
        description:
          description: Description of the transaction
          type: string
        id:
          description: Unique Identifier for the withdrawal request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the withdrawal. 

            * `REQUESTED` - Withdrawal request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Withdrawal request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a withdrawal request was not accepted
            within a reasonable time frame. The request cannot be replayed from
            this state.  

            * `CANCELLED` - Withdrawal request was cancelled. Only available
            prior to acceptance. The  request cannot be replayed from this
            state.  

            * `EXECUTED` -  Withdrawal request has been executed, it is
            completed with all ledger entries performed.  

            * `REJECTED` - Withdrawal request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - REJECTED
            - EXPIRED
            - ACCEPTED
            - EXECUTED
            - CANCELLED
        created_timestamp:
          description: Time when the withdrawal request was generated
          type: string
          format: date-time
          readOnly: true
        withdrawal_rail:
          description: >-
            The rail to be used for the withdrawal. The destination counterparty
            must have the appropriate rail configuration.
          type: string
          enum:
            - ACH
            - FEDWIRE
            - SWIFT
            - CRYPTO
            - EFT
        source_account_id:
          description: Source account ID from which funds will be withdrawn.
          type: string
        purpose:
          description: Purpose of the withdrawal.
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - FAMILY
            - INSURANCE
            - INVESTMENT
            - REAL_ESTATE
            - TUITION
            - MEDICAL
            - TRAVEL
            - TRADE_TRANSACTIONS
            - UTILITY
            - TAX
            - LOAN
            - BILLS
            - PAYROLL
            - TELECOM
            - INTELLECTUAL_PROPERTY
            - OTHER_BUSINESS_SERVICES
            - CHARITABLE_DONATIONS
            - MORTGAGE
            - EXPENSES_REIMBURSEMENT
            - PROFESSIONAL_SERVICES
            - MARKETING
            - RENTAL_PROPERTY
            - OTHER
        amount:
          description: Amount to be withdrawn (uses the source account currency)
          type: number
        destination_counterparty_id:
          description: >-
            Destination counterparty where funds will be sent. This counterparty
            must be configured with the required rail information.
          type: string
      discriminator:
        propertyName: withdrawal_rail
        mapping:
          ACH: '#/components/schemas/WithdrawalACH'
          FEDWIRE: '#/components/schemas/WithdrawalFedwire'
          SWIFT: '#/components/schemas/WithdrawalSwift'
          CRYPTO: '#/components/schemas/WithdrawalCrypto'
    WithdrawalACH:
      required:
        - amount
        - created_timestamp
        - destination_counterparty_id
        - purpose
        - source_account_id
        - withdrawal_rail
      type: object
      properties:
        description:
          description: Description of the transaction
          type: string
        id:
          description: Unique Identifier for the withdrawal request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the withdrawal. 

            * `REQUESTED` - Withdrawal request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Withdrawal request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a withdrawal request was not accepted
            within a reasonable time frame. The request cannot be replayed from
            this state.  

            * `CANCELLED` - Withdrawal request was cancelled. Only available
            prior to acceptance. The  request cannot be replayed from this
            state.  

            * `EXECUTED` -  Withdrawal request has been executed, it is
            completed with all ledger entries performed.  

            * `REJECTED` - Withdrawal request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - REJECTED
            - EXPIRED
            - ACCEPTED
            - EXECUTED
            - CANCELLED
        created_timestamp:
          description: Time when the withdrawal request was generated
          type: string
          format: date-time
          readOnly: true
        withdrawal_rail:
          description: >-
            The rail to be used for the withdrawal. The destination counterparty
            must have the appropriate rail configuration.
          type: string
          enum:
            - ACH
            - FEDWIRE
            - SWIFT
            - CRYPTO
            - EFT
        source_account_id:
          description: Source account ID from which funds will be withdrawn.
          type: string
        purpose:
          description: Purpose of the withdrawal.
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - FAMILY
            - INSURANCE
            - INVESTMENT
            - REAL_ESTATE
            - TUITION
            - MEDICAL
            - TRAVEL
            - TRADE_TRANSACTIONS
            - UTILITY
            - TAX
            - LOAN
            - BILLS
            - PAYROLL
            - TELECOM
            - INTELLECTUAL_PROPERTY
            - OTHER_BUSINESS_SERVICES
            - CHARITABLE_DONATIONS
            - MORTGAGE
            - EXPENSES_REIMBURSEMENT
            - PROFESSIONAL_SERVICES
            - MARKETING
            - RENTAL_PROPERTY
            - OTHER
        amount:
          description: Amount to be withdrawn (uses the source account currency)
          type: number
        destination_counterparty_id:
          description: >-
            Destination counterparty where funds will be sent. This counterparty
            must be configured with the required rail information.
          type: string
        memo:
          description: Memo to provide on the outbound ACH
          maxLength: 10
          type: string
    WithdrawalCrypto:
      required:
        - amount
        - created_timestamp
        - destination_counterparty_id
        - purpose
        - source_account_id
        - withdrawal_rail
      type: object
      properties:
        description:
          description: Description of the transaction
          type: string
        id:
          description: Unique Identifier for the withdrawal request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the withdrawal. 

            * `REQUESTED` - Withdrawal request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Withdrawal request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a withdrawal request was not accepted
            within a reasonable time frame. The request cannot be replayed from
            this state.  

            * `CANCELLED` - Withdrawal request was cancelled. Only available
            prior to acceptance. The  request cannot be replayed from this
            state.  

            * `EXECUTED` -  Withdrawal request has been executed, it is
            completed with all ledger entries performed.  

            * `REJECTED` - Withdrawal request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - REJECTED
            - EXPIRED
            - ACCEPTED
            - EXECUTED
            - CANCELLED
        created_timestamp:
          description: Time when the withdrawal request was generated
          type: string
          format: date-time
          readOnly: true
        withdrawal_rail:
          description: >-
            The rail to be used for the withdrawal. The destination counterparty
            must have the appropriate rail configuration.
          type: string
          enum:
            - ACH
            - FEDWIRE
            - SWIFT
            - CRYPTO
            - EFT
        source_account_id:
          description: Source account ID from which funds will be withdrawn.
          type: string
        purpose:
          description: Purpose of the withdrawal.
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - FAMILY
            - INSURANCE
            - INVESTMENT
            - REAL_ESTATE
            - TUITION
            - MEDICAL
            - TRAVEL
            - TRADE_TRANSACTIONS
            - UTILITY
            - TAX
            - LOAN
            - BILLS
            - PAYROLL
            - TELECOM
            - INTELLECTUAL_PROPERTY
            - OTHER_BUSINESS_SERVICES
            - CHARITABLE_DONATIONS
            - MORTGAGE
            - EXPENSES_REIMBURSEMENT
            - PROFESSIONAL_SERVICES
            - MARKETING
            - RENTAL_PROPERTY
            - OTHER
        amount:
          description: Amount to be withdrawn (uses the source account currency)
          type: number
        destination_counterparty_id:
          description: >-
            Destination counterparty where funds will be sent. This counterparty
            must be configured with the required rail information.
          type: string
    WithdrawalFedwire:
      required:
        - amount
        - created_timestamp
        - destination_counterparty_id
        - purpose
        - source_account_id
        - withdrawal_rail
      type: object
      properties:
        description:
          description: Description of the transaction
          type: string
        id:
          description: Unique Identifier for the withdrawal request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the withdrawal. 

            * `REQUESTED` - Withdrawal request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Withdrawal request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a withdrawal request was not accepted
            within a reasonable time frame. The request cannot be replayed from
            this state.  

            * `CANCELLED` - Withdrawal request was cancelled. Only available
            prior to acceptance. The  request cannot be replayed from this
            state.  

            * `EXECUTED` -  Withdrawal request has been executed, it is
            completed with all ledger entries performed.  

            * `REJECTED` - Withdrawal request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - REJECTED
            - EXPIRED
            - ACCEPTED
            - EXECUTED
            - CANCELLED
        created_timestamp:
          description: Time when the withdrawal request was generated
          type: string
          format: date-time
          readOnly: true
        withdrawal_rail:
          description: >-
            The rail to be used for the withdrawal. The destination counterparty
            must have the appropriate rail configuration.
          type: string
          enum:
            - ACH
            - FEDWIRE
            - SWIFT
            - CRYPTO
            - EFT
        source_account_id:
          description: Source account ID from which funds will be withdrawn.
          type: string
        purpose:
          description: Purpose of the withdrawal.
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - FAMILY
            - INSURANCE
            - INVESTMENT
            - REAL_ESTATE
            - TUITION
            - MEDICAL
            - TRAVEL
            - TRADE_TRANSACTIONS
            - UTILITY
            - TAX
            - LOAN
            - BILLS
            - PAYROLL
            - TELECOM
            - INTELLECTUAL_PROPERTY
            - OTHER_BUSINESS_SERVICES
            - CHARITABLE_DONATIONS
            - MORTGAGE
            - EXPENSES_REIMBURSEMENT
            - PROFESSIONAL_SERVICES
            - MARKETING
            - RENTAL_PROPERTY
            - OTHER
        amount:
          description: Amount to be withdrawn (uses the source account currency)
          type: number
        destination_counterparty_id:
          description: >-
            Destination counterparty where funds will be sent. This counterparty
            must be configured with the required rail information.
          type: string
        memo:
          description: Memo to provide on the outbound Fedwire
          maxLength: 50
          type: string
    WithdrawalSwift:
      required:
        - amount
        - created_timestamp
        - destination_counterparty_id
        - purpose
        - source_account_id
        - withdrawal_rail
      type: object
      properties:
        description:
          description: Description of the transaction
          type: string
        id:
          description: Unique Identifier for the withdrawal request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the withdrawal. 

            * `REQUESTED` - Withdrawal request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Withdrawal request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a withdrawal request was not accepted
            within a reasonable time frame. The request cannot be replayed from
            this state.  

            * `CANCELLED` - Withdrawal request was cancelled. Only available
            prior to acceptance. The  request cannot be replayed from this
            state.  

            * `EXECUTED` -  Withdrawal request has been executed, it is
            completed with all ledger entries performed.  

            * `REJECTED` - Withdrawal request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - REJECTED
            - EXPIRED
            - ACCEPTED
            - EXECUTED
            - CANCELLED
        created_timestamp:
          description: Time when the withdrawal request was generated
          type: string
          format: date-time
          readOnly: true
        withdrawal_rail:
          description: >-
            The rail to be used for the withdrawal. The destination counterparty
            must have the appropriate rail configuration.
          type: string
          enum:
            - ACH
            - FEDWIRE
            - SWIFT
            - CRYPTO
            - EFT
        source_account_id:
          description: Source account ID from which funds will be withdrawn.
          type: string
        purpose:
          description: Purpose of the withdrawal.
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - FAMILY
            - INSURANCE
            - INVESTMENT
            - REAL_ESTATE
            - TUITION
            - MEDICAL
            - TRAVEL
            - TRADE_TRANSACTIONS
            - UTILITY
            - TAX
            - LOAN
            - BILLS
            - PAYROLL
            - TELECOM
            - INTELLECTUAL_PROPERTY
            - OTHER_BUSINESS_SERVICES
            - CHARITABLE_DONATIONS
            - MORTGAGE
            - EXPENSES_REIMBURSEMENT
            - PROFESSIONAL_SERVICES
            - MARKETING
            - RENTAL_PROPERTY
            - OTHER
        amount:
          description: Amount to be withdrawn (uses the source account currency)
          type: number
        destination_counterparty_id:
          description: >-
            Destination counterparty where funds will be sent. This counterparty
            must be configured with the required rail information.
          type: string
    ResponseTransfer:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Transfer'
    Transfer:
      required:
        - created_timestamp
        - destination_details
        - id
        - source_details
        - status
        - valid_until
      type: object
      properties:
        id:
          description: >-
            Unique ID of the transfer request, to be used to accept the transfer
            and lookup status
          type: string
          readOnly: true
        status:
          description: >+
            Status of the transfer. Cannot be modified directly by the client. 

            * `REQUESTED` - Transfer request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Transfer request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a transfer request was not accepted within
            a reasonable time frame. The transfer cannot be replayed from this
            state.  

            * `CANCELLED` - Transfer request was cancelled. Only available prior
            to acceptance. The transfer request cannot be replayed from this
            state.  

            * `EXECUTED` -  Transfer request has been executed, it is completed
            with all ledger entries performed.  

            * `REJECTED` - Transfer request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - ACCEPTED
            - EXPIRED
            - CANCELLED
            - EXECUTED
            - REJECTED
        created_timestamp:
          description: Time when the transfer request was generated
          type: string
          format: date-time
          readOnly: true
        valid_until:
          description: >-
            Time when this transfer request expires and can no longer be
            accepted. Upon expiry a new transfer must be requested
          type: string
          format: date-time
          readOnly: true
        source_details:
          $ref: '#/components/schemas/TransferSourceAccount'
        destination_details:
          $ref: '#/components/schemas/TransferDestinationAccount'
    TransferDestinationAccount:
      description: >-
        Details of transaction to be performed on the destination account on
        acceptance
      required:
        - amount_to_credit
        - destination_account_id
      type: object
      properties:
        destination_account_id:
          description: Destination account ID
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        amount_to_credit:
          description: Amount that will be credited to the destination account
          type: number
    TransferSourceAccount:
      description: >-
        Details of transaction to be performed on the source account on
        acceptance
      required:
        - amount_to_debit
        - source_account_id
      type: object
      properties:
        source_account_id:
          description: Source account ID
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include. 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        amount_to_debit:
          description: Amount that will be debited from the source account
          type: number
    RequestTransfer:
      required:
        - amount
        - destination_account_id
        - source_account_id
      type: object
      properties:
        description:
          description: (Optional) Description of the transfer
          type: string
        source_account_id:
          description: Source account from which funds will be withdrawn
          type: string
        destination_account_id:
          description: Destination account where funds will be deposited
          type: string
        amount:
          description: >-
            Amount to transfer from the source account to the destination
            account
          type: number
    ResponseTransferBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransferBase'
    TransferBase:
      required:
        - id
        - status
      type: object
      properties:
        id:
          description: >-
            Unique ID of the transfer request, to be used to accept the transfer
            and lookup status
          type: string
          readOnly: true
        status:
          description: >+
            Status of the transfer. Cannot be modified directly by the client. 

            * `REQUESTED` - Transfer request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Transfer request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when a transfer request was not accepted within
            a reasonable time frame. The transfer cannot be replayed from this
            state.  

            * `CANCELLED` - Transfer request was cancelled. Only available prior
            to acceptance. The transfer request cannot be replayed from this
            state.  

            * `EXECUTED` -  Transfer request has been executed, it is completed
            with all ledger entries performed.  

            * `REJECTED` - Transfer request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - ACCEPTED
            - EXPIRED
            - CANCELLED
            - EXECUTED
            - REJECTED
    ResponseSubscription:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Subscription'
    Subscription:
      description: Subscription List
      required:
        - callback_url
        - event_type
        - id
        - signature_verification_key
      type: object
      properties:
        id:
          description: Subscription ID
          type: string
          readOnly: true
        event_type:
          description: Subscription Event Type
          type: string
          enum:
            - APPLICATION_READY_FOR_SUBMISSION
            - APPLICATION_SUBMITTED
            - APPLICATION_PROCESSING
            - APPLICATION_CHANGE_REQUESTED
            - APPLICATION_REJECTED
            - APPLICATION_APPROVED
            - PAYMENT_CONFIRMED
            - PAYMENT_EXCHANGE_EXECUTED
        callback_url:
          description: Endpoint to call on event
          type: string
        signature_verification_key:
          description: Signature verification key
          type: string
          readOnly: true
    Exchange:
      required:
        - action
        - created_timestamp
        - destination_details
        - exchange_type
        - id
        - source_details
        - status
      type: object
      properties:
        id:
          description: Unique ID of the exchange request
          type: string
          readOnly: true
        status:
          description: >+
            Status of the Exchange. Cannot be modified directly by the client. 

            * `REQUESTED` - Exchange request is created and has passed
            validation. It must be accepted at which point it will be executed. 

            * `ACCEPTED` - Exchange request has been accepted and is waiting
            execution. At this point it cannot be cancelled.  

            * `EXPIRED` - Occurs when an exchange request was not accepted
            within a reasonable time frame. The exchange cannot be replayed from
            this state.  

            * `CANCELLED` - Exchange request was cancelled. Only available prior
            to acceptance. The exchange request cannot be replayed from this
            state.  

            * `EXECUTED` -  Exchange request has been executed, it is completed
            with all ledger entries performed.  

            * `REJECTED` - Exchange request was rejected and cannot be
            executed.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - ACCEPTED
            - EXPIRED
            - CANCELLED
            - EXECUTED
            - REJECTED
        created_timestamp:
          description: Time when the exchange request was generated
          type: string
          format: date-time
        exchange_type:
          description: The type of exchange being performed.
          type: string
          readOnly: true
          enum:
            - QUOTE
            - MARKET
        action:
          description: >+
            The action defines which side of the exchange to fix.  

            * `FIX_DESTINATION` - This fixes the amount to credit to the
            `DESTINATION` account, therefore the quote provided is for how much
            to deduct from the `SOURCE` account. Think of this as 'buying' the
            destination amount.

            * `FIX_SOURCE` - This fixes the amount you want to debit from the
            `SOURCE` account, therefore the quote provided is for how much would
            be credited to the `DESTINATION` account. Think of this as 'selling'
            the source amount. 

          type: string
          enum:
            - FIX_DESTINATION
            - FIX_SOURCE
        source_details:
          $ref: '#/components/schemas/TransferSourceAccount'
        destination_details:
          $ref: '#/components/schemas/TransferDestinationAccount'
    ResponseExchange:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Exchange'
    RequestExchangeAccept:
      required:
        - maximum_slippage
      type: object
      properties:
        maximum_slippage:
          description: >
            The maximum slippage Layer2 will consider when accepting this order.
            Defined in bps and represented as a percentage. So 10bps would be
            presented as 0.001. Must be greater than or equal to 0.


            We calculate slippage based on the quote you are accepting. While
            the slippage may not always be used, it is there to ensure a better
            completion/fill rate with our market makers. 


            Where the quote cannot be fulfilled within the slippage tolerance,
            the exchange response status will be ```REJECTED```. 
          type: number
    RequestExchange:
      required:
        - action
        - amount
        - destination_account_id
        - source_account_id
      type: object
      properties:
        description:
          description: (Optional) Description of the transaction
          type: string
        source_account_id:
          description: Source account from which funds will be withdrawn
          type: string
        destination_account_id:
          description: Destination account where funds will be deposited
          type: string
        amount:
          description: 'The amount to be exchanged depending on the the `action`. '
          type: number
        action:
          description: >+
            Type of exchange being performed. 

            * `FIX_DESTINATION` - This fixes the amount to credit to the
            `DESTINATION` account, therefore the quote provided is for how much
            to deduct from the `SOURCE` account. Think of this as 'buying' the
            destination amount.

            * `FIX_SOURCE` - This fixes the amount you want to debit from the
            `SOURCE` account, therefore the quote provided is for how much would
            be credited to the `DESTINATION` account. Think of this as 'selling'
            the source amount. 

          type: string
          enum:
            - FIX_DESTINATION
            - FIX_SOURCE
    DocumentBase:
      required:
        - id
      type: object
      properties:
        id:
          description: Unique ID of the document
          type: string
          readOnly: true
    ResponseDocumentBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DocumentBase'
    DEPOSIT_PUSH:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DepositPush'
    DepositDestinationAccount:
      description: Destination account on platform into which funds will be deposited
      required:
        - asset_type_id
        - destination_account_id
      type: object
      properties:
        destination_account_id:
          description: Destination account ID
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
          readOnly: true
    DepositPush:
      required:
        - created_timestamp
        - deposit_destination
        - deposit_source
        - deposit_type
        - id
        - status
      type: object
      properties:
        id:
          description: >-
            Unique ID of the deposit instance, to be used to lookup deposit
            status and historical deposits
          type: string
          readOnly: true
        status:
          description: >+
            Status of the deposit. 

            * `REQUESTED` - Deposit request is created and deposits can be
            made. 

            * `EXECUTED` -  At least 1 deposit was received and successfully
            processed.  

            * `FAILURE` - There is a problem or failure with an incoming
            deposit. View deposit details for more information.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - EXECUTED
            - FAILURE
        created_timestamp:
          description: Time when the deposit request was generated
          type: string
          format: date-time
          readOnly: true
        deposit_type:
          description: >-
            How should the deposit be made. PUSH (manually sent by customer) or
            PULL (automatically pulled via a linked counterparty using a
            supported rail). 

            If performing a PULL, several conditions apply. 


            Conditions:


            - The destination account must be for an asset type that supports
            pull deposits (e.g. USD, CAD)

            - The source counterparty must be linked and have an available rail
            that supports ones of the deposit mechanisms on the destination
            account (e.g. ACH, EFT). 


            - The deposit request MUST be accepted using the /deposit/accept
            endpoint to initiate the pull deposit
          type: string
          enum:
            - PUSH
            - PULL
        deposit_destination:
          $ref: '#/components/schemas/DepositDestinationAccount'
        deposit_source:
          $ref: '#/components/schemas/DepositSource'
    DepositSource:
      description: 'Instructions of where to send (push) deposits. '
      required:
        - deposit_instructions
      type: object
      properties:
        deposit_instructions:
          description: >-
            List of all available deposit instructions for this account. For
            crypto accounts typically expect a single entry. For FIAT accounts,
            there may be several entries for each of the supported rails on that
            account type. 
          type: array
          readOnly: true
          example:
            - instruction_type: CRYPTO
              address: '0x000121'
              blockchain: ETHEREUM
              network: MAINNET
              asset_type_id: ETHEREUM_MAINNET_ETH
            - instruction_type: SWIFT
              account_holder_name: string
              account_number: string
              account_routing_number: string
              swift_bic: string
              account_holder_address:
                unit_number: string
                address_line1: string
                address_line2: string
                address_line3: string
                city: string
                state: string
                postal_code: string
                country_code: string
              institution_name: string
              institution_address:
                unit_number: string
                address_line1: string
                address_line2: string
                address_line3: string
                city: string
                state: string
                postal_code: string
                country_code: string
              asset_type_id: string
            - instruction_type: FEDWIRE
              account_holder_name: string
              account_number: string
              account_routing_number: string
              account_holder_address:
                unit_number: string
                address_line1: string
                address_line2: string
                address_line3: string
                city: string
                state: string
                postal_code: string
                country_code: string
              institution_name: string
              institution_address:
                unit_number: string
                address_line1: string
                address_line2: string
                address_line3: string
                city: string
                state: string
                postal_code: string
                country_code: string
              memo: string
              asset_type_id: string
            - description: string
              instruction_type: ACH
              account_holder_name: string
              account_number: string
              account_routing_number: string
              asset_type_id: string
          items:
            $ref: '#/components/schemas/Instruction'
      readOnly: true
    Instruction:
      description: >-
        List of all available deposit instructions for this account. For crypto
        accounts typically expect a single entry. For FIAT accounts, there may
        be several entries for each of the supported rails on that account
        type. 
      required:
        - instruction_type
      type: object
      properties:
        instruction_type:
          description: Type of Instruction
          type: string
          example: CRYPTO
          enum:
            - CRYPTO
            - ACH
            - FEDWIRE
      readOnly: true
      example:
        - instruction_type: CRYPTO
          address: '0x000121'
          blockchain: ETHEREUM
          network: MAINNET
          asset_type_id: ETHEREUM_MAINNET_ETH
        - instruction_type: SWIFT
          account_holder_name: string
          account_number: string
          account_routing_number: string
          swift_bic: string
          account_holder_address:
            unit_number: string
            address_line1: string
            address_line2: string
            address_line3: string
            city: string
            state: string
            postal_code: string
            country_code: string
          institution_name: string
          institution_address:
            unit_number: string
            address_line1: string
            address_line2: string
            address_line3: string
            city: string
            state: string
            postal_code: string
            country_code: string
          asset_type_id: string
        - instruction_type: FEDWIRE
          account_holder_name: string
          account_number: string
          account_routing_number: string
          account_holder_address:
            unit_number: string
            address_line1: string
            address_line2: string
            address_line3: string
            city: string
            state: string
            postal_code: string
            country_code: string
          institution_name: string
          institution_address:
            unit_number: string
            address_line1: string
            address_line2: string
            address_line3: string
            city: string
            state: string
            postal_code: string
            country_code: string
          memo: string
          asset_type_id: string
        - description: string
          instruction_type: ACH
          account_holder_name: string
          account_number: string
          account_routing_number: string
          asset_type_id: string
      discriminator:
        propertyName: instruction_type
        mapping:
          CRYPTO: '#/components/schemas/InstructionCrypto'
          FEDWIRE: '#/components/schemas/InstructionFedwire'
          ACH: '#/components/schemas/InstructionAch'
          SWIFT: '#/components/schemas/InstructionSwift'
      oneOf:
        - $ref: '#/components/schemas/InstructionCrypto'
        - $ref: '#/components/schemas/InstructionFedwire'
        - $ref: '#/components/schemas/InstructionAch'
        - $ref: '#/components/schemas/InstructionSwift'
    InstructionAch:
      required:
        - account_holder_name
        - account_number
        - account_routing_number
        - instruction_type
        - memo
      type: object
      properties:
        instruction_type:
          description: Type of Instruction
          type: string
          example: CRYPTO
          enum:
            - CRYPTO
            - ACH
            - FEDWIRE
        account_holder_name:
          description: Name on account to send fund to
          type: string
        account_number:
          description: Account number to send funds to
          type: string
        account_routing_number:
          description: Routing number of account to send funds to
          type: string
        memo:
          description: >-
            Memo to provide on the ACH. It is critical that the memo be
            completed accurately and completely when sending the ACH. Failure to
            do so may severely delay processing of the deposit
          maxLength: 10
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include. 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
    InstructionCrypto:
      required:
        - address
        - blockchain
        - instruction_type
        - network
      type: object
      properties:
        instruction_type:
          description: Type of Instruction
          type: string
          example: CRYPTO
          enum:
            - CRYPTO
            - ACH
            - FEDWIRE
        address:
          description: Issued address for the receipt of funds.
          type: string
        blockchain:
          description: Blockchain the address is issued for use on
          type: string
        network:
          description: >-
            Network (on the target blockchain) that the address is issued for
            use on
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include. 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
    InstructionFedwire:
      required:
        - account_holder_address
        - account_holder_name
        - account_number
        - account_routing_number
        - institution_address
        - instruction_type
        - memo
      type: object
      properties:
        instruction_type:
          description: Type of Instruction
          type: string
          example: CRYPTO
          enum:
            - CRYPTO
            - ACH
            - FEDWIRE
        account_holder_name:
          description: Name on account to send fund to
          type: string
        account_number:
          description: Account number to send funds to
          type: string
        account_routing_number:
          description: Routing number of account to send funds to
          type: string
        account_holder_address:
          $ref: '#/components/schemas/account_holder_address'
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        memo:
          description: >-
            Memo to provide on the Fedwire. It is critical that the memo be
            completed accurately and completely when sending the Fedwire.
            Failure to do so may severely delay processing of the deposit
          maxLength: 50
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include. 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
    InstructionSwift:
      required:
        - account_holder_address
        - account_holder_name
        - account_number
        - account_routing_number
        - institution_address
        - institution_name
        - instruction_type
        - swift_bic
      type: object
      properties:
        instruction_type:
          description: Type of Instruction
          type: string
          example: CRYPTO
          enum:
            - CRYPTO
            - ACH
            - FEDWIRE
        account_holder_name:
          description: Name on account to send fund to
          type: string
        account_number:
          description: Account number to send funds to
          type: string
        account_routing_number:
          description: Routing number of account to send funds to
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        account_holder_address:
          $ref: '#/components/schemas/account_holder_address'
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include. 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
    account_holder_address:
      description: Account Holder Address
      type: object
      properties:
        unit_number:
          description: Unit Number
          type: string
        address_line1:
          description: Address Line 1
          type: string
        address_line2:
          description: Address Line 2
          type: string
        address_line3:
          description: Address Line 3
          type: string
        city:
          description: City
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        postal_code:
          description: Postal / Zip Code
          type: string
        country_code:
          description: >-
            Country Code (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    institution_address:
      description: Address of institution
      type: object
      properties:
        unit_number:
          description: Unit Number
          type: string
        address_line1:
          description: Address Line 1
          type: string
        address_line2:
          description: Address Line 2
          type: string
        address_line3:
          description: Address Line 3
          type: string
        city:
          description: City
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        postal_code:
          description: Postal / Zip Code
          type: string
        country_code:
          description: >-
            Country Code (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    DEPOSIT_PULL:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DepositPull'
    DepositDetails:
      description: 'Details of the the deposit '
      required:
        - amount
      type: object
      properties:
        amount:
          description: >-
            Amount of funds to pull from the linked counterparty into the
            deposit account. In the currency of the linked counterparty. 
          type: number
        reference:
          description: >-
            Reference for the transaction to appear on the counterparty account
            where permissible.
          type: string
    DepositPull:
      required:
        - created_timestamp
        - deposit_destination
        - deposit_details
        - deposit_source
        - deposit_type
        - id
        - status
      type: object
      properties:
        id:
          description: >-
            Unique ID of the deposit instance, to be used to lookup deposit
            status and historical deposits
          type: string
          readOnly: true
        status:
          description: >+
            Status of the deposit. 

            * `REQUESTED` - Deposit request is created and deposits can be
            made. 

            * `EXECUTED` -  At least 1 deposit was received and successfully
            processed.  

            * `FAILURE` - There is a problem or failure with an incoming
            deposit. View deposit details for more information.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - EXECUTED
            - FAILURE
        created_timestamp:
          description: Time when the deposit request was generated
          type: string
          format: date-time
          readOnly: true
        deposit_type:
          description: >-
            How should the deposit be made. PUSH (manually sent by customer) or
            PULL (automatically pulled via a linked counterparty using a
            supported rail). 

            If performing a PULL, several conditions apply. 


            Conditions:


            - The destination account must be for an asset type that supports
            pull deposits (e.g. USD, CAD)

            - The source counterparty must be linked and have an available rail
            that supports ones of the deposit mechanisms on the destination
            account (e.g. ACH, EFT). 


            - The deposit request MUST be accepted using the /deposit/accept
            endpoint to initiate the pull deposit
          type: string
          enum:
            - PUSH
            - PULL
        deposit_destination:
          $ref: '#/components/schemas/DepositDestinationAccount'
        deposit_source:
          $ref: '#/components/schemas/DepositSourceCounterparty'
        deposit_details:
          $ref: '#/components/schemas/DepositDetails'
    DepositSourceCounterparty:
      description: Counterparty from which deposit will be pulled.
      required:
        - asset_type_id
        - source_counterparty_id
      type: object
      properties:
        source_counterparty_id:
          description: 'Linked counterparty to pull funds from. '
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
          readOnly: true
    Deposit:
      required:
        - created_timestamp
        - deposit_type
        - id
        - status
      type: object
      properties:
        id:
          description: >-
            Unique ID of the deposit instance, to be used to lookup deposit
            status and historical deposits
          type: string
          readOnly: true
        status:
          description: >+
            Status of the deposit. 

            * `REQUESTED` - Deposit request is created and deposits can be
            made. 

            * `EXECUTED` -  At least 1 deposit was received and successfully
            processed.  

            * `FAILURE` - There is a problem or failure with an incoming
            deposit. View deposit details for more information.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - EXECUTED
            - FAILURE
        created_timestamp:
          description: Time when the deposit request was generated
          type: string
          format: date-time
          readOnly: true
        deposit_type:
          description: >-
            How should the deposit be made. PUSH (manually sent by customer) or
            PULL (automatically pulled via a linked counterparty using a
            supported rail). 

            If performing a PULL, several conditions apply. 


            Conditions:


            - The destination account must be for an asset type that supports
            pull deposits (e.g. USD, CAD)

            - The source counterparty must be linked and have an available rail
            that supports ones of the deposit mechanisms on the destination
            account (e.g. ACH, EFT). 


            - The deposit request MUST be accepted using the /deposit/accept
            endpoint to initiate the pull deposit
          type: string
          enum:
            - PUSH
            - PULL
      discriminator:
        propertyName: deposit_type
        mapping:
          PUSH: '#/components/schemas/DepositPush'
          PULL: '#/components/schemas/DepositPull'
    DepositBase:
      required:
        - id
        - status
      type: object
      properties:
        id:
          description: >-
            Unique ID of the deposit instance, to be used to lookup deposit
            status and historical deposits
          type: string
          readOnly: true
        status:
          description: >+
            Status of the deposit. 

            * `REQUESTED` - Deposit request is created and deposits can be
            made. 

            * `EXECUTED` -  At least 1 deposit was received and successfully
            processed.  

            * `FAILURE` - There is a problem or failure with an incoming
            deposit. View deposit details for more information.  

          type: string
          readOnly: true
          enum:
            - REQUESTED
            - EXECUTED
            - FAILURE
    ResponseDepositBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DepositBase'
    CustomerBase:
      required:
        - id
      type: object
      properties:
        id:
          description: Unique Identifier for the customer
          type: string
    ResponseCustomerBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomerBase'
    CorporationCustomer:
      required:
        - customer_type
        - id
        - registered_name
        - status
      type: object
      allOf:
        - $ref: '#/components/schemas/Customer'
        - type: object
          properties:
            registered_name:
              description: Corporate entity registered name
              type: string
            trading_name:
              description: >-
                Trading/'Doing Business As' name (if different to registered
                name)
              type: string
            registered_number:
              description: >-
                Government registered number of the corporate entity (Business
                EIN, Business Number etc)
              type: string
            registered_address:
              $ref: '#/components/schemas/registered_address'
            telephone_number:
              description: Telephone Number in E.164 format
              type: string
            website_address:
              description: Website URL
              type: string
            state_of_incorporation:
              description: State / Province / Riding of Incorporation (2 digit code)
              type: string
            country_of_incorporation:
              description: >-
                Country of incorporation (2 Digit ISO31661-Alpha2 Format -
                https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
              type: string
            corporate_entity_type:
              description: Type of corporate entity
              type: string
              enum:
                - C_CORP_PRIVATE
                - C_CORP_PUBLIC
                - HNWI
                - LLC
                - LLP
                - LP
                - S_CORP
                - SOLE_PROP
                - TRUST
                - NON_PROFIT
                - OTHER
            corporate_entity_type_description:
              description: Description of legal structure where entity type is `OTHER`
              type: string
            email_address:
              description: Business Email Address (for example support@acme.inc)
              type: string
            established_on:
              description: Date the business was established following RFC3339 (YYYY-MM-DD)
              type: string
            naics:
              description: NAICS Code
              type: string
            naics_description:
              description: NAICS Description
              type: string
            individuals:
              description: Individuals Associated to CorporationApplication
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/Individual'
    Customer:
      required:
        - customer_type
        - id
        - status
      type: object
      properties:
        id:
          description: Unique Identifier for the customer
          type: string
        customer_type:
          description: Type of customer
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        status:
          description: >+
            Customer Status - will determine servicing options on the customer
            and the customers accounts. 

            * `ACTIVE` - Customer is open and available for use in line with its
            product configuration

            * `CLOSED` - Customer is permanently closed, no further actions can
            be performed on the customer. All accounts associated to the
            customer will also be `CLOSED`  

            * `PENDING` - Customer is under additional review prior to moving to
            the OPEN or CLOSED state. No actions can be performed on the
            customer or their respective accounts.  

            * `FROZEN` - Customer has been temporarily locked for all actions.
            All accounts associated to the customer will also be `FROZEN` 

            * `EDD` -  Customer requires enhanced due diligence to be performed.
            The customer will operate as if frozen until transitioning to
            `ACTIVE` or `CLOSED`. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            customer and their accounts are available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
      discriminator:
        propertyName: customer_type
        mapping:
          INDIVIDUAL: '#/components/schemas/IndividualCustomer'
          CORPORATION: '#/components/schemas/CorporationCustomer'
    Individual:
      description: Beneficial Owners and Control Persons Associated to the corporation
      required:
        - first_name
        - id
        - individual_type
        - last_name
      type: object
      properties:
        title:
          description: >-
            Example values CEO, COO, CFO, President,
            BenefitsAdministrationOfficer, CIO, VP, AVP, Treasurer, Secretary,
            Controller, Manager, Partner or Member.
          type: string
        id:
          description: Unique ID of the Individual
          type: string
          readOnly: true
        individual_type:
          description: Type of Individual (use individual for non corporate customers)
          type: array
          items:
            description: Type of Individual (use individual for non corporate customers)
            type: string
            enum:
              - INDIVIDUAL
              - OFFICER
              - BENEFICIAL_OWNER
              - CONTROL_PERSON
              - AUTHORIZED_PERSON
        first_name:
          description: First name
          type: string
        middle_name:
          description: Middle Name(s) (if present)
          type: string
        last_name:
          description: Last name
          type: string
        email_address:
          description: Email Address
          type: string
        mailing_address:
          $ref: '#/components/schemas/mailing_address'
        telephone_number:
          description: Telephone Number in E.164 format
          type: string
        tax_reference_number:
          description: >-
            Tax reference number of the country (SSN, ITIN, SIN, National
            Insurance Number etc)
          type: string
        passport_number:
          description: Passport Number
          type: string
        nationality:
          description: >-
            Nationality (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        date_of_birth:
          description: 'RFC3339 (YYYY-MM-DD) Date of Birth '
          type: string
          format: date
        percentage_ownership:
          description: >-
            (Only where type is BENEFICIAL_OWNER) Percentage ownership of the
            corporation (0 to 100)
          type: integer
          format: int32
        us_residency_status:
          description: US Residency Status
          type: string
          enum:
            - US_CITIZEN
            - RESIDENT_ALIEN
            - NON_RESIDENT_ALIEN
      readOnly: true
    IndividualCustomer:
      required:
        - customer_type
        - first_name
        - id
        - last_name
        - status
      type: object
      allOf:
        - $ref: '#/components/schemas/Customer'
        - type: object
          properties:
            first_name:
              description: First name
              type: string
            middle_name:
              description: Middle Name(s) (if present)
              type: string
            last_name:
              description: Last name
              type: string
            email_address:
              description: Email Address
              type: string
            mailing_address:
              $ref: '#/components/schemas/mailing_address'
            telephone_number:
              description: Telephone Number in E.164 format
              type: string
            tax_reference_number:
              description: >-
                Tax reference number of the individual (SSN, ITIN, SIN, National
                Insurance Number etc)
              type: string
            passport_number:
              description: Passport Number
              type: string
            nationality:
              description: >-
                Nationality (2 Digit ISO31661-Alpha2 Format -
                https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
              type: string
            date_of_birth:
              description: 'RFC3339 (YYYY-MM-DD) Date of Birth '
              type: string
              format: date
            us_residency_status:
              description: US Residency Status
              type: string
              enum:
                - US_CITIZEN
                - RESIDENT_ALIEN
                - NON_RESIDENT_ALIEN
            employment_status:
              description: Employment Status
              type: string
              enum:
                - EMPLOYEE
                - SELF_EMPLOYED
                - RETIRED
                - UNEMPLOYED
                - OTHER
            employment_description:
              description: Employment (job) description.
              type: string
            employer_name:
              description: Employer name
              type: string
            occupation:
              description: Occupation
              type: string
            investment_profile:
              $ref: '#/components/schemas/ProfileIndividualInvesting'
            kyc_profile:
              $ref: '#/components/schemas/ProfileIndividualKYC'
    ProfileIndividualInvesting:
      description: Investment Profile of the Individual
      type: object
      properties:
        primary_source_of_funds:
          type: string
          enum:
            - EMPLOYMENT
            - SAVINGS
            - WINNINGS
            - MARITAL
            - REAL_ESTATE
            - TRUST
            - INVESTMENT
            - OTHER
            - COMPANY
            - COMPANY_CAPITAL
            - LOAN
            - PRIVATE_CAPITAL
            - GRANT
        primary_source_of_funds_description:
          type: string
        total_assets:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        usd_value_of_fiat:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        monthly_deposits:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_withdrawals:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_investment_deposit:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        monthly_investment_withdrawal:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        usd_value_of_crypto:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        monthly_crypto_deposits:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_crypto_withdrawals:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_crypto_investment_deposit:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        monthly_crypto_investment_withdrawal:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
    ProfileIndividualKYC:
      description: KYC Profile of the Individual
      type: object
      properties:
        funds_send_receive_jurisdictions:
          type: array
          items:
            type: string
        engage_in_activities:
          type: array
          items:
            type: string
            enum:
              - NONE
              - ADULT_ENTERTAINMENT
              - DRUGS
              - FIREARMS
              - GAMBLING
              - MARIJUANA
              - TUMBLING
    RequestCustomer:
      required:
        - customer_type
        - id
        - status
      type: object
      properties:
        id:
          description: Unique Identifier for the customer
          type: string
        customer_type:
          description: Type of customer
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        status:
          description: >+
            Customer Status - will determine servicing options on the customer
            and the customers accounts. 

            * `ACTIVE` - Customer is open and available for use in line with its
            product configuration

            * `CLOSED` - Customer is permanently closed, no further actions can
            be performed on the customer. All accounts associated to the
            customer will also be `CLOSED`  

            * `PENDING` - Customer is under additional review prior to moving to
            the OPEN or CLOSED state. No actions can be performed on the
            customer or their respective accounts.  

            * `FROZEN` - Customer has been temporarily locked for all actions.
            All accounts associated to the customer will also be `FROZEN` 

            * `EDD` -  Customer requires enhanced due diligence to be performed.
            The customer will operate as if frozen until transitioning to
            `ACTIVE` or `CLOSED`. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            customer and their accounts are available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
      discriminator:
        propertyName: customer_type
        mapping:
          INDIVIDUAL: '#/components/schemas/IndividualCustomer'
          CORPORATION: '#/components/schemas/CorporationCustomer'
    mailing_address:
      description: Mailing Address
      type: object
      properties:
        unit_number:
          description: Unit Number
          type: string
        address_line1:
          description: Address Line 1
          type: string
        address_line2:
          description: Address Line 2
          type: string
        address_line3:
          description: Address Line 3
          type: string
        city:
          description: City
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        postal_code:
          description: Postal / Zip Code
          type: string
        country_code:
          description: >-
            Country Code (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    registered_address:
      description: Registered / head office address
      type: object
      properties:
        unit_number:
          description: Unit Number
          type: string
        address_line1:
          description: Address Line 1
          type: string
        address_line2:
          description: Address Line 2
          type: string
        address_line3:
          description: Address Line 3
          type: string
        city:
          description: City
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        postal_code:
          description: Postal / Zip Code
          type: string
        country_code:
          description: >-
            Country Code (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    PayorBase:
      required:
        - id
      type: object
      properties:
        id:
          description: >-
            Unique ID to be associated to this payor. Payor IDs must be unique
            per customer. The Payor ID follow the [External
            Identifier](https://docs.layer2financial.com/guides/externalidentifiers/)
            pattern
          type: string
    ResponsePayorBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PayorBase'
    RequestPayorOnboarding:
      required:
        - country_code
        - id
        - state
      type: object
      properties:
        id:
          description: >-
            Unique ID to be associated to this payor. Payor IDs must be unique
            per customer. The Payor ID follow the [External
            Identifier](https://docs.layer2financial.com/guides/externalidentifiers/)
            pattern
          type: string
        first_name:
          description: First Name (Mandatory if individual)
          type: string
        middle_name:
          description: Middle Name
          type: string
        last_name:
          description: Last Name (Mandatory if individual)
          type: string
        email_address:
          description: Email Address
          type: string
        phone_number:
          description: Telephone Number
          type: string
        company_name:
          description: Company Name (Mandatory if corporation)
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        country_code:
          description: >-
            Country of Payor (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    IndividualBase:
      required:
        - id
      type: object
      properties:
        id:
          description: Unique ID of the Individual
          type: string
          readOnly: true
    ResponseIndividualBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IndividualBase'
    RequestIndividual:
      required:
        - first_name
        - id
        - individual_type
        - last_name
      type: object
      properties:
        title:
          description: >-
            Example values CEO, COO, CFO, President,
            BenefitsAdministrationOfficer, CIO, VP, AVP, Treasurer, Secretary,
            Controller, Manager, Partner or Member.
          type: string
        id:
          description: Unique ID of the Individual
          type: string
          readOnly: true
        individual_type:
          description: Type of Individual (use individual for non corporate customers)
          type: array
          items:
            description: Type of Individual (use individual for non corporate customers)
            type: string
            enum:
              - INDIVIDUAL
              - OFFICER
              - BENEFICIAL_OWNER
              - CONTROL_PERSON
              - AUTHORIZED_PERSON
        first_name:
          description: First name
          type: string
        middle_name:
          description: Middle Name(s) (if present)
          type: string
        last_name:
          description: Last name
          type: string
        email_address:
          description: Email Address
          type: string
        mailing_address:
          $ref: '#/components/schemas/mailing_address'
        telephone_number:
          description: Telephone Number in E.164 format
          type: string
        tax_reference_number:
          description: >-
            Tax reference number of the country (SSN, ITIN, SIN, National
            Insurance Number etc)
          type: string
        passport_number:
          description: Passport Number
          type: string
        nationality:
          description: >-
            Nationality (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        date_of_birth:
          description: 'RFC3339 (YYYY-MM-DD) Date of Birth '
          type: string
          format: date
        percentage_ownership:
          description: >-
            (Only where type is BENEFICIAL_OWNER) Percentage ownership of the
            corporation (0 to 100)
          type: integer
          format: int32
        us_residency_status:
          description: US Residency Status
          type: string
          enum:
            - US_CITIZEN
            - RESIDENT_ALIEN
            - NON_RESIDENT_ALIEN
    CounterPartyBase:
      type: object
      properties:
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
    ResponseCounterpartyBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CounterPartyBase'
    CounterParty:
      required:
        - counterparty_type
        - customer_id
        - status
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
      discriminator:
        propertyName: counterparty_type
        mapping:
          FIAT_US: '#/components/schemas/CounterPartyFIATUS'
          FIAT_CN: '#/components/schemas/CounterPartyFIATCN'
          FIAT_HK: '#/components/schemas/CounterPartyFIATHK'
          FIAT_SG: '#/components/schemas/CounterPartyFIATSG'
          FIAT_JP: '#/components/schemas/CounterPartyFIATJP'
          FIAT_MY: '#/components/schemas/CounterPartyFIATMY'
          FIAT_PA: '#/components/schemas/CounterPartyFIATPA'
          FIAT_CA: '#/components/schemas/CounterPartyFIATCA'
          FIAT_BS: '#/components/schemas/CounterPartyFIATBS'
          FIAT_EU: '#/components/schemas/CounterPartyFIATEU'
          FIAT_GB: '#/components/schemas/CounterPartyFIATGB'
          FIAT_IN: '#/components/schemas/CounterPartyFIATIN'
          FIAT_US_LINKED: '#/components/schemas/CounterPartyFIATUSLINKED'
          CRYPTO: '#/components/schemas/CounterPartyCRYPTO'
          BASIC: '#/components/schemas/CounterPartyBASIC'
    CounterPartyAccountCRYPTO:
      description: >-
        Details of the recipient wallet. See the API Guides for a full
        documented breakdown of required fields.
      required:
        - asset_type_id
        - blockchain_address
        - wallet_type
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        blockchain_address:
          description: >-
            Blockchain address of the recipient where funds will be sent.
            IMPORTANT: Ensure that this address is valid for the asset type of
            the source account (blockchain, network, currency). Incorrect
            addresses will result in unrecoverable loss of funds
          type: string
        wallet_type:
          description: >-
            Type of wallet that will hold/custody these funds for the recipient
            owner (e.g. Custodian, Private Wallet etc)
          type: string
          enum:
            - INSTITUTION
            - OTHER
            - UNKNOWN
        institution_name:
          description: >-
            Destination Institution Name (e.g. Bank of America) if `wallet_type`
            is `Institution`
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATBS:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        type:
          description: Counterparty account type.
          type: string
          enum:
            - CHECKING
            - SAVING
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATCA:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - asset_type_id
        - institution_address
        - institution_name
        - institution_number
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        institution_number:
          description: Counterparty institution number
          type: string
        transit_number:
          description: Counterparty transit number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Royal Bank of Canada)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATCN:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATEU:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - asset_type_id
        - iban
        - institution_address
        - institution_name
        - swift_bic
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        iban:
          description: Counterparty International Bank Account Number (IBAN)
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Banco Santander)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATGB:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        sort_code:
          description: >-
            Counterparty institution sort code
            (https://docs.layer2financial.com/api-docs/openapi/layer2/overview/)
          type: string
        iban:
          description: Counterparty International Bank Account Number (IBAN)
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Banco Santander)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATHK:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATIN:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        ifsc:
          description: Counterparty Indian Financial System Code (IFSC)
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATJP:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATMY:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATPA:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATSG:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - institution_address
        - institution_name
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATUS:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - account_number
        - asset_type_id
        - routing_number
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_number:
          description: Counterparty account number
          type: string
        type:
          description: Counterparty account type.
          type: string
          enum:
            - CHECKING
            - SAVING
        routing_number:
          description: Counterparty routing number
          type: string
        swift_bic:
          description: Counterparty SWIFT/BIC Number
          type: string
        institution_name:
          description: Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    CounterPartyAccountFIATUSLINKED:
      description: >-
        Details of the counter party account and institution. Required fields
        are determined by the combination of required needed rails. See the API
        Guides for a full documented breakdown of required fields.
      required:
        - asset_type_id
      type: object
      properties:
        asset_type_id:
          description: >
            Destination asset type. Asset type IDs follow a simple structure as
            follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset
            type to test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        account_name:
          description: Account name generated using linking
          type: string
          readOnly: true
        abbreviated_account_number:
          description: Abbreviated account number (typically the last 4 digits e.g. x1234)
          type: string
          readOnly: true
    CounterPartyBASIC:
      required:
        - counterparty_type
        - customer_id
        - profile
        - status
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileCRYPTO'
    CounterPartyCRYPTO:
      required:
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
        - wallet_information
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            default: '["CRYPTO"]'
            enum:
              - CRYPTO
          default:
            - CRYPTO
        profile:
          $ref: '#/components/schemas/CounterPartyProfileCRYPTO'
        wallet_information:
          $ref: '#/components/schemas/CounterPartyAccountCRYPTO'
    CounterPartyFIATBS:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - ACH
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATBS'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATBS'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATCA:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - EFT
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATCA'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATCA'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATCN:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATCN'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATCN'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATEU:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SEPA_CT
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATEU'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATEU'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATGB:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - FPS
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATGB'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATGB'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATHK:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATHK'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATHK'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATIN:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - IMPS
              - NFT
              - UP
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATIN'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATIN'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATJP:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATJP'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATJP'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATMY:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATMY'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATMY'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATPA:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATPA'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATPA'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATSG:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATSG'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATSG'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATUS:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            enum:
              - ACH
              - FEDWIRE
              - SWIFT
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATUS'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATUS'
        intermediary_information:
          $ref: '#/components/schemas/CounterPartyIntermediary'
    CounterPartyFIATUSLINKED:
      required:
        - account_information
        - counterparty_type
        - customer_id
        - profile
        - status
        - supported_rails
      type: object
      properties:
        description:
          description: 'Description of the counterparty. '
          type: string
        id:
          description: Unique Identifier for the counter party
          type: string
          readOnly: true
        customer_id:
          description: The customer to which this counter party will be registered for use.
          type: string
        counterparty_type:
          description: >-
            The type of counterparty will determine the available rails for
            sending or receiving funds. See the guides for more detailed
            explanation of counterparty types.
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        status:
          description: >+
            Counterparty status determines options available for use on the
            counterparty. 

            * `ACTIVE` - Counterparty is open and available for use for
            withdrawal or deposits

            * `CLOSED` - Counterparty is permanently closed, no further actions
            can be performed on the Counterparty. 

            * `PENDING` - Counterparty is under additional review prior to
            moving to the `OPEN` or `CLOSED` state. No actions can be performed
            on the Counterparty in this state  

            * `FROZEN` - Counterparty has been temporarily locked for all
            actions. 

            * `EDD` -  Counterparty requires enhanced due diligence to be
            performed. The counterparty will operate as if active but may
            transition to `FROZEN` or `CLOSED` post due-diligence. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            counterparty is available for use.  

          type: string
          readOnly: true
          enum:
            - ACTIVE
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        supported_rails:
          description: >-
            The rails required for this counterparty. Rail selection will
            determine data requirements. See guides for full breakdowns.
          type: array
          items:
            description: >-
              The rails required for this counterparty. Rail selection will
              determine data requirements. See guides for full breakdowns.
            type: string
            default: '["ACH"]'
            enum:
              - ACH
          default:
            - ACH
        profile:
          $ref: '#/components/schemas/CounterPartyProfileFIATUS'
        account_information:
          $ref: '#/components/schemas/CounterPartyAccountFIATUSLINKED'
    CounterPartyIntermediary:
      description: >-
        Optional details of the intermediary (correspondent bank) institution
        when sending SWIFT payments. `SWIFT` must be added to the `support_rail`
        list in order to provide an intermediary
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
      discriminator:
        propertyName: intermediary_type
        mapping:
          FIAT_US: '#/components/schemas/CounterPartyIntermediaryFIATUS'
          FIAT_CA: '#/components/schemas/CounterPartyIntermediaryFIATCA'
          FIAT_EU: '#/components/schemas/CounterPartyIntermediaryFIATEU'
          FIAT_IN: '#/components/schemas/CounterPartyIntermediaryFIATIN'
          FIAT_GB: '#/components/schemas/CounterPartyIntermediaryFIATGB'
          FIAT_BS: '#/components/schemas/CounterPartyIntermediaryFIATBS'
          FIAT_CN: '#/components/schemas/CounterPartyIntermediaryFIATCN'
          FIAT_HK: '#/components/schemas/CounterPartyIntermediaryFIATHK'
          FIAT_SG: '#/components/schemas/CounterPartyIntermediaryFIATSG'
          FIAT_JP: '#/components/schemas/CounterPartyIntermediaryFIATJP'
          FIAT_MY: '#/components/schemas/CounterPartyIntermediaryFIATMY'
          FIAT_PA: '#/components/schemas/CounterPartyIntermediaryFIATPA'
    CounterPartyIntermediaryFIATBS:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATCA:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATCN:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATEU:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATGB:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATHK:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATIN:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATJP:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATMY:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATPA:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATSG:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
        - swift_bic
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: Intermediary SWIFT/BIC Number
          type: string
    CounterPartyIntermediaryFIATUS:
      required:
        - asset_type_id
        - institution_name
        - intermediary_type
      type: object
      properties:
        intermediary_type:
          description: Intermediary type. This determines the asset type being sent.
          type: string
          enum:
            - FIAT_US
            - FIAT_CA
        asset_type_id:
          description: Asset type to send to the intermediary.
          type: string
          readOnly: true
        institution_name:
          description: Intermediary Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
        swift_bic:
          description: >-
            Intermediary SWIFT/BIC Number. Either this or the routing number
            much be provided.
          type: string
        routing_number:
          description: >-
            Intermediary routing number. Either this or the SWIFT BIC must be
            provided.
          type: string
    CounterPartyProfileCRYPTO:
      description: >-
        Details of the counterparty whom is sending in funds. See the API Guides
        for a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            The name of the counterparty who is sending/receiving these funds
            (e.g. Anchorage Digital, Coinbase, John Doe etc)
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: >-
            Line of Business of the counterparty who is sending/receiving these
            funds (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATBS:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATCA:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATCN:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATEU:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - line_of_business
        - name
        - profile_type
        - relationship_to_customer
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATGB:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATHK:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATIN:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - line_of_business
        - name
        - profile_type
        - relationship_to_customer
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATJP:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATMY:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATPA:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATSG:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    CounterPartyProfileFIATUS:
      description: >-
        Details of the counter party account holder. Required fields are
        determined by the combination of required rails. See the API Guides for
        a full documented breakdown of required fields.
      required:
        - address
        - name
        - profile_type
      type: object
      properties:
        profile_type:
          description: 'The profile type of the counterparty sending/receiving these funds. '
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        name:
          description: >-
            Name of the counterparty (individual or business name). Should match
            the name on the destination account if sending funds.
          type: string
        email:
          description: >-
            The email address of the counterparty who is sending/receiving these
            funds.
          type: string
        telephone_number:
          description: >-
            The Telephone Number in E.164 format of the counterparty who is
            sending/receiving these funds.
          type: string
        tax_reference_number:
          description: >-
            The tax reference number of the counterparty who is
            sending/receiving these funds. (Corporations - EIN, FEIN, TIN, etc.
            / Individuals = SSN, ITIN, SIN, National Insurance Number etc). For
            large value payments, providing this info can significantly
            streamline processing times.
          type: string
        date_of_birth:
          description: >-
            RFC3339 (YYYY-MM-DD) Date of Birth of the counterparty if they are
            an individual.
          type: string
          format: date
        address:
          $ref: '#/components/schemas/address'
        line_of_business:
          description: Line of Business of the counterparty (if they are a business)
          type: string
          enum:
            - ARTS_AND_ANTIQUES
            - AGRICULTURE
            - AUDIT_VIDEO
            - AUTOMOTIVE
            - BANK_CREDIT_UNION
            - BIOTECH_PHARMACEUTICAL
            - BOOKSELLER
            - CONSTRUCTION
            - CASINOS_GAMBLING
            - CLOTHING
            - CONSULTING_PROFESSIONAL_SERVICES
            - CRYPTOCURRENCY
            - ECIGARETTES_TOBACCO
            - ENERGY_CHEMICAL_FUEL
            - ENGINEERING
            - ADULT_ENTERTAINMENT
            - FINANCIAL_AND_CORPORATE_SERVICES
            - FOOD_AND_BEVERAGE
            - FREIGHT_MARINE_SHIPPING_SERVICES
            - GIFTWARE_SEASONAL
            - GOVERNMENT_PUBLIC_SERVICES
            - HIGH_TECH_SOFTWARE_TELECOMS
            - HOSPITALITY
            - HOUSEHOLD_GOOD_FURNITURE
            - HUMAN_RESOURCE_SERVICES
            - INDUSTRIAL_EQUIPMENT
            - INFORMATION_TECHNOLOGY
            - INSURANCE
            - JEWELLERY_OPTICAL
            - LAW
            - MANUFACTURING
            - MARKETING
            - MEDIA_PUBLISHING
            - MEDICAL_HEALTHCARE
            - MEDICAL_TOURISM
            - MINING
            - MONEY_SERVICE_BUSINESS
            - NON_PROFIT_CHARITY
            - ONLINE_RETAIL
            - PAYROLL
            - PENSION
            - PERSONAL_CARE_PRODUCTS
            - PHOTOGRAPHY
            - REAL_ESTATE
            - RECREATIONAL_ACTIVITIES
            - RELIGIOUS_ORGANISATION
            - RETAIL
            - SECURITY
            - SPORTING_RECREATIONAL_PRODUCTS
            - TRANSPORT
            - UNIVERSITY_EDUCATION
            - UTILITIES
            - WASTE_MANAGEMENT
            - WINE_LIQUOR
            - TECHNICAL_SUPPORT
            - OTHER
        relationship_to_customer:
          description: Relationship of the customer to the counterparty
          type: string
          enum:
            - SPOUSE
            - EX_SPOUSE
            - CHILDREN
            - PARENT
            - SIBLING
            - RELATIVE
            - SELF
            - FRIEND
            - BUSINESS_PARTNER
            - CUSTOMER
            - EMPLOYEE
            - BRANCH_OFFICE
            - SUBSIDIARY_COMPANY
            - HOLDING_COMPANY
            - SUPPLIER
            - CREDITOR
            - DEBTOR
            - FRANCHISEE
            - NOT_RELATED
    address:
      description: The address of the counter party who is sending/receiving these funds.
      required:
        - country_code
      type: object
      properties:
        unit_number:
          description: Unit Number
          type: string
        address_line1:
          description: Address Line 1
          type: string
        address_line2:
          description: Address Line 2
          type: string
        address_line3:
          description: Address Line 3
          type: string
        city:
          description: City
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        postal_code:
          description: Postal / Zip Code
          type: string
        country_code:
          description: >-
            Country Code (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    CounterPartyLinkingDetails:
      required:
        - linking_provider
      type: object
      properties:
        linking_provider:
          description: >-
            The provider for which linking instructions are required. At present
            only MX is supported
          type: string
          enum:
            - MX
      discriminator:
        propertyName: linking_provider
        mapping:
          MX: '#/components/schemas/CounterPartyLinkingDetailsMX'
    CounterPartyLinkingDetailsMX:
      required:
        - is_mobile_webview
        - linking_provider
        - mx_widget_url
        - ui_message_webview_url_scheme
      type: object
      properties:
        linking_provider:
          description: >-
            The provider for which linking instructions are required. At present
            only MX is supported
          type: string
          enum:
            - MX
        is_mobile_webview:
          description: >-
            Renders the widget in a mobile WebView. Executes URL updates in
            place of the JavaScript event postMessages.
          type: boolean
        ui_message_webview_url_scheme:
          description: Used as a redirect destination at the end of OAuth,
          type: string
        mx_widget_url:
          description: >-
            Single use MX widget URLs for use in the front end. You must fetch a
            new widget URL each time you load the widget.
          type: string
          readOnly: true
    CounterPartyLinkingConnect:
      required:
        - linking_provider
      type: object
      properties:
        linking_provider:
          description: >-
            The provider for which linking instructions are required. At present
            only MX is supported
          type: string
          enum:
            - MX
      discriminator:
        propertyName: linking_provider
        mapping:
          MX: '#/components/schemas/CounterPartyLinkingConnectMX'
    CounterPartyLinkingConnectMX:
      required:
        - account_link_id
        - linking_provider
      type: object
      properties:
        linking_provider:
          description: >-
            The provider for which linking instructions are required. At present
            only MX is supported
          type: string
          enum:
            - MX
        account_link_id:
          description: >-
            Establish a connections to an account taken from the
            `/link/accounts` call
          type: string
    CounterPartyLinkingAccounts:
      required:
        - linking_provider
      type: object
      properties:
        linking_provider:
          description: Which provider was used when generating linking instructions
          type: string
          enum:
            - MX
      discriminator:
        propertyName: linking_provider
        mapping:
          MX: '#/components/schemas/CounterPartyLinkingAccountsMX'
    CounterPartyLinkingAccountsMX:
      required:
        - available_accounts
        - linking_provider
        - member_guid
      type: object
      properties:
        linking_provider:
          description: Which provider was used when generating linking instructions
          type: string
          enum:
            - MX
        member_guid:
          description: >-
            The `member_guid` from the `mx/connect/memberConnected` event
            generated in the UI by the mx widget
          type: string
        available_accounts:
          description: >-
            The list of accounts that are available for linking. Use the connect
            operation to connect the desired account from this list with the
            counterparty
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CounterPartyLinkingAccountsMXAbbrev'
    CounterPartyLinkingAccountsMXAbbrev:
      description: >-
        The list of accounts that are available for linking. Use the connect
        operation to connect the desired account from this list with the
        counterparty
      required:
        - account_link_id
        - account_name
        - account_number
      type: object
      properties:
        account_link_id:
          description: Unique ID for this account required when finalising the connection
          type: string
        account_name:
          description: Account name
          type: string
        account_number:
          description: Abbreviated account number (e.g. last 4 characters)
          type: string
      readOnly: true
    ApplicationBase:
      required:
        - id
      type: object
      properties:
        id:
          description: Unique Identifier for the application
          type: string
          readOnly: true
    ResponseApplicationBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationBase'
    AccountOpen:
      description: Details of the account to open for the customer
      required:
        - account_id
        - asset_type_id
        - product_id
      type: object
      properties:
        account_id:
          description: >-
            The identifier you wish to use to uniquely identify this account.
            The account id follows the [External
            Identifier](https://docs.layer2financial.com/guides/externalidentifiers/)
            pattern. 
          type: string
        product_id:
          description: >
            Select the type of account being opened. You can customise and/or
            create new product offerings by visiting the [Management
            Interface](https://management.layer2financial.com)


            Pre configured products that are available for use are 

            - `DEPOSIT_BASIC`

            - `PAYMENT_BASIC`
          type: string
        asset_type_id:
          description: >
            Select the asset type of the account being opened. Asset type
            selection is not open ended, it must be configured per product via
            the [Management Interface](https://management.layer2financial.com). 


            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
    ApplicationCorporation:
      required:
        - account_to_open
        - application_type
        - customer_details
        - customer_id
        - id
        - status
        - terms_and_conditions_accepted
      type: object
      properties:
        id:
          description: Unique Identifier for the application
          type: string
          readOnly: true
        status:
          description: Status of the application
          type: string
          readOnly: true
          enum:
            - INCOMPLETE
            - READY_FOR_SUBMISSION
            - SUBMITTED
            - PROCESSING
            - CHANGES_REQUESTED
            - REJECTED
            - APPROVED
        application_type:
          description: Type of Application (Individual or CorporationApplication)
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        account_to_open:
          $ref: '#/components/schemas/AccountOpen'
        terms_and_conditions_accepted:
          description: >-
            Set to true when the end customer accepts all terms and conditions
            for use of the platform. An application cannot be submitted until
            accepted.
          type: boolean
          default: false
        customer_id:
          description: >-
            The identifier you wish to use to uniquely identify this customer
            (applies to both individual and corporate customers). The customer
            ID follows the [External
            Identifier](https://docs.layer2financial.com/guides/externalidentifiers/)
            pattern. 
          type: string
        customer_details:
          $ref: '#/components/schemas/CorporationApplication'
    ApplicationIndividual:
      required:
        - account_to_open
        - application_type
        - customer_details
        - customer_id
        - id
        - status
        - terms_and_conditions_accepted
      type: object
      properties:
        id:
          description: Unique Identifier for the application
          type: string
          readOnly: true
        status:
          description: Status of the application
          type: string
          readOnly: true
          enum:
            - INCOMPLETE
            - READY_FOR_SUBMISSION
            - SUBMITTED
            - PROCESSING
            - CHANGES_REQUESTED
            - REJECTED
            - APPROVED
        application_type:
          description: Type of Application (Individual or CorporationApplication)
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        account_to_open:
          $ref: '#/components/schemas/AccountOpen'
        terms_and_conditions_accepted:
          description: >-
            Set to true when the end customer accepts all terms and conditions
            for use of the platform. An application cannot be submitted until
            accepted.
          type: boolean
          default: false
        customer_id:
          description: >-
            The identifier you wish to use to uniquely identify this customer
            (applies to both individual and corporate customers). The customer
            ID follows the [External
            Identifier](https://docs.layer2financial.com/guides/externalidentifiers/)
            pattern. 
          type: string
        customer_details:
          $ref: '#/components/schemas/IndividualApplication'
    CorporationApplication:
      description: Details of the corporation
      required:
        - registered_name
      type: object
      properties:
        registered_name:
          description: Corporate entity registered (legal) name
          type: string
        trading_name:
          description: Trading/'Doing Business As' name (if different to registered name)
          type: string
        registered_number:
          description: >-
            Government registered number of the corporate entity (Business EIN,
            Business Number, FEIN, Taxpayer ID etc)
          type: string
        registered_address:
          $ref: '#/components/schemas/registered_address'
        physical_address:
          $ref: '#/components/schemas/physical_address'
        telephone_number:
          description: Telephone Number in E.164 format
          type: string
        website_address:
          description: Website URL
          type: string
        state_of_incorporation:
          description: State / Province / Riding of Incorporation (2 digit code)
          type: string
        country_of_incorporation:
          description: >-
            Country of incorporation (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        corporate_entity_type:
          description: Type of corporate entity
          type: string
          enum:
            - C_CORP_PRIVATE
            - C_CORP_PUBLIC
            - HNWI
            - LLC
            - LLP
            - LP
            - S_CORP
            - SOLE_PROP
            - TRUST
            - NON_PROFIT
            - OTHER
        corporate_entity_type_description:
          description: Description of legal structure where entity type is `OTHER`
          type: string
        email_address:
          description: Business Email Address (for example support@acme.inc)
          type: string
        established_on:
          description: Date the business was established following RFC3339 (YYYY-MM-DD)
          type: string
        naics:
          description: NAICS Code
          type: string
        naics_description:
          description: NAICS Description
          type: string
        individuals:
          description: Beneficial Owners and Control Persons Associated to the corporation
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Individual'
        investment_profile:
          $ref: '#/components/schemas/ProfileCorporateInvesting'
        kyc_profile:
          $ref: '#/components/schemas/ProfileCorporateKYC'
    IndividualApplication:
      description: Details of the applying individual
      required:
        - first_name
        - last_name
      type: object
      properties:
        first_name:
          description: First name
          type: string
        middle_name:
          description: Middle Name(s) (if present)
          type: string
        last_name:
          description: Last name
          type: string
        email_address:
          description: Email Address
          type: string
        mailing_address:
          $ref: '#/components/schemas/mailing_address'
        telephone_number:
          description: Telephone Number in E.164 format
          type: string
        tax_reference_number:
          description: >-
            Tax reference number of the country (SSN, ITIN, SIN, National
            Insurance Number etc)
          type: string
        passport_number:
          description: Passport Number
          type: string
        nationality:
          description: >-
            Nationality (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        date_of_birth:
          description: 'RFC3339 (YYYY-MM-DD) Date of Birth '
          type: string
          format: date
        us_residency_status:
          description: US Residency Status
          type: string
          enum:
            - US_CITIZEN
            - RESIDENT_ALIEN
            - NON_RESIDENT_ALIEN
        employment_status:
          description: Employment Status
          type: string
          enum:
            - EMPLOYEE
            - SELF_EMPLOYED
            - RETIRED
            - UNEMPLOYED
            - OTHER
        employment_description:
          description: Employment (job) description.
          type: string
        employer_name:
          description: Employer name
          type: string
        occupation:
          description: Occupation
          type: string
        investment_profile:
          $ref: '#/components/schemas/ProfileIndividualInvesting'
        kyc_profile:
          $ref: '#/components/schemas/ProfileIndividualKYC'
    ProfileCorporateInvesting:
      description: Investment Profile of the corporation
      type: object
      properties:
        primary_source_of_funds:
          type: string
          enum:
            - EMPLOYMENT
            - SAVINGS
            - WINNINGS
            - MARITAL
            - REAL_ESTATE
            - TRUST
            - INVESTMENT
            - OTHER
            - COMPANY
            - COMPANY_CAPITAL
            - LOAN
            - PRIVATE_CAPITAL
            - GRANT
        total_investable_assets:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        total_assets:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        asset_allocation_to_crypto:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        investment_experience_crypto:
          type: string
          enum:
            - LITTLE
            - MODERATE
            - SIGNIFICANT
        investment_strategy_crypto:
          type: string
          enum:
            - LOW_RISK
            - MEDIUM_RISK
            - HIGH_RISK
            - OTHER
        initial_deposit_source:
          type: string
          enum:
            - DEPOSIT
            - WIRE
        initial_deposit_source_crypto_details:
          type: string
        initial_deposit_source_fiat_details:
          type: string
        ongoing_deposit_source:
          type: string
          enum:
            - DEPOSIT
            - WIRE
        frequency_of_crypto_transactions:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - BIWEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMI_ANNUALLY
        crypto_investment_plans:
          type: string
          enum:
            - CUSTODY
            - STAKING
            - TRADING
            - LENDING
            - BORROWING
        investment_proceeds_use:
          type: string
        expected_crypto_assets:
          type: string
        perform_transfers_with_unhosted_wallets:
          type: boolean
        known_unhosted_wallet_addresses:
          type: string
        trades_per_month:
          type: string
          enum:
            - UPTO_20
            - TWENTYONE_TO_30
            - THIRTYONE_TO_100
            - ONEHUNDREDANDONE_TO_200
            - TWOHUNDREDANDONE_TO_400
            - MORE_THAN_400
        usd_value_of_crypto:
          type: string
          enum:
            - UPTO_10K
            - TEN_TO_100K
            - ONEHUNDREDK_TO_1M
            - ONE_TO_10M
            - TEN_TO_50M
            - FIFTY_TO_250M
            - MORE_THAN_250M
        frequency_of_transactions:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - BIWEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMI_ANNUALLY
        monthly_crypto_investment_deposit:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        monthly_investment_deposit:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        monthly_crypto_deposits:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_deposits:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_crypto_investment_withdrawal:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        monthly_investment_withdrawal:
          type: string
          enum:
            - UPTO_1K
            - ONE_TO_100K
            - ONEHUNDREDK_TO_1M
            - MILLION_TO_5M
            - MORE_THAN_5M
        monthly_crypto_withdrawals:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        monthly_withdrawals:
          type: string
          enum:
            - UPTO_5
            - FIVE_TO_10
            - TEN_TO_25
            - MORE_THAN_25
        trade_internationally:
          type: boolean
        trade_jurisdictions:
          description: >-
            To which jurisdictions will the company trade with (2 Digit
            ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: array
          items:
            description: >-
              To which jurisdictions will the company trade with (2 Digit
              ISO31661-Alpha2 Format -
              https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            type: string
    ProfileCorporateKYC:
      description: KYC Profile of the corporation
      type: object
      properties:
        primary_business:
          type: string
          enum:
            - SOFTWARE
            - ATM
            - BROKER
            - CHARITY
            - COMMODITIES
            - DEFI_EXCHANGE
            - GOVERNMENT_FOREIGN
            - GOVERNMENT_US
            - HNWI
            - INSURANCE
            - ADVISOR
            - LOAN
            - MINER
            - NFT
            - NON_BANK_CUSTODIAN
            - PENSION
            - WHV
            - POOLED_INVESTMENT
            - PROP_TRADING
            - PUBLIC
            - SPV
            - STATE_FOREIGN
            - STATE_US
            - SUPRANATIONAL_BODY
            - PAYMENT_PROCESSOR
            - TOKEN_PROJECT
            - TRUST_PERSONAL
            - TRUST_CORP
            - BANK_US
            - BANK_FOREIGN
            - CRYPTO_MSB_US
            - CRYPTO_MSB_FOREIGN
            - NON_CRYPTO_MSB_US
            - NON_CRYPTO_MSB_FOREIGN
            - OTHER
        description_of_business_nature:
          type: string
        is_charitable:
          type: boolean
        business_jurisdictions:
          description: >-
            In what countries the corporation does business in (2 Digit
            ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: array
          items:
            description: >-
              In what countries the corporation does business in (2 Digit
              ISO31661-Alpha2 Format -
              https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            type: string
        funds_send_receive_jurisdictions:
          type: array
          items:
            type: string
        new_york_office:
          type: boolean
        engage_in_activities:
          type: array
          items:
            type: string
            enum:
              - NONE
              - ADULT_ENTERTAINMENT
              - DRUGS
              - FIREARMS
              - GAMBLING
              - MARIJUANA
              - TUMBLING
        regulated_status:
          type: string
          enum:
            - REGULATED
            - REGISTERED
            - LICENSED
            - NONE
            - NOT_REQUIRED
        regulation_agency:
          type: string
        regulation_agency_regulation_number:
          type: string
        control_exemption_reason:
          type: string
          enum:
            - REGULATED
            - PUBLICLY_TRADED
            - PUBLIC_SUBSIDIARY
            - PUBLIC_ACCOUNTING
            - INSURANCE
            - GOVERNMENT_AGENCY
            - BANK_HOLDING
            - SAVINGS_LOAN
            - FMU
            - FOREIGN_PRIVATE_BANK
            - FOREIGN_INSTITUTION
            - ISSUER
            - INVESTMENT
            - COMMODITIES
            - POOLED_INVESTMENT
            - NON_GOVERNMENT_SUBDIVISION
            - NON_ENTITY
            - NONE
        vendors_and_counterparties:
          type: string
    RequestApplication:
      required:
        - application_type
      type: object
      properties:
        application_type:
          type: string
      discriminator:
        propertyName: application_type
        mapping:
          INDIVIDUAL: '#/components/schemas/ApplicationIndividual'
          CORPORATION: '#/components/schemas/ApplicationCorporation'
    physical_address:
      description: Physical Address if different to registered address
      type: object
      properties:
        unit_number:
          description: Unit Number
          type: string
        address_line1:
          description: Address Line 1
          type: string
        address_line2:
          description: Address Line 2
          type: string
        address_line3:
          description: Address Line 3
          type: string
        city:
          description: City
          type: string
        state:
          description: >-
            State / Province (2 Digit subdivision component of the ISO 3166-2
            code, which consists of the last two characters.
            https://en.wikipedia.org/wiki/ISO_3166-2
          type: string
        postal_code:
          description: Postal / Zip Code
          type: string
        country_code:
          description: >-
            Country Code (2 Digit ISO31661-Alpha2 Format -
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
    ApplicationAccessCode:
      required:
        - access_code
        - expiry
        - id
      type: object
      properties:
        id:
          description: Unique Identifier for the application
          type: string
          readOnly: true
        access_code:
          description: Access code for use with the Layer2 Customer Onboarding SDK
          type: string
          readOnly: true
        expiry:
          description: >-
            Date time the access code will expire. At this point a new access
            code must be generated. Visit the [Management
            Interface](https://management.layer2financial.com) to configure
            expiry settings.
          type: string
          format: date-time
          readOnly: true
    ResponseApplicationAccessCode:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationAccessCode'
    AccountBase:
      required:
        - id
      type: object
      properties:
        id:
          description: >-
            Unique Identifier for the account - defined by the Client during
            account open
          type: string
    ResponseAccountBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountBase'
    RequestAccountOpen:
      required:
        - account_to_open
        - customer_id
      type: object
      properties:
        customer_id:
          description: >-
            Customer ID of the customer for whom the account is being opened
            (see /customers)
          type: string
        account_to_open:
          $ref: '#/components/schemas/AccountOpen'
    AddressLease:
      required:
        - asset_type_id
        - id
        - lease_enforced
        - wallet_address
      type: object
      properties:
        id:
          description: Unique address lease identifier
          type: string
        wallet_address:
          description: >-
            Issued address for the receipt of funds. Depending on client
            configuration, ensure to check if there is a limited use lease
            applied to this address and alert end customers to the limitations
            if so
          type: string
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        lease_enforced:
          description: >-
            Determines if the address will be permanently linked to the
            requesting account (fixed), or if the association is temporary
            (rotating).


            If `false`, there are no lease conditions and the address will be
            permanently linked to this account. 


            If `true`, there are lease conditions. When these conditions are
            met, the address will be relinquished and will be reissued to other
            account holders. Leases can be expired based on Time, Number of
            Transactions or Amount (see below). 


            The rotating address model is specifically for account based
            blockchains (e.g. Ethereum). It is useful in situations where you
            need to optimize blockchain fees (i.e. have a single account shared
            by multiple customers), if you want to provide some level of
            opaqueness to the funds held by an account holder, or where is does
            not make sense to provide an address for single time usage (e.g.
            receiving a one time payment). 
          type: boolean
        lease_end_date:
          description: >-
            If a lease is enforced, the date and time the lease expires. After
            this date the address can no longer be used to receive funds and a
            new address must be requested. Null signifies no time limit on the
            lease
          type: string
          format: date-time
        lease_transaction_limit:
          description: >-
            The number of times this address can be used to receive funds before
            the lease is retired. This supersedes the lease end date should it
            be set (i.e. once the transaction limit is reached the lease is
            expired even if time remains for usage). Null signifies no limits on
            the number of uses.
          type: integer
          format: int32
        lease_value_limit:
          description: >-
            The value of funds that can be sent to this address before the lease
            is retired. This supersedes the lease end date should it be set
            (i.e. once the transaction value is reached the lease is expired
            even if time remains for usage). Null signifies no transaction value
            limit.
          type: number
    ResponseAddressLease:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AddressLease'
    RequestPaymentAddress:
      required:
        - amount
      type: object
      properties:
        amount:
          description: >-
            Expected amount of payment (which can be split over multiple
            transactions)
          type: string
        payor_id:
          description: >-
            The payor to associate with this payment, generated using [create
            payor](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/).
            Only available with the payments product
          type: string
        payment_reference:
          description: >-
            Payment reference to associate with this payment. Only available
            with the payments product
          type: string
    PatchCustomer:
      description: Follow standard patch guidance
      type: object
      properties:
        field:
          description: Customer Field To Be Patched
          type: string
        value:
          description: New value
          type: string
    RequestCustomerPatch:
      type: object
      properties:
        updates:
          description: Follow standard patch guidance
          type: array
          items:
            $ref: '#/components/schemas/PatchCustomer'
        updated_by:
          description: >-
            Description or reference of the system/person who requested the
            change
          type: string
        reason:
          description: 'String representing the reason for the change. '
          type: string
    PatchGeneric:
      description: Follow standard patch guidance
      type: object
      properties:
        field:
          description: Field To Be Patched
          type: string
        value:
          description: New value
          type: string
    RequestPatchGeneric:
      type: object
      properties:
        updates:
          description: Follow standard patch guidance
          type: array
          items:
            $ref: '#/components/schemas/PatchGeneric'
    PatchCounterparty:
      description: Follow standard patch guidance
      type: object
      properties:
        field:
          description: Counterparty Field To Be Patched
          type: string
        value:
          description: New value
          type: string
    RequestCounterpartyPatch:
      type: object
      properties:
        updates:
          description: Follow standard patch guidance
          type: array
          items:
            $ref: '#/components/schemas/PatchCounterparty'
        updated_by:
          description: >-
            Description or reference of the system/person who requested the
            change
          type: string
        reason:
          description: 'String representing the reason for the change. '
          type: string
    PatchApplication:
      description: Follow standard patch guidance
      type: object
      properties:
        field:
          description: Application Field To Be Patched
          type: string
        value:
          description: New value
          type: string
    RequestApplicationPatch:
      type: object
      properties:
        updates:
          description: Follow standard patch guidance
          type: array
          items:
            $ref: '#/components/schemas/PatchApplication'
    PatchIndividual:
      description: Follow standard patch guidance
      type: object
      properties:
        field:
          description: Field To Be Patched
          type: string
        value:
          description: New value
          type: string
    RequestIndividualPatch:
      type: object
      properties:
        updates:
          description: Follow standard patch guidance
          type: array
          items:
            $ref: '#/components/schemas/PatchIndividual'
    PatchAccount:
      description: Follow standard patch guidance
      type: object
      properties:
        field:
          description: Account Field To Be Patched
          type: string
        value:
          description: New value
          type: string
    RequestAccountPatch:
      type: object
      properties:
        updates:
          description: Follow standard patch guidance
          type: array
          items:
            $ref: '#/components/schemas/PatchAccount'
        updated_by:
          description: >-
            Description or reference of the system/person who requested the
            change
          type: string
        reason:
          description: 'String representing the reason for the change. '
          type: string
    WITHDRAWAL_CRYPTO:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WithdrawalCrypto'
    WITHDRAWAL_ACH:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WithdrawalACH'
    WITHDRAWAL_FEDWIRE:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WithdrawalFedwire'
    WITHDRAWAL_SWIFT:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WithdrawalSwift'
    Page:
      description: >-
        See the
        [pagination](https://docs.layer2financial.com/guides/pagination/)
        section for additional details on the generic pagination approach.
      required:
        - first
        - last
        - next
        - prev
        - self
      type: object
      properties:
        self:
          description: endpoint to the current page of results
          type: string
        first:
          description: endpoint to the first page of results
          type: string
        prev:
          description: endpoint to the previous page of results
          type: string
        next:
          description: endpoint to the next page of results
          type: string
        last:
          description: endpoint to the last page of results
          type: string
    ResponseSubscriptions:
      required:
        - data
        - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SubscriptionList'
        links:
          $ref: '#/components/schemas/Page'
    SubscriptionList:
      required:
        - subscriptions
      type: object
      properties:
        subscriptions:
          description: Subscription List
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    ResponseSettlement:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Settlement'
    Settlement:
      type: object
      properties:
        id:
          description: Settlement ID
          type: string
        settlement_status:
          description: >-
            Status of this settlement. Processed settlements are complete and
            funds dispersed
          type: string
          enum:
            - INITIALIZED
            - DELIVERING
            - CONVERTING
            - SETTLED
        settlement_executed_timestamp:
          description: Time when this settlement was executed (when funds were dispersed)
          type: string
          format: date-time
        settlement_asset_type:
          description: Asset type of the settlement
          type: string
          enum:
            - FIAT
            - BITCOIN
            - ETHEREUM
            - POLYGON
        settlement_currency:
          description: Currency of the settlement
          type: string
        settlement_amount:
          description: >-
            Full amount of the settlement that was performed (prior to any fee
            deductions by the receiving institution)
          type: number
        settlement_details:
          description: Breakdown of the transactions that were included in this settlement
          type: array
          items:
            $ref: '#/components/schemas/SettlementDetails'
    SettlementDetails:
      description: Breakdown of the transactions that were included in this settlement
      type: object
      properties:
        source_account_customer_id:
          description: Customer ID of the source account holder
          type: string
        source_account_id:
          description: Source account from which exchange funds were withdrawn
          type: string
        source_asset_type:
          description: Source account asset type
          type: string
          enum:
            - FIAT
            - BITCOIN
            - ETHEREUM
            - POLYGON
        source_currency:
          description: Source account currency
          type: string
        source_amount:
          description: Source account amount withdrawn
          type: number
        destination_account_customer_id:
          description: Customer ID of the destination account holder
          type: string
        destination_account_id:
          description: Destination account into which exchange funds are deposited
          type: string
        destination_asset_type:
          description: Destination account asset type
          type: string
          enum:
            - FIAT
            - BITCOIN
            - ETHEREUM
            - POLYGON
        destination_currency:
          description: Destination account currency
          type: string
        destination_amount:
          description: Destination account amount deposited
          type: number
        payment_payor_id:
          description: >-
            Optional Payor ID who performed the initial deposit (only on payment
            accounts)
          type: string
        payment_reference_id:
          description: >-
            Optional Payment Reference ID associated to the initial deposit
            (only on payment accounts)
          type: string
        payment_expected_amount:
          description: Optional expected amount for this payment (only on payment accounts)
          type: string
    CustomerList:
      required:
        - customers
      type: object
      properties:
        customers:
          description: Customer List
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    ResponseCustomers:
      required:
        - data
        - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomerList'
        links:
          $ref: '#/components/schemas/Page'
    CUSTOMER_INDIVIDUAL:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IndividualCustomer'
    CUSTOMER_CORPORATION:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CorporationCustomer'
    ResponseIndividual:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Individual'
    CounterpartyList:
      required:
        - counterparties
      type: object
      properties:
        counterparties:
          description: Counterparty List
          type: array
          items:
            $ref: '#/components/schemas/CounterParty'
    ResponseCounterparties:
      required:
        - data
        - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CounterpartyList'
        links:
          $ref: '#/components/schemas/Page'
    ResponseCounterparty:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CounterParty'
    INDIVIDUAL:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationIndividual'
    CORPORATION:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationCorporation'
    ApplicationFieldError:
      description: List of validation errors with the application.
      required:
        - field_name
        - field_status
      type: object
      properties:
        description:
          description: Additional supporting error details
          type: string
        field_name:
          description: Application field to be corrected
          type: string
          readOnly: true
          enum:
            - customer_id
            - account_to_open
            - product_type
            - asset_type
            - id
            - registered_name
            - trading_name
            - registered_number
            - registered_address.unit_number
            - registered_address.address_line1
            - registered_address.address_line2
            - registered_address.address_line3
            - registered_address.city
            - registered_address.state
            - registered_address.postal_code
            - registered_address.country_code
            - telephone_number
            - website_address
            - state_of_incorporation
            - country_of_incorporation
            - corporate_entity_type
            - contact_title
            - contact_first_name
            - contact_last_name
            - contact_telephone_number
            - contact_email_address
            - physical_address.unit_number
            - physical_address.address_line1
            - physical_address.address_line2
            - physical_address.address_line3
            - physical_address.city
            - physical_address.state
            - physical_address.postal_code
            - physical_address.country_code
            - primary_business
            - description_of_business_nature
            - is_charitable
            - business_jurisdictions
            - funds_send_receive_jurisdictions
            - new_york_office
            - engage_in_activities
            - regulated_status
            - regulation_agency_regulation_number
            - control_exemption_reason
            - vendors_and_counterparties
            - primary_source_of_funds
            - total_investable_assets
            - total_assets
            - asset_allocation_to_crypto
            - investment_experience_crypto
            - investment_strategy_crypto
            - initial_deposit_source
            - ongoing_deposit_source
            - frequency_of_crypto_transactions
            - crypto_investment_plans
            - investment_proceeds_use
            - expected_crypto_assets
            - perform_transfers_with_unhosted_wallets
            - known_unhosted_wallet_addresses
            - trades_per_month
            - usd_value_of_crypto
            - frequency_of_transactions
            - monthly_crypto_investment_deposit
            - monthly_investment_deposit
            - monthly_crypto_deposits
            - monthly_deposits
            - monthly_crypto_investment_withdrawal
            - monthly_investment_withdrawal
            - monthly_crypto_withdrawals
            - monthly_withdrawals
            - trade_internationally
            - trade_jurisdictions
        field_status:
          description: Error status of the field
          type: string
          readOnly: true
          enum:
            - INCOMPLETE
            - READY_FOR_SUBMISSION
            - CHANGES_REQUESTED
            - APPROVED
      readOnly: true
    ApplicationState:
      required:
        - account_to_open
        - application_type
        - customer_id
        - id
        - status
        - terms_and_conditions_accepted
      type: object
      properties:
        id:
          description: Unique Identifier for the application
          type: string
          readOnly: true
        status:
          description: Status of the application
          type: string
          readOnly: true
          enum:
            - INCOMPLETE
            - READY_FOR_SUBMISSION
            - SUBMITTED
            - PROCESSING
            - CHANGES_REQUESTED
            - REJECTED
            - APPROVED
        application_type:
          description: Type of Application (Individual or CorporationApplication)
          type: string
          enum:
            - INDIVIDUAL
            - CORPORATION
        account_to_open:
          $ref: '#/components/schemas/AccountOpen'
        terms_and_conditions_accepted:
          description: >-
            Set to true when the end customer accepts all terms and conditions
            for use of the platform. An application cannot be submitted until
            accepted.
          type: boolean
          default: false
        customer_id:
          description: >-
            The identifier you wish to use to uniquely identify this customer
            (applies to both individual and corporate customers). The customer
            ID follows the [External
            Identifier](https://docs.layer2financial.com/guides/externalidentifiers/)
            pattern. 
          type: string
        application_errors:
          description: List of errors with the application.
          type: array
          readOnly: true
          items:
            description: List of errors with the application.
            type: string
            readOnly: true
            enum:
              - MISSING_BENEFICIAL_OWNER
              - MISSING_OFFICER
              - MISSING_PERSON
        application_validation_errors:
          description: List of validation errors with the application.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApplicationFieldError'
        application_document_errors:
          description: List of document errors with the application.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/DocumentError'
        individual_errors:
          description: >-
            ONLY for corporate applications. List of errors for the submitted
            individuals
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/IndividualState'
    DocumentError:
      required:
        - document
        - id
        - status
      type: object
      properties:
        description:
          description: Additional supporting error details
          type: string
        id:
          description: Unique ID of the document
          type: string
          readOnly: true
        status:
          description: Status of the document upload
          type: string
          enum:
            - MISSING
            - SUBMITTED
            - CHANGES_REQUESTED
            - REJECTED
            - APPROVED
        document:
          description: Document Type the error occurred on
          type: string
          readOnly: true
          enum:
            - DRIVERS_LICENCE_FRONT
            - DRIVERS_LICENCE_BACK
            - GOVERNMENT_ID_FRONT
            - GOVERNMENT_ID_BACK
            - PASSPORT
            - UTILITY_BILL
            - FINANCIAL_STATEMENT
            - LEASE_AGREEMENT
            - SOCIAL_SECURITY_CARD
            - POWER_OF_ATTORNEY
            - ANNUAL_REPORT
            - INCORPORATION_DOCUMENTS
            - PARTNERSHIP_AGREEMENT
            - LLC_AGREEMENT
    IndividualFieldError:
      required:
        - field_name
        - field_status
      type: object
      properties:
        description:
          description: Additional supporting error details
          type: string
        field_name:
          description: Individual field to be corrected
          type: string
          readOnly: true
          enum:
            - id
            - person_role
            - person_status
            - first_name
            - middle_name
            - last_name
            - email_address
            - mailing_address.unit_number
            - mailing_address.address_line1
            - mailing_address.address_line2
            - mailing_address.address_line3
            - mailing_address.city
            - mailing_address.state
            - mailing_address.postal_code
            - mailing_address.country_code
            - telephone_number
            - tax_reference_number
            - passport_number
            - nationality
            - date_of_birth
            - percentage_ownership
            - title
            - us_residency_status
        field_status:
          description: Error status of the field
          type: string
          readOnly: true
          enum:
            - INCOMPLETE
            - READY_FOR_SUBMISSION
            - CHANGES_REQUESTED
            - APPROVED
    IndividualState:
      description: >-
        ONLY for corporate applications. List of errors for the submitted
        individuals
      required:
        - id
      type: object
      properties:
        id:
          description: Unique ID of the Individual
          type: string
          readOnly: true
        individual_validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/IndividualFieldError'
        individual_document_errors:
          type: array
          items:
            $ref: '#/components/schemas/DocumentError'
      readOnly: true
    ResponseApplicationState:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationState'
    Account:
      required:
        - asset_type_id
        - available_balance
        - current_balance
        - customer_id
        - id
        - product_id
        - product_type
        - status
      type: object
      properties:
        id:
          description: >-
            Unique Identifier for the account - defined by the Client during
            account open
          type: string
        status:
          description: >+
            Account Status - will determine servicing options on the account. 

            * `OPEN` - Account is open and available for use in line with its
            product configuration

            * `CLOSED` - Account is permanently closed, no further actions can
            be performed on the account.  

            * `PENDING` - Account is under additional review prior to moving to
            the OPEN or CLOSED state. No actions can be performed on the
            account.  

            * `FROZEN` - Account has been temporarily locked for all actions
            (deposits, transfers, exchanges and withdrawals).  

            * `EDD` -  Account (and/or customer) requires enhanced due diligence
            to be performed. The accounts will operate as if frozen. 

            * `DORMANT` - No activity has been seen in the last 12 months. The
            account is available for use.  

          type: string
          readOnly: true
          enum:
            - OPEN
            - CLOSED
            - FROZEN
            - PENDING
            - EDD
            - DORMANT
        asset_type_id:
          description: >
            Asset type IDs follow a simple structure as follows:
            `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to
            test with include 

            - `ETHEREUM_SEPOLIA_ETH`

            - `ETHEREUM_SEPOLIA_USDC`

            - `SOLANA_DEVNET_SOL`

            - `BITCOIN_TESTNET_BTC`

            - `FIAT_TESTNET_USD`

            - `FIAT_TESTNET_USD`

            - `FIAT_MAINNET_USD`

            - `FIAT_TESTNET_EUR`
          type: string
        product_type:
          description: >-
            * `CLIENT` - Accounts at the Client level for managing client
            treasury operations

            * `DEPOSIT` - Accounts at the Customer level account for managing
            customer funds on platform

            * `VIRTUAL` - Accounts at the Customer level account for tracking
            externally managed customer funds 


            See [account
            concepts](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/)
            for additional details on these product types
          type: string
          readOnly: true
          enum:
            - CLIENT
            - DEPOSIT
            - VIRTUAL
        product_id:
          description: >-
            Client Product configuration this account respects. These are
            configured in the management portal. Default products include
            `BASIC_DEPOSIT`
          type: string
        customer_id:
          description: Customer ID for whom the account belongs to
          type: string
        current_balance:
          description: Full balance on the account including funds on hold
          type: number
        available_balance:
          description: Balance available for immediate spending (excludes held funds)
          type: number
    AccountList:
      required:
        - accounts
      type: object
      properties:
        accounts:
          description: Account List
          type: array
          items:
            $ref: '#/components/schemas/Account'
    ResponseAccounts:
      required:
        - data
        - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountList'
        links:
          $ref: '#/components/schemas/Page'
    ResponseAccount:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Account'
    ResponseTransactionPayments:
      required:
        - data
        - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionPaymentList'
        links:
          $ref: '#/components/schemas/Page'
    TransactionOriginator:
      description: >-
        Where the type of transaction is `TRANSFER_IN`, the available details of
        the originator of the transaction
      required:
        - originator_type
      type: object
      properties:
        originator_type:
          description: Type of transaction originator
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        rail_reference:
          description: >-
            Rail specific reference if one exists (e.g. blockchain hash, fedwire
            ID etc)
          type: string
        rail_originator_memo:
          description: >-
            Any reference provided by the originator, typically only used on
            FIAT rails (e.g. transaction Memo etc).
          type: string
      discriminator:
        propertyName: originator_type
        mapping:
          FIAT_CA: '#/components/schemas/TransactionOriginatorFIATCA'
          FIAT_US: '#/components/schemas/TransactionOriginatorFIATUS'
          CRYPTO: '#/components/schemas/TransactionOriginatorCRYPTO'
    TransactionOriginatorAccountCRYPTO:
      description: Available details of the originator wallet/address
      type: object
      properties:
        blockchain_address:
          description: Originator Blockchain address
          type: string
        wallet_type:
          description: Originator wallet type (e.g. Custodian, Private Wallet etc)
          type: string
          enum:
            - INSTITUTION
            - OTHER
            - UNKNOWN
        institution_name:
          description: Originator Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    TransactionOriginatorAccountFIATCA:
      description: Available details of the originator account
      required:
        - institution_number
        - transit_number
      type: object
      properties:
        account_number:
          description: Originator account number
          type: string
        institution_number:
          description: Originator institution number
          type: string
        transit_number:
          description: Originator transit number
          type: string
        swift_bic:
          description: Originator SWIFT/BIC Number
          type: string
        institution_name:
          description: Originator Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    TransactionOriginatorAccountFIATUS:
      description: Available details of the originator account
      type: object
      properties:
        account_number:
          description: Originator account number
          type: string
        type:
          description: Originator account type.
          type: string
          enum:
            - CHECKING
            - SAVING
        routing_number:
          description: Originator routing number
          type: string
        swift_bic:
          description: Originator SWIFT/BIC Number
          type: string
        institution_name:
          description: Originator Institution Name (e.g. Bank of America)
          type: string
        institution_address:
          $ref: '#/components/schemas/institution_address'
    TransactionOriginatorCRYPTO:
      required:
        - originator_type
        - profile
        - rail
        - wallet_information
      type: object
      properties:
        originator_type:
          description: Type of transaction originator
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        rail_reference:
          description: >-
            Rail specific reference if one exists (e.g. blockchain hash, fedwire
            ID etc)
          type: string
        rail_originator_memo:
          description: >-
            Any reference provided by the originator, typically only used on
            FIAT rails (e.g. transaction Memo etc).
          type: string
        rail:
          description: 'The rail on which this transaction arrived. '
          type: string
          enum:
            - CRYPTO
        profile:
          $ref: '#/components/schemas/TransactionOriginatorProfileCRYPTO'
        wallet_information:
          $ref: '#/components/schemas/TransactionOriginatorAccountCRYPTO'
    TransactionOriginatorFIATCA:
      required:
        - account_information
        - originator_type
        - profile
        - rail
      type: object
      properties:
        originator_type:
          description: Type of transaction originator
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        rail_reference:
          description: >-
            Rail specific reference if one exists (e.g. blockchain hash, fedwire
            ID etc)
          type: string
        rail_originator_memo:
          description: >-
            Any reference provided by the originator, typically only used on
            FIAT rails (e.g. transaction Memo etc).
          type: string
        rail:
          description: 'The rail on which this transaction arrived. '
          type: string
          enum:
            - EFT
            - SWIFT
        profile:
          $ref: '#/components/schemas/TransactionOriginatorProfileFIATCA'
        account_information:
          $ref: '#/components/schemas/TransactionOriginatorAccountFIATCA'
    TransactionOriginatorFIATUS:
      required:
        - account_information
        - originator_type
        - profile
        - rail
      type: object
      properties:
        originator_type:
          description: Type of transaction originator
          type: string
          enum:
            - FIAT_US
            - FIAT_US_LINKED
            - FIAT_CA
            - FIAT_CA_LINKED
            - CRYPTO
        rail_reference:
          description: >-
            Rail specific reference if one exists (e.g. blockchain hash, fedwire
            ID etc)
          type: string
        rail_originator_memo:
          description: >-
            Any reference provided by the originator, typically only used on
            FIAT rails (e.g. transaction Memo etc).
          type: string
        rail:
          description: 'The rail on which this transaction arrived. '
          type: string
          enum:
            - ACH
            - FEDWIRE
            - SWIFT
        profile:
          $ref: '#/components/schemas/TransactionOriginatorProfileFIATUS'
        account_information:
          $ref: '#/components/schemas/TransactionOriginatorAccountFIATUS'
    TransactionOriginatorProfileCRYPTO:
      description: Available details of the originator wallet/address owner
      type: object
      properties:
        name:
          description: >-
            The name of the counter party who is sending/receiving these funds
            (e.g. Anchorage Digital, Coinbase, or entity name etc)
          type: string
    TransactionOriginatorProfileFIATCA:
      description: Available details of the originator account owner
      type: object
      properties:
        name:
          description: Name of the originator (individual or business name).
          type: string
    TransactionOriginatorProfileFIATUS:
      description: Available details of the originator account owner
      type: object
      properties:
        name:
          description: Name of the originator (individual or business name).
          type: string
    TransactionPayment:
      description: Transaction List
      required:
        - id
        - transaction_date
        - transaction_status
        - transaction_type
        - value
      type: object
      properties:
        description:
          description: Description
          type: string
        id:
          description: Unique Identifier for the transaction
          type: string
        value:
          description: Value of the transaction in the underlying account currency
          type: number
        transaction_date:
          description: Date time the transaction was performed
          type: string
          format: date-time
        transaction_posted_date:
          description: Date time the transaction was posted
          type: string
          format: date-time
        transaction_status:
          description: >+
            Status of transaction 

            * `AUTHORIZED` - Treat as a temporary hold. This transaction impacts
            the account available balance but does not impact the current
            balance. Can and should be cancelled and replaced by a
            pending/posted pair.  

            * `PENDING` - Transaction waiting final confirmation. This
            transaction impacts the account available balance but does not
            impact the current balance. Cannot be cancelled as the underlying
            transaction is in flight.  

            * `POSTED` - Transaction is final. Both the available balance and
            current balance are impacted. Cannot be reversed. 

            * `CANCELLED` - Transaction is no longer valid. Reverse any impacts
            to available balance and current balance. 

          type: string
          enum:
            - AUTHORIZED
            - PENDING
            - POSTED
            - CANCELLED
        transaction_type:
          description: >+
            Transaction type 

            * `TRANSFER_IN` - External deposit of crypto funds into an account. 

            * `TRANSFER_OUT` - Withdrawal of crypto funds from an account to an
            external location .  

            * `FIAT_TRANSFER_IN` - External deposit of FIAT funds into an
            account. 

            * `FIAT_TRANSFER_OUT` - Withdrawal of FIAT funds from an account to
            an external location .  

            * `FIAT_TRANSFER_IN_RETURN` - Clawback of a FIAT deposit (e.g. due
            to bankiing error). 

            * `FIAT_TRANSFER_OUT_RETURN` - Return of a FIAT withdrawal (e.g. due
            to the destination account being closed)  

            * `DEBIT_CORRECTION` - Debit account adjustment.  

            * `CREDIT_CORRECTION` - Credit account adjustment.  

            * `TRADE` -  Currency exchange transaction (applies to both the
            debit on the source account or credit on the destination account).  

            * `FEE` -  Fee deduction.  

            * `INTERNAL_TRANSFER` - Book (internal) movement of funds between
            account.  

          type: string
          enum:
            - TRANSFER_IN
            - TRANSFER_OUT
            - FEE
            - DEBIT_CORRECTION
            - CREDIT_CORRECTION
            - TRADE
            - INTERNAL_TRANSFER
        category_type:
          description: >+
            If this transaction related to a core platform feature 

            * `DEPOSIT` - When this transaction was a result of a deposit.  

            * `EXCHANGE` - When this transaction was a result of an
            [exchange](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 

            * `TRANSFER` - When this transaction was a result of a
            [transfer](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/).  

            * `WITHDRAWAL` - When this transaction was a result of a
            [withdrawal](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 

          type: string
          enum:
            - ADJUSTMENT
            - DEPOSIT
            - EXCHANGE
            - TRANSFER
            - WITHDRAWAL
        category_id:
          description: >
            Where the `category_type` is present, this identifier allows you to
            lookup the category details using the standard APIs. For example,
            where a category_type is `TRANSFER` and the category_id is
            `abc-123`, you can lookup the original transfer that this
            transaction relates to using ```GET /transfers/abc-123```   
          type: string
        originator:
          $ref: '#/components/schemas/TransactionOriginator'
        payor_id:
          description: Optional Payor ID this transaction is associated to
          type: string
        payor_reference_id:
          description: Optional Payment Reference ID associated with this transaction
          type: string
        payor_amount:
          description: >-
            Optional expected amount for this payment (which may be different to
            actual)
          type: string
    TransactionPaymentList:
      type: object
      properties:
        transactions:
          description: Transaction List
          type: array
          items:
            $ref: '#/components/schemas/TransactionPayment'
    ResponseTransactionDetails:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionDetails'
    TransactionDetails:
      required:
        - id
        - transaction_date
        - transaction_status
        - transaction_type
        - value
      type: object
      properties:
        description:
          description: Description
          type: string
        id:
          description: Unique Identifier for the transaction
          type: string
        value:
          description: Value of the transaction in the underlying account currency
          type: number
        transaction_date:
          description: Date time the transaction was performed
          type: string
          format: date-time
        transaction_posted_date:
          description: Date time the transaction was posted
          type: string
          format: date-time
        transaction_status:
          description: >+
            Status of transaction 

            * `AUTHORIZED` - Treat as a temporary hold. This transaction impacts
            the account available balance but does not impact the current
            balance. Can and should be cancelled and replaced by a
            pending/posted pair.  

            * `PENDING` - Transaction waiting final confirmation. This
            transaction impacts the account available balance but does not
            impact the current balance. Cannot be cancelled as the underlying
            transaction is in flight.  

            * `POSTED` - Transaction is final. Both the available balance and
            current balance are impacted. Cannot be reversed. 

            * `CANCELLED` - Transaction is no longer valid. Reverse any impacts
            to available balance and current balance. 

          type: string
          enum:
            - AUTHORIZED
            - PENDING
            - POSTED
            - CANCELLED
        transaction_type:
          description: >+
            Transaction type 

            * `TRANSFER_IN` - External deposit of crypto funds into an account. 

            * `TRANSFER_OUT` - Withdrawal of crypto funds from an account to an
            external location .  

            * `FIAT_TRANSFER_IN` - External deposit of FIAT funds into an
            account. 

            * `FIAT_TRANSFER_OUT` - Withdrawal of FIAT funds from an account to
            an external location .  

            * `FIAT_TRANSFER_IN_RETURN` - Clawback of a FIAT deposit (e.g. due
            to bankiing error). 

            * `FIAT_TRANSFER_OUT_RETURN` - Return of a FIAT withdrawal (e.g. due
            to the destination account being closed)  

            * `DEBIT_CORRECTION` - Debit account adjustment.  

            * `CREDIT_CORRECTION` - Credit account adjustment.  

            * `TRADE` -  Currency exchange transaction (applies to both the
            debit on the source account or credit on the destination account).  

            * `FEE` -  Fee deduction.  

            * `INTERNAL_TRANSFER` - Book (internal) movement of funds between
            account.  

          type: string
          enum:
            - TRANSFER_IN
            - TRANSFER_OUT
            - FEE
            - DEBIT_CORRECTION
            - CREDIT_CORRECTION
            - TRADE
            - INTERNAL_TRANSFER
        category_type:
          description: >+
            If this transaction related to a core platform feature 

            * `DEPOSIT` - When this transaction was a result of a deposit.  

            * `EXCHANGE` - When this transaction was a result of an
            [exchange](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 

            * `TRANSFER` - When this transaction was a result of a
            [transfer](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/).  

            * `WITHDRAWAL` - When this transaction was a result of a
            [withdrawal](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 

          type: string
          enum:
            - ADJUSTMENT
            - DEPOSIT
            - EXCHANGE
            - TRANSFER
            - WITHDRAWAL
        category_id:
          description: >
            Where the `category_type` is present, this identifier allows you to
            lookup the category details using the standard APIs. For example,
            where a category_type is `TRANSFER` and the category_id is
            `abc-123`, you can lookup the original transfer that this
            transaction relates to using ```GET /transfers/abc-123```   
          type: string
        originator:
          $ref: '#/components/schemas/TransactionOriginator'
    ResponseTransactions:
      required:
        - data
        - links
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionList'
        links:
          $ref: '#/components/schemas/Page'
    Transaction:
      description: Transaction List
      required:
        - id
        - transaction_date
        - transaction_status
        - transaction_type
        - value
      type: object
      properties:
        description:
          description: Description
          type: string
        id:
          description: Unique Identifier for the transaction
          type: string
        value:
          description: Value of the transaction in the underlying account currency
          type: number
        transaction_date:
          description: Date time the transaction was performed
          type: string
          format: date-time
        transaction_posted_date:
          description: Date time the transaction was posted
          type: string
          format: date-time
        transaction_status:
          description: >+
            Status of transaction 

            * `AUTHORIZED` - Treat as a temporary hold. This transaction impacts
            the account available balance but does not impact the current
            balance. Can and should be cancelled and replaced by a
            pending/posted pair.  

            * `PENDING` - Transaction waiting final confirmation. This
            transaction impacts the account available balance but does not
            impact the current balance. Cannot be cancelled as the underlying
            transaction is in flight.  

            * `POSTED` - Transaction is final. Both the available balance and
            current balance are impacted. Cannot be reversed. 

            * `CANCELLED` - Transaction is no longer valid. Reverse any impacts
            to available balance and current balance. 

          type: string
          enum:
            - AUTHORIZED
            - PENDING
            - POSTED
            - CANCELLED
        transaction_type:
          description: >+
            Transaction type 

            * `TRANSFER_IN` - External deposit of crypto funds into an account. 

            * `TRANSFER_OUT` - Withdrawal of crypto funds from an account to an
            external location .  

            * `FIAT_TRANSFER_IN` - External deposit of FIAT funds into an
            account. 

            * `FIAT_TRANSFER_OUT` - Withdrawal of FIAT funds from an account to
            an external location .  

            * `FIAT_TRANSFER_IN_RETURN` - Clawback of a FIAT deposit (e.g. due
            to bankiing error). 

            * `FIAT_TRANSFER_OUT_RETURN` - Return of a FIAT withdrawal (e.g. due
            to the destination account being closed)  

            * `DEBIT_CORRECTION` - Debit account adjustment.  

            * `CREDIT_CORRECTION` - Credit account adjustment.  

            * `TRADE` -  Currency exchange transaction (applies to both the
            debit on the source account or credit on the destination account).  

            * `FEE` -  Fee deduction.  

            * `INTERNAL_TRANSFER` - Book (internal) movement of funds between
            account.  

          type: string
          enum:
            - TRANSFER_IN
            - TRANSFER_OUT
            - FEE
            - DEBIT_CORRECTION
            - CREDIT_CORRECTION
            - TRADE
            - INTERNAL_TRANSFER
        category_type:
          description: >+
            If this transaction related to a core platform feature 

            * `DEPOSIT` - When this transaction was a result of a deposit.  

            * `EXCHANGE` - When this transaction was a result of an
            [exchange](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 

            * `TRANSFER` - When this transaction was a result of a
            [transfer](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/).  

            * `WITHDRAWAL` - When this transaction was a result of a
            [withdrawal](https://docs.layer2financial.com/api-docs/openapi/layer2/overview/). 

          type: string
          enum:
            - ADJUSTMENT
            - DEPOSIT
            - EXCHANGE
            - TRANSFER
            - WITHDRAWAL
        category_id:
          description: >
            Where the `category_type` is present, this identifier allows you to
            lookup the category details using the standard APIs. For example,
            where a category_type is `TRANSFER` and the category_id is
            `abc-123`, you can lookup the original transfer that this
            transaction relates to using ```GET /transfers/abc-123```   
          type: string
        originator:
          $ref: '#/components/schemas/TransactionOriginator'
    TransactionList:
      required:
        - transactions
      type: object
      properties:
        transactions:
          description: Transaction List
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    ResponseSubscriptionBase:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SubscriptionBase'
    SubscriptionBase:
      required:
        - id
      type: object
      properties:
        id:
          description: Subscription ID
          type: string
          readOnly: true
    DocumentsUploadDocumentRequest:
      required:
        - file
      type: object
      properties:
        file:
          type: string
          format: binary
    DepositsCreateRequestResponse:
      oneOf:
        - $ref: '#/components/schemas/DEPOSIT_PUSH'
        - $ref: '#/components/schemas/DEPOSIT_PULL'
    CustomersGetDetailsResponse:
      oneOf:
        - $ref: '#/components/schemas/CUSTOMER_INDIVIDUAL'
        - $ref: '#/components/schemas/CUSTOMER_CORPORATION'
    ApplicationsGetDetailsResponse:
      oneOf:
        - $ref: '#/components/schemas/INDIVIDUAL'
        - $ref: '#/components/schemas/CORPORATION'
    WithdrawalsGetDetailsResponse:
      oneOf:
        - $ref: '#/components/schemas/WITHDRAWAL_CRYPTO'
        - $ref: '#/components/schemas/WITHDRAWAL_ACH'
        - $ref: '#/components/schemas/WITHDRAWAL_FEDWIRE'
        - $ref: '#/components/schemas/WITHDRAWAL_SWIFT'
    DepositsGetDetailsResponse:
      oneOf:
        - $ref: '#/components/schemas/DEPOSIT_PUSH'
        - $ref: '#/components/schemas/DEPOSIT_PULL'
  securitySchemes:
    OAuth2Flow:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: >-
            https://auth.layer2financial.com/oauth2/ausbdqlx69rH6OjWd696/v1/token
          scopes:
            customers:read: View Customer Data
            customers:write: Create and Modify Customer Related Data
            accounts:read: View Account Data
            accounts:write: Create and Modify Account Related Data
            settlements:read: View Settlements Data
            applications:read: View Application Data
            applications:write: Create and Modify Application Related Data
            transfers:read: View Transfers Data
            transfers:write: Create and Modify Transfers Related Data
            withdrawals:read: View Withdrawals Data
            withdrawals:write: Create and Modify Withdrawals Related Data
            exchanges:read: View Exchanges Data
            exchanges:write: Create and Modify Exchange Related Data
            deposits:read: View Deposit Related data
            deposits:write: Create and Modify Deposit Related Data
            subscriptions:read: View Subscription Related data
            subscriptions:write: Create and Modify Subscription Related Data
