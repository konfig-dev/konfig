openapi: 3.0.1
info:
  title: langfuse
  description: >-
    ## Authentication


    Authenticate with the API using Basic Auth, get API keys in the project
    settings:


    - username: Langfuse Public Key

    - password: Langfuse Secret Key
  version: ''
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - description: EU
    url: https://cloud.langfuse.com
  - description: US
    url: https://us.cloud.langfuse.com
tags:
  - name: Datasets
  - name: Score
  - name: DatasetItems
  - name: Observations
  - name: Prompts
  - name: Trace
  - name: DatasetRunItems
  - name: Health
  - name: Ingestion
  - name: Metrics
  - name: Projects
  - name: Sessions
paths:
  /api/public/dataset-items:
    post:
      tags:
        - DatasetItems
      operationId: datasetItems_create
      security:
        - BasicAuth: []
      description: Create a dataset item
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetItemRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItem'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsCreateResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsCreate401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsCreate403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsCreate404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsCreate405Response'
  /api/public/dataset-items/{id}:
    get:
      tags:
        - DatasetItems
      operationId: datasetItems_get
      security:
        - BasicAuth: []
      description: Get a dataset item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItem'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetItemsGet405Response'
  /api/public/dataset-run-items:
    post:
      tags:
        - DatasetRunItems
      operationId: datasetRunItems_create
      security:
        - BasicAuth: []
      description: Create a dataset run item
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRunItemRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItem'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItemsCreateResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItemsCreate401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItemsCreate403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItemsCreate404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRunItemsCreate405Response'
  /api/public/datasets:
    get:
      tags:
        - Datasets
      operationId: datasets_list
      security:
        - BasicAuth: []
      description: Get all datasets
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasets'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsListResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsList401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsList403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsList404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsList405Response'
    post:
      tags:
        - Datasets
      operationId: datasets_create
      security:
        - BasicAuth: []
      description: Create a dataset
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCore'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsCreateResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsCreate401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsCreate403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsCreate404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsCreate405Response'
  /api/public/datasets/{datasetName}:
    get:
      tags:
        - Datasets
      operationId: datasets_get
      security:
        - BasicAuth: []
      description: Get a dataset and its items
      parameters:
        - name: datasetName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCore'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGet405Response'
  /api/public/datasets/{datasetName}/runs/{runName}:
    get:
      tags:
        - Datasets
      operationId: datasets_getRuns
      security:
        - BasicAuth: []
      description: Get a dataset run and its items
      parameters:
        - name: datasetName
          in: path
          required: true
          schema:
            type: string
        - name: runName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetRun'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGetRunsResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGetRuns401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGetRuns403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGetRuns404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsGetRuns405Response'
  /api/public/health:
    get:
      tags:
        - Health
      operationId: health_health
      description: Check health of API and database
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthHealthResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthHealth401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthHealth403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthHealth404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthHealth405Response'
        '503':
          description: ''
  /api/public/ingestion:
    post:
      tags:
        - Ingestion
      operationId: ingestion_batch
      security:
        - BasicAuth: []
      description: Batched ingestion for Langfuse Tracing
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestionBatchRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionBatchResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionBatch401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionBatch403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionBatch404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionBatch405Response'
  /api/public/metrics/daily:
    get:
      tags:
        - Metrics
      operationId: metrics_daily
      security:
        - BasicAuth: []
      description: Get daily metrics of the Langfuse project
      parameters:
        - description: page number, starts at 1
          name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - description: limit of items per page
          name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - description: Optional filter by the name of the trace
          name: traceName
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - description: Optional filter by the userId associated with the trace
          name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - description: Optional filter for metrics where traces include all of these tags
          name: tags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              nullable: true
        - description: >-
            Optional filter to only include traces on or after a certain
            timestamp
          name: fromTimestamp
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - description: Optional filter to only include traces before a certain timestamp
          name: toTimestamp
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyMetrics'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsDailyResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsDaily401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsDaily403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsDaily404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsDaily405Response'
  /api/public/observations/{observationId}:
    get:
      tags:
        - Observations
      operationId: observations_get
      security:
        - BasicAuth: []
      description: Get a observation
      parameters:
        - description: >-
            The unique langfuse identifier of an observation, can be an event,
            span or generation
          name: observationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGet405Response'
  /api/public/observations:
    get:
      tags:
        - Observations
      operationId: observations_getMany
      security:
        - BasicAuth: []
      description: Get a list of observations
      parameters:
        - description: page number, starts at 1
          name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - description: limit of items per page
          name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: type
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: traceId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: parentObservationId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - description: >-
            Retrieve only observations with a start_time greater than this
            timestamp.
          name: fromStartTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsViews'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGetManyResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGetMany401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGetMany403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGetMany404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationsGetMany405Response'
  /api/public/projects:
    get:
      tags:
        - Projects
      operationId: projects_get
      security:
        - BasicAuth: []
      description: Get Project associated with API key
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGet405Response'
  /api/public/prompts:
    get:
      tags:
        - Prompts
      operationId: prompts_get
      security:
        - BasicAuth: []
      description: Get a prompt
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: false
          schema:
            type: integer
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsGet405Response'
    post:
      tags:
        - Prompts
      operationId: prompts_create
      security:
        - BasicAuth: []
      description: Create a prompt
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePromptRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsCreateResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsCreate401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsCreate403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsCreate404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsCreate405Response'
  /api/public/scores:
    post:
      tags:
        - Score
      operationId: score_create
      security:
        - BasicAuth: []
      description: Create a score
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScoreRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreCreateResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreCreate401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreCreate403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreCreate404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreCreate405Response'
    get:
      tags:
        - Score
      operationId: score_get
      security:
        - BasicAuth: []
      description: Get a list of scores
      parameters:
        - description: page number, starts at 1
          name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - description: limit of items per page
          name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - description: Retrieve only scores newer than this timestamp.
          name: fromTimestamp
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scores'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGet405Response'
  /api/public/scores/{scoreId}:
    get:
      tags:
        - Score
      operationId: Score_getById
      security:
        - BasicAuth: []
      description: Get a score
      parameters:
        - description: The unique langfuse identifier of a score
          name: scoreId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGetByIdResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGetById401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGetById403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGetById404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreGetById405Response'
    delete:
      tags:
        - Score
      operationId: score_delete
      security:
        - BasicAuth: []
      description: Delete a score
      parameters:
        - description: The unique langfuse identifier of a score
          name: scoreId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreDeleteResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreDelete401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreDelete403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreDelete404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreDelete405Response'
  /api/public/sessions/{sessionId}:
    get:
      tags:
        - Sessions
      operationId: sessions_get
      security:
        - BasicAuth: []
      description: Get a session
      parameters:
        - description: The unique id of a session
          name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsGet405Response'
  /api/public/traces/{traceId}:
    get:
      tags:
        - Trace
      operationId: trace_get
      security:
        - BasicAuth: []
      description: Get a specific trace
      parameters:
        - description: The unique langfuse identifier of a trace
          name: traceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceGetResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceGet401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceGet403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceGet404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceGet405Response'
  /api/public/traces:
    get:
      tags:
        - Trace
      operationId: trace_list
      security:
        - BasicAuth: []
      description: Get list of traces
      parameters:
        - description: page number, starts at 1
          name: page
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - description: limit of items per page
          name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: userId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - description: Retrieve only traces newer than this timestamp.
          name: fromTimestamp
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - description: >-
            Format of the string [field].[asc/desc]. Fields: id, timestamp,
            name, userId, release, version, public, bookmarked, sessionId.
            Example: timestamp.asc
          name: orderBy
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - description: Only traces that include all of these tags will be returned.
          name: tags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traces'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceListResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceList401Response'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceList403Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceList404Response'
        '405':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceList405Response'
components:
  schemas:
    Trace:
      title: Trace
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          nullable: true
        version:
          type: string
          nullable: true
        id:
          description: The unique identifier of a trace
          type: string
        timestamp:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
        sessionId:
          type: string
          nullable: true
        release:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        metadata:
          nullable: true
        public:
          description: Public traces are accessible via url without login
          type: boolean
          nullable: true
      required:
        - id
        - timestamp
    Session:
      title: Session
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        projectId:
          type: string
      required:
        - id
        - createdAt
        - projectId
    Observation:
      title: Observation
      type: object
      properties:
        version:
          type: string
          nullable: true
        id:
          type: string
        traceId:
          type: string
          nullable: true
        type:
          type: string
        name:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
          nullable: true
        completionStartTime:
          type: string
          format: date-time
          nullable: true
        model:
          type: string
          nullable: true
        modelParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          nullable: true
        input:
          nullable: true
        metadata:
          nullable: true
        output:
          nullable: true
        usage:
          $ref: '#/components/schemas/Usage'
          nullable: true
        level:
          $ref: '#/components/schemas/ObservationLevel'
        statusMessage:
          type: string
          nullable: true
        parentObservationId:
          type: string
          nullable: true
        promptId:
          type: string
          nullable: true
      required:
        - id
        - type
        - startTime
        - level
    Usage:
      title: Usage
      description: Standard interface for usage and cost
      type: object
      properties:
        input:
          description: Number of input units (e.g. tokens)
          type: integer
          nullable: true
        output:
          description: Number of output units (e.g. tokens)
          type: integer
          nullable: true
        total:
          description: Defaults to input+output if not set
          type: integer
          nullable: true
        unit:
          $ref: '#/components/schemas/ModelUsageUnit'
          nullable: true
        inputCost:
          description: USD input cost
          type: number
          format: double
          nullable: true
        outputCost:
          description: USD output cost
          type: number
          format: double
          nullable: true
        totalCost:
          description: USD total cost, defaults to input+output
          type: number
          format: double
          nullable: true
    Score:
      title: Score
      type: object
      properties:
        id:
          type: string
        traceId:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        source:
          $ref: '#/components/schemas/ScoreSource'
        observationId:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
        comment:
          type: string
          nullable: true
      required:
        - id
        - traceId
        - name
        - value
        - source
        - timestamp
    DatasetCore:
      title: DatasetCore
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        projectId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - projectId
        - createdAt
        - updatedAt
    DatasetItem:
      title: DatasetItem
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/DatasetStatus'
        input:
          nullable: true
        expectedOutput:
          nullable: true
        sourceTraceId:
          type: string
          nullable: true
        sourceObservationId:
          type: string
          nullable: true
        datasetId:
          type: string
        datasetName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - status
        - datasetId
        - datasetName
        - createdAt
        - updatedAt
    DatasetRunItem:
      title: DatasetRunItem
      type: object
      properties:
        id:
          type: string
        datasetRunId:
          type: string
        datasetRunName:
          type: string
        datasetItemId:
          type: string
        traceId:
          type: string
        observationId:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - datasetRunId
        - datasetRunName
        - datasetItemId
        - traceId
        - createdAt
        - updatedAt
    DatasetRun:
      title: DatasetRun
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        metadata:
          nullable: true
        datasetId:
          type: string
        datasetName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        datasetRunItems:
          type: array
          items:
            $ref: '#/components/schemas/DatasetRunItem'
      required:
        - id
        - name
        - datasetId
        - datasetName
        - createdAt
        - updatedAt
        - datasetRunItems
    ModelUsageUnit:
      title: ModelUsageUnit
      description: Unit of usage in Langfuse
      type: string
      enum:
        - CHARACTERS
        - TOKENS
        - MILLISECONDS
        - SECONDS
        - IMAGES
    ObservationLevel:
      title: ObservationLevel
      type: string
      enum:
        - DEBUG
        - DEFAULT
        - WARNING
        - ERROR
    MapValue:
      title: MapValue
      oneOf:
        - type: string
          nullable: true
        - type: integer
          nullable: true
        - type: boolean
          nullable: true
        - type: array
          items:
            type: string
          nullable: true
    DatasetStatus:
      title: DatasetStatus
      type: string
      enum:
        - ACTIVE
        - ARCHIVED
    ScoreSource:
      title: ScoreSource
      type: string
      enum:
        - API
        - REVIEW
    CreateDatasetItemRequest:
      title: CreateDatasetItemRequest
      type: object
      properties:
        datasetName:
          type: string
        input:
          nullable: true
        expectedOutput:
          nullable: true
        id:
          description: Dataset items are upserted on their id
          type: string
          nullable: true
      required:
        - datasetName
    CreateDatasetRunItemRequest:
      title: CreateDatasetRunItemRequest
      type: object
      properties:
        runName:
          type: string
        runDescription:
          description: Description of the run. If run exists, description will be updated.
          type: string
          nullable: true
        metadata:
          description: Metadata of the dataset run, updates run if run already exists
          nullable: true
        datasetItemId:
          type: string
        observationId:
          type: string
          nullable: true
        traceId:
          description: >-
            traceId should always be provided. For compatibility with older SDK
            versions it can also be inferred from the provided observationId.
          type: string
          nullable: true
      required:
        - runName
        - datasetItemId
    PaginatedDatasets:
      title: PaginatedDatasets
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DatasetCore'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    CreateDatasetRequest:
      title: CreateDatasetRequest
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
      required:
        - name
    HealthResponse:
      title: HealthResponse
      type: object
      properties:
        version:
          description: Langfuse server version
          type: string
          example: 1.25.0
        status:
          type: string
          example: OK
      required:
        - version
        - status
    IngestionEvent:
      title: IngestionEvent
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - trace-create
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - score-create
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - event-create
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - generation-create
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - generation-update
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - span-create
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - span-update
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sdk-log
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - observation-create
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - observation-update
            - $ref: '#/components/schemas/BaseEvent'
          required:
            - type
    ObservationType:
      title: ObservationType
      type: string
      enum:
        - SPAN
        - GENERATION
        - EVENT
    IngestionUsage:
      title: IngestionUsage
      oneOf:
        - $ref: '#/components/schemas/Usage'
        - $ref: '#/components/schemas/OpenAIUsage'
    OpenAIUsage:
      title: OpenAIUsage
      description: Usage interface of OpenAI for improved compatibility.
      type: object
      properties:
        promptTokens:
          type: integer
          nullable: true
        completionTokens:
          type: integer
          nullable: true
        totalTokens:
          type: integer
          nullable: true
    OptionalObservationBody:
      title: OptionalObservationBody
      type: object
      properties:
        version:
          type: string
          nullable: true
        traceId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
          nullable: true
        metadata:
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
        level:
          $ref: '#/components/schemas/ObservationLevel'
          nullable: true
        statusMessage:
          type: string
          nullable: true
        parentObservationId:
          type: string
          nullable: true
    ObservationBody:
      title: ObservationBody
      type: object
      properties:
        version:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        traceId:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ObservationType'
        name:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        completionStartTime:
          type: string
          format: date-time
          nullable: true
        model:
          type: string
          nullable: true
        modelParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapValue'
          nullable: true
        input:
          nullable: true
        metadata:
          nullable: true
        output:
          nullable: true
        usage:
          $ref: '#/components/schemas/Usage'
          nullable: true
        level:
          $ref: '#/components/schemas/ObservationLevel'
          nullable: true
        statusMessage:
          type: string
          nullable: true
        parentObservationId:
          type: string
          nullable: true
      required:
        - type
    TraceBody:
      title: TraceBody
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          nullable: true
        version:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        input:
          nullable: true
        output:
          nullable: true
        sessionId:
          type: string
          nullable: true
        release:
          type: string
          nullable: true
        metadata:
          nullable: true
        public:
          description: Make trace publicly accessible via url
          type: boolean
          nullable: true
    SDKLogBody:
      title: SDKLogBody
      type: object
      properties:
        log: {}
      required:
        - log
    ScoreBody:
      title: ScoreBody
      type: object
      properties:
        id:
          type: string
          nullable: true
        traceId:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        observationId:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      required:
        - traceId
        - name
        - value
    BaseEvent:
      title: BaseEvent
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
        metadata: {}
      required:
        - id
        - timestamp
        - metadata
    IngestionSuccess:
      title: IngestionSuccess
      type: object
      properties:
        id:
          type: string
        status:
          type: integer
      required:
        - id
        - status
    IngestionError:
      title: IngestionError
      type: object
      properties:
        id:
          type: string
        status:
          type: integer
        message:
          type: string
          nullable: true
        error:
          nullable: true
      required:
        - id
        - status
    IngestionResponse:
      title: IngestionResponse
      type: object
      properties:
        successes:
          type: array
          items:
            $ref: '#/components/schemas/IngestionSuccess'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/IngestionError'
      required:
        - successes
        - errors
    DailyMetrics:
      title: DailyMetrics
      type: object
      properties:
        data:
          description: A list of daily metrics, only days with ingested data are included.
          type: array
          items:
            $ref: '#/components/schemas/DailyMetricsDetails'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    DailyMetricsDetails:
      title: DailyMetricsDetails
      type: object
      properties:
        date:
          type: string
        countTraces:
          type: integer
        totalCost:
          type: number
          format: double
        usage:
          type: array
          items:
            $ref: '#/components/schemas/UsageByModel'
      required:
        - date
        - countTraces
        - totalCost
        - usage
    UsageByModel:
      title: UsageByModel
      description: >-
        Daily usage of a given model. Usage corresponds to the unit set for the
        specific model (e.g. tokens).
      type: object
      properties:
        model:
          type: string
        inputUsage:
          type: integer
        outputUsage:
          type: integer
        totalUsage:
          type: integer
      required:
        - model
        - inputUsage
        - outputUsage
        - totalUsage
    Observations:
      title: Observations
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    ObservationsViews:
      title: ObservationsViews
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    Projects:
      title: Projects
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      required:
        - data
    Project:
      title: Project
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    CreatePromptRequest:
      title: CreatePromptRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/CreateChatPromptRequest'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - text
            - $ref: '#/components/schemas/CreateTextPromptRequest'
          required:
            - type
    CreateChatPromptRequest:
      title: CreateChatPromptRequest
      type: object
      properties:
        name:
          type: string
        isActive:
          description: Should the prompt be promoted to production immediately?
          type: boolean
        prompt:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
        config:
          nullable: true
      required:
        - name
        - isActive
        - prompt
    CreateTextPromptRequest:
      title: CreateTextPromptRequest
      type: object
      properties:
        name:
          type: string
        isActive:
          description: Should the prompt be promoted to production immediately?
          type: boolean
        prompt:
          type: string
        config:
          nullable: true
      required:
        - name
        - isActive
        - prompt
    Prompt:
      title: Prompt
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/BasePrompt'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - text
            - $ref: '#/components/schemas/BasePrompt'
          required:
            - type
    BasePrompt:
      title: BasePrompt
      type: object
      properties:
        version:
          type: integer
        name:
          type: string
        config: {}
      required:
        - name
        - version
        - config
    ChatMessage:
      title: ChatMessage
      type: object
      properties:
        role:
          type: string
        content:
          type: string
      required:
        - role
        - content
    CreateScoreRequest:
      title: CreateScoreRequest
      type: object
      properties:
        id:
          type: string
          nullable: true
        traceId:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        observationId:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      required:
        - traceId
        - name
        - value
    Scores:
      title: Scores
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Score'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    Traces:
      title: Traces
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trace'
        meta:
          $ref: '#/components/schemas/utilsMetaResponse'
      required:
        - data
        - meta
    Sort:
      title: Sort
      type: object
      properties:
        id:
          type: string
      required:
        - id
    utilsMetaResponse:
      title: utilsMetaResponse
      type: object
      properties:
        page:
          description: current page number
          type: integer
        limit:
          description: number of items per page
          type: integer
        totalItems:
          description: number of total items given the current filters/selection (if any)
          type: integer
        totalPages:
          description: number of total pages given the current limit
          type: integer
      required:
        - page
        - limit
        - totalItems
        - totalPages
    IngestionBatchRequest:
      type: object
      properties:
        batch:
          type: array
          items:
            $ref: '#/components/schemas/IngestionEvent'
      required:
        - batch
    DatasetItemsCreateResponse:
      type: object
      properties: {}
      example: {}
    DatasetItemsCreate401Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsCreate403Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsCreate404Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsCreate405Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsGetResponse:
      type: object
      properties: {}
      example: {}
    DatasetItemsGet401Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsGet403Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsGet404Response:
      type: object
      properties: {}
      example: {}
    DatasetItemsGet405Response:
      type: object
      properties: {}
      example: {}
    DatasetRunItemsCreateResponse:
      type: object
      properties: {}
      example: {}
    DatasetRunItemsCreate401Response:
      type: object
      properties: {}
      example: {}
    DatasetRunItemsCreate403Response:
      type: object
      properties: {}
      example: {}
    DatasetRunItemsCreate404Response:
      type: object
      properties: {}
      example: {}
    DatasetRunItemsCreate405Response:
      type: object
      properties: {}
      example: {}
    DatasetsListResponse:
      type: object
      properties: {}
      example: {}
    DatasetsList401Response:
      type: object
      properties: {}
      example: {}
    DatasetsList403Response:
      type: object
      properties: {}
      example: {}
    DatasetsList404Response:
      type: object
      properties: {}
      example: {}
    DatasetsList405Response:
      type: object
      properties: {}
      example: {}
    DatasetsCreateResponse:
      type: object
      properties: {}
      example: {}
    DatasetsCreate401Response:
      type: object
      properties: {}
      example: {}
    DatasetsCreate403Response:
      type: object
      properties: {}
      example: {}
    DatasetsCreate404Response:
      type: object
      properties: {}
      example: {}
    DatasetsCreate405Response:
      type: object
      properties: {}
      example: {}
    DatasetsGetResponse:
      type: object
      properties: {}
      example: {}
    DatasetsGet401Response:
      type: object
      properties: {}
      example: {}
    DatasetsGet403Response:
      type: object
      properties: {}
      example: {}
    DatasetsGet404Response:
      type: object
      properties: {}
      example: {}
    DatasetsGet405Response:
      type: object
      properties: {}
      example: {}
    DatasetsGetRunsResponse:
      type: object
      properties: {}
      example: {}
    DatasetsGetRuns401Response:
      type: object
      properties: {}
      example: {}
    DatasetsGetRuns403Response:
      type: object
      properties: {}
      example: {}
    DatasetsGetRuns404Response:
      type: object
      properties: {}
      example: {}
    DatasetsGetRuns405Response:
      type: object
      properties: {}
      example: {}
    HealthHealthResponse:
      type: object
      properties: {}
      example: {}
    HealthHealth401Response:
      type: object
      properties: {}
      example: {}
    HealthHealth403Response:
      type: object
      properties: {}
      example: {}
    HealthHealth404Response:
      type: object
      properties: {}
      example: {}
    HealthHealth405Response:
      type: object
      properties: {}
      example: {}
    IngestionBatchResponse:
      type: object
      properties: {}
      example: {}
    IngestionBatch401Response:
      type: object
      properties: {}
      example: {}
    IngestionBatch403Response:
      type: object
      properties: {}
      example: {}
    IngestionBatch404Response:
      type: object
      properties: {}
      example: {}
    IngestionBatch405Response:
      type: object
      properties: {}
      example: {}
    MetricsDailyResponse:
      type: object
      properties: {}
      example: {}
    MetricsDaily401Response:
      type: object
      properties: {}
      example: {}
    MetricsDaily403Response:
      type: object
      properties: {}
      example: {}
    MetricsDaily404Response:
      type: object
      properties: {}
      example: {}
    MetricsDaily405Response:
      type: object
      properties: {}
      example: {}
    ObservationsGetResponse:
      type: object
      properties: {}
      example: {}
    ObservationsGet401Response:
      type: object
      properties: {}
      example: {}
    ObservationsGet403Response:
      type: object
      properties: {}
      example: {}
    ObservationsGet404Response:
      type: object
      properties: {}
      example: {}
    ObservationsGet405Response:
      type: object
      properties: {}
      example: {}
    ObservationsGetManyResponse:
      type: object
      properties: {}
      example: {}
    ObservationsGetMany401Response:
      type: object
      properties: {}
      example: {}
    ObservationsGetMany403Response:
      type: object
      properties: {}
      example: {}
    ObservationsGetMany404Response:
      type: object
      properties: {}
      example: {}
    ObservationsGetMany405Response:
      type: object
      properties: {}
      example: {}
    ProjectsGetResponse:
      type: object
      properties: {}
      example: {}
    ProjectsGet401Response:
      type: object
      properties: {}
      example: {}
    ProjectsGet403Response:
      type: object
      properties: {}
      example: {}
    ProjectsGet404Response:
      type: object
      properties: {}
      example: {}
    ProjectsGet405Response:
      type: object
      properties: {}
      example: {}
    PromptsGetResponse:
      type: object
      properties: {}
      example: {}
    PromptsGet401Response:
      type: object
      properties: {}
      example: {}
    PromptsGet403Response:
      type: object
      properties: {}
      example: {}
    PromptsGet404Response:
      type: object
      properties: {}
      example: {}
    PromptsGet405Response:
      type: object
      properties: {}
      example: {}
    PromptsCreateResponse:
      type: object
      properties: {}
      example: {}
    PromptsCreate401Response:
      type: object
      properties: {}
      example: {}
    PromptsCreate403Response:
      type: object
      properties: {}
      example: {}
    PromptsCreate404Response:
      type: object
      properties: {}
      example: {}
    PromptsCreate405Response:
      type: object
      properties: {}
      example: {}
    ScoreGetResponse:
      type: object
      properties: {}
      example: {}
    ScoreGet401Response:
      type: object
      properties: {}
      example: {}
    ScoreGet403Response:
      type: object
      properties: {}
      example: {}
    ScoreGet404Response:
      type: object
      properties: {}
      example: {}
    ScoreGet405Response:
      type: object
      properties: {}
      example: {}
    ScoreCreateResponse:
      type: object
      properties: {}
      example: {}
    ScoreCreate401Response:
      type: object
      properties: {}
      example: {}
    ScoreCreate403Response:
      type: object
      properties: {}
      example: {}
    ScoreCreate404Response:
      type: object
      properties: {}
      example: {}
    ScoreCreate405Response:
      type: object
      properties: {}
      example: {}
    ScoreDeleteResponse:
      type: object
      properties: {}
      example: {}
    ScoreDelete401Response:
      type: object
      properties: {}
      example: {}
    ScoreDelete403Response:
      type: object
      properties: {}
      example: {}
    ScoreDelete404Response:
      type: object
      properties: {}
      example: {}
    ScoreDelete405Response:
      type: object
      properties: {}
      example: {}
    ScoreGetByIdResponse:
      type: object
      properties: {}
      example: {}
    ScoreGetById401Response:
      type: object
      properties: {}
      example: {}
    ScoreGetById403Response:
      type: object
      properties: {}
      example: {}
    ScoreGetById404Response:
      type: object
      properties: {}
      example: {}
    ScoreGetById405Response:
      type: object
      properties: {}
      example: {}
    SessionsGetResponse:
      type: object
      properties: {}
      example: {}
    SessionsGet401Response:
      type: object
      properties: {}
      example: {}
    SessionsGet403Response:
      type: object
      properties: {}
      example: {}
    SessionsGet404Response:
      type: object
      properties: {}
      example: {}
    SessionsGet405Response:
      type: object
      properties: {}
      example: {}
    TraceGetResponse:
      type: object
      properties: {}
      example: {}
    TraceGet401Response:
      type: object
      properties: {}
      example: {}
    TraceGet403Response:
      type: object
      properties: {}
      example: {}
    TraceGet404Response:
      type: object
      properties: {}
      example: {}
    TraceGet405Response:
      type: object
      properties: {}
      example: {}
    TraceListResponse:
      type: object
      properties: {}
      example: {}
    TraceList401Response:
      type: object
      properties: {}
      example: {}
    TraceList403Response:
      type: object
      properties: {}
      example: {}
    TraceList404Response:
      type: object
      properties: {}
      example: {}
    TraceList405Response:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
