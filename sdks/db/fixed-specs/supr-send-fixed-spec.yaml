openapi: 3.0.3
info:
  title: SuprSend API
  description: >-
    SuprSend is a central communication stack for easily creating, managing and
    delivering notifications to your end users on multiple channels. Our single
    notification API has all the features set, which enables you to send
    notifications in a reliable and scalable manner and take care of end user
    experience, thereby eliminating the need to develop any notification service
    in-house for transactional/engagement notifications.
  version: 1.2.1
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://hub.suprsend.com
tags:
  - name: Subscriber
  - name: Brand
  - name: SubscriberList
  - name: Template
  - name: Preference
  - name: Event
  - name: Workflow
  - name: PrefCategory
  - name: Sync
  - name: Broadcast
paths:
  /v1/template:
    get:
      tags:
        - Template
      summary: Fetch Template List
      operationId: Template_getList
      description: APIs to fetch the list of all templates in a workspace
      parameters:
        - description: comma separated string of tag ids attached to the template
          name: has_tag_ids_any
          in: query
          schema:
            type: string
        - description: >-
            comma separated string of channels. Returns templates which has any
            of the channels present from the channel string. Use these keys for
            channels - `email`, `sms`, `whatsapp`, `inbox`, `slack`,
            `androidpush`, `iospush`, `webpush`
          name: has_channels_any
          in: query
          schema:
            type: string
        - description: >-
            Set `true` for published templates, `false` for templates which are
            in draft. Do not pass this key to return all templates.
          name: is_active
          in: query
          schema:
            type: boolean
        - description: Set `true` to get archived templates, default = `false`
          name: is_archived
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "meta": {
                        "count": 1,
                          "limit": 10,
                            "offset": 0
                      },
                        "results": [
                          {
                            "id": 2445,
                            "name": "Grocery Purchased",
                            "slug": "grocery-purchased",
                            "description": null,
                            "is_active": true,
                            "default_language": {
                              "name": "English",
                              "slug": "en"
                            },
                            "created_at": "2023-01-25T04:53:39.237291Z",
                            "updated_at": "2023-08-28T05:06:22.461443Z",
                            "updated_by": {
                              "name": "Joe",
                              "email": "joe@example.com"
                            },
                            "last_triggered_at": "2023-08-10T12:44:03.361158Z",
                            "is_auto_translate_enabled": false,
                            "enabled_languages": [
                              "en",
                              "hi",
                              "kn"
                            ],
                            "channels": [
                              {
                                "id": 3944,
                                "channel": {
                                  "name": "Email",
                                  "slug": "email",
                                  "is_template_approval_needed": true
                                },
                                "is_active": true,
                                "is_enabled": true,
                                "created_at": "2023-01-25T04:53:39.268299Z",
                                "updated_at": "2023-01-25T04:53:39.404273Z",
                                "disabled_languages": [],
                                "versions": []
                              }],
                            "tags": []
                          }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/TemplateGetListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TemplateGetList400Response'
      deprecated: false
  /v1/template/{template_slug}:
    get:
      tags:
        - Template
      summary: Fetch Template details
      operationId: Template_getDetails
      description: >-
        APIs to fetch the content of a template group. It will return data for
        live and draft version of a template.
      parameters:
        - description: >-
            Template group slug you want to fetch content details. You'll get
            the template slug by clicking on copy button next to template group
            name on SuprSend dashboard -> template details page.
          name: template_slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": 2445,
                        "name": "Grocery Purchased",
                          "slug": "grocery-purchased",
                            "description": null,
                              "is_active": true,
                                "default_language": {
                                  "name": "English",
                                    "slug": "en"
                                },
                                  "created_at": "2023-01-25T04:53:39.237291Z",
                                    "updated_at": "2023-08-28T05:06:22.461443Z",
                                      "updated_by": {
                                        "name": "Joe",
                                          "email": "joe@example.com"
                                      },
                                        "last_triggered_at": "2023-08-10T12:44:03.361158Z",
                                          "is_auto_translate_enabled": false,
                                            "enabled_languages": [
                                              "en",
                                              "hi",
                                              "kn"
                                            ],
                                              "channels": [
                                                {
                                                  "id": 3944,
                                                  "channel": {
                                                    "name": "SMS",
                                                    "slug": "sms",
                                                    "is_template_approval_needed": true
                                                  },
                                                  "is_active": true,
                                                  "is_enabled": true,
                                                  "created_at": "2023-01-25T04:53:39.268299Z",
                                                  "updated_at": "2023-01-25T04:53:39.404273Z",
                                                  "disabled_languages": [],
                                                  "versions": [
                                                    {
                                                      "id": 10820,
                                                      "templates": [
                                                        {
                                                          "id": 11866,
                                                          "language": {
                                                            "name": "English",
                                                            "slug": "en"
                                                          },
                                                          "is_enabled": true,
                                                          "approval_status": "approved",
                                                          "content": {
                                                            "text": "You purchased product {#var#} worth Rs. {#var#} will reach to you {#var#}. You can track your order here: {#var#}\n- SuprSend",
                                                            "header": "SPRSND",
                                                            "example": [
                                                              "Winter Raincoat",
                                                              "INR 5",
                                                              "999",
                                                              "Bengaluru",
                                                              "https://www.google.com"
                                                            ],
                                                            "vendor_slug": "acl-sms",
                                                            "content_type": "1",
                                                            "message_type": "SERVICE_IMPLICIT",
                                                            "template_name": "purchase_made_en_v2",
                                                            "enterprise_name": "SPRSND",
                                                            "handlebars_text": "You purchased product {{event.product_name}} worth Rs. {{event.amount}} will reach to you {{event.location.city}}. You can track your order here: {{event.link}}\n- SuprSend",
                                                            "vendor_template_id": "1007xxxxxxxxxx"
                                                          },
                                                          "created_at": "2023-01-25T04:53:39.295289Z",
                                                          "updated_at": "2023-01-25T04:53:39.328651Z",
                                                          "updated_by": {
                                                            "name": "Steve",
                                                            "email": "steve@example.com"
                                                          },
                                                          "approval_cycle": {
                                                            "status": "approved",
                                                            "comment": null,
                                                            "request_received_at": "2022-03-31T10:35:51+0000",
                                                            "sent_for_approval_at": null,
                                                            "approval_status_received_at": "2022-03-31T10:43:44+0000"
                                                          },
                                                          "is_approval_needed": true,
                                                          "is_cloned_from_last_version": false
                                                        }
                                                      ],
                                                      "status": "active",
                                                      "version_tag": "1",
                                                      "created_at": "2023-01-25T04:53:39.276782Z",
                                                      "updated_at": "2023-01-25T04:53:39.342850Z",
                                                      "updated_by": {
                                                        "name": "Joe",
                                                        "email": "joe@example.com"
                                                      },
                                                      "version_tag_user": "v1",
                                                      "published_languages": [
                                                        "en"
                                                      ],
                                                      "apparent_published_languages": [
                                                        "en"
                                                      ]
                                                    },
                                                    {
                                                      "id": 10821,
                                                      "templates": [
                                                        {
                                                          "id": 11867,
                                                          "language": {
                                                            "name": "English",
                                                            "slug": "en"
                                                          },
                                                          "is_enabled": true,
                                                          "approval_status": "pending",
                                                          "content": {
                                                            "text": "You purchased product {#var#} worth Rs. {#var#} will reach to you {#var#}. You can track your order here: {#var#}\n- SuprSend",
                                                            "header": "SPRSND",
                                                            "example": [
                                                              "Winter Raincoat",
                                                              "INR 5",
                                                              "999",
                                                              "Bengaluru",
                                                              "https://www.google.com"
                                                            ],
                                                            "vendor_slug": "acl-sms",
                                                            "content_type": "1",
                                                            "message_type": "SERVICE_IMPLICIT",
                                                            "template_name": "purchase_made_en_v2",
                                                            "enterprise_name": "SPRSND",
                                                            "handlebars_text": "You purchased product {{event.product_name}} worth Rs. {{event.amount}} will reach to you {{event.location.city}}. You can track your order here: {{event.link}}\n- SuprSend",
                                                            "vendor_template_id": "1007017737717135821"
                                                          },
                                                          "created_at": "2023-01-25T04:53:39.367525Z",
                                                          "updated_at": "2023-01-25T04:53:39.367556Z",
                                                          "updated_by": {
                                                            "name": "Joe",
                                                            "email": "joe@example.com"
                                                          },
                                                          "approval_cycle": null,
                                                          "is_approval_needed": true,
                                                          "is_cloned_from_last_version": false
                                                        },

                                                        {
                                                          "id": 11891,
                                                          "language": {
                                                            "name": "French",
                                                            "slug": "fr"
                                                          },
                                                          "is_enabled": true,
                                                          "approval_status": "pending",
                                                          "content": {
                                                            "template_name": "grocery_purchased_hi"
                                                          },
                                                          "created_at": "2023-01-25T05:46:26.753095Z",
                                                          "updated_at": "2023-01-25T05:46:26.753121Z",
                                                          "updated_by": {
                                                            "name": "Joe",
                                                            "email": "joe@example.com"
                                                          },
                                                          "approval_cycle": null,
                                                          "is_approval_needed": true,
                                                          "is_cloned_from_last_version": false
                                                        }]
                                                    }
                                                  ],
                                                  "tags": []
                                                }
                                              ]
                    }
              schema:
                $ref: '#/components/schemas/TemplateGetDetailsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TemplateGetDetails400Response'
      deprecated: false
  /v1/template/{template_slug}/channel/{channel_slug}:
    get:
      tags:
        - Template
      summary: Fetch Template content for a channel
      operationId: Template_getContentChannel
      description: >-
        APIs to fetch the content of a particular channel in a template group.
        It will return data for live and draft version of a template.
      parameters:
        - description: >-
            Template group slug you want to fetch content details. You'll get
            the template slug by clicking on copy button next to template group
            name on SuprSend dashboard -> template details page.
          name: template_slug
          in: path
          schema:
            type: string
          required: true
        - description: >-
            add one of the template channels  - `email`, `sms`, `whatsapp`,
            `inbox`, `slack`, `androidpush`, `iospush`, `webpush`
          name: channel_slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": 3949,
                      "channel": {
                        "name": "In-App Inbox",
                        "slug": "inbox",
                        "is_template_approval_needed": false
                      },
                      "is_active": true,
                      "is_enabled": true,
                      "created_at": "2023-01-25T04:53:40.011112Z",
                      "updated_at": "2023-07-27T14:55:23.939438Z",
                      "disabled_languages": [],
                      "versions": [
                        {
                          "id": 10830,
                          "templates": [
                            {
                              "id": 11876,
                              "language": {
                                "name": "English",
                                "slug": "en"
                              },
                              "is_enabled": true,
                              "approval_status": "auto_approved",
                              "content": {
                                "url": "",
                                "text": "We will soon deliver {{event.product_name}} to {{event.location.city}} 😀",
                                "image": "",
                                "header": "Order Confirmed {{event.date}}",
                                "schema": "1.0",
                                "extra_data": "{\n\"city\": \"{{event.amount}}\"\n}"
                              },
                              "created_at": "2023-01-25T04:53:40.035836Z",
                              "updated_at": "2023-01-25T04:53:40.069659Z",
                              "updated_by": {
                                "name": "Joe",
                                "email": "joe@example.com"
                              },
                              "approval_cycle": null,
                              "is_approval_needed": false,
                              "is_cloned_from_last_version": false
                            }
                          ],
                          "status": "active",
                          "version_tag": "1",
                          "created_at": "2023-01-25T04:53:40.016463Z",
                          "updated_at": "2023-01-25T04:53:40.083969Z",
                          "updated_by": {
                            "name": "Steve",
                            "email": "steve@example.com"
                          },
                          "version_tag_user": "v1",
                          "published_languages": [
                            "en"
                          ],
                          "apparent_published_languages": [
                            "en"
                          ]
                        },
                        {
                          "id": 10831,
                          "templates": [
                            {
                              "id": 11877,
                              "language": {
                                "name": "English",
                                "slug": "en"
                              },
                              "is_enabled": true,
                              "approval_status": "auto_approved",
                              "content": {
                                "url": "",
                                "text": "We will soon deliver {{event.product_name}} to {{event.location.city}} 😀 {{$embedded_preference_url}}",
                                "image": "",
                                "header": "Order Confirmed {{event.date}}",
                                "schema": "1.0",
                                "extra_data": "{\n\"city\": \"{{event.amount}}\"\n}"
                              },
                              "created_at": "2023-01-25T04:53:40.112492Z",
                              "updated_at": "2023-07-27T14:55:23.933072Z",
                              "updated_by": {
                                "name": "Joe",
                                "email": "joe@example.com"
                              },
                              "approval_cycle": null,
                              "is_approval_needed": false,
                              "is_cloned_from_last_version": false
                            }
                          ],
                          "status": "draft",
                          "version_tag": "_",
                          "created_at": "2023-01-25T04:53:40.098853Z",
                          "updated_at": "2023-07-27T14:55:23.937661Z",
                          "updated_by": {
                            "name": "Steve",
                            "email": "steve@example.com"
                          },
                          "version_tag_user": null,
                          "published_languages": [],
                          "apparent_published_languages": []
                        }
                      ]
                    }
              schema:
                $ref: '#/components/schemas/TemplateGetContentChannelResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TemplateGetContentChannel400Response'
      deprecated: false
  /v1/brand/{brand_id}:
    post:
      tags:
        - Brand
      summary: Create / Update Brands
      operationId: Brand_createOrUpdate
      description: API to create a new Brand OR update an existing Brand
      parameters:
        - description: unique identifier of the brand that you want to create / update
          name: brand_id
          in: path
          schema:
            type: string
          required: true
        - name: Content - Type
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandCreateOrUpdateRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandCreateOrUpdateResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandCreateOrUpdate400Response'
      deprecated: false
    get:
      tags:
        - Brand
      summary: Get Brand data
      operationId: Brand_brandDataGet
      description: API to get brand settings corresponding to a brand id
      parameters:
        - description: unique identifier of the brand you want to get the details for
          name: brand_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandBrandDataGetResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandBrandDataGet400Response'
      deprecated: false
  /v1/subscriber/{distinct_id}/category/{category_slug}:
    post:
      tags:
        - Subscriber
      summary: Update User Preferences (Category level)
      operationId: Subscriber_updateUserPreferencesCategory
      description: API to update user category preferences
      parameters:
        - description: distinct_id of the user whose preferences should be fetched
          name: distinct_id
          in: path
          schema:
            type: string
          required: true
        - description: to fetch user preferences for a particular brand
          name: tenant_id
          in: query
          schema:
            type: string
        - description: >-
            notification category slug. You can get this from Notification
            Categories page on SuprSend dashboard -> Settings page
          name: category_slug
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SubscriberUpdateUserPreferencesCategoryRequest
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SubscriberUpdateUserPreferencesCategoryResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SubscriberUpdateUserPreferencesCategory400Response
      deprecated: false
  /v1/subscriber_list/{list_id}/subscriber/add:
    post:
      tags:
        - Subscriber
      summary: Add Subscribers to List
      operationId: Subscriber_addToList
      description: API to add users / subscribers to the list
      parameters:
        - description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          name: list_id
          in: path
          required: true
          schema:
            type: string
            default: _list_id_
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberAddToListRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberAddToListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberAddToList400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}/subscriber/remove:
    post:
      tags:
        - SubscriberList
      summary: Remove Subscribers from List
      operationId: SubscriberList_removeSubscribersFromList
      description: API to remove users / subscribers from the list
      parameters:
        - description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          name: list_id
          in: path
          required: true
          schema:
            type: string
            default: _list_id_
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SubscriberListRemoveSubscribersFromListRequest
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SubscriberListRemoveSubscribersFromListResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SubscriberListRemoveSubscribersFromList400Response
      deprecated: false
  /v1/subscriber_list/{list_id}/delete:
    patch:
      tags:
        - SubscriberList
      summary: Delete List
      operationId: SubscriberList_deleteList
      description: API to delete a list created in your workspace
      parameters:
        - description: Unique string idenitifier of the list which you want to delete
          name: list_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListDeleteListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListDeleteList400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/delete:
    patch:
      tags:
        - Subscriber
      summary: Delete Draft List
      operationId: Subscriber_deleteDraftList
      description: API to delete a list created in your workspace
      parameters:
        - description: Unique string idenitifier of the list which you want to delete
          name: list_id
          in: path
          schema:
            type: string
          required: true
        - description: >-
            Unique identifier of the draft version of the list which needs to be
            deleted
          name: version_id
          in: path
          schema:
            type: string
            default: __version_id__
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberDeleteDraftListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberDeleteDraftList400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}/start_sync:
    post:
      tags:
        - Sync
      summary: Start Sync
      operationId: Sync_listStartSync
      description: >-
        Starts sync on the active(live) version of the list, identified by
        list_id, and creates an empty draft version.
      parameters:
        - description: >-
            Unique identifier of the list on which the sync needs to start to
            create a draft version
          name: list_id
          in: path
          schema:
            type: string
            default: _list_id_
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SyncListStartSyncResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SyncListStartSync400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/subscriber/add:
    post:
      tags:
        - Subscriber
      summary: Add Subscribers to Draft List
      operationId: Subscriber_addToDraftList
      description: >-
        Add subscribers to a draft list with a version_id that uniquely
        identifies the draft list
      parameters:
        - description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          name: list_id
          in: path
          schema:
            type: string
            default: _list_id_
          required: true
        - description: >-
            Unique string idenitifier of the draft version of the list to which
            user needs to be updated
          name: version_id
          in: path
          schema:
            type: string
            default: __version_id__
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberAddToDraftListRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberAddToDraftListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberAddToDraftList400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/subscriber/remove:
    post:
      tags:
        - Subscriber
      summary: Remove Subscribers from Draft List
      operationId: Subscriber_removeFromDraftList
      description: >-
        Remove subscribers from a draft list with a version_id that uniquely
        identifies the draft list
      parameters:
        - description: >-
            Unique string idenitifier of the list to which user needs to be
            updated
          name: list_id
          in: path
          schema:
            type: string
            default: _list_id_
          required: true
        - description: >-
            Unique string idenitifier of the draft version of the list to which
            user needs to be updated
          name: version_id
          in: path
          schema:
            type: string
            default: __version_id__
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberRemoveFromDraftListRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberRemoveFromDraftListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberRemoveFromDraftList400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}/version/{version_id}/finish_sync:
    patch:
      tags:
        - Subscriber
      summary: Finish Sync
      operationId: Subscriber_finishSyncDraftVersion
      description: >-
        Finishes the sync for a draft version and makes that particular version
        live for the given list_id
      parameters:
        - description: Unique string idenitifier of the list
          name: list_id
          in: path
          schema:
            type: string
            default: _list_id_
          required: true
        - description: >-
            Unique string idenitifier of the draft version of the list which
            needs to be made active(live)
          name: version_id
          in: path
          schema:
            type: string
            default: __version_id__
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberFinishSyncDraftVersionResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SubscriberFinishSyncDraftVersion400Response
      deprecated: false
  /{workspace_key}/broadcast:
    post:
      tags:
        - Broadcast
      summary: Trigger Broadcast
      operationId: Broadcast_triggerMessageList
      description: API to trigger broadcast messages on a list of users
      parameters:
        - name: workspace_key
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastTriggerMessageListRequest'
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BroadcastTriggerMessageListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{_error_response_}'
              schema:
                $ref: '#/components/schemas/BroadcastTriggerMessageList400Response'
      deprecated: false
  /event:
    post:
      tags:
        - Event
      summary: Trigger an Event
      operationId: Event_triggerEvent
      description: >-
        API used to pass event which can then be used to trigger workflows
        created on SuprSend dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTriggerEventRequest'
            examples:
              SHIPMENT ARRIVAL:
                value:
                  distinct_id: 0fxxx8f74-xxxx-41c5-8752-xxxcb6911fb08
                  event: ON SHIPMENT ARRIVAL
                  properties:
                    amount: 3780$
                    number: TRXC1034
                    vehicle: Truck
                    locations: San Francisco
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/EventTriggerEventResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{_error_response_}'
              schema:
                $ref: '#/components/schemas/EventTriggerEvent400Response'
      deprecated: false
  /{workspace_key}/trigger:
    post:
      tags:
        - Workflow
      summary: Trigger Workflow
      operationId: Workflow_configureTrigger
      description: API to configure and trigger workflow dynamically
      parameters:
        - name: workspace_key
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowConfigureTriggerRequest'
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/WorkflowConfigureTriggerResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{_error_response_}'
              schema:
                $ref: '#/components/schemas/WorkflowConfigureTrigger400Response'
      deprecated: false
  /v1/brand:
    get:
      tags:
        - Brand
      summary: Get Brand list
      operationId: Brand_listGet
      description: API to get the list of brands available in your workspace
      parameters:
        - description: number of results to be returned in API response
          name: limit
          in: query
          schema:
            type: string
            default: '20'
        - description: starting position of brand list
          name: offset
          in: query
          schema:
            type: string
            default: '0'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandListGetResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandListGet400Response'
      deprecated: false
  /v1/subscriber/{distinct_id}/channel_preference:
    post:
      tags:
        - Preference
      summary: Update User Preferences (Channel level)
      operationId: Preference_updateChannelPreferences
      description: API to update user channel preferences
      parameters:
        - description: distinct_id of the user whose preferences should be fetched
          name: distinct_id
          in: path
          schema:
            type: string
          required: true
        - description: to fetch user preferences for a particular brand
          name: tenant_id
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceUpdateChannelPreferencesRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PreferenceUpdateChannelPreferencesResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PreferenceUpdateChannelPreferences400Response
      deprecated: false
    get:
      tags:
        - Preference
      summary: Get User Preferences (Channel level)
      operationId: Preference_getUserChannelPreferences
      description: API to get user channel preferences
      parameters:
        - description: distinct_id of the user whose preferences should be fetched
          name: distinct_id
          in: path
          schema:
            type: string
          required: true
        - description: to fetch user preferences for a particular brand
          name: tenant_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PreferenceGetUserChannelPreferencesResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PreferenceGetUserChannelPreferences400Response
      deprecated: false
  /v1/subscriber/{distinct_id}/category:
    get:
      tags:
        - PrefCategory
      summary: Get User Preferences (All Categories)
      operationId: PrefCategory_getUserPreferencesAllCategories
      description: API to get user category preferences
      parameters:
        - description: distinct_id of the user whose preferences should be fetched
          name: distinct_id
          in: path
          schema:
            type: string
          required: true
        - description: to fetch user preferences for a particular brand
          name: tenant_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PrefCategoryGetUserPreferencesAllCategoriesResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PrefCategoryGetUserPreferencesAllCategories400Response
      deprecated: false
  /v1/brand/{brand_id}/category/{category_slug}:
    post:
      tags:
        - Brand
      summary: Update Brand Default Preference
      operationId: Brand_updateDefaultPreference
      description: API to update user default preferences for a brand
      parameters:
        - description: >-
            unique identifier of the brand you want to update default
            preferences for
          name: brand_id
          in: path
          schema:
            type: string
          required: true
        - description: >-
            notification category slug. You can get this from Notification
            Categories page on SuprSend dashboard -> Settings page
          name: category_slug
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandUpdateDefaultPreferenceRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandUpdateDefaultPreferenceResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandUpdateDefaultPreference400Response'
      deprecated: false
  /v1/brand/{brand_id}/category:
    get:
      tags:
        - Brand
      summary: Get Brand Default Preference
      operationId: Brand_getCategories
      description: API to get Brand categories
      parameters:
        - description: >-
            unique identifier of the brand you want to get default preferences
            for
          name: brand_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandGetCategoriesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/BrandGetCategories400Response'
      deprecated: false
  /v1/subscriber_list:
    post:
      tags:
        - SubscriberList
      summary: Create a List
      operationId: SubscriberList_createList
      description: >-
        API to create / manage lists to send notification to a bulk list of
        users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriberListCreateListRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListCreateListResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListCreateList400Response'
      deprecated: false
    get:
      tags:
        - SubscriberList
      summary: Get all Lists
      operationId: SubscriberList_getAllLists
      description: API to get the data of all the lists created in your workspace
      parameters:
        - description: number of results to be returned in API response
          name: limit
          in: query
          schema:
            type: string
            default: '20'
        - description: starting position of brand list
          name: offset
          in: query
          schema:
            type: string
            default: '0'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListGetAllListsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListGetAllLists400Response'
      deprecated: false
  /v1/subscriber_list/{list_id}:
    get:
      tags:
        - SubscriberList
      summary: Get List data
      operationId: SubscriberList_getListData
      description: API to get information corresponding to a list id
      parameters:
        - description: Unique string idenitifier of the list.
          name: list_id
          in: path
          required: true
          schema:
            type: string
            default: _list_id_
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListGetListDataResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SubscriberListGetListData400Response'
      deprecated: false
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: Authorization
      x-bearer-format: bearer
  schemas:
    BrandCreateOrUpdateRequest:
      type: object
      required:
        - brand_name
      properties:
        brand_name:
          description: Name of the brand. You can add company / organization name here
          type: string
          default: Awesome Brand
        logo:
          description: URL of the brand logo
          type: string
          default: >-
            https://ik.imagekit.io/l0quatz6utm/suprsend/staging/media/suprsend-only-logo_c8aa27faef118418e8c5bd7b31a1cafc74e09200.png
        primary_color:
          description: >-
            Primary color of the brand - used for designing brand template. If
            you don't provide any of the colors for the brand, SuprSend will
            assume you want to use the default values, so color settings will
            automatically be set to the color settings of default brand.
          type: string
          default: '#ff0000'
        secondary_color:
          description: >-
            Secondary color of the brand - not used for designing the default
            templates. You can however add this property and use it in your
            templates
          type: string
          default: '#00ff00'
        tertiary_color:
          description: >-
            Tertiary color of the brand - not used for designing the default
            templates. You can however add this property and use it in your
            templates
          type: string
          default: '#0000ff'
        preference_page_url:
          description: Link of the hosted preference page inside the brand product
          type: string
        social_links:
          description: >-
            urls of social media accounts of the brand. If you really want to
            remove any social link, you must set its value="" (instead of null)
          type: object
          properties:
            website:
              description: >-
                link of brand website. While updating a social link, if you want
                to remove the link, you must the value="" (instead of null)
              type: string
              default: https://suprsend.com
            facebook:
              description: brand facebook page link
              type: string
            linkedin:
              description: brand linkedin page link
              type: string
            twitter:
              description: brand twitter page link
              type: string
            instagram:
              description: brand instagram page link
              type: string
            medium:
              description: brand medium page link
              type: string
            discord:
              description: brand discord page link
              type: string
            telegram:
              description: brand telegram page link
              type: string
            youtube:
              description: brand youtube page link
              type: string
        properties:
          description: >-
            Custom properties associated with the brand. Example value - `{"k1":
            "v1", "k2": 1.0}` <br> Update operation on properties works like
            upsert on 1st-level keys (i.e. if top-level key doesn't already
            exist, then it will be added, otherwise its value will be replaced
            by the new value. All other key-value pairs will remain unchanged).
          type: string
          format: json
    SubscriberUpdateUserPreferencesCategoryRequest:
      type: object
      properties:
        preference:
          description: >-
            choose one of the options: `opt_in` if the user has allowed
            notification in this category and `opt_out` if user wants to
            discontinue notification in this category
          type: string
          default: opt_in
        opt_out_channels:
          description: >-
            Add array of channels if user wants to unsubscribe from particular
            channels in this category. Add channels as `email`, `sms`,
            whatsapp`, `androidpush`, `inbox`, `iospush`, `slack`, `webpush`
          type: array
          items:
            type: string
    SubscriberAddToListRequest:
      type: object
      properties:
        distinct_ids:
          description: >-
            Array of subscriber_ids, uniquely identifying the subscribers to be
            added to the list.
          type: array
          default:
            - _distinct_id1_
          items:
            type: string
    SubscriberListRemoveSubscribersFromListRequest:
      type: object
      properties:
        distinct_ids:
          description: >-
            Array of subscriber_ids, uniquely identifying the subscribers to be
            removed from the list.
          type: array
          default:
            - _distinct_id1_
          items:
            type: string
    SubscriberAddToDraftListRequest:
      type: object
      properties:
        distinct_ids:
          description: >-
            Array of subscriber_ids, uniquely identifying the subscribers to be
            added to the list.
          type: array
          default:
            - '[]'
          items:
            type: string
    SubscriberRemoveFromDraftListRequest:
      type: object
      properties:
        distinct_ids:
          description: >-
            Array of subscriber_ids, uniquely identifying the subscribers to be
            removed from the list.
          type: array
          default:
            - '[]'
          items:
            type: string
    BroadcastTriggerMessageListRequest:
      type: object
      required:
        - list_id
        - template
        - notification_category
      properties:
        list_id:
          description: >-
            unique identifier to user list that you want to send broadcast
            messages to.
          type: string
          default: _list_id_
        template:
          description: >-
            Unique slug name of the template created on SuprSend dashboard. You
            can get this by clicking on the clipboard icon next to the Template
            name on SuprSend templates page.
          type: string
          default: _template_slug_
        notification_category:
          description: >-
            Category in which your notification belongs. You can understand more
            about them in the [Notification
            Category](https://docs.suprsend.com/docs/notification-category)
            documentation
          type: string
          default: transactional
        channels:
          description: >-
            If set, broadcast will be sent only on the channels defined here
            irrespective of communication channels present in user profile.
          type: array
          items:
            type: string
        data:
          description: Mock data to replace the template variables.
          type: string
          default: '{ "key": { "k1": "v1", "k2": "v2" } }'
          format: json
        delay:
          description: >-
            Broadcast will be halted for the time mentioned in delay, and become
            active once the delay period is over. Format - `XXdXXhXXmXXs` or if
            its number (n) then delay is in seconds (n)
          type: string
        trigger_at:
          description: >-
            Trigger broadcast on a specific date-time. Format - date string in
            ISO 8601 eg. "2022-08-27T20:14:51.643Z"
          type: string
          format: date
        brand_id:
          description: string identifier of the brand this broadcast is associated with
          type: string
    EventTriggerEventRequest:
      type: object
      required:
        - distinct_id
        - event
      properties:
        distinct_id:
          description: distinct_id of recipient who should receive the notification
          type: string
          default: _distinct_id_
        $user_operations:
          description: >-
            Creating & updating users on SuprSend is done by sending an
            `$user_operations` event. All changes can be combined in one API
            call in an easy to replay format
          type: array
          items:
            properties:
              $append:
                description: >-
                  Use this to add communication channels in user profile.
                  Following channel keys: `$email`, `$sms`, `$whatsapp`,
                  `$androidpush`, `$iospush`, `$slack`, `$webpush`, `$ms_teams`.
                  Add channel as {"$email":"user@example.com"}
                type: object
              $remove:
                description: >-
                  Use this to remove communication channels from user profile.
                  Following channel keys: `$email`, `$sms`, `$whatsapp`,
                  `$androidpush`, `$iospush`, `$slack`, `$webpush`, `$ms_teams`.
                  Define channel as {"$email":"user@example.com"}
                type: object
              $set:
                description: >-
                  Use this to set user properties like location, preferred
                  language etc. You can define properties in key-value pair as
                  `{"$preferred_language":"hi"}`
                type: object
              $unset:
                description: >-
                  Use this to remove properties from user profile. Define the
                  property keys to be removed as "$preferred_language"
                type: array
                default: []
                items:
                  type: string
            type: object
        event:
          description: string identifier for the event like `product_purchased`
          type: string
          default: _event_name_
        properties:
          description: >-
            a dictionary representing event attributes like `first_name`. Event
            properties can be used to pass template variables in case of event
            based trigger
          type: string
          default: '{}'
          format: json
        brand_id:
          description: string identifier of the brand this event is associated with
          type: string
        $idempotency_key:
          description: Idempotency key (valid for 24hours)
          type: string
    WorkflowConfigureTriggerRequest:
      type: object
      required:
        - name
        - template
        - notification_category
        - users
      properties:
        name:
          description: >-
            Unique name of the workflow. The workflow name should be easily
            identifiable for your reference at a later stage. You can see
            workflow-related analytics on the workflow page (how many
            notifications were sent, delivered, clicked or interacted).
          type: string
          default: _workflow_name_
        template:
          description: >-
            Unique slug name of the template created on SuprSend dashboard. You
            can get this by clicking on the clipboard icon next to the Template
            name on SuprSend templates page.
          type: string
          default: _template_slug_
        notification_category:
          description: >-
            Category in which your notification belongs. You can understand more
            about them in the 'Notification Category' documentation
          type: string
          default: transactional
        users:
          description: Array object of target users.
          type: array
          items:
            properties:
              distinct_id:
                description: unique identifier of the user
                type: string
                default: _distinct_id_
              $channels:
                description: >-
                  send notification on selected channels in user profile.
                  Following channel keys can be used: email, sms, whatsapp,
                  androidpush, iospush, slack, webpush
                type: array
                default: []
                items:
                  type: string
              $email:
                description: To trigger notification on a particular email
                type: array
                default: []
                items:
                  type: string
              $sms:
                description: Send SMS on a particular number.
                type: array
                default: []
                items:
                  type: string
              $whatsapp:
                description: Send Whatsapp on a particular number.
                type: array
                default: []
                items:
                  type: string
              $androidpush:
                description: Send androidpush on the given push token
                type: array
                items:
                  properties:
                    token:
                      description: Androidpush token
                      type: string
                      default: __android_push_token__
                    provider:
                      description: vendor delivering the push notification
                      type: string
                      default: fcm
                    device_id:
                      description: >-
                        unique identifier of user's device. This is used to
                        avoid sending duplicate push notification on the user's
                        device
                      type: string
                  required:
                    - token
                    - provider
                  type: object
              $iospush:
                description: Send iOSpush on the given push token
                type: array
                items:
                  properties:
                    token:
                      description: iOSpush token
                      type: string
                      default: __ios_push_token__
                    provider:
                      description: vendor delivering the push notification
                      type: string
                      default: apns
                    device_id:
                      description: >-
                        unique identifier of user's device. This is used to
                        avoid sending duplicate push notification on the same
                        device
                      type: string
                  required:
                    - token
                    - provider
                  type: object
              $slack:
                description: >-
                  Send Slack on a particular channel in user's profile. Use one
                  of the methods to add slack token - 1. slack using email:
                  {"email": "user@example.com", "access_token": "xoxb-XXXXXXXX"}
                  ------ 2. slack using member_id: {"user_id": "U/WXXXXXXXX",
                  "access_token": "xoxb-XXXXXXXX"} ------- 3. slack channel:
                  {"channel": "CXXXXXXXX", "access_token": "xoxb-XXXXXXXX"}
                  -------- 4. slack incoming webhook: {"incoming_webhook": {
                  "url":
                  "https://hooks.slack.com/services/TXXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXX"}}
                type: string
                format: json
            required:
              - distinct_id
            type: object
        data:
          description: Mock data to replace the template variables.
          type: string
          default: '{ "key": { "k1": "v1", "k2": "v2" } }'
          format: json
        delivery:
          description: >-
            delivery instructions for the workflow. You can set [Smart
            Delivery](https://docs.suprsend.com/docs/smart-delivery) preference
            by setting "smart":true
          type: object
          properties:
            smart:
              description: You can enable smart delivery by setting "smart":True
              type: boolean
              default: false
            success:
              description: >-
                Measure that defines the success of this notification. You can
                set notification status like delivery, interaction or custom
                success event
              type: string
              default: seen
            time_to_live:
              description: >-
                Time window for triggering notifications in case of smart
                delivery. notification on each channel will be sent with
                time-interval of [time_to_live / (number_of_channels - 1)]
                apart. Format - XXdXXhXXmXXs or if its number (n) then delay is
                in seconds (n)
              type: string
            mandatory_channels:
              description: >-
                Channels on which notification has to be sent immediately in
                case of smart delivery. Following channel keys can be used:
                email, sms, whatsapp, androidpush, iospush, slack, webpush
              type: array
              items:
                type: string
        delay:
          description: >-
            Workflow will be halted for the time mentioned in delay, and become
            active once the delay period is over. Format - `XXdXXhXXmXXs` or if
            its number (n) then delay is in seconds (n)
          type: string
        trigger_at:
          description: >-
            Trigger workflow on a specific date-time. Format - date string in
            ISO 8601 eg. "2022-08-27T20:14:51.643Z"
          type: string
          format: date
        brand_id:
          description: string identifier of the brand this workflow is associated with
          type: string
        $idempotency_key:
          description: Idempotency_key (valid for 24hrs)
          type: string
    PreferenceUpdateChannelPreferencesRequest:
      type: object
      properties:
        channel_preferences:
          description: >-
            Use this to update channel level user preferences. Set
            `is_restricted - true` if the channel is opted_out by the user. This
            will only send critical notifications to the user which can't be
            opted out
          type: array
          items:
            properties:
              channel:
                description: >-
                  Add channel as `email`, `inbox`, `sms`, `whatsapp`,
                  `androidpush`, `slack`, `iospush`, `webpush`
                type: string
                default: email
              is_restricted:
                description: >-
                  set `is_restricted = true` if user wants to receive
                  notification in mandatory categories on this channel.
                  Mandatory categories are `can't unsubscribe` categories and
                  the above channel is added as `mandatory channel` in that
                  category
                type: boolean
                default: false
            type: object
    BrandUpdateDefaultPreferenceRequest:
      type: object
      properties:
        preference:
          description: >-
            set `**opt_in**` to send notifications on all channels by default
            <br>  set `**opt_out**` to not send notifications in this category
            by default. For instance, **newsletter** <br>  set
            `**cant_unsubscribe**`if you do not want users to completely opt-out
            from this category. Notifications will always be sent on mandatory
            channels in this category.
          type: string
          default: opt_in
        visible_to_subscriber:
          description: set it `false` to hide a category from user's preference page
          type: boolean
        mandatory_channels:
          description: >-
            Add mandatory channels that the user can't unsubscribe from if
            preference is `cant_unsubscribe`. Add channels as `email`, `sms`,
            `whatsapp`, `androidpush`, `inbox`, `iospush`, `slack`, `webpush`
          type: array
          items:
            type: string
    SubscriberListCreateListRequest:
      type: object
      required:
        - list_id
      properties:
        list_id:
          description: >-
            Unique string idenitifier of the list. Add an id which defines the
            type of users who are part of the list
          type: string
          default: _list_id_
        list_name:
          description: >-
            Name of the List. Add a name which defines the type of users in the
            list
          type: string
          default: _list_name_
        list_description:
          type: string
          default: _some sample description_
    TemplateGetListResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            count:
              type: integer
              example: 1
              default: 0
            limit:
              type: integer
              example: 10
              default: 0
            offset:
              type: integer
              example: 0
              default: 0
        results:
          type: array
          items:
            type: object
            properties:
              tags:
                type: array
                items:
                  description: >-
                    WARNING: Missing items property in array schema. Missing
                    items property has been filled with this AnyType schema.
              description: {}
              id:
                type: integer
                example: 2445
                default: 0
              name:
                type: string
                example: Grocery Purchased
              slug:
                type: string
                example: grocery-purchased
              is_active:
                type: boolean
                example: true
                default: true
              default_language:
                type: object
                properties:
                  name:
                    type: string
                    example: English
                  slug:
                    type: string
                    example: en
              created_at:
                type: string
                example: '2023-01-25T04:53:39.237291Z'
              updated_at:
                type: string
                example: '2023-08-28T05:06:22.461443Z'
              updated_by:
                type: object
                properties:
                  name:
                    type: string
                    example: Joe
                  email:
                    type: string
                    example: joe@example.com
              last_triggered_at:
                type: string
                example: '2023-08-10T12:44:03.361158Z'
              is_auto_translate_enabled:
                type: boolean
                example: false
                default: true
              enabled_languages:
                type: array
                items:
                  type: string
                  example: en
              channels:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3944
                      default: 0
                    channel:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Email
                        slug:
                          type: string
                          example: email
                        is_template_approval_needed:
                          type: boolean
                          example: true
                          default: true
                    is_active:
                      type: boolean
                      example: true
                      default: true
                    is_enabled:
                      type: boolean
                      example: true
                      default: true
                    created_at:
                      type: string
                      example: '2023-01-25T04:53:39.268299Z'
                    updated_at:
                      type: string
                      example: '2023-01-25T04:53:39.404273Z'
                    disabled_languages:
                      type: array
                      items:
                        description: >-
                          WARNING: Missing items property in array schema.
                          Missing items property has been filled with this
                          AnyType schema.
                    versions:
                      type: array
                      items:
                        description: >-
                          WARNING: Missing items property in array schema.
                          Missing items property has been filled with this
                          AnyType schema.
    TemplateGetList400Response:
      type: object
      properties: {}
    TemplateGetDetailsResponse:
      type: object
      properties:
        description: {}
        id:
          type: integer
          example: 2445
          default: 0
        name:
          type: string
          example: Grocery Purchased
        slug:
          type: string
          example: grocery-purchased
        is_active:
          type: boolean
          example: true
          default: true
        default_language:
          type: object
          properties:
            name:
              type: string
              example: English
            slug:
              type: string
              example: en
        created_at:
          type: string
          example: '2023-01-25T04:53:39.237291Z'
        updated_at:
          type: string
          example: '2023-08-28T05:06:22.461443Z'
        updated_by:
          type: object
          properties:
            name:
              type: string
              example: Joe
            email:
              type: string
              example: joe@example.com
        last_triggered_at:
          type: string
          example: '2023-08-10T12:44:03.361158Z'
        is_auto_translate_enabled:
          type: boolean
          example: false
          default: true
        enabled_languages:
          type: array
          items:
            type: string
            example: en
        channels:
          type: array
          items:
            type: object
            properties:
              tags:
                type: array
                items:
                  description: >-
                    WARNING: Missing items property in array schema. Missing
                    items property has been filled with this AnyType schema.
              id:
                type: integer
                example: 3944
                default: 0
              channel:
                type: object
                properties:
                  name:
                    type: string
                    example: SMS
                  slug:
                    type: string
                    example: sms
                  is_template_approval_needed:
                    type: boolean
                    example: true
                    default: true
              is_active:
                type: boolean
                example: true
                default: true
              is_enabled:
                type: boolean
                example: true
                default: true
              created_at:
                type: string
                example: '2023-01-25T04:53:39.268299Z'
              updated_at:
                type: string
                example: '2023-01-25T04:53:39.404273Z'
              disabled_languages:
                type: array
                items:
                  description: >-
                    WARNING: Missing items property in array schema. Missing
                    items property has been filled with this AnyType schema.
              versions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 10820
                      default: 0
                    templates:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 11866
                            default: 0
                          language:
                            type: object
                            properties:
                              name:
                                type: string
                                example: English
                              slug:
                                type: string
                                example: en
                          is_enabled:
                            type: boolean
                            example: true
                            default: true
                          approval_status:
                            type: string
                            example: approved
                          content:
                            type: object
                            properties:
                              text:
                                type: string
                                example: >-
                                  You purchased product {#var#} worth Rs.
                                  {#var#} will reach to you {#var#}. You can
                                  track your order here: {#var#}

                                  - SuprSend
                              header:
                                type: string
                                example: SPRSND
                              example:
                                type: array
                                items:
                                  type: string
                                  example: Winter Raincoat
                              vendor_slug:
                                type: string
                                example: acl-sms
                              content_type:
                                type: string
                                example: '1'
                              message_type:
                                type: string
                                example: SERVICE_IMPLICIT
                              template_name:
                                type: string
                                example: purchase_made_en_v2
                              enterprise_name:
                                type: string
                                example: SPRSND
                              handlebars_text:
                                type: string
                                example: >-
                                  You purchased product {{event.product_name}}
                                  worth Rs. {{event.amount}} will reach to you
                                  {{event.location.city}}. You can track your
                                  order here: {{event.link}}

                                  - SuprSend
                              vendor_template_id:
                                type: string
                                example: 1007xxxxxxxxxx
                          created_at:
                            type: string
                            example: '2023-01-25T04:53:39.295289Z'
                          updated_at:
                            type: string
                            example: '2023-01-25T04:53:39.328651Z'
                          updated_by:
                            type: object
                            properties:
                              name:
                                type: string
                                example: Steve
                              email:
                                type: string
                                example: steve@example.com
                          approval_cycle:
                            type: object
                            properties:
                              status:
                                type: string
                                example: approved
                              comment: {}
                              request_received_at:
                                type: string
                                example: 2022-03-31T10:35:51+0000
                              sent_for_approval_at: {}
                              approval_status_received_at:
                                type: string
                                example: 2022-03-31T10:43:44+0000
                          is_approval_needed:
                            type: boolean
                            example: true
                            default: true
                          is_cloned_from_last_version:
                            type: boolean
                            example: false
                            default: true
                    status:
                      type: string
                      example: active
                    version_tag:
                      type: string
                      example: '1'
                    created_at:
                      type: string
                      example: '2023-01-25T04:53:39.276782Z'
                    updated_at:
                      type: string
                      example: '2023-01-25T04:53:39.342850Z'
                    updated_by:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Joe
                        email:
                          type: string
                          example: joe@example.com
                    version_tag_user:
                      type: string
                      example: v1
                    published_languages:
                      type: array
                      items:
                        type: string
                        example: en
                    apparent_published_languages:
                      type: array
                      items:
                        type: string
                        example: en
    TemplateGetDetails400Response:
      type: object
      properties: {}
    TemplateGetContentChannelResponse:
      type: object
      properties:
        id:
          type: integer
          example: 3949
          default: 0
        channel:
          type: object
          properties:
            name:
              type: string
              example: In-App Inbox
            slug:
              type: string
              example: inbox
            is_template_approval_needed:
              type: boolean
              example: false
              default: true
        is_active:
          type: boolean
          example: true
          default: true
        is_enabled:
          type: boolean
          example: true
          default: true
        created_at:
          type: string
          example: '2023-01-25T04:53:40.011112Z'
        updated_at:
          type: string
          example: '2023-07-27T14:55:23.939438Z'
        disabled_languages:
          type: array
          items:
            description: >-
              WARNING: Missing items property in array schema. Missing items
              property has been filled with this AnyType schema.
        versions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 10830
                default: 0
              templates:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 11876
                      default: 0
                    language:
                      type: object
                      properties:
                        name:
                          type: string
                          example: English
                        slug:
                          type: string
                          example: en
                    is_enabled:
                      type: boolean
                      example: true
                      default: true
                    approval_status:
                      type: string
                      example: auto_approved
                    content:
                      type: object
                      properties:
                        url:
                          type: string
                          example: ''
                        text:
                          type: string
                          example: >-
                            We will soon deliver {{event.product_name}} to
                            {{event.location.city}} 😀
                        image:
                          type: string
                          example: ''
                        header:
                          type: string
                          example: Order Confirmed {{event.date}}
                        schema:
                          type: string
                          example: '1.0'
                        extra_data:
                          type: string
                          example: |-
                            {
                            "city": "{{event.amount}}"
                            }
                    created_at:
                      type: string
                      example: '2023-01-25T04:53:40.035836Z'
                    updated_at:
                      type: string
                      example: '2023-01-25T04:53:40.069659Z'
                    updated_by:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Joe
                        email:
                          type: string
                          example: joe@example.com
                    approval_cycle: {}
                    is_approval_needed:
                      type: boolean
                      example: false
                      default: true
                    is_cloned_from_last_version:
                      type: boolean
                      example: false
                      default: true
              status:
                type: string
                example: active
              version_tag:
                type: string
                example: '1'
              created_at:
                type: string
                example: '2023-01-25T04:53:40.016463Z'
              updated_at:
                type: string
                example: '2023-01-25T04:53:40.083969Z'
              updated_by:
                type: object
                properties:
                  name:
                    type: string
                    example: Steve
                  email:
                    type: string
                    example: steve@example.com
              version_tag_user:
                type: string
                example: v1
              published_languages:
                type: array
                items:
                  type: string
                  example: en
              apparent_published_languages:
                type: array
                items:
                  type: string
                  example: en
    TemplateGetContentChannel400Response:
      type: object
      properties: {}
    BrandBrandDataGetResponse:
      type: object
      properties: {}
    BrandBrandDataGet400Response:
      type: object
      properties: {}
    BrandCreateOrUpdateResponse:
      type: object
      properties: {}
    BrandCreateOrUpdate400Response:
      type: object
      properties: {}
    SubscriberUpdateUserPreferencesCategoryResponse:
      type: object
      properties: {}
    SubscriberUpdateUserPreferencesCategory400Response:
      type: object
      properties: {}
    SubscriberAddToListResponse:
      type: object
      properties: {}
    SubscriberAddToList400Response:
      type: object
      properties: {}
    SubscriberListRemoveSubscribersFromListResponse:
      type: object
      properties: {}
    SubscriberListRemoveSubscribersFromList400Response:
      type: object
      properties: {}
    SubscriberListDeleteListResponse:
      type: object
      properties: {}
    SubscriberListDeleteList400Response:
      type: object
      properties: {}
    SubscriberDeleteDraftListResponse:
      type: object
      properties: {}
    SubscriberDeleteDraftList400Response:
      type: object
      properties: {}
    SyncListStartSyncResponse:
      type: object
      properties: {}
    SyncListStartSync400Response:
      type: object
      properties: {}
    SubscriberAddToDraftListResponse:
      type: object
      properties: {}
    SubscriberAddToDraftList400Response:
      type: object
      properties: {}
    SubscriberRemoveFromDraftListResponse:
      type: object
      properties: {}
    SubscriberRemoveFromDraftList400Response:
      type: object
      properties: {}
    SubscriberFinishSyncDraftVersionResponse:
      type: object
      properties: {}
    SubscriberFinishSyncDraftVersion400Response:
      type: object
      properties: {}
    BroadcastTriggerMessageListResponse:
      type: object
      properties: {}
    BroadcastTriggerMessageList400Response:
      type: string
      example: '{_error_response_}'
    EventTriggerEventResponse:
      type: object
      properties: {}
    EventTriggerEvent400Response:
      type: string
      example: '{_error_response_}'
    WorkflowConfigureTriggerResponse:
      type: object
      properties: {}
    WorkflowConfigureTrigger400Response:
      type: string
      example: '{_error_response_}'
    BrandListGetResponse:
      type: object
      properties: {}
    BrandListGet400Response:
      type: object
      properties: {}
    PreferenceGetUserChannelPreferencesResponse:
      type: object
      properties: {}
    PreferenceGetUserChannelPreferences400Response:
      type: object
      properties: {}
    PreferenceUpdateChannelPreferencesResponse:
      type: object
      properties: {}
    PreferenceUpdateChannelPreferences400Response:
      type: object
      properties: {}
    PrefCategoryGetUserPreferencesAllCategoriesResponse:
      type: object
      properties: {}
    PrefCategoryGetUserPreferencesAllCategories400Response:
      type: object
      properties: {}
    BrandUpdateDefaultPreferenceResponse:
      type: object
      properties: {}
    BrandUpdateDefaultPreference400Response:
      type: object
      properties: {}
    BrandGetCategoriesResponse:
      type: object
      properties: {}
    BrandGetCategories400Response:
      type: object
      properties: {}
    SubscriberListGetAllListsResponse:
      type: object
      properties: {}
    SubscriberListGetAllLists400Response:
      type: object
      properties: {}
    SubscriberListCreateListResponse:
      type: object
      properties: {}
    SubscriberListCreateList400Response:
      type: object
      properties: {}
    SubscriberListGetListDataResponse:
      type: object
      properties: {}
    SubscriberListGetListData400Response:
      type: object
      properties: {}
security:
  - sec0: []
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
x-readme-fauxas: true
_id: 644140ed7e106b0043d25b05:64425f1bcd0fe0000bf0d7c7
